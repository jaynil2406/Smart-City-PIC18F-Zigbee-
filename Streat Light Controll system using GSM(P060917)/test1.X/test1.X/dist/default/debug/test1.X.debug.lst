

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 02 18:07:01 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           ; Version 1.45
   101                           ; Generated 16/11/2017 GMT
   102                           ; 
   103                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K22 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     
   135 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   136  0000                     
   137                           	psect	idataBANK0
   138  01277E                     __pidataBANK0:
   139                           	opt stack 0
   140                           
   141                           ;initializer for _msg
   142  01277E  48                 	db	72
   143  01277F  65                 	db	101
   144  012780  6C                 	db	108
   145  012781  6C                 	db	108
   146  012782  6F                 	db	111
   147  012783  0D                 	db	13
   148                           
   149                           ;initializer for _Call_Cut
   150  012784  41                 	db	65
   151  012785  54                 	db	84
   152  012786  48                 	db	72
   153  012787  0D                 	db	13
   154                           
   155                           ;initializer for _PAN_ID_1
   156  012788  03                 	db	3
   157  012789  03                 	db	3
   158                           
   159                           ;initializer for _ADDRESS_short_1
   160  01278A  01                 	db	1
   161  01278B  01                 	db	1
   162                           
   163                           ;initializer for _address_RX_FIFO
   164  01278C  0300               	dw	768
   165                           
   166                           ;initializer for _SEQ_NUMBER
   167  01278E  23                 	db	35
   168                           
   169                           ;initializer for _SMS_format
   170  01278F  41                 	db	65
   171  012790  54                 	db	84
   172  012791  2B                 	db	43
   173  012792  43                 	db	67
   174  012793  4D                 	db	77
   175  012794  47                 	db	71
   176  012795  46                 	db	70
   177  012796  3D                 	db	61
   178  012797  31                 	db	49
   179  012798  0D                 	db	13
   180                           
   181                           ;initializer for _ADDRESS_long_2
   182  012799  02                 	db	2
   183  01279A  02                 	db	2
   184  01279B  02                 	db	2
   185  01279C  02                 	db	2
   186  01279D  02                 	db	2
   187  01279E  02                 	db	2
   188  01279F  02                 	db	2
   189  0127A0  02                 	db	2
   190                           
   191                           ;initializer for _Call
   192  0127A1  41                 	db	65
   193  0127A2  54                 	db	84
   194  0127A3  43                 	db	67
   195  0127A4  4C                 	db	76
   196  0127A5  43                 	db	67
   197  0127A6  0D                 	db	13
   198                           
   199                           ;initializer for _send
   200  0127A7  1A                 	db	26
   201  0127A8  0D                 	db	13
   202                           
   203                           ;initializer for _PAN_ID_2
   204  0127A9  03                 	db	3
   205  0127AA  03                 	db	3
   206                           
   207                           ;initializer for _ADDRESS_short_2
   208  0127AB  02                 	db	2
   209  0127AC  02                 	db	2
   210                           
   211                           	psect	idataBANK1
   212  01194C                     __pidataBANK1:
   213                           	opt stack 0
   214                           
   215                           ;initializer for _ADDRESS_long_1
   216  01194C  01                 	db	1
   217  01194D  01                 	db	1
   218  01194E  01                 	db	1
   219  01194F  01                 	db	1
   220  011950  01                 	db	1
   221  011951  01                 	db	1
   222  011952  01                 	db	1
   223  011953  01                 	db	1
   224                           
   225                           ;initializer for _LED_PATTERN
   226  011954  30                 	db	48
   227  011955  2C                 	db	44
   228  011956  30                 	db	48
   229  011957  2C                 	db	44
   230  011958  30                 	db	48
   231  011959  2C                 	db	44
   232  01195A  30                 	db	48
   233                           
   234                           ;initializer for _Message5
   235  01195B  49                 	db	73
   236  01195C  44                 	db	68
   237  01195D  20                 	db	32
   238  01195E  20                 	db	32
   239  01195F  20                 	db	32
   240  011960  20                 	db	32
   241  011961  20                 	db	32
   242  011962  20                 	db	32
   243  011963  4C                 	db	76
   244  011964  69                 	db	105
   245  011965  67                 	db	103
   246  011966  68                 	db	104
   247  011967  74                 	db	116
   248  011968  20                 	db	32
   249  011969  2D                 	db	45
   250  01196A  2D                 	db	45
   251  01196B  3E                 	db	62
   252  01196C  3E                 	db	62
   253  01196D  20                 	db	32
   254  01196E  4F                 	db	79
   255  01196F  46                 	db	70
   256  011970  46                 	db	70
   257  011971  2E                 	db	46
   258  011972  20                 	db	32
   259                           
   260                           ;initializer for _Emeregency3
   261  011973  49                 	db	73
   262  011974  44                 	db	68
   263  011975  20                 	db	32
   264  011976  00                 	db	0
   265  011977  00                 	db	0
   266  011978  00                 	db	0
   267  011979  20                 	db	32
   268  01197A  69                 	db	105
   269  01197B  73                 	db	115
   270  01197C  20                 	db	32
   271  01197D  69                 	db	105
   272  01197E  6E                 	db	110
   273  01197F  20                 	db	32
   274  011980  45                 	db	69
   275  011981  6D                 	db	109
   276  011982  65                 	db	101
   277  011983  72                 	db	114
   278  011984  67                 	db	103
   279  011985  65                 	db	101
   280  011986  6E                 	db	110
   281  011987  63                 	db	99
   282  011988  79                 	db	121
   283  011989  0D                 	db	13
   284                           
   285                           ;initializer for _Message4
   286  01198A  49                 	db	73
   287  01198B  44                 	db	68
   288  01198C  20                 	db	32
   289  01198D  20                 	db	32
   290  01198E  20                 	db	32
   291  01198F  20                 	db	32
   292  011990  20                 	db	32
   293  011991  20                 	db	32
   294  011992  4C                 	db	76
   295  011993  69                 	db	105
   296  011994  67                 	db	103
   297  011995  68                 	db	104
   298  011996  74                 	db	116
   299  011997  20                 	db	32
   300  011998  2D                 	db	45
   301  011999  2D                 	db	45
   302  01199A  3E                 	db	62
   303  01199B  3E                 	db	62
   304  01199C  20                 	db	32
   305  01199D  4F                 	db	79
   306  01199E  4E                 	db	78
   307  01199F  00                 	db	0
   308                           
   309                           ;initializer for _Emeregency2
   310  0119A0  49                 	db	73
   311  0119A1  44                 	db	68
   312  0119A2  20                 	db	32
   313  0119A3  00                 	db	0
   314  0119A4  00                 	db	0
   315  0119A5  20                 	db	32
   316  0119A6  69                 	db	105
   317  0119A7  73                 	db	115
   318  0119A8  20                 	db	32
   319  0119A9  69                 	db	105
   320  0119AA  6E                 	db	110
   321  0119AB  20                 	db	32
   322  0119AC  45                 	db	69
   323  0119AD  6D                 	db	109
   324  0119AE  65                 	db	101
   325  0119AF  72                 	db	114
   326  0119B0  67                 	db	103
   327  0119B1  65                 	db	101
   328  0119B2  6E                 	db	110
   329  0119B3  63                 	db	99
   330  0119B4  79                 	db	121
   331  0119B5  0D                 	db	13
   332                           
   333                           ;initializer for _Emeregency
   334  0119B6  49                 	db	73
   335  0119B7  44                 	db	68
   336  0119B8  20                 	db	32
   337  0119B9  00                 	db	0
   338  0119BA  20                 	db	32
   339  0119BB  69                 	db	105
   340  0119BC  73                 	db	115
   341  0119BD  20                 	db	32
   342  0119BE  69                 	db	105
   343  0119BF  6E                 	db	110
   344  0119C0  20                 	db	32
   345  0119C1  45                 	db	69
   346  0119C2  6D                 	db	109
   347  0119C3  65                 	db	101
   348  0119C4  72                 	db	114
   349  0119C5  67                 	db	103
   350  0119C6  65                 	db	101
   351  0119C7  6E                 	db	110
   352  0119C8  63                 	db	99
   353  0119C9  79                 	db	121
   354  0119CA  0D                 	db	13
   355                           
   356                           ;initializer for _SEND_SMS
   357  0119CB  41                 	db	65
   358  0119CC  54                 	db	84
   359  0119CD  2B                 	db	43
   360  0119CE  43                 	db	67
   361  0119CF  4D                 	db	77
   362  0119D0  47                 	db	71
   363  0119D1  53                 	db	83
   364  0119D2  3D                 	db	61
   365  0119D3  22                 	db	34
   366  0119D4  39                 	db	57
   367  0119D5  34                 	db	52
   368  0119D6  32                 	db	50
   369  0119D7  37                 	db	55
   370  0119D8  38                 	db	56
   371  0119D9  35                 	db	53
   372  0119DA  32                 	db	50
   373  0119DB  30                 	db	48
   374  0119DC  32                 	db	50
   375  0119DD  35                 	db	53
   376  0119DE  22                 	db	34
   377  0119DF  0D                 	db	13
   378                           
   379                           ;initializer for _Array
   380  0119E0  30                 	db	48
   381  0119E1  78                 	db	120
   382  0119E2  30                 	db	48
   383  0119E3  30                 	db	48
   384  0119E4  2C                 	db	44
   385  0119E5  30                 	db	48
   386  0119E6  78                 	db	120
   387  0119E7  30                 	db	48
   388  0119E8  30                 	db	48
   389  0119E9  2C                 	db	44
   390  0119EA  30                 	db	48
   391  0119EB  78                 	db	120
   392  0119EC  30                 	db	48
   393  0119ED  30                 	db	48
   394  0119EE  2C                 	db	44
   395  0119EF  30                 	db	48
   396  0119F0  78                 	db	120
   397  0119F1  30                 	db	48
   398  0119F2  30                 	db	48
   399                           
   400                           ;initializer for _Number
   401  0119F3  41                 	db	65
   402  0119F4  54                 	db	84
   403  0119F5  44                 	db	68
   404  0119F6  39                 	db	57
   405  0119F7  34                 	db	52
   406  0119F8  32                 	db	50
   407  0119F9  37                 	db	55
   408  0119FA  38                 	db	56
   409  0119FB  35                 	db	53
   410  0119FC  32                 	db	50
   411  0119FD  30                 	db	48
   412  0119FE  32                 	db	50
   413  0119FF  35                 	db	53
   414  011A00  3B                 	db	59
   415  011A01  0D                 	db	13
   416                           
   417                           	psect	mediumconst
   418  00FD00                     __pmediumconst:
   419                           	opt stack 0
   420  00FD00  00                 	db	0
   421  00FD01                     _Message2:
   422                           	opt stack 0
   423  00FD01  4C                 	db	76
   424  00FD02  69                 	db	105
   425  00FD03  67                 	db	103
   426  00FD04  68                 	db	104
   427  00FD05  74                 	db	116
   428  00FD06  20                 	db	32
   429  00FD07  69                 	db	105
   430  00FD08  73                 	db	115
   431  00FD09  20                 	db	32
   432  00FD0A  4F                 	db	79
   433  00FD0B  46                 	db	70
   434  00FD0C  46                 	db	70
   435  00FD0D  2E                 	db	46
   436  00FD0E                     __end_of_Message2:
   437                           	opt stack 0
   438  00FD0E                     _LIGHT_CARD_STATUS:
   439                           	opt stack 0
   440  00FD0E  24                 	db	36
   441  00FD0F  20                 	db	32
   442  00FD10  4D                 	db	77
   443  00FD11  53                 	db	83
   444  00FD12  47                 	db	71
   445  00FD13  35                 	db	53
   446  00FD14  20                 	db	32
   447  00FD15  50                 	db	80
   448  00FD16  41                 	db	65
   449  00FD17  52                 	db	82
   450  00FD18  20                 	db	32
   451  00FD19  53                 	db	83
   452  00FD1A  54                 	db	84
   453  00FD1B                     __end_of_LIGHT_CARD_STATUS:
   454                           	opt stack 0
   455  00FD1B                     _LIGHT_ALTERNATE:
   456                           	opt stack 0
   457  00FD1B  24                 	db	36
   458  00FD1C  20                 	db	32
   459  00FD1D  4D                 	db	77
   460  00FD1E  53                 	db	83
   461  00FD1F  47                 	db	71
   462  00FD20  33                 	db	51
   463  00FD21  20                 	db	32
   464  00FD22  41                 	db	65
   465  00FD23  4C                 	db	76
   466  00FD24  54                 	db	84
   467  00FD25  45                 	db	69
   468  00FD26  52                 	db	82
   469  00FD27  4E                 	db	78
   470  00FD28                     __end_of_LIGHT_ALTERNATE:
   471                           	opt stack 0
   472  00FD28                     _LIGHT_ALL_OFF:
   473                           	opt stack 0
   474  00FD28  24                 	db	36
   475  00FD29  20                 	db	32
   476  00FD2A  4D                 	db	77
   477  00FD2B  53                 	db	83
   478  00FD2C  47                 	db	71
   479  00FD2D  32                 	db	50
   480  00FD2E  20                 	db	32
   481  00FD2F  41                 	db	65
   482  00FD30  4C                 	db	76
   483  00FD31  4C                 	db	76
   484  00FD32  20                 	db	32
   485  00FD33  4F                 	db	79
   486  00FD34  46                 	db	70
   487  00FD35                     __end_of_LIGHT_ALL_OFF:
   488                           	opt stack 0
   489  00FD35                     _LIGHT_ALL_ON:
   490                           	opt stack 0
   491  00FD35  24                 	db	36
   492  00FD36  20                 	db	32
   493  00FD37  4D                 	db	77
   494  00FD38  53                 	db	83
   495  00FD39  47                 	db	71
   496  00FD3A  31                 	db	49
   497  00FD3B  20                 	db	32
   498  00FD3C  41                 	db	65
   499  00FD3D  4C                 	db	76
   500  00FD3E  4C                 	db	76
   501  00FD3F  20                 	db	32
   502  00FD40  4F                 	db	79
   503  00FD41  4E                 	db	78
   504  00FD42                     __end_of_LIGHT_ALL_ON:
   505                           	opt stack 0
   506  00FD42                     _Message1:
   507                           	opt stack 0
   508  00FD42  4C                 	db	76
   509  00FD43  69                 	db	105
   510  00FD44  67                 	db	103
   511  00FD45  68                 	db	104
   512  00FD46  74                 	db	116
   513  00FD47  20                 	db	32
   514  00FD48  69                 	db	105
   515  00FD49  73                 	db	115
   516  00FD4A  20                 	db	32
   517  00FD4B  4F                 	db	79
   518  00FD4C  4E                 	db	78
   519  00FD4D                     __end_of_Message1:
   520                           	opt stack 0
   521  00FD4D                     _SMSread:
   522                           	opt stack 0
   523  00FD4D  41                 	db	65
   524  00FD4E  54                 	db	84
   525  00FD4F  2B                 	db	43
   526  00FD50  43                 	db	67
   527  00FD51  4D                 	db	77
   528  00FD52  47                 	db	71
   529  00FD53  52                 	db	82
   530  00FD54  3D                 	db	61
   531  00FD55  31                 	db	49
   532  00FD56  0D                 	db	13
   533  00FD57                     __end_of_SMSread:
   534                           	opt stack 0
   535  00FD57                     _Enable_Result_Code:
   536                           	opt stack 0
   537  00FD57  41                 	db	65
   538  00FD58  54                 	db	84
   539  00FD59  2B                 	db	43
   540  00FD5A  43                 	db	67
   541  00FD5B  4D                 	db	77
   542  00FD5C  45                 	db	69
   543  00FD5D  45                 	db	69
   544  00FD5E  3D                 	db	61
   545  00FD5F  32                 	db	50
   546  00FD60  0D                 	db	13
   547  00FD61                     __end_of_Enable_Result_Code:
   548                           	opt stack 0
   549  00FD61                     _LIGHT_DEBBUGE_STATUS:
   550                           	opt stack 0
   551  00FD61  24                 	db	36
   552  00FD62  20                 	db	32
   553  00FD63  4D                 	db	77
   554  00FD64  53                 	db	83
   555  00FD65  47                 	db	71
   556  00FD66  34                 	db	52
   557  00FD67  20                 	db	32
   558  00FD68  4C                 	db	76
   559  00FD69  44                 	db	68
   560  00FD6A                     __end_of_LIGHT_DEBBUGE_STATUS:
   561                           	opt stack 0
   562  00FD6A                     _Sim_Status:
   563                           	opt stack 0
   564  00FD6A  41                 	db	65
   565  00FD6B  54                 	db	84
   566  00FD6C  2B                 	db	43
   567  00FD6D  43                 	db	67
   568  00FD6E  50                 	db	80
   569  00FD6F  49                 	db	73
   570  00FD70  4E                 	db	78
   571  00FD71  3F                 	db	63
   572  00FD72  0D                 	db	13
   573  00FD73                     __end_of_Sim_Status:
   574                           	opt stack 0
   575  00FD73                     _Get_Baud:
   576                           	opt stack 0
   577  00FD73  41                 	db	65
   578  00FD74  54                 	db	84
   579  00FD75  2B                 	db	43
   580  00FD76  49                 	db	73
   581  00FD77  50                 	db	80
   582  00FD78  52                 	db	82
   583  00FD79  3F                 	db	63
   584  00FD7A  0D                 	db	13
   585  00FD7B                     __end_of_Get_Baud:
   586                           	opt stack 0
   587  00FD7B                     _IMEI:
   588                           	opt stack 0
   589  00FD7B  41                 	db	65
   590  00FD7C  54                 	db	84
   591  00FD7D  2B                 	db	43
   592  00FD7E  47                 	db	71
   593  00FD7F  53                 	db	83
   594  00FD80  4E                 	db	78
   595  00FD81  0D                 	db	13
   596  00FD82                     __end_of_IMEI:
   597                           	opt stack 0
   598  00FD82                     _echo_off:
   599                           	opt stack 0
   600  00FD82  41                 	db	65
   601  00FD83  54                 	db	84
   602  00FD84  45                 	db	69
   603  00FD85  30                 	db	48
   604  00FD86  0D                 	db	13
   605  00FD87  00                 	db	0
   606  00FD88                     __end_of_echo_off:
   607                           	opt stack 0
   608  00FD88                     _Set_Responce:
   609                           	opt stack 0
   610  00FD88  41                 	db	65
   611  00FD89  54                 	db	84
   612  00FD8A  56                 	db	86
   613  00FD8B  31                 	db	49
   614  00FD8C  0D                 	db	13
   615  00FD8D                     __end_of_Set_Responce:
   616                           	opt stack 0
   617  00FD8D                     _Manufacturer_Id:
   618                           	opt stack 0
   619  00FD8D  41                 	db	65
   620  00FD8E  54                 	db	84
   621  00FD8F  49                 	db	73
   622  00FD90  0D                 	db	13
   623  00FD91                     __end_of_Manufacturer_Id:
   624                           	opt stack 0
   625  00FD91                     _HEADER_LENGHT:
   626                           	opt stack 0
   627  00FD91  0B                 	db	11
   628  00FD92                     __end_of_HEADER_LENGHT:
   629                           	opt stack 0
   630  00FD92                     _DATA_LENGHT:
   631                           	opt stack 0
   632  00FD92  05                 	db	5
   633  00FD93                     __end_of_DATA_LENGHT:
   634                           	opt stack 0
   635  00FD93                     _Message6:
   636                           	opt stack 0
   637  00FD93  20                 	db	32
   638  00FD94  20                 	db	32
   639  00FD95  20                 	db	32
   640  00FD96  2D                 	db	45
   641  00FD97  2D                 	db	45
   642  00FD98  2D                 	db	45
   643  00FD99  3E                 	db	62
   644  00FD9A  4C                 	db	76
   645  00FD9B  45                 	db	69
   646  00FD9C  44                 	db	68
   647  00FD9D  20                 	db	32
   648  00FD9E  44                 	db	68
   649  00FD9F  69                 	db	105
   650  00FDA0  73                 	db	115
   651  00FDA1  70                 	db	112
   652  00FDA2  6C                 	db	108
   653  00FDA3  61                 	db	97
   654  00FDA4  79                 	db	121
   655  00FDA5  20                 	db	32
   656  00FDA6  42                 	db	66
   657  00FDA7  6F                 	db	111
   658  00FDA8  61                 	db	97
   659  00FDA9  72                 	db	114
   660  00FDAA  64                 	db	100
   661  00FDAB  20                 	db	32
   662  00FDAC  44                 	db	68
   663  00FDAD  61                 	db	97
   664  00FDAE  74                 	db	116
   665  00FDAF  61                 	db	97
   666  00FDB0  3C                 	db	60
   667  00FDB1  2D                 	db	45
   668  00FDB2  2D                 	db	45
   669  00FDB3  2D                 	db	45
   670  00FDB4  2D                 	db	45
   671  00FDB5  20                 	db	32
   672  00FDB6  20                 	db	32
   673  00FDB7  20                 	db	32
   674  00FDB8                     __end_of_Message6:
   675                           	opt stack 0
   676  00FDB8                     _Message3:
   677                           	opt stack 0
   678  00FDB8  50                 	db	80
   679  00FDB9  6C                 	db	108
   680  00FDBA  65                 	db	101
   681  00FDBB  61                 	db	97
   682  00FDBC  73                 	db	115
   683  00FDBD  65                 	db	101
   684  00FDBE  20                 	db	32
   685  00FDBF  43                 	db	67
   686  00FDC0  68                 	db	104
   687  00FDC1  61                 	db	97
   688  00FDC2  6E                 	db	110
   689  00FDC3  67                 	db	103
   690  00FDC4  65                 	db	101
   691  00FDC5  20                 	db	32
   692  00FDC6  79                 	db	121
   693  00FDC7  6F                 	db	111
   694  00FDC8  75                 	db	117
   695  00FDC9  72                 	db	114
   696  00FDCA  20                 	db	32
   697  00FDCB  4C                 	db	76
   698  00FDCC  69                 	db	105
   699  00FDCD  67                 	db	103
   700  00FDCE  68                 	db	104
   701  00FDCF  74                 	db	116
   702  00FDD0  20                 	db	32
   703  00FDD1  4D                 	db	77
   704  00FDD2  6F                 	db	111
   705  00FDD3  64                 	db	100
   706  00FDD4  75                 	db	117
   707  00FDD5  6C                 	db	108
   708  00FDD6  65                 	db	101
   709  00FDD7  2E                 	db	46
   710  00FDD8                     __end_of_Message3:
   711                           	opt stack 0
   712  00FDD8                     _Delet_All_SMS:
   713                           	opt stack 0
   714  00FDD8  41                 	db	65
   715  00FDD9  54                 	db	84
   716  00FDDA  2B                 	db	43
   717  00FDDB  43                 	db	67
   718  00FDDC  4D                 	db	77
   719  00FDDD  47                 	db	71
   720  00FDDE  44                 	db	68
   721  00FDDF  3D                 	db	61
   722  00FDE0  31                 	db	49
   723  00FDE1  2C                 	db	44
   724  00FDE2  34                 	db	52
   725  00FDE3  0D                 	db	13
   726  00FDE4                     __end_of_Delet_All_SMS:
   727                           	opt stack 0
   728  00FDE4                     _ATCheck:
   729                           	opt stack 0
   730  00FDE4  41                 	db	65
   731  00FDE5  54                 	db	84
   732  00FDE6  0D                 	db	13
   733  00FDE7                     __end_of_ATCheck:
   734                           	opt stack 0
   735  0000                     _ANCON2	set	3875
   736  0000                     _ANCON1	set	3876
   737  0000                     _ANCON0	set	3877
   738  0000                     _REFOCON	set	3882
   739  0000                     _PORTEbits	set	3972
   740  0000                     _PORTE	set	3972
   741  0000                     _TXREG	set	4013
   742  0000                     _RCSTAbits	set	4011
   743  0000                     _TXSTAbits	set	4012
   744  0000                     _SPBRG	set	4015
   745  0000                     _PORTAbits	set	3968
   746  0000                     _RCREG	set	4014
   747  0000                     _PIE1bits	set	3997
   748  0000                     _EECON2	set	3966
   749  0000                     _EECON1bits	set	3967
   750  0000                     _EEDATA	set	3937
   751  0000                     _EEADR	set	3938
   752  0000                     _PIR1bits	set	3998
   753  0000                     _SSP1BUF	set	4041
   754  0000                     _SSP1STATbits	set	4039
   755  0000                     _TRISCbits	set	3988
   756  0000                     _SSP1CON1bits	set	4038
   757  0000                     _PORTFbits	set	3973
   758  0000                     _PORTCbits	set	3970
   759  0000                     _TRISD	set	3989
   760  0000                     _TRISC	set	3988
   761  0000                     _TRISB	set	3987
   762  0000                     _TRISG	set	3992
   763  0000                     _TRISA	set	3986
   764  0000                     _TRISF	set	3991
   765  0000                     _TRISE	set	3990
   766  0000                     _LATC	set	3979
   767  0000                     _LATG	set	3983
   768  0000                     _LATB	set	3978
   769  0000                     _LATF	set	3982
   770  0000                     _LATA	set	3977
   771  0000                     _LATD	set	3980
   772  0000                     _LATE	set	3981
   773  0000                     _T0CONbits	set	4053
   774  0000                     _T0CON	set	4053
   775  0000                     _TMR0L	set	4054
   776  0000                     _TMR0H	set	4055
   777  0000                     _INTCONbits	set	4082
   778  0000                     _INTCON2bits	set	4081
   779  0000                     _RCONbits	set	4048
   780  0000                     _OSCTUNE	set	3995
   781  0000                     _OSCCON2	set	3940
   782  0000                     _OSCCON	set	4051
   783  00FDE7                     STR_22:
   784  00FDE7  20                 	db	32
   785  00FDE8  53                 	db	83	;'S'
   786  00FDE9  65                 	db	101	;'e'
   787  00FDEA  6E                 	db	110	;'n'
   788  00FDEB  64                 	db	100	;'d'
   789  00FDEC  20                 	db	32
   790  00FDED  53                 	db	83	;'S'
   791  00FDEE  74                 	db	116	;'t'
   792  00FDEF  6F                 	db	111	;'o'
   793  00FDF0  72                 	db	114	;'r'
   794  00FDF1  65                 	db	101	;'e'
   795  00FDF2  64                 	db	100	;'d'
   796  00FDF3  20                 	db	32
   797  00FDF4  49                 	db	73	;'I'
   798  00FDF5  44                 	db	68	;'D'
   799  00FDF6  20                 	db	32
   800  00FDF7  20                 	db	32
   801  00FDF8  20                 	db	32
   802  00FDF9  20                 	db	32
   803  00FDFA  20                 	db	32
   804  00FDFB  00                 	db	0
   805  00FDFC                     STR_21:
   806  00FDFC  49                 	db	73	;'I'
   807  00FDFD  64                 	db	100	;'d'
   808  00FDFE  20                 	db	32
   809  00FDFF  49                 	db	73	;'I'
   810  00FE00  73                 	db	115	;'s'
   811  00FE01  20                 	db	32
   812  00FE02  4E                 	db	78	;'N'
   813  00FE03  6F                 	db	111	;'o'
   814  00FE04  74                 	db	116	;'t'
   815  00FE05  20                 	db	32
   816  00FE06  53                 	db	83	;'S'
   817  00FE07  74                 	db	116	;'t'
   818  00FE08  6F                 	db	111	;'o'
   819  00FE09  72                 	db	114	;'r'
   820  00FE0A  65                 	db	101	;'e'
   821  00FE0B  64                 	db	100	;'d'
   822  00FE0C  2E                 	db	46
   823  00FE0D  2E                 	db	46
   824  00FE0E  2E                 	db	46
   825  00FE0F  20                 	db	32
   826  00FE10  00                 	db	0
   827  00FE11                     STR_4:
   828  00FE11  20                 	db	32
   829  00FE12  20                 	db	32
   830  00FE13  20                 	db	32
   831  00FE14  20                 	db	32
   832  00FE15  20                 	db	32
   833  00FE16  20                 	db	32
   834  00FE17  20                 	db	32
   835  00FE18  20                 	db	32
   836  00FE19  20                 	db	32
   837  00FE1A  20                 	db	32
   838  00FE1B  20                 	db	32
   839  00FE1C  20                 	db	32
   840  00FE1D  20                 	db	32
   841  00FE1E  20                 	db	32
   842  00FE1F  20                 	db	32
   843  00FE20  20                 	db	32
   844  00FE21  20                 	db	32
   845  00FE22  20                 	db	32
   846  00FE23  20                 	db	32
   847  00FE24  00                 	db	0
   848  00FE25                     STR_27:
   849  00FE25  53                 	db	83	;'S'
   850  00FE26  65                 	db	101	;'e'
   851  00FE27  6E                 	db	110	;'n'
   852  00FE28  64                 	db	100	;'d'
   853  00FE29  69                 	db	105	;'i'
   854  00FE2A  6E                 	db	110	;'n'
   855  00FE2B  67                 	db	103	;'g'
   856  00FE2C  2E                 	db	46
   857  00FE2D  20                 	db	32
   858  00FE2E  20                 	db	32
   859  00FE2F  20                 	db	32
   860  00FE30  20                 	db	32
   861  00FE31  20                 	db	32
   862  00FE32  20                 	db	32
   863  00FE33  20                 	db	32
   864  00FE34  20                 	db	32
   865  00FE35  20                 	db	32
   866  00FE36  20                 	db	32
   867  00FE37  20                 	db	32
   868  00FE38  00                 	db	0
   869  00FE39                     STR_28:
   870  00FE39  53                 	db	83	;'S'
   871  00FE3A  65                 	db	101	;'e'
   872  00FE3B  6E                 	db	110	;'n'
   873  00FE3C  64                 	db	100	;'d'
   874  00FE3D  69                 	db	105	;'i'
   875  00FE3E  6E                 	db	110	;'n'
   876  00FE3F  67                 	db	103	;'g'
   877  00FE40  2E                 	db	46
   878  00FE41  2E                 	db	46
   879  00FE42  20                 	db	32
   880  00FE43  20                 	db	32
   881  00FE44  20                 	db	32
   882  00FE45  20                 	db	32
   883  00FE46  20                 	db	32
   884  00FE47  20                 	db	32
   885  00FE48  20                 	db	32
   886  00FE49  20                 	db	32
   887  00FE4A  20                 	db	32
   888  00FE4B  20                 	db	32
   889  00FE4C  00                 	db	0
   890  00FE4D                     STR_29:
   891  00FE4D  53                 	db	83	;'S'
   892  00FE4E  65                 	db	101	;'e'
   893  00FE4F  6E                 	db	110	;'n'
   894  00FE50  64                 	db	100	;'d'
   895  00FE51  69                 	db	105	;'i'
   896  00FE52  6E                 	db	110	;'n'
   897  00FE53  67                 	db	103	;'g'
   898  00FE54  2E                 	db	46
   899  00FE55  2E                 	db	46
   900  00FE56  2E                 	db	46
   901  00FE57  20                 	db	32
   902  00FE58  20                 	db	32
   903  00FE59  20                 	db	32
   904  00FE5A  20                 	db	32
   905  00FE5B  20                 	db	32
   906  00FE5C  20                 	db	32
   907  00FE5D  20                 	db	32
   908  00FE5E  20                 	db	32
   909  00FE5F  20                 	db	32
   910  00FE60  00                 	db	0
   911  00FE61                     STR_30:
   912  00FE61  53                 	db	83	;'S'
   913  00FE62  65                 	db	101	;'e'
   914  00FE63  6E                 	db	110	;'n'
   915  00FE64  64                 	db	100	;'d'
   916  00FE65  69                 	db	105	;'i'
   917  00FE66  6E                 	db	110	;'n'
   918  00FE67  67                 	db	103	;'g'
   919  00FE68  2E                 	db	46
   920  00FE69  2E                 	db	46
   921  00FE6A  2E                 	db	46
   922  00FE6B  2E                 	db	46
   923  00FE6C  20                 	db	32
   924  00FE6D  20                 	db	32
   925  00FE6E  20                 	db	32
   926  00FE6F  20                 	db	32
   927  00FE70  20                 	db	32
   928  00FE71  20                 	db	32
   929  00FE72  20                 	db	32
   930  00FE73  20                 	db	32
   931  00FE74  00                 	db	0
   932  00FE75                     STR_6:
   933  00FE75  50                 	db	80	;'P'
   934  00FE76  6C                 	db	108	;'l'
   935  00FE77  7A                 	db	122	;'z'
   936  00FE78  20                 	db	32
   937  00FE79  57                 	db	87	;'W'
   938  00FE7A  61                 	db	97	;'a'
   939  00FE7B  69                 	db	105	;'i'
   940  00FE7C  74                 	db	116	;'t'
   941  00FE7D  2E                 	db	46
   942  00FE7E  2E                 	db	46
   943  00FE7F  2E                 	db	46
   944  00FE80  20                 	db	32
   945  00FE81  20                 	db	32
   946  00FE82  20                 	db	32
   947  00FE83  20                 	db	32
   948  00FE84  20                 	db	32
   949  00FE85  20                 	db	32
   950  00FE86  20                 	db	32
   951  00FE87  20                 	db	32
   952  00FE88  00                 	db	0
   953  00FE89                     STR_31:
   954  00FE89  53                 	db	83	;'S'
   955  00FE8A  65                 	db	101	;'e'
   956  00FE8B  6E                 	db	110	;'n'
   957  00FE8C  64                 	db	100	;'d'
   958  00FE8D  69                 	db	105	;'i'
   959  00FE8E  6E                 	db	110	;'n'
   960  00FE8F  67                 	db	103	;'g'
   961  00FE90  2E                 	db	46
   962  00FE91  2E                 	db	46
   963  00FE92  2E                 	db	46
   964  00FE93  2E                 	db	46
   965  00FE94  2E                 	db	46
   966  00FE95  20                 	db	32
   967  00FE96  20                 	db	32
   968  00FE97  20                 	db	32
   969  00FE98  20                 	db	32
   970  00FE99  20                 	db	32
   971  00FE9A  20                 	db	32
   972  00FE9B  20                 	db	32
   973  00FE9C  00                 	db	0
   974  00FE9D                     STR_8:
   975  00FE9D  4D                 	db	77	;'M'
   976  00FE9E  53                 	db	83	;'S'
   977  00FE9F  47                 	db	71	;'G'
   978  00FEA0  20                 	db	32
   979  00FEA1  44                 	db	68	;'D'
   980  00FEA2  65                 	db	101	;'e'
   981  00FEA3  6C                 	db	108	;'l'
   982  00FEA4  65                 	db	101	;'e'
   983  00FEA5  74                 	db	116	;'t'
   984  00FEA6  65                 	db	101	;'e'
   985  00FEA7  64                 	db	100	;'d'
   986  00FEA8  2E                 	db	46
   987  00FEA9  2E                 	db	46
   988  00FEAA  2E                 	db	46
   989  00FEAB  20                 	db	32
   990  00FEAC  20                 	db	32
   991  00FEAD  20                 	db	32
   992  00FEAE  20                 	db	32
   993  00FEAF  20                 	db	32
   994  00FEB0  00                 	db	0
   995  00FEB1                     STR_3:
   996  00FEB1  57                 	db	87	;'W'
   997  00FEB2  61                 	db	97	;'a'
   998  00FEB3  69                 	db	105	;'i'
   999  00FEB4  74                 	db	116	;'t'
  1000  00FEB5  69                 	db	105	;'i'
  1001  00FEB6  6E                 	db	110	;'n'
  1002  00FEB7  67                 	db	103	;'g'
  1003  00FEB8  20                 	db	32
  1004  00FEB9  66                 	db	102	;'f'
  1005  00FEBA  6F                 	db	111	;'o'
  1006  00FEBB  72                 	db	114	;'r'
  1007  00FEBC  20                 	db	32
  1008  00FEBD  53                 	db	83	;'S'
  1009  00FEBE  4D                 	db	77	;'M'
  1010  00FEBF  53                 	db	83	;'S'
  1011  00FEC0  20                 	db	32
  1012  00FEC1  20                 	db	32
  1013  00FEC2  20                 	db	32
  1014  00FEC3  20                 	db	32
  1015  00FEC4  00                 	db	0
  1016  00FEC5                     STR_5:
  1017  00FEC5  4F                 	db	79	;'O'
  1018  00FEC6  6E                 	db	110	;'n'
  1019  00FEC7  65                 	db	101	;'e'
  1020  00FEC8  20                 	db	32
  1021  00FEC9  4E                 	db	78	;'N'
  1022  00FECA  65                 	db	101	;'e'
  1023  00FECB  77                 	db	119	;'w'
  1024  00FECC  20                 	db	32
  1025  00FECD  4D                 	db	77	;'M'
  1026  00FECE  65                 	db	101	;'e'
  1027  00FECF  73                 	db	115	;'s'
  1028  00FED0  73                 	db	115	;'s'
  1029  00FED1  61                 	db	97	;'a'
  1030  00FED2  67                 	db	103	;'g'
  1031  00FED3  65                 	db	101	;'e'
  1032  00FED4  20                 	db	32
  1033  00FED5  20                 	db	32
  1034  00FED6  20                 	db	32
  1035  00FED7  20                 	db	32
  1036  00FED8  00                 	db	0
  1037  00FED9                     STR_10:
  1038  00FED9  4D                 	db	77	;'M'
  1039  00FEDA  73                 	db	115	;'s'
  1040  00FEDB  67                 	db	103	;'g'
  1041  00FEDC  20                 	db	32
  1042  00FEDD  31                 	db	49	;'1'
  1043  00FEDE  20                 	db	32
  1044  00FEDF  52                 	db	82	;'R'
  1045  00FEE0  65                 	db	101	;'e'
  1046  00FEE1  63                 	db	99	;'c'
  1047  00FEE2  65                 	db	101	;'e'
  1048  00FEE3  69                 	db	105	;'i'
  1049  00FEE4  76                 	db	118	;'v'
  1050  00FEE5  65                 	db	101	;'e'
  1051  00FEE6  64                 	db	100	;'d'
  1052  00FEE7  2E                 	db	46
  1053  00FEE8  2E                 	db	46
  1054  00FEE9  2E                 	db	46
  1055  00FEEA  20                 	db	32
  1056  00FEEB  20                 	db	32
  1057  00FEEC  00                 	db	0
  1058  00FEED                     STR_12:
  1059  00FEED  4D                 	db	77	;'M'
  1060  00FEEE  73                 	db	115	;'s'
  1061  00FEEF  67                 	db	103	;'g'
  1062  00FEF0  20                 	db	32
  1063  00FEF1  32                 	db	50	;'2'
  1064  00FEF2  20                 	db	32
  1065  00FEF3  52                 	db	82	;'R'
  1066  00FEF4  65                 	db	101	;'e'
  1067  00FEF5  63                 	db	99	;'c'
  1068  00FEF6  65                 	db	101	;'e'
  1069  00FEF7  69                 	db	105	;'i'
  1070  00FEF8  76                 	db	118	;'v'
  1071  00FEF9  65                 	db	101	;'e'
  1072  00FEFA  64                 	db	100	;'d'
  1073  00FEFB  2E                 	db	46
  1074  00FEFC  2E                 	db	46
  1075  00FEFD  2E                 	db	46
  1076  00FEFE  20                 	db	32
  1077  00FEFF  20                 	db	32
  1078  00FF00  00                 	db	0
  1079  00FF01                     STR_13:
  1080  00FF01  4D                 	db	77	;'M'
  1081  00FF02  73                 	db	115	;'s'
  1082  00FF03  67                 	db	103	;'g'
  1083  00FF04  20                 	db	32
  1084  00FF05  33                 	db	51	;'3'
  1085  00FF06  20                 	db	32
  1086  00FF07  52                 	db	82	;'R'
  1087  00FF08  65                 	db	101	;'e'
  1088  00FF09  63                 	db	99	;'c'
  1089  00FF0A  65                 	db	101	;'e'
  1090  00FF0B  69                 	db	105	;'i'
  1091  00FF0C  76                 	db	118	;'v'
  1092  00FF0D  65                 	db	101	;'e'
  1093  00FF0E  64                 	db	100	;'d'
  1094  00FF0F  2E                 	db	46
  1095  00FF10  2E                 	db	46
  1096  00FF11  2E                 	db	46
  1097  00FF12  20                 	db	32
  1098  00FF13  20                 	db	32
  1099  00FF14  00                 	db	0
  1100  00FF15                     STR_14:
  1101  00FF15  4D                 	db	77	;'M'
  1102  00FF16  73                 	db	115	;'s'
  1103  00FF17  67                 	db	103	;'g'
  1104  00FF18  20                 	db	32
  1105  00FF19  34                 	db	52	;'4'
  1106  00FF1A  20                 	db	32
  1107  00FF1B  52                 	db	82	;'R'
  1108  00FF1C  65                 	db	101	;'e'
  1109  00FF1D  63                 	db	99	;'c'
  1110  00FF1E  65                 	db	101	;'e'
  1111  00FF1F  69                 	db	105	;'i'
  1112  00FF20  76                 	db	118	;'v'
  1113  00FF21  65                 	db	101	;'e'
  1114  00FF22  64                 	db	100	;'d'
  1115  00FF23  2E                 	db	46
  1116  00FF24  2E                 	db	46
  1117  00FF25  2E                 	db	46
  1118  00FF26  20                 	db	32
  1119  00FF27  20                 	db	32
  1120  00FF28  00                 	db	0
  1121  00FF29                     STR_23:
  1122  00FF29  4D                 	db	77	;'M'
  1123  00FF2A  73                 	db	115	;'s'
  1124  00FF2B  67                 	db	103	;'g'
  1125  00FF2C  20                 	db	32
  1126  00FF2D  35                 	db	53	;'5'
  1127  00FF2E  20                 	db	32
  1128  00FF2F  52                 	db	82	;'R'
  1129  00FF30  65                 	db	101	;'e'
  1130  00FF31  63                 	db	99	;'c'
  1131  00FF32  65                 	db	101	;'e'
  1132  00FF33  69                 	db	105	;'i'
  1133  00FF34  76                 	db	118	;'v'
  1134  00FF35  65                 	db	101	;'e'
  1135  00FF36  64                 	db	100	;'d'
  1136  00FF37  2E                 	db	46
  1137  00FF38  2E                 	db	46
  1138  00FF39  2E                 	db	46
  1139  00FF3A  20                 	db	32
  1140  00FF3B  20                 	db	32
  1141  00FF3C  00                 	db	0
  1142  00FF3D                     STR_26:
  1143  00FF3D  52                 	db	82	;'R'
  1144  00FF3E  65                 	db	101	;'e'
  1145  00FF3F  63                 	db	99	;'c'
  1146  00FF40  65                 	db	101	;'e'
  1147  00FF41  69                 	db	105	;'i'
  1148  00FF42  76                 	db	118	;'v'
  1149  00FF43  65                 	db	101	;'e'
  1150  00FF44  64                 	db	100	;'d'
  1151  00FF45  20                 	db	32
  1152  00FF46  4C                 	db	76	;'L'
  1153  00FF47  45                 	db	69	;'E'
  1154  00FF48  44                 	db	68	;'D'
  1155  00FF49  20                 	db	32
  1156  00FF4A  53                 	db	83	;'S'
  1157  00FF4B  54                 	db	84	;'T'
  1158  00FF4C  41                 	db	65	;'A'
  1159  00FF4D  54                 	db	84	;'T'
  1160  00FF4E  55                 	db	85	;'U'
  1161  00FF4F  53                 	db	83	;'S'
  1162  00FF50  00                 	db	0
  1163  00FF51                     STR_1:
  1164  00FF51  20                 	db	32
  1165  00FF52  20                 	db	32
  1166  00FF53  20                 	db	32
  1167  00FF54  20                 	db	32
  1168  00FF55  70                 	db	112	;'p'
  1169  00FF56  68                 	db	104	;'h'
  1170  00FF57  69                 	db	105	;'i'
  1171  00FF58  6C                 	db	108	;'l'
  1172  00FF59  62                 	db	98	;'b'
  1173  00FF5A  72                 	db	114	;'r'
  1174  00FF5B  69                 	db	105	;'i'
  1175  00FF5C  63                 	db	99	;'c'
  1176  00FF5D  6B                 	db	107	;'k'
  1177  00FF5E  20                 	db	32
  1178  00FF5F  20                 	db	32
  1179  00FF60  20                 	db	32
  1180  00FF61  20                 	db	32
  1181  00FF62  20                 	db	32
  1182  00FF63  00                 	db	0
  1183  00FF64                     STR_2:
  1184  00FF64  20                 	db	32
  1185  00FF65  20                 	db	32
  1186  00FF66  54                 	db	84	;'T'
  1187  00FF67  65                 	db	101	;'e'
  1188  00FF68  63                 	db	99	;'c'
  1189  00FF69  68                 	db	104	;'h'
  1190  00FF6A  6E                 	db	110	;'n'
  1191  00FF6B  6F                 	db	111	;'o'
  1192  00FF6C  6C                 	db	108	;'l'
  1193  00FF6D  6F                 	db	111	;'o'
  1194  00FF6E  67                 	db	103	;'g'
  1195  00FF6F  69                 	db	105	;'i'
  1196  00FF70  65                 	db	101	;'e'
  1197  00FF71  73                 	db	115	;'s'
  1198  00FF72  20                 	db	32
  1199  00FF73  20                 	db	32
  1200  00FF74  20                 	db	32
  1201  00FF75  20                 	db	32
  1202  00FF76  00                 	db	0
  1203  00FF77                     STR_25:
  1204  00FF77  53                 	db	83	;'S'
  1205  00FF78  65                 	db	101	;'e'
  1206  00FF79  6E                 	db	110	;'n'
  1207  00FF7A  64                 	db	100	;'d'
  1208  00FF7B  20                 	db	32
  1209  00FF7C  70                 	db	112	;'p'
  1210  00FF7D  72                 	db	114	;'r'
  1211  00FF7E  6F                 	db	111	;'o'
  1212  00FF7F  70                 	db	112	;'p'
  1213  00FF80  65                 	db	101	;'e'
  1214  00FF81  72                 	db	114	;'r'
  1215  00FF82  20                 	db	32
  1216  00FF83  6D                 	db	109	;'m'
  1217  00FF84  73                 	db	115	;'s'
  1218  00FF85  67                 	db	103	;'g'
  1219  00FF86  20                 	db	32
  1220  00FF87  20                 	db	32
  1221  00FF88  20                 	db	32
  1222  00FF89  00                 	db	0
  1223  00FF8A                     STR_24:
  1224  00FF8A  57                 	db	87	;'W'
  1225  00FF8B  72                 	db	114	;'r'
  1226  00FF8C  6F                 	db	111	;'o'
  1227  00FF8D  6E                 	db	110	;'n'
  1228  00FF8E  67                 	db	103	;'g'
  1229  00FF8F  20                 	db	32
  1230  00FF90  4D                 	db	77	;'M'
  1231  00FF91  73                 	db	115	;'s'
  1232  00FF92  67                 	db	103	;'g'
  1233  00FF93  20                 	db	32
  1234  00FF94  52                 	db	82	;'R'
  1235  00FF95  65                 	db	101	;'e'
  1236  00FF96  63                 	db	99	;'c'
  1237  00FF97  65                 	db	101	;'e'
  1238  00FF98  69                 	db	105	;'i'
  1239  00FF99  76                 	db	118	;'v'
  1240  00FF9A  65                 	db	101	;'e'
  1241  00FF9B  64                 	db	100	;'d'
  1242  00FF9C  00                 	db	0
  1243  00FF9D                     STR_40:
  1244  00FF9D  44                 	db	68	;'D'
  1245  00FF9E  65                 	db	101	;'e'
  1246  00FF9F  6C                 	db	108	;'l'
  1247  00FFA0  65                 	db	101	;'e'
  1248  00FFA1  74                 	db	116	;'t'
  1249  00FFA2  69                 	db	105	;'i'
  1250  00FFA3  6E                 	db	110	;'n'
  1251  00FFA4  67                 	db	103	;'g'
  1252  00FFA5  20                 	db	32
  1253  00FFA6  53                 	db	83	;'S'
  1254  00FFA7  4D                 	db	77	;'M'
  1255  00FFA8  53                 	db	83	;'S'
  1256  00FFA9  20                 	db	32
  1257  00FFAA  20                 	db	32
  1258  00FFAB  20                 	db	32
  1259  00FFAC  20                 	db	32
  1260  00FFAD  00                 	db	0
  1261  00FFAE                     STR_41:
  1262  00FFAE  41                 	db	65	;'A'
  1263  00FFAF  6C                 	db	108	;'l'
  1264  00FFB0  6C                 	db	108	;'l'
  1265  00FFB1  20                 	db	32
  1266  00FFB2  53                 	db	83	;'S'
  1267  00FFB3  4D                 	db	77	;'M'
  1268  00FFB4  53                 	db	83	;'S'
  1269  00FFB5  20                 	db	32
  1270  00FFB6  64                 	db	100	;'d'
  1271  00FFB7  65                 	db	101	;'e'
  1272  00FFB8  6C                 	db	108	;'l'
  1273  00FFB9  65                 	db	101	;'e'
  1274  00FFBA  74                 	db	116	;'t'
  1275  00FFBB  65                 	db	101	;'e'
  1276  00FFBC  64                 	db	100	;'d'
  1277  00FFBD  20                 	db	32
  1278  00FFBE  00                 	db	0
  1279  00FFBF                     STR_16:
  1280  00FFBF  53                 	db	83	;'S'
  1281  00FFC0  74                 	db	116	;'t'
  1282  00FFC1  6F                 	db	111	;'o'
  1283  00FFC2  72                 	db	114	;'r'
  1284  00FFC3  65                 	db	101	;'e'
  1285  00FFC4  64                 	db	100	;'d'
  1286  00FFC5  20                 	db	32
  1287  00FFC6  69                 	db	105	;'i'
  1288  00FFC7  6E                 	db	110	;'n'
  1289  00FFC8  20                 	db	32
  1290  00FFC9  44                 	db	68	;'D'
  1291  00FFCA  65                 	db	101	;'e'
  1292  00FFCB  76                 	db	118	;'v'
  1293  00FFCC  69                 	db	105	;'i'
  1294  00FFCD  63                 	db	99	;'c'
  1295  00FFCE  65                 	db	101	;'e'
  1296  00FFCF  00                 	db	0
  1297  00FFD0                     STR_19:
  1298  00FFD0  20                 	db	32
  1299  00FFD1  20                 	db	32
  1300  00FFD2  49                 	db	73	;'I'
  1301  00FFD3  44                 	db	68	;'D'
  1302  00FFD4  20                 	db	32
  1303  00FFD5  20                 	db	32
  1304  00FFD6  20                 	db	32
  1305  00FFD7  20                 	db	32
  1306  00FFD8  20                 	db	32
  1307  00FFD9  69                 	db	105	;'i'
  1308  00FFDA  73                 	db	115	;'s'
  1309  00FFDB  20                 	db	32
  1310  00FFDC  69                 	db	105	;'i'
  1311  00FFDD  6E                 	db	110	;'n'
  1312  00FFDE  20                 	db	32
  1313  00FFDF  00                 	db	0
  1314  00FFE0                     STR_33:
  1315  00FFE0  20                 	db	32
  1316  00FFE1  20                 	db	32
  1317  00FFE2  20                 	db	32
  1318  00FFE3  45                 	db	69	;'E'
  1319  00FFE4  6D                 	db	109	;'m'
  1320  00FFE5  65                 	db	101	;'e'
  1321  00FFE6  72                 	db	114	;'r'
  1322  00FFE7  67                 	db	103	;'g'
  1323  00FFE8  65                 	db	101	;'e'
  1324  00FFE9  6E                 	db	110	;'n'
  1325  00FFEA  63                 	db	99	;'c'
  1326  00FFEB  79                 	db	121	;'y'
  1327  00FFEC  20                 	db	32
  1328  00FFED  20                 	db	32
  1329  00FFEE  00                 	db	0
  1330  00FFEF                     STR_15:
  1331  00FFEF  20                 	db	32
  1332  00FFF0  20                 	db	32
  1333  00FFF1  49                 	db	73	;'I'
  1334  00FFF2  44                 	db	68	;'D'
  1335  00FFF3  20                 	db	32
  1336  00FFF4  20                 	db	32
  1337  00FFF5  20                 	db	32
  1338  00FFF6  20                 	db	32
  1339  00FFF7  69                 	db	105	;'i'
  1340  00FFF8  73                 	db	115	;'s'
  1341  00FFF9  20                 	db	32
  1342  00FFFA  69                 	db	105	;'i'
  1343  00FFFB  6E                 	db	110	;'n'
  1344  00FFFC  20                 	db	32
  1345  00FFFD  00                 	db	0
  1346  0000                     
  1347                           ; #config settings
  1348  00FFFE  00                 	db	0	; dummy byte at the end
  1349  0000                     
  1350                           	psect	cinit
  1351  0120A8                     __pcinit:
  1352                           	opt stack 0
  1353  0120A8                     start_initialization:
  1354                           	opt stack 0
  1355  0120A8                     __initialization:
  1356                           	opt stack 0
  1357                           
  1358                           ; Initialize objects allocated to BANK1 (182 bytes)
  1359                           ; load TBLPTR registers with __pidataBANK1
  1360  0120A8  0E4C               	movlw	low __pidataBANK1
  1361  0120AA  6EF6               	movwf	tblptrl,c
  1362  0120AC  0E19               	movlw	high __pidataBANK1
  1363  0120AE  6EF7               	movwf	tblptrh,c
  1364  0120B0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1365  0120B2  6EF8               	movwf	tblptru,c
  1366  0120B4  EE01  F000         	lfsr	0,__pdataBANK1
  1367  0120B8  EE10 F0B6          	lfsr	1,182
  1368  0120BC                     copy_data0:
  1369  0120BC  0009               	tblrd		*+
  1370  0120BE  CFF5 FFEE          	movff	tablat,postinc0
  1371  0120C2  50E5               	movf	postdec1,w,c
  1372  0120C4  50E1               	movf	fsr1l,w,c
  1373  0120C6  E1FA               	bnz	copy_data0
  1374                           
  1375                           ; Initialize objects allocated to BANK0 (47 bytes)
  1376                           ; load TBLPTR registers with __pidataBANK0
  1377  0120C8  0E7E               	movlw	low __pidataBANK0
  1378  0120CA  6EF6               	movwf	tblptrl,c
  1379  0120CC  0E27               	movlw	high __pidataBANK0
  1380  0120CE  6EF7               	movwf	tblptrh,c
  1381  0120D0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1382  0120D2  6EF8               	movwf	tblptru,c
  1383  0120D4  EE00  F0BA         	lfsr	0,__pdataBANK0
  1384  0120D8  EE10 F02F          	lfsr	1,47
  1385  0120DC                     copy_data1:
  1386  0120DC  0009               	tblrd		*+
  1387  0120DE  CFF5 FFEE          	movff	tablat,postinc0
  1388  0120E2  50E5               	movf	postdec1,w,c
  1389  0120E4  50E1               	movf	fsr1l,w,c
  1390  0120E6  E1FA               	bnz	copy_data1
  1391                           
  1392                           ; Clear objects allocated to BANK2 (100 bytes)
  1393  0120E8  EE02  F000         	lfsr	0,__pbssBANK2
  1394  0120EC  0E64               	movlw	100
  1395  0120EE                     clear_0:
  1396  0120EE  6AEE               	clrf	postinc0,c
  1397  0120F0  06E8               	decf	wreg,f,c
  1398  0120F2  E1FD               	bnz	clear_0
  1399                           
  1400                           ; Clear objects allocated to BANK1 (34 bytes)
  1401  0120F4  EE01  F0B6         	lfsr	0,__pbssBANK1
  1402  0120F8  0E22               	movlw	34
  1403  0120FA                     clear_1:
  1404  0120FA  6AEE               	clrf	postinc0,c
  1405  0120FC  06E8               	decf	wreg,f,c
  1406  0120FE  E1FD               	bnz	clear_1
  1407                           
  1408                           ; Clear objects allocated to BANK0 (90 bytes)
  1409  012100  EE00  F060         	lfsr	0,__pbssBANK0
  1410  012104  0E5A               	movlw	90
  1411  012106                     clear_2:
  1412  012106  6AEE               	clrf	postinc0,c
  1413  012108  06E8               	decf	wreg,f,c
  1414  01210A  E1FD               	bnz	clear_2
  1415                           
  1416                           ; Clear objects allocated to COMRAM (36 bytes)
  1417  01210C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1418  012110  0E24               	movlw	36
  1419  012112                     clear_3:
  1420  012112  6AEE               	clrf	postinc0,c
  1421  012114  06E8               	decf	wreg,f,c
  1422  012116  E1FD               	bnz	clear_3
  1423  012118                     end_of_initialization:
  1424                           	opt stack 0
  1425  012118                     __end_of__initialization:
  1426                           	opt stack 0
  1427  012118  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1428  01211A  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1429  01211C  0100               	movlb	0
  1430  01211E  EF00  F080         	goto	_main	;jump to C main() function
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           postdec1	equ	0xFE5
  1438                           fsr1l	equ	0xFE1
  1439                           
  1440                           	psect	bssCOMRAM
  1441  000001                     __pbssCOMRAM:
  1442                           	opt stack 0
  1443  000001                     _ds:
  1444                           	opt stack 0
  1445  000001                     	ds	1
  1446  000002                     _RXcounter:
  1447                           	opt stack 0
  1448  000002                     	ds	1
  1449  000003                     _id:
  1450                           	opt stack 0
  1451  000003                     	ds	1
  1452  000004                     _Nilp:
  1453                           	opt stack 0
  1454  000004                     	ds	1
  1455  000005                     _address:
  1456                           	opt stack 0
  1457  000005                     	ds	1
  1458  000006                     _VALUE:
  1459                           	opt stack 0
  1460  000006                     	ds	1
  1461  000007                     _value:
  1462                           	opt stack 0
  1463  000007                     	ds	1
  1464  000008                     _Trick:
  1465                           	opt stack 0
  1466  000008                     	ds	1
  1467  000009                     _Tick:
  1468                           	opt stack 0
  1469  000009                     	ds	1
  1470  00000A                     _TX_ID:
  1471                           	opt stack 0
  1472  00000A                     	ds	1
  1473  00000B                     _T_ID_Send:
  1474                           	opt stack 0
  1475  00000B                     	ds	1
  1476  00000C                     _ID_SET:
  1477                           	opt stack 0
  1478  00000C                     	ds	1
  1479  00000D                     _F_SetID:
  1480                           	opt stack 0
  1481  00000D                     	ds	1
  1482  00000E                     _T:
  1483                           	opt stack 0
  1484  00000E                     	ds	1
  1485  00000F                     _Count_LED:
  1486                           	opt stack 0
  1487  00000F                     	ds	1
  1488  000010                     _F_ERROR:
  1489                           	opt stack 0
  1490  000010                     	ds	1
  1491  000011                     _ERROR:
  1492                           	opt stack 0
  1493  000011                     	ds	1
  1494  000012                     _slave_add:
  1495                           	opt stack 0
  1496  000012                     	ds	1
  1497  000013                     _Store:
  1498                           	opt stack 0
  1499  000013                     	ds	1
  1500  000014                     _d:
  1501                           	opt stack 0
  1502  000014                     	ds	1
  1503  000015                     _F_IdSet:
  1504                           	opt stack 0
  1505  000015                     	ds	1
  1506  000016                     _InputRead:
  1507                           	opt stack 0
  1508  000016                     	ds	1
  1509  000017                     _Portread:
  1510                           	opt stack 0
  1511  000017                     	ds	1
  1512  000018                     _F_Input:
  1513                           	opt stack 0
  1514  000018                     	ds	1
  1515  000019                     _T_Input:
  1516                           	opt stack 0
  1517  000019                     	ds	1
  1518  00001A                     _Device_ID:
  1519                           	opt stack 0
  1520  00001A                     	ds	1
  1521  00001B                     _lost_data:
  1522                           	opt stack 0
  1523  00001B                     	ds	1
  1524  00001C                     _RSSI2:
  1525                           	opt stack 0
  1526  00001C                     	ds	1
  1527  00001D                     _LQI:
  1528                           	opt stack 0
  1529  00001D                     	ds	1
  1530  00001E                     _data_r:
  1531                           	opt stack 0
  1532  00001E                     	ds	1
  1533  00001F                     _DATA:
  1534                           	opt stack 0
  1535  00001F                     	ds	1
  1536  000020                     _LENGTH:
  1537                           	opt stack 0
  1538  000020                     	ds	1
  1539  000021                     _Count2:
  1540                           	opt stack 0
  1541  000021                     	ds	1
  1542  000022                     _Count1:
  1543                           	opt stack 0
  1544  000022                     	ds	1
  1545  000023                     _INTTRUPT:
  1546                           	opt stack 0
  1547  000023                     	ds	1
  1548  000024                     _timer0ReloadVal:
  1549                           	opt stack 0
  1550  000024                     	ds	1
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	bssBANK0
  1561  000060                     __pbssBANK0:
  1562                           	opt stack 0
  1563  000060                     _data_TX_normal_FIFO:
  1564                           	opt stack 0
  1565  000060                     	ds	18
  1566  000072                     _SMS:
  1567                           	opt stack 0
  1568  000072                     	ds	15
  1569  000081                     _Store_DATA:
  1570                           	opt stack 0
  1571  000081                     	ds	4
  1572  000085                     _TMR0_InterruptHandler:
  1573                           	opt stack 0
  1574  000085                     	ds	3
  1575  000088                     _INT0_InterruptHandler:
  1576                           	opt stack 0
  1577  000088                     	ds	3
  1578  00008B                     _Send_ID:
  1579                           	opt stack 0
  1580  00008B                     	ds	2
  1581  00008D                     _ckeck:
  1582                           	opt stack 0
  1583  00008D                     	ds	2
  1584  00008F                     _T_ERROR:
  1585                           	opt stack 0
  1586  00008F                     	ds	2
  1587  000091                     _CRC:
  1588                           	opt stack 0
  1589  000091                     	ds	2
  1590  000093                     _TX_CRC:
  1591                           	opt stack 0
  1592  000093                     	ds	2
  1593  000095                     _Rv_CRC:
  1594                           	opt stack 0
  1595  000095                     	ds	2
  1596  000097                     _address_TX_normal_FIFO:
  1597                           	opt stack 0
  1598  000097                     	ds	2
  1599  000099                     TMR0_ISR@CountCallBack:
  1600                           	opt stack 0
  1601  000099                     	ds	2
  1602  00009B                     _t:
  1603                           	opt stack 0
  1604  00009B                     	ds	1
  1605  00009C                     _g:
  1606                           	opt stack 0
  1607  00009C                     	ds	1
  1608  00009D                     _Frame:
  1609                           	opt stack 0
  1610  00009D                     	ds	1
  1611  00009E                     _n:
  1612                           	opt stack 0
  1613  00009E                     	ds	1
  1614  00009F                     _V_Temp:
  1615                           	opt stack 0
  1616  00009F                     	ds	1
  1617  0000A0                     _IDByte3:
  1618                           	opt stack 0
  1619  0000A0                     	ds	1
  1620  0000A1                     _IDByte2:
  1621                           	opt stack 0
  1622  0000A1                     	ds	1
  1623  0000A2                     _IDByte1:
  1624                           	opt stack 0
  1625  0000A2                     	ds	1
  1626  0000A3                     _Chksum:
  1627                           	opt stack 0
  1628  0000A3                     	ds	1
  1629  0000A4                     _F_WaitForReceive:
  1630                           	opt stack 0
  1631  0000A4                     	ds	1
  1632  0000A5                     _WaitForReceive:
  1633                           	opt stack 0
  1634  0000A5                     	ds	1
  1635  0000A6                     _Sent_sms:
  1636                           	opt stack 0
  1637  0000A6                     	ds	1
  1638  0000A7                     _RECEIVE_OK:
  1639                           	opt stack 0
  1640  0000A7                     	ds	1
  1641  0000A8                     _Send_Frame_2:
  1642                           	opt stack 0
  1643  0000A8                     	ds	1
  1644  0000A9                     _Send_Frame:
  1645                           	opt stack 0
  1646  0000A9                     	ds	1
  1647  0000AA                     _F_ID_SEND:
  1648                           	opt stack 0
  1649  0000AA                     	ds	1
  1650  0000AB                     _T_BUZZER:
  1651                           	opt stack 0
  1652  0000AB                     	ds	1
  1653  0000AC                     _F_BUZZER:
  1654                           	opt stack 0
  1655  0000AC                     	ds	1
  1656  0000AD                     _F_ID_Send:
  1657                           	opt stack 0
  1658  0000AD                     	ds	1
  1659  0000AE                     _ID_READ:
  1660                           	opt stack 0
  1661  0000AE                     	ds	1
  1662  0000AF                     _ii:
  1663                           	opt stack 0
  1664  0000AF                     	ds	1
  1665  0000B0                     _i:
  1666                           	opt stack 0
  1667  0000B0                     	ds	1
  1668  0000B1                     _CHECK:
  1669                           	opt stack 0
  1670  0000B1                     	ds	1
  1671  0000B2                     _DATA_RX:
  1672                           	opt stack 0
  1673  0000B2                     	ds	5
  1674  0000B7                     _DATA_TX:
  1675                           	opt stack 0
  1676  0000B7                     	ds	3
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	dataBANK0
  1687  0000BA                     __pdataBANK0:
  1688                           	opt stack 0
  1689  0000BA                     _msg:
  1690                           	opt stack 0
  1691  0000BA                     	ds	6
  1692  0000C0                     _Call_Cut:
  1693                           	opt stack 0
  1694  0000C0                     	ds	4
  1695  0000C4                     _PAN_ID_1:
  1696                           	opt stack 0
  1697  0000C4                     	ds	2
  1698  0000C6                     _ADDRESS_short_1:
  1699                           	opt stack 0
  1700  0000C6                     	ds	2
  1701  0000C8                     _address_RX_FIFO:
  1702                           	opt stack 0
  1703  0000C8                     	ds	2
  1704  0000CA                     _SEQ_NUMBER:
  1705                           	opt stack 0
  1706  0000CA                     	ds	1
  1707  0000CB                     _SMS_format:
  1708                           	opt stack 0
  1709  0000CB                     	ds	10
  1710  0000D5                     _ADDRESS_long_2:
  1711                           	opt stack 0
  1712  0000D5                     	ds	8
  1713  0000DD                     _Call:
  1714                           	opt stack 0
  1715  0000DD                     	ds	6
  1716  0000E3                     _send:
  1717                           	opt stack 0
  1718  0000E3                     	ds	2
  1719  0000E5                     _PAN_ID_2:
  1720                           	opt stack 0
  1721  0000E5                     	ds	2
  1722  0000E7                     _ADDRESS_short_2:
  1723                           	opt stack 0
  1724  0000E7                     	ds	2
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           postdec1	equ	0xFE5
  1732                           fsr1l	equ	0xFE1
  1733                           
  1734                           	psect	bssBANK1
  1735  0001B6                     __pbssBANK1:
  1736                           	opt stack 0
  1737  0001B6                     _data_RX_FIFO:
  1738                           	opt stack 0
  1739  0001B6                     	ds	21
  1740  0001CB                     _SMSsender:
  1741                           	opt stack 0
  1742  0001CB                     	ds	13
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           
  1752                           	psect	dataBANK1
  1753  000100                     __pdataBANK1:
  1754                           	opt stack 0
  1755  000100                     _ADDRESS_long_1:
  1756                           	opt stack 0
  1757  000100                     	ds	8
  1758  000108                     _LED_PATTERN:
  1759                           	opt stack 0
  1760  000108                     	ds	7
  1761  00010F                     _Message5:
  1762                           	opt stack 0
  1763  00010F                     	ds	24
  1764  000127                     _Emeregency3:
  1765                           	opt stack 0
  1766  000127                     	ds	23
  1767  00013E                     _Message4:
  1768                           	opt stack 0
  1769  00013E                     	ds	22
  1770  000154                     _Emeregency2:
  1771                           	opt stack 0
  1772  000154                     	ds	22
  1773  00016A                     _Emeregency:
  1774                           	opt stack 0
  1775  00016A                     	ds	21
  1776  00017F                     _SEND_SMS:
  1777                           	opt stack 0
  1778  00017F                     	ds	21
  1779  000194                     _Array:
  1780                           	opt stack 0
  1781  000194                     	ds	19
  1782  0001A7                     _Number:
  1783                           	opt stack 0
  1784  0001A7                     	ds	15
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1l	equ	0xFE1
  1793                           
  1794                           	psect	bssBANK2
  1795  000200                     __pbssBANK2:
  1796                           	opt stack 0
  1797  000200                     _RxBuffer:
  1798                           	opt stack 0
  1799  000200                     	ds	100
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           
  1809                           	psect	cstackBANK1
  1810  0001D8                     __pcstackBANK1:
  1811                           	opt stack 0
  1812  0001D8                     ??_ID_Conversion:
  1813  0001D8                     ?_Xor_check:
  1814                           	opt stack 0
  1815  0001D8                     ?___awdiv:
  1816                           	opt stack 0
  1817  0001D8                     ?___awmod:
  1818                           	opt stack 0
  1819  0001D8                     SPI_Write@response:
  1820                           	opt stack 0
  1821  0001D8                     SPI_Read@TempVar:
  1822                           	opt stack 0
  1823  0001D8                     ClearRxBytes@i:
  1824                           	opt stack 0
  1825  0001D8                     Clear_Data@n:
  1826                           	opt stack 0
  1827  0001D8                     delay@dly:
  1828                           	opt stack 0
  1829  0001D8                     Delay_ms@time:
  1830                           	opt stack 0
  1831  0001D8                     Delayms@time:
  1832                           	opt stack 0
  1833  0001D8                     Xor_check@data_value:
  1834                           	opt stack 0
  1835  0001D8                     Write_b_eep@badd:
  1836                           	opt stack 0
  1837  0001D8                     Read_b_eep@badd:
  1838                           	opt stack 0
  1839  0001D8                     ___awdiv@dividend:
  1840                           	opt stack 0
  1841  0001D8                     ___awmod@dividend:
  1842                           	opt stack 0
  1843  0001D8                     INT0_SetInterruptHandler@InterruptHandler:
  1844                           	opt stack 0
  1845                           
  1846                           ; 3 bytes @ 0x0
  1847  0001D8                     	ds	1
  1848  0001D9                     SPI_Write@command:
  1849                           	opt stack 0
  1850  0001D9                     check_msg@Check:
  1851                           	opt stack 0
  1852  0001D9                     ID_Conversion@num3:
  1853                           	opt stack 0
  1854                           
  1855                           ; 1 bytes @ 0x1
  1856  0001D9                     	ds	1
  1857  0001DA                     write_ZIGBEE_short@data_r:
  1858                           	opt stack 0
  1859  0001DA                     read_ZIGBEE_short@data_r:
  1860                           	opt stack 0
  1861  0001DA                     Xor_check@length:
  1862                           	opt stack 0
  1863  0001DA                     Write_b_eep@data:
  1864                           	opt stack 0
  1865  0001DA                     ID_Conversion@Id_Number:
  1866                           	opt stack 0
  1867  0001DA                     write_ZIGBEE_long@address:
  1868                           	opt stack 0
  1869  0001DA                     delay@l:
  1870                           	opt stack 0
  1871  0001DA                     Delay_ms@y:
  1872                           	opt stack 0
  1873  0001DA                     Delayms@k:
  1874                           	opt stack 0
  1875  0001DA                     ___awdiv@divisor:
  1876                           	opt stack 0
  1877  0001DA                     ___awmod@divisor:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x2
  1881  0001DA                     	ds	1
  1882  0001DB                     ??_Xor_check:
  1883  0001DB                     write_ZIGBEE_short@address:
  1884                           	opt stack 0
  1885  0001DB                     read_ZIGBEE_short@address:
  1886                           	opt stack 0
  1887  0001DB                     Write_b_eep@GIE_BIT_VAL:
  1888                           	opt stack 0
  1889  0001DB                     ID_Conversion@num2:
  1890                           	opt stack 0
  1891                           
  1892                           ; 1 bytes @ 0x3
  1893  0001DB                     	ds	1
  1894  0001DC                     set_CCA_mode@CCA_mode:
  1895                           	opt stack 0
  1896  0001DC                     set_RSSI_mode@RSSI_mode:
  1897                           	opt stack 0
  1898  0001DC                     nonbeacon_PAN_coordinator_device@temp:
  1899                           	opt stack 0
  1900  0001DC                     set_frame_format_filter@fff_mode:
  1901                           	opt stack 0
  1902  0001DC                     set_reception_mode@r_mode:
  1903                           	opt stack 0
  1904  0001DC                     set_not_ACK@temp:
  1905                           	opt stack 0
  1906  0001DC                     set_not_encrypt@temp:
  1907                           	opt stack 0
  1908  0001DC                     write_ZIGBEE_long@data_r:
  1909                           	opt stack 0
  1910  0001DC                     ID_Conversion@num1:
  1911                           	opt stack 0
  1912  0001DC                     ___awdiv@counter:
  1913                           	opt stack 0
  1914  0001DC                     ___awmod@counter:
  1915                           	opt stack 0
  1916  0001DC                     set_long_address@address:
  1917                           	opt stack 0
  1918  0001DC                     set_short_address@address:
  1919                           	opt stack 0
  1920  0001DC                     set_PAN_ID@address:
  1921                           	opt stack 0
  1922  0001DC                     Delayms@l:
  1923                           	opt stack 0
  1924  0001DC                     Xor_check@xor_value:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0x4
  1928  0001DC                     	ds	1
  1929  0001DD                     ??_write_ZIGBEE_long:
  1930  0001DD                     set_CCA_mode@temp:
  1931                           	opt stack 0
  1932  0001DD                     set_RSSI_mode@temp:
  1933                           	opt stack 0
  1934  0001DD                     set_frame_format_filter@temp:
  1935                           	opt stack 0
  1936  0001DD                     set_reception_mode@temp:
  1937                           	opt stack 0
  1938  0001DD                     ___awdiv@sign:
  1939                           	opt stack 0
  1940  0001DD                     ___awmod@sign:
  1941                           	opt stack 0
  1942                           
  1943                           ; 1 bytes @ 0x5
  1944  0001DD                     	ds	1
  1945  0001DE                     set_long_address@i:
  1946                           	opt stack 0
  1947  0001DE                     LcdData@value:
  1948                           	opt stack 0
  1949  0001DE                     LcdCmd@value:
  1950                           	opt stack 0
  1951  0001DE                     Xor_check@xor:
  1952                           	opt stack 0
  1953  0001DE                     Sprint@datas:
  1954                           	opt stack 0
  1955  0001DE                     SprintRom@datas:
  1956                           	opt stack 0
  1957  0001DE                     ___awdiv@quotient:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x6
  1961  0001DE                     	ds	1
  1962  0001DF                     write_ZIGBEE_long@address_high:
  1963                           	opt stack 0
  1964  0001DF                     LcdDisplay@string:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x7
  1968  0001DF                     	ds	1
  1969  0001E0                     write_ZIGBEE_long@address_low:
  1970                           	opt stack 0
  1971  0001E0                     Sprint@length:
  1972                           	opt stack 0
  1973  0001E0                     SprintRom@length:
  1974                           	opt stack 0
  1975                           
  1976                           ; 1 bytes @ 0x8
  1977  0001E0                     	ds	1
  1978  0001E1                     ??_Sprint:
  1979  0001E1                     ??_SprintRom:
  1980  0001E1                     ??_set_TX_power:
  1981  0001E1                     ??_write_TX_normal_FIFO:
  1982  0001E1                     set_channel@channel_number:
  1983                           	opt stack 0
  1984  0001E1                     LcdDisplay@LINE:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x9
  1988  0001E1                     	ds	1
  1989  0001E2                     set_TX_power@power:
  1990                           	opt stack 0
  1991                           
  1992                           ; 1 bytes @ 0xA
  1993  0001E2                     	ds	1
  1994  0001E3                     Sprint@j:
  1995                           	opt stack 0
  1996  0001E3                     SprintRom@j:
  1997                           	opt stack 0
  1998                           
  1999                           ; 1 bytes @ 0xB
  2000  0001E3                     	ds	1
  2001  0001E4                     Sprint@i:
  2002                           	opt stack 0
  2003  0001E4                     SprintRom@i:
  2004                           	opt stack 0
  2005                           
  2006                           ; 1 bytes @ 0xC
  2007  0001E4                     	ds	1
  2008  0001E5                     
  2009                           ; 1 bytes @ 0xD
  2010  0001E5                     	ds	1
  2011  0001E6                     write_TX_normal_FIFO@n:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0xE
  2015  0001E6                     	ds	1
  2016  0001E7                     write_TX_normal_FIFO@i:
  2017                           	opt stack 0
  2018                           
  2019                           ; 1 bytes @ 0xF
  2020  0001E7                     	ds	1
  2021  0001E8                     ??_main:
  2022                           
  2023                           ; 1 bytes @ 0x10
  2024  0001E8                     	ds	2
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	cstackBANK0
  2035  0000E9                     __pcstackBANK0:
  2036                           	opt stack 0
  2037  0000E9                     ??_INTERRUPT_InterruptManagerLow:
  2038                           
  2039                           ; 1 bytes @ 0x0
  2040  0000E9                     	ds	22
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           postdec1	equ	0xFE5
  2048                           fsr1l	equ	0xFE1
  2049                           
  2050                           	psect	cstackCOMRAM
  2051  000025                     __pcstackCOMRAM:
  2052                           	opt stack 0
  2053  000025                     ?i2_Xor_check:
  2054                           	opt stack 0
  2055  000025                     i2SPI_Write@response:
  2056                           	opt stack 0
  2057  000025                     i2SPI_Read@TempVar:
  2058                           	opt stack 0
  2059  000025                     i2Xor_check@data_value:
  2060                           	opt stack 0
  2061                           
  2062                           ; 2 bytes @ 0x0
  2063  000025                     	ds	1
  2064  000026                     i2SPI_Write@command:
  2065                           	opt stack 0
  2066                           
  2067                           ; 1 bytes @ 0x1
  2068  000026                     	ds	1
  2069  000027                     i2write_ZIGBEE_short@data_r:
  2070                           	opt stack 0
  2071  000027                     i2read_ZIGBEE_short@address:
  2072                           	opt stack 0
  2073  000027                     i2Xor_check@length:
  2074                           	opt stack 0
  2075  000027                     read_ZIGBEE_long@address:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x2
  2079  000027                     	ds	1
  2080  000028                     ??i2_Xor_check:
  2081  000028                     i2write_ZIGBEE_short@address:
  2082                           	opt stack 0
  2083  000028                     i2read_ZIGBEE_short@data_r:
  2084                           	opt stack 0
  2085                           
  2086                           ; 1 bytes @ 0x3
  2087  000028                     	ds	1
  2088  000029                     ??_read_ZIGBEE_long:
  2089  000029                     i2Xor_check@xor_value:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0x4
  2093  000029                     	ds	2
  2094  00002B                     read_ZIGBEE_long@data_r:
  2095                           	opt stack 0
  2096  00002B                     i2Xor_check@xor:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x6
  2100  00002B                     	ds	1
  2101  00002C                     read_ZIGBEE_long@address_high:
  2102                           	opt stack 0
  2103                           
  2104                           ; 1 bytes @ 0x7
  2105  00002C                     	ds	1
  2106  00002D                     read_ZIGBEE_long@address_low:
  2107                           	opt stack 0
  2108                           
  2109                           ; 1 bytes @ 0x8
  2110  00002D                     	ds	1
  2111  00002E                     ??_read_RX_FIFO:
  2112                           
  2113                           ; 1 bytes @ 0x9
  2114  00002E                     	ds	5
  2115  000033                     read_RX_FIFO@temp:
  2116                           	opt stack 0
  2117                           
  2118                           ; 1 bytes @ 0xE
  2119  000033                     	ds	1
  2120  000034                     read_RX_FIFO@i:
  2121                           	opt stack 0
  2122                           
  2123                           ; 1 bytes @ 0xF
  2124  000034                     	ds	1
  2125  000035                     ??_INTERRUPT_InterruptManagerHigh:
  2126                           
  2127                           ; 1 bytes @ 0x10
  2128  000035                     	ds	20
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           
  2138 ;;
  2139 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2140 ;;
  2141 ;; *************** function _main *****************
  2142 ;; Defined at:
  2143 ;;		line 172 in file "2_April_TestMain.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels required when called:   13
  2163 ;; This function calls:
  2164 ;;		_ClearRxBytes
  2165 ;;		_Clear_Data
  2166 ;;		_Delay_ms
  2167 ;;		_Delayms
  2168 ;;		_ID_Conversion
  2169 ;;		_InitSPI
  2170 ;;		_LcdCmd
  2171 ;;		_LcdData
  2172 ;;		_LcdDisplay
  2173 ;;		_LcdInit
  2174 ;;		_Message_Send_Frame_1
  2175 ;;		_Message_Send_Frame_2
  2176 ;;		_Message_Send_Frame_3
  2177 ;;		_Message_Send_Frame_LDR_OFF
  2178 ;;		_Message_Send_Frame_LDR_ON
  2179 ;;		_Message_Send_Frame_Parking_light_Board
  2180 ;;		_Module_Init
  2181 ;;		_RF_reset
  2182 ;;		_Read_b_eep
  2183 ;;		_SYSTEM_Initialize
  2184 ;;		_SerInit
  2185 ;;		_Sprint
  2186 ;;		_SprintRom
  2187 ;;		_Write_b_eep
  2188 ;;		___awdiv
  2189 ;;		___awmod
  2190 ;;		_check_msg
  2191 ;;		_init_ZIGBEE_nonbeacon
  2192 ;;		_lcd_clear
  2193 ;;		_lcd_off_cursor
  2194 ;;		_nonbeacon_PAN_coordinator_device
  2195 ;;		_pin_reset
  2196 ;;		_pin_wake
  2197 ;;		_set_PAN_ID
  2198 ;;		_set_TX_power
  2199 ;;		_set_WAKE_from_pin
  2200 ;;		_set_frame_format_filter
  2201 ;;		_set_long_address
  2202 ;;		_set_reception_mode
  2203 ;;		_set_short_address
  2204 ;;		_write_TX_normal_FIFO
  2205 ;; This function is called by:
  2206 ;;		Startup code after reset
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text0
  2211  010000                     __ptext0:
  2212                           	opt stack 0
  2213  010000                     _main:
  2214                           	opt stack 18
  2215                           
  2216                           ;2_April_TestMain.c: 174: Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_
      +                          ms(500);
  2217                           
  2218                           ;incstack = 0
  2219  010000  0E01               	movlw	1
  2220  010002  0101               	movlb	1	; () banked
  2221  010004  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2222  010006  0EF4               	movlw	244
  2223  010008  6FD8               	movwf	Delay_ms@time& (0+255),b
  2224  01000A  EC0C  F095         	call	_Delay_ms	;wreg free
  2225  01000E  0E01               	movlw	1
  2226  010010  0101               	movlb	1	; () banked
  2227  010012  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2228  010014  0EF4               	movlw	244
  2229  010016  6FD8               	movwf	Delay_ms@time& (0+255),b
  2230  010018  EC0C  F095         	call	_Delay_ms	;wreg free
  2231  01001C  0E01               	movlw	1
  2232  01001E  0101               	movlb	1	; () banked
  2233  010020  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2234  010022  0EF4               	movlw	244
  2235  010024  6FD8               	movwf	Delay_ms@time& (0+255),b
  2236  010026  EC0C  F095         	call	_Delay_ms	;wreg free
  2237  01002A  0E01               	movlw	1
  2238  01002C  0101               	movlb	1	; () banked
  2239  01002E  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2240  010030  0EF4               	movlw	244
  2241  010032  6FD8               	movwf	Delay_ms@time& (0+255),b
  2242  010034  EC0C  F095         	call	_Delay_ms	;wreg free
  2243  010038  0E01               	movlw	1
  2244  01003A  0101               	movlb	1	; () banked
  2245  01003C  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2246  01003E  0EF4               	movlw	244
  2247  010040  6FD8               	movwf	Delay_ms@time& (0+255),b
  2248  010042  EC0C  F095         	call	_Delay_ms	;wreg free
  2249                           
  2250                           ;2_April_TestMain.c: 176: SYSTEM_Initialize();
  2251  010046  EC6C  F095         	call	_SYSTEM_Initialize	;wreg free
  2252                           
  2253                           ;2_April_TestMain.c: 177: (INTCONbits.GIEH = 1);
  2254  01004A  8EF2               	bsf	intcon,7,c	;volatile
  2255                           
  2256                           ;2_April_TestMain.c: 178: (INTCONbits.GIEL = 1);
  2257  01004C  8CF2               	bsf	intcon,6,c	;volatile
  2258                           
  2259                           ;2_April_TestMain.c: 179: (INTCONbits.PEIE = 1);
  2260  01004E  8CF2               	bsf	intcon,6,c	;volatile
  2261                           
  2262                           ;2_April_TestMain.c: 180: Delay_ms(100);
  2263  010050  0E00               	movlw	0
  2264  010052  0101               	movlb	1	; () banked
  2265  010054  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2266  010056  0E64               	movlw	100
  2267  010058  6FD8               	movwf	Delay_ms@time& (0+255),b
  2268  01005A  EC0C  F095         	call	_Delay_ms	;wreg free
  2269                           
  2270                           ;2_April_TestMain.c: 181: LcdInit();
  2271  01005E  ECF2  F091         	call	_LcdInit	;wreg free
  2272                           
  2273                           ;2_April_TestMain.c: 182: Delay_ms(10);
  2274  010062  0E00               	movlw	0
  2275  010064  0101               	movlb	1	; () banked
  2276  010066  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2277  010068  0E0A               	movlw	10
  2278  01006A  6FD8               	movwf	Delay_ms@time& (0+255),b
  2279  01006C  EC0C  F095         	call	_Delay_ms	;wreg free
  2280                           
  2281                           ;2_April_TestMain.c: 183: lcd_off_cursor();
  2282  010070  EC9C  F095         	call	_lcd_off_cursor	;wreg free
  2283                           
  2284                           ;2_April_TestMain.c: 184: lcd_clear();
  2285  010074  ECA0  F095         	call	_lcd_clear	;wreg free
  2286                           
  2287                           ;2_April_TestMain.c: 185: LcdDisplay(0x80,"    philbrick     ");
  2288  010078  0E51               	movlw	low STR_1
  2289  01007A  0101               	movlb	1	; () banked
  2290  01007C  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2291  01007E  0EFF               	movlw	high STR_1
  2292  010080  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2293  010082  0E80               	movlw	128
  2294  010084  ECED  F092         	call	_LcdDisplay
  2295                           
  2296                           ;2_April_TestMain.c: 186: LcdDisplay(0xC0,"  Technologies    ");
  2297  010088  0E64               	movlw	low STR_2
  2298  01008A  0101               	movlb	1	; () banked
  2299  01008C  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2300  01008E  0EFF               	movlw	high STR_2
  2301  010090  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2302  010092  0EC0               	movlw	192
  2303  010094  ECED  F092         	call	_LcdDisplay
  2304                           
  2305                           ;2_April_TestMain.c: 187: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  2306  010098  0E01               	movlw	1
  2307  01009A  0101               	movlb	1	; () banked
  2308  01009C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2309  01009E  0E2C               	movlw	44
  2310  0100A0  6FD8               	movwf	Delayms@time& (0+255),b
  2311  0100A2  EC0D  F093         	call	_Delayms	;wreg free
  2312  0100A6  0E01               	movlw	1
  2313  0100A8  0101               	movlb	1	; () banked
  2314  0100AA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2315  0100AC  0E2C               	movlw	44
  2316  0100AE  6FD8               	movwf	Delayms@time& (0+255),b
  2317  0100B0  EC0D  F093         	call	_Delayms	;wreg free
  2318  0100B4  0E01               	movlw	1
  2319  0100B6  0101               	movlb	1	; () banked
  2320  0100B8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2321  0100BA  0E2C               	movlw	44
  2322  0100BC  6FD8               	movwf	Delayms@time& (0+255),b
  2323  0100BE  EC0D  F093         	call	_Delayms	;wreg free
  2324  0100C2  0E01               	movlw	1
  2325  0100C4  0101               	movlb	1	; () banked
  2326  0100C6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2327  0100C8  0E2C               	movlw	44
  2328  0100CA  6FD8               	movwf	Delayms@time& (0+255),b
  2329  0100CC  EC0D  F093         	call	_Delayms	;wreg free
  2330                           
  2331                           ;2_April_TestMain.c: 188: Delay_ms(10);
  2332  0100D0  0E00               	movlw	0
  2333  0100D2  0101               	movlb	1	; () banked
  2334  0100D4  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2335  0100D6  0E0A               	movlw	10
  2336  0100D8  6FD8               	movwf	Delay_ms@time& (0+255),b
  2337  0100DA  EC0C  F095         	call	_Delay_ms	;wreg free
  2338                           
  2339                           ;2_April_TestMain.c: 189: InitSPI();
  2340  0100DE  EC7A  F094         	call	_InitSPI	;wreg free
  2341                           
  2342                           ;2_April_TestMain.c: 190: Delay_ms(10);
  2343  0100E2  0E00               	movlw	0
  2344  0100E4  0101               	movlb	1	; () banked
  2345  0100E6  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  2346  0100E8  0E0A               	movlw	10
  2347  0100EA  6FD8               	movwf	Delay_ms@time& (0+255),b
  2348  0100EC  EC0C  F095         	call	_Delay_ms	;wreg free
  2349                           
  2350                           ;2_April_TestMain.c: 191: SerInit();
  2351  0100F0  EC6A  F091         	call	_SerInit	;wreg free
  2352                           
  2353                           ;2_April_TestMain.c: 192: pin_reset();
  2354  0100F4  EC9E  F094         	call	_pin_reset	;wreg free
  2355                           
  2356                           ;2_April_TestMain.c: 193: RF_reset();
  2357  0100F8  EC2E  F094         	call	_RF_reset	;wreg free
  2358                           
  2359                           ;2_April_TestMain.c: 194: set_WAKE_from_pin();
  2360  0100FC  ECFE  F094         	call	_set_WAKE_from_pin	;wreg free
  2361                           
  2362                           ;2_April_TestMain.c: 196: set_long_address(ADDRESS_long_2);
  2363  010100  0ED5               	movlw	low _ADDRESS_long_2
  2364  010102  0101               	movlb	1	; () banked
  2365  010104  6FDC               	movwf	set_long_address@address& (0+255),b
  2366  010106  0E00               	movlw	high _ADDRESS_long_2
  2367  010108  6FDD               	movwf	(set_long_address@address+1)& (0+255),b
  2368  01010A  ECA5  F093         	call	_set_long_address	;wreg free
  2369                           
  2370                           ;2_April_TestMain.c: 197: set_short_address(ADDRESS_short_2);
  2371  01010E  0EE7               	movlw	low _ADDRESS_short_2
  2372  010110  0101               	movlb	1	; () banked
  2373  010112  6FDC               	movwf	set_short_address@address& (0+255),b
  2374  010114  0E00               	movlw	high _ADDRESS_short_2
  2375  010116  6FDD               	movwf	(set_short_address@address+1)& (0+255),b
  2376  010118  ECD7  F093         	call	_set_short_address	;wreg free
  2377                           
  2378                           ;2_April_TestMain.c: 198: set_PAN_ID(PAN_ID_2);
  2379  01011C  0EE5               	movlw	low _PAN_ID_2
  2380  01011E  0101               	movlb	1	; () banked
  2381  010120  6FDC               	movwf	set_PAN_ID@address& (0+255),b
  2382  010122  0E00               	movlw	high _PAN_ID_2
  2383  010124  6FDD               	movwf	(set_PAN_ID@address+1)& (0+255),b
  2384  010126  ECEE  F093         	call	_set_PAN_ID	;wreg free
  2385                           
  2386                           ;2_April_TestMain.c: 200: init_ZIGBEE_nonbeacon();
  2387  01012A  EC56  F094         	call	_init_ZIGBEE_nonbeacon	;wreg free
  2388                           
  2389                           ;2_April_TestMain.c: 202: nonbeacon_PAN_coordinator_device();
  2390  01012E  EC4D  F093         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  2391                           
  2392                           ;2_April_TestMain.c: 203: set_TX_power(31);
  2393  010132  0E1F               	movlw	31
  2394  010134  ECAB  F092         	call	_set_TX_power
  2395                           
  2396                           ;2_April_TestMain.c: 204: set_frame_format_filter(1);
  2397  010138  0E01               	movlw	1
  2398  01013A  ECA8  F08E         	call	_set_frame_format_filter
  2399                           
  2400                           ;2_April_TestMain.c: 205: set_reception_mode(1);
  2401  01013E  0E01               	movlw	1
  2402  010140  ECCA  F090         	call	_set_reception_mode
  2403                           
  2404                           ;2_April_TestMain.c: 206: pin_wake();
  2405  010144  EC5A  F095         	call	_pin_wake	;wreg free
  2406                           
  2407                           ;2_April_TestMain.c: 207: ds = 10;
  2408  010148  0E0A               	movlw	10
  2409  01014A  6E01               	movwf	_ds,c
  2410                           
  2411                           ;2_April_TestMain.c: 208: Module_Init();
  2412  01014C  EC02  F091         	call	_Module_Init	;wreg free
  2413  010150                     
  2414                           ;2_April_TestMain.c: 222: for(i=0;i<11;i++){
  2415  010150  0E00               	movlw	0
  2416  010152  0100               	movlb	0	; () banked
  2417  010154  6FB0               	movwf	_i& (0+255),b
  2418  010156                     l6739:
  2419                           
  2420                           ; BSR set to: 0
  2421  010156  0E0A               	movlw	10
  2422  010158  65B0               	cpfsgt	_i& (0+255),b
  2423  01015A  D001               	goto	l937
  2424  01015C  D018               	goto	u3880
  2425  01015E                     l937:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;2_April_TestMain.c: 223: SMSsender[i]=SMSread[i];
  2429                           
  2430                           ; BSR set to: 0
  2431  01015E  51B0               	movf	_i& (0+255),w,b
  2432  010160  0D01               	mullw	1
  2433  010162  0E4D               	movlw	low _SMSread
  2434  010164  24F3               	addwf	prodl,w,c
  2435  010166  6EF6               	movwf	tblptrl,c
  2436  010168  0EFD               	movlw	high _SMSread
  2437  01016A  20F4               	addwfc	prodh,w,c
  2438  01016C  6EF7               	movwf	tblptrh,c
  2439  01016E                     	if	1	;There are 3 active tblptr bytes
  2440  01016E  6AF8               	clrf	tblptru,c
  2441  010170  0E00               	movlw	low (__mediumconst shr (0+16))
  2442  010172  22F8               	addwfc	tblptru,f,c
  2443  010174                     	endif
  2444  010174  51B0               	movf	_i& (0+255),w,b
  2445  010176  0D01               	mullw	1
  2446  010178  0ECB               	movlw	low _SMSsender
  2447  01017A  24F3               	addwf	prodl,w,c
  2448  01017C  6ED9               	movwf	fsr2l,c
  2449  01017E  0E01               	movlw	high _SMSsender
  2450  010180  20F4               	addwfc	prodh,w,c
  2451  010182  6EDA               	movwf	fsr2h,c
  2452  010184  0008               	tblrd		*
  2453  010186  CFF5 FFDF          	movff	tablat,indf2
  2454                           
  2455                           ; BSR set to: 0
  2456  01018A  2BB0               	incf	_i& (0+255),f,b
  2457  01018C  D7E4               	goto	l6739
  2458  01018E                     u3880:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;2_April_TestMain.c: 224: }
  2462                           ;2_April_TestMain.c: 225: LcdDisplay(0x80,"Waiting for SMS    ");
  2463                           
  2464                           ; BSR set to: 0
  2465  01018E  0EB1               	movlw	low STR_3
  2466  010190  0101               	movlb	1	; () banked
  2467  010192  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2468  010194  0EFE               	movlw	high STR_3
  2469  010196  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2470  010198  0E80               	movlw	128
  2471  01019A  ECED  F092         	call	_LcdDisplay
  2472                           
  2473                           ;2_April_TestMain.c: 226: LcdDisplay(0xC0,"                   ");
  2474  01019E  0E11               	movlw	low STR_4
  2475  0101A0  0101               	movlb	1	; () banked
  2476  0101A2  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2477  0101A4  0EFE               	movlw	high STR_4
  2478  0101A6  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2479  0101A8  0EC0               	movlw	192
  2480  0101AA  ECED  F092         	call	_LcdDisplay
  2481                           
  2482                           ;2_April_TestMain.c: 228: WaitForReceive = 1;
  2483  0101AE  0E01               	movlw	1
  2484  0101B0  0100               	movlb	0	; () banked
  2485  0101B2  6FA5               	movwf	_WaitForReceive& (0+255),b
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;2_April_TestMain.c: 229: id=0;
  2489  0101B4  0E00               	movlw	0
  2490  0101B6  6E03               	movwf	_id,c
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;2_April_TestMain.c: 230: RXcounter = 16;
  2494  0101B8  0E10               	movlw	16
  2495  0101BA  6E02               	movwf	_RXcounter,c
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;2_April_TestMain.c: 231: Delayms(1);
  2499  0101BC  0E00               	movlw	0
  2500  0101BE  0101               	movlb	1	; () banked
  2501  0101C0  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2502  0101C2  0E01               	movlw	1
  2503  0101C4  6FD8               	movwf	Delayms@time& (0+255),b
  2504  0101C6  EC0D  F093         	call	_Delayms	;wreg free
  2505                           
  2506                           ;2_April_TestMain.c: 232: if(F_WaitForReceive==1){
  2507  0101CA  0100               	movlb	0	; () banked
  2508  0101CC  05A4               	decf	_F_WaitForReceive& (0+255),w,b
  2509  0101CE  A4D8               	btfss	status,2,c
  2510  0101D0  D3EA               	goto	l968
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;2_April_TestMain.c: 233: F_WaitForReceive=0;
  2514  0101D2  0E00               	movlw	0
  2515  0101D4  6FA4               	movwf	_F_WaitForReceive& (0+255),b
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;2_April_TestMain.c: 234: PORTAbits.RA0=0;
  2519  0101D6  9080               	bcf	3968,0,c	;volatile
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;2_April_TestMain.c: 235: LcdDisplay(0x80,"One New Message    ");
  2523  0101D8  0EC5               	movlw	low STR_5
  2524  0101DA  0101               	movlb	1	; () banked
  2525  0101DC  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2526  0101DE  0EFE               	movlw	high STR_5
  2527  0101E0  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2528  0101E2  0E80               	movlw	128
  2529  0101E4  ECED  F092         	call	_LcdDisplay
  2530                           
  2531                           ;2_April_TestMain.c: 236: Delayms(100); Delayms(100);Delayms(100);
  2532  0101E8  0E00               	movlw	0
  2533  0101EA  0101               	movlb	1	; () banked
  2534  0101EC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2535  0101EE  0E64               	movlw	100
  2536  0101F0  6FD8               	movwf	Delayms@time& (0+255),b
  2537  0101F2  EC0D  F093         	call	_Delayms	;wreg free
  2538  0101F6  0E00               	movlw	0
  2539  0101F8  0101               	movlb	1	; () banked
  2540  0101FA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2541  0101FC  0E64               	movlw	100
  2542  0101FE  6FD8               	movwf	Delayms@time& (0+255),b
  2543  010200  EC0D  F093         	call	_Delayms	;wreg free
  2544  010204  0E00               	movlw	0
  2545  010206  0101               	movlb	1	; () banked
  2546  010208  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2547  01020A  0E64               	movlw	100
  2548  01020C  6FD8               	movwf	Delayms@time& (0+255),b
  2549  01020E  EC0D  F093         	call	_Delayms	;wreg free
  2550                           
  2551                           ;2_April_TestMain.c: 237: SMSsender[8]=RxBuffer[14];
  2552  010212  C20E  F1D3         	movff	_RxBuffer+14,_SMSsender+8
  2553                           
  2554                           ;2_April_TestMain.c: 238: ClearRxBytes();
  2555  010216  EC05  F094         	call	_ClearRxBytes	;wreg free
  2556                           
  2557                           ;2_April_TestMain.c: 239: WaitForReceive = 1;
  2558  01021A  0E01               	movlw	1
  2559  01021C  0100               	movlb	0	; () banked
  2560  01021E  6FA5               	movwf	_WaitForReceive& (0+255),b
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;2_April_TestMain.c: 240: id=0;
  2564  010220  0E00               	movlw	0
  2565  010222  6E03               	movwf	_id,c
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;2_April_TestMain.c: 241: RXcounter =90;
  2569  010224  0E5A               	movlw	90
  2570  010226  6E02               	movwf	_RXcounter,c
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;2_April_TestMain.c: 242: Delayms(1);
  2574  010228  0E00               	movlw	0
  2575  01022A  0101               	movlb	1	; () banked
  2576  01022C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2577  01022E  0E01               	movlw	1
  2578  010230  6FD8               	movwf	Delayms@time& (0+255),b
  2579  010232  EC0D  F093         	call	_Delayms	;wreg free
  2580                           
  2581                           ;2_April_TestMain.c: 243: Sprint(&SMSsender,10);
  2582  010236  0ECB               	movlw	low _SMSsender
  2583  010238  0101               	movlb	1	; () banked
  2584  01023A  6FDE               	movwf	Sprint@datas& (0+255),b
  2585  01023C  0E01               	movlw	high _SMSsender
  2586  01023E  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
  2587  010240  0E0A               	movlw	10
  2588  010242  6FE0               	movwf	Sprint@length& (0+255),b
  2589  010244  EC36  F091         	call	_Sprint	;wreg free
  2590  010248  0100               	movlb	0	; () banked
  2591  01024A  51A5               	movf	_WaitForReceive& (0+255),w,b
  2592  01024C  A4D8               	btfss	status,2,c
  2593  01024E  D7FC               	goto	l941
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;2_April_TestMain.c: 245: for(i=0;i<RXcounter;i++){
  2597                           
  2598                           ; BSR set to: 0
  2599  010250  0E00               	movlw	0
  2600  010252  6FB0               	movwf	_i& (0+255),b
  2601  010254  D02B               	goto	l943
  2602  010256                     
  2603                           ; BSR set to: 0
  2604                           ;2_April_TestMain.c: 246: if(RxBuffer[i]=='$'){
  2605                           
  2606                           ; BSR set to: 0
  2607  010256  51B0               	movf	_i& (0+255),w,b
  2608  010258  0D01               	mullw	1
  2609  01025A  0E00               	movlw	low _RxBuffer
  2610  01025C  24F3               	addwf	prodl,w,c
  2611  01025E  6ED9               	movwf	fsr2l,c
  2612  010260  0E02               	movlw	high _RxBuffer
  2613  010262  20F4               	addwfc	prodh,w,c
  2614  010264  6EDA               	movwf	fsr2h,c
  2615  010266  0E24               	movlw	36
  2616  010268  18DE               	xorwf	postinc2,w,c
  2617  01026A  A4D8               	btfss	status,2,c
  2618  01026C  D01D               	goto	l945
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;2_April_TestMain.c: 247: for(g=i,t=0;g<RXcounter,t<15;g++,t++){
  2622  01026E  C0B0  F09C         	movff	_i,_g
  2623                           
  2624                           ; BSR set to: 0
  2625  010272  0E00               	movlw	0
  2626  010274  6F9B               	movwf	_t& (0+255),b
  2627  010276  D014               	goto	l946
  2628  010278                     
  2629                           ; BSR set to: 0
  2630                           ;2_April_TestMain.c: 248: SMS[t]=RxBuffer[g];
  2631                           
  2632                           ; BSR set to: 0
  2633  010278  519C               	movf	_g& (0+255),w,b
  2634  01027A  0D01               	mullw	1
  2635  01027C  0E00               	movlw	low _RxBuffer
  2636  01027E  24F3               	addwf	prodl,w,c
  2637  010280  6ED9               	movwf	fsr2l,c
  2638  010282  0E02               	movlw	high _RxBuffer
  2639  010284  20F4               	addwfc	prodh,w,c
  2640  010286  6EDA               	movwf	fsr2h,c
  2641  010288  519B               	movf	_t& (0+255),w,b
  2642  01028A  0D01               	mullw	1
  2643  01028C  0E72               	movlw	low _SMS
  2644  01028E  24F3               	addwf	prodl,w,c
  2645  010290  6EE1               	movwf	fsr1l,c
  2646  010292  0E00               	movlw	high _SMS
  2647  010294  20F4               	addwfc	prodh,w,c
  2648  010296  6EE2               	movwf	fsr1h,c
  2649  010298  CFDF FFE7          	movff	indf2,indf1
  2650                           
  2651                           ; BSR set to: 0
  2652  01029C  2B9C               	incf	_g& (0+255),f,b
  2653                           
  2654                           ; BSR set to: 0
  2655  01029E  2B9B               	incf	_t& (0+255),f,b
  2656  0102A0                     l946:
  2657                           
  2658                           ; BSR set to: 0
  2659                           
  2660                           ; BSR set to: 0
  2661  0102A0  0E0E               	movlw	14
  2662  0102A2  659B               	cpfsgt	_t& (0+255),b
  2663  0102A4  D7E9               	goto	l947
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;2_April_TestMain.c: 249: }
  2667                           ;2_April_TestMain.c: 250: __nop();
  2668  0102A6  F000               	nop	
  2669  0102A8                     l945:
  2670  0102A8  0100               	movlb	0	; () banked
  2671  0102AA  2BB0               	incf	_i& (0+255),f,b
  2672  0102AC                     l943:
  2673                           
  2674                           ; BSR set to: 0
  2675                           
  2676                           ; BSR set to: 0
  2677  0102AC  5002               	movf	_RXcounter,w,c
  2678  0102AE  5DB0               	subwf	_i& (0+255),w,b
  2679  0102B0  A0D8               	btfss	status,0,c
  2680  0102B2  D7D1               	goto	l944
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;2_April_TestMain.c: 251: }
  2684                           ;2_April_TestMain.c: 252: }
  2685                           ;2_April_TestMain.c: 253: __nop();
  2686  0102B4  F000               	nop	
  2687                           
  2688                           ;2_April_TestMain.c: 257: PORTAbits.RA0=1;
  2689  0102B6  8080               	bsf	3968,0,c	;volatile
  2690                           
  2691                           ;2_April_TestMain.c: 258: LcdDisplay(0x80,"Plz Wait...        ");
  2692  0102B8  0E75               	movlw	low STR_6
  2693  0102BA  0101               	movlb	1	; () banked
  2694  0102BC  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2695  0102BE  0EFE               	movlw	high STR_6
  2696  0102C0  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2697  0102C2  0E80               	movlw	128
  2698  0102C4  ECED  F092         	call	_LcdDisplay
  2699                           
  2700                           ;2_April_TestMain.c: 259: LcdDisplay(0xC0,"                   ");
  2701  0102C8  0E11               	movlw	low STR_4
  2702  0102CA  0101               	movlb	1	; () banked
  2703  0102CC  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2704  0102CE  0EFE               	movlw	high STR_4
  2705  0102D0  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2706  0102D2  0EC0               	movlw	192
  2707  0102D4  ECED  F092         	call	_LcdDisplay
  2708                           
  2709                           ;2_April_TestMain.c: 260: Delayms(100); Delayms(100);Delayms(100);
  2710  0102D8  0E00               	movlw	0
  2711  0102DA  0101               	movlb	1	; () banked
  2712  0102DC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2713  0102DE  0E64               	movlw	100
  2714  0102E0  6FD8               	movwf	Delayms@time& (0+255),b
  2715  0102E2  EC0D  F093         	call	_Delayms	;wreg free
  2716  0102E6  0E00               	movlw	0
  2717  0102E8  0101               	movlb	1	; () banked
  2718  0102EA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2719  0102EC  0E64               	movlw	100
  2720  0102EE  6FD8               	movwf	Delayms@time& (0+255),b
  2721  0102F0  EC0D  F093         	call	_Delayms	;wreg free
  2722  0102F4  0E00               	movlw	0
  2723  0102F6  0101               	movlb	1	; () banked
  2724  0102F8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2725  0102FA  0E64               	movlw	100
  2726  0102FC  6FD8               	movwf	Delayms@time& (0+255),b
  2727  0102FE  EC0D  F093         	call	_Delayms	;wreg free
  2728                           
  2729                           ;2_April_TestMain.c: 261: Delayms(100); Delayms(100);Delayms(100);
  2730  010302  0E00               	movlw	0
  2731  010304  0101               	movlb	1	; () banked
  2732  010306  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2733  010308  0E64               	movlw	100
  2734  01030A  6FD8               	movwf	Delayms@time& (0+255),b
  2735  01030C  EC0D  F093         	call	_Delayms	;wreg free
  2736  010310  0E00               	movlw	0
  2737  010312  0101               	movlb	1	; () banked
  2738  010314  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2739  010316  0E64               	movlw	100
  2740  010318  6FD8               	movwf	Delayms@time& (0+255),b
  2741  01031A  EC0D  F093         	call	_Delayms	;wreg free
  2742  01031E  0E00               	movlw	0
  2743  010320  0101               	movlb	1	; () banked
  2744  010322  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2745  010324  0E64               	movlw	100
  2746  010326  6FD8               	movwf	Delayms@time& (0+255),b
  2747  010328  EC0D  F093         	call	_Delayms	;wreg free
  2748                           
  2749                           ;2_April_TestMain.c: 262: ds = 10;
  2750  01032C  0E0A               	movlw	10
  2751  01032E  6E01               	movwf	_ds,c
  2752                           
  2753                           ;2_April_TestMain.c: 263: WaitForReceive = 1;
  2754  010330  0E01               	movlw	1
  2755  010332  0100               	movlb	0	; () banked
  2756  010334  6FA5               	movwf	_WaitForReceive& (0+255),b
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;2_April_TestMain.c: 264: id=0;
  2760  010336  0E00               	movlw	0
  2761  010338  6E03               	movwf	_id,c
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;2_April_TestMain.c: 265: ClearRxBytes();
  2765  01033A  EC05  F094         	call	_ClearRxBytes	;wreg free
  2766                           
  2767                           ;2_April_TestMain.c: 266: RXcounter = 5;
  2768  01033E  0E05               	movlw	5
  2769  010340  6E02               	movwf	_RXcounter,c
  2770                           
  2771                           ;2_April_TestMain.c: 267: SprintRom(&Delet_All_SMS,12);
  2772  010342  0ED8               	movlw	low _Delet_All_SMS
  2773  010344  0101               	movlb	1	; () banked
  2774  010346  6FDE               	movwf	SprintRom@datas& (0+255),b
  2775  010348  0EFD               	movlw	high _Delet_All_SMS
  2776  01034A  6FDF               	movwf	(SprintRom@datas+1)& (0+255),b
  2777  01034C  0E0C               	movlw	12
  2778  01034E  6FE0               	movwf	SprintRom@length& (0+255),b
  2779  010350  EC9D  F091         	call	_SprintRom	;wreg free
  2780  010354  0100               	movlb	0	; () banked
  2781  010356  51A5               	movf	_WaitForReceive& (0+255),w,b
  2782  010358  A4D8               	btfss	status,2,c
  2783  01035A  D7FC               	goto	l951
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;2_April_TestMain.c: 269: LcdDisplay(0x80,"MSG Deleted...     ");
  2787                           
  2788                           ; BSR set to: 0
  2789  01035C  0E9D               	movlw	low STR_8
  2790  01035E  0101               	movlb	1	; () banked
  2791  010360  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2792  010362  0EFE               	movlw	high STR_8
  2793  010364  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2794  010366  0E80               	movlw	128
  2795  010368  ECED  F092         	call	_LcdDisplay
  2796                           
  2797                           ;2_April_TestMain.c: 270: LcdDisplay(0xC0,"                   ");
  2798  01036C  0E11               	movlw	low STR_4
  2799  01036E  0101               	movlb	1	; () banked
  2800  010370  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2801  010372  0EFE               	movlw	high STR_4
  2802  010374  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2803  010376  0EC0               	movlw	192
  2804  010378  ECED  F092         	call	_LcdDisplay
  2805                           
  2806                           ;2_April_TestMain.c: 271: Delayms(100); Delayms(100);Delayms(100);
  2807  01037C  0E00               	movlw	0
  2808  01037E  0101               	movlb	1	; () banked
  2809  010380  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2810  010382  0E64               	movlw	100
  2811  010384  6FD8               	movwf	Delayms@time& (0+255),b
  2812  010386  EC0D  F093         	call	_Delayms	;wreg free
  2813  01038A  0E00               	movlw	0
  2814  01038C  0101               	movlb	1	; () banked
  2815  01038E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2816  010390  0E64               	movlw	100
  2817  010392  6FD8               	movwf	Delayms@time& (0+255),b
  2818  010394  EC0D  F093         	call	_Delayms	;wreg free
  2819  010398  0E00               	movlw	0
  2820  01039A  0101               	movlb	1	; () banked
  2821  01039C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2822  01039E  0E64               	movlw	100
  2823  0103A0  6FD8               	movwf	Delayms@time& (0+255),b
  2824  0103A2  EC0D  F093         	call	_Delayms	;wreg free
  2825                           
  2826                           ;2_April_TestMain.c: 272: Delayms(100); Delayms(100);Delayms(100);
  2827  0103A6  0E00               	movlw	0
  2828  0103A8  0101               	movlb	1	; () banked
  2829  0103AA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2830  0103AC  0E64               	movlw	100
  2831  0103AE  6FD8               	movwf	Delayms@time& (0+255),b
  2832  0103B0  EC0D  F093         	call	_Delayms	;wreg free
  2833  0103B4  0E00               	movlw	0
  2834  0103B6  0101               	movlb	1	; () banked
  2835  0103B8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2836  0103BA  0E64               	movlw	100
  2837  0103BC  6FD8               	movwf	Delayms@time& (0+255),b
  2838  0103BE  EC0D  F093         	call	_Delayms	;wreg free
  2839  0103C2  0E00               	movlw	0
  2840  0103C4  0101               	movlb	1	; () banked
  2841  0103C6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2842  0103C8  0E64               	movlw	100
  2843  0103CA  6FD8               	movwf	Delayms@time& (0+255),b
  2844  0103CC  EC0D  F093         	call	_Delayms	;wreg free
  2845                           
  2846                           ;2_April_TestMain.c: 273: Frame=check_msg();
  2847  0103D0  EC00  F089         	call	_check_msg	;wreg free
  2848  0103D4  0100               	movlb	0	; () banked
  2849  0103D6  6F9D               	movwf	_Frame& (0+255),b
  2850                           
  2851                           ;2_April_TestMain.c: 274: switch(Frame){
  2852  0103D8  D28B               	goto	l953
  2853  0103DA                     
  2854                           ; BSR set to: 0
  2855                           ;2_April_TestMain.c: 276: LcdDisplay(0x80,"Msg 1 Received...  ");
  2856                           
  2857                           ; BSR set to: 0
  2858  0103DA  0ED9               	movlw	low STR_10
  2859  0103DC  0101               	movlb	1	; () banked
  2860  0103DE  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2861  0103E0  0EFE               	movlw	high STR_10
  2862  0103E2  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2863  0103E4  0E80               	movlw	128
  2864  0103E6  ECED  F092         	call	_LcdDisplay
  2865                           
  2866                           ;2_April_TestMain.c: 277: LcdDisplay(0xC0,"                   ");
  2867  0103EA  0E11               	movlw	low STR_4
  2868  0103EC  0101               	movlb	1	; () banked
  2869  0103EE  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2870  0103F0  0EFE               	movlw	high STR_4
  2871  0103F2  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2872  0103F4  0EC0               	movlw	192
  2873  0103F6  ECED  F092         	call	_LcdDisplay
  2874                           
  2875                           ;2_April_TestMain.c: 278: data_TX_normal_FIFO[13]='$';
  2876  0103FA  0E24               	movlw	36
  2877  0103FC  0100               	movlb	0	; () banked
  2878  0103FE  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;2_April_TestMain.c: 279: data_TX_normal_FIFO[14]='M';
  2882  010400  0E4D               	movlw	77
  2883  010402  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;2_April_TestMain.c: 280: data_TX_normal_FIFO[15]='1';
  2887  010404  0E31               	movlw	49
  2888  010406  D222               	goto	L3
  2889  010408                     
  2890                           ; BSR set to: 0
  2891                           ;2_April_TestMain.c: 284: LcdDisplay(0x80,"Msg 2 Received...  ");
  2892                           
  2893                           ; BSR set to: 0
  2894  010408  0EED               	movlw	low STR_12
  2895  01040A  0101               	movlb	1	; () banked
  2896  01040C  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2897  01040E  0EFE               	movlw	high STR_12
  2898  010410  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2899  010412  0E80               	movlw	128
  2900  010414  ECED  F092         	call	_LcdDisplay
  2901                           
  2902                           ;2_April_TestMain.c: 285: data_TX_normal_FIFO[13]='$';
  2903  010418  0E24               	movlw	36
  2904  01041A  0100               	movlb	0	; () banked
  2905  01041C  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;2_April_TestMain.c: 286: data_TX_normal_FIFO[14]='M';
  2909  01041E  0E4D               	movlw	77
  2910  010420  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;2_April_TestMain.c: 287: data_TX_normal_FIFO[15]='2';
  2914  010422  0E32               	movlw	50
  2915  010424  D213               	goto	L3
  2916  010426                     
  2917                           ; BSR set to: 0
  2918                           ;2_April_TestMain.c: 292: LcdDisplay(0x80,"Msg 3 Received...  ");
  2919                           
  2920                           ; BSR set to: 0
  2921  010426  0E01               	movlw	low STR_13
  2922  010428  0101               	movlb	1	; () banked
  2923  01042A  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2924  01042C  0EFF               	movlw	high STR_13
  2925  01042E  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2926  010430  0E80               	movlw	128
  2927  010432  ECED  F092         	call	_LcdDisplay
  2928                           
  2929                           ;2_April_TestMain.c: 293: data_TX_normal_FIFO[13]='$';
  2930  010436  0E24               	movlw	36
  2931  010438  0100               	movlb	0	; () banked
  2932  01043A  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;2_April_TestMain.c: 294: data_TX_normal_FIFO[14]='M';
  2936  01043C  0E4D               	movlw	77
  2937  01043E  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;2_April_TestMain.c: 295: data_TX_normal_FIFO[15]='3';
  2941  010440  0E33               	movlw	51
  2942  010442  D204               	goto	L3
  2943  010444                     
  2944                           ; BSR set to: 0
  2945                           ;2_April_TestMain.c: 298: LcdDisplay(0x80,"Msg 4 Received...  ");
  2946                           
  2947                           ; BSR set to: 0
  2948  010444  0E15               	movlw	low STR_14
  2949  010446  0101               	movlb	1	; () banked
  2950  010448  6FDF               	movwf	LcdDisplay@string& (0+255),b
  2951  01044A  0EFF               	movlw	high STR_14
  2952  01044C  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  2953  01044E  0E80               	movlw	128
  2954  010450  ECED  F092         	call	_LcdDisplay
  2955                           
  2956                           ;2_April_TestMain.c: 299: Delayms(100); Delayms(100);Delayms(100);
  2957  010454  0E00               	movlw	0
  2958  010456  0101               	movlb	1	; () banked
  2959  010458  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2960  01045A  0E64               	movlw	100
  2961  01045C  6FD8               	movwf	Delayms@time& (0+255),b
  2962  01045E  EC0D  F093         	call	_Delayms	;wreg free
  2963  010462  0E00               	movlw	0
  2964  010464  0101               	movlb	1	; () banked
  2965  010466  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2966  010468  0E64               	movlw	100
  2967  01046A  6FD8               	movwf	Delayms@time& (0+255),b
  2968  01046C  EC0D  F093         	call	_Delayms	;wreg free
  2969  010470  0E00               	movlw	0
  2970  010472  0101               	movlb	1	; () banked
  2971  010474  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2972  010476  0E64               	movlw	100
  2973  010478  6FD8               	movwf	Delayms@time& (0+255),b
  2974  01047A  EC0D  F093         	call	_Delayms	;wreg free
  2975                           
  2976                           ;2_April_TestMain.c: 300: Delayms(100); Delayms(100);Delayms(100);
  2977  01047E  0E00               	movlw	0
  2978  010480  0101               	movlb	1	; () banked
  2979  010482  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2980  010484  0E64               	movlw	100
  2981  010486  6FD8               	movwf	Delayms@time& (0+255),b
  2982  010488  EC0D  F093         	call	_Delayms	;wreg free
  2983  01048C  0E00               	movlw	0
  2984  01048E  0101               	movlb	1	; () banked
  2985  010490  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2986  010492  0E64               	movlw	100
  2987  010494  6FD8               	movwf	Delayms@time& (0+255),b
  2988  010496  EC0D  F093         	call	_Delayms	;wreg free
  2989  01049A  0E00               	movlw	0
  2990  01049C  0101               	movlb	1	; () banked
  2991  01049E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  2992  0104A0  0E64               	movlw	100
  2993  0104A2  6FD8               	movwf	Delayms@time& (0+255),b
  2994  0104A4  EC0D  F093         	call	_Delayms	;wreg free
  2995                           
  2996                           ;2_April_TestMain.c: 301: Delayms(100); Delayms(100);Delayms(100);
  2997  0104A8  0E00               	movlw	0
  2998  0104AA  0101               	movlb	1	; () banked
  2999  0104AC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3000  0104AE  0E64               	movlw	100
  3001  0104B0  6FD8               	movwf	Delayms@time& (0+255),b
  3002  0104B2  EC0D  F093         	call	_Delayms	;wreg free
  3003  0104B6  0E00               	movlw	0
  3004  0104B8  0101               	movlb	1	; () banked
  3005  0104BA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3006  0104BC  0E64               	movlw	100
  3007  0104BE  6FD8               	movwf	Delayms@time& (0+255),b
  3008  0104C0  EC0D  F093         	call	_Delayms	;wreg free
  3009  0104C4  0E00               	movlw	0
  3010  0104C6  0101               	movlb	1	; () banked
  3011  0104C8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3012  0104CA  0E64               	movlw	100
  3013  0104CC  6FD8               	movwf	Delayms@time& (0+255),b
  3014  0104CE  EC0D  F093         	call	_Delayms	;wreg free
  3015                           
  3016                           ;2_April_TestMain.c: 302: Send_ID=ID_Conversion();
  3017  0104D2  EC08  F08E         	call	_ID_Conversion	;wreg free
  3018  0104D6  0101               	movlb	1	; () banked
  3019  0104D8  6FE8               	movwf	??_main& (0+255),b
  3020  0104DA  51E8               	movf	??_main& (0+255),w,b
  3021  0104DC  0100               	movlb	0	; () banked
  3022  0104DE  6F8B               	movwf	_Send_ID& (0+255),b
  3023  0104E0  6B8C               	clrf	(_Send_ID+1)& (0+255),b
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;2_April_TestMain.c: 303: if(Send_ID == Read_b_eep(Send_ID)){
  3027  0104E2  C08B  F1D8         	movff	_Send_ID,Read_b_eep@badd
  3028  0104E6  C08C  F1D9         	movff	_Send_ID+1,Read_b_eep@badd+1
  3029  0104EA  EC75  F095         	call	_Read_b_eep	;wreg free
  3030  0104EE  0101               	movlb	1	; () banked
  3031  0104F0  6FE8               	movwf	??_main& (0+255),b
  3032  0104F2  6BE9               	clrf	(??_main+1)& (0+255),b
  3033  0104F4  0100               	movlb	0	; () banked
  3034  0104F6  518B               	movf	_Send_ID& (0+255),w,b
  3035  0104F8  0101               	movlb	1	; () banked
  3036  0104FA  19E8               	xorwf	??_main& (0+255),w,b
  3037  0104FC  E105               	bnz	u3951
  3038  0104FE  0100               	movlb	0	; () banked
  3039  010500  518C               	movf	(_Send_ID+1)& (0+255),w,b
  3040  010502  0101               	movlb	1	; () banked
  3041  010504  19E9               	xorwf	(??_main+1)& (0+255),w,b
  3042  010506  A4D8               	btfss	status,2,c
  3043  010508                     u3951:
  3044  010508  D141               	goto	l959
  3045                           
  3046                           ; BSR set to: 1
  3047                           ;2_April_TestMain.c: 305: data_TX_normal_FIFO[13]='$';
  3048  01050A  0E24               	movlw	36
  3049  01050C  0100               	movlb	0	; () banked
  3050  01050E  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  3051                           
  3052                           ;2_April_TestMain.c: 306: data_TX_normal_FIFO[14]='L';
  3053  010510  0E4C               	movlw	76
  3054  010512  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;2_April_TestMain.c: 307: data_TX_normal_FIFO[15]=Send_ID;
  3058  010514  C08B  F06F         	movff	_Send_ID,_data_TX_normal_FIFO+15
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;2_April_TestMain.c: 308: lcd_clear();
  3062  010518  ECA0  F095         	call	_lcd_clear	;wreg free
  3063                           
  3064                           ;2_April_TestMain.c: 309: if(Store_DATA[0]<10 && Store_DATA[0]>=1){
  3065  01051C  0E0A               	movlw	10
  3066  01051E  0100               	movlb	0	; () banked
  3067  010520  6181               	cpfslt	_Store_DATA& (0+255),b
  3068  010522  D03D               	goto	l960
  3069                           
  3070                           ; BSR set to: 0
  3071  010524  5181               	movf	_Store_DATA& (0+255),w,b
  3072  010526  B4D8               	btfsc	status,2,c
  3073  010528  D03A               	goto	l960
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;2_April_TestMain.c: 310: Store_DATA[0]+=0x30;
  3077  01052A  0E30               	movlw	48
  3078  01052C  2781               	addwf	_Store_DATA& (0+255),f,b
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;2_April_TestMain.c: 311: Emeregency[3]=Store_DATA[0];
  3082  01052E  C081  F16D         	movff	_Store_DATA,_Emeregency+3
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;2_April_TestMain.c: 312: lcd_clear();
  3086  010532  ECA0  F095         	call	_lcd_clear	;wreg free
  3087                           
  3088                           ;2_April_TestMain.c: 313: LcdDisplay(0x80,"  ID    is in ");
  3089  010536  0EEF               	movlw	low STR_15
  3090  010538  0101               	movlb	1	; () banked
  3091  01053A  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3092  01053C  0EFF               	movlw	high STR_15
  3093  01053E  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3094  010540  0E80               	movlw	128
  3095  010542  ECED  F092         	call	_LcdDisplay
  3096                           
  3097                           ;2_April_TestMain.c: 314: LcdCmd(0x85);
  3098  010546  0E85               	movlw	133
  3099  010548  ECD0  F094         	call	_LcdCmd
  3100                           
  3101                           ;2_April_TestMain.c: 315: LcdData(Emeregency[3]);
  3102  01054C  0101               	movlb	1	; () banked
  3103  01054E  516D               	movf	(_Emeregency+3)& (0+255),w,b
  3104  010550  ECC0  F094         	call	_LcdData
  3105                           
  3106                           ;2_April_TestMain.c: 316: LcdDisplay(0xC0,"Stored in Device");
  3107  010554  0EBF               	movlw	low STR_16
  3108  010556  0101               	movlb	1	; () banked
  3109  010558  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3110  01055A  0EFF               	movlw	high STR_16
  3111  01055C  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3112  01055E  0EC0               	movlw	192
  3113  010560  ECED  F092         	call	_LcdDisplay
  3114                           
  3115                           ;2_April_TestMain.c: 317: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  3116  010564  0E01               	movlw	1
  3117  010566  0101               	movlb	1	; () banked
  3118  010568  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3119  01056A  0E2C               	movlw	44
  3120  01056C  6FD8               	movwf	Delayms@time& (0+255),b
  3121  01056E  EC0D  F093         	call	_Delayms	;wreg free
  3122  010572  0E01               	movlw	1
  3123  010574  0101               	movlb	1	; () banked
  3124  010576  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3125  010578  0E2C               	movlw	44
  3126  01057A  6FD8               	movwf	Delayms@time& (0+255),b
  3127  01057C  EC0D  F093         	call	_Delayms	;wreg free
  3128  010580  0E01               	movlw	1
  3129  010582  0101               	movlb	1	; () banked
  3130  010584  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3131  010586  0E2C               	movlw	44
  3132  010588  6FD8               	movwf	Delayms@time& (0+255),b
  3133  01058A  EC0D  F093         	call	_Delayms	;wreg free
  3134  01058E  0E01               	movlw	1
  3135  010590  0101               	movlb	1	; () banked
  3136  010592  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3137  010594  0E2C               	movlw	44
  3138  010596  6FD8               	movwf	Delayms@time& (0+255),b
  3139  010598  EC0D  F093         	call	_Delayms	;wreg free
  3140                           
  3141                           ;2_April_TestMain.c: 318: }
  3142  01059C  D109               	goto	l965
  3143  01059E                     l960:
  3144                           
  3145                           ;2_April_TestMain.c: 319: else if(Store_DATA[0]>=10 && Store_DATA[0]<100){
  3146  01059E  0E09               	movlw	9
  3147  0105A0  0100               	movlb	0	; () banked
  3148  0105A2  6581               	cpfsgt	_Store_DATA& (0+255),b
  3149  0105A4  D065               	goto	l962
  3150                           
  3151                           ; BSR set to: 0
  3152  0105A6  0E64               	movlw	100
  3153  0105A8  6181               	cpfslt	_Store_DATA& (0+255),b
  3154  0105AA  D062               	goto	l962
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;2_April_TestMain.c: 320: IDByte1=Store_DATA[0] / 10;
  3158  0105AC  C081  F1D8         	movff	_Store_DATA,___awdiv@dividend
  3159  0105B0  0101               	movlb	1	; () banked
  3160  0105B2  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  3161  0105B4  0E00               	movlw	0
  3162  0105B6  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  3163  0105B8  0E0A               	movlw	10
  3164  0105BA  6FDA               	movwf	___awdiv@divisor& (0+255),b
  3165  0105BC  EC11  F090         	call	___awdiv	;wreg free
  3166  0105C0  0101               	movlb	1	; () banked
  3167  0105C2  51D8               	movf	?___awdiv& (0+255),w,b
  3168  0105C4  0100               	movlb	0	; () banked
  3169  0105C6  6FA2               	movwf	_IDByte1& (0+255),b
  3170                           
  3171                           ;2_April_TestMain.c: 321: IDByte2=Store_DATA[0] % 10;
  3172  0105C8  C081  F1D8         	movff	_Store_DATA,___awmod@dividend
  3173  0105CC  0101               	movlb	1	; () banked
  3174  0105CE  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  3175  0105D0  0E00               	movlw	0
  3176  0105D2  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  3177  0105D4  0E0A               	movlw	10
  3178  0105D6  6FDA               	movwf	___awmod@divisor& (0+255),b
  3179  0105D8  EC91  F090         	call	___awmod	;wreg free
  3180  0105DC  0101               	movlb	1	; () banked
  3181  0105DE  51D8               	movf	?___awmod& (0+255),w,b
  3182  0105E0  0100               	movlb	0	; () banked
  3183  0105E2  6FA1               	movwf	_IDByte2& (0+255),b
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;2_April_TestMain.c: 322: Emeregency2[3]=IDByte1 + 0x30;
  3187  0105E4  51A2               	movf	_IDByte1& (0+255),w,b
  3188  0105E6  0F30               	addlw	48
  3189  0105E8  0101               	movlb	1	; () banked
  3190  0105EA  6F57               	movwf	(_Emeregency2+3)& (0+255),b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;2_April_TestMain.c: 323: Emeregency2[4]=IDByte2 + 0x30;
  3194  0105EC  0100               	movlb	0	; () banked
  3195  0105EE  51A1               	movf	_IDByte2& (0+255),w,b
  3196  0105F0  0F30               	addlw	48
  3197  0105F2  0101               	movlb	1	; () banked
  3198  0105F4  6F58               	movwf	(_Emeregency2+4)& (0+255),b
  3199                           
  3200                           ;2_April_TestMain.c: 324: lcd_clear();
  3201  0105F6  ECA0  F095         	call	_lcd_clear	;wreg free
  3202                           
  3203                           ;2_April_TestMain.c: 325: LcdDisplay(0x80,"  ID    is in ");
  3204  0105FA  0EEF               	movlw	low STR_15
  3205  0105FC  0101               	movlb	1	; () banked
  3206  0105FE  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3207  010600  0EFF               	movlw	high STR_15
  3208  010602  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3209  010604  0E80               	movlw	128
  3210  010606  ECED  F092         	call	_LcdDisplay
  3211                           
  3212                           ;2_April_TestMain.c: 326: LcdCmd(0x85);
  3213  01060A  0E85               	movlw	133
  3214  01060C  ECD0  F094         	call	_LcdCmd
  3215                           
  3216                           ;2_April_TestMain.c: 327: LcdData(Emeregency2[3]);
  3217  010610  0101               	movlb	1	; () banked
  3218  010612  5157               	movf	(_Emeregency2+3)& (0+255),w,b
  3219  010614  ECC0  F094         	call	_LcdData
  3220                           
  3221                           ;2_April_TestMain.c: 328: LcdCmd(0x86);
  3222  010618  0E86               	movlw	134
  3223  01061A  ECD0  F094         	call	_LcdCmd
  3224                           
  3225                           ;2_April_TestMain.c: 329: LcdData(Emeregency2[4]);
  3226  01061E  0101               	movlb	1	; () banked
  3227  010620  5158               	movf	(_Emeregency2+4)& (0+255),w,b
  3228  010622  ECC0  F094         	call	_LcdData
  3229                           
  3230                           ;2_April_TestMain.c: 330: LcdDisplay(0xC0,"Stored in Device");
  3231  010626  0EBF               	movlw	low STR_16
  3232  010628  0101               	movlb	1	; () banked
  3233  01062A  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3234  01062C  0EFF               	movlw	high STR_16
  3235  01062E  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3236  010630  0EC0               	movlw	192
  3237  010632  ECED  F092         	call	_LcdDisplay
  3238                           
  3239                           ;2_April_TestMain.c: 331: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  3240  010636  0E01               	movlw	1
  3241  010638  0101               	movlb	1	; () banked
  3242  01063A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3243  01063C  0E2C               	movlw	44
  3244  01063E  6FD8               	movwf	Delayms@time& (0+255),b
  3245  010640  EC0D  F093         	call	_Delayms	;wreg free
  3246  010644  0E01               	movlw	1
  3247  010646  0101               	movlb	1	; () banked
  3248  010648  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3249  01064A  0E2C               	movlw	44
  3250  01064C  6FD8               	movwf	Delayms@time& (0+255),b
  3251  01064E  EC0D  F093         	call	_Delayms	;wreg free
  3252  010652  0E01               	movlw	1
  3253  010654  0101               	movlb	1	; () banked
  3254  010656  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3255  010658  0E2C               	movlw	44
  3256  01065A  6FD8               	movwf	Delayms@time& (0+255),b
  3257  01065C  EC0D  F093         	call	_Delayms	;wreg free
  3258  010660  0E01               	movlw	1
  3259  010662  0101               	movlb	1	; () banked
  3260  010664  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3261  010666  0E2C               	movlw	44
  3262  010668  6FD8               	movwf	Delayms@time& (0+255),b
  3263  01066A  EC0D  F093         	call	_Delayms	;wreg free
  3264                           
  3265                           ;2_April_TestMain.c: 332: }
  3266  01066E  D0A0               	goto	l965
  3267  010670                     l962:
  3268                           
  3269                           ;2_April_TestMain.c: 333: else if(Store_DATA[0]>=100 && Store_DATA[0]<=255){
  3270  010670  0E63               	movlw	99
  3271  010672  0100               	movlb	0	; () banked
  3272  010674  6581               	cpfsgt	_Store_DATA& (0+255),b
  3273  010676  D09C               	goto	l965
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;2_April_TestMain.c: 334: IDByte3=Store_DATA[0] / 100;
  3277  010678  C081  F1D8         	movff	_Store_DATA,___awdiv@dividend
  3278  01067C  0101               	movlb	1	; () banked
  3279  01067E  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  3280  010680  0E00               	movlw	0
  3281  010682  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  3282  010684  0E64               	movlw	100
  3283  010686  6FDA               	movwf	___awdiv@divisor& (0+255),b
  3284  010688  EC11  F090         	call	___awdiv	;wreg free
  3285  01068C  0101               	movlb	1	; () banked
  3286  01068E  51D8               	movf	?___awdiv& (0+255),w,b
  3287  010690  0100               	movlb	0	; () banked
  3288  010692  6FA0               	movwf	_IDByte3& (0+255),b
  3289                           
  3290                           ;2_April_TestMain.c: 335: V_Temp =Store_DATA[0] % 100;
  3291  010694  C081  F1D8         	movff	_Store_DATA,___awmod@dividend
  3292  010698  0101               	movlb	1	; () banked
  3293  01069A  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  3294  01069C  0E00               	movlw	0
  3295  01069E  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  3296  0106A0  0E64               	movlw	100
  3297  0106A2  6FDA               	movwf	___awmod@divisor& (0+255),b
  3298  0106A4  EC91  F090         	call	___awmod	;wreg free
  3299  0106A8  0101               	movlb	1	; () banked
  3300  0106AA  51D8               	movf	?___awmod& (0+255),w,b
  3301  0106AC  0100               	movlb	0	; () banked
  3302  0106AE  6F9F               	movwf	_V_Temp& (0+255),b
  3303                           
  3304                           ;2_April_TestMain.c: 336: IDByte2=V_Temp/10;
  3305  0106B0  C09F  F1D8         	movff	_V_Temp,___awdiv@dividend
  3306  0106B4  0101               	movlb	1	; () banked
  3307  0106B6  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  3308  0106B8  0E00               	movlw	0
  3309  0106BA  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  3310  0106BC  0E0A               	movlw	10
  3311  0106BE  6FDA               	movwf	___awdiv@divisor& (0+255),b
  3312  0106C0  EC11  F090         	call	___awdiv	;wreg free
  3313  0106C4  0101               	movlb	1	; () banked
  3314  0106C6  51D8               	movf	?___awdiv& (0+255),w,b
  3315  0106C8  0100               	movlb	0	; () banked
  3316  0106CA  6FA1               	movwf	_IDByte2& (0+255),b
  3317                           
  3318                           ;2_April_TestMain.c: 337: IDByte1=V_Temp%10;
  3319  0106CC  C09F  F1D8         	movff	_V_Temp,___awmod@dividend
  3320  0106D0  0101               	movlb	1	; () banked
  3321  0106D2  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  3322  0106D4  0E00               	movlw	0
  3323  0106D6  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  3324  0106D8  0E0A               	movlw	10
  3325  0106DA  6FDA               	movwf	___awmod@divisor& (0+255),b
  3326  0106DC  EC91  F090         	call	___awmod	;wreg free
  3327  0106E0  0101               	movlb	1	; () banked
  3328  0106E2  51D8               	movf	?___awmod& (0+255),w,b
  3329  0106E4  0100               	movlb	0	; () banked
  3330  0106E6  6FA2               	movwf	_IDByte1& (0+255),b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;2_April_TestMain.c: 338: Emeregency3[3]=IDByte3 + 0x30;
  3334  0106E8  51A0               	movf	_IDByte3& (0+255),w,b
  3335  0106EA  0F30               	addlw	48
  3336  0106EC  0101               	movlb	1	; () banked
  3337  0106EE  6F2A               	movwf	(_Emeregency3+3)& (0+255),b
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;2_April_TestMain.c: 339: Emeregency3[4]=IDByte2 + 0x30;
  3341  0106F0  0100               	movlb	0	; () banked
  3342  0106F2  51A1               	movf	_IDByte2& (0+255),w,b
  3343  0106F4  0F30               	addlw	48
  3344  0106F6  0101               	movlb	1	; () banked
  3345  0106F8  6F2B               	movwf	(_Emeregency3+4)& (0+255),b
  3346                           
  3347                           ; BSR set to: 1
  3348                           ;2_April_TestMain.c: 340: Emeregency3[5]=IDByte1 + 0x30;
  3349  0106FA  0100               	movlb	0	; () banked
  3350  0106FC  51A2               	movf	_IDByte1& (0+255),w,b
  3351  0106FE  0F30               	addlw	48
  3352  010700  0101               	movlb	1	; () banked
  3353  010702  6F2C               	movwf	(_Emeregency3+5)& (0+255),b
  3354                           
  3355                           ; BSR set to: 1
  3356                           ;2_April_TestMain.c: 341: lcd_clear();
  3357  010704  ECA0  F095         	call	_lcd_clear	;wreg free
  3358                           
  3359                           ;2_April_TestMain.c: 342: LcdDisplay(0x80,"  ID     is in ");
  3360  010708  0ED0               	movlw	low STR_19
  3361  01070A  0101               	movlb	1	; () banked
  3362  01070C  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3363  01070E  0EFF               	movlw	high STR_19
  3364  010710  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3365  010712  0E80               	movlw	128
  3366  010714  ECED  F092         	call	_LcdDisplay
  3367                           
  3368                           ;2_April_TestMain.c: 343: LcdCmd(0x85);
  3369  010718  0E85               	movlw	133
  3370  01071A  ECD0  F094         	call	_LcdCmd
  3371                           
  3372                           ;2_April_TestMain.c: 344: LcdData(Emeregency3[3]);
  3373  01071E  0101               	movlb	1	; () banked
  3374  010720  512A               	movf	(_Emeregency3+3)& (0+255),w,b
  3375  010722  ECC0  F094         	call	_LcdData
  3376                           
  3377                           ;2_April_TestMain.c: 345: LcdCmd(0x86);
  3378  010726  0E86               	movlw	134
  3379  010728  ECD0  F094         	call	_LcdCmd
  3380                           
  3381                           ;2_April_TestMain.c: 346: LcdData(Emeregency3[4]);
  3382  01072C  0101               	movlb	1	; () banked
  3383  01072E  512B               	movf	(_Emeregency3+4)& (0+255),w,b
  3384  010730  ECC0  F094         	call	_LcdData
  3385                           
  3386                           ;2_April_TestMain.c: 347: LcdCmd(0x87);
  3387  010734  0E87               	movlw	135
  3388  010736  ECD0  F094         	call	_LcdCmd
  3389                           
  3390                           ;2_April_TestMain.c: 348: LcdData(Emeregency3[5]);
  3391  01073A  0101               	movlb	1	; () banked
  3392  01073C  512C               	movf	(_Emeregency3+5)& (0+255),w,b
  3393  01073E  ECC0  F094         	call	_LcdData
  3394                           
  3395                           ;2_April_TestMain.c: 349: LcdDisplay(0xC0,"Stored in Device");
  3396  010742  0EBF               	movlw	low STR_16
  3397  010744  0101               	movlb	1	; () banked
  3398  010746  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3399  010748  0EFF               	movlw	high STR_16
  3400  01074A  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3401  01074C  0EC0               	movlw	192
  3402  01074E  ECED  F092         	call	_LcdDisplay
  3403                           
  3404                           ;2_April_TestMain.c: 350: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  3405  010752  0E01               	movlw	1
  3406  010754  0101               	movlb	1	; () banked
  3407  010756  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3408  010758  0E2C               	movlw	44
  3409  01075A  6FD8               	movwf	Delayms@time& (0+255),b
  3410  01075C  EC0D  F093         	call	_Delayms	;wreg free
  3411  010760  0E01               	movlw	1
  3412  010762  0101               	movlb	1	; () banked
  3413  010764  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3414  010766  0E2C               	movlw	44
  3415  010768  6FD8               	movwf	Delayms@time& (0+255),b
  3416  01076A  EC0D  F093         	call	_Delayms	;wreg free
  3417  01076E  0E01               	movlw	1
  3418  010770  0101               	movlb	1	; () banked
  3419  010772  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3420  010774  0E2C               	movlw	44
  3421  010776  6FD8               	movwf	Delayms@time& (0+255),b
  3422  010778  EC0D  F093         	call	_Delayms	;wreg free
  3423  01077C  0E01               	movlw	1
  3424  01077E  0101               	movlb	1	; () banked
  3425  010780  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3426  010782  0E2C               	movlw	44
  3427  010784  6FD8               	movwf	Delayms@time& (0+255),b
  3428  010786  EC0D  F093         	call	_Delayms	;wreg free
  3429                           
  3430                           ;2_April_TestMain.c: 352: }
  3431                           ;2_April_TestMain.c: 355: }
  3432  01078A  D012               	goto	l965
  3433  01078C                     l959:
  3434                           
  3435                           ;2_April_TestMain.c: 356: else{
  3436                           ;2_April_TestMain.c: 357: lcd_clear();
  3437  01078C  ECA0  F095         	call	_lcd_clear	;wreg free
  3438                           
  3439                           ;2_April_TestMain.c: 358: LcdDisplay(0x80,"Id Is Not Stored... ");
  3440  010790  0EFC               	movlw	low STR_21
  3441  010792  0101               	movlb	1	; () banked
  3442  010794  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3443  010796  0EFD               	movlw	high STR_21
  3444  010798  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3445  01079A  0E80               	movlw	128
  3446  01079C  ECED  F092         	call	_LcdDisplay
  3447                           
  3448                           ;2_April_TestMain.c: 359: LcdDisplay(0xC0," Send Stored ID     ");
  3449  0107A0  0EE7               	movlw	low STR_22
  3450  0107A2  0101               	movlb	1	; () banked
  3451  0107A4  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3452  0107A6  0EFD               	movlw	high STR_22
  3453  0107A8  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3454  0107AA  0EC0               	movlw	192
  3455  0107AC  ECED  F092         	call	_LcdDisplay
  3456  0107B0                     l965:
  3457                           
  3458                           ;2_April_TestMain.c: 360: }
  3459                           ;2_April_TestMain.c: 361: Delayms(100); Delayms(100);Delayms(100);
  3460  0107B0  0E00               	movlw	0
  3461  0107B2  0101               	movlb	1	; () banked
  3462  0107B4  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3463  0107B6  0E64               	movlw	100
  3464  0107B8  6FD8               	movwf	Delayms@time& (0+255),b
  3465  0107BA  EC0D  F093         	call	_Delayms	;wreg free
  3466  0107BE  0E00               	movlw	0
  3467  0107C0  0101               	movlb	1	; () banked
  3468  0107C2  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3469  0107C4  0E64               	movlw	100
  3470  0107C6  6FD8               	movwf	Delayms@time& (0+255),b
  3471  0107C8  EC0D  F093         	call	_Delayms	;wreg free
  3472  0107CC  0E00               	movlw	0
  3473  0107CE  0101               	movlb	1	; () banked
  3474  0107D0  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3475  0107D2  0E64               	movlw	100
  3476  0107D4  6FD8               	movwf	Delayms@time& (0+255),b
  3477  0107D6  EC0D  F093         	call	_Delayms	;wreg free
  3478                           
  3479                           ;2_April_TestMain.c: 362: Delayms(100); Delayms(100);Delayms(100);
  3480  0107DA  0E00               	movlw	0
  3481  0107DC  0101               	movlb	1	; () banked
  3482  0107DE  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3483  0107E0  0E64               	movlw	100
  3484  0107E2  6FD8               	movwf	Delayms@time& (0+255),b
  3485  0107E4  EC0D  F093         	call	_Delayms	;wreg free
  3486  0107E8  0E00               	movlw	0
  3487  0107EA  0101               	movlb	1	; () banked
  3488  0107EC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3489  0107EE  0E64               	movlw	100
  3490  0107F0  6FD8               	movwf	Delayms@time& (0+255),b
  3491  0107F2  EC0D  F093         	call	_Delayms	;wreg free
  3492  0107F6  0E00               	movlw	0
  3493  0107F8  0101               	movlb	1	; () banked
  3494  0107FA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3495  0107FC  0E64               	movlw	100
  3496  0107FE  6FD8               	movwf	Delayms@time& (0+255),b
  3497  010800  EC0D  F093         	call	_Delayms	;wreg free
  3498                           
  3499                           ;2_April_TestMain.c: 363: Delayms(100); Delayms(100);Delayms(100);
  3500  010804  0E00               	movlw	0
  3501  010806  0101               	movlb	1	; () banked
  3502  010808  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3503  01080A  0E64               	movlw	100
  3504  01080C  6FD8               	movwf	Delayms@time& (0+255),b
  3505  01080E  EC0D  F093         	call	_Delayms	;wreg free
  3506  010812  0E00               	movlw	0
  3507  010814  0101               	movlb	1	; () banked
  3508  010816  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3509  010818  0E64               	movlw	100
  3510  01081A  6FD8               	movwf	Delayms@time& (0+255),b
  3511  01081C  EC0D  F093         	call	_Delayms	;wreg free
  3512  010820  0E00               	movlw	0
  3513  010822  0101               	movlb	1	; () banked
  3514  010824  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3515  010826  0E64               	movlw	100
  3516  010828  6FD8               	movwf	Delayms@time& (0+255),b
  3517  01082A  EC0D  F093         	call	_Delayms	;wreg free
  3518                           
  3519                           ;2_April_TestMain.c: 364: break;
  3520  01082E  D074               	goto	l955
  3521  010830                     
  3522                           ;2_April_TestMain.c: 366: LcdDisplay(0x80,"Msg 5 Received...  ");
  3523  010830  0E29               	movlw	low STR_23
  3524  010832  0101               	movlb	1	; () banked
  3525  010834  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3526  010836  0EFF               	movlw	high STR_23
  3527  010838  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3528  01083A  0E80               	movlw	128
  3529  01083C  ECED  F092         	call	_LcdDisplay
  3530                           
  3531                           ;2_April_TestMain.c: 367: data_TX_normal_FIFO[13]='@';
  3532  010840  0E40               	movlw	64
  3533  010842  0100               	movlb	0	; () banked
  3534  010844  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;2_April_TestMain.c: 368: data_TX_normal_FIFO[14]='C';
  3538  010846  0E43               	movlw	67
  3539  010848  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;2_April_TestMain.c: 369: data_TX_normal_FIFO[15]='K';
  3543  01084A  0E4B               	movlw	75
  3544  01084C                     L3:
  3545  01084C  6F6F               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  3546                           
  3547                           ;2_April_TestMain.c: 370: break;
  3548  01084E  D064               	goto	l955
  3549  010850                     
  3550                           ; BSR set to: 0
  3551                           ;2_April_TestMain.c: 373: LcdDisplay(0x80,"Wrong Msg Received");
  3552                           
  3553                           ; BSR set to: 0
  3554  010850  0E8A               	movlw	low STR_24
  3555  010852  0101               	movlb	1	; () banked
  3556  010854  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3557  010856  0EFF               	movlw	high STR_24
  3558  010858  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3559  01085A  0E80               	movlw	128
  3560  01085C  ECED  F092         	call	_LcdDisplay
  3561                           
  3562                           ;2_April_TestMain.c: 374: LcdDisplay(0xC0,"Send proper msg   ");
  3563  010860  0E77               	movlw	low STR_25
  3564  010862  0101               	movlb	1	; () banked
  3565  010864  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3566  010866  0EFF               	movlw	high STR_25
  3567  010868  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3568  01086A  0EC0               	movlw	192
  3569  01086C  ECED  F092         	call	_LcdDisplay
  3570                           
  3571                           ;2_April_TestMain.c: 375: Delayms(100); Delayms(100);Delayms(100);
  3572  010870  0E00               	movlw	0
  3573  010872  0101               	movlb	1	; () banked
  3574  010874  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3575  010876  0E64               	movlw	100
  3576  010878  6FD8               	movwf	Delayms@time& (0+255),b
  3577  01087A  EC0D  F093         	call	_Delayms	;wreg free
  3578  01087E  0E00               	movlw	0
  3579  010880  0101               	movlb	1	; () banked
  3580  010882  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3581  010884  0E64               	movlw	100
  3582  010886  6FD8               	movwf	Delayms@time& (0+255),b
  3583  010888  EC0D  F093         	call	_Delayms	;wreg free
  3584  01088C  0E00               	movlw	0
  3585  01088E  0101               	movlb	1	; () banked
  3586  010890  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3587  010892  0E64               	movlw	100
  3588  010894  6FD8               	movwf	Delayms@time& (0+255),b
  3589  010896  EC0D  F093         	call	_Delayms	;wreg free
  3590                           
  3591                           ;2_April_TestMain.c: 376: Delayms(100); Delayms(100);Delayms(100);
  3592  01089A  0E00               	movlw	0
  3593  01089C  0101               	movlb	1	; () banked
  3594  01089E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3595  0108A0  0E64               	movlw	100
  3596  0108A2  6FD8               	movwf	Delayms@time& (0+255),b
  3597  0108A4  EC0D  F093         	call	_Delayms	;wreg free
  3598  0108A8  0E00               	movlw	0
  3599  0108AA  0101               	movlb	1	; () banked
  3600  0108AC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3601  0108AE  0E64               	movlw	100
  3602  0108B0  6FD8               	movwf	Delayms@time& (0+255),b
  3603  0108B2  EC0D  F093         	call	_Delayms	;wreg free
  3604  0108B6  0E00               	movlw	0
  3605  0108B8  0101               	movlb	1	; () banked
  3606  0108BA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3607  0108BC  0E64               	movlw	100
  3608  0108BE  6FD8               	movwf	Delayms@time& (0+255),b
  3609  0108C0  EC0D  F093         	call	_Delayms	;wreg free
  3610                           
  3611                           ;2_April_TestMain.c: 377: Delayms(100); Delayms(100);Delayms(100);
  3612  0108C4  0E00               	movlw	0
  3613  0108C6  0101               	movlb	1	; () banked
  3614  0108C8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3615  0108CA  0E64               	movlw	100
  3616  0108CC  6FD8               	movwf	Delayms@time& (0+255),b
  3617  0108CE  EC0D  F093         	call	_Delayms	;wreg free
  3618  0108D2  0E00               	movlw	0
  3619  0108D4  0101               	movlb	1	; () banked
  3620  0108D6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3621  0108D8  0E64               	movlw	100
  3622  0108DA  6FD8               	movwf	Delayms@time& (0+255),b
  3623  0108DC  EC0D  F093         	call	_Delayms	;wreg free
  3624  0108E0  0E00               	movlw	0
  3625  0108E2  0101               	movlb	1	; () banked
  3626  0108E4  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3627  0108E6  0E64               	movlw	100
  3628  0108E8  6FD8               	movwf	Delayms@time& (0+255),b
  3629  0108EA  EC0D  F093         	call	_Delayms	;wreg free
  3630                           
  3631                           ;2_April_TestMain.c: 379: }
  3632                           
  3633                           ;2_April_TestMain.c: 378: break;
  3634  0108EE  D014               	goto	l955
  3635  0108F0                     l953:
  3636  0108F0  0100               	movlb	0	; () banked
  3637  0108F2  519D               	movf	_Frame& (0+255),w,b
  3638                           
  3639                           ; Switch size 1, requested type "space"
  3640                           ; Number of cases is 6, Range of values is 0 to 5
  3641                           ; switch strategies available:
  3642                           ; Name         Instructions Cycles
  3643                           ; simple_byte           19    10 (average)
  3644                           ;	Chosen strategy is simple_byte
  3645  0108F4  0A00               	xorlw	0	; case 0
  3646  0108F6  B4D8               	btfsc	status,2,c
  3647  0108F8  D7AB               	goto	l967
  3648  0108FA  0A01               	xorlw	1	; case 1
  3649  0108FC  B4D8               	btfsc	status,2,c
  3650  0108FE  D56D               	goto	l954
  3651  010900  0A03               	xorlw	3	; case 2
  3652  010902  B4D8               	btfsc	status,2,c
  3653  010904  D581               	goto	l956
  3654  010906  0A01               	xorlw	1	; case 3
  3655  010908  B4D8               	btfsc	status,2,c
  3656  01090A  D58D               	goto	l957
  3657  01090C  0A07               	xorlw	7	; case 4
  3658  01090E  B4D8               	btfsc	status,2,c
  3659  010910  D599               	goto	l958
  3660  010912  0A01               	xorlw	1	; case 5
  3661  010914  B4D8               	btfsc	status,2,c
  3662  010916  D78C               	goto	l966
  3663  010918                     l955:
  3664                           
  3665                           ;2_April_TestMain.c: 380: if(Frame!=0){
  3666                           
  3667                           ; BSR set to: 0
  3668  010918  0100               	movlb	0	; () banked
  3669  01091A  519D               	movf	_Frame& (0+255),w,b
  3670  01091C  B4D8               	btfsc	status,2,c
  3671  01091E  D043               	goto	l968
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;2_April_TestMain.c: 381: PORTAbits.RA1=0;
  3675  010920  9280               	bcf	3968,1,c	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;2_April_TestMain.c: 382: write_TX_normal_FIFO();
  3679  010922  ECE3  F08A         	call	_write_TX_normal_FIFO	;wreg free
  3680                           
  3681                           ;2_April_TestMain.c: 383: Delayms(100); Delayms(100);Delayms(100);
  3682  010926  0E00               	movlw	0
  3683  010928  0101               	movlb	1	; () banked
  3684  01092A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3685  01092C  0E64               	movlw	100
  3686  01092E  6FD8               	movwf	Delayms@time& (0+255),b
  3687  010930  EC0D  F093         	call	_Delayms	;wreg free
  3688  010934  0E00               	movlw	0
  3689  010936  0101               	movlb	1	; () banked
  3690  010938  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3691  01093A  0E64               	movlw	100
  3692  01093C  6FD8               	movwf	Delayms@time& (0+255),b
  3693  01093E  EC0D  F093         	call	_Delayms	;wreg free
  3694  010942  0E00               	movlw	0
  3695  010944  0101               	movlb	1	; () banked
  3696  010946  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3697  010948  0E64               	movlw	100
  3698  01094A  6FD8               	movwf	Delayms@time& (0+255),b
  3699  01094C  EC0D  F093         	call	_Delayms	;wreg free
  3700                           
  3701                           ;2_April_TestMain.c: 384: Delayms(100); Delayms(100);Delayms(100);
  3702  010950  0E00               	movlw	0
  3703  010952  0101               	movlb	1	; () banked
  3704  010954  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3705  010956  0E64               	movlw	100
  3706  010958  6FD8               	movwf	Delayms@time& (0+255),b
  3707  01095A  EC0D  F093         	call	_Delayms	;wreg free
  3708  01095E  0E00               	movlw	0
  3709  010960  0101               	movlb	1	; () banked
  3710  010962  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3711  010964  0E64               	movlw	100
  3712  010966  6FD8               	movwf	Delayms@time& (0+255),b
  3713  010968  EC0D  F093         	call	_Delayms	;wreg free
  3714  01096C  0E00               	movlw	0
  3715  01096E  0101               	movlb	1	; () banked
  3716  010970  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3717  010972  0E64               	movlw	100
  3718  010974  6FD8               	movwf	Delayms@time& (0+255),b
  3719  010976  EC0D  F093         	call	_Delayms	;wreg free
  3720                           
  3721                           ;2_April_TestMain.c: 385: Delayms(100); Delayms(100);Delayms(100);
  3722  01097A  0E00               	movlw	0
  3723  01097C  0101               	movlb	1	; () banked
  3724  01097E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3725  010980  0E64               	movlw	100
  3726  010982  6FD8               	movwf	Delayms@time& (0+255),b
  3727  010984  EC0D  F093         	call	_Delayms	;wreg free
  3728  010988  0E00               	movlw	0
  3729  01098A  0101               	movlb	1	; () banked
  3730  01098C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3731  01098E  0E64               	movlw	100
  3732  010990  6FD8               	movwf	Delayms@time& (0+255),b
  3733  010992  EC0D  F093         	call	_Delayms	;wreg free
  3734  010996  0E00               	movlw	0
  3735  010998  0101               	movlb	1	; () banked
  3736  01099A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3737  01099C  0E64               	movlw	100
  3738  01099E  6FD8               	movwf	Delayms@time& (0+255),b
  3739  0109A0  EC0D  F093         	call	_Delayms	;wreg free
  3740                           
  3741                           ;2_April_TestMain.c: 386: PORTAbits.RA1=1;
  3742  0109A4  8280               	bsf	3968,1,c	;volatile
  3743  0109A6                     l968:
  3744                           
  3745                           ;2_April_TestMain.c: 387: }
  3746                           ;2_April_TestMain.c: 388: }
  3747                           ;2_April_TestMain.c: 389: if((CRC==Rv_CRC) && (DATA_RX[0]=='@')){
  3748  0109A6  0100               	movlb	0	; () banked
  3749  0109A8  5195               	movf	_Rv_CRC& (0+255),w,b
  3750  0109AA  1991               	xorwf	_CRC& (0+255),w,b
  3751  0109AC  E103               	bnz	u4021
  3752  0109AE  5196               	movf	(_Rv_CRC+1)& (0+255),w,b
  3753  0109B0  1992               	xorwf	(_CRC+1)& (0+255),w,b
  3754  0109B2  A4D8               	btfss	status,2,c
  3755  0109B4                     u4021:
  3756  0109B4  D0C7               	goto	l969
  3757                           
  3758                           ; BSR set to: 0
  3759  0109B6  0E40               	movlw	64
  3760  0109B8  19B2               	xorwf	_DATA_RX& (0+255),w,b
  3761  0109BA  A4D8               	btfss	status,2,c
  3762  0109BC  D0C3               	goto	l969
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;2_April_TestMain.c: 390: LED_PATTERN[0]=DATA_RX[1];
  3766  0109BE  C0B3  F108         	movff	_DATA_RX+1,_LED_PATTERN
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;2_April_TestMain.c: 392: if(DATA_RX[1]==0x01){
  3770  0109C2  05B3               	decf	(_DATA_RX+1)& (0+255),w,b
  3771  0109C4  A4D8               	btfss	status,2,c
  3772  0109C6  D002               	goto	l970
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;2_April_TestMain.c: 393: Array[3]=1;
  3776  0109C8  0E01               	movlw	1
  3777  0109CA  D016               	goto	L7
  3778  0109CC                     l970:
  3779                           
  3780                           ;2_April_TestMain.c: 395: else if(DATA_RX[1]==0x02){
  3781                           
  3782                           ; BSR set to: 1
  3783  0109CC  0E02               	movlw	2
  3784  0109CE  0100               	movlb	0	; () banked
  3785  0109D0  19B3               	xorwf	(_DATA_RX+1)& (0+255),w,b
  3786  0109D2  A4D8               	btfss	status,2,c
  3787  0109D4  D002               	goto	l972
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;2_April_TestMain.c: 396: Array[3]=2;
  3791  0109D6  0E02               	movlw	2
  3792  0109D8  D00F               	goto	L7
  3793  0109DA                     l972:
  3794                           
  3795                           ;2_April_TestMain.c: 398: else if(DATA_RX[1]==0x04){
  3796                           
  3797                           ; BSR set to: 1
  3798  0109DA  0E04               	movlw	4
  3799  0109DC  0100               	movlb	0	; () banked
  3800  0109DE  19B3               	xorwf	(_DATA_RX+1)& (0+255),w,b
  3801  0109E0  A4D8               	btfss	status,2,c
  3802  0109E2  D002               	goto	l974
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;2_April_TestMain.c: 399: Array[3]=4;
  3806  0109E4  0E04               	movlw	4
  3807  0109E6  D008               	goto	L7
  3808  0109E8                     l974:
  3809                           
  3810                           ;2_April_TestMain.c: 401: else if(DATA_RX[1]==0x08){
  3811                           
  3812                           ; BSR set to: 1
  3813  0109E8  0E08               	movlw	8
  3814  0109EA  0100               	movlb	0	; () banked
  3815  0109EC  19B3               	xorwf	(_DATA_RX+1)& (0+255),w,b
  3816  0109EE  A4D8               	btfss	status,2,c
  3817  0109F0  D002               	goto	l976
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;2_April_TestMain.c: 402: Array[3]=8;
  3821  0109F2  0E08               	movlw	8
  3822  0109F4  D001               	goto	L7
  3823  0109F6                     l976:
  3824                           
  3825                           ;2_April_TestMain.c: 404: else{
  3826                           ;2_April_TestMain.c: 405: Array[3]=0;
  3827                           
  3828                           ; BSR set to: 1
  3829  0109F6  0E00               	movlw	0
  3830  0109F8                     L7:
  3831  0109F8  0101               	movlb	1	; () banked
  3832  0109FA  6F97               	movwf	(_Array+3)& (0+255),b
  3833                           
  3834                           ; BSR set to: 1
  3835                           ;2_April_TestMain.c: 406: }
  3836                           ;2_April_TestMain.c: 407: Clear_Data();
  3837                           
  3838                           ; BSR set to: 1
  3839                           
  3840                           ; BSR set to: 1
  3841                           
  3842                           ; BSR set to: 1
  3843                           
  3844                           ; BSR set to: 1
  3845  0109FC  EC8A  F093         	call	_Clear_Data	;wreg free
  3846                           
  3847                           ;2_April_TestMain.c: 408: LcdDisplay(0x80,"Received LED STATUS");
  3848  010A00  0E3D               	movlw	low STR_26
  3849  010A02  0101               	movlb	1	; () banked
  3850  010A04  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3851  010A06  0EFF               	movlw	high STR_26
  3852  010A08  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3853  010A0A  0E80               	movlw	128
  3854  010A0C  ECED  F092         	call	_LcdDisplay
  3855                           
  3856                           ;2_April_TestMain.c: 409: LcdDisplay(0xC0,"Sending.           ");
  3857  010A10  0E25               	movlw	low STR_27
  3858  010A12  0101               	movlb	1	; () banked
  3859  010A14  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3860  010A16  0EFE               	movlw	high STR_27
  3861  010A18  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3862  010A1A  0EC0               	movlw	192
  3863  010A1C  ECED  F092         	call	_LcdDisplay
  3864                           
  3865                           ;2_April_TestMain.c: 410: Delayms(10);
  3866  010A20  0E00               	movlw	0
  3867  010A22  0101               	movlb	1	; () banked
  3868  010A24  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3869  010A26  0E0A               	movlw	10
  3870  010A28  6FD8               	movwf	Delayms@time& (0+255),b
  3871  010A2A  EC0D  F093         	call	_Delayms	;wreg free
  3872                           
  3873                           ;2_April_TestMain.c: 411: Message_Send_Frame_Parking_light_Board();
  3874  010A2E  EC01  F08D         	call	_Message_Send_Frame_Parking_light_Board	;wreg free
  3875                           
  3876                           ;2_April_TestMain.c: 412: Delayms(100); Delayms(100); Delayms(100);
  3877  010A32  0E00               	movlw	0
  3878  010A34  0101               	movlb	1	; () banked
  3879  010A36  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3880  010A38  0E64               	movlw	100
  3881  010A3A  6FD8               	movwf	Delayms@time& (0+255),b
  3882  010A3C  EC0D  F093         	call	_Delayms	;wreg free
  3883  010A40  0E00               	movlw	0
  3884  010A42  0101               	movlb	1	; () banked
  3885  010A44  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3886  010A46  0E64               	movlw	100
  3887  010A48  6FD8               	movwf	Delayms@time& (0+255),b
  3888  010A4A  EC0D  F093         	call	_Delayms	;wreg free
  3889  010A4E  0E00               	movlw	0
  3890  010A50  0101               	movlb	1	; () banked
  3891  010A52  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3892  010A54  0E64               	movlw	100
  3893  010A56  6FD8               	movwf	Delayms@time& (0+255),b
  3894  010A58  EC0D  F093         	call	_Delayms	;wreg free
  3895                           
  3896                           ;2_April_TestMain.c: 413: LcdDisplay(0xC0,"Sending..          ");
  3897  010A5C  0E39               	movlw	low STR_28
  3898  010A5E  0101               	movlb	1	; () banked
  3899  010A60  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3900  010A62  0EFE               	movlw	high STR_28
  3901  010A64  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3902  010A66  0EC0               	movlw	192
  3903  010A68  ECED  F092         	call	_LcdDisplay
  3904                           
  3905                           ;2_April_TestMain.c: 414: Delayms(100); Delayms(100); Delayms(100);
  3906  010A6C  0E00               	movlw	0
  3907  010A6E  0101               	movlb	1	; () banked
  3908  010A70  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3909  010A72  0E64               	movlw	100
  3910  010A74  6FD8               	movwf	Delayms@time& (0+255),b
  3911  010A76  EC0D  F093         	call	_Delayms	;wreg free
  3912  010A7A  0E00               	movlw	0
  3913  010A7C  0101               	movlb	1	; () banked
  3914  010A7E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3915  010A80  0E64               	movlw	100
  3916  010A82  6FD8               	movwf	Delayms@time& (0+255),b
  3917  010A84  EC0D  F093         	call	_Delayms	;wreg free
  3918  010A88  0E00               	movlw	0
  3919  010A8A  0101               	movlb	1	; () banked
  3920  010A8C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3921  010A8E  0E64               	movlw	100
  3922  010A90  6FD8               	movwf	Delayms@time& (0+255),b
  3923  010A92  EC0D  F093         	call	_Delayms	;wreg free
  3924                           
  3925                           ;2_April_TestMain.c: 415: LcdDisplay(0xC0,"Sending...         ");
  3926  010A96  0E4D               	movlw	low STR_29
  3927  010A98  0101               	movlb	1	; () banked
  3928  010A9A  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3929  010A9C  0EFE               	movlw	high STR_29
  3930  010A9E  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3931  010AA0  0EC0               	movlw	192
  3932  010AA2  ECED  F092         	call	_LcdDisplay
  3933                           
  3934                           ;2_April_TestMain.c: 416: Delayms(100); Delayms(100); Delayms(100);
  3935  010AA6  0E00               	movlw	0
  3936  010AA8  0101               	movlb	1	; () banked
  3937  010AAA  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3938  010AAC  0E64               	movlw	100
  3939  010AAE  6FD8               	movwf	Delayms@time& (0+255),b
  3940  010AB0  EC0D  F093         	call	_Delayms	;wreg free
  3941  010AB4  0E00               	movlw	0
  3942  010AB6  0101               	movlb	1	; () banked
  3943  010AB8  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3944  010ABA  0E64               	movlw	100
  3945  010ABC  6FD8               	movwf	Delayms@time& (0+255),b
  3946  010ABE  EC0D  F093         	call	_Delayms	;wreg free
  3947  010AC2  0E00               	movlw	0
  3948  010AC4  0101               	movlb	1	; () banked
  3949  010AC6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3950  010AC8  0E64               	movlw	100
  3951  010ACA  6FD8               	movwf	Delayms@time& (0+255),b
  3952  010ACC  EC0D  F093         	call	_Delayms	;wreg free
  3953                           
  3954                           ;2_April_TestMain.c: 417: LcdDisplay(0xC0,"Sending....        ");
  3955  010AD0  0E61               	movlw	low STR_30
  3956  010AD2  0101               	movlb	1	; () banked
  3957  010AD4  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3958  010AD6  0EFE               	movlw	high STR_30
  3959  010AD8  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3960  010ADA  0EC0               	movlw	192
  3961  010ADC  ECED  F092         	call	_LcdDisplay
  3962                           
  3963                           ;2_April_TestMain.c: 418: Delayms(100); Delayms(100); Delayms(100);
  3964  010AE0  0E00               	movlw	0
  3965  010AE2  0101               	movlb	1	; () banked
  3966  010AE4  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3967  010AE6  0E64               	movlw	100
  3968  010AE8  6FD8               	movwf	Delayms@time& (0+255),b
  3969  010AEA  EC0D  F093         	call	_Delayms	;wreg free
  3970  010AEE  0E00               	movlw	0
  3971  010AF0  0101               	movlb	1	; () banked
  3972  010AF2  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3973  010AF4  0E64               	movlw	100
  3974  010AF6  6FD8               	movwf	Delayms@time& (0+255),b
  3975  010AF8  EC0D  F093         	call	_Delayms	;wreg free
  3976  010AFC  0E00               	movlw	0
  3977  010AFE  0101               	movlb	1	; () banked
  3978  010B00  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3979  010B02  0E64               	movlw	100
  3980  010B04  6FD8               	movwf	Delayms@time& (0+255),b
  3981  010B06  EC0D  F093         	call	_Delayms	;wreg free
  3982                           
  3983                           ;2_April_TestMain.c: 419: LcdDisplay(0xC0,"Sending.....       ");
  3984  010B0A  0E89               	movlw	low STR_31
  3985  010B0C  0101               	movlb	1	; () banked
  3986  010B0E  6FDF               	movwf	LcdDisplay@string& (0+255),b
  3987  010B10  0EFE               	movlw	high STR_31
  3988  010B12  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  3989  010B14  0EC0               	movlw	192
  3990  010B16  ECED  F092         	call	_LcdDisplay
  3991                           
  3992                           ;2_April_TestMain.c: 420: Delayms(100); Delayms(100); Delayms(100);
  3993  010B1A  0E00               	movlw	0
  3994  010B1C  0101               	movlb	1	; () banked
  3995  010B1E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  3996  010B20  0E64               	movlw	100
  3997  010B22  6FD8               	movwf	Delayms@time& (0+255),b
  3998  010B24  EC0D  F093         	call	_Delayms	;wreg free
  3999  010B28  0E00               	movlw	0
  4000  010B2A  0101               	movlb	1	; () banked
  4001  010B2C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4002  010B2E  0E64               	movlw	100
  4003  010B30  6FD8               	movwf	Delayms@time& (0+255),b
  4004  010B32  EC0D  F093         	call	_Delayms	;wreg free
  4005  010B36  0E00               	movlw	0
  4006  010B38  0101               	movlb	1	; () banked
  4007  010B3A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4008  010B3C  0E64               	movlw	100
  4009  010B3E  6FD8               	movwf	Delayms@time& (0+255),b
  4010  010B40  EC0D  F093         	call	_Delayms	;wreg free
  4011  010B44                     l969:
  4012                           
  4013                           ;2_April_TestMain.c: 421: }
  4014                           ;2_April_TestMain.c: 422: if((CRC==Rv_CRC) && (DATA_RX[0]=='#')){
  4015  010B44  0100               	movlb	0	; () banked
  4016  010B46  5195               	movf	_Rv_CRC& (0+255),w,b
  4017  010B48  1991               	xorwf	_CRC& (0+255),w,b
  4018  010B4A  E150               	bnz	l7171
  4019  010B4C  5196               	movf	(_Rv_CRC+1)& (0+255),w,b
  4020  010B4E  1992               	xorwf	(_CRC+1)& (0+255),w,b
  4021  010B50  A4D8               	btfss	status,2,c
  4022  010B52  D04C               	goto	l982
  4023                           
  4024                           ; BSR set to: 0
  4025  010B54  0E23               	movlw	35
  4026  010B56  19B2               	xorwf	_DATA_RX& (0+255),w,b
  4027  010B58  A4D8               	btfss	status,2,c
  4028  010B5A  D048               	goto	l982
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;2_April_TestMain.c: 423: Store_DATA[0]=DATA_RX[1];
  4032  010B5C  C0B3  F081         	movff	_DATA_RX+1,_Store_DATA
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;2_April_TestMain.c: 425: if(Read_b_eep(Store_DATA[0]) == Store_DATA[0]){
  4036  010B60  C081  F1D8         	movff	_Store_DATA,Read_b_eep@badd
  4037  010B64  0101               	movlb	1	; () banked
  4038  010B66  6BD9               	clrf	(Read_b_eep@badd+1)& (0+255),b
  4039  010B68  EC75  F095         	call	_Read_b_eep	;wreg free
  4040  010B6C  0100               	movlb	0	; () banked
  4041  010B6E  1981               	xorwf	_Store_DATA& (0+255),w,b
  4042  010B70  A4D8               	btfss	status,2,c
  4043  010B72  D012               	goto	l979
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;2_April_TestMain.c: 426: PORTAbits.RA0=0;
  4047  010B74  9080               	bcf	3968,0,c	;volatile
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;2_April_TestMain.c: 427: data_TX_normal_FIFO[13]='#';
  4051  010B76  0E23               	movlw	35
  4052  010B78  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  4053                           
  4054                           ;2_April_TestMain.c: 428: data_TX_normal_FIFO[14]='E';
  4055  010B7A  0E45               	movlw	69
  4056  010B7C  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;2_April_TestMain.c: 429: data_TX_normal_FIFO[15]=Store_DATA[0];
  4060  010B7E  C081  F06F         	movff	_Store_DATA,_data_TX_normal_FIFO+15
  4061                           
  4062                           ;2_April_TestMain.c: 431: Send_Frame=1;
  4063  010B82  0E01               	movlw	1
  4064  010B84  6FA9               	movwf	_Send_Frame& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;2_April_TestMain.c: 432: Delay_ms(50);
  4068  010B86  0E00               	movlw	0
  4069  010B88  0101               	movlb	1	; () banked
  4070  010B8A  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  4071  010B8C  0E32               	movlw	50
  4072  010B8E  6FD8               	movwf	Delay_ms@time& (0+255),b
  4073  010B90  EC0C  F095         	call	_Delay_ms	;wreg free
  4074                           
  4075                           ;2_April_TestMain.c: 433: PORTAbits.RA0=1;
  4076  010B94  8080               	bsf	3968,0,c	;volatile
  4077                           
  4078                           ;2_April_TestMain.c: 434: }
  4079  010B96  D01A               	goto	l980
  4080  010B98                     l979:
  4081                           
  4082                           ;2_April_TestMain.c: 435: else{
  4083                           ;2_April_TestMain.c: 436: Write_b_eep(Store_DATA[0],Store_DATA[0]);
  4084  010B98  C081  F1D8         	movff	_Store_DATA,Write_b_eep@badd
  4085  010B9C  0101               	movlb	1	; () banked
  4086  010B9E  6BD9               	clrf	(Write_b_eep@badd+1)& (0+255),b
  4087  010BA0  C081  F1DA         	movff	_Store_DATA,Write_b_eep@data
  4088  010BA4  EC6C  F093         	call	_Write_b_eep	;wreg free
  4089                           
  4090                           ;2_April_TestMain.c: 437: PORTAbits.RA1=0;
  4091  010BA8  9280               	bcf	3968,1,c	;volatile
  4092                           
  4093                           ;2_April_TestMain.c: 438: data_TX_normal_FIFO[13]='#';
  4094  010BAA  0E23               	movlw	35
  4095  010BAC  0100               	movlb	0	; () banked
  4096  010BAE  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;2_April_TestMain.c: 439: data_TX_normal_FIFO[14]='O';
  4100  010BB0  0E4F               	movlw	79
  4101  010BB2  6F6E               	movwf	(_data_TX_normal_FIFO+14)& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;2_April_TestMain.c: 440: data_TX_normal_FIFO[15]=Store_DATA[0];
  4105  010BB4  C081  F06F         	movff	_Store_DATA,_data_TX_normal_FIFO+15
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;2_April_TestMain.c: 441: Send_Frame_2=1;
  4109  010BB8  0E01               	movlw	1
  4110  010BBA  6FA8               	movwf	_Send_Frame_2& (0+255),b
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;2_April_TestMain.c: 443: Delay_ms(50);
  4114  010BBC  0E00               	movlw	0
  4115  010BBE  0101               	movlb	1	; () banked
  4116  010BC0  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  4117  010BC2  0E32               	movlw	50
  4118  010BC4  6FD8               	movwf	Delay_ms@time& (0+255),b
  4119  010BC6  EC0C  F095         	call	_Delay_ms	;wreg free
  4120                           
  4121                           ;2_April_TestMain.c: 444: PORTAbits.RA1=1;
  4122  010BCA  8280               	bsf	3968,1,c	;volatile
  4123  010BCC                     l980:
  4124                           
  4125                           ;2_April_TestMain.c: 445: }
  4126                           ;2_April_TestMain.c: 447: if(Send_Frame==1){
  4127  010BCC  0100               	movlb	0	; () banked
  4128  010BCE  05A9               	decf	_Send_Frame& (0+255),w,b
  4129  010BD0  A4D8               	btfss	status,2,c
  4130  010BD2  D004               	goto	l981
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;2_April_TestMain.c: 448: Send_Frame=0;
  4134  010BD4  0E00               	movlw	0
  4135  010BD6  6FA9               	movwf	_Send_Frame& (0+255),b
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;2_April_TestMain.c: 449: write_TX_normal_FIFO();
  4139  010BD8  ECE3  F08A         	call	_write_TX_normal_FIFO	;wreg free
  4140  010BDC                     l981:
  4141                           
  4142                           ;2_April_TestMain.c: 450: }
  4143                           ;2_April_TestMain.c: 451: if(Send_Frame_2==1){
  4144  010BDC  0100               	movlb	0	; () banked
  4145  010BDE  05A8               	decf	_Send_Frame_2& (0+255),w,b
  4146  010BE0  A4D8               	btfss	status,2,c
  4147  010BE2  D004               	goto	l982
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;2_April_TestMain.c: 452: Send_Frame_2=0;
  4151  010BE4  0E00               	movlw	0
  4152  010BE6  6FA8               	movwf	_Send_Frame_2& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;2_April_TestMain.c: 453: write_TX_normal_FIFO();
  4156  010BE8  ECE3  F08A         	call	_write_TX_normal_FIFO	;wreg free
  4157  010BEC                     l982:
  4158  010BEC                     l7171:
  4159                           
  4160                           ;2_April_TestMain.c: 454: }
  4161                           ;2_April_TestMain.c: 455: }
  4162                           ;2_April_TestMain.c: 456: if((CRC==Rv_CRC) && (DATA_RX[0]=='$')){
  4163  010BEC  0100               	movlb	0	; () banked
  4164  010BEE  5195               	movf	_Rv_CRC& (0+255),w,b
  4165  010BF0  1991               	xorwf	_CRC& (0+255),w,b
  4166  010BF2  E103               	bnz	u4131
  4167  010BF4  5196               	movf	(_Rv_CRC+1)& (0+255),w,b
  4168  010BF6  1992               	xorwf	(_CRC+1)& (0+255),w,b
  4169  010BF8  A4D8               	btfss	status,2,c
  4170  010BFA                     u4131:
  4171  010BFA  EFA8  F080         	goto	l936
  4172                           
  4173                           ; BSR set to: 0
  4174  010BFE  0E24               	movlw	36
  4175  010C00  19B2               	xorwf	_DATA_RX& (0+255),w,b
  4176  010C02  A4D8               	btfss	status,2,c
  4177  010C04  EFA8  F080         	goto	l936
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;2_April_TestMain.c: 457: Store_DATA[0]=DATA_RX[1];
  4181  010C08  C0B3  F081         	movff	_DATA_RX+1,_Store_DATA
  4182                           
  4183                           ;2_April_TestMain.c: 458: Store_DATA[1]=DATA_RX[2];
  4184  010C0C  C0B4  F082         	movff	_DATA_RX+2,_Store_DATA+1
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;2_April_TestMain.c: 459: Clear_Data();
  4188  010C10  EC8A  F093         	call	_Clear_Data	;wreg free
  4189                           
  4190                           ;2_April_TestMain.c: 460: if(Store_DATA[1]=='C'){
  4191  010C14  0E43               	movlw	67
  4192  010C16  0100               	movlb	0	; () banked
  4193  010C18  1982               	xorwf	(_Store_DATA+1)& (0+255),w,b
  4194  010C1A  A4D8               	btfss	status,2,c
  4195  010C1C  D13C               	goto	l989
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;2_April_TestMain.c: 461: if(Store_DATA[0]<10 && Store_DATA[0]>=1){
  4199  010C1E  0E0A               	movlw	10
  4200  010C20  6181               	cpfslt	_Store_DATA& (0+255),b
  4201  010C22  D03F               	goto	l985
  4202                           
  4203                           ; BSR set to: 0
  4204  010C24  5181               	movf	_Store_DATA& (0+255),w,b
  4205  010C26  B4D8               	btfsc	status,2,c
  4206  010C28  D03C               	goto	l985
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;2_April_TestMain.c: 462: Store_DATA[0]+=0x30;
  4210  010C2A  0E30               	movlw	48
  4211  010C2C  2781               	addwf	_Store_DATA& (0+255),f,b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;2_April_TestMain.c: 463: Emeregency[3]=Store_DATA[0];
  4215  010C2E  C081  F16D         	movff	_Store_DATA,_Emeregency+3
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;2_April_TestMain.c: 464: Message_Send_Frame_1();
  4219  010C32  ECC9  F08F         	call	_Message_Send_Frame_1	;wreg free
  4220                           
  4221                           ;2_April_TestMain.c: 465: lcd_clear();
  4222  010C36  ECA0  F095         	call	_lcd_clear	;wreg free
  4223                           
  4224                           ;2_April_TestMain.c: 466: LcdDisplay(0x80,"  ID    is in ");
  4225  010C3A  0EEF               	movlw	low STR_15
  4226  010C3C  0101               	movlb	1	; () banked
  4227  010C3E  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4228  010C40  0EFF               	movlw	high STR_15
  4229  010C42  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4230  010C44  0E80               	movlw	128
  4231  010C46  ECED  F092         	call	_LcdDisplay
  4232                           
  4233                           ;2_April_TestMain.c: 467: LcdCmd(0x85);
  4234  010C4A  0E85               	movlw	133
  4235  010C4C  ECD0  F094         	call	_LcdCmd
  4236                           
  4237                           ;2_April_TestMain.c: 468: LcdData(Emeregency[3]);
  4238  010C50  0101               	movlb	1	; () banked
  4239  010C52  516D               	movf	(_Emeregency+3)& (0+255),w,b
  4240  010C54  ECC0  F094         	call	_LcdData
  4241                           
  4242                           ;2_April_TestMain.c: 469: LcdDisplay(0xC0,"   Emergency  ");
  4243  010C58  0EE0               	movlw	low STR_33
  4244  010C5A  0101               	movlb	1	; () banked
  4245  010C5C  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4246  010C5E  0EFF               	movlw	high STR_33
  4247  010C60  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4248  010C62  0EC0               	movlw	192
  4249  010C64  ECED  F092         	call	_LcdDisplay
  4250                           
  4251                           ;2_April_TestMain.c: 470: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  4252  010C68  0E01               	movlw	1
  4253  010C6A  0101               	movlb	1	; () banked
  4254  010C6C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4255  010C6E  0E2C               	movlw	44
  4256  010C70  6FD8               	movwf	Delayms@time& (0+255),b
  4257  010C72  EC0D  F093         	call	_Delayms	;wreg free
  4258  010C76  0E01               	movlw	1
  4259  010C78  0101               	movlb	1	; () banked
  4260  010C7A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4261  010C7C  0E2C               	movlw	44
  4262  010C7E  6FD8               	movwf	Delayms@time& (0+255),b
  4263  010C80  EC0D  F093         	call	_Delayms	;wreg free
  4264  010C84  0E01               	movlw	1
  4265  010C86  0101               	movlb	1	; () banked
  4266  010C88  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4267  010C8A  0E2C               	movlw	44
  4268  010C8C  6FD8               	movwf	Delayms@time& (0+255),b
  4269  010C8E  EC0D  F093         	call	_Delayms	;wreg free
  4270  010C92  0E01               	movlw	1
  4271  010C94  0101               	movlb	1	; () banked
  4272  010C96  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4273  010C98  0E2C               	movlw	44
  4274  010C9A  6FD8               	movwf	Delayms@time& (0+255),b
  4275  010C9C  EC0D  F093         	call	_Delayms	;wreg free
  4276                           
  4277                           ;2_April_TestMain.c: 471: }
  4278  010CA0  D0FA               	goto	l989
  4279  010CA2                     l985:
  4280                           
  4281                           ;2_April_TestMain.c: 472: else if(Store_DATA[0]>=10 && Store_DATA[0]<100){
  4282  010CA2  0E09               	movlw	9
  4283  010CA4  0100               	movlb	0	; () banked
  4284  010CA6  6581               	cpfsgt	_Store_DATA& (0+255),b
  4285  010CA8  D067               	goto	l987
  4286                           
  4287                           ; BSR set to: 0
  4288  010CAA  0E64               	movlw	100
  4289  010CAC  6181               	cpfslt	_Store_DATA& (0+255),b
  4290  010CAE  D064               	goto	l987
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;2_April_TestMain.c: 473: IDByte1=Store_DATA[0] / 10;
  4294  010CB0  C081  F1D8         	movff	_Store_DATA,___awdiv@dividend
  4295  010CB4  0101               	movlb	1	; () banked
  4296  010CB6  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  4297  010CB8  0E00               	movlw	0
  4298  010CBA  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  4299  010CBC  0E0A               	movlw	10
  4300  010CBE  6FDA               	movwf	___awdiv@divisor& (0+255),b
  4301  010CC0  EC11  F090         	call	___awdiv	;wreg free
  4302  010CC4  0101               	movlb	1	; () banked
  4303  010CC6  51D8               	movf	?___awdiv& (0+255),w,b
  4304  010CC8  0100               	movlb	0	; () banked
  4305  010CCA  6FA2               	movwf	_IDByte1& (0+255),b
  4306                           
  4307                           ;2_April_TestMain.c: 474: IDByte2=Store_DATA[0] % 10;
  4308  010CCC  C081  F1D8         	movff	_Store_DATA,___awmod@dividend
  4309  010CD0  0101               	movlb	1	; () banked
  4310  010CD2  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  4311  010CD4  0E00               	movlw	0
  4312  010CD6  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  4313  010CD8  0E0A               	movlw	10
  4314  010CDA  6FDA               	movwf	___awmod@divisor& (0+255),b
  4315  010CDC  EC91  F090         	call	___awmod	;wreg free
  4316  010CE0  0101               	movlb	1	; () banked
  4317  010CE2  51D8               	movf	?___awmod& (0+255),w,b
  4318  010CE4  0100               	movlb	0	; () banked
  4319  010CE6  6FA1               	movwf	_IDByte2& (0+255),b
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;2_April_TestMain.c: 475: Emeregency2[3]=IDByte1 + 0x30;
  4323  010CE8  51A2               	movf	_IDByte1& (0+255),w,b
  4324  010CEA  0F30               	addlw	48
  4325  010CEC  0101               	movlb	1	; () banked
  4326  010CEE  6F57               	movwf	(_Emeregency2+3)& (0+255),b
  4327                           
  4328                           ; BSR set to: 1
  4329                           ;2_April_TestMain.c: 476: Emeregency2[4]=IDByte2 + 0x30;
  4330  010CF0  0100               	movlb	0	; () banked
  4331  010CF2  51A1               	movf	_IDByte2& (0+255),w,b
  4332  010CF4  0F30               	addlw	48
  4333  010CF6  0101               	movlb	1	; () banked
  4334  010CF8  6F58               	movwf	(_Emeregency2+4)& (0+255),b
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;2_April_TestMain.c: 477: Message_Send_Frame_2();
  4338  010CFA  EC81  F08F         	call	_Message_Send_Frame_2	;wreg free
  4339                           
  4340                           ;2_April_TestMain.c: 478: lcd_clear();
  4341  010CFE  ECA0  F095         	call	_lcd_clear	;wreg free
  4342                           
  4343                           ;2_April_TestMain.c: 479: LcdDisplay(0x80,"  ID    is in ");
  4344  010D02  0EEF               	movlw	low STR_15
  4345  010D04  0101               	movlb	1	; () banked
  4346  010D06  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4347  010D08  0EFF               	movlw	high STR_15
  4348  010D0A  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4349  010D0C  0E80               	movlw	128
  4350  010D0E  ECED  F092         	call	_LcdDisplay
  4351                           
  4352                           ;2_April_TestMain.c: 480: LcdCmd(0x85);
  4353  010D12  0E85               	movlw	133
  4354  010D14  ECD0  F094         	call	_LcdCmd
  4355                           
  4356                           ;2_April_TestMain.c: 481: LcdData(Emeregency2[3]);
  4357  010D18  0101               	movlb	1	; () banked
  4358  010D1A  5157               	movf	(_Emeregency2+3)& (0+255),w,b
  4359  010D1C  ECC0  F094         	call	_LcdData
  4360                           
  4361                           ;2_April_TestMain.c: 482: LcdCmd(0x86);
  4362  010D20  0E86               	movlw	134
  4363  010D22  ECD0  F094         	call	_LcdCmd
  4364                           
  4365                           ;2_April_TestMain.c: 483: LcdData(Emeregency2[4]);
  4366  010D26  0101               	movlb	1	; () banked
  4367  010D28  5158               	movf	(_Emeregency2+4)& (0+255),w,b
  4368  010D2A  ECC0  F094         	call	_LcdData
  4369                           
  4370                           ;2_April_TestMain.c: 484: LcdDisplay(0xC0,"   Emergency  ");
  4371  010D2E  0EE0               	movlw	low STR_33
  4372  010D30  0101               	movlb	1	; () banked
  4373  010D32  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4374  010D34  0EFF               	movlw	high STR_33
  4375  010D36  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4376  010D38  0EC0               	movlw	192
  4377  010D3A  ECED  F092         	call	_LcdDisplay
  4378                           
  4379                           ;2_April_TestMain.c: 485: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  4380  010D3E  0E01               	movlw	1
  4381  010D40  0101               	movlb	1	; () banked
  4382  010D42  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4383  010D44  0E2C               	movlw	44
  4384  010D46  6FD8               	movwf	Delayms@time& (0+255),b
  4385  010D48  EC0D  F093         	call	_Delayms	;wreg free
  4386  010D4C  0E01               	movlw	1
  4387  010D4E  0101               	movlb	1	; () banked
  4388  010D50  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4389  010D52  0E2C               	movlw	44
  4390  010D54  6FD8               	movwf	Delayms@time& (0+255),b
  4391  010D56  EC0D  F093         	call	_Delayms	;wreg free
  4392  010D5A  0E01               	movlw	1
  4393  010D5C  0101               	movlb	1	; () banked
  4394  010D5E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4395  010D60  0E2C               	movlw	44
  4396  010D62  6FD8               	movwf	Delayms@time& (0+255),b
  4397  010D64  EC0D  F093         	call	_Delayms	;wreg free
  4398  010D68  0E01               	movlw	1
  4399  010D6A  0101               	movlb	1	; () banked
  4400  010D6C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4401  010D6E  0E2C               	movlw	44
  4402  010D70  6FD8               	movwf	Delayms@time& (0+255),b
  4403  010D72  EC0D  F093         	call	_Delayms	;wreg free
  4404                           
  4405                           ;2_April_TestMain.c: 486: }
  4406  010D76  D08F               	goto	l989
  4407  010D78                     l987:
  4408                           
  4409                           ;2_April_TestMain.c: 487: else if(Store_DATA[0]>=100 && Store_DATA[0]<=255){
  4410  010D78  0E63               	movlw	99
  4411  010D7A  0100               	movlb	0	; () banked
  4412  010D7C  6581               	cpfsgt	_Store_DATA& (0+255),b
  4413  010D7E  D08B               	goto	l989
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;2_April_TestMain.c: 488: IDByte3=Store_DATA[0] / 100;
  4417  010D80  C081  F1D8         	movff	_Store_DATA,___awdiv@dividend
  4418  010D84  0101               	movlb	1	; () banked
  4419  010D86  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  4420  010D88  0E00               	movlw	0
  4421  010D8A  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  4422  010D8C  0E64               	movlw	100
  4423  010D8E  6FDA               	movwf	___awdiv@divisor& (0+255),b
  4424  010D90  EC11  F090         	call	___awdiv	;wreg free
  4425  010D94  0101               	movlb	1	; () banked
  4426  010D96  51D8               	movf	?___awdiv& (0+255),w,b
  4427  010D98  0100               	movlb	0	; () banked
  4428  010D9A  6FA0               	movwf	_IDByte3& (0+255),b
  4429                           
  4430                           ;2_April_TestMain.c: 489: V_Temp =Store_DATA[0] % 100;
  4431  010D9C  C081  F1D8         	movff	_Store_DATA,___awmod@dividend
  4432  010DA0  0101               	movlb	1	; () banked
  4433  010DA2  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  4434  010DA4  0E00               	movlw	0
  4435  010DA6  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  4436  010DA8  0E64               	movlw	100
  4437  010DAA  6FDA               	movwf	___awmod@divisor& (0+255),b
  4438  010DAC  EC91  F090         	call	___awmod	;wreg free
  4439  010DB0  0101               	movlb	1	; () banked
  4440  010DB2  51D8               	movf	?___awmod& (0+255),w,b
  4441  010DB4  0100               	movlb	0	; () banked
  4442  010DB6  6F9F               	movwf	_V_Temp& (0+255),b
  4443                           
  4444                           ;2_April_TestMain.c: 490: IDByte2=V_Temp/10;
  4445  010DB8  C09F  F1D8         	movff	_V_Temp,___awdiv@dividend
  4446  010DBC  0101               	movlb	1	; () banked
  4447  010DBE  6BD9               	clrf	(___awdiv@dividend+1)& (0+255),b
  4448  010DC0  0E00               	movlw	0
  4449  010DC2  6FDB               	movwf	(___awdiv@divisor+1)& (0+255),b
  4450  010DC4  0E0A               	movlw	10
  4451  010DC6  6FDA               	movwf	___awdiv@divisor& (0+255),b
  4452  010DC8  EC11  F090         	call	___awdiv	;wreg free
  4453  010DCC  0101               	movlb	1	; () banked
  4454  010DCE  51D8               	movf	?___awdiv& (0+255),w,b
  4455  010DD0  0100               	movlb	0	; () banked
  4456  010DD2  6FA1               	movwf	_IDByte2& (0+255),b
  4457                           
  4458                           ;2_April_TestMain.c: 491: IDByte1=V_Temp%10;
  4459  010DD4  C09F  F1D8         	movff	_V_Temp,___awmod@dividend
  4460  010DD8  0101               	movlb	1	; () banked
  4461  010DDA  6BD9               	clrf	(___awmod@dividend+1)& (0+255),b
  4462  010DDC  0E00               	movlw	0
  4463  010DDE  6FDB               	movwf	(___awmod@divisor+1)& (0+255),b
  4464  010DE0  0E0A               	movlw	10
  4465  010DE2  6FDA               	movwf	___awmod@divisor& (0+255),b
  4466  010DE4  EC91  F090         	call	___awmod	;wreg free
  4467  010DE8  0101               	movlb	1	; () banked
  4468  010DEA  51D8               	movf	?___awmod& (0+255),w,b
  4469  010DEC  0100               	movlb	0	; () banked
  4470  010DEE  6FA2               	movwf	_IDByte1& (0+255),b
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;2_April_TestMain.c: 492: Emeregency3[3]=IDByte3 + 0x30;
  4474  010DF0  51A0               	movf	_IDByte3& (0+255),w,b
  4475  010DF2  0F30               	addlw	48
  4476  010DF4  0101               	movlb	1	; () banked
  4477  010DF6  6F2A               	movwf	(_Emeregency3+3)& (0+255),b
  4478                           
  4479                           ; BSR set to: 1
  4480                           ;2_April_TestMain.c: 493: Emeregency3[4]=IDByte2 + 0x30;
  4481  010DF8  0100               	movlb	0	; () banked
  4482  010DFA  51A1               	movf	_IDByte2& (0+255),w,b
  4483  010DFC  0F30               	addlw	48
  4484  010DFE  0101               	movlb	1	; () banked
  4485  010E00  6F2B               	movwf	(_Emeregency3+4)& (0+255),b
  4486                           
  4487                           ; BSR set to: 1
  4488                           ;2_April_TestMain.c: 494: Emeregency3[5]=IDByte1 + 0x30;
  4489  010E02  0100               	movlb	0	; () banked
  4490  010E04  51A2               	movf	_IDByte1& (0+255),w,b
  4491  010E06  0F30               	addlw	48
  4492  010E08  0101               	movlb	1	; () banked
  4493  010E0A  6F2C               	movwf	(_Emeregency3+5)& (0+255),b
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;2_April_TestMain.c: 495: Message_Send_Frame_3();
  4497  010E0C  EC39  F08F         	call	_Message_Send_Frame_3	;wreg free
  4498                           
  4499                           ;2_April_TestMain.c: 496: lcd_clear();
  4500  010E10  ECA0  F095         	call	_lcd_clear	;wreg free
  4501                           
  4502                           ;2_April_TestMain.c: 497: LcdDisplay(0x80,"  ID     is in ");
  4503  010E14  0ED0               	movlw	low STR_19
  4504  010E16  0101               	movlb	1	; () banked
  4505  010E18  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4506  010E1A  0EFF               	movlw	high STR_19
  4507  010E1C  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4508  010E1E  0E80               	movlw	128
  4509  010E20  ECED  F092         	call	_LcdDisplay
  4510                           
  4511                           ;2_April_TestMain.c: 498: LcdCmd(0x85);
  4512  010E24  0E85               	movlw	133
  4513  010E26  ECD0  F094         	call	_LcdCmd
  4514                           
  4515                           ;2_April_TestMain.c: 499: LcdData(Emeregency3[3]);
  4516  010E2A  0101               	movlb	1	; () banked
  4517  010E2C  512A               	movf	(_Emeregency3+3)& (0+255),w,b
  4518  010E2E  ECC0  F094         	call	_LcdData
  4519                           
  4520                           ;2_April_TestMain.c: 500: LcdCmd(0x86);
  4521  010E32  0E86               	movlw	134
  4522  010E34  ECD0  F094         	call	_LcdCmd
  4523                           
  4524                           ;2_April_TestMain.c: 501: LcdData(Emeregency3[4]);
  4525  010E38  0101               	movlb	1	; () banked
  4526  010E3A  512B               	movf	(_Emeregency3+4)& (0+255),w,b
  4527  010E3C  ECC0  F094         	call	_LcdData
  4528                           
  4529                           ;2_April_TestMain.c: 502: LcdCmd(0x87);
  4530  010E40  0E87               	movlw	135
  4531  010E42  ECD0  F094         	call	_LcdCmd
  4532                           
  4533                           ;2_April_TestMain.c: 503: LcdData(Emeregency3[5]);
  4534  010E46  0101               	movlb	1	; () banked
  4535  010E48  512C               	movf	(_Emeregency3+5)& (0+255),w,b
  4536  010E4A  ECC0  F094         	call	_LcdData
  4537                           
  4538                           ;2_April_TestMain.c: 504: LcdDisplay(0xC0,"   Emergency  ");
  4539  010E4E  0EE0               	movlw	low STR_33
  4540  010E50  0101               	movlb	1	; () banked
  4541  010E52  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4542  010E54  0EFF               	movlw	high STR_33
  4543  010E56  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4544  010E58  0EC0               	movlw	192
  4545  010E5A  ECED  F092         	call	_LcdDisplay
  4546                           
  4547                           ;2_April_TestMain.c: 505: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  4548  010E5E  0E01               	movlw	1
  4549  010E60  0101               	movlb	1	; () banked
  4550  010E62  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4551  010E64  0E2C               	movlw	44
  4552  010E66  6FD8               	movwf	Delayms@time& (0+255),b
  4553  010E68  EC0D  F093         	call	_Delayms	;wreg free
  4554  010E6C  0E01               	movlw	1
  4555  010E6E  0101               	movlb	1	; () banked
  4556  010E70  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4557  010E72  0E2C               	movlw	44
  4558  010E74  6FD8               	movwf	Delayms@time& (0+255),b
  4559  010E76  EC0D  F093         	call	_Delayms	;wreg free
  4560  010E7A  0E01               	movlw	1
  4561  010E7C  0101               	movlb	1	; () banked
  4562  010E7E  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4563  010E80  0E2C               	movlw	44
  4564  010E82  6FD8               	movwf	Delayms@time& (0+255),b
  4565  010E84  EC0D  F093         	call	_Delayms	;wreg free
  4566  010E88  0E01               	movlw	1
  4567  010E8A  0101               	movlb	1	; () banked
  4568  010E8C  6FD9               	movwf	(Delayms@time+1)& (0+255),b
  4569  010E8E  0E2C               	movlw	44
  4570  010E90  6FD8               	movwf	Delayms@time& (0+255),b
  4571  010E92  EC0D  F093         	call	_Delayms	;wreg free
  4572  010E96                     l989:
  4573                           
  4574                           ;2_April_TestMain.c: 507: }
  4575                           ;2_April_TestMain.c: 509: }
  4576                           ;2_April_TestMain.c: 510: if(Store_DATA[1] == '1'){
  4577  010E96  0E31               	movlw	49
  4578  010E98  0100               	movlb	0	; () banked
  4579  010E9A  1982               	xorwf	(_Store_DATA+1)& (0+255),w,b
  4580  010E9C  A4D8               	btfss	status,2,c
  4581  010E9E  D02D               	goto	l990
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;2_April_TestMain.c: 511: if((SMS[10] != 0) && (SMS[11]==0x0d)){
  4585  010EA0  517C               	movf	(_SMS+10)& (0+255),w,b
  4586  010EA2  B4D8               	btfsc	status,2,c
  4587  010EA4  D007               	goto	l991
  4588                           
  4589                           ; BSR set to: 0
  4590  010EA6  0E0D               	movlw	13
  4591  010EA8  197D               	xorwf	(_SMS+11)& (0+255),w,b
  4592  010EAA  A4D8               	btfss	status,2,c
  4593  010EAC  D003               	goto	l991
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;2_April_TestMain.c: 512: Message4[4]=SMS[10];
  4597  010EAE  C07C  F142         	movff	_SMS+10,_Message4+4
  4598                           
  4599                           ;2_April_TestMain.c: 513: }
  4600  010EB2  D019               	goto	l995
  4601  010EB4                     l991:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;2_April_TestMain.c: 514: else if((SMS[10] != 0) && (SMS[12]==0x0d)){
  4605                           
  4606                           ; BSR set to: 0
  4607  010EB4  517C               	movf	(_SMS+10)& (0+255),w,b
  4608  010EB6  B4D8               	btfsc	status,2,c
  4609  010EB8  D009               	goto	l993
  4610                           
  4611                           ; BSR set to: 0
  4612  010EBA  0E0D               	movlw	13
  4613  010EBC  197E               	xorwf	(_SMS+12)& (0+255),w,b
  4614  010EBE  A4D8               	btfss	status,2,c
  4615  010EC0  D005               	goto	l993
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;2_April_TestMain.c: 515: Message4[4]=SMS[10];
  4619  010EC2  C07C  F142         	movff	_SMS+10,_Message4+4
  4620                           
  4621                           ;2_April_TestMain.c: 516: Message4[5]=SMS[11];
  4622  010EC6  C07D  F143         	movff	_SMS+11,_Message4+5
  4623                           
  4624                           ;2_April_TestMain.c: 517: }
  4625  010ECA  D00D               	goto	l995
  4626  010ECC                     l993:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;2_April_TestMain.c: 518: else if((SMS[10] !=0) && (SMS[13]==0x0d)){
  4630                           
  4631                           ; BSR set to: 0
  4632  010ECC  517C               	movf	(_SMS+10)& (0+255),w,b
  4633  010ECE  B4D8               	btfsc	status,2,c
  4634  010ED0  D00A               	goto	l995
  4635                           
  4636                           ; BSR set to: 0
  4637  010ED2  0E0D               	movlw	13
  4638  010ED4  197F               	xorwf	(_SMS+13)& (0+255),w,b
  4639  010ED6  A4D8               	btfss	status,2,c
  4640  010ED8  D006               	goto	l995
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;2_April_TestMain.c: 519: Message4[3]=SMS[10];
  4644  010EDA  C07C  F141         	movff	_SMS+10,_Message4+3
  4645                           
  4646                           ;2_April_TestMain.c: 520: Message4[4]=SMS[11];
  4647  010EDE  C07D  F142         	movff	_SMS+11,_Message4+4
  4648                           
  4649                           ;2_April_TestMain.c: 521: Message4[5]=SMS[12];
  4650  010EE2  C07E  F143         	movff	_SMS+12,_Message4+5
  4651  010EE6                     l995:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;2_April_TestMain.c: 522: }
  4655                           ;2_April_TestMain.c: 523: Message_Send_Frame_LDR_ON();
  4656                           
  4657                           ; BSR set to: 0
  4658                           
  4659                           ; BSR set to: 0
  4660                           
  4661                           ; BSR set to: 0
  4662  010EE6  ECF1  F08E         	call	_Message_Send_Frame_LDR_ON	;wreg free
  4663                           
  4664                           ;2_April_TestMain.c: 524: Message4[3]=' ';
  4665  010EEA  0E20               	movlw	32
  4666  010EEC  0101               	movlb	1	; () banked
  4667  010EEE  6F41               	movwf	(_Message4+3)& (0+255),b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;2_April_TestMain.c: 525: Message4[4]=' ';
  4671  010EF0  0E20               	movlw	32
  4672  010EF2  6F42               	movwf	(_Message4+4)& (0+255),b
  4673                           
  4674                           ; BSR set to: 1
  4675                           ;2_April_TestMain.c: 526: Message4[5]=' ';
  4676  010EF4  0E20               	movlw	32
  4677  010EF6  6F43               	movwf	(_Message4+5)& (0+255),b
  4678  010EF8  D02D               	goto	l7337
  4679  010EFA                     l990:
  4680                           
  4681                           ;2_April_TestMain.c: 529: if((SMS[10] != 0) && (SMS[11]==0x0d)){
  4682  010EFA  0100               	movlb	0	; () banked
  4683  010EFC  517C               	movf	(_SMS+10)& (0+255),w,b
  4684  010EFE  B4D8               	btfsc	status,2,c
  4685  010F00  D007               	goto	l997
  4686                           
  4687                           ; BSR set to: 0
  4688  010F02  0E0D               	movlw	13
  4689  010F04  197D               	xorwf	(_SMS+11)& (0+255),w,b
  4690  010F06  A4D8               	btfss	status,2,c
  4691  010F08  D003               	goto	l997
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;2_April_TestMain.c: 530: Message5[4]=SMS[10];
  4695  010F0A  C07C  F113         	movff	_SMS+10,_Message5+4
  4696                           
  4697                           ;2_April_TestMain.c: 531: }
  4698  010F0E  D019               	goto	l1001
  4699  010F10                     l997:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;2_April_TestMain.c: 532: else if((SMS[10] != 0) && (SMS[12]==0x0d)){
  4703                           
  4704                           ; BSR set to: 0
  4705  010F10  517C               	movf	(_SMS+10)& (0+255),w,b
  4706  010F12  B4D8               	btfsc	status,2,c
  4707  010F14  D009               	goto	l999
  4708                           
  4709                           ; BSR set to: 0
  4710  010F16  0E0D               	movlw	13
  4711  010F18  197E               	xorwf	(_SMS+12)& (0+255),w,b
  4712  010F1A  A4D8               	btfss	status,2,c
  4713  010F1C  D005               	goto	l999
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;2_April_TestMain.c: 533: Message5[4]=SMS[10];
  4717  010F1E  C07C  F113         	movff	_SMS+10,_Message5+4
  4718                           
  4719                           ;2_April_TestMain.c: 534: Message5[5]=SMS[11];
  4720  010F22  C07D  F114         	movff	_SMS+11,_Message5+5
  4721                           
  4722                           ;2_April_TestMain.c: 535: }
  4723  010F26  D00D               	goto	l1001
  4724  010F28                     l999:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;2_April_TestMain.c: 536: else if((SMS[10] !=0) && (SMS[13]==0x0d)){
  4728                           
  4729                           ; BSR set to: 0
  4730  010F28  517C               	movf	(_SMS+10)& (0+255),w,b
  4731  010F2A  B4D8               	btfsc	status,2,c
  4732  010F2C  D00A               	goto	l1001
  4733                           
  4734                           ; BSR set to: 0
  4735  010F2E  0E0D               	movlw	13
  4736  010F30  197F               	xorwf	(_SMS+13)& (0+255),w,b
  4737  010F32  A4D8               	btfss	status,2,c
  4738  010F34  D006               	goto	l1001
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;2_April_TestMain.c: 537: Message5[3]=SMS[10];
  4742  010F36  C07C  F112         	movff	_SMS+10,_Message5+3
  4743                           
  4744                           ;2_April_TestMain.c: 538: Message5[4]=SMS[11];
  4745  010F3A  C07D  F113         	movff	_SMS+11,_Message5+4
  4746                           
  4747                           ;2_April_TestMain.c: 539: Message5[5]=SMS[12];
  4748  010F3E  C07E  F114         	movff	_SMS+12,_Message5+5
  4749  010F42                     l1001:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;2_April_TestMain.c: 541: }
  4753                           ;2_April_TestMain.c: 542: Message_Send_Frame_LDR_OFF();
  4754                           
  4755                           ; BSR set to: 0
  4756                           
  4757                           ; BSR set to: 0
  4758                           
  4759                           ; BSR set to: 0
  4760  010F42  EC59  F08D         	call	_Message_Send_Frame_LDR_OFF	;wreg free
  4761                           
  4762                           ;2_April_TestMain.c: 543: Message5[3]=' ';
  4763  010F46  0E20               	movlw	32
  4764  010F48  0101               	movlb	1	; () banked
  4765  010F4A  6F12               	movwf	(_Message5+3)& (0+255),b
  4766                           
  4767                           ; BSR set to: 1
  4768                           ;2_April_TestMain.c: 544: Message5[4]=' ';
  4769  010F4C  0E20               	movlw	32
  4770  010F4E  6F13               	movwf	(_Message5+4)& (0+255),b
  4771                           
  4772                           ; BSR set to: 1
  4773                           ;2_April_TestMain.c: 545: Message5[5]=' ';
  4774  010F50  0E20               	movlw	32
  4775  010F52  6F14               	movwf	(_Message5+5)& (0+255),b
  4776  010F54                     l7337:
  4777                           
  4778                           ; BSR set to: 1
  4779                           ;2_April_TestMain.c: 546: __nop();
  4780  010F54  F000               	nop	
  4781                           
  4782                           ;2_April_TestMain.c: 547: }
  4783                           ;2_April_TestMain.c: 548: lcd_clear();
  4784  010F56  ECA0  F095         	call	_lcd_clear	;wreg free
  4785                           
  4786                           ;2_April_TestMain.c: 549: LcdDisplay(0x80,"Waiting for SMS    ");
  4787  010F5A  0EB1               	movlw	low STR_3
  4788  010F5C  0101               	movlb	1	; () banked
  4789  010F5E  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4790  010F60  0EFE               	movlw	high STR_3
  4791  010F62  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4792  010F64  0E80               	movlw	128
  4793  010F66  ECED  F092         	call	_LcdDisplay
  4794                           
  4795                           ;2_April_TestMain.c: 550: LcdDisplay(0xC0,"                   ");
  4796  010F6A  0E11               	movlw	low STR_4
  4797  010F6C  0101               	movlb	1	; () banked
  4798  010F6E  6FDF               	movwf	LcdDisplay@string& (0+255),b
  4799  010F70  0EFE               	movlw	high STR_4
  4800  010F72  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
  4801  010F74  0EC0               	movlw	192
  4802  010F76  ECED  F092         	call	_LcdDisplay
  4803  010F7A  EFA8  F080         	goto	l936
  4804  010F7E                     __end_of_main:
  4805                           	opt stack 0
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           intcon	equ	0xFF2
  4813                           postinc0	equ	0xFEE
  4814                           wreg	equ	0xFE8
  4815                           indf1	equ	0xFE7
  4816                           postdec1	equ	0xFE5
  4817                           fsr1h	equ	0xFE2
  4818                           fsr1l	equ	0xFE1
  4819                           indf2	equ	0xFDF
  4820                           postinc2	equ	0xFDE
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _write_TX_normal_FIFO *****************
  4826 ;; Defined at:
  4827 ;;		line 335 in file "zigbee.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  i               1   15[BANK1 ] unsigned char 
  4832 ;;  n               1   14[BANK1 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;Total ram usage:        7 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   11
  4849 ;; This function calls:
  4850 ;;		_Delay_ms
  4851 ;;		_Xor_check
  4852 ;;		_set_not_ACK
  4853 ;;		_set_not_encrypt
  4854 ;;		_start_transmit
  4855 ;;		_write_ZIGBEE_long
  4856 ;; This function is called by:
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text1
  4862  0115C6                     __ptext1:
  4863                           	opt stack 0
  4864  0115C6                     _write_TX_normal_FIFO:
  4865                           	opt stack 19
  4866                           
  4867                           ;zigbee.c: 336: unsigned char i = 0,n = 0;
  4868                           
  4869                           ;incstack = 0
  4870  0115C6  0E00               	movlw	0
  4871  0115C8  0101               	movlb	1	; () banked
  4872  0115CA  6FE7               	movwf	write_TX_normal_FIFO@i& (0+255),b
  4873  0115CC  0E00               	movlw	0
  4874  0115CE  6FE6               	movwf	write_TX_normal_FIFO@n& (0+255),b
  4875                           
  4876                           ; BSR set to: 1
  4877                           ;zigbee.c: 338: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  4878  0115D0  0E91               	movlw	low _HEADER_LENGHT
  4879  0115D2  6EF6               	movwf	tblptrl,c
  4880  0115D4                     	if	1	;There is more than 1 active tblptr byte
  4881  0115D4  0EFD               	movlw	high _HEADER_LENGHT
  4882  0115D6  6EF7               	movwf	tblptrh,c
  4883  0115D8                     	endif
  4884  0115D8                     	if	1	;There are 3 active tblptr bytes
  4885  0115D8  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  4886  0115DA  6EF8               	movwf	tblptru,c
  4887  0115DC                     	endif
  4888  0115DC  0008               	tblrd		*
  4889  0115DE  CFF5 F060          	movff	tablat,_data_TX_normal_FIFO
  4890                           
  4891                           ; BSR set to: 1
  4892                           ;zigbee.c: 339: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  4893  0115E2  0E92               	movlw	low _DATA_LENGHT
  4894  0115E4  6EF6               	movwf	tblptrl,c
  4895  0115E6                     	if	1	;There is more than 1 active tblptr byte
  4896  0115E6  0EFD               	movlw	high _DATA_LENGHT
  4897  0115E8  6EF7               	movwf	tblptrh,c
  4898  0115EA                     	endif
  4899  0115EA                     	if	1	;There are 3 active tblptr bytes
  4900  0115EA  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  4901  0115EC  6EF8               	movwf	tblptru,c
  4902  0115EE                     	endif
  4903  0115EE  0008               	tblrd		*
  4904  0115F0  CFF5 F1E1          	movff	tablat,??_write_TX_normal_FIFO
  4905  0115F4  0E91               	movlw	low _HEADER_LENGHT
  4906  0115F6  6EF6               	movwf	tblptrl,c
  4907  0115F8                     	if	1	;There is more than 1 active tblptr byte
  4908  0115F8  0EFD               	movlw	high _HEADER_LENGHT
  4909  0115FA  6EF7               	movwf	tblptrh,c
  4910  0115FC                     	endif
  4911  0115FC                     	if	1	;There are 3 active tblptr bytes
  4912  0115FC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  4913  0115FE  6EF8               	movwf	tblptru,c
  4914  011600                     	endif
  4915  011600  0008               	tblrd		*
  4916  011602  50F5               	movf	tablat,w,c
  4917  011604  25E1               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  4918  011606  0100               	movlb	0	; () banked
  4919  011608  6F61               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;zigbee.c: 340: data_TX_normal_FIFO[2] = 0x01;
  4923  01160A  0E01               	movlw	1
  4924  01160C  6F62               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;zigbee.c: 341: data_TX_normal_FIFO[3] = 0x88;
  4928  01160E  0E88               	movlw	136
  4929  011610  6F63               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;zigbee.c: 342: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  4933  011612  C0CA  F064         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;zigbee.c: 343: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  4937  011616  C0E6  F065         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;zigbee.c: 344: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  4941  01161A  C0E5  F066         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;zigbee.c: 345: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  4945  01161E  C0E7  F067         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;zigbee.c: 346: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  4949  011622  C0E8  F068         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;zigbee.c: 347: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  4953  011626  C0C4  F069         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;zigbee.c: 348: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  4957  01162A  C0C5  F06A         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;zigbee.c: 349: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  4961  01162E  C0C6  F06B         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;zigbee.c: 350: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  4965  011632  C0C7  F06C         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;zigbee.c: 352: for(n=0,ii=13;n<3;n++,ii++){
  4969  011636  0E00               	movlw	0
  4970  011638  0101               	movlb	1	; () banked
  4971  01163A  6FE6               	movwf	write_TX_normal_FIFO@n& (0+255),b
  4972                           
  4973                           ; BSR set to: 1
  4974  01163C  0E0D               	movlw	13
  4975  01163E  0100               	movlb	0	; () banked
  4976  011640  6FAF               	movwf	_ii& (0+255),b
  4977  011642                     l6131:
  4978                           
  4979                           ; BSR set to: 0
  4980  011642  0E02               	movlw	2
  4981  011644  0101               	movlb	1	; () banked
  4982  011646  65E6               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  4983  011648  D001               	goto	l456
  4984  01164A  D018               	goto	u3350
  4985  01164C                     l456:
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;zigbee.c: 353: DATA_TX[n] = data_TX_normal_FIFO[ii];
  4989                           
  4990                           ; BSR set to: 1
  4991  01164C  0100               	movlb	0	; () banked
  4992  01164E  51AF               	movf	_ii& (0+255),w,b
  4993  011650  0D01               	mullw	1
  4994  011652  0E60               	movlw	low _data_TX_normal_FIFO
  4995  011654  24F3               	addwf	prodl,w,c
  4996  011656  6ED9               	movwf	fsr2l,c
  4997  011658  0E00               	movlw	high _data_TX_normal_FIFO
  4998  01165A  20F4               	addwfc	prodh,w,c
  4999  01165C  6EDA               	movwf	fsr2h,c
  5000  01165E  0101               	movlb	1	; () banked
  5001  011660  51E6               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  5002  011662  0D01               	mullw	1
  5003  011664  0EB7               	movlw	low _DATA_TX
  5004  011666  24F3               	addwf	prodl,w,c
  5005  011668  6EE1               	movwf	fsr1l,c
  5006  01166A  0E00               	movlw	high _DATA_TX
  5007  01166C  20F4               	addwfc	prodh,w,c
  5008  01166E  6EE2               	movwf	fsr1h,c
  5009  011670  CFDF FFE7          	movff	indf2,indf1
  5010                           
  5011                           ; BSR set to: 1
  5012  011674  2BE6               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  5013                           
  5014                           ; BSR set to: 1
  5015  011676  0100               	movlb	0	; () banked
  5016  011678  2BAF               	incf	_ii& (0+255),f,b
  5017  01167A  D7E3               	goto	l6131
  5018  01167C                     u3350:
  5019                           
  5020                           ; BSR set to: 1
  5021                           ;zigbee.c: 354: }
  5022                           ;zigbee.c: 355: TX_CRC = Xor_check(DATA_TX,3);
  5023                           
  5024                           ; BSR set to: 1
  5025  01167C  0EB7               	movlw	low _DATA_TX
  5026  01167E  6FD8               	movwf	Xor_check@data_value& (0+255),b
  5027  011680  0E00               	movlw	high _DATA_TX
  5028  011682  6FD9               	movwf	(Xor_check@data_value+1)& (0+255),b
  5029  011684  0E03               	movlw	3
  5030  011686  6FDA               	movwf	Xor_check@length& (0+255),b
  5031  011688  EC8A  F092         	call	_Xor_check	;wreg free
  5032  01168C  C1D8  F093         	movff	?_Xor_check,_TX_CRC
  5033  011690  C1D9  F094         	movff	?_Xor_check+1,_TX_CRC+1
  5034                           
  5035                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  5036  011694  C093  F070         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  5037                           
  5038                           ;zigbee.c: 357: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  5039  011698  0100               	movlb	0	; () banked
  5040  01169A  5194               	movf	(_TX_CRC+1)& (0+255),w,b
  5041  01169C  6F71               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;zigbee.c: 360: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  5045  01169E  0E00               	movlw	0
  5046  0116A0  0101               	movlb	1	; () banked
  5047  0116A2  6FE7               	movwf	write_TX_normal_FIFO@i& (0+255),b
  5048  0116A4                     l6151:
  5049                           
  5050                           ; BSR set to: 1
  5051  0116A4  0E91               	movlw	low _HEADER_LENGHT
  5052  0116A6  6EF6               	movwf	tblptrl,c
  5053  0116A8                     	if	1	;There is more than 1 active tblptr byte
  5054  0116A8  0EFD               	movlw	high _HEADER_LENGHT
  5055  0116AA  6EF7               	movwf	tblptrh,c
  5056  0116AC                     	endif
  5057  0116AC                     	if	1	;There are 3 active tblptr bytes
  5058  0116AC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  5059  0116AE  6EF8               	movwf	tblptru,c
  5060  0116B0                     	endif
  5061  0116B0  0008               	tblrd		*
  5062  0116B2  50F5               	movf	tablat,w,c
  5063  0116B4  6FE1               	movwf	??_write_TX_normal_FIFO& (0+255),b
  5064  0116B6  6BE2               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  5065  0116B8  0E92               	movlw	low _DATA_LENGHT
  5066  0116BA  6EF6               	movwf	tblptrl,c
  5067  0116BC                     	if	1	;There is more than 1 active tblptr byte
  5068  0116BC  0EFD               	movlw	high _DATA_LENGHT
  5069  0116BE  6EF7               	movwf	tblptrh,c
  5070  0116C0                     	endif
  5071  0116C0                     	if	1	;There are 3 active tblptr bytes
  5072  0116C0  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  5073  0116C2  6EF8               	movwf	tblptru,c
  5074  0116C4                     	endif
  5075  0116C4  0008               	tblrd		*
  5076  0116C6  50F5               	movf	tablat,w,c
  5077  0116C8  27E1               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  5078  0116CA  0E00               	movlw	0
  5079  0116CC  23E2               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  5080  0116CE  0E02               	movlw	2
  5081  0116D0  27E1               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  5082  0116D2  0E00               	movlw	0
  5083  0116D4  23E2               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  5084  0116D6  51E7               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  5085  0116D8  6FE3               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  5086  0116DA  6BE4               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  5087  0116DC  51E1               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  5088  0116DE  5DE3               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  5089  0116E0  51E4               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  5090  0116E2  0A80               	xorlw	128
  5091  0116E4  6FE5               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  5092  0116E6  51E2               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  5093  0116E8  0A80               	xorlw	128
  5094  0116EA  59E5               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  5095  0116EC  B0D8               	btfsc	status,0,c
  5096  0116EE  D020               	goto	u3370
  5097                           
  5098                           ; BSR set to: 1
  5099                           ;zigbee.c: 361: {
  5100                           ;zigbee.c: 362: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  5101                           
  5102                           ; BSR set to: 1
  5103                           
  5104                           ; BSR set to: 1
  5105  0116F0  51E7               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  5106  0116F2  0100               	movlb	0	; () banked
  5107  0116F4  2597               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  5108  0116F6  0101               	movlb	1	; () banked
  5109  0116F8  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  5110  0116FA  0E00               	movlw	0
  5111  0116FC  0100               	movlb	0	; () banked
  5112  0116FE  2198               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  5113  011700  0101               	movlb	1	; () banked
  5114  011702  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5115  011704  51E7               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  5116  011706  0D01               	mullw	1
  5117  011708  0E60               	movlw	low _data_TX_normal_FIFO
  5118  01170A  24F3               	addwf	prodl,w,c
  5119  01170C  6ED9               	movwf	fsr2l,c
  5120  01170E  0E00               	movlw	high _data_TX_normal_FIFO
  5121  011710  20F4               	addwfc	prodh,w,c
  5122  011712  6EDA               	movwf	fsr2h,c
  5123  011714  50DF               	movf	indf2,w,c
  5124  011716  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5125  011718  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  5126                           
  5127                           ;zigbee.c: 363: Delay_ms(10);
  5128  01171C  0E00               	movlw	0
  5129  01171E  0101               	movlb	1	; () banked
  5130  011720  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  5131  011722  0E0A               	movlw	10
  5132  011724  6FD8               	movwf	Delay_ms@time& (0+255),b
  5133  011726  EC0C  F095         	call	_Delay_ms	;wreg free
  5134  01172A  0101               	movlb	1	; () banked
  5135  01172C  2BE7               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  5136  01172E  D7BA               	goto	l6151
  5137  011730                     u3370:
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;zigbee.c: 364: }
  5141                           ;zigbee.c: 365: set_not_ACK();
  5142                           
  5143                           ; BSR set to: 1
  5144  011730  EC32  F095         	call	_set_not_ACK	;wreg free
  5145                           
  5146                           ;zigbee.c: 366: set_not_encrypt();
  5147  011734  EC27  F095         	call	_set_not_encrypt	;wreg free
  5148                           
  5149                           ;zigbee.c: 367: start_transmit();
  5150  011738  EC44  F092         	call	_start_transmit	;wreg free
  5151  01173C  0012               	return		;funcret
  5152  01173E                     __end_of_write_TX_normal_FIFO:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           wreg	equ	0xFE8
  5163                           indf1	equ	0xFE7
  5164                           postdec1	equ	0xFE5
  5165                           fsr1h	equ	0xFE2
  5166                           fsr1l	equ	0xFE1
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _start_transmit *****************
  5174 ;; Defined at:
  5175 ;;		line 383 in file "zigbee.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   10
  5196 ;; This function calls:
  5197 ;;		_read_ZIGBEE_short
  5198 ;;		_write_ZIGBEE_short
  5199 ;; This function is called by:
  5200 ;;		_write_TX_normal_FIFO
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text2
  5205  012488                     __ptext2:
  5206                           	opt stack 0
  5207  012488                     _start_transmit:
  5208                           	opt stack 19
  5209                           
  5210                           ;zigbee.c: 385: CHECK=0;
  5211                           
  5212                           ;incstack = 0
  5213  012488  0E00               	movlw	0
  5214  01248A  0100               	movlb	0	; () banked
  5215  01248C  6FB1               	movwf	_CHECK& (0+255),b
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;zigbee.c: 386: CHECK = CHECK | 0x01;
  5219  01248E  51B1               	movf	_CHECK& (0+255),w,b
  5220  012490  0901               	iorlw	1
  5221  012492  6FB1               	movwf	_CHECK& (0+255),b
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;zigbee.c: 387: write_ZIGBEE_short(0x1B,CHECK);
  5225  012494  C0B1  F1DA         	movff	_CHECK,write_ZIGBEE_short@data_r
  5226  012498  0E1B               	movlw	27
  5227  01249A  EC68  F094         	call	_write_ZIGBEE_short
  5228                           
  5229                           ;zigbee.c: 389: CHECK=0;
  5230  01249E  0E00               	movlw	0
  5231  0124A0  0100               	movlb	0	; () banked
  5232  0124A2  6FB1               	movwf	_CHECK& (0+255),b
  5233  0124A4                     
  5234                           ; BSR set to: 0
  5235                           
  5236                           ; BSR set to: 0
  5237  0124A4  0E31               	movlw	49
  5238  0124A6  EC1A  F094         	call	_read_ZIGBEE_short
  5239  0124AA  06E8               	decf	wreg,f,c
  5240  0124AC  A4D8               	btfss	status,2,c
  5241  0124AE  D7FA               	goto	l470
  5242                           
  5243                           ;zigbee.c: 391: CHECK = read_ZIGBEE_short(0x31);
  5244  0124B0  0E31               	movlw	49
  5245  0124B2  EC1A  F094         	call	_read_ZIGBEE_short
  5246  0124B6  0100               	movlb	0	; () banked
  5247  0124B8  6FB1               	movwf	_CHECK& (0+255),b
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;zigbee.c: 392: __nop();
  5251  0124BA  F000               	nop	
  5252                           
  5253                           ;zigbee.c: 393: CHECK = 0;
  5254  0124BC  0E00               	movlw	0
  5255  0124BE  0100               	movlb	0	; () banked
  5256  0124C0  6FB1               	movwf	_CHECK& (0+255),b
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;zigbee.c: 394: CHECK = read_ZIGBEE_short(0x24);
  5260  0124C2  0E24               	movlw	36
  5261  0124C4  EC1A  F094         	call	_read_ZIGBEE_short
  5262  0124C8  0100               	movlb	0	; () banked
  5263  0124CA  6FB1               	movwf	_CHECK& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;zigbee.c: 395: __nop();
  5267  0124CC  F000               	nop	
  5268  0124CE  0012               	return		;funcret
  5269  0124D0                     __end_of_start_transmit:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           intcon	equ	0xFF2
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           fsr2h	equ	0xFDA
  5287                           fsr2l	equ	0xFD9
  5288                           status	equ	0xFD8
  5289                           
  5290 ;; *************** function _read_ZIGBEE_short *****************
  5291 ;; Defined at:
  5292 ;;		line 404 in file "zigbee.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  address         1    wreg     unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  address         1    3[BANK1 ] unsigned char 
  5297 ;;  data_r          1    2[BANK1 ] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      unsigned char 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    9
  5314 ;; This function calls:
  5315 ;;		_SPI_Read
  5316 ;;		_SPI_Write
  5317 ;; This function is called by:
  5318 ;;		_start_transmit
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text3
  5323  012834                     __ptext3:
  5324                           	opt stack 0
  5325  012834                     _read_ZIGBEE_short:
  5326                           	opt stack 19
  5327                           
  5328                           ;incstack = 0
  5329                           ;read_ZIGBEE_short@address stored from wreg
  5330  012834  0101               	movlb	1	; () banked
  5331  012836  6FDB               	movwf	read_ZIGBEE_short@address& (0+255),b
  5332                           
  5333                           ;zigbee.c: 405: unsigned char data_r = 0;
  5334  012838  0E00               	movlw	0
  5335  01283A  0101               	movlb	1	; () banked
  5336  01283C  6FDA               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  5337                           
  5338                           ; BSR set to: 1
  5339                           ;zigbee.c: 407: PORTCbits.RC0=0;
  5340  01283E  9082               	bcf	3970,0,c	;volatile
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
  5344  012840  51DB               	movf	read_ZIGBEE_short@address& (0+255),w,b
  5345  012842  25DB               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  5346  012844  0B7E               	andlw	126
  5347  012846  6FDB               	movwf	read_ZIGBEE_short@address& (0+255),b
  5348                           
  5349                           ; BSR set to: 1
  5350                           ;zigbee.c: 409: SPI_Write(address);
  5351  012848  51DB               	movf	read_ZIGBEE_short@address& (0+255),w,b
  5352  01284A  EC63  F095         	call	_SPI_Write
  5353                           
  5354                           ;zigbee.c: 410: data_r = SPI_Read();
  5355  01284E  EC51  F095         	call	_SPI_Read	;wreg free
  5356  012852  0101               	movlb	1	; () banked
  5357  012854  6FDA               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  5358                           
  5359                           ; BSR set to: 1
  5360                           ;zigbee.c: 411: PORTCbits.RC0=1;
  5361  012856  8082               	bsf	3970,0,c	;volatile
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;zigbee.c: 413: return data_r;
  5365  012858  51DA               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  5366  01285A  0012               	return	
  5367  01285C                     __end_of_read_ZIGBEE_short:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           indf1	equ	0xFE7
  5379                           postdec1	equ	0xFE5
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           indf2	equ	0xFDF
  5383                           postinc2	equ	0xFDE
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _SPI_Read *****************
  5389 ;; Defined at:
  5390 ;;		line 464 in file "zigbee.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  TempVar         1    0[BANK1 ] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      unsigned char 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        1 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    8
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_read_ZIGBEE_short
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text4
  5419  012AA2                     __ptext4:
  5420                           	opt stack 0
  5421  012AA2                     _SPI_Read:
  5422                           	opt stack 19
  5423                           
  5424                           ;zigbee.c: 465: unsigned char TempVar;
  5425                           ;zigbee.c: 466: SSP1BUF = 0xff;
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;incstack = 0
  5429  012AA2  68C9               	setf	4041,c	;volatile
  5430  012AA4  A0C7               	btfss	4039,0,c	;volatile
  5431  012AA6  D7FE               	goto	l497
  5432                           
  5433                           ;zigbee.c: 468: TempVar = SSP1BUF;
  5434  012AA8  CFC9 F1D8          	movff	4041,SPI_Read@TempVar	;volatile
  5435                           
  5436                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
  5437  012AAC  969E               	bcf	3998,3,c	;volatile
  5438                           
  5439                           ;zigbee.c: 470: return ( TempVar );
  5440  012AAE  0101               	movlb	1	; () banked
  5441  012AB0  51D8               	movf	SPI_Read@TempVar& (0+255),w,b
  5442  012AB2  0012               	return	
  5443  012AB4                     __end_of_SPI_Read:
  5444                           	opt stack 0
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           indf1	equ	0xFE7
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function _set_not_encrypt *****************
  5465 ;; Defined at:
  5466 ;;		line 376 in file "zigbee.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  temp            1    4[BANK1 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:   10
  5487 ;; This function calls:
  5488 ;;		_write_ZIGBEE_short
  5489 ;; This function is called by:
  5490 ;;		_write_TX_normal_FIFO
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text5
  5495  012A4E                     __ptext5:
  5496                           	opt stack 0
  5497  012A4E                     _set_not_encrypt:
  5498                           	opt stack 19
  5499                           
  5500                           ;zigbee.c: 378: unsigned char temp = 0;
  5501                           
  5502                           ; BSR set to: 1
  5503                           ;incstack = 0
  5504  012A4E  0E00               	movlw	0
  5505  012A50  0101               	movlb	1	; () banked
  5506  012A52  6FDC               	movwf	set_not_encrypt@temp& (0+255),b
  5507                           
  5508                           ;zigbee.c: 379: temp = temp & (!0x02);
  5509  012A54  0E00               	movlw	0
  5510  012A56  6FDC               	movwf	set_not_encrypt@temp& (0+255),b
  5511                           
  5512                           ; BSR set to: 1
  5513                           ;zigbee.c: 380: write_ZIGBEE_short(0x1B, temp);
  5514  012A58  C1DC  F1DA         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  5515  012A5C  0E1B               	movlw	27
  5516  012A5E  EC68  F094         	call	_write_ZIGBEE_short
  5517  012A62  0012               	return		;funcret
  5518  012A64                     __end_of_set_not_encrypt:
  5519                           	opt stack 0
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           prodh	equ	0xFF4
  5525                           prodl	equ	0xFF3
  5526                           intcon	equ	0xFF2
  5527                           postinc0	equ	0xFEE
  5528                           wreg	equ	0xFE8
  5529                           indf1	equ	0xFE7
  5530                           postdec1	equ	0xFE5
  5531                           fsr1h	equ	0xFE2
  5532                           fsr1l	equ	0xFE1
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _set_not_ACK *****************
  5540 ;; Defined at:
  5541 ;;		line 370 in file "zigbee.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  temp            1    4[BANK1 ] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:        1 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:   10
  5562 ;; This function calls:
  5563 ;;		_write_ZIGBEE_short
  5564 ;; This function is called by:
  5565 ;;		_write_TX_normal_FIFO
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text6
  5570  012A64                     __ptext6:
  5571                           	opt stack 0
  5572  012A64                     _set_not_ACK:
  5573                           	opt stack 19
  5574                           
  5575                           ;zigbee.c: 372: unsigned char temp = 0;
  5576                           
  5577                           ;incstack = 0
  5578  012A64  0E00               	movlw	0
  5579  012A66  0101               	movlb	1	; () banked
  5580  012A68  6FDC               	movwf	set_not_ACK@temp& (0+255),b
  5581                           
  5582                           ;zigbee.c: 373: temp = temp & (!0x04);
  5583  012A6A  0E00               	movlw	0
  5584  012A6C  6FDC               	movwf	set_not_ACK@temp& (0+255),b
  5585                           
  5586                           ; BSR set to: 1
  5587                           ;zigbee.c: 374: write_ZIGBEE_short(0x1B, temp);
  5588  012A6E  C1DC  F1DA         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  5589  012A72  0E1B               	movlw	27
  5590  012A74  EC68  F094         	call	_write_ZIGBEE_short
  5591  012A78  0012               	return		;funcret
  5592  012A7A                     __end_of_set_not_ACK:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           indf1	equ	0xFE7
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           fsr2h	equ	0xFDA
  5610                           fsr2l	equ	0xFD9
  5611                           status	equ	0xFD8
  5612                           
  5613 ;; *************** function _Xor_check *****************
  5614 ;; Defined at:
  5615 ;;		line 504 in file "zigbee.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  data_value      2    0[BANK1 ] PTR unsigned char 
  5618 ;;		 -> DATA_TX(3), DATA_RX(5), 
  5619 ;;  length          1    2[BANK1 ] unsigned char 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  xor             2    6[BANK1 ] unsigned short 
  5622 ;;  xor_value       2    4[BANK1 ] unsigned short 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  2    0[BANK1 ] unsigned short 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5632 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;Total ram usage:        8 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    8
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_write_TX_normal_FIFO
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text7
  5647  012514                     __ptext7:
  5648                           	opt stack 0
  5649  012514                     _Xor_check:
  5650                           	opt stack 21
  5651                           
  5652                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
  5653                           
  5654                           ;incstack = 0
  5655  012514  0E8D               	movlw	141
  5656  012516  0101               	movlb	1	; () banked
  5657  012518  6FDD               	movwf	(Xor_check@xor_value+1)& (0+255),b
  5658  01251A  0E0D               	movlw	13
  5659  01251C  6FDC               	movwf	Xor_check@xor_value& (0+255),b
  5660                           
  5661                           ;zigbee.c: 507: unsigned short xor=0x00;
  5662  01251E  0E00               	movlw	0
  5663  012520  6FDF               	movwf	(Xor_check@xor+1)& (0+255),b
  5664  012522  0E00               	movlw	0
  5665  012524  6FDE               	movwf	Xor_check@xor& (0+255),b
  5666                           
  5667                           ;zigbee.c: 508: while(length --)
  5668  012526  D00A               	goto	l536
  5669  012528                     
  5670                           ; BSR set to: 1
  5671                           ;zigbee.c: 509: {
  5672                           ;zigbee.c: 510: xor_value ^= *data_value++;
  5673                           
  5674                           ; BSR set to: 1
  5675  012528  C1D8  FFD9         	movff	Xor_check@data_value,fsr2l
  5676  01252C  C1D9  FFDA         	movff	Xor_check@data_value+1,fsr2h
  5677  012530  50DF               	movf	indf2,w,c
  5678  012532  6FDB               	movwf	??_Xor_check& (0+255),b
  5679  012534  51DB               	movf	??_Xor_check& (0+255),w,b
  5680  012536  1BDC               	xorwf	Xor_check@xor_value& (0+255),f,b
  5681                           
  5682                           ; BSR set to: 1
  5683  012538  4BD8               	infsnz	Xor_check@data_value& (0+255),f,b
  5684  01253A  2BD9               	incf	(Xor_check@data_value+1)& (0+255),f,b
  5685  01253C                     l536:
  5686                           
  5687                           ; BSR set to: 1
  5688                           
  5689                           ; BSR set to: 1
  5690  01253C  07DA               	decf	Xor_check@length& (0+255),f,b
  5691  01253E  29DA               	incf	Xor_check@length& (0+255),w,b
  5692  012540  A4D8               	btfss	status,2,c
  5693  012542  D7F2               	goto	l537
  5694                           
  5695                           ; BSR set to: 1
  5696                           ;zigbee.c: 511: }
  5697                           ;zigbee.c: 512: xor=xor_value;
  5698  012544  C1DC  F1DE         	movff	Xor_check@xor_value,Xor_check@xor
  5699  012548  C1DD  F1DF         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  5700                           
  5701                           ;zigbee.c: 513: return(xor);
  5702  01254C  C1DE  F1D8         	movff	Xor_check@xor,?_Xor_check
  5703  012550  C1DF  F1D9         	movff	Xor_check@xor+1,?_Xor_check+1
  5704                           
  5705                           ; BSR set to: 1
  5706  012554  0012               	return		;funcret
  5707  012556                     __end_of_Xor_check:
  5708                           	opt stack 0
  5709                           tblptru	equ	0xFF8
  5710                           tblptrh	equ	0xFF7
  5711                           tblptrl	equ	0xFF6
  5712                           tablat	equ	0xFF5
  5713                           prodh	equ	0xFF4
  5714                           prodl	equ	0xFF3
  5715                           intcon	equ	0xFF2
  5716                           postinc0	equ	0xFEE
  5717                           wreg	equ	0xFE8
  5718                           indf1	equ	0xFE7
  5719                           postdec1	equ	0xFE5
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           indf2	equ	0xFDF
  5723                           postinc2	equ	0xFDE
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _set_short_address *****************
  5729 ;; Defined at:
  5730 ;;		line 68 in file "zigbee.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  address         2    4[BANK1 ] PTR unsigned char 
  5733 ;;		 -> ADDRESS_short_2(2), 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5745 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;Total ram usage:        2 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:   10
  5752 ;; This function calls:
  5753 ;;		_write_ZIGBEE_short
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text8
  5760  0127AE                     __ptext8:
  5761                           	opt stack 0
  5762  0127AE                     _set_short_address:
  5763                           	opt stack 20
  5764                           
  5765                           ;zigbee.c: 69: write_ZIGBEE_short(0x03, address[0]);
  5766                           
  5767                           ; BSR set to: 1
  5768                           ;incstack = 0
  5769  0127AE  C1DC  FFD9         	movff	set_short_address@address,fsr2l
  5770  0127B2  C1DD  FFDA         	movff	set_short_address@address+1,fsr2h
  5771  0127B6  50DF               	movf	indf2,w,c
  5772  0127B8  0101               	movlb	1	; () banked
  5773  0127BA  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5774  0127BC  0E03               	movlw	3
  5775  0127BE  EC68  F094         	call	_write_ZIGBEE_short
  5776                           
  5777                           ;zigbee.c: 70: write_ZIGBEE_short(0x04, address[1]);
  5778  0127C2  0101               	movlb	1	; () banked
  5779  0127C4  EE20 F001          	lfsr	2,1
  5780  0127C8  51DC               	movf	set_short_address@address& (0+255),w,b
  5781  0127CA  26D9               	addwf	fsr2l,f,c
  5782  0127CC  51DD               	movf	(set_short_address@address+1)& (0+255),w,b
  5783  0127CE  22DA               	addwfc	fsr2h,f,c
  5784  0127D0  50DF               	movf	indf2,w,c
  5785  0127D2  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5786  0127D4  0E04               	movlw	4
  5787  0127D6  EC68  F094         	call	_write_ZIGBEE_short
  5788  0127DA  0012               	return		;funcret
  5789  0127DC                     __end_of_set_short_address:
  5790                           	opt stack 0
  5791                           tblptru	equ	0xFF8
  5792                           tblptrh	equ	0xFF7
  5793                           tblptrl	equ	0xFF6
  5794                           tablat	equ	0xFF5
  5795                           prodh	equ	0xFF4
  5796                           prodl	equ	0xFF3
  5797                           intcon	equ	0xFF2
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           indf1	equ	0xFE7
  5801                           postdec1	equ	0xFE5
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _set_reception_mode *****************
  5811 ;; Defined at:
  5812 ;;		line 304 in file "zigbee.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  r_mode          1    wreg     unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  r_mode          1    4[BANK1 ] unsigned char 
  5817 ;;  temp            1    5[BANK1 ] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;Total ram usage:        2 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:   10
  5834 ;; This function calls:
  5835 ;;		_write_ZIGBEE_short
  5836 ;; This function is called by:
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text9
  5842  012194                     __ptext9:
  5843                           	opt stack 0
  5844  012194                     _set_reception_mode:
  5845                           	opt stack 20
  5846                           
  5847                           ;incstack = 0
  5848                           ;set_reception_mode@r_mode stored from wreg
  5849  012194  0101               	movlb	1	; () banked
  5850  012196  6FDC               	movwf	set_reception_mode@r_mode& (0+255),b
  5851                           
  5852                           ;zigbee.c: 306: unsigned char temp=0;
  5853  012198  0E00               	movlw	0
  5854  01219A  0101               	movlb	1	; () banked
  5855  01219C  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5856                           
  5857                           ;zigbee.c: 307: switch(r_mode)
  5858  01219E  D026               	goto	l448
  5859  0121A0                     
  5860                           ; BSR set to: 1
  5861                           ;zigbee.c: 310: {
  5862                           ;zigbee.c: 311: temp=0;
  5863                           
  5864                           ; BSR set to: 1
  5865  0121A0  0E00               	movlw	0
  5866  0121A2  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5867                           
  5868                           ;zigbee.c: 312: temp = temp & (!0x03);
  5869  0121A4  0E00               	movlw	0
  5870  0121A6  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5871                           
  5872                           ; BSR set to: 1
  5873                           ;zigbee.c: 313: write_ZIGBEE_short(0x00, temp);
  5874  0121A8  C1DD  F1DA         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  5875  0121AC  0E00               	movlw	0
  5876  0121AE  EC68  F094         	call	_write_ZIGBEE_short
  5877                           
  5878                           ;zigbee.c: 314: }
  5879                           ;zigbee.c: 315: break;
  5880  0121B2  0012               	return	
  5881  0121B4                     
  5882                           ;zigbee.c: 318: {
  5883                           ;zigbee.c: 319: temp=0;
  5884  0121B4  0E00               	movlw	0
  5885  0121B6  0101               	movlb	1	; () banked
  5886  0121B8  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5887                           
  5888                           ;zigbee.c: 320: temp = temp & (!0x01);
  5889  0121BA  0E00               	movlw	0
  5890  0121BC  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;zigbee.c: 321: temp = temp | 0x02;
  5894  0121BE  51DD               	movf	set_reception_mode@temp& (0+255),w,b
  5895  0121C0  0902               	iorlw	2
  5896  0121C2  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;zigbee.c: 322: write_ZIGBEE_short(0x00, temp);
  5900  0121C4  C1DD  F1DA         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  5901  0121C8  0E00               	movlw	0
  5902  0121CA  EC68  F094         	call	_write_ZIGBEE_short
  5903                           
  5904                           ;zigbee.c: 323: }
  5905                           ;zigbee.c: 324: break;
  5906  0121CE  0012               	return	
  5907  0121D0                     
  5908                           ;zigbee.c: 326: {
  5909                           ;zigbee.c: 327: temp=0;
  5910  0121D0  0E00               	movlw	0
  5911  0121D2  0101               	movlb	1	; () banked
  5912  0121D4  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5913                           
  5914                           ;zigbee.c: 328: temp = temp & (!0x02);
  5915  0121D6  0E00               	movlw	0
  5916  0121D8  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;zigbee.c: 329: temp = temp | 0x01;
  5920  0121DA  51DD               	movf	set_reception_mode@temp& (0+255),w,b
  5921  0121DC  0901               	iorlw	1
  5922  0121DE  6FDD               	movwf	set_reception_mode@temp& (0+255),b
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;zigbee.c: 330: write_ZIGBEE_short(0x00, temp);
  5926  0121E0  C1DD  F1DA         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  5927  0121E4  0E00               	movlw	0
  5928  0121E6  EC68  F094         	call	_write_ZIGBEE_short
  5929                           
  5930                           ;zigbee.c: 333: }
  5931                           
  5932                           ;zigbee.c: 331: }
  5933                           ;zigbee.c: 332: break;
  5934  0121EA  0012               	return	
  5935  0121EC                     l448:
  5936  0121EC  0101               	movlb	1	; () banked
  5937  0121EE  51DC               	movf	set_reception_mode@r_mode& (0+255),w,b
  5938                           
  5939                           ; Switch size 1, requested type "space"
  5940                           ; Number of cases is 3, Range of values is 1 to 3
  5941                           ; switch strategies available:
  5942                           ; Name         Instructions Cycles
  5943                           ; simple_byte           10     6 (average)
  5944                           ;	Chosen strategy is simple_byte
  5945  0121F0  0A01               	xorlw	1	; case 1
  5946  0121F2  B4D8               	btfsc	status,2,c
  5947  0121F4  D7D5               	goto	l449
  5948  0121F6  0A03               	xorlw	3	; case 2
  5949  0121F8  B4D8               	btfsc	status,2,c
  5950  0121FA  D7DC               	goto	l451
  5951  0121FC  0A01               	xorlw	1	; case 3
  5952  0121FE  A4D8               	btfss	status,2,c
  5953  012200  0012               	return	
  5954  012202  D7E6               	goto	l452
  5955  012204                     __end_of_set_reception_mode:
  5956                           	opt stack 0
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           intcon	equ	0xFF2
  5964                           postinc0	equ	0xFEE
  5965                           wreg	equ	0xFE8
  5966                           indf1	equ	0xFE7
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           fsr2h	equ	0xFDA
  5973                           fsr2l	equ	0xFD9
  5974                           status	equ	0xFD8
  5975                           
  5976 ;; *************** function _set_long_address *****************
  5977 ;; Defined at:
  5978 ;;		line 63 in file "zigbee.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  address         2    4[BANK1 ] PTR unsigned char 
  5981 ;;		 -> ADDRESS_long_2(8), 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  i               1    6[BANK1 ] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;Total ram usage:        3 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:   10
  6000 ;; This function calls:
  6001 ;;		_write_ZIGBEE_short
  6002 ;; This function is called by:
  6003 ;;		_main
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text10
  6008  01274A                     __ptext10:
  6009                           	opt stack 0
  6010  01274A                     _set_long_address:
  6011                           	opt stack 20
  6012                           
  6013                           ;zigbee.c: 64: unsigned char i = 0;
  6014                           
  6015                           ;incstack = 0
  6016  01274A  0E00               	movlw	0
  6017  01274C  0101               	movlb	1	; () banked
  6018  01274E  6FDE               	movwf	set_long_address@i& (0+255),b
  6019                           
  6020                           ;zigbee.c: 65: for(i = 0; i < 8; i++)
  6021  012750  0E00               	movlw	0
  6022  012752  6FDE               	movwf	set_long_address@i& (0+255),b
  6023  012754                     l6013:
  6024                           
  6025                           ; BSR set to: 1
  6026  012754  0E07               	movlw	7
  6027  012756  65DE               	cpfsgt	set_long_address@i& (0+255),b
  6028  012758  D001               	goto	l367
  6029  01275A  0012               	return	
  6030  01275C                     l367:
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;zigbee.c: 66: write_ZIGBEE_short(0x05 + i, address[i]);
  6034                           
  6035                           ; BSR set to: 1
  6036  01275C  51DE               	movf	set_long_address@i& (0+255),w,b
  6037  01275E  0D01               	mullw	1
  6038  012760  50F3               	movf	prodl,w,c
  6039  012762  25DC               	addwf	set_long_address@address& (0+255),w,b
  6040  012764  6ED9               	movwf	fsr2l,c
  6041  012766  50F4               	movf	prodh,w,c
  6042  012768  21DD               	addwfc	(set_long_address@address+1)& (0+255),w,b
  6043  01276A  6EDA               	movwf	fsr2h,c
  6044  01276C  50DF               	movf	indf2,w,c
  6045  01276E  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6046  012770  51DE               	movf	set_long_address@i& (0+255),w,b
  6047  012772  0F05               	addlw	5
  6048  012774  EC68  F094         	call	_write_ZIGBEE_short
  6049  012778  0101               	movlb	1	; () banked
  6050  01277A  2BDE               	incf	set_long_address@i& (0+255),f,b
  6051  01277C  D7EB               	goto	l6013
  6052  01277E                     __end_of_set_long_address:
  6053                           	opt stack 0
  6054                           tblptru	equ	0xFF8
  6055                           tblptrh	equ	0xFF7
  6056                           tblptrl	equ	0xFF6
  6057                           tablat	equ	0xFF5
  6058                           prodh	equ	0xFF4
  6059                           prodl	equ	0xFF3
  6060                           intcon	equ	0xFF2
  6061                           postinc0	equ	0xFEE
  6062                           wreg	equ	0xFE8
  6063                           indf1	equ	0xFE7
  6064                           postdec1	equ	0xFE5
  6065                           fsr1h	equ	0xFE2
  6066                           fsr1l	equ	0xFE1
  6067                           indf2	equ	0xFDF
  6068                           postinc2	equ	0xFDE
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function _set_frame_format_filter *****************
  6074 ;; Defined at:
  6075 ;;		line 263 in file "zigbee.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  fff_mode        1    wreg     unsigned char 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  fff_mode        1    4[BANK1 ] unsigned char 
  6080 ;;  temp            1    5[BANK1 ] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:        2 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:   10
  6097 ;; This function calls:
  6098 ;;		_write_ZIGBEE_short
  6099 ;; This function is called by:
  6100 ;;		_main
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text11
  6105  011D50                     __ptext11:
  6106                           	opt stack 0
  6107  011D50                     _set_frame_format_filter:
  6108                           	opt stack 20
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;incstack = 0
  6112                           ;set_frame_format_filter@fff_mode stored from wreg
  6113  011D50  0101               	movlb	1	; () banked
  6114  011D52  6FDC               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  6115                           
  6116                           ;zigbee.c: 265: unsigned char temp = 0;
  6117  011D54  0E00               	movlw	0
  6118  011D56  0101               	movlb	1	; () banked
  6119  011D58  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6120                           
  6121                           ;zigbee.c: 266: switch(fff_mode)
  6122  011D5A  D034               	goto	l439
  6123  011D5C                     
  6124                           ; BSR set to: 1
  6125                           ;zigbee.c: 269: {
  6126                           ;zigbee.c: 270: temp=0;
  6127                           
  6128                           ; BSR set to: 1
  6129  011D5C  0E00               	movlw	0
  6130  011D5E  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6131                           
  6132                           ;zigbee.c: 271: temp = temp & (!0x0E);
  6133  011D60  0E00               	movlw	0
  6134  011D62  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6135                           
  6136                           ; BSR set to: 1
  6137                           ;zigbee.c: 272: write_ZIGBEE_short(0x0D, temp);
  6138  011D64  C1DD  F1DA         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  6139  011D68  0E0D               	movlw	13
  6140  011D6A  EC68  F094         	call	_write_ZIGBEE_short
  6141                           
  6142                           ;zigbee.c: 273: }
  6143                           ;zigbee.c: 274: break;
  6144  011D6E  0012               	return	
  6145  011D70                     
  6146                           ;zigbee.c: 276: {
  6147                           ;zigbee.c: 277: temp=0;
  6148  011D70  0E00               	movlw	0
  6149  011D72  0101               	movlb	1	; () banked
  6150  011D74  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6151                           
  6152                           ;zigbee.c: 278: temp = temp & (!0x06);
  6153  011D76  0E00               	movlw	0
  6154  011D78  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;zigbee.c: 279: temp = temp | 0x08;
  6158  011D7A  51DD               	movf	set_frame_format_filter@temp& (0+255),w,b
  6159  011D7C  0908               	iorlw	8
  6160  011D7E  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;zigbee.c: 280: write_ZIGBEE_short(0x0D, temp);
  6164  011D80  C1DD  F1DA         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  6165  011D84  0E0D               	movlw	13
  6166  011D86  EC68  F094         	call	_write_ZIGBEE_short
  6167                           
  6168                           ;zigbee.c: 281: }
  6169                           ;zigbee.c: 282: break;
  6170  011D8A  0012               	return	
  6171  011D8C                     
  6172                           ;zigbee.c: 284: {
  6173                           ;zigbee.c: 285: temp=0;
  6174  011D8C  0E00               	movlw	0
  6175  011D8E  0101               	movlb	1	; () banked
  6176  011D90  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6177                           
  6178                           ;zigbee.c: 286: temp = temp & (!0x0A);
  6179  011D92  0E00               	movlw	0
  6180  011D94  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6181                           
  6182                           ; BSR set to: 1
  6183                           ;zigbee.c: 287: temp = temp | 0x04;
  6184  011D96  51DD               	movf	set_frame_format_filter@temp& (0+255),w,b
  6185  011D98  0904               	iorlw	4
  6186  011D9A  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6187                           
  6188                           ; BSR set to: 1
  6189                           ;zigbee.c: 288: write_ZIGBEE_short(0x0D, temp);
  6190  011D9C  C1DD  F1DA         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  6191  011DA0  0E0D               	movlw	13
  6192  011DA2  EC68  F094         	call	_write_ZIGBEE_short
  6193                           
  6194                           ;zigbee.c: 289: }
  6195                           ;zigbee.c: 290: break;
  6196  011DA6  0012               	return	
  6197  011DA8                     
  6198                           ;zigbee.c: 293: {
  6199                           ;zigbee.c: 294: temp=0;
  6200  011DA8  0E00               	movlw	0
  6201  011DAA  0101               	movlb	1	; () banked
  6202  011DAC  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6203                           
  6204                           ;zigbee.c: 295: temp = temp & (!0x0C);
  6205  011DAE  0E00               	movlw	0
  6206  011DB0  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;zigbee.c: 296: temp = temp | 0x02;
  6210  011DB2  51DD               	movf	set_frame_format_filter@temp& (0+255),w,b
  6211  011DB4  0902               	iorlw	2
  6212  011DB6  6FDD               	movwf	set_frame_format_filter@temp& (0+255),b
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;zigbee.c: 297: write_ZIGBEE_short(0x0D, temp);
  6216  011DB8  C1DD  F1DA         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  6217  011DBC  0E0D               	movlw	13
  6218  011DBE  EC68  F094         	call	_write_ZIGBEE_short
  6219                           
  6220                           ;zigbee.c: 300: }
  6221                           
  6222                           ;zigbee.c: 298: }
  6223                           ;zigbee.c: 299: break;
  6224  011DC2  0012               	return	
  6225  011DC4                     l439:
  6226  011DC4  0101               	movlb	1	; () banked
  6227  011DC6  51DC               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  6228                           
  6229                           ; Switch size 1, requested type "space"
  6230                           ; Number of cases is 4, Range of values is 1 to 4
  6231                           ; switch strategies available:
  6232                           ; Name         Instructions Cycles
  6233                           ; simple_byte           13     7 (average)
  6234                           ;	Chosen strategy is simple_byte
  6235  011DC8  0A01               	xorlw	1	; case 1
  6236  011DCA  B4D8               	btfsc	status,2,c
  6237  011DCC  D7C7               	goto	l440
  6238  011DCE  0A03               	xorlw	3	; case 2
  6239  011DD0  B4D8               	btfsc	status,2,c
  6240  011DD2  D7CE               	goto	l442
  6241  011DD4  0A01               	xorlw	1	; case 3
  6242  011DD6  B4D8               	btfsc	status,2,c
  6243  011DD8  D7D9               	goto	l443
  6244  011DDA  0A07               	xorlw	7	; case 4
  6245  011DDC  A4D8               	btfss	status,2,c
  6246  011DDE  0012               	return	
  6247  011DE0  D7E3               	goto	l444
  6248  011DE2                     __end_of_set_frame_format_filter:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           postdec1	equ	0xFE5
  6261                           fsr1h	equ	0xFE2
  6262                           fsr1l	equ	0xFE1
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _set_WAKE_from_pin *****************
  6270 ;; Defined at:
  6271 ;;		line 58 in file "zigbee.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:   10
  6292 ;; This function calls:
  6293 ;;		_write_ZIGBEE_short
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text12
  6300  0129FC                     __ptext12:
  6301                           	opt stack 0
  6302  0129FC                     _set_WAKE_from_pin:
  6303                           	opt stack 20
  6304                           
  6305                           ;zigbee.c: 59: PORTFbits.RF4=0;
  6306                           
  6307                           ;incstack = 0
  6308  0129FC  9885               	bcf	3973,4,c	;volatile
  6309                           
  6310                           ;zigbee.c: 60: write_ZIGBEE_short(0x0D,0x60);
  6311  0129FE  0E60               	movlw	96
  6312  012A00  0101               	movlb	1	; () banked
  6313  012A02  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6314  012A04  0E0D               	movlw	13
  6315  012A06  EC68  F094         	call	_write_ZIGBEE_short
  6316                           
  6317                           ;zigbee.c: 61: write_ZIGBEE_short(0x22,0x80);
  6318  012A0A  0E80               	movlw	128
  6319  012A0C  0101               	movlb	1	; () banked
  6320  012A0E  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6321  012A10  0E22               	movlw	34
  6322  012A12  EC68  F094         	call	_write_ZIGBEE_short
  6323  012A16  0012               	return		;funcret
  6324  012A18                     __end_of_set_WAKE_from_pin:
  6325                           	opt stack 0
  6326                           tblptru	equ	0xFF8
  6327                           tblptrh	equ	0xFF7
  6328                           tblptrl	equ	0xFF6
  6329                           tablat	equ	0xFF5
  6330                           prodh	equ	0xFF4
  6331                           prodl	equ	0xFF3
  6332                           intcon	equ	0xFF2
  6333                           postinc0	equ	0xFEE
  6334                           wreg	equ	0xFE8
  6335                           indf1	equ	0xFE7
  6336                           postdec1	equ	0xFE5
  6337                           fsr1h	equ	0xFE2
  6338                           fsr1l	equ	0xFE1
  6339                           indf2	equ	0xFDF
  6340                           postinc2	equ	0xFDE
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _set_TX_power *****************
  6346 ;; Defined at:
  6347 ;;		line 252 in file "zigbee.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  power           1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  power           1   10[BANK1 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;Total ram usage:        2 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:   10
  6368 ;; This function calls:
  6369 ;;		_write_ZIGBEE_long
  6370 ;; This function is called by:
  6371 ;;		_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text13
  6376  012556                     __ptext13:
  6377                           	opt stack 0
  6378  012556                     _set_TX_power:
  6379                           	opt stack 20
  6380                           
  6381                           ;incstack = 0
  6382                           ;set_TX_power@power stored from wreg
  6383  012556  0101               	movlb	1	; () banked
  6384  012558  6FE2               	movwf	set_TX_power@power& (0+255),b
  6385                           
  6386                           ;zigbee.c: 253: if((power < 0) || (power > 31))
  6387  01255A  0E1F               	movlw	31
  6388  01255C  0101               	movlb	1	; () banked
  6389  01255E  65E2               	cpfsgt	set_TX_power@power& (0+255),b
  6390  012560  D002               	goto	l435
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;zigbee.c: 254: power = 31;
  6394  012562  0E1F               	movlw	31
  6395  012564  6FE2               	movwf	set_TX_power@power& (0+255),b
  6396  012566                     l435:
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;zigbee.c: 256: power = 31 - power;
  6400                           
  6401                           ; BSR set to: 1
  6402  012566  51E2               	movf	set_TX_power@power& (0+255),w,b
  6403  012568  0800               	sublw	0
  6404  01256A  0F1F               	addlw	31
  6405  01256C  6FE2               	movwf	set_TX_power@power& (0+255),b
  6406                           
  6407                           ; BSR set to: 1
  6408                           ;zigbee.c: 257: power = ((power & 0b00011111) << 3) & 0b11111000;
  6409  01256E  C1E2  F1E1         	movff	set_TX_power@power,??_set_TX_power
  6410  012572  0E1F               	movlw	31
  6411  012574  17E1               	andwf	??_set_TX_power& (0+255),f,b
  6412  012576  90D8               	bcf	status,0,c
  6413  012578  37E1               	rlcf	??_set_TX_power& (0+255),f,b
  6414  01257A  90D8               	bcf	status,0,c
  6415  01257C  37E1               	rlcf	??_set_TX_power& (0+255),f,b
  6416  01257E  90D8               	bcf	status,0,c
  6417  012580  35E1               	rlcf	??_set_TX_power& (0+255),w,b
  6418  012582  0BF8               	andlw	248
  6419  012584  6FE2               	movwf	set_TX_power@power& (0+255),b
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;zigbee.c: 258: write_ZIGBEE_long(0x203, power);
  6423  012586  0E02               	movlw	2
  6424  012588  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6425  01258A  0E03               	movlw	3
  6426  01258C  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6427  01258E  C1E2  F1DC         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  6428  012592  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6429  012596  0012               	return		;funcret
  6430  012598                     __end_of_set_TX_power:
  6431                           	opt stack 0
  6432                           tblptru	equ	0xFF8
  6433                           tblptrh	equ	0xFF7
  6434                           tblptrl	equ	0xFF6
  6435                           tablat	equ	0xFF5
  6436                           prodh	equ	0xFF4
  6437                           prodl	equ	0xFF3
  6438                           intcon	equ	0xFF2
  6439                           postinc0	equ	0xFEE
  6440                           wreg	equ	0xFE8
  6441                           indf1	equ	0xFE7
  6442                           postdec1	equ	0xFE5
  6443                           fsr1h	equ	0xFE2
  6444                           fsr1l	equ	0xFE1
  6445                           indf2	equ	0xFDF
  6446                           postinc2	equ	0xFDE
  6447                           fsr2h	equ	0xFDA
  6448                           fsr2l	equ	0xFD9
  6449                           status	equ	0xFD8
  6450                           
  6451 ;; *************** function _set_PAN_ID *****************
  6452 ;; Defined at:
  6453 ;;		line 72 in file "zigbee.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  address         2    4[BANK1 ] PTR unsigned char 
  6456 ;;		 -> PAN_ID_2(2), 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6468 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:   10
  6475 ;; This function calls:
  6476 ;;		_write_ZIGBEE_short
  6477 ;; This function is called by:
  6478 ;;		_main
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text14
  6483  0127DC                     __ptext14:
  6484                           	opt stack 0
  6485  0127DC                     _set_PAN_ID:
  6486                           	opt stack 20
  6487                           
  6488                           ;zigbee.c: 73: write_ZIGBEE_short(0x01, address[0]);
  6489                           
  6490                           ;incstack = 0
  6491  0127DC  C1DC  FFD9         	movff	set_PAN_ID@address,fsr2l
  6492  0127E0  C1DD  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  6493  0127E4  50DF               	movf	indf2,w,c
  6494  0127E6  0101               	movlb	1	; () banked
  6495  0127E8  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6496  0127EA  0E01               	movlw	1
  6497  0127EC  EC68  F094         	call	_write_ZIGBEE_short
  6498                           
  6499                           ;zigbee.c: 74: write_ZIGBEE_short(0x02, address[1]);
  6500  0127F0  0101               	movlb	1	; () banked
  6501  0127F2  EE20 F001          	lfsr	2,1
  6502  0127F6  51DC               	movf	set_PAN_ID@address& (0+255),w,b
  6503  0127F8  26D9               	addwf	fsr2l,f,c
  6504  0127FA  51DD               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  6505  0127FC  22DA               	addwfc	fsr2h,f,c
  6506  0127FE  50DF               	movf	indf2,w,c
  6507  012800  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6508  012802  0E02               	movlw	2
  6509  012804  EC68  F094         	call	_write_ZIGBEE_short
  6510  012808  0012               	return		;funcret
  6511  01280A                     __end_of_set_PAN_ID:
  6512                           	opt stack 0
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           prodh	equ	0xFF4
  6518                           prodl	equ	0xFF3
  6519                           intcon	equ	0xFF2
  6520                           postinc0	equ	0xFEE
  6521                           wreg	equ	0xFE8
  6522                           indf1	equ	0xFE7
  6523                           postdec1	equ	0xFE5
  6524                           fsr1h	equ	0xFE2
  6525                           fsr1l	equ	0xFE1
  6526                           indf2	equ	0xFDF
  6527                           postinc2	equ	0xFDE
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8
  6531                           
  6532 ;; *************** function _pin_reset *****************
  6533 ;; Defined at:
  6534 ;;		line 47 in file "zigbee.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    9
  6555 ;; This function calls:
  6556 ;;		_Delay_ms
  6557 ;; This function is called by:
  6558 ;;		_main
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text15
  6563  01293C                     __ptext15:
  6564                           	opt stack 0
  6565  01293C                     _pin_reset:
  6566                           	opt stack 21
  6567                           
  6568                           ;zigbee.c: 48: PORTCbits.RC1=0;
  6569                           
  6570                           ;incstack = 0
  6571  01293C  9282               	bcf	3970,1,c	;volatile
  6572                           
  6573                           ;zigbee.c: 49: Delay_ms(10);
  6574  01293E  0E00               	movlw	0
  6575  012940  0101               	movlb	1	; () banked
  6576  012942  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  6577  012944  0E0A               	movlw	10
  6578  012946  6FD8               	movwf	Delay_ms@time& (0+255),b
  6579  012948  EC0C  F095         	call	_Delay_ms	;wreg free
  6580                           
  6581                           ;zigbee.c: 50: PORTCbits.RC1=1;
  6582  01294C  8282               	bsf	3970,1,c	;volatile
  6583                           
  6584                           ;zigbee.c: 51: Delay_ms(10);
  6585  01294E  0E00               	movlw	0
  6586  012950  0101               	movlb	1	; () banked
  6587  012952  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  6588  012954  0E0A               	movlw	10
  6589  012956  6FD8               	movwf	Delay_ms@time& (0+255),b
  6590  012958  EC0C  F095         	call	_Delay_ms	;wreg free
  6591  01295C  0012               	return		;funcret
  6592  01295E                     __end_of_pin_reset:
  6593                           	opt stack 0
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           prodh	equ	0xFF4
  6599                           prodl	equ	0xFF3
  6600                           intcon	equ	0xFF2
  6601                           postinc0	equ	0xFEE
  6602                           wreg	equ	0xFE8
  6603                           indf1	equ	0xFE7
  6604                           postdec1	equ	0xFE5
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           indf2	equ	0xFDF
  6608                           postinc2	equ	0xFDE
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  6614 ;; Defined at:
  6615 ;;		line 236 in file "zigbee.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  temp            1    4[BANK1 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;Total ram usage:        1 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   10
  6636 ;; This function calls:
  6637 ;;		_write_ZIGBEE_short
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text16
  6644  01269A                     __ptext16:
  6645                           	opt stack 0
  6646  01269A                     _nonbeacon_PAN_coordinator_device:
  6647                           	opt stack 20
  6648                           
  6649                           ;zigbee.c: 237: unsigned char temp = 0;
  6650                           
  6651                           ;incstack = 0
  6652  01269A  0E00               	movlw	0
  6653  01269C  0101               	movlb	1	; () banked
  6654  01269E  6FDC               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  6655                           
  6656                           ;zigbee.c: 239: temp=0;
  6657  0126A0  0E00               	movlw	0
  6658  0126A2  6FDC               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;zigbee.c: 240: temp = temp | 0x08;
  6662  0126A4  51DC               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  6663  0126A6  0908               	iorlw	8
  6664  0126A8  6FDC               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  6665                           
  6666                           ; BSR set to: 1
  6667                           ;zigbee.c: 241: write_ZIGBEE_short(0x00, temp);
  6668  0126AA  C1DC  F1DA         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  6669  0126AE  0E00               	movlw	0
  6670  0126B0  EC68  F094         	call	_write_ZIGBEE_short
  6671                           
  6672                           ;zigbee.c: 243: temp=0;
  6673  0126B4  0E00               	movlw	0
  6674  0126B6  0101               	movlb	1	; () banked
  6675  0126B8  6FDC               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  6676                           
  6677                           ; BSR set to: 1
  6678                           ;zigbee.c: 244: temp = temp & 0xDF;
  6679  0126BA  51DC               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  6680  0126BC  0BDF               	andlw	223
  6681  0126BE  6FDC               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  6682                           
  6683                           ;zigbee.c: 245: write_ZIGBEE_short(0x11, temp);
  6684  0126C0  C1DC  F1DA         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  6685  0126C4  0E11               	movlw	17
  6686  0126C6  EC68  F094         	call	_write_ZIGBEE_short
  6687                           
  6688                           ;zigbee.c: 247: write_ZIGBEE_short(0x10, 0xFF);
  6689  0126CA  0EFF               	movlw	255
  6690  0126CC  0101               	movlb	1	; () banked
  6691  0126CE  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6692  0126D0  0E10               	movlw	16
  6693  0126D2  EC68  F094         	call	_write_ZIGBEE_short
  6694  0126D6  0012               	return		;funcret
  6695  0126D8                     __end_of_nonbeacon_PAN_coordinator_device:
  6696                           	opt stack 0
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           prodh	equ	0xFF4
  6702                           prodl	equ	0xFF3
  6703                           intcon	equ	0xFF2
  6704                           postinc0	equ	0xFEE
  6705                           wreg	equ	0xFE8
  6706                           indf1	equ	0xFE7
  6707                           postdec1	equ	0xFE5
  6708                           fsr1h	equ	0xFE2
  6709                           fsr1l	equ	0xFE1
  6710                           indf2	equ	0xFDF
  6711                           postinc2	equ	0xFDE
  6712                           fsr2h	equ	0xFDA
  6713                           fsr2l	equ	0xFD9
  6714                           status	equ	0xFD8
  6715                           
  6716 ;; *************** function _lcd_off_cursor *****************
  6717 ;; Defined at:
  6718 ;;		line 888 in file "2_April_TestMain.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;Total ram usage:        0 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:   10
  6739 ;; This function calls:
  6740 ;;		_LcdCmd
  6741 ;; This function is called by:
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text17
  6747  012B38                     __ptext17:
  6748                           	opt stack 0
  6749  012B38                     _lcd_off_cursor:
  6750                           	opt stack 20
  6751                           
  6752                           ;2_April_TestMain.c: 890: LcdCmd(0x0C);
  6753                           
  6754                           ;incstack = 0
  6755  012B38  0E0C               	movlw	12
  6756  012B3A  ECD0  F094         	call	_LcdCmd
  6757  012B3E  0012               	return		;funcret
  6758  012B40                     __end_of_lcd_off_cursor:
  6759                           	opt stack 0
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           postinc0	equ	0xFEE
  6768                           wreg	equ	0xFE8
  6769                           indf1	equ	0xFE7
  6770                           postdec1	equ	0xFE5
  6771                           fsr1h	equ	0xFE2
  6772                           fsr1l	equ	0xFE1
  6773                           indf2	equ	0xFDF
  6774                           postinc2	equ	0xFDE
  6775                           fsr2h	equ	0xFDA
  6776                           fsr2l	equ	0xFD9
  6777                           status	equ	0xFD8
  6778                           
  6779 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  6780 ;; Defined at:
  6781 ;;		line 76 in file "zigbee.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;Total ram usage:        0 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:   12
  6802 ;; This function calls:
  6803 ;;		_RF_reset
  6804 ;;		_enable_interrupt
  6805 ;;		_init_ZIGBEE_basic
  6806 ;;		_pin_wake
  6807 ;;		_set_CCA_mode
  6808 ;;		_set_RSSI_mode
  6809 ;;		_set_channel
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text18
  6816  0128AC                     __ptext18:
  6817                           	opt stack 0
  6818  0128AC                     _init_ZIGBEE_nonbeacon:
  6819                           	opt stack 18
  6820                           
  6821                           ;zigbee.c: 77: init_ZIGBEE_basic();
  6822                           
  6823                           ;incstack = 0
  6824  0128AC  EC5D  F08E         	call	_init_ZIGBEE_basic	;wreg free
  6825                           
  6826                           ;zigbee.c: 78: set_CCA_mode(1);
  6827  0128B0  0E01               	movlw	1
  6828  0128B2  EC43  F08C         	call	_set_CCA_mode
  6829                           
  6830                           ;zigbee.c: 79: set_RSSI_mode(2);
  6831  0128B6  0E02               	movlw	2
  6832  0128B8  ECCC  F092         	call	_set_RSSI_mode
  6833                           
  6834                           ;zigbee.c: 80: enable_interrupt();
  6835  0128BC  EC8E  F095         	call	_enable_interrupt	;wreg free
  6836                           
  6837                           ;zigbee.c: 81: set_channel(15);
  6838  0128C0  0E0F               	movlw	15
  6839  0128C2  EC03  F08A         	call	_set_channel
  6840                           
  6841                           ;zigbee.c: 82: pin_wake();
  6842  0128C6  EC5A  F095         	call	_pin_wake	;wreg free
  6843                           
  6844                           ;zigbee.c: 83: RF_reset();
  6845  0128CA  EC2E  F094         	call	_RF_reset	;wreg free
  6846  0128CE  0012               	return		;funcret
  6847  0128D0                     __end_of_init_ZIGBEE_nonbeacon:
  6848                           	opt stack 0
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           postinc0	equ	0xFEE
  6857                           wreg	equ	0xFE8
  6858                           indf1	equ	0xFE7
  6859                           postdec1	equ	0xFE5
  6860                           fsr1h	equ	0xFE2
  6861                           fsr1l	equ	0xFE1
  6862                           indf2	equ	0xFDF
  6863                           postinc2	equ	0xFDE
  6864                           fsr2h	equ	0xFDA
  6865                           fsr2l	equ	0xFD9
  6866                           status	equ	0xFD8
  6867                           
  6868 ;; *************** function _set_channel *****************
  6869 ;; Defined at:
  6870 ;;		line 172 in file "zigbee.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  channel_numb    1    wreg     unsigned char 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  channel_numb    1    9[BANK1 ] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;Total ram usage:        1 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:   11
  6891 ;; This function calls:
  6892 ;;		_RF_reset
  6893 ;;		_write_ZIGBEE_long
  6894 ;; This function is called by:
  6895 ;;		_init_ZIGBEE_nonbeacon
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text19
  6900  011406                     __ptext19:
  6901                           	opt stack 0
  6902  011406                     _set_channel:
  6903                           	opt stack 18
  6904                           
  6905                           ;incstack = 0
  6906                           ;set_channel@channel_number stored from wreg
  6907  011406  0101               	movlb	1	; () banked
  6908  011408  6FE1               	movwf	set_channel@channel_number& (0+255),b
  6909                           
  6910                           ;zigbee.c: 174: if((channel_number > 26) || (channel_number < 11))
  6911  01140A  0E1B               	movlw	27
  6912  01140C  0101               	movlb	1	; () banked
  6913  01140E  61E1               	cpfslt	set_channel@channel_number& (0+255),b
  6914  011410  D003               	goto	u3200
  6915                           
  6916                           ; BSR set to: 1
  6917  011412  0E0B               	movlw	11
  6918  011414  61E1               	cpfslt	set_channel@channel_number& (0+255),b
  6919  011416  D0A2               	goto	l408
  6920  011418                     u3200:
  6921                           
  6922                           ; BSR set to: 1
  6923                           ;zigbee.c: 175: channel_number = 11;
  6924                           
  6925                           ; BSR set to: 1
  6926  011418  0E0B               	movlw	11
  6927  01141A  6FE1               	movwf	set_channel@channel_number& (0+255),b
  6928                           
  6929                           ; BSR set to: 1
  6930                           ;zigbee.c: 177: switch(channel_number)
  6931  01141C  D09F               	goto	l408
  6932  01141E                     
  6933                           ; BSR set to: 1
  6934                           ;zigbee.c: 180: write_ZIGBEE_long(0x200, 0x02);
  6935                           
  6936                           ; BSR set to: 1
  6937  01141E  0E02               	movlw	2
  6938  011420  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6939  011422  0E00               	movlw	0
  6940  011424  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6941  011426  0E02               	movlw	2
  6942  011428  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  6943  01142A  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6944                           
  6945                           ;zigbee.c: 181: break;
  6946  01142E  D0C8               	goto	l410
  6947  011430                     
  6948                           ;zigbee.c: 184: write_ZIGBEE_long(0x200, 0x12);
  6949  011430  0E02               	movlw	2
  6950  011432  0101               	movlb	1	; () banked
  6951  011434  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6952  011436  0E00               	movlw	0
  6953  011438  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6954  01143A  0E12               	movlw	18
  6955  01143C  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  6956  01143E  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6957                           
  6958                           ;zigbee.c: 185: break;
  6959  011442  D0BE               	goto	l410
  6960  011444                     
  6961                           ;zigbee.c: 188: write_ZIGBEE_long(0x200, 0x22);
  6962  011444  0E02               	movlw	2
  6963  011446  0101               	movlb	1	; () banked
  6964  011448  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6965  01144A  0E00               	movlw	0
  6966  01144C  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6967  01144E  0E22               	movlw	34
  6968  011450  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  6969  011452  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6970                           
  6971                           ;zigbee.c: 189: break;
  6972  011456  D0B4               	goto	l410
  6973  011458                     
  6974                           ;zigbee.c: 191: write_ZIGBEE_long(0x200, 0x32);
  6975  011458  0E02               	movlw	2
  6976  01145A  0101               	movlb	1	; () banked
  6977  01145C  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6978  01145E  0E00               	movlw	0
  6979  011460  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6980  011462  0E32               	movlw	50
  6981  011464  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  6982  011466  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6983                           
  6984                           ;zigbee.c: 192: break;
  6985  01146A  D0AA               	goto	l410
  6986  01146C                     
  6987                           ;zigbee.c: 194: write_ZIGBEE_long(0x200, 0x42);
  6988  01146C  0E02               	movlw	2
  6989  01146E  0101               	movlb	1	; () banked
  6990  011470  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  6991  011472  0E00               	movlw	0
  6992  011474  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  6993  011476  0E42               	movlw	66
  6994  011478  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  6995  01147A  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  6996                           
  6997                           ;zigbee.c: 195: break;
  6998  01147E  D0A0               	goto	l410
  6999  011480                     
  7000                           ;zigbee.c: 197: write_ZIGBEE_long(0x200, 0x52);
  7001  011480  0E02               	movlw	2
  7002  011482  0101               	movlb	1	; () banked
  7003  011484  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7004  011486  0E00               	movlw	0
  7005  011488  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7006  01148A  0E52               	movlw	82
  7007  01148C  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7008  01148E  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7009                           
  7010                           ;zigbee.c: 198: break;
  7011  011492  D096               	goto	l410
  7012  011494                     
  7013                           ;zigbee.c: 200: write_ZIGBEE_long(0x200, 0x62);
  7014  011494  0E02               	movlw	2
  7015  011496  0101               	movlb	1	; () banked
  7016  011498  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7017  01149A  0E00               	movlw	0
  7018  01149C  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7019  01149E  0E62               	movlw	98
  7020  0114A0  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7021  0114A2  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7022                           
  7023                           ;zigbee.c: 201: break;
  7024  0114A6  D08C               	goto	l410
  7025  0114A8                     
  7026                           ;zigbee.c: 203: write_ZIGBEE_long(0x200, 0x72);
  7027  0114A8  0E02               	movlw	2
  7028  0114AA  0101               	movlb	1	; () banked
  7029  0114AC  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7030  0114AE  0E00               	movlw	0
  7031  0114B0  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7032  0114B2  0E72               	movlw	114
  7033  0114B4  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7034  0114B6  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7035                           
  7036                           ;zigbee.c: 204: break;
  7037  0114BA  D082               	goto	l410
  7038  0114BC                     
  7039                           ;zigbee.c: 206: write_ZIGBEE_long(0x200, 0x82);
  7040  0114BC  0E02               	movlw	2
  7041  0114BE  0101               	movlb	1	; () banked
  7042  0114C0  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7043  0114C2  0E00               	movlw	0
  7044  0114C4  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7045  0114C6  0E82               	movlw	130
  7046  0114C8  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7047  0114CA  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7048                           
  7049                           ;zigbee.c: 207: break;
  7050  0114CE  D078               	goto	l410
  7051  0114D0                     
  7052                           ;zigbee.c: 209: write_ZIGBEE_long(0x200, 0x92);
  7053  0114D0  0E02               	movlw	2
  7054  0114D2  0101               	movlb	1	; () banked
  7055  0114D4  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7056  0114D6  0E00               	movlw	0
  7057  0114D8  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7058  0114DA  0E92               	movlw	146
  7059  0114DC  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7060  0114DE  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7061                           
  7062                           ;zigbee.c: 210: break;
  7063  0114E2  D06E               	goto	l410
  7064  0114E4                     
  7065                           ;zigbee.c: 212: write_ZIGBEE_long(0x200, 0xA2);
  7066  0114E4  0E02               	movlw	2
  7067  0114E6  0101               	movlb	1	; () banked
  7068  0114E8  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7069  0114EA  0E00               	movlw	0
  7070  0114EC  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7071  0114EE  0EA2               	movlw	162
  7072  0114F0  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7073  0114F2  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7074                           
  7075                           ;zigbee.c: 213: break;
  7076  0114F6  D064               	goto	l410
  7077  0114F8                     
  7078                           ;zigbee.c: 215: write_ZIGBEE_long(0x200, 0xB2);
  7079  0114F8  0E02               	movlw	2
  7080  0114FA  0101               	movlb	1	; () banked
  7081  0114FC  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7082  0114FE  0E00               	movlw	0
  7083  011500  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7084  011502  0EB2               	movlw	178
  7085  011504  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7086  011506  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7087                           
  7088                           ;zigbee.c: 216: break;
  7089  01150A  D05A               	goto	l410
  7090  01150C                     
  7091                           ;zigbee.c: 218: write_ZIGBEE_long(0x200, 0xC2);
  7092  01150C  0E02               	movlw	2
  7093  01150E  0101               	movlb	1	; () banked
  7094  011510  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7095  011512  0E00               	movlw	0
  7096  011514  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7097  011516  0EC2               	movlw	194
  7098  011518  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7099  01151A  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7100                           
  7101                           ;zigbee.c: 219: break;
  7102  01151E  D050               	goto	l410
  7103  011520                     
  7104                           ;zigbee.c: 221: write_ZIGBEE_long(0x200, 0xD2);
  7105  011520  0E02               	movlw	2
  7106  011522  0101               	movlb	1	; () banked
  7107  011524  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7108  011526  0E00               	movlw	0
  7109  011528  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7110  01152A  0ED2               	movlw	210
  7111  01152C  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7112  01152E  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7113                           
  7114                           ;zigbee.c: 222: break;
  7115  011532  D046               	goto	l410
  7116  011534                     
  7117                           ;zigbee.c: 224: write_ZIGBEE_long(0x200, 0xE2);
  7118  011534  0E02               	movlw	2
  7119  011536  0101               	movlb	1	; () banked
  7120  011538  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7121  01153A  0E00               	movlw	0
  7122  01153C  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7123  01153E  0EE2               	movlw	226
  7124  011540  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7125  011542  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7126                           
  7127                           ;zigbee.c: 225: break;
  7128  011546  D03C               	goto	l410
  7129  011548                     
  7130                           ;zigbee.c: 227: write_ZIGBEE_long(0x200, 0xF2);
  7131  011548  0E02               	movlw	2
  7132  01154A  0101               	movlb	1	; () banked
  7133  01154C  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7134  01154E  0E00               	movlw	0
  7135  011550  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7136  011552  0EF2               	movlw	242
  7137  011554  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7138  011556  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7139                           
  7140                           ;zigbee.c: 229: }
  7141                           
  7142                           ;zigbee.c: 228: break;
  7143  01155A  D032               	goto	l410
  7144  01155C                     l408:
  7145  01155C  0101               	movlb	1	; () banked
  7146  01155E  51E1               	movf	set_channel@channel_number& (0+255),w,b
  7147                           
  7148                           ; Switch size 1, requested type "space"
  7149                           ; Number of cases is 16, Range of values is 11 to 26
  7150                           ; switch strategies available:
  7151                           ; Name         Instructions Cycles
  7152                           ; simple_byte           49    25 (average)
  7153                           ;	Chosen strategy is simple_byte
  7154  011560  0A0B               	xorlw	11	; case 11
  7155  011562  B4D8               	btfsc	status,2,c
  7156  011564  D75C               	goto	l409
  7157  011566  0A07               	xorlw	7	; case 12
  7158  011568  B4D8               	btfsc	status,2,c
  7159  01156A  D762               	goto	l411
  7160  01156C  0A01               	xorlw	1	; case 13
  7161  01156E  B4D8               	btfsc	status,2,c
  7162  011570  D769               	goto	l412
  7163  011572  0A03               	xorlw	3	; case 14
  7164  011574  B4D8               	btfsc	status,2,c
  7165  011576  D770               	goto	l413
  7166  011578  0A01               	xorlw	1	; case 15
  7167  01157A  B4D8               	btfsc	status,2,c
  7168  01157C  D777               	goto	l414
  7169  01157E  0A1F               	xorlw	31	; case 16
  7170  011580  B4D8               	btfsc	status,2,c
  7171  011582  D77E               	goto	l415
  7172  011584  0A01               	xorlw	1	; case 17
  7173  011586  B4D8               	btfsc	status,2,c
  7174  011588  D785               	goto	l416
  7175  01158A  0A03               	xorlw	3	; case 18
  7176  01158C  B4D8               	btfsc	status,2,c
  7177  01158E  D78C               	goto	l417
  7178  011590  0A01               	xorlw	1	; case 19
  7179  011592  B4D8               	btfsc	status,2,c
  7180  011594  D793               	goto	l418
  7181  011596  0A07               	xorlw	7	; case 20
  7182  011598  B4D8               	btfsc	status,2,c
  7183  01159A  D79A               	goto	l419
  7184  01159C  0A01               	xorlw	1	; case 21
  7185  01159E  B4D8               	btfsc	status,2,c
  7186  0115A0  D7A1               	goto	l420
  7187  0115A2  0A03               	xorlw	3	; case 22
  7188  0115A4  B4D8               	btfsc	status,2,c
  7189  0115A6  D7A8               	goto	l421
  7190  0115A8  0A01               	xorlw	1	; case 23
  7191  0115AA  B4D8               	btfsc	status,2,c
  7192  0115AC  D7AF               	goto	l422
  7193  0115AE  0A0F               	xorlw	15	; case 24
  7194  0115B0  B4D8               	btfsc	status,2,c
  7195  0115B2  D7B6               	goto	l423
  7196  0115B4  0A01               	xorlw	1	; case 25
  7197  0115B6  B4D8               	btfsc	status,2,c
  7198  0115B8  D7BD               	goto	l424
  7199  0115BA  0A03               	xorlw	3	; case 26
  7200  0115BC  B4D8               	btfsc	status,2,c
  7201  0115BE  D7C4               	goto	l425
  7202  0115C0                     l410:
  7203                           
  7204                           ;zigbee.c: 230: RF_reset();
  7205                           
  7206                           ; BSR set to: 1
  7207  0115C0  EC2E  F094         	call	_RF_reset	;wreg free
  7208  0115C4  0012               	return		;funcret
  7209  0115C6                     __end_of_set_channel:
  7210                           	opt stack 0
  7211                           tblptru	equ	0xFF8
  7212                           tblptrh	equ	0xFF7
  7213                           tblptrl	equ	0xFF6
  7214                           tablat	equ	0xFF5
  7215                           prodh	equ	0xFF4
  7216                           prodl	equ	0xFF3
  7217                           intcon	equ	0xFF2
  7218                           postinc0	equ	0xFEE
  7219                           wreg	equ	0xFE8
  7220                           indf1	equ	0xFE7
  7221                           postdec1	equ	0xFE5
  7222                           fsr1h	equ	0xFE2
  7223                           fsr1l	equ	0xFE1
  7224                           indf2	equ	0xFDF
  7225                           postinc2	equ	0xFDE
  7226                           fsr2h	equ	0xFDA
  7227                           fsr2l	equ	0xFD9
  7228                           status	equ	0xFD8
  7229                           
  7230 ;; *************** function _RF_reset *****************
  7231 ;; Defined at:
  7232 ;;		line 53 in file "zigbee.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:   10
  7253 ;; This function calls:
  7254 ;;		_Delay_ms
  7255 ;;		_write_ZIGBEE_short
  7256 ;; This function is called by:
  7257 ;;		_init_ZIGBEE_nonbeacon
  7258 ;;		_set_channel
  7259 ;;		_main
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text20
  7264  01285C                     __ptext20:
  7265                           	opt stack 0
  7266  01285C                     _RF_reset:
  7267                           	opt stack 18
  7268                           
  7269                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,0x04);
  7270                           
  7271                           ;incstack = 0
  7272  01285C  0E04               	movlw	4
  7273  01285E  0101               	movlb	1	; () banked
  7274  012860  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7275  012862  0E36               	movlw	54
  7276  012864  EC68  F094         	call	_write_ZIGBEE_short
  7277                           
  7278                           ;zigbee.c: 55: write_ZIGBEE_short(0x36,(!0x04));
  7279  012868  0E00               	movlw	0
  7280  01286A  0101               	movlb	1	; () banked
  7281  01286C  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7282  01286E  0E36               	movlw	54
  7283  012870  EC68  F094         	call	_write_ZIGBEE_short
  7284                           
  7285                           ;zigbee.c: 56: Delay_ms(20);
  7286  012874  0E00               	movlw	0
  7287  012876  0101               	movlb	1	; () banked
  7288  012878  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  7289  01287A  0E14               	movlw	20
  7290  01287C  6FD8               	movwf	Delay_ms@time& (0+255),b
  7291  01287E  EC0C  F095         	call	_Delay_ms	;wreg free
  7292  012882  0012               	return		;funcret
  7293  012884                     __end_of_RF_reset:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           indf1	equ	0xFE7
  7305                           postdec1	equ	0xFE5
  7306                           fsr1h	equ	0xFE2
  7307                           fsr1l	equ	0xFE1
  7308                           indf2	equ	0xFDF
  7309                           postinc2	equ	0xFDE
  7310                           fsr2h	equ	0xFDA
  7311                           fsr2l	equ	0xFD9
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function _set_RSSI_mode *****************
  7315 ;; Defined at:
  7316 ;;		line 150 in file "zigbee.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  RSSI_mode       1    wreg     unsigned char 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  RSSI_mode       1    4[BANK1 ] unsigned char 
  7321 ;;  temp            1    5[BANK1 ] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:        2 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:   10
  7338 ;; This function calls:
  7339 ;;		_write_ZIGBEE_short
  7340 ;; This function is called by:
  7341 ;;		_init_ZIGBEE_nonbeacon
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text21
  7346  012598                     __ptext21:
  7347                           	opt stack 0
  7348  012598                     _set_RSSI_mode:
  7349                           	opt stack 19
  7350                           
  7351                           ;incstack = 0
  7352                           ;set_RSSI_mode@RSSI_mode stored from wreg
  7353  012598  0101               	movlb	1	; () banked
  7354  01259A  6FDC               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  7355                           
  7356                           ;zigbee.c: 152: unsigned char temp = 0;
  7357  01259C  0E00               	movlw	0
  7358  01259E  0101               	movlb	1	; () banked
  7359  0125A0  6FDD               	movwf	set_RSSI_mode@temp& (0+255),b
  7360                           
  7361                           ;zigbee.c: 153: switch(RSSI_mode)
  7362  0125A2  D012               	goto	l395
  7363  0125A4                     
  7364                           ; BSR set to: 1
  7365                           ;zigbee.c: 156: {
  7366                           ;zigbee.c: 157: temp=0;
  7367                           
  7368                           ; BSR set to: 1
  7369  0125A4  0E00               	movlw	0
  7370  0125A6  6FDD               	movwf	set_RSSI_mode@temp& (0+255),b
  7371                           
  7372                           ; BSR set to: 1
  7373                           ;zigbee.c: 158: temp = temp | 0x80;
  7374  0125A8  51DD               	movf	set_RSSI_mode@temp& (0+255),w,b
  7375  0125AA  0980               	iorlw	128
  7376  0125AC  6FDD               	movwf	set_RSSI_mode@temp& (0+255),b
  7377                           
  7378                           ; BSR set to: 1
  7379                           ;zigbee.c: 159: write_ZIGBEE_short(0x3E, temp);
  7380  0125AE  C1DD  F1DA         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  7381  0125B2  0E3E               	movlw	62
  7382  0125B4  EC68  F094         	call	_write_ZIGBEE_short
  7383                           
  7384                           ;zigbee.c: 160: }
  7385                           ;zigbee.c: 161: break;
  7386  0125B8  0012               	return	
  7387  0125BA                     
  7388                           ;zigbee.c: 164: write_ZIGBEE_short(0x3E, 0x40);
  7389  0125BA  0E40               	movlw	64
  7390  0125BC  0101               	movlb	1	; () banked
  7391  0125BE  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7392  0125C0  0E3E               	movlw	62
  7393  0125C2  EC68  F094         	call	_write_ZIGBEE_short
  7394                           
  7395                           ;zigbee.c: 166: }
  7396                           
  7397                           ;zigbee.c: 165: break;
  7398  0125C6  0012               	return	
  7399  0125C8                     l395:
  7400  0125C8  0101               	movlb	1	; () banked
  7401  0125CA  51DC               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  7402                           
  7403                           ; Switch size 1, requested type "space"
  7404                           ; Number of cases is 2, Range of values is 1 to 2
  7405                           ; switch strategies available:
  7406                           ; Name         Instructions Cycles
  7407                           ; simple_byte            7     4 (average)
  7408                           ;	Chosen strategy is simple_byte
  7409  0125CC  0A01               	xorlw	1	; case 1
  7410  0125CE  B4D8               	btfsc	status,2,c
  7411  0125D0  D7E9               	goto	l396
  7412  0125D2  0A03               	xorlw	3	; case 2
  7413  0125D4  A4D8               	btfss	status,2,c
  7414  0125D6  0012               	return	
  7415  0125D8  D7F0               	goto	l398
  7416  0125DA                     __end_of_set_RSSI_mode:
  7417                           	opt stack 0
  7418                           tblptru	equ	0xFF8
  7419                           tblptrh	equ	0xFF7
  7420                           tblptrl	equ	0xFF6
  7421                           tablat	equ	0xFF5
  7422                           prodh	equ	0xFF4
  7423                           prodl	equ	0xFF3
  7424                           intcon	equ	0xFF2
  7425                           postinc0	equ	0xFEE
  7426                           wreg	equ	0xFE8
  7427                           indf1	equ	0xFE7
  7428                           postdec1	equ	0xFE5
  7429                           fsr1h	equ	0xFE2
  7430                           fsr1l	equ	0xFE1
  7431                           indf2	equ	0xFDF
  7432                           postinc2	equ	0xFDE
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _set_CCA_mode *****************
  7438 ;; Defined at:
  7439 ;;		line 103 in file "zigbee.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  CCA_mode        1    wreg     unsigned char 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  CCA_mode        1    4[BANK1 ] unsigned char 
  7444 ;;  temp            1    5[BANK1 ] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;Total ram usage:        2 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   10
  7461 ;; This function calls:
  7462 ;;		_write_ZIGBEE_short
  7463 ;; This function is called by:
  7464 ;;		_init_ZIGBEE_nonbeacon
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text22
  7469  011886                     __ptext22:
  7470                           	opt stack 0
  7471  011886                     _set_CCA_mode:
  7472                           	opt stack 19
  7473                           
  7474                           ;incstack = 0
  7475                           ;set_CCA_mode@CCA_mode stored from wreg
  7476  011886  0101               	movlb	1	; () banked
  7477  011888  6FDC               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  7478                           
  7479                           ;zigbee.c: 105: unsigned char temp = 0;
  7480  01188A  0E00               	movlw	0
  7481  01188C  0101               	movlb	1	; () banked
  7482  01188E  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7483                           
  7484                           ;zigbee.c: 106: switch(CCA_mode)
  7485  011890  D051               	goto	l387
  7486  011892                     
  7487                           ; BSR set to: 1
  7488                           ;zigbee.c: 109: {
  7489                           ;zigbee.c: 110: temp=0;
  7490                           
  7491                           ; BSR set to: 1
  7492  011892  0E00               	movlw	0
  7493  011894  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7494                           
  7495                           ; BSR set to: 1
  7496                           ;zigbee.c: 111: temp = temp | 0x80;
  7497  011896  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7498  011898  0980               	iorlw	128
  7499  01189A  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;zigbee.c: 112: temp = temp & 0xDF;
  7503  01189C  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7504  01189E  0BDF               	andlw	223
  7505  0118A0  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;zigbee.c: 113: write_ZIGBEE_short(0x3A, temp);
  7509  0118A2  C1DD  F1DA         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  7510  0118A6  0E3A               	movlw	58
  7511  0118A8  EC68  F094         	call	_write_ZIGBEE_short
  7512                           
  7513                           ;zigbee.c: 114: write_ZIGBEE_short(0x3F, 0x60);
  7514  0118AC  0E60               	movlw	96
  7515  0118AE  0101               	movlb	1	; () banked
  7516  0118B0  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7517  0118B2  0E3F               	movlw	63
  7518  0118B4  EC68  F094         	call	_write_ZIGBEE_short
  7519                           
  7520                           ;zigbee.c: 115: }
  7521                           ;zigbee.c: 116: break;
  7522  0118B8  0012               	return	
  7523  0118BA                     
  7524                           ;zigbee.c: 119: {
  7525                           ;zigbee.c: 120: temp=0;
  7526  0118BA  0E00               	movlw	0
  7527  0118BC  0101               	movlb	1	; () banked
  7528  0118BE  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7529                           
  7530                           ; BSR set to: 1
  7531                           ;zigbee.c: 121: temp = temp | 0x40;
  7532  0118C0  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7533  0118C2  0940               	iorlw	64
  7534  0118C4  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;zigbee.c: 122: temp = temp & 0x7F;
  7538  0118C6  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7539  0118C8  0B7F               	andlw	127
  7540  0118CA  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7541                           
  7542                           ; BSR set to: 1
  7543                           ;zigbee.c: 123: write_ZIGBEE_short(0x3A, temp);
  7544  0118CC  C1DD  F1DA         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  7545  0118D0  0E3A               	movlw	58
  7546  0118D2  EC68  F094         	call	_write_ZIGBEE_short
  7547                           
  7548                           ;zigbee.c: 125: temp=0;
  7549  0118D6  0E00               	movlw	0
  7550  0118D8  0101               	movlb	1	; () banked
  7551  0118DA  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;zigbee.c: 126: temp = temp | 0x38;
  7555  0118DC  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7556  0118DE  0938               	iorlw	56
  7557  0118E0  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;zigbee.c: 127: temp = temp & 0xFB;
  7561  0118E2  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7562  0118E4  0BFB               	andlw	251
  7563  0118E6  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7564                           
  7565                           ;zigbee.c: 128: write_ZIGBEE_short(0x3A, temp);
  7566  0118E8  C1DD  F1DA         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  7567  0118EC  0E3A               	movlw	58
  7568  0118EE  EC68  F094         	call	_write_ZIGBEE_short
  7569                           
  7570                           ;zigbee.c: 129: }
  7571                           ;zigbee.c: 130: break;
  7572  0118F2  0012               	return	
  7573  0118F4                     
  7574                           ;zigbee.c: 133: {
  7575                           ;zigbee.c: 134: temp=0;
  7576  0118F4  0E00               	movlw	0
  7577  0118F6  0101               	movlb	1	; () banked
  7578  0118F8  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7579                           
  7580                           ; BSR set to: 1
  7581                           ;zigbee.c: 135: temp = temp | 0xC0;
  7582  0118FA  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7583  0118FC  09C0               	iorlw	192
  7584  0118FE  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7585                           
  7586                           ; BSR set to: 1
  7587                           ;zigbee.c: 136: write_ZIGBEE_short(0x3A, temp);
  7588  011900  C1DD  F1DA         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  7589  011904  0E3A               	movlw	58
  7590  011906  EC68  F094         	call	_write_ZIGBEE_short
  7591                           
  7592                           ;zigbee.c: 138: temp=0;
  7593  01190A  0E00               	movlw	0
  7594  01190C  0101               	movlb	1	; () banked
  7595  01190E  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;zigbee.c: 139: temp = temp | 0x38;
  7599  011910  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7600  011912  0938               	iorlw	56
  7601  011914  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7602                           
  7603                           ; BSR set to: 1
  7604                           ;zigbee.c: 140: temp = temp & 0xFB;
  7605  011916  51DD               	movf	set_CCA_mode@temp& (0+255),w,b
  7606  011918  0BFB               	andlw	251
  7607  01191A  6FDD               	movwf	set_CCA_mode@temp& (0+255),b
  7608                           
  7609                           ; BSR set to: 1
  7610                           ;zigbee.c: 141: write_ZIGBEE_short(0x3A, temp);
  7611  01191C  C1DD  F1DA         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  7612  011920  0E3A               	movlw	58
  7613  011922  EC68  F094         	call	_write_ZIGBEE_short
  7614                           
  7615                           ;zigbee.c: 143: write_ZIGBEE_short(0x3F, 0x60);
  7616  011926  0E60               	movlw	96
  7617  011928  0101               	movlb	1	; () banked
  7618  01192A  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7619  01192C  0E3F               	movlw	63
  7620  01192E  EC68  F094         	call	_write_ZIGBEE_short
  7621                           
  7622                           ;zigbee.c: 146: }
  7623                           
  7624                           ;zigbee.c: 144: }
  7625                           ;zigbee.c: 145: break;
  7626  011932  0012               	return	
  7627  011934                     l387:
  7628  011934  0101               	movlb	1	; () banked
  7629  011936  51DC               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  7630                           
  7631                           ; Switch size 1, requested type "space"
  7632                           ; Number of cases is 3, Range of values is 1 to 3
  7633                           ; switch strategies available:
  7634                           ; Name         Instructions Cycles
  7635                           ; simple_byte           10     6 (average)
  7636                           ;	Chosen strategy is simple_byte
  7637  011938  0A01               	xorlw	1	; case 1
  7638  01193A  B4D8               	btfsc	status,2,c
  7639  01193C  D7AA               	goto	l388
  7640  01193E  0A03               	xorlw	3	; case 2
  7641  011940  B4D8               	btfsc	status,2,c
  7642  011942  D7BB               	goto	l390
  7643  011944  0A01               	xorlw	1	; case 3
  7644  011946  A4D8               	btfss	status,2,c
  7645  011948  0012               	return	
  7646  01194A  D7D4               	goto	l391
  7647  01194C                     __end_of_set_CCA_mode:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           intcon	equ	0xFF2
  7656                           postinc0	equ	0xFEE
  7657                           wreg	equ	0xFE8
  7658                           indf1	equ	0xFE7
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           indf2	equ	0xFDF
  7663                           postinc2	equ	0xFDE
  7664                           fsr2h	equ	0xFDA
  7665                           fsr2l	equ	0xFD9
  7666                           status	equ	0xFD8
  7667                           
  7668 ;; *************** function _pin_wake *****************
  7669 ;; Defined at:
  7670 ;;		line 232 in file "zigbee.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    9
  7691 ;; This function calls:
  7692 ;;		_Delay_ms
  7693 ;; This function is called by:
  7694 ;;		_init_ZIGBEE_nonbeacon
  7695 ;;		_main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text23
  7700  012AB4                     __ptext23:
  7701                           	opt stack 0
  7702  012AB4                     _pin_wake:
  7703                           	opt stack 21
  7704                           
  7705                           ;zigbee.c: 233: PORTFbits.RF4=1;
  7706                           
  7707                           ;incstack = 0
  7708  012AB4  8885               	bsf	3973,4,c	;volatile
  7709                           
  7710                           ;zigbee.c: 234: Delay_ms(10);
  7711  012AB6  0E00               	movlw	0
  7712  012AB8  0101               	movlb	1	; () banked
  7713  012ABA  6FD9               	movwf	(Delay_ms@time+1)& (0+255),b
  7714  012ABC  0E0A               	movlw	10
  7715  012ABE  6FD8               	movwf	Delay_ms@time& (0+255),b
  7716  012AC0  EC0C  F095         	call	_Delay_ms	;wreg free
  7717  012AC4  0012               	return		;funcret
  7718  012AC6                     __end_of_pin_wake:
  7719                           	opt stack 0
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           postinc0	equ	0xFEE
  7728                           wreg	equ	0xFE8
  7729                           indf1	equ	0xFE7
  7730                           postdec1	equ	0xFE5
  7731                           fsr1h	equ	0xFE2
  7732                           fsr1l	equ	0xFE1
  7733                           indf2	equ	0xFDF
  7734                           postinc2	equ	0xFDE
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function _Delay_ms *****************
  7740 ;; Defined at:
  7741 ;;		line 476 in file "zigbee.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  time            2    0[BANK1 ] unsigned int 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  y               2    2[BANK1 ] unsigned int 
  7746 ;;  x               2    0        unsigned int 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7756 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;Total ram usage:        4 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    8
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_pin_reset
  7767 ;;		_RF_reset
  7768 ;;		_pin_wake
  7769 ;;		_write_TX_normal_FIFO
  7770 ;;		_main
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text24
  7775  012A18                     __ptext24:
  7776                           	opt stack 0
  7777  012A18                     _Delay_ms:
  7778                           	opt stack 21
  7779                           
  7780                           ;zigbee.c: 477: unsigned int x,y=0;
  7781                           
  7782                           ;incstack = 0
  7783  012A18  0E00               	movlw	0
  7784  012A1A  0101               	movlb	1	; () banked
  7785  012A1C  6FDB               	movwf	(Delay_ms@y+1)& (0+255),b
  7786  012A1E  0E00               	movlw	0
  7787  012A20  6FDA               	movwf	Delay_ms@y& (0+255),b
  7788  012A22                     
  7789                           ; BSR set to: 1
  7790                           
  7791                           ; BSR set to: 1
  7792                           
  7793                           ; BSR set to: 1
  7794  012A22  4BD8               	infsnz	Delay_ms@time& (0+255),f,b
  7795  012A24  2BD9               	incf	(Delay_ms@time+1)& (0+255),f,b
  7796  012A26  0E10               	movlw	16
  7797  012A28  5DD8               	subwf	Delay_ms@time& (0+255),w,b
  7798  012A2A  0E27               	movlw	39
  7799  012A2C  59D9               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  7800  012A2E  B0D8               	btfsc	status,0,c
  7801  012A30  0012               	return	
  7802  012A32  D7F7               	goto	l509
  7803  012A34                     __end_of_Delay_ms:
  7804                           	opt stack 0
  7805                           tblptru	equ	0xFF8
  7806                           tblptrh	equ	0xFF7
  7807                           tblptrl	equ	0xFF6
  7808                           tablat	equ	0xFF5
  7809                           prodh	equ	0xFF4
  7810                           prodl	equ	0xFF3
  7811                           intcon	equ	0xFF2
  7812                           postinc0	equ	0xFEE
  7813                           wreg	equ	0xFE8
  7814                           indf1	equ	0xFE7
  7815                           postdec1	equ	0xFE5
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           fsr2h	equ	0xFDA
  7821                           fsr2l	equ	0xFD9
  7822                           status	equ	0xFD8
  7823                           
  7824 ;; *************** function _init_ZIGBEE_basic *****************
  7825 ;; Defined at:
  7826 ;;		line 86 in file "zigbee.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:   11
  7847 ;; This function calls:
  7848 ;;		_enable_PLL
  7849 ;;		_write_ZIGBEE_long
  7850 ;;		_write_ZIGBEE_short
  7851 ;; This function is called by:
  7852 ;;		_init_ZIGBEE_nonbeacon
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text25
  7857  011CBA                     __ptext25:
  7858                           	opt stack 0
  7859  011CBA                     _init_ZIGBEE_basic:
  7860                           	opt stack 18
  7861                           
  7862                           ;zigbee.c: 87: write_ZIGBEE_short(0x18, 0x98);
  7863                           
  7864                           ; BSR set to: 1
  7865                           ;incstack = 0
  7866  011CBA  0E98               	movlw	152
  7867  011CBC  0101               	movlb	1	; () banked
  7868  011CBE  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7869  011CC0  0E18               	movlw	24
  7870  011CC2  EC68  F094         	call	_write_ZIGBEE_short
  7871                           
  7872                           ;zigbee.c: 88: write_ZIGBEE_short(0x2E, 0x95);
  7873  011CC6  0E95               	movlw	149
  7874  011CC8  0101               	movlb	1	; () banked
  7875  011CCA  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7876  011CCC  0E2E               	movlw	46
  7877  011CCE  EC68  F094         	call	_write_ZIGBEE_short
  7878                           
  7879                           ;zigbee.c: 89: write_ZIGBEE_long(0x201, 0x01);
  7880  011CD2  0E02               	movlw	2
  7881  011CD4  0101               	movlb	1	; () banked
  7882  011CD6  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7883  011CD8  0E01               	movlw	1
  7884  011CDA  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7885  011CDC  0E01               	movlw	1
  7886  011CDE  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7887  011CE0  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7888                           
  7889                           ;zigbee.c: 90: enable_PLL();
  7890  011CE4  EC3D  F095         	call	_enable_PLL	;wreg free
  7891                           
  7892                           ;zigbee.c: 91: write_ZIGBEE_long(0x206, 0x90);
  7893  011CE8  0E02               	movlw	2
  7894  011CEA  0101               	movlb	1	; () banked
  7895  011CEC  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7896  011CEE  0E06               	movlw	6
  7897  011CF0  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7898  011CF2  0E90               	movlw	144
  7899  011CF4  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7900  011CF6  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7901                           
  7902                           ;zigbee.c: 92: write_ZIGBEE_long(0x207, 0x80);
  7903  011CFA  0E02               	movlw	2
  7904  011CFC  0101               	movlb	1	; () banked
  7905  011CFE  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7906  011D00  0E07               	movlw	7
  7907  011D02  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7908  011D04  0E80               	movlw	128
  7909  011D06  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7910  011D08  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7911                           
  7912                           ;zigbee.c: 93: write_ZIGBEE_long(0x208, 0x10);
  7913  011D0C  0E02               	movlw	2
  7914  011D0E  0101               	movlb	1	; () banked
  7915  011D10  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7916  011D12  0E08               	movlw	8
  7917  011D14  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7918  011D16  0E10               	movlw	16
  7919  011D18  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7920  011D1A  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7921                           
  7922                           ;zigbee.c: 94: write_ZIGBEE_short(0x211,0X02);
  7923  011D1E  0E02               	movlw	2
  7924  011D20  0101               	movlb	1	; () banked
  7925  011D22  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  7926  011D24  0E11               	movlw	17
  7927  011D26  EC68  F094         	call	_write_ZIGBEE_short
  7928                           
  7929                           ;zigbee.c: 95: write_ZIGBEE_long(0x220, 0x21);
  7930  011D2A  0E02               	movlw	2
  7931  011D2C  0101               	movlb	1	; () banked
  7932  011D2E  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7933  011D30  0E20               	movlw	32
  7934  011D32  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7935  011D34  0E21               	movlw	33
  7936  011D36  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7937  011D38  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7938                           
  7939                           ;zigbee.c: 96: write_ZIGBEE_long(0x22F, 0x0F);
  7940  011D3C  0E02               	movlw	2
  7941  011D3E  0101               	movlb	1	; () banked
  7942  011D40  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  7943  011D42  0E2F               	movlw	47
  7944  011D44  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  7945  011D46  0E0F               	movlw	15
  7946  011D48  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  7947  011D4A  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  7948  011D4E  0012               	return		;funcret
  7949  011D50                     __end_of_init_ZIGBEE_basic:
  7950                           	opt stack 0
  7951                           tblptru	equ	0xFF8
  7952                           tblptrh	equ	0xFF7
  7953                           tblptrl	equ	0xFF6
  7954                           tablat	equ	0xFF5
  7955                           prodh	equ	0xFF4
  7956                           prodl	equ	0xFF3
  7957                           intcon	equ	0xFF2
  7958                           postinc0	equ	0xFEE
  7959                           wreg	equ	0xFE8
  7960                           indf1	equ	0xFE7
  7961                           postdec1	equ	0xFE5
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           indf2	equ	0xFDF
  7965                           postinc2	equ	0xFDE
  7966                           fsr2h	equ	0xFDA
  7967                           fsr2l	equ	0xFD9
  7968                           status	equ	0xFD8
  7969                           
  7970 ;; *************** function _enable_PLL *****************
  7971 ;; Defined at:
  7972 ;;		line 100 in file "zigbee.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:   10
  7993 ;; This function calls:
  7994 ;;		_write_ZIGBEE_long
  7995 ;; This function is called by:
  7996 ;;		_init_ZIGBEE_basic
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text26
  8001  012A7A                     __ptext26:
  8002                           	opt stack 0
  8003  012A7A                     _enable_PLL:
  8004                           	opt stack 18
  8005                           
  8006                           ;zigbee.c: 101: write_ZIGBEE_long(0x202, 0x80);
  8007                           
  8008                           ;incstack = 0
  8009  012A7A  0E02               	movlw	2
  8010  012A7C  0101               	movlb	1	; () banked
  8011  012A7E  6FDB               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  8012  012A80  0E02               	movlw	2
  8013  012A82  6FDA               	movwf	write_ZIGBEE_long@address& (0+255),b
  8014  012A84  0E80               	movlw	128
  8015  012A86  6FDC               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  8016  012A88  ECC8  F091         	call	_write_ZIGBEE_long	;wreg free
  8017  012A8C  0012               	return		;funcret
  8018  012A8E                     __end_of_enable_PLL:
  8019                           	opt stack 0
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           postinc0	equ	0xFEE
  8028                           wreg	equ	0xFE8
  8029                           indf1	equ	0xFE7
  8030                           postdec1	equ	0xFE5
  8031                           fsr1h	equ	0xFE2
  8032                           fsr1l	equ	0xFE1
  8033                           indf2	equ	0xFDF
  8034                           postinc2	equ	0xFDE
  8035                           fsr2h	equ	0xFDA
  8036                           fsr2l	equ	0xFD9
  8037                           status	equ	0xFD8
  8038                           
  8039 ;; *************** function _write_ZIGBEE_long *****************
  8040 ;; Defined at:
  8041 ;;		line 415 in file "zigbee.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  address         2    2[BANK1 ] unsigned int 
  8044 ;;  data_r          1    4[BANK1 ] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  address_low     1    8[BANK1 ] unsigned char 
  8047 ;;  address_high    1    7[BANK1 ] unsigned char 
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		wreg, status,2, status,0, cstack
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8057 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;Total ram usage:        7 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:    9
  8064 ;; This function calls:
  8065 ;;		_SPI_Write
  8066 ;; This function is called by:
  8067 ;;		_init_ZIGBEE_basic
  8068 ;;		_enable_PLL
  8069 ;;		_set_channel
  8070 ;;		_set_TX_power
  8071 ;;		_write_TX_normal_FIFO
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text27
  8076  012390                     __ptext27:
  8077                           	opt stack 0
  8078  012390                     _write_ZIGBEE_long:
  8079                           	opt stack 20
  8080                           
  8081                           ;zigbee.c: 416: unsigned char address_high = 0, address_low = 0;
  8082                           
  8083                           ;incstack = 0
  8084  012390  0E00               	movlw	0
  8085  012392  0101               	movlb	1	; () banked
  8086  012394  6FDF               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  8087  012396  0E00               	movlw	0
  8088  012398  6FE0               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;zigbee.c: 418: PORTCbits.RC0=0;
  8092  01239A  9082               	bcf	3970,0,c	;volatile
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;zigbee.c: 419: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  8096  01239C  C1DA  F1DD         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  8097  0123A0  C1DB  F1DE         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  8098  0123A4  90D8               	bcf	status,0,c
  8099  0123A6  33DE               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  8100  0123A8  33DD               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  8101  0123AA  90D8               	bcf	status,0,c
  8102  0123AC  33DE               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  8103  0123AE  33DD               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  8104  0123B0  90D8               	bcf	status,0,c
  8105  0123B2  33DE               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  8106  0123B4  33DD               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  8107  0123B6  51DD               	movf	??_write_ZIGBEE_long& (0+255),w,b
  8108  0123B8  0B7F               	andlw	127
  8109  0123BA  0980               	iorlw	128
  8110  0123BC  6FDF               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  8111                           
  8112                           ; BSR set to: 1
  8113                           ;zigbee.c: 420: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  8114  0123BE  39DA               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  8115  0123C0  46E8               	rlncf	wreg,f,c
  8116  0123C2  0BE0               	andlw	224
  8117  0123C4  0BE0               	andlw	224
  8118  0123C6  0910               	iorlw	16
  8119  0123C8  6FE0               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  8120                           
  8121                           ; BSR set to: 1
  8122                           ;zigbee.c: 421: SPI_Write(address_high);
  8123  0123CA  51DF               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  8124  0123CC  EC63  F095         	call	_SPI_Write
  8125                           
  8126                           ;zigbee.c: 422: SPI_Write(address_low);
  8127  0123D0  0101               	movlb	1	; () banked
  8128  0123D2  51E0               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  8129  0123D4  EC63  F095         	call	_SPI_Write
  8130                           
  8131                           ;zigbee.c: 423: SPI_Write(data_r);
  8132  0123D8  0101               	movlb	1	; () banked
  8133  0123DA  51DC               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  8134  0123DC  EC63  F095         	call	_SPI_Write
  8135                           
  8136                           ;zigbee.c: 424: PORTCbits.RC0=1;
  8137  0123E0  8082               	bsf	3970,0,c	;volatile
  8138  0123E2  0012               	return		;funcret
  8139  0123E4                     __end_of_write_ZIGBEE_long:
  8140                           	opt stack 0
  8141                           tblptru	equ	0xFF8
  8142                           tblptrh	equ	0xFF7
  8143                           tblptrl	equ	0xFF6
  8144                           tablat	equ	0xFF5
  8145                           prodh	equ	0xFF4
  8146                           prodl	equ	0xFF3
  8147                           intcon	equ	0xFF2
  8148                           postinc0	equ	0xFEE
  8149                           wreg	equ	0xFE8
  8150                           indf1	equ	0xFE7
  8151                           postdec1	equ	0xFE5
  8152                           fsr1h	equ	0xFE2
  8153                           fsr1l	equ	0xFE1
  8154                           indf2	equ	0xFDF
  8155                           postinc2	equ	0xFDE
  8156                           fsr2h	equ	0xFDA
  8157                           fsr2l	equ	0xFD9
  8158                           status	equ	0xFD8
  8159                           
  8160 ;; *************** function _enable_interrupt *****************
  8161 ;; Defined at:
  8162 ;;		line 168 in file "zigbee.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:   10
  8183 ;; This function calls:
  8184 ;;		_write_ZIGBEE_short
  8185 ;; This function is called by:
  8186 ;;		_init_ZIGBEE_nonbeacon
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text28
  8191  012B1C                     __ptext28:
  8192                           	opt stack 0
  8193  012B1C                     _enable_interrupt:
  8194                           	opt stack 19
  8195                           
  8196                           ;zigbee.c: 169: write_ZIGBEE_short(0x32, 0xF7);
  8197                           
  8198                           ;incstack = 0
  8199  012B1C  0EF7               	movlw	247
  8200  012B1E  0101               	movlb	1	; () banked
  8201  012B20  6FDA               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  8202  012B22  0E32               	movlw	50
  8203  012B24  EC68  F094         	call	_write_ZIGBEE_short
  8204  012B28  0012               	return		;funcret
  8205  012B2A                     __end_of_enable_interrupt:
  8206                           	opt stack 0
  8207                           tblptru	equ	0xFF8
  8208                           tblptrh	equ	0xFF7
  8209                           tblptrl	equ	0xFF6
  8210                           tablat	equ	0xFF5
  8211                           prodh	equ	0xFF4
  8212                           prodl	equ	0xFF3
  8213                           intcon	equ	0xFF2
  8214                           postinc0	equ	0xFEE
  8215                           wreg	equ	0xFE8
  8216                           indf1	equ	0xFE7
  8217                           postdec1	equ	0xFE5
  8218                           fsr1h	equ	0xFE2
  8219                           fsr1l	equ	0xFE1
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function _write_ZIGBEE_short *****************
  8227 ;; Defined at:
  8228 ;;		line 397 in file "zigbee.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  address         1    wreg     unsigned char 
  8231 ;;  data_r          1    2[BANK1 ] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  address         1    3[BANK1 ] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:        2 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    9
  8250 ;; This function calls:
  8251 ;;		_SPI_Write
  8252 ;; This function is called by:
  8253 ;;		_RF_reset
  8254 ;;		_set_WAKE_from_pin
  8255 ;;		_set_long_address
  8256 ;;		_set_short_address
  8257 ;;		_set_PAN_ID
  8258 ;;		_init_ZIGBEE_basic
  8259 ;;		_set_CCA_mode
  8260 ;;		_set_RSSI_mode
  8261 ;;		_enable_interrupt
  8262 ;;		_nonbeacon_PAN_coordinator_device
  8263 ;;		_set_frame_format_filter
  8264 ;;		_set_reception_mode
  8265 ;;		_set_not_ACK
  8266 ;;		_set_not_encrypt
  8267 ;;		_start_transmit
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text29
  8272  0128D0                     __ptext29:
  8273                           	opt stack 0
  8274  0128D0                     _write_ZIGBEE_short:
  8275                           	opt stack 19
  8276                           
  8277                           ;incstack = 0
  8278                           ;write_ZIGBEE_short@address stored from wreg
  8279  0128D0  0101               	movlb	1	; () banked
  8280  0128D2  6FDB               	movwf	write_ZIGBEE_short@address& (0+255),b
  8281                           
  8282                           ;zigbee.c: 398: PORTCbits.RC0=0;
  8283  0128D4  9082               	bcf	3970,0,c	;volatile
  8284                           
  8285                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
  8286  0128D6  0101               	movlb	1	; () banked
  8287  0128D8  51DB               	movf	write_ZIGBEE_short@address& (0+255),w,b
  8288  0128DA  25DB               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  8289  0128DC  0B7F               	andlw	127
  8290  0128DE  0901               	iorlw	1
  8291  0128E0  6FDB               	movwf	write_ZIGBEE_short@address& (0+255),b
  8292                           
  8293                           ; BSR set to: 1
  8294                           ;zigbee.c: 400: SPI_Write(address);
  8295  0128E2  51DB               	movf	write_ZIGBEE_short@address& (0+255),w,b
  8296  0128E4  EC63  F095         	call	_SPI_Write
  8297                           
  8298                           ;zigbee.c: 401: SPI_Write(data_r);
  8299  0128E8  0101               	movlb	1	; () banked
  8300  0128EA  51DA               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  8301  0128EC  EC63  F095         	call	_SPI_Write
  8302                           
  8303                           ;zigbee.c: 402: PORTCbits.RC0=1;
  8304  0128F0  8082               	bsf	3970,0,c	;volatile
  8305  0128F2  0012               	return		;funcret
  8306  0128F4                     __end_of_write_ZIGBEE_short:
  8307                           	opt stack 0
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           intcon	equ	0xFF2
  8315                           postinc0	equ	0xFEE
  8316                           wreg	equ	0xFE8
  8317                           indf1	equ	0xFE7
  8318                           postdec1	equ	0xFE5
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           indf2	equ	0xFDF
  8322                           postinc2	equ	0xFDE
  8323                           fsr2h	equ	0xFDA
  8324                           fsr2l	equ	0xFD9
  8325                           status	equ	0xFD8
  8326                           
  8327 ;; *************** function _SPI_Write *****************
  8328 ;; Defined at:
  8329 ;;		line 458 in file "zigbee.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  command         1    wreg     unsigned char 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  command         1    1[BANK1 ] unsigned char 
  8334 ;;  response        1    0[BANK1 ] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;Total ram usage:        2 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    8
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_write_ZIGBEE_short
  8355 ;;		_read_ZIGBEE_short
  8356 ;;		_write_ZIGBEE_long
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text30
  8361  012AC6                     __ptext30:
  8362                           	opt stack 0
  8363  012AC6                     _SPI_Write:
  8364                           	opt stack 20
  8365                           
  8366                           ;incstack = 0
  8367                           ;SPI_Write@command stored from wreg
  8368  012AC6  0101               	movlb	1	; () banked
  8369  012AC8  6FD9               	movwf	SPI_Write@command& (0+255),b
  8370                           
  8371                           ;zigbee.c: 459: unsigned char response;
  8372                           ;zigbee.c: 460: SSP1BUF = command;
  8373  012ACA  C1D9  FFC9         	movff	SPI_Write@command,4041	;volatile
  8374  012ACE  A0C7               	btfss	4039,0,c	;volatile
  8375  012AD0  D7FE               	goto	l491
  8376                           
  8377                           ;zigbee.c: 462: response = SSP1BUF;
  8378  012AD2  CFC9 F1D8          	movff	4041,SPI_Write@response	;volatile
  8379  012AD6  0012               	return		;funcret
  8380  012AD8                     __end_of_SPI_Write:
  8381                           	opt stack 0
  8382                           tblptru	equ	0xFF8
  8383                           tblptrh	equ	0xFF7
  8384                           tblptrl	equ	0xFF6
  8385                           tablat	equ	0xFF5
  8386                           prodh	equ	0xFF4
  8387                           prodl	equ	0xFF3
  8388                           intcon	equ	0xFF2
  8389                           postinc0	equ	0xFEE
  8390                           wreg	equ	0xFE8
  8391                           indf1	equ	0xFE7
  8392                           postdec1	equ	0xFE5
  8393                           fsr1h	equ	0xFE2
  8394                           fsr1l	equ	0xFE1
  8395                           indf2	equ	0xFDF
  8396                           postinc2	equ	0xFDE
  8397                           fsr2h	equ	0xFDA
  8398                           fsr2l	equ	0xFD9
  8399                           status	equ	0xFD8
  8400                           
  8401 ;; *************** function _check_msg *****************
  8402 ;; Defined at:
  8403 ;;		line 970 in file "2_April_TestMain.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  Check           1    1[BANK1 ] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      unsigned char 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;Total ram usage:        2 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    8
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_main
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text31
  8432  011200                     __ptext31:
  8433                           	opt stack 0
  8434  011200                     _check_msg:
  8435                           	opt stack 22
  8436                           
  8437                           ;2_April_TestMain.c: 971: unsigned char Check=0;
  8438                           
  8439                           ;incstack = 0
  8440  011200  0E00               	movlw	0
  8441  011202  0101               	movlb	1	; () banked
  8442  011204  6FD9               	movwf	check_msg@Check& (0+255),b
  8443                           
  8444                           ;2_April_TestMain.c: 972: for(n=0;n<11;n++){
  8445  011206  0E00               	movlw	0
  8446  011208  0100               	movlb	0	; () banked
  8447  01120A  6F9E               	movwf	_n& (0+255),b
  8448  01120C                     l6331:
  8449                           
  8450                           ; BSR set to: 0
  8451  01120C  0E0A               	movlw	10
  8452  01120E  659E               	cpfsgt	_n& (0+255),b
  8453  011210  D001               	goto	l1110
  8454  011212  D022               	goto	u3440
  8455  011214                     l1110:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;2_April_TestMain.c: 973: if(LIGHT_ALL_ON[n]==SMS[n]){
  8459                           
  8460                           ; BSR set to: 0
  8461  011214  519E               	movf	_n& (0+255),w,b
  8462  011216  0D01               	mullw	1
  8463  011218  0E72               	movlw	low _SMS
  8464  01121A  24F3               	addwf	prodl,w,c
  8465  01121C  6ED9               	movwf	fsr2l,c
  8466  01121E  0E00               	movlw	high _SMS
  8467  011220  20F4               	addwfc	prodh,w,c
  8468  011222  6EDA               	movwf	fsr2h,c
  8469  011224  519E               	movf	_n& (0+255),w,b
  8470  011226  0D01               	mullw	1
  8471  011228  0E35               	movlw	low _LIGHT_ALL_ON
  8472  01122A  24F3               	addwf	prodl,w,c
  8473  01122C  6EF6               	movwf	tblptrl,c
  8474  01122E  0EFD               	movlw	high _LIGHT_ALL_ON
  8475  011230  20F4               	addwfc	prodh,w,c
  8476  011232  6EF7               	movwf	tblptrh,c
  8477  011234                     	if	1	;There are 3 active tblptr bytes
  8478  011234  6AF8               	clrf	tblptru,c
  8479  011236  0E00               	movlw	low (__mediumconst shr (0+16))
  8480  011238  22F8               	addwfc	tblptru,f,c
  8481  01123A                     	endif
  8482  01123A  50DE               	movf	postinc2,w,c
  8483  01123C  0009               	tblrd		*+
  8484  01123E  18F5               	xorwf	tablat,w,c
  8485  011240  A4D8               	btfss	status,2,c
  8486  011242  D003               	goto	l1112
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;2_April_TestMain.c: 974: Check++;
  8490  011244  0101               	movlb	1	; () banked
  8491  011246  2BD9               	incf	check_msg@Check& (0+255),f,b
  8492                           
  8493                           ;2_April_TestMain.c: 975: }
  8494  011248  D004               	goto	l1113
  8495  01124A                     l1112:
  8496                           
  8497                           ;2_April_TestMain.c: 976: else{
  8498                           ;2_April_TestMain.c: 977: Check=0;
  8499                           
  8500                           ; BSR set to: 1
  8501  01124A  0E00               	movlw	0
  8502  01124C  0101               	movlb	1	; () banked
  8503  01124E  6FD9               	movwf	check_msg@Check& (0+255),b
  8504                           
  8505                           ;2_April_TestMain.c: 978: break;
  8506  011250  D003               	goto	u3440
  8507  011252                     l1113:
  8508                           
  8509                           ; BSR set to: 1
  8510                           
  8511                           ; BSR set to: 1
  8512  011252  0100               	movlb	0	; () banked
  8513  011254  2B9E               	incf	_n& (0+255),f,b
  8514  011256  D7DA               	goto	l6331
  8515  011258                     u3440:
  8516                           
  8517                           ;2_April_TestMain.c: 979: }
  8518                           ;2_April_TestMain.c: 980: }
  8519                           ;2_April_TestMain.c: 981: if(Check==11){
  8520                           
  8521                           ; BSR set to: 0
  8522  011258  0E0B               	movlw	11
  8523  01125A  0101               	movlb	1	; () banked
  8524  01125C  19D9               	xorwf	check_msg@Check& (0+255),w,b
  8525  01125E  A4D8               	btfss	status,2,c
  8526  011260  D002               	goto	l1114
  8527                           
  8528                           ; BSR set to: 1
  8529                           ;2_April_TestMain.c: 982: return 1;
  8530  011262  0E01               	movlw	1
  8531                           
  8532                           ; BSR set to: 1
  8533  011264  0012               	return	
  8534  011266                     l1114:
  8535                           
  8536                           ; BSR set to: 1
  8537                           ;2_April_TestMain.c: 983: }
  8538                           ;2_April_TestMain.c: 984: Check=0;
  8539                           
  8540                           ; BSR set to: 1
  8541  011266  0E00               	movlw	0
  8542  011268  6FD9               	movwf	check_msg@Check& (0+255),b
  8543                           
  8544                           ;2_April_TestMain.c: 985: for(n=0;n<11;n++){
  8545  01126A  0E00               	movlw	0
  8546  01126C  0100               	movlb	0	; () banked
  8547  01126E  6F9E               	movwf	_n& (0+255),b
  8548  011270                     l6353:
  8549                           
  8550                           ; BSR set to: 0
  8551  011270  0E0A               	movlw	10
  8552  011272  659E               	cpfsgt	_n& (0+255),b
  8553  011274  D001               	goto	l1116
  8554  011276  D022               	goto	u3480
  8555  011278                     l1116:
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;2_April_TestMain.c: 986: if(LIGHT_ALL_OFF[n]==SMS[n]){
  8559                           
  8560                           ; BSR set to: 0
  8561  011278  519E               	movf	_n& (0+255),w,b
  8562  01127A  0D01               	mullw	1
  8563  01127C  0E72               	movlw	low _SMS
  8564  01127E  24F3               	addwf	prodl,w,c
  8565  011280  6ED9               	movwf	fsr2l,c
  8566  011282  0E00               	movlw	high _SMS
  8567  011284  20F4               	addwfc	prodh,w,c
  8568  011286  6EDA               	movwf	fsr2h,c
  8569  011288  519E               	movf	_n& (0+255),w,b
  8570  01128A  0D01               	mullw	1
  8571  01128C  0E28               	movlw	low _LIGHT_ALL_OFF
  8572  01128E  24F3               	addwf	prodl,w,c
  8573  011290  6EF6               	movwf	tblptrl,c
  8574  011292  0EFD               	movlw	high _LIGHT_ALL_OFF
  8575  011294  20F4               	addwfc	prodh,w,c
  8576  011296  6EF7               	movwf	tblptrh,c
  8577  011298                     	if	1	;There are 3 active tblptr bytes
  8578  011298  6AF8               	clrf	tblptru,c
  8579  01129A  0E00               	movlw	low (__mediumconst shr (0+16))
  8580  01129C  22F8               	addwfc	tblptru,f,c
  8581  01129E                     	endif
  8582  01129E  50DE               	movf	postinc2,w,c
  8583  0112A0  0009               	tblrd		*+
  8584  0112A2  18F5               	xorwf	tablat,w,c
  8585  0112A4  A4D8               	btfss	status,2,c
  8586  0112A6  D003               	goto	l1118
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;2_April_TestMain.c: 987: Check++;
  8590  0112A8  0101               	movlb	1	; () banked
  8591  0112AA  2BD9               	incf	check_msg@Check& (0+255),f,b
  8592                           
  8593                           ;2_April_TestMain.c: 988: }
  8594  0112AC  D004               	goto	l1119
  8595  0112AE                     l1118:
  8596                           
  8597                           ;2_April_TestMain.c: 989: else{
  8598                           ;2_April_TestMain.c: 990: Check=0;
  8599                           
  8600                           ; BSR set to: 1
  8601  0112AE  0E00               	movlw	0
  8602  0112B0  0101               	movlb	1	; () banked
  8603  0112B2  6FD9               	movwf	check_msg@Check& (0+255),b
  8604                           
  8605                           ;2_April_TestMain.c: 991: break;
  8606  0112B4  D003               	goto	u3480
  8607  0112B6                     l1119:
  8608                           
  8609                           ; BSR set to: 1
  8610                           
  8611                           ; BSR set to: 1
  8612  0112B6  0100               	movlb	0	; () banked
  8613  0112B8  2B9E               	incf	_n& (0+255),f,b
  8614  0112BA  D7DA               	goto	l6353
  8615  0112BC                     u3480:
  8616                           
  8617                           ;2_April_TestMain.c: 992: }
  8618                           ;2_April_TestMain.c: 993: }
  8619                           ;2_April_TestMain.c: 994: if(Check==11){
  8620                           
  8621                           ; BSR set to: 0
  8622  0112BC  0E0B               	movlw	11
  8623  0112BE  0101               	movlb	1	; () banked
  8624  0112C0  19D9               	xorwf	check_msg@Check& (0+255),w,b
  8625  0112C2  A4D8               	btfss	status,2,c
  8626  0112C4  D004               	goto	l1120
  8627                           
  8628                           ; BSR set to: 1
  8629                           ;2_April_TestMain.c: 995: Check=0;
  8630  0112C6  0E00               	movlw	0
  8631  0112C8  6FD9               	movwf	check_msg@Check& (0+255),b
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;2_April_TestMain.c: 996: return 2;
  8635  0112CA  0E02               	movlw	2
  8636                           
  8637                           ; BSR set to: 1
  8638  0112CC  0012               	return	
  8639  0112CE                     l1120:
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;2_April_TestMain.c: 997: }
  8643                           ;2_April_TestMain.c: 999: Check=0;
  8644                           
  8645                           ; BSR set to: 1
  8646  0112CE  0E00               	movlw	0
  8647  0112D0  6FD9               	movwf	check_msg@Check& (0+255),b
  8648                           
  8649                           ;2_April_TestMain.c: 1000: for(n=0;n<11;n++){
  8650  0112D2  0E00               	movlw	0
  8651  0112D4  0100               	movlb	0	; () banked
  8652  0112D6  6F9E               	movwf	_n& (0+255),b
  8653  0112D8                     l6377:
  8654                           
  8655                           ; BSR set to: 0
  8656  0112D8  0E0A               	movlw	10
  8657  0112DA  659E               	cpfsgt	_n& (0+255),b
  8658  0112DC  D001               	goto	l1121
  8659  0112DE  D022               	goto	u3520
  8660  0112E0                     l1121:
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;2_April_TestMain.c: 1001: if(LIGHT_ALTERNATE[n]==SMS[n]){
  8664                           
  8665                           ; BSR set to: 0
  8666  0112E0  519E               	movf	_n& (0+255),w,b
  8667  0112E2  0D01               	mullw	1
  8668  0112E4  0E72               	movlw	low _SMS
  8669  0112E6  24F3               	addwf	prodl,w,c
  8670  0112E8  6ED9               	movwf	fsr2l,c
  8671  0112EA  0E00               	movlw	high _SMS
  8672  0112EC  20F4               	addwfc	prodh,w,c
  8673  0112EE  6EDA               	movwf	fsr2h,c
  8674  0112F0  519E               	movf	_n& (0+255),w,b
  8675  0112F2  0D01               	mullw	1
  8676  0112F4  0E1B               	movlw	low _LIGHT_ALTERNATE
  8677  0112F6  24F3               	addwf	prodl,w,c
  8678  0112F8  6EF6               	movwf	tblptrl,c
  8679  0112FA  0EFD               	movlw	high _LIGHT_ALTERNATE
  8680  0112FC  20F4               	addwfc	prodh,w,c
  8681  0112FE  6EF7               	movwf	tblptrh,c
  8682  011300                     	if	1	;There are 3 active tblptr bytes
  8683  011300  6AF8               	clrf	tblptru,c
  8684  011302  0E00               	movlw	low (__mediumconst shr (0+16))
  8685  011304  22F8               	addwfc	tblptru,f,c
  8686  011306                     	endif
  8687  011306  50DE               	movf	postinc2,w,c
  8688  011308  0009               	tblrd		*+
  8689  01130A  18F5               	xorwf	tablat,w,c
  8690  01130C  A4D8               	btfss	status,2,c
  8691  01130E  D003               	goto	l1123
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;2_April_TestMain.c: 1002: Check++;
  8695  011310  0101               	movlb	1	; () banked
  8696  011312  2BD9               	incf	check_msg@Check& (0+255),f,b
  8697                           
  8698                           ;2_April_TestMain.c: 1003: }
  8699  011314  D004               	goto	l1124
  8700  011316                     l1123:
  8701                           
  8702                           ;2_April_TestMain.c: 1004: else{
  8703                           ;2_April_TestMain.c: 1005: Check=0;
  8704                           
  8705                           ; BSR set to: 1
  8706  011316  0E00               	movlw	0
  8707  011318  0101               	movlb	1	; () banked
  8708  01131A  6FD9               	movwf	check_msg@Check& (0+255),b
  8709                           
  8710                           ;2_April_TestMain.c: 1006: break;
  8711  01131C  D003               	goto	u3520
  8712  01131E                     l1124:
  8713                           
  8714                           ; BSR set to: 1
  8715                           
  8716                           ; BSR set to: 1
  8717  01131E  0100               	movlb	0	; () banked
  8718  011320  2B9E               	incf	_n& (0+255),f,b
  8719  011322  D7DA               	goto	l6377
  8720  011324                     u3520:
  8721                           
  8722                           ;2_April_TestMain.c: 1007: }
  8723                           ;2_April_TestMain.c: 1008: }
  8724                           ;2_April_TestMain.c: 1009: if(Check==11){
  8725                           
  8726                           ; BSR set to: 0
  8727  011324  0E0B               	movlw	11
  8728  011326  0101               	movlb	1	; () banked
  8729  011328  19D9               	xorwf	check_msg@Check& (0+255),w,b
  8730  01132A  A4D8               	btfss	status,2,c
  8731  01132C  D004               	goto	l1125
  8732                           
  8733                           ; BSR set to: 1
  8734                           ;2_April_TestMain.c: 1010: Check=0;
  8735  01132E  0E00               	movlw	0
  8736  011330  6FD9               	movwf	check_msg@Check& (0+255),b
  8737                           
  8738                           ; BSR set to: 1
  8739                           ;2_April_TestMain.c: 1011: return 3;
  8740  011332  0E03               	movlw	3
  8741                           
  8742                           ; BSR set to: 1
  8743  011334  0012               	return	
  8744  011336                     l1125:
  8745                           
  8746                           ; BSR set to: 1
  8747                           ;2_April_TestMain.c: 1012: }
  8748                           ;2_April_TestMain.c: 1013: for(n=0;n<7;n++){
  8749                           
  8750                           ; BSR set to: 1
  8751  011336  0E00               	movlw	0
  8752  011338  0100               	movlb	0	; () banked
  8753  01133A  6F9E               	movwf	_n& (0+255),b
  8754  01133C                     l6401:
  8755                           
  8756                           ; BSR set to: 0
  8757  01133C  0E06               	movlw	6
  8758  01133E  659E               	cpfsgt	_n& (0+255),b
  8759  011340  D001               	goto	l1126
  8760  011342  D022               	goto	u3560
  8761  011344                     l1126:
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;2_April_TestMain.c: 1014: if(LIGHT_DEBBUGE_STATUS[n]==SMS[n]){
  8765                           
  8766                           ; BSR set to: 0
  8767  011344  519E               	movf	_n& (0+255),w,b
  8768  011346  0D01               	mullw	1
  8769  011348  0E72               	movlw	low _SMS
  8770  01134A  24F3               	addwf	prodl,w,c
  8771  01134C  6ED9               	movwf	fsr2l,c
  8772  01134E  0E00               	movlw	high _SMS
  8773  011350  20F4               	addwfc	prodh,w,c
  8774  011352  6EDA               	movwf	fsr2h,c
  8775  011354  519E               	movf	_n& (0+255),w,b
  8776  011356  0D01               	mullw	1
  8777  011358  0E61               	movlw	low _LIGHT_DEBBUGE_STATUS
  8778  01135A  24F3               	addwf	prodl,w,c
  8779  01135C  6EF6               	movwf	tblptrl,c
  8780  01135E  0EFD               	movlw	high _LIGHT_DEBBUGE_STATUS
  8781  011360  20F4               	addwfc	prodh,w,c
  8782  011362  6EF7               	movwf	tblptrh,c
  8783  011364                     	if	1	;There are 3 active tblptr bytes
  8784  011364  6AF8               	clrf	tblptru,c
  8785  011366  0E00               	movlw	low (__mediumconst shr (0+16))
  8786  011368  22F8               	addwfc	tblptru,f,c
  8787  01136A                     	endif
  8788  01136A  50DE               	movf	postinc2,w,c
  8789  01136C  0009               	tblrd		*+
  8790  01136E  18F5               	xorwf	tablat,w,c
  8791  011370  A4D8               	btfss	status,2,c
  8792  011372  D003               	goto	l1128
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;2_April_TestMain.c: 1015: Check++;
  8796  011374  0101               	movlb	1	; () banked
  8797  011376  2BD9               	incf	check_msg@Check& (0+255),f,b
  8798                           
  8799                           ;2_April_TestMain.c: 1016: }
  8800  011378  D004               	goto	l1129
  8801  01137A                     l1128:
  8802                           
  8803                           ;2_April_TestMain.c: 1017: else{
  8804                           ;2_April_TestMain.c: 1018: Check=0;
  8805                           
  8806                           ; BSR set to: 1
  8807  01137A  0E00               	movlw	0
  8808  01137C  0101               	movlb	1	; () banked
  8809  01137E  6FD9               	movwf	check_msg@Check& (0+255),b
  8810                           
  8811                           ;2_April_TestMain.c: 1019: break;
  8812  011380  D003               	goto	u3560
  8813  011382                     l1129:
  8814                           
  8815                           ; BSR set to: 1
  8816                           
  8817                           ; BSR set to: 1
  8818  011382  0100               	movlb	0	; () banked
  8819  011384  2B9E               	incf	_n& (0+255),f,b
  8820  011386  D7DA               	goto	l6401
  8821  011388                     u3560:
  8822                           
  8823                           ;2_April_TestMain.c: 1020: }
  8824                           ;2_April_TestMain.c: 1021: }
  8825                           ;2_April_TestMain.c: 1022: if(Check==7){
  8826                           
  8827                           ; BSR set to: 0
  8828  011388  0E07               	movlw	7
  8829  01138A  0101               	movlb	1	; () banked
  8830  01138C  19D9               	xorwf	check_msg@Check& (0+255),w,b
  8831  01138E  A4D8               	btfss	status,2,c
  8832  011390  D004               	goto	l1130
  8833                           
  8834                           ; BSR set to: 1
  8835                           ;2_April_TestMain.c: 1023: Check=0;
  8836  011392  0E00               	movlw	0
  8837  011394  6FD9               	movwf	check_msg@Check& (0+255),b
  8838                           
  8839                           ; BSR set to: 1
  8840                           ;2_April_TestMain.c: 1024: return 4;
  8841  011396  0E04               	movlw	4
  8842                           
  8843                           ; BSR set to: 1
  8844  011398  0012               	return	
  8845  01139A                     l1130:
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;2_April_TestMain.c: 1025: }
  8849                           ;2_April_TestMain.c: 1026: Check=0;
  8850                           
  8851                           ; BSR set to: 1
  8852  01139A  0E00               	movlw	0
  8853  01139C  6FD9               	movwf	check_msg@Check& (0+255),b
  8854                           
  8855                           ;2_April_TestMain.c: 1027: for(n=0;n<11;n++){
  8856  01139E  0E00               	movlw	0
  8857  0113A0  0100               	movlb	0	; () banked
  8858  0113A2  6F9E               	movwf	_n& (0+255),b
  8859  0113A4                     l6425:
  8860                           
  8861                           ; BSR set to: 0
  8862  0113A4  0E0A               	movlw	10
  8863  0113A6  659E               	cpfsgt	_n& (0+255),b
  8864  0113A8  D001               	goto	l1131
  8865  0113AA  D022               	goto	u3600
  8866  0113AC                     l1131:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;2_April_TestMain.c: 1028: if(LIGHT_CARD_STATUS[n]==SMS[n]){
  8870                           
  8871                           ; BSR set to: 0
  8872  0113AC  519E               	movf	_n& (0+255),w,b
  8873  0113AE  0D01               	mullw	1
  8874  0113B0  0E72               	movlw	low _SMS
  8875  0113B2  24F3               	addwf	prodl,w,c
  8876  0113B4  6ED9               	movwf	fsr2l,c
  8877  0113B6  0E00               	movlw	high _SMS
  8878  0113B8  20F4               	addwfc	prodh,w,c
  8879  0113BA  6EDA               	movwf	fsr2h,c
  8880  0113BC  519E               	movf	_n& (0+255),w,b
  8881  0113BE  0D01               	mullw	1
  8882  0113C0  0E0E               	movlw	low _LIGHT_CARD_STATUS
  8883  0113C2  24F3               	addwf	prodl,w,c
  8884  0113C4  6EF6               	movwf	tblptrl,c
  8885  0113C6  0EFD               	movlw	high _LIGHT_CARD_STATUS
  8886  0113C8  20F4               	addwfc	prodh,w,c
  8887  0113CA  6EF7               	movwf	tblptrh,c
  8888  0113CC                     	if	1	;There are 3 active tblptr bytes
  8889  0113CC  6AF8               	clrf	tblptru,c
  8890  0113CE  0E00               	movlw	low (__mediumconst shr (0+16))
  8891  0113D0  22F8               	addwfc	tblptru,f,c
  8892  0113D2                     	endif
  8893  0113D2  50DE               	movf	postinc2,w,c
  8894  0113D4  0009               	tblrd		*+
  8895  0113D6  18F5               	xorwf	tablat,w,c
  8896  0113D8  A4D8               	btfss	status,2,c
  8897  0113DA  D003               	goto	l1133
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;2_April_TestMain.c: 1029: Check++;
  8901  0113DC  0101               	movlb	1	; () banked
  8902  0113DE  2BD9               	incf	check_msg@Check& (0+255),f,b
  8903                           
  8904                           ;2_April_TestMain.c: 1030: }
  8905  0113E0  D004               	goto	l1134
  8906  0113E2                     l1133:
  8907                           
  8908                           ;2_April_TestMain.c: 1031: else{
  8909                           ;2_April_TestMain.c: 1032: Check=0;
  8910                           
  8911                           ; BSR set to: 1
  8912  0113E2  0E00               	movlw	0
  8913  0113E4  0101               	movlb	1	; () banked
  8914  0113E6  6FD9               	movwf	check_msg@Check& (0+255),b
  8915                           
  8916                           ;2_April_TestMain.c: 1033: break;
  8917  0113E8  D003               	goto	u3600
  8918  0113EA                     l1134:
  8919                           
  8920                           ; BSR set to: 1
  8921                           
  8922                           ; BSR set to: 1
  8923  0113EA  0100               	movlb	0	; () banked
  8924  0113EC  2B9E               	incf	_n& (0+255),f,b
  8925  0113EE  D7DA               	goto	l6425
  8926  0113F0                     u3600:
  8927                           
  8928                           ;2_April_TestMain.c: 1034: }
  8929                           ;2_April_TestMain.c: 1035: }
  8930                           ;2_April_TestMain.c: 1036: if(Check==11){
  8931                           
  8932                           ; BSR set to: 0
  8933  0113F0  0E0B               	movlw	11
  8934  0113F2  0101               	movlb	1	; () banked
  8935  0113F4  19D9               	xorwf	check_msg@Check& (0+255),w,b
  8936  0113F6  A4D8               	btfss	status,2,c
  8937  0113F8  D004               	goto	l1135
  8938                           
  8939                           ; BSR set to: 1
  8940                           ;2_April_TestMain.c: 1037: Check=0;
  8941  0113FA  0E00               	movlw	0
  8942  0113FC  6FD9               	movwf	check_msg@Check& (0+255),b
  8943                           
  8944                           ; BSR set to: 1
  8945                           ;2_April_TestMain.c: 1038: return 5;
  8946  0113FE  0E05               	movlw	5
  8947                           
  8948                           ; BSR set to: 1
  8949  011400  0012               	return	
  8950  011402                     l1135:
  8951                           
  8952                           ; BSR set to: 1
  8953                           ;2_April_TestMain.c: 1039: }
  8954                           ;2_April_TestMain.c: 1040: return 0;
  8955                           
  8956                           ; BSR set to: 1
  8957  011402  0E00               	movlw	0
  8958  011404  0012               	return	
  8959  011406                     __end_of_check_msg:
  8960                           	opt stack 0
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           postinc0	equ	0xFEE
  8969                           wreg	equ	0xFE8
  8970                           indf1	equ	0xFE7
  8971                           postdec1	equ	0xFE5
  8972                           fsr1h	equ	0xFE2
  8973                           fsr1l	equ	0xFE1
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           fsr2h	equ	0xFDA
  8977                           fsr2l	equ	0xFD9
  8978                           status	equ	0xFD8
  8979                           
  8980 ;; *************** function ___awmod *****************
  8981 ;; Defined at:
  8982 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  dividend        2    0[BANK1 ] int 
  8985 ;;  divisor         2    2[BANK1 ] int 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  sign            1    5[BANK1 ] unsigned char 
  8988 ;;  counter         1    4[BANK1 ] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  2    0[BANK1 ] int 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:        6 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    8
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_main
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text32
  9013  012122                     __ptext32:
  9014                           	opt stack 0
  9015  012122                     ___awmod:
  9016                           	opt stack 22
  9017                           
  9018                           ; BSR set to: 1
  9019                           ;incstack = 0
  9020  012122  0E00               	movlw	0
  9021  012124  0101               	movlb	1	; () banked
  9022  012126  6FDD               	movwf	___awmod@sign& (0+255),b
  9023                           
  9024                           ; BSR set to: 1
  9025  012128  AFD9               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9026  01212A  D006               	goto	l1324
  9027                           
  9028                           ; BSR set to: 1
  9029  01212C  6DD8               	negf	___awmod@dividend& (0+255),b
  9030  01212E  1FD9               	comf	(___awmod@dividend+1)& (0+255),f,b
  9031  012130  B0D8               	btfsc	status,0,c
  9032  012132  2BD9               	incf	(___awmod@dividend+1)& (0+255),f,b
  9033                           
  9034                           ; BSR set to: 1
  9035  012134  0E01               	movlw	1
  9036  012136  6FDD               	movwf	___awmod@sign& (0+255),b
  9037  012138                     l1324:
  9038                           
  9039                           ; BSR set to: 1
  9040                           
  9041                           ; BSR set to: 1
  9042  012138  AFDB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9043  01213A  D004               	goto	l1325
  9044                           
  9045                           ; BSR set to: 1
  9046  01213C  6DDA               	negf	___awmod@divisor& (0+255),b
  9047  01213E  1FDB               	comf	(___awmod@divisor+1)& (0+255),f,b
  9048  012140  B0D8               	btfsc	status,0,c
  9049  012142  2BDB               	incf	(___awmod@divisor+1)& (0+255),f,b
  9050  012144                     l1325:
  9051                           
  9052                           ; BSR set to: 1
  9053                           
  9054                           ; BSR set to: 1
  9055  012144  51DA               	movf	___awmod@divisor& (0+255),w,b
  9056  012146  11DB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9057  012148  B4D8               	btfsc	status,2,c
  9058  01214A  D018               	goto	l1332
  9059                           
  9060                           ; BSR set to: 1
  9061  01214C  0E01               	movlw	1
  9062  01214E  6FDC               	movwf	___awmod@counter& (0+255),b
  9063  012150  D004               	goto	l1327
  9064  012152                     
  9065                           ; BSR set to: 1
  9066                           
  9067                           ; BSR set to: 1
  9068  012152  90D8               	bcf	status,0,c
  9069  012154  37DA               	rlcf	___awmod@divisor& (0+255),f,b
  9070  012156  37DB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9071  012158  2BDC               	incf	___awmod@counter& (0+255),f,b
  9072  01215A                     l1327:
  9073                           
  9074                           ; BSR set to: 1
  9075                           
  9076                           ; BSR set to: 1
  9077  01215A  AFDB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9078  01215C  D7FA               	goto	l1328
  9079  01215E                     u3770:
  9080                           
  9081                           ; BSR set to: 1
  9082                           
  9083                           ; BSR set to: 1
  9084                           
  9085                           ; BSR set to: 1
  9086  01215E  51DA               	movf	___awmod@divisor& (0+255),w,b
  9087  012160  5DD8               	subwf	___awmod@dividend& (0+255),w,b
  9088  012162  51DB               	movf	(___awmod@divisor+1)& (0+255),w,b
  9089  012164  59D9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9090  012166  A0D8               	btfss	status,0,c
  9091  012168  D004               	goto	l1331
  9092                           
  9093                           ; BSR set to: 1
  9094  01216A  51DA               	movf	___awmod@divisor& (0+255),w,b
  9095  01216C  5FD8               	subwf	___awmod@dividend& (0+255),f,b
  9096  01216E  51DB               	movf	(___awmod@divisor+1)& (0+255),w,b
  9097  012170  5BD9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9098  012172                     l1331:
  9099                           
  9100                           ; BSR set to: 1
  9101                           
  9102                           ; BSR set to: 1
  9103  012172  90D8               	bcf	status,0,c
  9104  012174  33DB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9105  012176  33DA               	rrcf	___awmod@divisor& (0+255),f,b
  9106                           
  9107                           ; BSR set to: 1
  9108  012178  2FDC               	decfsz	___awmod@counter& (0+255),f,b
  9109  01217A  D7F1               	goto	u3770
  9110  01217C                     l1332:
  9111                           
  9112                           ; BSR set to: 1
  9113                           
  9114                           ; BSR set to: 1
  9115                           
  9116                           ; BSR set to: 1
  9117  01217C  51DD               	movf	___awmod@sign& (0+255),w,b
  9118  01217E  B4D8               	btfsc	status,2,c
  9119  012180  D004               	goto	l1333
  9120                           
  9121                           ; BSR set to: 1
  9122  012182  6DD8               	negf	___awmod@dividend& (0+255),b
  9123  012184  1FD9               	comf	(___awmod@dividend+1)& (0+255),f,b
  9124  012186  B0D8               	btfsc	status,0,c
  9125  012188  2BD9               	incf	(___awmod@dividend+1)& (0+255),f,b
  9126  01218A                     l1333:
  9127                           
  9128                           ; BSR set to: 1
  9129                           
  9130                           ; BSR set to: 1
  9131  01218A  C1D8  F1D8         	movff	___awmod@dividend,?___awmod
  9132  01218E  C1D9  F1D9         	movff	___awmod@dividend+1,?___awmod+1
  9133  012192  0012               	return	
  9134  012194                     __end_of___awmod:
  9135                           	opt stack 0
  9136                           tblptru	equ	0xFF8
  9137                           tblptrh	equ	0xFF7
  9138                           tblptrl	equ	0xFF6
  9139                           tablat	equ	0xFF5
  9140                           prodh	equ	0xFF4
  9141                           prodl	equ	0xFF3
  9142                           intcon	equ	0xFF2
  9143                           postinc0	equ	0xFEE
  9144                           wreg	equ	0xFE8
  9145                           indf1	equ	0xFE7
  9146                           postdec1	equ	0xFE5
  9147                           fsr1h	equ	0xFE2
  9148                           fsr1l	equ	0xFE1
  9149                           indf2	equ	0xFDF
  9150                           postinc2	equ	0xFDE
  9151                           fsr2h	equ	0xFDA
  9152                           fsr2l	equ	0xFD9
  9153                           status	equ	0xFD8
  9154                           
  9155 ;; *************** function ___awdiv *****************
  9156 ;; Defined at:
  9157 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  dividend        2    0[BANK1 ] int 
  9160 ;;  divisor         2    2[BANK1 ] int 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;  quotient        2    6[BANK1 ] int 
  9163 ;;  sign            1    5[BANK1 ] unsigned char 
  9164 ;;  counter         1    4[BANK1 ] unsigned char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  2    0[BANK1 ] int 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9174 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;Total ram usage:        8 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    8
  9181 ;; This function calls:
  9182 ;;		Nothing
  9183 ;; This function is called by:
  9184 ;;		_main
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text33
  9189  012022                     __ptext33:
  9190                           	opt stack 0
  9191  012022                     ___awdiv:
  9192                           	opt stack 22
  9193                           
  9194                           ; BSR set to: 1
  9195                           ;incstack = 0
  9196  012022  0E00               	movlw	0
  9197  012024  0101               	movlb	1	; () banked
  9198  012026  6FDD               	movwf	___awdiv@sign& (0+255),b
  9199                           
  9200                           ; BSR set to: 1
  9201  012028  AFDB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9202  01202A  D006               	goto	l1311
  9203                           
  9204                           ; BSR set to: 1
  9205  01202C  6DDA               	negf	___awdiv@divisor& (0+255),b
  9206  01202E  1FDB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9207  012030  B0D8               	btfsc	status,0,c
  9208  012032  2BDB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9209                           
  9210                           ; BSR set to: 1
  9211  012034  0E01               	movlw	1
  9212  012036  6FDD               	movwf	___awdiv@sign& (0+255),b
  9213  012038                     l1311:
  9214                           
  9215                           ; BSR set to: 1
  9216                           
  9217                           ; BSR set to: 1
  9218  012038  AFD9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9219  01203A  D006               	goto	l1312
  9220                           
  9221                           ; BSR set to: 1
  9222  01203C  6DD8               	negf	___awdiv@dividend& (0+255),b
  9223  01203E  1FD9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9224  012040  B0D8               	btfsc	status,0,c
  9225  012042  2BD9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9226                           
  9227                           ; BSR set to: 1
  9228  012044  0E01               	movlw	1
  9229  012046  1BDD               	xorwf	___awdiv@sign& (0+255),f,b
  9230  012048                     l1312:
  9231                           
  9232                           ; BSR set to: 1
  9233                           
  9234                           ; BSR set to: 1
  9235  012048  0E00               	movlw	0
  9236  01204A  6FDF               	movwf	(___awdiv@quotient+1)& (0+255),b
  9237  01204C  0E00               	movlw	0
  9238  01204E  6FDE               	movwf	___awdiv@quotient& (0+255),b
  9239                           
  9240                           ; BSR set to: 1
  9241  012050  51DA               	movf	___awdiv@divisor& (0+255),w,b
  9242  012052  11DB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9243  012054  B4D8               	btfsc	status,2,c
  9244  012056  D01C               	goto	l1319
  9245                           
  9246                           ; BSR set to: 1
  9247  012058  0E01               	movlw	1
  9248  01205A  6FDC               	movwf	___awdiv@counter& (0+255),b
  9249  01205C  D004               	goto	l1314
  9250  01205E                     
  9251                           ; BSR set to: 1
  9252                           
  9253                           ; BSR set to: 1
  9254  01205E  90D8               	bcf	status,0,c
  9255  012060  37DA               	rlcf	___awdiv@divisor& (0+255),f,b
  9256  012062  37DB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9257  012064  2BDC               	incf	___awdiv@counter& (0+255),f,b
  9258  012066                     l1314:
  9259                           
  9260                           ; BSR set to: 1
  9261                           
  9262                           ; BSR set to: 1
  9263  012066  AFDB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9264  012068  D7FA               	goto	l1315
  9265  01206A                     u3710:
  9266                           
  9267                           ; BSR set to: 1
  9268                           
  9269                           ; BSR set to: 1
  9270                           
  9271                           ; BSR set to: 1
  9272  01206A  90D8               	bcf	status,0,c
  9273  01206C  37DE               	rlcf	___awdiv@quotient& (0+255),f,b
  9274  01206E  37DF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9275                           
  9276                           ; BSR set to: 1
  9277  012070  51DA               	movf	___awdiv@divisor& (0+255),w,b
  9278  012072  5DD8               	subwf	___awdiv@dividend& (0+255),w,b
  9279  012074  51DB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9280  012076  59D9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9281  012078  A0D8               	btfss	status,0,c
  9282  01207A  D005               	goto	l1318
  9283                           
  9284                           ; BSR set to: 1
  9285  01207C  51DA               	movf	___awdiv@divisor& (0+255),w,b
  9286  01207E  5FD8               	subwf	___awdiv@dividend& (0+255),f,b
  9287  012080  51DB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9288  012082  5BD9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9289                           
  9290                           ; BSR set to: 1
  9291  012084  81DE               	bsf	___awdiv@quotient& (0+255),0,b
  9292  012086                     l1318:
  9293                           
  9294                           ; BSR set to: 1
  9295                           
  9296                           ; BSR set to: 1
  9297  012086  90D8               	bcf	status,0,c
  9298  012088  33DB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9299  01208A  33DA               	rrcf	___awdiv@divisor& (0+255),f,b
  9300                           
  9301                           ; BSR set to: 1
  9302  01208C  2FDC               	decfsz	___awdiv@counter& (0+255),f,b
  9303  01208E  D7ED               	goto	u3710
  9304  012090                     l1319:
  9305                           
  9306                           ; BSR set to: 1
  9307                           
  9308                           ; BSR set to: 1
  9309                           
  9310                           ; BSR set to: 1
  9311  012090  51DD               	movf	___awdiv@sign& (0+255),w,b
  9312  012092  B4D8               	btfsc	status,2,c
  9313  012094  D004               	goto	l1320
  9314                           
  9315                           ; BSR set to: 1
  9316  012096  6DDE               	negf	___awdiv@quotient& (0+255),b
  9317  012098  1FDF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9318  01209A  B0D8               	btfsc	status,0,c
  9319  01209C  2BDF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9320  01209E                     l1320:
  9321                           
  9322                           ; BSR set to: 1
  9323                           
  9324                           ; BSR set to: 1
  9325  01209E  C1DE  F1D8         	movff	___awdiv@quotient,?___awdiv
  9326  0120A2  C1DF  F1D9         	movff	___awdiv@quotient+1,?___awdiv+1
  9327  0120A6  0012               	return	
  9328  0120A8                     __end_of___awdiv:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           intcon	equ	0xFF2
  9337                           postinc0	equ	0xFEE
  9338                           wreg	equ	0xFE8
  9339                           indf1	equ	0xFE7
  9340                           postdec1	equ	0xFE5
  9341                           fsr1h	equ	0xFE2
  9342                           fsr1l	equ	0xFE1
  9343                           indf2	equ	0xFDF
  9344                           postinc2	equ	0xFDE
  9345                           fsr2h	equ	0xFDA
  9346                           fsr2l	equ	0xFD9
  9347                           status	equ	0xFD8
  9348                           
  9349 ;; *************** function _Write_b_eep *****************
  9350 ;; Defined at:
  9351 ;;		line 530 in file "zigbee.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  badd            2    0[BANK1 ] unsigned int 
  9354 ;;  data            1    2[BANK1 ] unsigned char 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  GIE_BIT_VAL     1    3[BANK1 ] unsigned char 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		wreg, status,2
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9366 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;Total ram usage:        4 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:    8
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		_main
  9377 ;;		_Store_ID
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text34
  9382  0126D8                     __ptext34:
  9383                           	opt stack 0
  9384  0126D8                     _Write_b_eep:
  9385                           	opt stack 22
  9386                           
  9387                           ;zigbee.c: 531: char GIE_BIT_VAL = 0;
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;incstack = 0
  9391  0126D8  0E00               	movlw	0
  9392  0126DA  0101               	movlb	1	; () banked
  9393  0126DC  6FDB               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  9394                           
  9395                           ; BSR set to: 1
  9396                           ;zigbee.c: 532: EEADR = (badd & 0x0FF);
  9397  0126DE  C1D8  FF62         	movff	Write_b_eep@badd,3938	;volatile
  9398                           
  9399                           ; BSR set to: 1
  9400                           ;zigbee.c: 533: EEDATA = data;
  9401  0126E2  C1DA  FF61         	movff	Write_b_eep@data,3937	;volatile
  9402                           
  9403                           ; BSR set to: 1
  9404                           ;zigbee.c: 534: EECON1bits.EEPGD = 0;
  9405  0126E6  9E7F               	bcf	3967,7,c	;volsfr
  9406                           
  9407                           ; BSR set to: 1
  9408                           ;zigbee.c: 535: EECON1bits.CFGS = 0;
  9409  0126E8  9C7F               	bcf	3967,6,c	;volsfr
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;zigbee.c: 536: EECON1bits.WREN = 1;
  9413  0126EA  847F               	bsf	3967,2,c	;volsfr
  9414                           
  9415                           ; BSR set to: 1
  9416                           ;zigbee.c: 537: GIE_BIT_VAL = INTCONbits.GIE;
  9417  0126EC  0E00               	movlw	0
  9418  0126EE  BEF2               	btfsc	intcon,7,c	;volatile
  9419  0126F0  0E01               	movlw	1
  9420  0126F2  6FDB               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  9421                           
  9422                           ; BSR set to: 1
  9423                           ;zigbee.c: 538: INTCONbits.GIE = 0;
  9424  0126F4  9EF2               	bcf	intcon,7,c	;volatile
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;zigbee.c: 539: EECON2 = 0x55;
  9428  0126F6  0E55               	movlw	85
  9429  0126F8  6E7E               	movwf	3966,c	;volsfr
  9430                           
  9431                           ; BSR set to: 1
  9432                           ;zigbee.c: 540: EECON2 = 0xAA;
  9433  0126FA  0EAA               	movlw	170
  9434  0126FC  6E7E               	movwf	3966,c	;volsfr
  9435                           
  9436                           ; BSR set to: 1
  9437                           ;zigbee.c: 541: EECON1bits.WR = 1;
  9438  0126FE  827F               	bsf	3967,1,c	;volsfr
  9439  012700                     
  9440                           ; BSR set to: 1
  9441  012700  B27F               	btfsc	3967,1,c	;volsfr
  9442  012702  D7FE               	goto	l548
  9443                           
  9444                           ;zigbee.c: 543: INTCONbits.GIE = GIE_BIT_VAL;
  9445  012704  0101               	movlb	1	; () banked
  9446  012706  B1DB               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  9447  012708  D002               	bra	u3395
  9448  01270A  9EF2               	bcf	intcon,7,c	;volatile
  9449  01270C  D001               	bra	u3396
  9450  01270E                     u3395:
  9451  01270E  8EF2               	bsf	intcon,7,c	;volatile
  9452  012710                     u3396:
  9453                           
  9454                           ;zigbee.c: 544: EECON1bits.WREN = 0;
  9455  012710  947F               	bcf	3967,2,c	;volsfr
  9456  012712  0012               	return		;funcret
  9457  012714                     __end_of_Write_b_eep:
  9458                           	opt stack 0
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           intcon	equ	0xFF2
  9466                           postinc0	equ	0xFEE
  9467                           wreg	equ	0xFE8
  9468                           indf1	equ	0xFE7
  9469                           postdec1	equ	0xFE5
  9470                           fsr1h	equ	0xFE2
  9471                           fsr1l	equ	0xFE1
  9472                           indf2	equ	0xFDF
  9473                           postinc2	equ	0xFDE
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _SerInit *****************
  9479 ;; Defined at:
  9480 ;;		line 675 in file "2_April_TestMain.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;		None
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;		None
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;Total ram usage:        0 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    8
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_main
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text35
  9509  0122D4                     __ptext35:
  9510                           	opt stack 0
  9511  0122D4                     _SerInit:
  9512                           	opt stack 22
  9513                           
  9514                           ;2_April_TestMain.c: 677: SPBRG=20;
  9515                           
  9516                           ;incstack = 0
  9517  0122D4  0E14               	movlw	20
  9518  0122D6  6EAF               	movwf	4015,c	;volatile
  9519                           
  9520                           ;2_April_TestMain.c: 678: TXSTAbits.BRGH=1;
  9521  0122D8  84AC               	bsf	4012,2,c	;volatile
  9522                           
  9523                           ;2_April_TestMain.c: 679: __nop();__nop();__nop();
  9524  0122DA  F000               	nop	
  9525  0122DC  F000               	nop	
  9526  0122DE  F000               	nop	
  9527                           
  9528                           ;2_April_TestMain.c: 680: TXSTAbits.SYNC=0;
  9529  0122E0  98AC               	bcf	4012,4,c	;volatile
  9530                           
  9531                           ;2_April_TestMain.c: 681: __nop();__nop();__nop();
  9532  0122E2  F000               	nop	
  9533  0122E4  F000               	nop	
  9534  0122E6  F000               	nop	
  9535                           
  9536                           ;2_April_TestMain.c: 682: TXSTAbits.TX9=0;
  9537  0122E8  9CAC               	bcf	4012,6,c	;volatile
  9538                           
  9539                           ;2_April_TestMain.c: 683: __nop();__nop();__nop();
  9540  0122EA  F000               	nop	
  9541  0122EC  F000               	nop	
  9542  0122EE  F000               	nop	
  9543                           
  9544                           ;2_April_TestMain.c: 684: RCSTAbits.SPEN=1;
  9545  0122F0  8EAB               	bsf	4011,7,c	;volatile
  9546                           
  9547                           ;2_April_TestMain.c: 685: __nop();__nop();__nop();
  9548  0122F2  F000               	nop	
  9549  0122F4  F000               	nop	
  9550  0122F6  F000               	nop	
  9551                           
  9552                           ;2_April_TestMain.c: 686: RCSTAbits.CREN=1;
  9553  0122F8  88AB               	bsf	4011,4,c	;volatile
  9554                           
  9555                           ;2_April_TestMain.c: 687: __nop();__nop();__nop();
  9556  0122FA  F000               	nop	
  9557  0122FC  F000               	nop	
  9558  0122FE  F000               	nop	
  9559                           
  9560                           ;2_April_TestMain.c: 688: TXSTAbits.TXEN=1;
  9561  012300  8AAC               	bsf	4012,5,c	;volatile
  9562                           
  9563                           ;2_April_TestMain.c: 689: __nop();__nop();__nop();
  9564  012302  F000               	nop	
  9565  012304  F000               	nop	
  9566  012306  F000               	nop	
  9567                           
  9568                           ;2_April_TestMain.c: 690: PIE1bits.TXIE=0;
  9569  012308  989D               	bcf	3997,4,c	;volatile
  9570                           
  9571                           ;2_April_TestMain.c: 691: __nop();__nop();__nop();
  9572  01230A  F000               	nop	
  9573  01230C  F000               	nop	
  9574  01230E  F000               	nop	
  9575                           
  9576                           ;2_April_TestMain.c: 692: PIE1bits.RCIE=1;
  9577  012310  8A9D               	bsf	3997,5,c	;volatile
  9578                           
  9579                           ;2_April_TestMain.c: 693: __nop();__nop();__nop();
  9580  012312  F000               	nop	
  9581  012314  F000               	nop	
  9582  012316  F000               	nop	
  9583                           
  9584                           ;2_April_TestMain.c: 694: INTCONbits.GIE=1;
  9585  012318  8EF2               	bsf	intcon,7,c	;volatile
  9586                           
  9587                           ;2_April_TestMain.c: 695: __nop();__nop();__nop();
  9588  01231A  F000               	nop	
  9589  01231C  F000               	nop	
  9590  01231E  F000               	nop	
  9591                           
  9592                           ;2_April_TestMain.c: 696: INTCONbits.PEIE=1;
  9593  012320  8CF2               	bsf	intcon,6,c	;volatile
  9594                           
  9595                           ;2_April_TestMain.c: 697: __nop();__nop();__nop();
  9596  012322  F000               	nop	
  9597  012324  F000               	nop	
  9598  012326  F000               	nop	
  9599                           
  9600                           ;2_April_TestMain.c: 698: TRISCbits.TRISC7=1;
  9601  012328  8E94               	bsf	3988,7,c	;volatile
  9602                           
  9603                           ;2_April_TestMain.c: 699: __nop();__nop();__nop();
  9604  01232A  F000               	nop	
  9605  01232C  F000               	nop	
  9606  01232E  F000               	nop	
  9607                           
  9608                           ;2_April_TestMain.c: 700: TRISCbits.TRISC6=0;
  9609  012330  9C94               	bcf	3988,6,c	;volatile
  9610                           
  9611                           ;2_April_TestMain.c: 701: __nop();__nop();__nop();
  9612  012332  F000               	nop	
  9613  012334  F000               	nop	
  9614  012336  F000               	nop	
  9615  012338  0012               	return		;funcret
  9616  01233A                     __end_of_SerInit:
  9617                           	opt stack 0
  9618                           tblptru	equ	0xFF8
  9619                           tblptrh	equ	0xFF7
  9620                           tblptrl	equ	0xFF6
  9621                           tablat	equ	0xFF5
  9622                           prodh	equ	0xFF4
  9623                           prodl	equ	0xFF3
  9624                           intcon	equ	0xFF2
  9625                           postinc0	equ	0xFEE
  9626                           wreg	equ	0xFE8
  9627                           indf1	equ	0xFE7
  9628                           postdec1	equ	0xFE5
  9629                           fsr1h	equ	0xFE2
  9630                           fsr1l	equ	0xFE1
  9631                           indf2	equ	0xFDF
  9632                           postinc2	equ	0xFDE
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _SYSTEM_Initialize *****************
  9638 ;; Defined at:
  9639 ;;		line 128 in file "mcc_generated_files/mcc.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;Total ram usage:        0 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:   10
  9660 ;; This function calls:
  9661 ;;		_EXT_INT_Initialize
  9662 ;;		_INTERRUPT_Initialize
  9663 ;;		_OSCILLATOR_Initialize
  9664 ;;		_PIN_MANAGER_Initialize
  9665 ;; This function is called by:
  9666 ;;		_main
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text36
  9671  012AD8                     __ptext36:
  9672                           	opt stack 0
  9673  012AD8                     _SYSTEM_Initialize:
  9674                           	opt stack 20
  9675                           
  9676                           ;mcc.c: 130: INTERRUPT_Initialize();
  9677                           
  9678                           ;incstack = 0
  9679  012AD8  ECA4  F095         	call	_INTERRUPT_Initialize	;wreg free
  9680                           
  9681                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  9682  012ADC  EC68  F092         	call	_PIN_MANAGER_Initialize	;wreg free
  9683                           
  9684                           ;mcc.c: 132: OSCILLATOR_Initialize();
  9685  012AE0  EC47  F095         	call	_OSCILLATOR_Initialize	;wreg free
  9686                           
  9687                           ;mcc.c: 133: EXT_INT_Initialize();
  9688  012AE4  EC1A  F095         	call	_EXT_INT_Initialize	;wreg free
  9689  012AE8  0012               	return		;funcret
  9690  012AEA                     __end_of_SYSTEM_Initialize:
  9691                           	opt stack 0
  9692                           tblptru	equ	0xFF8
  9693                           tblptrh	equ	0xFF7
  9694                           tblptrl	equ	0xFF6
  9695                           tablat	equ	0xFF5
  9696                           prodh	equ	0xFF4
  9697                           prodl	equ	0xFF3
  9698                           intcon	equ	0xFF2
  9699                           postinc0	equ	0xFEE
  9700                           wreg	equ	0xFE8
  9701                           indf1	equ	0xFE7
  9702                           postdec1	equ	0xFE5
  9703                           fsr1h	equ	0xFE2
  9704                           fsr1l	equ	0xFE1
  9705                           indf2	equ	0xFDF
  9706                           postinc2	equ	0xFDE
  9707                           fsr2h	equ	0xFDA
  9708                           fsr2l	equ	0xFD9
  9709                           status	equ	0xFD8
  9710                           
  9711 ;; *************** function _PIN_MANAGER_Initialize *****************
  9712 ;; Defined at:
  9713 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;		None
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;		None
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;Total ram usage:        0 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    8
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_SYSTEM_Initialize
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text37
  9742  0124D0                     __ptext37:
  9743                           	opt stack 0
  9744  0124D0                     _PIN_MANAGER_Initialize:
  9745                           	opt stack 21
  9746                           
  9747                           ;pin_manager.c: 57: LATE = 0x00;
  9748                           
  9749                           ;incstack = 0
  9750  0124D0  0E00               	movlw	0
  9751  0124D2  6E8D               	movwf	3981,c	;volatile
  9752                           
  9753                           ;pin_manager.c: 58: LATD = 0x00;
  9754  0124D4  0E00               	movlw	0
  9755  0124D6  6E8C               	movwf	3980,c	;volatile
  9756                           
  9757                           ;pin_manager.c: 59: LATA = 0x0F;
  9758  0124D8  0E0F               	movlw	15
  9759  0124DA  6E89               	movwf	3977,c	;volatile
  9760                           
  9761                           ;pin_manager.c: 60: LATF = 0x10;
  9762  0124DC  0E10               	movlw	16
  9763  0124DE  6E8E               	movwf	3982,c	;volatile
  9764                           
  9765                           ;pin_manager.c: 61: LATB = 0x00;
  9766  0124E0  0E00               	movlw	0
  9767  0124E2  6E8A               	movwf	3978,c	;volatile
  9768                           
  9769                           ;pin_manager.c: 62: LATG = 0x00;
  9770  0124E4  0E00               	movlw	0
  9771  0124E6  6E8F               	movwf	3983,c	;volatile
  9772                           
  9773                           ;pin_manager.c: 63: LATC = 0x03;
  9774  0124E8  0E03               	movlw	3
  9775  0124EA  6E8B               	movwf	3979,c	;volatile
  9776                           
  9777                           ;pin_manager.c: 68: TRISE = 0x00;
  9778  0124EC  0E00               	movlw	0
  9779  0124EE  6E96               	movwf	3990,c	;volatile
  9780                           
  9781                           ;pin_manager.c: 69: TRISF = 0xE0;
  9782  0124F0  0EE0               	movlw	224
  9783  0124F2  6E97               	movwf	3991,c	;volatile
  9784                           
  9785                           ;pin_manager.c: 70: TRISA = 0xC0;
  9786  0124F4  0EC0               	movlw	192
  9787  0124F6  6E92               	movwf	3986,c	;volatile
  9788                           
  9789                           ;pin_manager.c: 71: TRISG = 0x1F;
  9790  0124F8  0E1F               	movlw	31
  9791  0124FA  6E98               	movwf	3992,c	;volatile
  9792                           
  9793                           ;pin_manager.c: 72: TRISB = 0xFF;
  9794  0124FC  6893               	setf	3987,c	;volatile
  9795                           
  9796                           ;pin_manager.c: 73: TRISC = 0xFC;
  9797  0124FE  0EFC               	movlw	252
  9798  012500  6E94               	movwf	3988,c	;volatile
  9799                           
  9800                           ;pin_manager.c: 74: TRISD = 0xFF;
  9801  012502  6895               	setf	3989,c	;volatile
  9802                           
  9803                           ;pin_manager.c: 79: ANCON0 = 0x20;
  9804  012504  0E20               	movlw	32
  9805  012506  010F               	movlb	15	; () banked
  9806  012508  6F25               	movwf	37,b	;volatile
  9807                           
  9808                           ;pin_manager.c: 80: ANCON1 = 0x0C;
  9809  01250A  0E0C               	movlw	12
  9810  01250C  6F24               	movwf	36,b	;volatile
  9811                           
  9812                           ;pin_manager.c: 81: ANCON2 = 0x0F;
  9813  01250E  0E0F               	movlw	15
  9814  012510  6F23               	movwf	35,b	;volatile
  9815                           
  9816                           ; BSR set to: 15
  9817  012512  0012               	return		;funcret
  9818  012514                     __end_of_PIN_MANAGER_Initialize:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           postinc0	equ	0xFEE
  9828                           wreg	equ	0xFE8
  9829                           indf1	equ	0xFE7
  9830                           postdec1	equ	0xFE5
  9831                           fsr1h	equ	0xFE2
  9832                           fsr1l	equ	0xFE1
  9833                           indf2	equ	0xFDF
  9834                           postinc2	equ	0xFDE
  9835                           fsr2h	equ	0xFDA
  9836                           fsr2l	equ	0xFD9
  9837                           status	equ	0xFD8
  9838                           
  9839 ;; *************** function _OSCILLATOR_Initialize *****************
  9840 ;; Defined at:
  9841 ;;		line 137 in file "mcc_generated_files/mcc.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;		None
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;Total ram usage:        0 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    8
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_SYSTEM_Initialize
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text38
  9870  012A8E                     __ptext38:
  9871                           	opt stack 0
  9872  012A8E                     _OSCILLATOR_Initialize:
  9873                           	opt stack 21
  9874                           
  9875                           ;mcc.c: 140: OSCCON = 0x60;
  9876                           
  9877                           ; BSR set to: 15
  9878                           ;incstack = 0
  9879  012A8E  0E60               	movlw	96
  9880  012A90  6ED3               	movwf	4051,c	;volatile
  9881                           
  9882                           ;mcc.c: 142: OSCCON2 = 0x00;
  9883  012A92  0E00               	movlw	0
  9884  012A94  6E64               	movwf	3940,c	;volatile
  9885                           
  9886                           ;mcc.c: 144: OSCTUNE = 0x00;
  9887  012A96  0E00               	movlw	0
  9888  012A98  6E9B               	movwf	3995,c	;volatile
  9889                           
  9890                           ;mcc.c: 146: REFOCON = 0x00;
  9891  012A9A  0E00               	movlw	0
  9892  012A9C  010F               	movlb	15	; () banked
  9893  012A9E  6F2A               	movwf	42,b	;volatile
  9894                           
  9895                           ; BSR set to: 15
  9896  012AA0  0012               	return		;funcret
  9897  012AA2                     __end_of_OSCILLATOR_Initialize:
  9898                           	opt stack 0
  9899                           tblptru	equ	0xFF8
  9900                           tblptrh	equ	0xFF7
  9901                           tblptrl	equ	0xFF6
  9902                           tablat	equ	0xFF5
  9903                           prodh	equ	0xFF4
  9904                           prodl	equ	0xFF3
  9905                           intcon	equ	0xFF2
  9906                           postinc0	equ	0xFEE
  9907                           wreg	equ	0xFE8
  9908                           indf1	equ	0xFE7
  9909                           postdec1	equ	0xFE5
  9910                           fsr1h	equ	0xFE2
  9911                           fsr1l	equ	0xFE1
  9912                           indf2	equ	0xFDF
  9913                           postinc2	equ	0xFDE
  9914                           fsr2h	equ	0xFDA
  9915                           fsr2l	equ	0xFD9
  9916                           status	equ	0xFD8
  9917                           
  9918 ;; *************** function _INTERRUPT_Initialize *****************
  9919 ;; Defined at:
  9920 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;		None
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		None
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;Total ram usage:        0 bytes
  9939 ;; Hardware stack levels used:    1
  9940 ;; Hardware stack levels required when called:    8
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_SYSTEM_Initialize
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           	psect	text39
  9949  012B48                     __ptext39:
  9950                           	opt stack 0
  9951  012B48                     _INTERRUPT_Initialize:
  9952                           	opt stack 21
  9953                           
  9954                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  9955                           
  9956                           ; BSR set to: 15
  9957                           ;incstack = 0
  9958  012B48  8ED0               	bsf	4048,7,c	;volatile
  9959                           
  9960                           ;interrupt_manager.c: 62: INTCON2bits.TMR0IP = 0;
  9961  012B4A  94F1               	bcf	intcon2,2,c	;volatile
  9962  012B4C  0012               	return		;funcret
  9963  012B4E                     __end_of_INTERRUPT_Initialize:
  9964                           	opt stack 0
  9965                           tblptru	equ	0xFF8
  9966                           tblptrh	equ	0xFF7
  9967                           tblptrl	equ	0xFF6
  9968                           tablat	equ	0xFF5
  9969                           prodh	equ	0xFF4
  9970                           prodl	equ	0xFF3
  9971                           intcon	equ	0xFF2
  9972                           intcon2	equ	0xFF1
  9973                           postinc0	equ	0xFEE
  9974                           wreg	equ	0xFE8
  9975                           indf1	equ	0xFE7
  9976                           postdec1	equ	0xFE5
  9977                           fsr1h	equ	0xFE2
  9978                           fsr1l	equ	0xFE1
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           fsr2h	equ	0xFDA
  9982                           fsr2l	equ	0xFD9
  9983                           status	equ	0xFD8
  9984                           
  9985 ;; *************** function _EXT_INT_Initialize *****************
  9986 ;; Defined at:
  9987 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    9
 10008 ;; This function calls:
 10009 ;;		_INT0_SetInterruptHandler
 10010 ;; This function is called by:
 10011 ;;		_SYSTEM_Initialize
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text40
 10016  012A34                     __ptext40:
 10017                           	opt stack 0
 10018  012A34                     _EXT_INT_Initialize:
 10019                           	opt stack 20
 10020                           
 10021                           ;ext_int.c: 64: (INTCONbits.INT0IF = 0);
 10022                           
 10023                           ;incstack = 0
 10024  012A34  92F2               	bcf	intcon,1,c	;volatile
 10025                           
 10026                           ;ext_int.c: 65: (INTCON2bits.INTEDG0 = 0);
 10027  012A36  9CF1               	bcf	intcon2,6,c	;volatile
 10028                           
 10029                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 10030  012A38  0E00               	movlw	0
 10031  012A3A  0101               	movlb	1	; () banked
 10032  012A3C  6FD8               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 10033  012A3E  0E00               	movlw	0
 10034  012A40  6FD9               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10035  012A42  0E00               	movlw	0
 10036  012A44  6FDA               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10037  012A46  EC95  F095         	call	_INT0_SetInterruptHandler	;wreg free
 10038                           
 10039                           ;ext_int.c: 68: (INTCONbits.INT0IE = 1);
 10040  012A4A  88F2               	bsf	intcon,4,c	;volatile
 10041  012A4C  0012               	return		;funcret
 10042  012A4E                     __end_of_EXT_INT_Initialize:
 10043                           	opt stack 0
 10044                           tblptru	equ	0xFF8
 10045                           tblptrh	equ	0xFF7
 10046                           tblptrl	equ	0xFF6
 10047                           tablat	equ	0xFF5
 10048                           prodh	equ	0xFF4
 10049                           prodl	equ	0xFF3
 10050                           intcon	equ	0xFF2
 10051                           intcon2	equ	0xFF1
 10052                           postinc0	equ	0xFEE
 10053                           wreg	equ	0xFE8
 10054                           indf1	equ	0xFE7
 10055                           postdec1	equ	0xFE5
 10056                           fsr1h	equ	0xFE2
 10057                           fsr1l	equ	0xFE1
 10058                           indf2	equ	0xFDF
 10059                           postinc2	equ	0xFDE
 10060                           fsr2h	equ	0xFDA
 10061                           fsr2l	equ	0xFD9
 10062                           status	equ	0xFD8
 10063                           
 10064 ;; *************** function _INT0_SetInterruptHandler *****************
 10065 ;; Defined at:
 10066 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
 10069 ;;		 -> INT0_DefaultInterruptHandler(1), 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2, status,0
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10081 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;Total ram usage:        3 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    8
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_EXT_INT_Initialize
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text41
 10096  012B2A                     __ptext41:
 10097                           	opt stack 0
 10098  012B2A                     _INT0_SetInterruptHandler:
 10099                           	opt stack 20
 10100                           
 10101                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 10102                           
 10103                           ;incstack = 0
 10104  012B2A  C1D8  F088         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 10105  012B2E  C1D9  F089         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 10106  012B32  C1DA  F08A         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 10107  012B36  0012               	return		;funcret
 10108  012B38                     __end_of_INT0_SetInterruptHandler:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           intcon2	equ	0xFF1
 10118                           postinc0	equ	0xFEE
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postdec1	equ	0xFE5
 10122                           fsr1h	equ	0xFE2
 10123                           fsr1l	equ	0xFE1
 10124                           indf2	equ	0xFDF
 10125                           postinc2	equ	0xFDE
 10126                           fsr2h	equ	0xFDA
 10127                           fsr2l	equ	0xFD9
 10128                           status	equ	0xFD8
 10129                           
 10130 ;; *************** function _Read_b_eep *****************
 10131 ;; Defined at:
 10132 ;;		line 547 in file "zigbee.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;  badd            2    0[BANK1 ] unsigned int 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;		None
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      unsigned char 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10150 ;;Total ram usage:        2 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; Hardware stack levels required when called:    8
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_main
 10157 ;;		_Store_ID
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text42
 10162  012AEA                     __ptext42:
 10163                           	opt stack 0
 10164  012AEA                     _Read_b_eep:
 10165                           	opt stack 22
 10166                           
 10167                           ;zigbee.c: 549: EEADR = (badd & 0x0FF);
 10168                           
 10169                           ;incstack = 0
 10170  012AEA  C1D8  FF62         	movff	Read_b_eep@badd,3938	;volatile
 10171                           
 10172                           ;zigbee.c: 550: EECON1bits.CFGS = 0;
 10173  012AEE  9C7F               	bcf	3967,6,c	;volsfr
 10174                           
 10175                           ;zigbee.c: 551: EECON1bits.EEPGD = 0;
 10176  012AF0  9E7F               	bcf	3967,7,c	;volsfr
 10177                           
 10178                           ;zigbee.c: 552: EECON1bits.RD = 1;
 10179  012AF2  807F               	bsf	3967,0,c	;volsfr
 10180                           
 10181                           ;zigbee.c: 553: __nop();
 10182  012AF4  F000               	nop	
 10183                           
 10184                           ;zigbee.c: 554: __nop();
 10185  012AF6  F000               	nop	
 10186                           
 10187                           ;zigbee.c: 555: return (EEDATA);
 10188  012AF8  5061               	movf	3937,w,c	;volatile
 10189  012AFA  0012               	return	
 10190  012AFC                     __end_of_Read_b_eep:
 10191                           	opt stack 0
 10192                           tblptru	equ	0xFF8
 10193                           tblptrh	equ	0xFF7
 10194                           tblptrl	equ	0xFF6
 10195                           tablat	equ	0xFF5
 10196                           prodh	equ	0xFF4
 10197                           prodl	equ	0xFF3
 10198                           intcon	equ	0xFF2
 10199                           intcon2	equ	0xFF1
 10200                           postinc0	equ	0xFEE
 10201                           wreg	equ	0xFE8
 10202                           indf1	equ	0xFE7
 10203                           postdec1	equ	0xFE5
 10204                           fsr1h	equ	0xFE2
 10205                           fsr1l	equ	0xFE1
 10206                           indf2	equ	0xFDF
 10207                           postinc2	equ	0xFDE
 10208                           fsr2h	equ	0xFDA
 10209                           fsr2l	equ	0xFD9
 10210                           status	equ	0xFD8
 10211                           
 10212 ;; *************** function _Module_Init *****************
 10213 ;; Defined at:
 10214 ;;		line 734 in file "2_April_TestMain.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:   12
 10235 ;; This function calls:
 10236 ;;		_ClearRxBytes
 10237 ;;		_DeleteAllSms
 10238 ;;		_Sprint
 10239 ;;		_SprintRom
 10240 ;;		_lcd_clear
 10241 ;; This function is called by:
 10242 ;;		_main
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text43
 10247  012204                     __ptext43:
 10248                           	opt stack 0
 10249  012204                     _Module_Init:
 10250                           	opt stack 18
 10251                           
 10252                           ;2_April_TestMain.c: 756: ClearRxBytes();
 10253                           
 10254                           ;incstack = 0
 10255  012204  EC05  F094         	call	_ClearRxBytes	;wreg free
 10256                           
 10257                           ;2_April_TestMain.c: 757: WaitForReceive = 1;
 10258  012208  0E01               	movlw	1
 10259  01220A  0100               	movlb	0	; () banked
 10260  01220C  6FA5               	movwf	_WaitForReceive& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;2_April_TestMain.c: 758: id=0;
 10264  01220E  0E00               	movlw	0
 10265  012210  6E03               	movwf	_id,c
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;2_April_TestMain.c: 759: RXcounter = 5;
 10269  012212  0E05               	movlw	5
 10270  012214  6E02               	movwf	_RXcounter,c
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;2_April_TestMain.c: 760: SprintRom(&ATCheck,3);
 10274  012216  0EE4               	movlw	low _ATCheck
 10275  012218  0101               	movlb	1	; () banked
 10276  01221A  6FDE               	movwf	SprintRom@datas& (0+255),b
 10277  01221C  0EFD               	movlw	high _ATCheck
 10278  01221E  6FDF               	movwf	(SprintRom@datas+1)& (0+255),b
 10279  012220  0E03               	movlw	3
 10280  012222  6FE0               	movwf	SprintRom@length& (0+255),b
 10281  012224  EC9D  F091         	call	_SprintRom	;wreg free
 10282  012228  0100               	movlb	0	; () banked
 10283  01222A  51A5               	movf	_WaitForReceive& (0+255),w,b
 10284  01222C  A4D8               	btfss	status,2,c
 10285  01222E  D7FC               	goto	l1034
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;2_April_TestMain.c: 762: ClearRxBytes();
 10289                           
 10290                           ; BSR set to: 0
 10291  012230  EC05  F094         	call	_ClearRxBytes	;wreg free
 10292                           
 10293                           ;2_April_TestMain.c: 763: WaitForReceive = 1;
 10294  012234  0E01               	movlw	1
 10295  012236  0100               	movlb	0	; () banked
 10296  012238  6FA5               	movwf	_WaitForReceive& (0+255),b
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;2_April_TestMain.c: 764: id=0;
 10300  01223A  0E00               	movlw	0
 10301  01223C  6E03               	movwf	_id,c
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;2_April_TestMain.c: 765: RXcounter = 5;
 10305  01223E  0E05               	movlw	5
 10306  012240  6E02               	movwf	_RXcounter,c
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;2_April_TestMain.c: 766: Sprint(&SMS_format,10);
 10310  012242  0ECB               	movlw	low _SMS_format
 10311  012244  0101               	movlb	1	; () banked
 10312  012246  6FDE               	movwf	Sprint@datas& (0+255),b
 10313  012248  0E00               	movlw	high _SMS_format
 10314  01224A  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 10315  01224C  0E0A               	movlw	10
 10316  01224E  6FE0               	movwf	Sprint@length& (0+255),b
 10317  012250  EC36  F091         	call	_Sprint	;wreg free
 10318  012254  0100               	movlb	0	; () banked
 10319  012256  51A5               	movf	_WaitForReceive& (0+255),w,b
 10320  012258  A4D8               	btfss	status,2,c
 10321  01225A  D7FC               	goto	l1037
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;2_April_TestMain.c: 768: __nop();
 10325  01225C  F000               	nop	
 10326                           
 10327                           ;2_April_TestMain.c: 769: ClearRxBytes();
 10328  01225E  EC05  F094         	call	_ClearRxBytes	;wreg free
 10329                           
 10330                           ;2_April_TestMain.c: 770: DeleteAllSms();
 10331  012262  ECB1  F08D         	call	_DeleteAllSms	;wreg free
 10332                           
 10333                           ;2_April_TestMain.c: 771: lcd_clear();
 10334  012266  ECA0  F095         	call	_lcd_clear	;wreg free
 10335  01226A  0012               	return		;funcret
 10336  01226C                     __end_of_Module_Init:
 10337                           	opt stack 0
 10338                           tblptru	equ	0xFF8
 10339                           tblptrh	equ	0xFF7
 10340                           tblptrl	equ	0xFF6
 10341                           tablat	equ	0xFF5
 10342                           prodh	equ	0xFF4
 10343                           prodl	equ	0xFF3
 10344                           intcon	equ	0xFF2
 10345                           intcon2	equ	0xFF1
 10346                           postinc0	equ	0xFEE
 10347                           wreg	equ	0xFE8
 10348                           indf1	equ	0xFE7
 10349                           postdec1	equ	0xFE5
 10350                           fsr1h	equ	0xFE2
 10351                           fsr1l	equ	0xFE1
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           fsr2h	equ	0xFDA
 10355                           fsr2l	equ	0xFD9
 10356                           status	equ	0xFD8
 10357                           
 10358 ;; *************** function _DeleteAllSms *****************
 10359 ;; Defined at:
 10360 ;;		line 773 in file "2_April_TestMain.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;		None
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:   11
 10381 ;; This function calls:
 10382 ;;		_ClearRxBytes
 10383 ;;		_Delayms
 10384 ;;		_LcdDisplay
 10385 ;;		_SprintRom
 10386 ;;		_lcd_clear
 10387 ;; This function is called by:
 10388 ;;		_Module_Init
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text44
 10393  011B62                     __ptext44:
 10394                           	opt stack 0
 10395  011B62                     _DeleteAllSms:
 10396                           	opt stack 18
 10397                           
 10398                           ;2_April_TestMain.c: 775: lcd_clear();
 10399                           
 10400                           ;incstack = 0
 10401  011B62  ECA0  F095         	call	_lcd_clear	;wreg free
 10402                           
 10403                           ;2_April_TestMain.c: 776: LcdDisplay(0xC0,"Deleting SMS    ");
 10404  011B66  0E9D               	movlw	low STR_40
 10405  011B68  0101               	movlb	1	; () banked
 10406  011B6A  6FDF               	movwf	LcdDisplay@string& (0+255),b
 10407  011B6C  0EFF               	movlw	high STR_40
 10408  011B6E  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
 10409  011B70  0EC0               	movlw	192
 10410  011B72  ECED  F092         	call	_LcdDisplay
 10411                           
 10412                           ;2_April_TestMain.c: 777: WaitForReceive = 1;
 10413  011B76  0E01               	movlw	1
 10414  011B78  0100               	movlb	0	; () banked
 10415  011B7A  6FA5               	movwf	_WaitForReceive& (0+255),b
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;2_April_TestMain.c: 778: id=0;
 10419  011B7C  0E00               	movlw	0
 10420  011B7E  6E03               	movwf	_id,c
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;2_April_TestMain.c: 779: ClearRxBytes();
 10424  011B80  EC05  F094         	call	_ClearRxBytes	;wreg free
 10425                           
 10426                           ;2_April_TestMain.c: 780: RXcounter = 5;
 10427  011B84  0E05               	movlw	5
 10428  011B86  6E02               	movwf	_RXcounter,c
 10429                           
 10430                           ;2_April_TestMain.c: 781: SprintRom(&Delet_All_SMS,12);
 10431  011B88  0ED8               	movlw	low _Delet_All_SMS
 10432  011B8A  0101               	movlb	1	; () banked
 10433  011B8C  6FDE               	movwf	SprintRom@datas& (0+255),b
 10434  011B8E  0EFD               	movlw	high _Delet_All_SMS
 10435  011B90  6FDF               	movwf	(SprintRom@datas+1)& (0+255),b
 10436  011B92  0E0C               	movlw	12
 10437  011B94  6FE0               	movwf	SprintRom@length& (0+255),b
 10438  011B96  EC9D  F091         	call	_SprintRom	;wreg free
 10439  011B9A  0100               	movlb	0	; () banked
 10440  011B9C  51A5               	movf	_WaitForReceive& (0+255),w,b
 10441  011B9E  A4D8               	btfss	status,2,c
 10442  011BA0  D7FC               	goto	l1043
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;2_April_TestMain.c: 783: Delayms(300);
 10446                           
 10447                           ; BSR set to: 0
 10448  011BA2  0E01               	movlw	1
 10449  011BA4  0101               	movlb	1	; () banked
 10450  011BA6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10451  011BA8  0E2C               	movlw	44
 10452  011BAA  6FD8               	movwf	Delayms@time& (0+255),b
 10453  011BAC  EC0D  F093         	call	_Delayms	;wreg free
 10454                           
 10455                           ;2_April_TestMain.c: 784: Delayms(1);
 10456  011BB0  0E00               	movlw	0
 10457  011BB2  0101               	movlb	1	; () banked
 10458  011BB4  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10459  011BB6  0E01               	movlw	1
 10460  011BB8  6FD8               	movwf	Delayms@time& (0+255),b
 10461  011BBA  EC0D  F093         	call	_Delayms	;wreg free
 10462                           
 10463                           ;2_April_TestMain.c: 785: ClearRxBytes();
 10464  011BBE  EC05  F094         	call	_ClearRxBytes	;wreg free
 10465                           
 10466                           ;2_April_TestMain.c: 786: LcdDisplay(0xC0,"All SMS deleted ");
 10467  011BC2  0EAE               	movlw	low STR_41
 10468  011BC4  0101               	movlb	1	; () banked
 10469  011BC6  6FDF               	movwf	LcdDisplay@string& (0+255),b
 10470  011BC8  0EFF               	movlw	high STR_41
 10471  011BCA  6FE0               	movwf	(LcdDisplay@string+1)& (0+255),b
 10472  011BCC  0EC0               	movlw	192
 10473  011BCE  ECED  F092         	call	_LcdDisplay
 10474                           
 10475                           ;2_April_TestMain.c: 787: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
 10476  011BD2  0E01               	movlw	1
 10477  011BD4  0101               	movlb	1	; () banked
 10478  011BD6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10479  011BD8  0E2C               	movlw	44
 10480  011BDA  6FD8               	movwf	Delayms@time& (0+255),b
 10481  011BDC  EC0D  F093         	call	_Delayms	;wreg free
 10482  011BE0  0E01               	movlw	1
 10483  011BE2  0101               	movlb	1	; () banked
 10484  011BE4  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10485  011BE6  0E2C               	movlw	44
 10486  011BE8  6FD8               	movwf	Delayms@time& (0+255),b
 10487  011BEA  EC0D  F093         	call	_Delayms	;wreg free
 10488  011BEE  0E01               	movlw	1
 10489  011BF0  0101               	movlb	1	; () banked
 10490  011BF2  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10491  011BF4  0E2C               	movlw	44
 10492  011BF6  6FD8               	movwf	Delayms@time& (0+255),b
 10493  011BF8  EC0D  F093         	call	_Delayms	;wreg free
 10494  011BFC  0E01               	movlw	1
 10495  011BFE  0101               	movlb	1	; () banked
 10496  011C00  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10497  011C02  0E2C               	movlw	44
 10498  011C04  6FD8               	movwf	Delayms@time& (0+255),b
 10499  011C06  EC0D  F093         	call	_Delayms	;wreg free
 10500                           
 10501                           ;2_April_TestMain.c: 788: lcd_clear();
 10502  011C0A  ECA0  F095         	call	_lcd_clear	;wreg free
 10503  011C0E  0012               	return		;funcret
 10504  011C10                     __end_of_DeleteAllSms:
 10505                           	opt stack 0
 10506                           tblptru	equ	0xFF8
 10507                           tblptrh	equ	0xFF7
 10508                           tblptrl	equ	0xFF6
 10509                           tablat	equ	0xFF5
 10510                           prodh	equ	0xFF4
 10511                           prodl	equ	0xFF3
 10512                           intcon	equ	0xFF2
 10513                           intcon2	equ	0xFF1
 10514                           postinc0	equ	0xFEE
 10515                           wreg	equ	0xFE8
 10516                           indf1	equ	0xFE7
 10517                           postdec1	equ	0xFE5
 10518                           fsr1h	equ	0xFE2
 10519                           fsr1l	equ	0xFE1
 10520                           indf2	equ	0xFDF
 10521                           postinc2	equ	0xFDE
 10522                           fsr2h	equ	0xFDA
 10523                           fsr2l	equ	0xFD9
 10524                           status	equ	0xFD8
 10525                           
 10526 ;; *************** function _lcd_clear *****************
 10527 ;; Defined at:
 10528 ;;		line 916 in file "2_April_TestMain.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2, status,0, cstack
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:   10
 10549 ;; This function calls:
 10550 ;;		_LcdCmd
 10551 ;; This function is called by:
 10552 ;;		_main
 10553 ;;		_Module_Init
 10554 ;;		_DeleteAllSms
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text45
 10559  012B40                     __ptext45:
 10560                           	opt stack 0
 10561  012B40                     _lcd_clear:
 10562                           	opt stack 20
 10563                           
 10564                           ;2_April_TestMain.c: 918: LcdCmd(0x01);
 10565                           
 10566                           ;incstack = 0
 10567  012B40  0E01               	movlw	1
 10568  012B42  ECD0  F094         	call	_LcdCmd
 10569  012B46  0012               	return		;funcret
 10570  012B48                     __end_of_lcd_clear:
 10571                           	opt stack 0
 10572                           tblptru	equ	0xFF8
 10573                           tblptrh	equ	0xFF7
 10574                           tblptrl	equ	0xFF6
 10575                           tablat	equ	0xFF5
 10576                           prodh	equ	0xFF4
 10577                           prodl	equ	0xFF3
 10578                           intcon	equ	0xFF2
 10579                           intcon2	equ	0xFF1
 10580                           postinc0	equ	0xFEE
 10581                           wreg	equ	0xFE8
 10582                           indf1	equ	0xFE7
 10583                           postdec1	equ	0xFE5
 10584                           fsr1h	equ	0xFE2
 10585                           fsr1l	equ	0xFE1
 10586                           indf2	equ	0xFDF
 10587                           postinc2	equ	0xFDE
 10588                           fsr2h	equ	0xFDA
 10589                           fsr2l	equ	0xFD9
 10590                           status	equ	0xFD8
 10591                           
 10592 ;; *************** function _SprintRom *****************
 10593 ;; Defined at:
 10594 ;;		line 714 in file "2_April_TestMain.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;  datas           2    6[BANK1 ] PTR const unsigned char 
 10597 ;;		 -> ATCheck(3), Delet_All_SMS(12), 
 10598 ;;  length          1    8[BANK1 ] unsigned char 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  i               1   12[BANK1 ] unsigned char 
 10601 ;;  j               1   11[BANK1 ] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10611 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10615 ;;Total ram usage:        7 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    9
 10618 ;; This function calls:
 10619 ;;		_Delayms
 10620 ;; This function is called by:
 10621 ;;		_main
 10622 ;;		_Module_Init
 10623 ;;		_DeleteAllSms
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text46
 10628  01233A                     __ptext46:
 10629                           	opt stack 0
 10630  01233A                     _SprintRom:
 10631                           	opt stack 21
 10632                           
 10633                           ;2_April_TestMain.c: 716: unsigned char i=0,j=0;
 10634                           
 10635                           ;incstack = 0
 10636  01233A  0E00               	movlw	0
 10637  01233C  0101               	movlb	1	; () banked
 10638  01233E  6FE4               	movwf	SprintRom@i& (0+255),b
 10639  012340  0E00               	movlw	0
 10640  012342  6FE3               	movwf	SprintRom@j& (0+255),b
 10641                           
 10642                           ;2_April_TestMain.c: 718: for(i=0;i<length;i++){
 10643  012344  0E00               	movlw	0
 10644  012346  6FE4               	movwf	SprintRom@i& (0+255),b
 10645  012348  D01E               	goto	l1019
 10646  01234A                     
 10647                           ; BSR set to: 1
 10648                           ;2_April_TestMain.c: 720: TXREG = datas[i];
 10649                           
 10650                           ; BSR set to: 1
 10651  01234A  51E4               	movf	SprintRom@i& (0+255),w,b
 10652  01234C  0D01               	mullw	1
 10653  01234E  C1DE  F1E1         	movff	SprintRom@datas,??_SprintRom
 10654  012352  C1DF  F1E2         	movff	SprintRom@datas+1,??_SprintRom+1
 10655  012356  50F3               	movf	prodl,w,c
 10656  012358  27E1               	addwf	??_SprintRom& (0+255),f,b
 10657  01235A  50F4               	movf	prodh,w,c
 10658  01235C  23E2               	addwfc	(??_SprintRom+1)& (0+255),f,b
 10659  01235E  C1E1  FFF6         	movff	??_SprintRom,tblptrl
 10660  012362  C1E2  FFF7         	movff	??_SprintRom+1,tblptrh
 10661  012366                     	if	0	;tblptru may be non-zero
 10662  012366                     	endif
 10663  012366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10664  012366  0E00               	movlw	low (__mediumconst shr (0+16))
 10665  012368  6EF8               	movwf	tblptru,c
 10666  01236A                     	endif
 10667  01236A  0008               	tblrd		*
 10668  01236C  CFF5 FFAD          	movff	tablat,4013	;volatile
 10669  012370                     
 10670                           ; BSR set to: 1
 10671  012370  A89E               	btfss	3998,4,c	;volatile
 10672  012372  D7FE               	goto	l1022
 10673                           
 10674                           ;2_April_TestMain.c: 722: Delayms(50);
 10675  012374  0E00               	movlw	0
 10676  012376  0101               	movlb	1	; () banked
 10677  012378  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10678  01237A  0E32               	movlw	50
 10679  01237C  6FD8               	movwf	Delayms@time& (0+255),b
 10680  01237E  EC0D  F093         	call	_Delayms	;wreg free
 10681  012382  0101               	movlb	1	; () banked
 10682  012384  2BE4               	incf	SprintRom@i& (0+255),f,b
 10683  012386                     l1019:
 10684                           
 10685                           ; BSR set to: 1
 10686                           
 10687                           ; BSR set to: 1
 10688  012386  51E0               	movf	SprintRom@length& (0+255),w,b
 10689  012388  5DE4               	subwf	SprintRom@i& (0+255),w,b
 10690  01238A  B0D8               	btfsc	status,0,c
 10691  01238C  0012               	return	
 10692  01238E  D7DD               	goto	l1020
 10693  012390                     __end_of_SprintRom:
 10694                           	opt stack 0
 10695                           tblptru	equ	0xFF8
 10696                           tblptrh	equ	0xFF7
 10697                           tblptrl	equ	0xFF6
 10698                           tablat	equ	0xFF5
 10699                           prodh	equ	0xFF4
 10700                           prodl	equ	0xFF3
 10701                           intcon	equ	0xFF2
 10702                           intcon2	equ	0xFF1
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           indf1	equ	0xFE7
 10706                           postdec1	equ	0xFE5
 10707                           fsr1h	equ	0xFE2
 10708                           fsr1l	equ	0xFE1
 10709                           indf2	equ	0xFDF
 10710                           postinc2	equ	0xFDE
 10711                           fsr2h	equ	0xFDA
 10712                           fsr2l	equ	0xFD9
 10713                           status	equ	0xFD8
 10714                           
 10715 ;; *************** function _LcdDisplay *****************
 10716 ;; Defined at:
 10717 ;;		line 949 in file "2_April_TestMain.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  LINE            1    wreg     unsigned char 
 10720 ;;  string          2    7[BANK1 ] PTR const unsigned char 
 10721 ;;		 -> STR_41(17), STR_40(17), STR_39(20), STR_38(20), 
 10722 ;;		 -> STR_37(15), STR_36(16), STR_35(15), STR_34(15), 
 10723 ;;		 -> STR_33(15), STR_32(15), STR_31(20), STR_30(20), 
 10724 ;;		 -> STR_29(20), STR_28(20), STR_27(20), STR_26(20), 
 10725 ;;		 -> STR_25(19), STR_24(19), STR_23(20), STR_22(21), 
 10726 ;;		 -> STR_21(21), STR_20(17), STR_19(16), STR_18(17), 
 10727 ;;		 -> STR_17(15), STR_16(17), STR_15(15), STR_14(20), 
 10728 ;;		 -> STR_13(20), STR_12(20), STR_11(20), STR_10(20), 
 10729 ;;		 -> STR_9(20), STR_8(20), STR_7(20), STR_6(20), 
 10730 ;;		 -> STR_5(20), STR_4(20), STR_3(20), STR_2(19), 
 10731 ;;		 -> STR_1(19), 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  LINE            1    9[BANK1 ] unsigned char 
 10734 ;;  data            1    0        unsigned char 
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10744 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;Total ram usage:        3 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:   10
 10751 ;; This function calls:
 10752 ;;		_LcdCmd
 10753 ;;		_LcdData
 10754 ;; This function is called by:
 10755 ;;		_main
 10756 ;;		_DeleteAllSms
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text47
 10761  0125DA                     __ptext47:
 10762                           	opt stack 0
 10763  0125DA                     _LcdDisplay:
 10764                           	opt stack 18
 10765                           
 10766                           ; BSR set to: 1
 10767                           ;incstack = 0
 10768                           ;LcdDisplay@LINE stored from wreg
 10769  0125DA  0101               	movlb	1	; () banked
 10770  0125DC  6FE1               	movwf	LcdDisplay@LINE& (0+255),b
 10771                           
 10772                           ;2_April_TestMain.c: 951: unsigned char data;
 10773                           ;2_April_TestMain.c: 952: LcdCmd(LINE);
 10774  0125DE  0101               	movlb	1	; () banked
 10775  0125E0  51E1               	movf	LcdDisplay@LINE& (0+255),w,b
 10776  0125E2  ECD0  F094         	call	_LcdCmd
 10777                           
 10778                           ;2_April_TestMain.c: 954: while(*string != '\0')
 10779  0125E6  D00D               	goto	l1099
 10780  0125E8                     
 10781                           ;2_April_TestMain.c: 955: {
 10782                           ;2_April_TestMain.c: 956: LcdData(*string);
 10783  0125E8  C1DF  FFF6         	movff	LcdDisplay@string,tblptrl
 10784  0125EC  C1E0  FFF7         	movff	LcdDisplay@string+1,tblptrh
 10785  0125F0                     	if	0	;tblptru may be non-zero
 10786  0125F0                     	endif
 10787  0125F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10788  0125F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10789  0125F2  6EF8               	movwf	tblptru,c
 10790  0125F4                     	endif
 10791  0125F4  0008               	tblrd		*
 10792  0125F6  50F5               	movf	tablat,w,c
 10793  0125F8  ECC0  F094         	call	_LcdData
 10794                           
 10795                           ;2_April_TestMain.c: 957: string++;
 10796  0125FC  0101               	movlb	1	; () banked
 10797  0125FE  4BDF               	infsnz	LcdDisplay@string& (0+255),f,b
 10798  012600  2BE0               	incf	(LcdDisplay@string+1)& (0+255),f,b
 10799  012602                     l1099:
 10800                           
 10801                           ; BSR set to: 1
 10802  012602  C1DF  FFF6         	movff	LcdDisplay@string,tblptrl
 10803  012606  C1E0  FFF7         	movff	LcdDisplay@string+1,tblptrh
 10804  01260A                     	if	0	;tblptru may be non-zero
 10805  01260A                     	endif
 10806  01260A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10807  01260A  0E00               	movlw	low (__mediumconst shr (0+16))
 10808  01260C  6EF8               	movwf	tblptru,c
 10809  01260E                     	endif
 10810  01260E  0008               	tblrd		*
 10811  012610  50F5               	movf	tablat,w,c
 10812  012612  0900               	iorlw	0
 10813  012614  B4D8               	btfsc	status,2,c
 10814  012616  0012               	return	
 10815  012618  D7E7               	goto	l1100
 10816  01261A                     __end_of_LcdDisplay:
 10817                           	opt stack 0
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodh	equ	0xFF4
 10823                           prodl	equ	0xFF3
 10824                           intcon	equ	0xFF2
 10825                           intcon2	equ	0xFF1
 10826                           postinc0	equ	0xFEE
 10827                           wreg	equ	0xFE8
 10828                           indf1	equ	0xFE7
 10829                           postdec1	equ	0xFE5
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function _LcdData *****************
 10839 ;; Defined at:
 10840 ;;		line 897 in file "2_April_TestMain.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  value           1    wreg     unsigned char 
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  value           1    6[BANK1 ] unsigned char 
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  1    wreg      void 
 10847 ;; Registers used:
 10848 ;;		wreg, status,2, status,0, cstack
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10857 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10858 ;;Total ram usage:        1 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; Hardware stack levels required when called:    9
 10861 ;; This function calls:
 10862 ;;		_Delayms
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;;		_LcdDisplay
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text48
 10870  012980                     __ptext48:
 10871                           	opt stack 0
 10872  012980                     _LcdData:
 10873                           	opt stack 18
 10874                           
 10875                           ;incstack = 0
 10876                           ;LcdData@value stored from wreg
 10877  012980  0101               	movlb	1	; () banked
 10878  012982  6FDE               	movwf	LcdData@value& (0+255),b
 10879                           
 10880                           ;2_April_TestMain.c: 899: PORTE=value;
 10881  012984  C1DE  FF84         	movff	LcdData@value,3972	;volatile
 10882                           
 10883                           ;2_April_TestMain.c: 900: PORTFbits.RF1=1;
 10884  012988  8285               	bsf	3973,1,c	;volatile
 10885                           
 10886                           ;2_April_TestMain.c: 901: __nop();
 10887  01298A  F000               	nop	
 10888                           
 10889                           ;2_April_TestMain.c: 902: PORTFbits.RF3=1;
 10890  01298C  8685               	bsf	3973,3,c	;volatile
 10891                           
 10892                           ;2_April_TestMain.c: 903: Delayms(5);
 10893  01298E  0E00               	movlw	0
 10894  012990  0101               	movlb	1	; () banked
 10895  012992  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 10896  012994  0E05               	movlw	5
 10897  012996  6FD8               	movwf	Delayms@time& (0+255),b
 10898  012998  EC0D  F093         	call	_Delayms	;wreg free
 10899                           
 10900                           ;2_April_TestMain.c: 904: PORTFbits.RF3=0;
 10901  01299C  9685               	bcf	3973,3,c	;volatile
 10902  01299E  0012               	return		;funcret
 10903  0129A0                     __end_of_LcdData:
 10904                           	opt stack 0
 10905                           tblptru	equ	0xFF8
 10906                           tblptrh	equ	0xFF7
 10907                           tblptrl	equ	0xFF6
 10908                           tablat	equ	0xFF5
 10909                           prodh	equ	0xFF4
 10910                           prodl	equ	0xFF3
 10911                           intcon	equ	0xFF2
 10912                           intcon2	equ	0xFF1
 10913                           postinc0	equ	0xFEE
 10914                           wreg	equ	0xFE8
 10915                           indf1	equ	0xFE7
 10916                           postdec1	equ	0xFE5
 10917                           fsr1h	equ	0xFE2
 10918                           fsr1l	equ	0xFE1
 10919                           indf2	equ	0xFDF
 10920                           postinc2	equ	0xFDE
 10921                           fsr2h	equ	0xFDA
 10922                           fsr2l	equ	0xFD9
 10923                           status	equ	0xFD8
 10924                           
 10925 ;; *************** function _ClearRxBytes *****************
 10926 ;; Defined at:
 10927 ;;		line 726 in file "2_April_TestMain.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  i               1    0[BANK1 ] unsigned char 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;Total ram usage:        1 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    8
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_main
 10952 ;;		_Module_Init
 10953 ;;		_DeleteAllSms
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text49
 10958  01280A                     __ptext49:
 10959                           	opt stack 0
 10960  01280A                     _ClearRxBytes:
 10961                           	opt stack 20
 10962                           
 10963                           ;2_April_TestMain.c: 728: unsigned char i=0;
 10964                           
 10965                           ;incstack = 0
 10966  01280A  0E00               	movlw	0
 10967  01280C  0101               	movlb	1	; () banked
 10968  01280E  6FD8               	movwf	ClearRxBytes@i& (0+255),b
 10969                           
 10970                           ;2_April_TestMain.c: 730: for(i=0;i<100;i++){
 10971  012810  0E00               	movlw	0
 10972  012812  6FD8               	movwf	ClearRxBytes@i& (0+255),b
 10973  012814                     l5737:
 10974                           
 10975                           ; BSR set to: 1
 10976  012814  0E63               	movlw	99
 10977  012816  65D8               	cpfsgt	ClearRxBytes@i& (0+255),b
 10978  012818  D001               	goto	l1028
 10979  01281A  0012               	return	
 10980  01281C                     l1028:
 10981                           
 10982                           ; BSR set to: 1
 10983                           ;2_April_TestMain.c: 731: RxBuffer[i] = 0xFF;
 10984                           
 10985                           ; BSR set to: 1
 10986  01281C  51D8               	movf	ClearRxBytes@i& (0+255),w,b
 10987  01281E  0D01               	mullw	1
 10988  012820  0E00               	movlw	low _RxBuffer
 10989  012822  24F3               	addwf	prodl,w,c
 10990  012824  6ED9               	movwf	fsr2l,c
 10991  012826  0E02               	movlw	high _RxBuffer
 10992  012828  20F4               	addwfc	prodh,w,c
 10993  01282A  6EDA               	movwf	fsr2h,c
 10994  01282C  0EFF               	movlw	255
 10995  01282E  6EDF               	movwf	indf2,c
 10996                           
 10997                           ; BSR set to: 1
 10998  012830  2BD8               	incf	ClearRxBytes@i& (0+255),f,b
 10999  012832  D7F0               	goto	l5737
 11000  012834                     __end_of_ClearRxBytes:
 11001                           	opt stack 0
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           intcon	equ	0xFF2
 11009                           intcon2	equ	0xFF1
 11010                           postinc0	equ	0xFEE
 11011                           wreg	equ	0xFE8
 11012                           indf1	equ	0xFE7
 11013                           postdec1	equ	0xFE5
 11014                           fsr1h	equ	0xFE2
 11015                           fsr1l	equ	0xFE1
 11016                           indf2	equ	0xFDF
 11017                           postinc2	equ	0xFDE
 11018                           fsr2h	equ	0xFDA
 11019                           fsr2l	equ	0xFD9
 11020                           status	equ	0xFD8
 11021                           
 11022 ;; *************** function _Message_Send_Frame_Parking_light_Board *****************
 11023 ;; Defined at:
 11024 ;;		line 859 in file "2_April_TestMain.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;		None
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;Total ram usage:        0 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:   10
 11045 ;; This function calls:
 11046 ;;		_Delayms
 11047 ;;		_Sprint
 11048 ;; This function is called by:
 11049 ;;		_main
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text50
 11054  011A02                     __ptext50:
 11055                           	opt stack 0
 11056  011A02                     _Message_Send_Frame_Parking_light_Board:
 11057                           	opt stack 20
 11058                           
 11059                           ;2_April_TestMain.c: 861: Delayms(2);
 11060                           
 11061                           ; BSR set to: 1
 11062                           ;incstack = 0
 11063  011A02  0E00               	movlw	0
 11064  011A04  0101               	movlb	1	; () banked
 11065  011A06  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11066  011A08  0E02               	movlw	2
 11067  011A0A  6FD8               	movwf	Delayms@time& (0+255),b
 11068  011A0C  EC0D  F093         	call	_Delayms	;wreg free
 11069                           
 11070                           ;2_April_TestMain.c: 862: Sprint(&SMS_format,10);
 11071  011A10  0ECB               	movlw	low _SMS_format
 11072  011A12  0101               	movlb	1	; () banked
 11073  011A14  6FDE               	movwf	Sprint@datas& (0+255),b
 11074  011A16  0E00               	movlw	high _SMS_format
 11075  011A18  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11076  011A1A  0E0A               	movlw	10
 11077  011A1C  6FE0               	movwf	Sprint@length& (0+255),b
 11078  011A1E  EC36  F091         	call	_Sprint	;wreg free
 11079                           
 11080                           ;2_April_TestMain.c: 863: Delayms(2);
 11081  011A22  0E00               	movlw	0
 11082  011A24  0101               	movlb	1	; () banked
 11083  011A26  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11084  011A28  0E02               	movlw	2
 11085  011A2A  6FD8               	movwf	Delayms@time& (0+255),b
 11086  011A2C  EC0D  F093         	call	_Delayms	;wreg free
 11087                           
 11088                           ;2_April_TestMain.c: 864: Sprint(&SEND_SMS,21);
 11089  011A30  0E7F               	movlw	low _SEND_SMS
 11090  011A32  0101               	movlb	1	; () banked
 11091  011A34  6FDE               	movwf	Sprint@datas& (0+255),b
 11092  011A36  0E01               	movlw	high _SEND_SMS
 11093  011A38  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11094  011A3A  0E15               	movlw	21
 11095  011A3C  6FE0               	movwf	Sprint@length& (0+255),b
 11096  011A3E  EC36  F091         	call	_Sprint	;wreg free
 11097                           
 11098                           ;2_April_TestMain.c: 865: Delayms(2);
 11099  011A42  0E00               	movlw	0
 11100  011A44  0101               	movlb	1	; () banked
 11101  011A46  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11102  011A48  0E02               	movlw	2
 11103  011A4A  6FD8               	movwf	Delayms@time& (0+255),b
 11104  011A4C  EC0D  F093         	call	_Delayms	;wreg free
 11105                           
 11106                           ;2_April_TestMain.c: 866: Sprint(&Message6,37);
 11107  011A50  0E93               	movlw	low _Message6
 11108  011A52  0101               	movlb	1	; () banked
 11109  011A54  6FDE               	movwf	Sprint@datas& (0+255),b
 11110  011A56  0EFD               	movlw	high _Message6
 11111  011A58  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11112  011A5A  0E25               	movlw	37
 11113  011A5C  6FE0               	movwf	Sprint@length& (0+255),b
 11114  011A5E  EC36  F091         	call	_Sprint	;wreg free
 11115                           
 11116                           ;2_April_TestMain.c: 867: Delayms(2);
 11117  011A62  0E00               	movlw	0
 11118  011A64  0101               	movlb	1	; () banked
 11119  011A66  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11120  011A68  0E02               	movlw	2
 11121  011A6A  6FD8               	movwf	Delayms@time& (0+255),b
 11122  011A6C  EC0D  F093         	call	_Delayms	;wreg free
 11123                           
 11124                           ;2_April_TestMain.c: 868: Sprint(&Array,19);
 11125  011A70  0E94               	movlw	low _Array
 11126  011A72  0101               	movlb	1	; () banked
 11127  011A74  6FDE               	movwf	Sprint@datas& (0+255),b
 11128  011A76  0E01               	movlw	high _Array
 11129  011A78  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11130  011A7A  0E13               	movlw	19
 11131  011A7C  6FE0               	movwf	Sprint@length& (0+255),b
 11132  011A7E  EC36  F091         	call	_Sprint	;wreg free
 11133                           
 11134                           ;2_April_TestMain.c: 869: Delayms(2);
 11135  011A82  0E00               	movlw	0
 11136  011A84  0101               	movlb	1	; () banked
 11137  011A86  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11138  011A88  0E02               	movlw	2
 11139  011A8A  6FD8               	movwf	Delayms@time& (0+255),b
 11140  011A8C  EC0D  F093         	call	_Delayms	;wreg free
 11141                           
 11142                           ;2_April_TestMain.c: 870: Sprint(&send,3);
 11143  011A90  0EE3               	movlw	low _send
 11144  011A92  0101               	movlb	1	; () banked
 11145  011A94  6FDE               	movwf	Sprint@datas& (0+255),b
 11146  011A96  0E00               	movlw	high _send
 11147  011A98  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11148  011A9A  0E03               	movlw	3
 11149  011A9C  6FE0               	movwf	Sprint@length& (0+255),b
 11150  011A9E  EC36  F091         	call	_Sprint	;wreg free
 11151                           
 11152                           ;2_April_TestMain.c: 871: Delayms(2);
 11153  011AA2  0E00               	movlw	0
 11154  011AA4  0101               	movlb	1	; () banked
 11155  011AA6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11156  011AA8  0E02               	movlw	2
 11157  011AAA  6FD8               	movwf	Delayms@time& (0+255),b
 11158  011AAC  EC0D  F093         	call	_Delayms	;wreg free
 11159  011AB0  0012               	return		;funcret
 11160  011AB2                     __end_of_Message_Send_Frame_Parking_light_Board:
 11161                           	opt stack 0
 11162                           tblptru	equ	0xFF8
 11163                           tblptrh	equ	0xFF7
 11164                           tblptrl	equ	0xFF6
 11165                           tablat	equ	0xFF5
 11166                           prodh	equ	0xFF4
 11167                           prodl	equ	0xFF3
 11168                           intcon	equ	0xFF2
 11169                           intcon2	equ	0xFF1
 11170                           postinc0	equ	0xFEE
 11171                           wreg	equ	0xFE8
 11172                           indf1	equ	0xFE7
 11173                           postdec1	equ	0xFE5
 11174                           fsr1h	equ	0xFE2
 11175                           fsr1l	equ	0xFE1
 11176                           indf2	equ	0xFDF
 11177                           postinc2	equ	0xFDE
 11178                           fsr2h	equ	0xFDA
 11179                           fsr2l	equ	0xFD9
 11180                           status	equ	0xFD8
 11181                           
 11182 ;; *************** function _Message_Send_Frame_LDR_ON *****************
 11183 ;; Defined at:
 11184 ;;		line 833 in file "2_April_TestMain.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;		None
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      void 
 11191 ;; Registers used:
 11192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        0 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:   10
 11205 ;; This function calls:
 11206 ;;		_Delayms
 11207 ;;		_Sprint
 11208 ;; This function is called by:
 11209 ;;		_main
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text51
 11214  011DE2                     __ptext51:
 11215                           	opt stack 0
 11216  011DE2                     _Message_Send_Frame_LDR_ON:
 11217                           	opt stack 20
 11218                           
 11219                           ;2_April_TestMain.c: 834: Delayms(2);
 11220                           
 11221                           ;incstack = 0
 11222  011DE2  0E00               	movlw	0
 11223  011DE4  0101               	movlb	1	; () banked
 11224  011DE6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11225  011DE8  0E02               	movlw	2
 11226  011DEA  6FD8               	movwf	Delayms@time& (0+255),b
 11227  011DEC  EC0D  F093         	call	_Delayms	;wreg free
 11228                           
 11229                           ;2_April_TestMain.c: 835: Sprint(&SMS_format,10);
 11230  011DF0  0ECB               	movlw	low _SMS_format
 11231  011DF2  0101               	movlb	1	; () banked
 11232  011DF4  6FDE               	movwf	Sprint@datas& (0+255),b
 11233  011DF6  0E00               	movlw	high _SMS_format
 11234  011DF8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11235  011DFA  0E0A               	movlw	10
 11236  011DFC  6FE0               	movwf	Sprint@length& (0+255),b
 11237  011DFE  EC36  F091         	call	_Sprint	;wreg free
 11238                           
 11239                           ;2_April_TestMain.c: 836: Delayms(2);
 11240  011E02  0E00               	movlw	0
 11241  011E04  0101               	movlb	1	; () banked
 11242  011E06  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11243  011E08  0E02               	movlw	2
 11244  011E0A  6FD8               	movwf	Delayms@time& (0+255),b
 11245  011E0C  EC0D  F093         	call	_Delayms	;wreg free
 11246                           
 11247                           ;2_April_TestMain.c: 837: Sprint(&SEND_SMS,21);
 11248  011E10  0E7F               	movlw	low _SEND_SMS
 11249  011E12  0101               	movlb	1	; () banked
 11250  011E14  6FDE               	movwf	Sprint@datas& (0+255),b
 11251  011E16  0E01               	movlw	high _SEND_SMS
 11252  011E18  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11253  011E1A  0E15               	movlw	21
 11254  011E1C  6FE0               	movwf	Sprint@length& (0+255),b
 11255  011E1E  EC36  F091         	call	_Sprint	;wreg free
 11256                           
 11257                           ;2_April_TestMain.c: 838: Delayms(2);
 11258  011E22  0E00               	movlw	0
 11259  011E24  0101               	movlb	1	; () banked
 11260  011E26  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11261  011E28  0E02               	movlw	2
 11262  011E2A  6FD8               	movwf	Delayms@time& (0+255),b
 11263  011E2C  EC0D  F093         	call	_Delayms	;wreg free
 11264                           
 11265                           ;2_April_TestMain.c: 839: Sprint(& Message4,22);
 11266  011E30  0E3E               	movlw	low _Message4
 11267  011E32  0101               	movlb	1	; () banked
 11268  011E34  6FDE               	movwf	Sprint@datas& (0+255),b
 11269  011E36  0E01               	movlw	high _Message4
 11270  011E38  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11271  011E3A  0E16               	movlw	22
 11272  011E3C  6FE0               	movwf	Sprint@length& (0+255),b
 11273  011E3E  EC36  F091         	call	_Sprint	;wreg free
 11274                           
 11275                           ;2_April_TestMain.c: 840: Delayms(2);
 11276  011E42  0E00               	movlw	0
 11277  011E44  0101               	movlb	1	; () banked
 11278  011E46  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11279  011E48  0E02               	movlw	2
 11280  011E4A  6FD8               	movwf	Delayms@time& (0+255),b
 11281  011E4C  EC0D  F093         	call	_Delayms	;wreg free
 11282                           
 11283                           ;2_April_TestMain.c: 841: Sprint(&send,3);
 11284  011E50  0EE3               	movlw	low _send
 11285  011E52  0101               	movlb	1	; () banked
 11286  011E54  6FDE               	movwf	Sprint@datas& (0+255),b
 11287  011E56  0E00               	movlw	high _send
 11288  011E58  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11289  011E5A  0E03               	movlw	3
 11290  011E5C  6FE0               	movwf	Sprint@length& (0+255),b
 11291  011E5E  EC36  F091         	call	_Sprint	;wreg free
 11292                           
 11293                           ;2_April_TestMain.c: 842: Delayms(2);
 11294  011E62  0E00               	movlw	0
 11295  011E64  0101               	movlb	1	; () banked
 11296  011E66  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11297  011E68  0E02               	movlw	2
 11298  011E6A  6FD8               	movwf	Delayms@time& (0+255),b
 11299  011E6C  EC0D  F093         	call	_Delayms	;wreg free
 11300  011E70  0012               	return		;funcret
 11301  011E72                     __end_of_Message_Send_Frame_LDR_ON:
 11302                           	opt stack 0
 11303                           tblptru	equ	0xFF8
 11304                           tblptrh	equ	0xFF7
 11305                           tblptrl	equ	0xFF6
 11306                           tablat	equ	0xFF5
 11307                           prodh	equ	0xFF4
 11308                           prodl	equ	0xFF3
 11309                           intcon	equ	0xFF2
 11310                           intcon2	equ	0xFF1
 11311                           postinc0	equ	0xFEE
 11312                           wreg	equ	0xFE8
 11313                           indf1	equ	0xFE7
 11314                           postdec1	equ	0xFE5
 11315                           fsr1h	equ	0xFE2
 11316                           fsr1l	equ	0xFE1
 11317                           indf2	equ	0xFDF
 11318                           postinc2	equ	0xFDE
 11319                           fsr2h	equ	0xFDA
 11320                           fsr2l	equ	0xFD9
 11321                           status	equ	0xFD8
 11322                           
 11323 ;; *************** function _Message_Send_Frame_LDR_OFF *****************
 11324 ;; Defined at:
 11325 ;;		line 845 in file "2_April_TestMain.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:   10
 11346 ;; This function calls:
 11347 ;;		_Delayms
 11348 ;;		_Sprint
 11349 ;; This function is called by:
 11350 ;;		_main
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text52
 11355  011AB2                     __ptext52:
 11356                           	opt stack 0
 11357  011AB2                     _Message_Send_Frame_LDR_OFF:
 11358                           	opt stack 20
 11359                           
 11360                           ;2_April_TestMain.c: 846: Delayms(2);
 11361                           
 11362                           ;incstack = 0
 11363  011AB2  0E00               	movlw	0
 11364  011AB4  0101               	movlb	1	; () banked
 11365  011AB6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11366  011AB8  0E02               	movlw	2
 11367  011ABA  6FD8               	movwf	Delayms@time& (0+255),b
 11368  011ABC  EC0D  F093         	call	_Delayms	;wreg free
 11369                           
 11370                           ;2_April_TestMain.c: 847: Sprint(&SMS_format,10);
 11371  011AC0  0ECB               	movlw	low _SMS_format
 11372  011AC2  0101               	movlb	1	; () banked
 11373  011AC4  6FDE               	movwf	Sprint@datas& (0+255),b
 11374  011AC6  0E00               	movlw	high _SMS_format
 11375  011AC8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11376  011ACA  0E0A               	movlw	10
 11377  011ACC  6FE0               	movwf	Sprint@length& (0+255),b
 11378  011ACE  EC36  F091         	call	_Sprint	;wreg free
 11379                           
 11380                           ;2_April_TestMain.c: 848: Delayms(2);
 11381  011AD2  0E00               	movlw	0
 11382  011AD4  0101               	movlb	1	; () banked
 11383  011AD6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11384  011AD8  0E02               	movlw	2
 11385  011ADA  6FD8               	movwf	Delayms@time& (0+255),b
 11386  011ADC  EC0D  F093         	call	_Delayms	;wreg free
 11387                           
 11388                           ;2_April_TestMain.c: 849: Sprint(&SEND_SMS,21);
 11389  011AE0  0E7F               	movlw	low _SEND_SMS
 11390  011AE2  0101               	movlb	1	; () banked
 11391  011AE4  6FDE               	movwf	Sprint@datas& (0+255),b
 11392  011AE6  0E01               	movlw	high _SEND_SMS
 11393  011AE8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11394  011AEA  0E15               	movlw	21
 11395  011AEC  6FE0               	movwf	Sprint@length& (0+255),b
 11396  011AEE  EC36  F091         	call	_Sprint	;wreg free
 11397                           
 11398                           ;2_April_TestMain.c: 850: Delayms(2);
 11399  011AF2  0E00               	movlw	0
 11400  011AF4  0101               	movlb	1	; () banked
 11401  011AF6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11402  011AF8  0E02               	movlw	2
 11403  011AFA  6FD8               	movwf	Delayms@time& (0+255),b
 11404  011AFC  EC0D  F093         	call	_Delayms	;wreg free
 11405                           
 11406                           ;2_April_TestMain.c: 851: Sprint(& Message5,24);
 11407  011B00  0E0F               	movlw	low _Message5
 11408  011B02  0101               	movlb	1	; () banked
 11409  011B04  6FDE               	movwf	Sprint@datas& (0+255),b
 11410  011B06  0E01               	movlw	high _Message5
 11411  011B08  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11412  011B0A  0E18               	movlw	24
 11413  011B0C  6FE0               	movwf	Sprint@length& (0+255),b
 11414  011B0E  EC36  F091         	call	_Sprint	;wreg free
 11415                           
 11416                           ;2_April_TestMain.c: 852: Delayms(2);
 11417  011B12  0E00               	movlw	0
 11418  011B14  0101               	movlb	1	; () banked
 11419  011B16  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11420  011B18  0E02               	movlw	2
 11421  011B1A  6FD8               	movwf	Delayms@time& (0+255),b
 11422  011B1C  EC0D  F093         	call	_Delayms	;wreg free
 11423                           
 11424                           ;2_April_TestMain.c: 853: Sprint(&Message3,32);
 11425  011B20  0EB8               	movlw	low _Message3
 11426  011B22  0101               	movlb	1	; () banked
 11427  011B24  6FDE               	movwf	Sprint@datas& (0+255),b
 11428  011B26  0EFD               	movlw	high _Message3
 11429  011B28  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11430  011B2A  0E20               	movlw	32
 11431  011B2C  6FE0               	movwf	Sprint@length& (0+255),b
 11432  011B2E  EC36  F091         	call	_Sprint	;wreg free
 11433                           
 11434                           ;2_April_TestMain.c: 854: Delayms(2);
 11435  011B32  0E00               	movlw	0
 11436  011B34  0101               	movlb	1	; () banked
 11437  011B36  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11438  011B38  0E02               	movlw	2
 11439  011B3A  6FD8               	movwf	Delayms@time& (0+255),b
 11440  011B3C  EC0D  F093         	call	_Delayms	;wreg free
 11441                           
 11442                           ;2_April_TestMain.c: 855: Sprint(&send,3);
 11443  011B40  0EE3               	movlw	low _send
 11444  011B42  0101               	movlb	1	; () banked
 11445  011B44  6FDE               	movwf	Sprint@datas& (0+255),b
 11446  011B46  0E00               	movlw	high _send
 11447  011B48  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11448  011B4A  0E03               	movlw	3
 11449  011B4C  6FE0               	movwf	Sprint@length& (0+255),b
 11450  011B4E  EC36  F091         	call	_Sprint	;wreg free
 11451                           
 11452                           ;2_April_TestMain.c: 856: Delayms(2);
 11453  011B52  0E00               	movlw	0
 11454  011B54  0101               	movlb	1	; () banked
 11455  011B56  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11456  011B58  0E02               	movlw	2
 11457  011B5A  6FD8               	movwf	Delayms@time& (0+255),b
 11458  011B5C  EC0D  F093         	call	_Delayms	;wreg free
 11459  011B60  0012               	return		;funcret
 11460  011B62                     __end_of_Message_Send_Frame_LDR_OFF:
 11461                           	opt stack 0
 11462                           tblptru	equ	0xFF8
 11463                           tblptrh	equ	0xFF7
 11464                           tblptrl	equ	0xFF6
 11465                           tablat	equ	0xFF5
 11466                           prodh	equ	0xFF4
 11467                           prodl	equ	0xFF3
 11468                           intcon	equ	0xFF2
 11469                           intcon2	equ	0xFF1
 11470                           postinc0	equ	0xFEE
 11471                           wreg	equ	0xFE8
 11472                           indf1	equ	0xFE7
 11473                           postdec1	equ	0xFE5
 11474                           fsr1h	equ	0xFE2
 11475                           fsr1l	equ	0xFE1
 11476                           indf2	equ	0xFDF
 11477                           postinc2	equ	0xFDE
 11478                           fsr2h	equ	0xFDA
 11479                           fsr2l	equ	0xFD9
 11480                           status	equ	0xFD8
 11481                           
 11482 ;; *************** function _Message_Send_Frame_3 *****************
 11483 ;; Defined at:
 11484 ;;		line 821 in file "2_April_TestMain.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;		None
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;Total ram usage:        0 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:   10
 11505 ;; This function calls:
 11506 ;;		_Delayms
 11507 ;;		_Sprint
 11508 ;; This function is called by:
 11509 ;;		_main
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text53
 11514  011E72                     __ptext53:
 11515                           	opt stack 0
 11516  011E72                     _Message_Send_Frame_3:
 11517                           	opt stack 20
 11518                           
 11519                           ;2_April_TestMain.c: 822: Delayms(2);
 11520                           
 11521                           ;incstack = 0
 11522  011E72  0E00               	movlw	0
 11523  011E74  0101               	movlb	1	; () banked
 11524  011E76  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11525  011E78  0E02               	movlw	2
 11526  011E7A  6FD8               	movwf	Delayms@time& (0+255),b
 11527  011E7C  EC0D  F093         	call	_Delayms	;wreg free
 11528                           
 11529                           ;2_April_TestMain.c: 823: Sprint(&SMS_format,10);
 11530  011E80  0ECB               	movlw	low _SMS_format
 11531  011E82  0101               	movlb	1	; () banked
 11532  011E84  6FDE               	movwf	Sprint@datas& (0+255),b
 11533  011E86  0E00               	movlw	high _SMS_format
 11534  011E88  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11535  011E8A  0E0A               	movlw	10
 11536  011E8C  6FE0               	movwf	Sprint@length& (0+255),b
 11537  011E8E  EC36  F091         	call	_Sprint	;wreg free
 11538                           
 11539                           ;2_April_TestMain.c: 824: Delayms(2);
 11540  011E92  0E00               	movlw	0
 11541  011E94  0101               	movlb	1	; () banked
 11542  011E96  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11543  011E98  0E02               	movlw	2
 11544  011E9A  6FD8               	movwf	Delayms@time& (0+255),b
 11545  011E9C  EC0D  F093         	call	_Delayms	;wreg free
 11546                           
 11547                           ;2_April_TestMain.c: 825: Sprint(&SEND_SMS,21);
 11548  011EA0  0E7F               	movlw	low _SEND_SMS
 11549  011EA2  0101               	movlb	1	; () banked
 11550  011EA4  6FDE               	movwf	Sprint@datas& (0+255),b
 11551  011EA6  0E01               	movlw	high _SEND_SMS
 11552  011EA8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11553  011EAA  0E15               	movlw	21
 11554  011EAC  6FE0               	movwf	Sprint@length& (0+255),b
 11555  011EAE  EC36  F091         	call	_Sprint	;wreg free
 11556                           
 11557                           ;2_April_TestMain.c: 826: Delayms(2);
 11558  011EB2  0E00               	movlw	0
 11559  011EB4  0101               	movlb	1	; () banked
 11560  011EB6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11561  011EB8  0E02               	movlw	2
 11562  011EBA  6FD8               	movwf	Delayms@time& (0+255),b
 11563  011EBC  EC0D  F093         	call	_Delayms	;wreg free
 11564                           
 11565                           ;2_April_TestMain.c: 827: Sprint(&Emeregency3,23);
 11566  011EC0  0E27               	movlw	low _Emeregency3
 11567  011EC2  0101               	movlb	1	; () banked
 11568  011EC4  6FDE               	movwf	Sprint@datas& (0+255),b
 11569  011EC6  0E01               	movlw	high _Emeregency3
 11570  011EC8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11571  011ECA  0E17               	movlw	23
 11572  011ECC  6FE0               	movwf	Sprint@length& (0+255),b
 11573  011ECE  EC36  F091         	call	_Sprint	;wreg free
 11574                           
 11575                           ;2_April_TestMain.c: 828: Delayms(2);
 11576  011ED2  0E00               	movlw	0
 11577  011ED4  0101               	movlb	1	; () banked
 11578  011ED6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11579  011ED8  0E02               	movlw	2
 11580  011EDA  6FD8               	movwf	Delayms@time& (0+255),b
 11581  011EDC  EC0D  F093         	call	_Delayms	;wreg free
 11582                           
 11583                           ;2_April_TestMain.c: 829: Sprint(&send,3);
 11584  011EE0  0EE3               	movlw	low _send
 11585  011EE2  0101               	movlb	1	; () banked
 11586  011EE4  6FDE               	movwf	Sprint@datas& (0+255),b
 11587  011EE6  0E00               	movlw	high _send
 11588  011EE8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11589  011EEA  0E03               	movlw	3
 11590  011EEC  6FE0               	movwf	Sprint@length& (0+255),b
 11591  011EEE  EC36  F091         	call	_Sprint	;wreg free
 11592                           
 11593                           ;2_April_TestMain.c: 830: Delayms(2);
 11594  011EF2  0E00               	movlw	0
 11595  011EF4  0101               	movlb	1	; () banked
 11596  011EF6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11597  011EF8  0E02               	movlw	2
 11598  011EFA  6FD8               	movwf	Delayms@time& (0+255),b
 11599  011EFC  EC0D  F093         	call	_Delayms	;wreg free
 11600  011F00  0012               	return		;funcret
 11601  011F02                     __end_of_Message_Send_Frame_3:
 11602                           	opt stack 0
 11603                           tblptru	equ	0xFF8
 11604                           tblptrh	equ	0xFF7
 11605                           tblptrl	equ	0xFF6
 11606                           tablat	equ	0xFF5
 11607                           prodh	equ	0xFF4
 11608                           prodl	equ	0xFF3
 11609                           intcon	equ	0xFF2
 11610                           intcon2	equ	0xFF1
 11611                           postinc0	equ	0xFEE
 11612                           wreg	equ	0xFE8
 11613                           indf1	equ	0xFE7
 11614                           postdec1	equ	0xFE5
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           indf2	equ	0xFDF
 11618                           postinc2	equ	0xFDE
 11619                           fsr2h	equ	0xFDA
 11620                           fsr2l	equ	0xFD9
 11621                           status	equ	0xFD8
 11622                           
 11623 ;; *************** function _Message_Send_Frame_2 *****************
 11624 ;; Defined at:
 11625 ;;		line 810 in file "2_April_TestMain.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;		None
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;		None
 11630 ;; Return value:  Size  Location     Type
 11631 ;;                  1    wreg      void 
 11632 ;; Registers used:
 11633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11634 ;; Tracked objects:
 11635 ;;		On entry : 0/0
 11636 ;;		On exit  : 0/0
 11637 ;;		Unchanged: 0/0
 11638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;Total ram usage:        0 bytes
 11644 ;; Hardware stack levels used:    1
 11645 ;; Hardware stack levels required when called:   10
 11646 ;; This function calls:
 11647 ;;		_Delayms
 11648 ;;		_Sprint
 11649 ;; This function is called by:
 11650 ;;		_main
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text54
 11655  011F02                     __ptext54:
 11656                           	opt stack 0
 11657  011F02                     _Message_Send_Frame_2:
 11658                           	opt stack 20
 11659                           
 11660                           ;2_April_TestMain.c: 811: Delayms(2);
 11661                           
 11662                           ;incstack = 0
 11663  011F02  0E00               	movlw	0
 11664  011F04  0101               	movlb	1	; () banked
 11665  011F06  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11666  011F08  0E02               	movlw	2
 11667  011F0A  6FD8               	movwf	Delayms@time& (0+255),b
 11668  011F0C  EC0D  F093         	call	_Delayms	;wreg free
 11669                           
 11670                           ;2_April_TestMain.c: 812: Sprint(&SMS_format,10);
 11671  011F10  0ECB               	movlw	low _SMS_format
 11672  011F12  0101               	movlb	1	; () banked
 11673  011F14  6FDE               	movwf	Sprint@datas& (0+255),b
 11674  011F16  0E00               	movlw	high _SMS_format
 11675  011F18  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11676  011F1A  0E0A               	movlw	10
 11677  011F1C  6FE0               	movwf	Sprint@length& (0+255),b
 11678  011F1E  EC36  F091         	call	_Sprint	;wreg free
 11679                           
 11680                           ;2_April_TestMain.c: 813: Delayms(2);
 11681  011F22  0E00               	movlw	0
 11682  011F24  0101               	movlb	1	; () banked
 11683  011F26  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11684  011F28  0E02               	movlw	2
 11685  011F2A  6FD8               	movwf	Delayms@time& (0+255),b
 11686  011F2C  EC0D  F093         	call	_Delayms	;wreg free
 11687                           
 11688                           ;2_April_TestMain.c: 814: Sprint(&SEND_SMS,21);
 11689  011F30  0E7F               	movlw	low _SEND_SMS
 11690  011F32  0101               	movlb	1	; () banked
 11691  011F34  6FDE               	movwf	Sprint@datas& (0+255),b
 11692  011F36  0E01               	movlw	high _SEND_SMS
 11693  011F38  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11694  011F3A  0E15               	movlw	21
 11695  011F3C  6FE0               	movwf	Sprint@length& (0+255),b
 11696  011F3E  EC36  F091         	call	_Sprint	;wreg free
 11697                           
 11698                           ;2_April_TestMain.c: 815: Delayms(2);
 11699  011F42  0E00               	movlw	0
 11700  011F44  0101               	movlb	1	; () banked
 11701  011F46  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11702  011F48  0E02               	movlw	2
 11703  011F4A  6FD8               	movwf	Delayms@time& (0+255),b
 11704  011F4C  EC0D  F093         	call	_Delayms	;wreg free
 11705                           
 11706                           ;2_April_TestMain.c: 816: Sprint(&Emeregency2,22);
 11707  011F50  0E54               	movlw	low _Emeregency2
 11708  011F52  0101               	movlb	1	; () banked
 11709  011F54  6FDE               	movwf	Sprint@datas& (0+255),b
 11710  011F56  0E01               	movlw	high _Emeregency2
 11711  011F58  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11712  011F5A  0E16               	movlw	22
 11713  011F5C  6FE0               	movwf	Sprint@length& (0+255),b
 11714  011F5E  EC36  F091         	call	_Sprint	;wreg free
 11715                           
 11716                           ;2_April_TestMain.c: 817: Delayms(2);
 11717  011F62  0E00               	movlw	0
 11718  011F64  0101               	movlb	1	; () banked
 11719  011F66  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11720  011F68  0E02               	movlw	2
 11721  011F6A  6FD8               	movwf	Delayms@time& (0+255),b
 11722  011F6C  EC0D  F093         	call	_Delayms	;wreg free
 11723                           
 11724                           ;2_April_TestMain.c: 818: Sprint(&send,3);
 11725  011F70  0EE3               	movlw	low _send
 11726  011F72  0101               	movlb	1	; () banked
 11727  011F74  6FDE               	movwf	Sprint@datas& (0+255),b
 11728  011F76  0E00               	movlw	high _send
 11729  011F78  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11730  011F7A  0E03               	movlw	3
 11731  011F7C  6FE0               	movwf	Sprint@length& (0+255),b
 11732  011F7E  EC36  F091         	call	_Sprint	;wreg free
 11733                           
 11734                           ;2_April_TestMain.c: 819: Delayms(2);
 11735  011F82  0E00               	movlw	0
 11736  011F84  0101               	movlb	1	; () banked
 11737  011F86  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11738  011F88  0E02               	movlw	2
 11739  011F8A  6FD8               	movwf	Delayms@time& (0+255),b
 11740  011F8C  EC0D  F093         	call	_Delayms	;wreg free
 11741  011F90  0012               	return		;funcret
 11742  011F92                     __end_of_Message_Send_Frame_2:
 11743                           	opt stack 0
 11744                           tblptru	equ	0xFF8
 11745                           tblptrh	equ	0xFF7
 11746                           tblptrl	equ	0xFF6
 11747                           tablat	equ	0xFF5
 11748                           prodh	equ	0xFF4
 11749                           prodl	equ	0xFF3
 11750                           intcon	equ	0xFF2
 11751                           intcon2	equ	0xFF1
 11752                           postinc0	equ	0xFEE
 11753                           wreg	equ	0xFE8
 11754                           indf1	equ	0xFE7
 11755                           postdec1	equ	0xFE5
 11756                           fsr1h	equ	0xFE2
 11757                           fsr1l	equ	0xFE1
 11758                           indf2	equ	0xFDF
 11759                           postinc2	equ	0xFDE
 11760                           fsr2h	equ	0xFDA
 11761                           fsr2l	equ	0xFD9
 11762                           status	equ	0xFD8
 11763                           
 11764 ;; *************** function _Message_Send_Frame_1 *****************
 11765 ;; Defined at:
 11766 ;;		line 799 in file "2_April_TestMain.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;		None
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      void 
 11773 ;; Registers used:
 11774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;Total ram usage:        0 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; Hardware stack levels required when called:   10
 11787 ;; This function calls:
 11788 ;;		_Delayms
 11789 ;;		_Sprint
 11790 ;; This function is called by:
 11791 ;;		_main
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text55
 11796  011F92                     __ptext55:
 11797                           	opt stack 0
 11798  011F92                     _Message_Send_Frame_1:
 11799                           	opt stack 20
 11800                           
 11801                           ;2_April_TestMain.c: 800: Delayms(2);
 11802                           
 11803                           ;incstack = 0
 11804  011F92  0E00               	movlw	0
 11805  011F94  0101               	movlb	1	; () banked
 11806  011F96  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11807  011F98  0E02               	movlw	2
 11808  011F9A  6FD8               	movwf	Delayms@time& (0+255),b
 11809  011F9C  EC0D  F093         	call	_Delayms	;wreg free
 11810                           
 11811                           ;2_April_TestMain.c: 801: Sprint(&SMS_format,10);
 11812  011FA0  0ECB               	movlw	low _SMS_format
 11813  011FA2  0101               	movlb	1	; () banked
 11814  011FA4  6FDE               	movwf	Sprint@datas& (0+255),b
 11815  011FA6  0E00               	movlw	high _SMS_format
 11816  011FA8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11817  011FAA  0E0A               	movlw	10
 11818  011FAC  6FE0               	movwf	Sprint@length& (0+255),b
 11819  011FAE  EC36  F091         	call	_Sprint	;wreg free
 11820                           
 11821                           ;2_April_TestMain.c: 802: Delayms(2);
 11822  011FB2  0E00               	movlw	0
 11823  011FB4  0101               	movlb	1	; () banked
 11824  011FB6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11825  011FB8  0E02               	movlw	2
 11826  011FBA  6FD8               	movwf	Delayms@time& (0+255),b
 11827  011FBC  EC0D  F093         	call	_Delayms	;wreg free
 11828                           
 11829                           ;2_April_TestMain.c: 803: Sprint(&SEND_SMS,21);
 11830  011FC0  0E7F               	movlw	low _SEND_SMS
 11831  011FC2  0101               	movlb	1	; () banked
 11832  011FC4  6FDE               	movwf	Sprint@datas& (0+255),b
 11833  011FC6  0E01               	movlw	high _SEND_SMS
 11834  011FC8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11835  011FCA  0E15               	movlw	21
 11836  011FCC  6FE0               	movwf	Sprint@length& (0+255),b
 11837  011FCE  EC36  F091         	call	_Sprint	;wreg free
 11838                           
 11839                           ;2_April_TestMain.c: 804: Delayms(2);
 11840  011FD2  0E00               	movlw	0
 11841  011FD4  0101               	movlb	1	; () banked
 11842  011FD6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11843  011FD8  0E02               	movlw	2
 11844  011FDA  6FD8               	movwf	Delayms@time& (0+255),b
 11845  011FDC  EC0D  F093         	call	_Delayms	;wreg free
 11846                           
 11847                           ;2_April_TestMain.c: 805: Sprint(&Emeregency,21);
 11848  011FE0  0E6A               	movlw	low _Emeregency
 11849  011FE2  0101               	movlb	1	; () banked
 11850  011FE4  6FDE               	movwf	Sprint@datas& (0+255),b
 11851  011FE6  0E01               	movlw	high _Emeregency
 11852  011FE8  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11853  011FEA  0E15               	movlw	21
 11854  011FEC  6FE0               	movwf	Sprint@length& (0+255),b
 11855  011FEE  EC36  F091         	call	_Sprint	;wreg free
 11856                           
 11857                           ;2_April_TestMain.c: 806: Delayms(2);
 11858  011FF2  0E00               	movlw	0
 11859  011FF4  0101               	movlb	1	; () banked
 11860  011FF6  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11861  011FF8  0E02               	movlw	2
 11862  011FFA  6FD8               	movwf	Delayms@time& (0+255),b
 11863  011FFC  EC0D  F093         	call	_Delayms	;wreg free
 11864                           
 11865                           ;2_April_TestMain.c: 807: Sprint(&send,3);
 11866  012000  0EE3               	movlw	low _send
 11867  012002  0101               	movlb	1	; () banked
 11868  012004  6FDE               	movwf	Sprint@datas& (0+255),b
 11869  012006  0E00               	movlw	high _send
 11870  012008  6FDF               	movwf	(Sprint@datas+1)& (0+255),b
 11871  01200A  0E03               	movlw	3
 11872  01200C  6FE0               	movwf	Sprint@length& (0+255),b
 11873  01200E  EC36  F091         	call	_Sprint	;wreg free
 11874                           
 11875                           ;2_April_TestMain.c: 808: Delayms(2);
 11876  012012  0E00               	movlw	0
 11877  012014  0101               	movlb	1	; () banked
 11878  012016  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 11879  012018  0E02               	movlw	2
 11880  01201A  6FD8               	movwf	Delayms@time& (0+255),b
 11881  01201C  EC0D  F093         	call	_Delayms	;wreg free
 11882  012020  0012               	return		;funcret
 11883  012022                     __end_of_Message_Send_Frame_1:
 11884                           	opt stack 0
 11885                           tblptru	equ	0xFF8
 11886                           tblptrh	equ	0xFF7
 11887                           tblptrl	equ	0xFF6
 11888                           tablat	equ	0xFF5
 11889                           prodh	equ	0xFF4
 11890                           prodl	equ	0xFF3
 11891                           intcon	equ	0xFF2
 11892                           intcon2	equ	0xFF1
 11893                           postinc0	equ	0xFEE
 11894                           wreg	equ	0xFE8
 11895                           indf1	equ	0xFE7
 11896                           postdec1	equ	0xFE5
 11897                           fsr1h	equ	0xFE2
 11898                           fsr1l	equ	0xFE1
 11899                           indf2	equ	0xFDF
 11900                           postinc2	equ	0xFDE
 11901                           fsr2h	equ	0xFDA
 11902                           fsr2l	equ	0xFD9
 11903                           status	equ	0xFD8
 11904                           
 11905 ;; *************** function _Sprint *****************
 11906 ;; Defined at:
 11907 ;;		line 703 in file "2_April_TestMain.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  datas           2    6[BANK1 ] PTR unsigned char 
 11910 ;;		 -> Message6(37), Message3(32), send(2), SEND_SMS(21), 
 11911 ;;		 -> Call(6), Number(15), SMS_format(10), Message5(24), 
 11912 ;;		 -> Message4(22), Array(19), Emeregency3(23), Emeregency2(22), 
 11913 ;;		 -> Emeregency(21), SMSsender(13), 
 11914 ;;  length          1    8[BANK1 ] unsigned char 
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;  i               1   12[BANK1 ] unsigned char 
 11917 ;;  j               1   11[BANK1 ] unsigned char 
 11918 ;; Return value:  Size  Location     Type
 11919 ;;                  1    wreg      void 
 11920 ;; Registers used:
 11921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11922 ;; Tracked objects:
 11923 ;;		On entry : 0/0
 11924 ;;		On exit  : 0/0
 11925 ;;		Unchanged: 0/0
 11926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11927 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11929 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11930 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11931 ;;Total ram usage:        7 bytes
 11932 ;; Hardware stack levels used:    1
 11933 ;; Hardware stack levels required when called:    9
 11934 ;; This function calls:
 11935 ;;		_Delayms
 11936 ;; This function is called by:
 11937 ;;		_main
 11938 ;;		_Module_Init
 11939 ;;		_Message_Send_Frame_1
 11940 ;;		_Message_Send_Frame_2
 11941 ;;		_Message_Send_Frame_3
 11942 ;;		_Message_Send_Frame_LDR_ON
 11943 ;;		_Message_Send_Frame_LDR_OFF
 11944 ;;		_Message_Send_Frame_Parking_light_Board
 11945 ;;		_Calling
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text56
 11950  01226C                     __ptext56:
 11951                           	opt stack 0
 11952  01226C                     _Sprint:
 11953                           	opt stack 21
 11954                           
 11955                           ;2_April_TestMain.c: 705: unsigned char i=0,j=0;
 11956                           
 11957                           ;incstack = 0
 11958  01226C  0E00               	movlw	0
 11959  01226E  0101               	movlb	1	; () banked
 11960  012270  6FE4               	movwf	Sprint@i& (0+255),b
 11961  012272  0E00               	movlw	0
 11962  012274  6FE3               	movwf	Sprint@j& (0+255),b
 11963                           
 11964                           ;2_April_TestMain.c: 707: for(i=0;i<length;i++){
 11965  012276  0E00               	movlw	0
 11966  012278  6FE4               	movwf	Sprint@i& (0+255),b
 11967  01227A  D027               	goto	l1010
 11968  01227C                     
 11969                           ; BSR set to: 1
 11970                           ;2_April_TestMain.c: 708: TXREG = datas[i];
 11971                           
 11972                           ; BSR set to: 1
 11973  01227C  51E4               	movf	Sprint@i& (0+255),w,b
 11974  01227E  0D01               	mullw	1
 11975  012280  C1DE  F1E1         	movff	Sprint@datas,??_Sprint
 11976  012284  C1DF  F1E2         	movff	Sprint@datas+1,??_Sprint+1
 11977  012288  50F3               	movf	prodl,w,c
 11978  01228A  27E1               	addwf	??_Sprint& (0+255),f,b
 11979  01228C  50F4               	movf	prodh,w,c
 11980  01228E  23E2               	addwfc	(??_Sprint+1)& (0+255),f,b
 11981  012290  C1E1  FFF6         	movff	??_Sprint,tblptrl
 11982  012294  C1E2  FFF7         	movff	??_Sprint+1,tblptrh
 11983  012298  0E00               	movlw	low (__mediumconst shr (0+16))
 11984  01229A  6EF8               	movwf	tblptru,c
 11985  01229C  0E0F               	movlw	(high __ramtop+-1)
 11986  01229E  64F7               	cpfsgt	tblptrh,c
 11987  0122A0  D003               	bra	u3247
 11988  0122A2  0008               	tblrd		*
 11989  0122A4  50F5               	movf	tablat,w,c
 11990  0122A6  D005               	bra	u3240
 11991  0122A8                     u3247:
 11992  0122A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11993  0122AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11994  0122B0  50EF               	movf	indf0,w,c
 11995  0122B2                     u3240:
 11996  0122B2  6EAD               	movwf	4013,c	;volatile
 11997  0122B4  A89E               	btfss	3998,4,c	;volatile
 11998  0122B6  D7FE               	goto	l1013
 11999                           
 12000                           ;2_April_TestMain.c: 710: Delayms(50);
 12001  0122B8  0E00               	movlw	0
 12002  0122BA  0101               	movlb	1	; () banked
 12003  0122BC  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12004  0122BE  0E32               	movlw	50
 12005  0122C0  6FD8               	movwf	Delayms@time& (0+255),b
 12006  0122C2  EC0D  F093         	call	_Delayms	;wreg free
 12007  0122C6  0101               	movlb	1	; () banked
 12008  0122C8  2BE4               	incf	Sprint@i& (0+255),f,b
 12009  0122CA                     l1010:
 12010                           
 12011                           ; BSR set to: 1
 12012                           
 12013                           ; BSR set to: 1
 12014  0122CA  51E0               	movf	Sprint@length& (0+255),w,b
 12015  0122CC  5DE4               	subwf	Sprint@i& (0+255),w,b
 12016  0122CE  B0D8               	btfsc	status,0,c
 12017  0122D0  0012               	return	
 12018  0122D2  D7D4               	goto	l1011
 12019  0122D4                     __end_of_Sprint:
 12020                           	opt stack 0
 12021                           tblptru	equ	0xFF8
 12022                           tblptrh	equ	0xFF7
 12023                           tblptrl	equ	0xFF6
 12024                           tablat	equ	0xFF5
 12025                           prodh	equ	0xFF4
 12026                           prodl	equ	0xFF3
 12027                           intcon	equ	0xFF2
 12028                           intcon2	equ	0xFF1
 12029                           indf0	equ	0xFEF
 12030                           postinc0	equ	0xFEE
 12031                           fsr0h	equ	0xFEA
 12032                           fsr0l	equ	0xFE9
 12033                           wreg	equ	0xFE8
 12034                           indf1	equ	0xFE7
 12035                           postdec1	equ	0xFE5
 12036                           fsr1h	equ	0xFE2
 12037                           fsr1l	equ	0xFE1
 12038                           indf2	equ	0xFDF
 12039                           postinc2	equ	0xFDE
 12040                           fsr2h	equ	0xFDA
 12041                           fsr2l	equ	0xFD9
 12042                           status	equ	0xFD8
 12043                           
 12044 ;; *************** function _LcdInit *****************
 12045 ;; Defined at:
 12046 ;;		line 921 in file "2_April_TestMain.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      void 
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:   10
 12067 ;; This function calls:
 12068 ;;		_Delayms
 12069 ;;		_LcdCmd
 12070 ;; This function is called by:
 12071 ;;		_main
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text57
 12076  0123E4                     __ptext57:
 12077                           	opt stack 0
 12078  0123E4                     _LcdInit:
 12079                           	opt stack 20
 12080                           
 12081                           ;2_April_TestMain.c: 923: LcdCmd(0x38);
 12082                           
 12083                           ; BSR set to: 1
 12084                           ;incstack = 0
 12085  0123E4  0E38               	movlw	56
 12086  0123E6  ECD0  F094         	call	_LcdCmd
 12087                           
 12088                           ;2_April_TestMain.c: 924: Delayms(10);
 12089  0123EA  0E00               	movlw	0
 12090  0123EC  0101               	movlb	1	; () banked
 12091  0123EE  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12092  0123F0  0E0A               	movlw	10
 12093  0123F2  6FD8               	movwf	Delayms@time& (0+255),b
 12094  0123F4  EC0D  F093         	call	_Delayms	;wreg free
 12095                           
 12096                           ;2_April_TestMain.c: 925: LcdCmd(0x0E);
 12097  0123F8  0E0E               	movlw	14
 12098  0123FA  ECD0  F094         	call	_LcdCmd
 12099                           
 12100                           ;2_April_TestMain.c: 926: Delayms(10);
 12101  0123FE  0E00               	movlw	0
 12102  012400  0101               	movlb	1	; () banked
 12103  012402  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12104  012404  0E0A               	movlw	10
 12105  012406  6FD8               	movwf	Delayms@time& (0+255),b
 12106  012408  EC0D  F093         	call	_Delayms	;wreg free
 12107                           
 12108                           ;2_April_TestMain.c: 927: LcdCmd(0x01);
 12109  01240C  0E01               	movlw	1
 12110  01240E  ECD0  F094         	call	_LcdCmd
 12111                           
 12112                           ;2_April_TestMain.c: 928: Delayms(10);
 12113  012412  0E00               	movlw	0
 12114  012414  0101               	movlb	1	; () banked
 12115  012416  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12116  012418  0E0A               	movlw	10
 12117  01241A  6FD8               	movwf	Delayms@time& (0+255),b
 12118  01241C  EC0D  F093         	call	_Delayms	;wreg free
 12119                           
 12120                           ;2_April_TestMain.c: 929: LcdCmd(0x80);
 12121  012420  0E80               	movlw	128
 12122  012422  ECD0  F094         	call	_LcdCmd
 12123                           
 12124                           ;2_April_TestMain.c: 930: Delayms(10);
 12125  012426  0E00               	movlw	0
 12126  012428  0101               	movlb	1	; () banked
 12127  01242A  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12128  01242C  0E0A               	movlw	10
 12129  01242E  6FD8               	movwf	Delayms@time& (0+255),b
 12130  012430  EC0D  F093         	call	_Delayms	;wreg free
 12131  012434  0012               	return		;funcret
 12132  012436                     __end_of_LcdInit:
 12133                           	opt stack 0
 12134                           tblptru	equ	0xFF8
 12135                           tblptrh	equ	0xFF7
 12136                           tblptrl	equ	0xFF6
 12137                           tablat	equ	0xFF5
 12138                           prodh	equ	0xFF4
 12139                           prodl	equ	0xFF3
 12140                           intcon	equ	0xFF2
 12141                           intcon2	equ	0xFF1
 12142                           indf0	equ	0xFEF
 12143                           postinc0	equ	0xFEE
 12144                           fsr0h	equ	0xFEA
 12145                           fsr0l	equ	0xFE9
 12146                           wreg	equ	0xFE8
 12147                           indf1	equ	0xFE7
 12148                           postdec1	equ	0xFE5
 12149                           fsr1h	equ	0xFE2
 12150                           fsr1l	equ	0xFE1
 12151                           indf2	equ	0xFDF
 12152                           postinc2	equ	0xFDE
 12153                           fsr2h	equ	0xFDA
 12154                           fsr2l	equ	0xFD9
 12155                           status	equ	0xFD8
 12156                           
 12157 ;; *************** function _LcdCmd *****************
 12158 ;; Defined at:
 12159 ;;		line 906 in file "2_April_TestMain.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  value           1    wreg     unsigned char 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  value           1    6[BANK1 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;Total ram usage:        1 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    9
 12180 ;; This function calls:
 12181 ;;		_Delayms
 12182 ;; This function is called by:
 12183 ;;		_main
 12184 ;;		_lcd_off_cursor
 12185 ;;		_lcd_clear
 12186 ;;		_LcdInit
 12187 ;;		_LcdDisplay
 12188 ;;		_scroll
 12189 ;;		_stop_scroll
 12190 ;;		_lcd_on_cursor
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text58
 12195  0129A0                     __ptext58:
 12196                           	opt stack 0
 12197  0129A0                     _LcdCmd:
 12198                           	opt stack 20
 12199                           
 12200                           ;incstack = 0
 12201                           ;LcdCmd@value stored from wreg
 12202  0129A0  0101               	movlb	1	; () banked
 12203  0129A2  6FDE               	movwf	LcdCmd@value& (0+255),b
 12204                           
 12205                           ;2_April_TestMain.c: 908: PORTE=value;
 12206  0129A4  C1DE  FF84         	movff	LcdCmd@value,3972	;volatile
 12207                           
 12208                           ;2_April_TestMain.c: 909: PORTFbits.RF1=0;
 12209  0129A8  9285               	bcf	3973,1,c	;volatile
 12210                           
 12211                           ;2_April_TestMain.c: 910: __nop();
 12212  0129AA  F000               	nop	
 12213                           
 12214                           ;2_April_TestMain.c: 911: PORTFbits.RF3=1;
 12215  0129AC  8685               	bsf	3973,3,c	;volatile
 12216                           
 12217                           ;2_April_TestMain.c: 912: Delayms(5);
 12218  0129AE  0E00               	movlw	0
 12219  0129B0  0101               	movlb	1	; () banked
 12220  0129B2  6FD9               	movwf	(Delayms@time+1)& (0+255),b
 12221  0129B4  0E05               	movlw	5
 12222  0129B6  6FD8               	movwf	Delayms@time& (0+255),b
 12223  0129B8  EC0D  F093         	call	_Delayms	;wreg free
 12224                           
 12225                           ;2_April_TestMain.c: 913: PORTFbits.RF3=0;
 12226  0129BC  9685               	bcf	3973,3,c	;volatile
 12227  0129BE  0012               	return		;funcret
 12228  0129C0                     __end_of_LcdCmd:
 12229                           	opt stack 0
 12230                           tblptru	equ	0xFF8
 12231                           tblptrh	equ	0xFF7
 12232                           tblptrl	equ	0xFF6
 12233                           tablat	equ	0xFF5
 12234                           prodh	equ	0xFF4
 12235                           prodl	equ	0xFF3
 12236                           intcon	equ	0xFF2
 12237                           intcon2	equ	0xFF1
 12238                           indf0	equ	0xFEF
 12239                           postinc0	equ	0xFEE
 12240                           fsr0h	equ	0xFEA
 12241                           fsr0l	equ	0xFE9
 12242                           wreg	equ	0xFE8
 12243                           indf1	equ	0xFE7
 12244                           postdec1	equ	0xFE5
 12245                           fsr1h	equ	0xFE2
 12246                           fsr1l	equ	0xFE1
 12247                           indf2	equ	0xFDF
 12248                           postinc2	equ	0xFDE
 12249                           fsr2h	equ	0xFDA
 12250                           fsr2l	equ	0xFD9
 12251                           status	equ	0xFD8
 12252                           
 12253 ;; *************** function _Delayms *****************
 12254 ;; Defined at:
 12255 ;;		line 480 in file "zigbee.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;  time            2    0[BANK1 ] unsigned int 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  l               2    4[BANK1 ] int 
 12260 ;;  k               2    2[BANK1 ] int 
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  1    wreg      void 
 12263 ;; Registers used:
 12264 ;;		wreg, status,2, status,0
 12265 ;; Tracked objects:
 12266 ;;		On entry : 0/0
 12267 ;;		On exit  : 0/0
 12268 ;;		Unchanged: 0/0
 12269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12270 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;Total ram usage:        6 bytes
 12275 ;; Hardware stack levels used:    1
 12276 ;; Hardware stack levels required when called:    8
 12277 ;; This function calls:
 12278 ;;		Nothing
 12279 ;; This function is called by:
 12280 ;;		_main
 12281 ;;		_Sprint
 12282 ;;		_SprintRom
 12283 ;;		_DeleteAllSms
 12284 ;;		_Message_Send_Frame_1
 12285 ;;		_Message_Send_Frame_2
 12286 ;;		_Message_Send_Frame_3
 12287 ;;		_Message_Send_Frame_LDR_ON
 12288 ;;		_Message_Send_Frame_LDR_OFF
 12289 ;;		_Message_Send_Frame_Parking_light_Board
 12290 ;;		_LcdData
 12291 ;;		_LcdCmd
 12292 ;;		_LcdInit
 12293 ;;		_Calling
 12294 ;;		_stop_scroll
 12295 ;;		_LcdReady
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text59
 12300  01261A                     __ptext59:
 12301                           	opt stack 0
 12302  01261A                     _Delayms:
 12303                           	opt stack 20
 12304                           
 12305                           ;zigbee.c: 482: int k,l;
 12306                           ;zigbee.c: 483: for(k=0;k<time;k++)
 12307                           
 12308                           ;incstack = 0
 12309  01261A  0E00               	movlw	0
 12310  01261C  0101               	movlb	1	; () banked
 12311  01261E  6FDB               	movwf	(Delayms@k+1)& (0+255),b
 12312  012620  0E00               	movlw	0
 12313  012622  6FDA               	movwf	Delayms@k& (0+255),b
 12314  012624  D011               	goto	l514
 12315  012626                     
 12316                           ; BSR set to: 1
 12317                           ;zigbee.c: 484: for(l=0;l<=500;l++);
 12318                           
 12319                           ; BSR set to: 1
 12320  012626  0E00               	movlw	0
 12321  012628  6FDD               	movwf	(Delayms@l+1)& (0+255),b
 12322  01262A  0E00               	movlw	0
 12323  01262C  6FDC               	movwf	Delayms@l& (0+255),b
 12324  01262E                     l5631:
 12325                           
 12326                           ; BSR set to: 1
 12327  01262E  BFDD               	btfsc	(Delayms@l+1)& (0+255),7,b
 12328  012630  D006               	goto	l516
 12329  012632  0EF5               	movlw	245
 12330  012634  5DDC               	subwf	Delayms@l& (0+255),w,b
 12331  012636  0E01               	movlw	1
 12332  012638  59DD               	subwfb	(Delayms@l+1)& (0+255),w,b
 12333  01263A  B0D8               	btfsc	status,0,c
 12334  01263C  D003               	goto	u3080
 12335  01263E                     l516:
 12336                           
 12337                           ; BSR set to: 1
 12338                           
 12339                           ; BSR set to: 1
 12340  01263E  4BDC               	infsnz	Delayms@l& (0+255),f,b
 12341  012640  2BDD               	incf	(Delayms@l+1)& (0+255),f,b
 12342  012642  D7F5               	goto	l5631
 12343  012644                     u3080:
 12344                           
 12345                           ; BSR set to: 1
 12346                           
 12347                           ; BSR set to: 1
 12348  012644  4BDA               	infsnz	Delayms@k& (0+255),f,b
 12349  012646  2BDB               	incf	(Delayms@k+1)& (0+255),f,b
 12350  012648                     l514:
 12351                           
 12352                           ; BSR set to: 1
 12353                           
 12354                           ; BSR set to: 1
 12355  012648  51D8               	movf	Delayms@time& (0+255),w,b
 12356  01264A  5DDA               	subwf	Delayms@k& (0+255),w,b
 12357  01264C  51D9               	movf	(Delayms@time+1)& (0+255),w,b
 12358  01264E  59DB               	subwfb	(Delayms@k+1)& (0+255),w,b
 12359  012650  A0D8               	btfss	status,0,c
 12360  012652  D7E9               	goto	l515
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;zigbee.c: 485: __nop();
 12364  012654  F000               	nop	
 12365                           
 12366                           ;zigbee.c: 486: __nop();
 12367  012656  F000               	nop	
 12368  012658  0012               	return		;funcret
 12369  01265A                     __end_of_Delayms:
 12370                           	opt stack 0
 12371                           tblptru	equ	0xFF8
 12372                           tblptrh	equ	0xFF7
 12373                           tblptrl	equ	0xFF6
 12374                           tablat	equ	0xFF5
 12375                           prodh	equ	0xFF4
 12376                           prodl	equ	0xFF3
 12377                           intcon	equ	0xFF2
 12378                           intcon2	equ	0xFF1
 12379                           indf0	equ	0xFEF
 12380                           postinc0	equ	0xFEE
 12381                           fsr0h	equ	0xFEA
 12382                           fsr0l	equ	0xFE9
 12383                           wreg	equ	0xFE8
 12384                           indf1	equ	0xFE7
 12385                           postdec1	equ	0xFE5
 12386                           fsr1h	equ	0xFE2
 12387                           fsr1l	equ	0xFE1
 12388                           indf2	equ	0xFDF
 12389                           postinc2	equ	0xFDE
 12390                           fsr2h	equ	0xFDA
 12391                           fsr2l	equ	0xFD9
 12392                           status	equ	0xFD8
 12393                           
 12394 ;; *************** function _InitSPI *****************
 12395 ;; Defined at:
 12396 ;;		line 442 in file "zigbee.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;		None
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;		None
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg, status,2, status,0, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:    9
 12417 ;; This function calls:
 12418 ;;		_delay
 12419 ;; This function is called by:
 12420 ;;		_main
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           	psect	text60
 12425  0128F4                     __ptext60:
 12426                           	opt stack 0
 12427  0128F4                     _InitSPI:
 12428                           	opt stack 21
 12429                           
 12430                           ;zigbee.c: 443: SSP1CON1bits.SSPM0 = 0;
 12431                           
 12432                           ;incstack = 0
 12433  0128F4  90C6               	bcf	4038,0,c	;volatile
 12434                           
 12435                           ;zigbee.c: 444: SSP1CON1bits.SSPM1 = 0;
 12436  0128F6  92C6               	bcf	4038,1,c	;volatile
 12437                           
 12438                           ;zigbee.c: 445: SSP1CON1bits.SSPM2 = 0;
 12439  0128F8  94C6               	bcf	4038,2,c	;volatile
 12440                           
 12441                           ;zigbee.c: 446: SSP1CON1bits.SSPM3 = 0;
 12442  0128FA  96C6               	bcf	4038,3,c	;volatile
 12443                           
 12444                           ;zigbee.c: 448: TRISCbits.TRISC5 = 0;
 12445  0128FC  9A94               	bcf	3988,5,c	;volatile
 12446                           
 12447                           ;zigbee.c: 449: TRISCbits.TRISC3 = 0;
 12448  0128FE  9694               	bcf	3988,3,c	;volatile
 12449                           
 12450                           ;zigbee.c: 450: SSP1CON1bits.SSPEN = 1;
 12451  012900  8AC6               	bsf	4038,5,c	;volatile
 12452                           
 12453                           ;zigbee.c: 453: SSP1STATbits.SMP = 1;
 12454  012902  8EC7               	bsf	4039,7,c	;volatile
 12455                           
 12456                           ;zigbee.c: 454: SSP1CON1bits.CKP = 0;
 12457  012904  98C6               	bcf	4038,4,c	;volatile
 12458                           
 12459                           ;zigbee.c: 455: SSP1STATbits.CKE = 1;
 12460  012906  8CC7               	bsf	4039,6,c	;volatile
 12461                           
 12462                           ;zigbee.c: 456: delay(10);
 12463  012908  0E00               	movlw	0
 12464  01290A  0101               	movlb	1	; () banked
 12465  01290C  6FD9               	movwf	(delay@dly+1)& (0+255),b
 12466  01290E  0E0A               	movlw	10
 12467  012910  6FD8               	movwf	delay@dly& (0+255),b
 12468  012912  ECE0  F094         	call	_delay	;wreg free
 12469  012916  0012               	return		;funcret
 12470  012918                     __end_of_InitSPI:
 12471                           	opt stack 0
 12472                           tblptru	equ	0xFF8
 12473                           tblptrh	equ	0xFF7
 12474                           tblptrl	equ	0xFF6
 12475                           tablat	equ	0xFF5
 12476                           prodh	equ	0xFF4
 12477                           prodl	equ	0xFF3
 12478                           intcon	equ	0xFF2
 12479                           intcon2	equ	0xFF1
 12480                           indf0	equ	0xFEF
 12481                           postinc0	equ	0xFEE
 12482                           fsr0h	equ	0xFEA
 12483                           fsr0l	equ	0xFE9
 12484                           wreg	equ	0xFE8
 12485                           indf1	equ	0xFE7
 12486                           postdec1	equ	0xFE5
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           fsr2h	equ	0xFDA
 12492                           fsr2l	equ	0xFD9
 12493                           status	equ	0xFD8
 12494                           
 12495 ;; *************** function _delay *****************
 12496 ;; Defined at:
 12497 ;;		line 472 in file "zigbee.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;  dly             2    0[BANK1 ] unsigned int 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;  l               2    2[BANK1 ] unsigned int 
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  1    wreg      void 
 12504 ;; Registers used:
 12505 ;;		wreg, status,2, status,0
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12511 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;Total ram usage:        4 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    8
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		_InitSPI
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text61
 12526  0129C0                     __ptext61:
 12527                           	opt stack 0
 12528  0129C0                     _delay:
 12529                           	opt stack 21
 12530                           
 12531                           ;zigbee.c: 473: unsigned int l;
 12532                           ;zigbee.c: 474: for(l=0;l<dly;l++);
 12533                           
 12534                           ;incstack = 0
 12535  0129C0  0E00               	movlw	0
 12536  0129C2  0101               	movlb	1	; () banked
 12537  0129C4  6FDB               	movwf	(delay@l+1)& (0+255),b
 12538  0129C6  0E00               	movlw	0
 12539  0129C8  6FDA               	movwf	delay@l& (0+255),b
 12540  0129CA  D002               	goto	l502
 12541  0129CC                     
 12542                           ; BSR set to: 1
 12543                           
 12544                           ; BSR set to: 1
 12545  0129CC  4BDA               	infsnz	delay@l& (0+255),f,b
 12546  0129CE  2BDB               	incf	(delay@l+1)& (0+255),f,b
 12547  0129D0                     l502:
 12548                           
 12549                           ; BSR set to: 1
 12550                           
 12551                           ; BSR set to: 1
 12552  0129D0  51D8               	movf	delay@dly& (0+255),w,b
 12553  0129D2  5DDA               	subwf	delay@l& (0+255),w,b
 12554  0129D4  51D9               	movf	(delay@dly+1)& (0+255),w,b
 12555  0129D6  59DB               	subwfb	(delay@l+1)& (0+255),w,b
 12556  0129D8  B0D8               	btfsc	status,0,c
 12557  0129DA  0012               	return	
 12558  0129DC  D7F7               	goto	l503
 12559  0129DE                     __end_of_delay:
 12560                           	opt stack 0
 12561                           tblptru	equ	0xFF8
 12562                           tblptrh	equ	0xFF7
 12563                           tblptrl	equ	0xFF6
 12564                           tablat	equ	0xFF5
 12565                           prodh	equ	0xFF4
 12566                           prodl	equ	0xFF3
 12567                           intcon	equ	0xFF2
 12568                           intcon2	equ	0xFF1
 12569                           indf0	equ	0xFEF
 12570                           postinc0	equ	0xFEE
 12571                           fsr0h	equ	0xFEA
 12572                           fsr0l	equ	0xFE9
 12573                           wreg	equ	0xFE8
 12574                           indf1	equ	0xFE7
 12575                           postdec1	equ	0xFE5
 12576                           fsr1h	equ	0xFE2
 12577                           fsr1l	equ	0xFE1
 12578                           indf2	equ	0xFDF
 12579                           postinc2	equ	0xFDE
 12580                           fsr2h	equ	0xFDA
 12581                           fsr2l	equ	0xFD9
 12582                           status	equ	0xFD8
 12583                           
 12584 ;; *************** function _ID_Conversion *****************
 12585 ;; Defined at:
 12586 ;;		line 1043 in file "2_April_TestMain.c"
 12587 ;; Parameters:    Size  Location     Type
 12588 ;;		None
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;  num1            1    4[BANK1 ] unsigned char 
 12591 ;;  num2            1    3[BANK1 ] unsigned char 
 12592 ;;  Id_Number       1    2[BANK1 ] unsigned char 
 12593 ;;  num3            1    1[BANK1 ] unsigned char 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      unsigned char 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0, prodl, prodh
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12604 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12605 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12606 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12607 ;;Total ram usage:        5 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:    8
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_main
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           	psect	text62
 12618  011C10                     __ptext62:
 12619                           	opt stack 0
 12620  011C10                     _ID_Conversion:
 12621                           	opt stack 22
 12622                           
 12623                           ;2_April_TestMain.c: 1044: unsigned char num1=0,num2=0,num3=0;
 12624                           
 12625                           ; BSR set to: 1
 12626                           ;incstack = 0
 12627  011C10  0E00               	movlw	0
 12628  011C12  0101               	movlb	1	; () banked
 12629  011C14  6FDC               	movwf	ID_Conversion@num1& (0+255),b
 12630  011C16  0E00               	movlw	0
 12631  011C18  6FDB               	movwf	ID_Conversion@num2& (0+255),b
 12632  011C1A  0E00               	movlw	0
 12633  011C1C  6FD9               	movwf	ID_Conversion@num3& (0+255),b
 12634                           
 12635                           ;2_April_TestMain.c: 1045: unsigned char Id_Number=0;
 12636  011C1E  0E00               	movlw	0
 12637  011C20  6FDA               	movwf	ID_Conversion@Id_Number& (0+255),b
 12638                           
 12639                           ;2_April_TestMain.c: 1049: if((SMS[10] != 0) && (SMS[11]==0x0d)){
 12640  011C22  0100               	movlb	0	; () banked
 12641  011C24  517C               	movf	(_SMS+10)& (0+255),w,b
 12642  011C26  B4D8               	btfsc	status,2,c
 12643  011C28  D00B               	goto	l1138
 12644                           
 12645                           ; BSR set to: 0
 12646  011C2A  0E0D               	movlw	13
 12647  011C2C  197D               	xorwf	(_SMS+11)& (0+255),w,b
 12648  011C2E  A4D8               	btfss	status,2,c
 12649  011C30  D007               	goto	l1138
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;2_April_TestMain.c: 1050: num1=SMS[10]-0x30;
 12653  011C32  517C               	movf	(_SMS+10)& (0+255),w,b
 12654  011C34  0FD0               	addlw	208
 12655  011C36  0101               	movlb	1	; () banked
 12656  011C38  6FDC               	movwf	ID_Conversion@num1& (0+255),b
 12657                           
 12658                           ; BSR set to: 1
 12659                           ;2_April_TestMain.c: 1051: Id_Number=num1;
 12660  011C3A  C1DC  F1DA         	movff	ID_Conversion@num1,ID_Conversion@Id_Number
 12661                           
 12662                           ;2_April_TestMain.c: 1052: }
 12663  011C3E  D03A               	goto	l1142
 12664  011C40                     l1138:
 12665                           
 12666                           ;2_April_TestMain.c: 1053: else if((SMS[10] != 0) && (SMS[12]==0x0d)){
 12667                           
 12668                           ; BSR set to: 1
 12669  011C40  0100               	movlb	0	; () banked
 12670  011C42  517C               	movf	(_SMS+10)& (0+255),w,b
 12671  011C44  B4D8               	btfsc	status,2,c
 12672  011C46  D014               	goto	l1140
 12673                           
 12674                           ; BSR set to: 0
 12675  011C48  0E0D               	movlw	13
 12676  011C4A  197E               	xorwf	(_SMS+12)& (0+255),w,b
 12677  011C4C  A4D8               	btfss	status,2,c
 12678  011C4E  D010               	goto	l1140
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;2_April_TestMain.c: 1054: num1=SMS[10]-0x30;
 12682  011C50  517C               	movf	(_SMS+10)& (0+255),w,b
 12683  011C52  0FD0               	addlw	208
 12684  011C54  0101               	movlb	1	; () banked
 12685  011C56  6FDC               	movwf	ID_Conversion@num1& (0+255),b
 12686                           
 12687                           ;2_April_TestMain.c: 1055: num2=SMS[11]-0x30;
 12688  011C58  0100               	movlb	0	; () banked
 12689  011C5A  517D               	movf	(_SMS+11)& (0+255),w,b
 12690  011C5C  0FD0               	addlw	208
 12691  011C5E  0101               	movlb	1	; () banked
 12692  011C60  6FDB               	movwf	ID_Conversion@num2& (0+255),b
 12693                           
 12694                           ; BSR set to: 1
 12695                           ;2_April_TestMain.c: 1056: num1 = (num1*10);
 12696  011C62  51DC               	movf	ID_Conversion@num1& (0+255),w,b
 12697  011C64  0D0A               	mullw	10
 12698  011C66  CFF3 F1DC          	movff	prodl,ID_Conversion@num1
 12699                           
 12700                           ; BSR set to: 1
 12701                           ;2_April_TestMain.c: 1057: Id_Number=(num1 + num2);
 12702  011C6A  51DC               	movf	ID_Conversion@num1& (0+255),w,b
 12703  011C6C  25DB               	addwf	ID_Conversion@num2& (0+255),w,b
 12704  011C6E  D021               	goto	L8
 12705  011C70                     l1140:
 12706                           
 12707                           ;2_April_TestMain.c: 1060: else if((SMS[10] !=0) && (SMS[13]==0x0d)){
 12708                           
 12709                           ; BSR set to: 1
 12710  011C70  0100               	movlb	0	; () banked
 12711  011C72  517C               	movf	(_SMS+10)& (0+255),w,b
 12712  011C74  B4D8               	btfsc	status,2,c
 12713  011C76  D01E               	goto	l1142
 12714                           
 12715                           ; BSR set to: 0
 12716  011C78  0E0D               	movlw	13
 12717  011C7A  197F               	xorwf	(_SMS+13)& (0+255),w,b
 12718  011C7C  A4D8               	btfss	status,2,c
 12719  011C7E  D01A               	goto	l1142
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;2_April_TestMain.c: 1061: num1=SMS[10]-0x30;
 12723  011C80  517C               	movf	(_SMS+10)& (0+255),w,b
 12724  011C82  0FD0               	addlw	208
 12725  011C84  0101               	movlb	1	; () banked
 12726  011C86  6FDC               	movwf	ID_Conversion@num1& (0+255),b
 12727                           
 12728                           ;2_April_TestMain.c: 1062: num2=SMS[11]-0x30;
 12729  011C88  0100               	movlb	0	; () banked
 12730  011C8A  517D               	movf	(_SMS+11)& (0+255),w,b
 12731  011C8C  0FD0               	addlw	208
 12732  011C8E  0101               	movlb	1	; () banked
 12733  011C90  6FDB               	movwf	ID_Conversion@num2& (0+255),b
 12734                           
 12735                           ;2_April_TestMain.c: 1063: num3=SMS[12]-0x30;
 12736  011C92  0100               	movlb	0	; () banked
 12737  011C94  517E               	movf	(_SMS+12)& (0+255),w,b
 12738  011C96  0FD0               	addlw	208
 12739  011C98  0101               	movlb	1	; () banked
 12740  011C9A  6FD9               	movwf	ID_Conversion@num3& (0+255),b
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;2_April_TestMain.c: 1064: num1 = ((num1 * 100)+(num2 * 10));
 12744  011C9C  51DB               	movf	ID_Conversion@num2& (0+255),w,b
 12745  011C9E  0D0A               	mullw	10
 12746  011CA0  CFF3 F1D8          	movff	prodl,??_ID_Conversion
 12747  011CA4  51DC               	movf	ID_Conversion@num1& (0+255),w,b
 12748  011CA6  0D64               	mullw	100
 12749  011CA8  50F3               	movf	prodl,w,c
 12750  011CAA  25D8               	addwf	??_ID_Conversion& (0+255),w,b
 12751  011CAC  6FDC               	movwf	ID_Conversion@num1& (0+255),b
 12752                           
 12753                           ; BSR set to: 1
 12754                           ;2_April_TestMain.c: 1065: Id_Number=num1 + num3;
 12755  011CAE  51DC               	movf	ID_Conversion@num1& (0+255),w,b
 12756  011CB0  25D9               	addwf	ID_Conversion@num3& (0+255),w,b
 12757  011CB2                     L8:
 12758  011CB2  6FDA               	movwf	ID_Conversion@Id_Number& (0+255),b
 12759  011CB4                     l1142:
 12760                           
 12761                           ;2_April_TestMain.c: 1067: }
 12762                           ;2_April_TestMain.c: 1069: return Id_Number;
 12763                           
 12764                           ; BSR set to: 1
 12765                           
 12766                           ; BSR set to: 1
 12767                           
 12768                           ; BSR set to: 1
 12769  011CB4  0101               	movlb	1	; () banked
 12770  011CB6  51DA               	movf	ID_Conversion@Id_Number& (0+255),w,b
 12771  011CB8  0012               	return	
 12772  011CBA                     __end_of_ID_Conversion:
 12773                           	opt stack 0
 12774                           tblptru	equ	0xFF8
 12775                           tblptrh	equ	0xFF7
 12776                           tblptrl	equ	0xFF6
 12777                           tablat	equ	0xFF5
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           intcon2	equ	0xFF1
 12782                           indf0	equ	0xFEF
 12783                           postinc0	equ	0xFEE
 12784                           fsr0h	equ	0xFEA
 12785                           fsr0l	equ	0xFE9
 12786                           wreg	equ	0xFE8
 12787                           indf1	equ	0xFE7
 12788                           postdec1	equ	0xFE5
 12789                           fsr1h	equ	0xFE2
 12790                           fsr1l	equ	0xFE1
 12791                           indf2	equ	0xFDF
 12792                           postinc2	equ	0xFDE
 12793                           fsr2h	equ	0xFDA
 12794                           fsr2l	equ	0xFD9
 12795                           status	equ	0xFD8
 12796                           
 12797 ;; *************** function _Clear_Data *****************
 12798 ;; Defined at:
 12799 ;;		line 4 in file "zigbee.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;		None
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;  n               2    0[BANK1 ] unsigned int 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1    wreg      void 
 12806 ;; Registers used:
 12807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12814 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12816 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12817 ;;Total ram usage:        2 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:    8
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		_main
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text63
 12828  012714                     __ptext63:
 12829                           	opt stack 0
 12830  012714                     _Clear_Data:
 12831                           	opt stack 22
 12832                           
 12833                           ;zigbee.c: 5: unsigned int n=0;
 12834                           
 12835                           ; BSR set to: 1
 12836                           ;incstack = 0
 12837  012714  0E00               	movlw	0
 12838  012716  0101               	movlb	1	; () banked
 12839  012718  6FD9               	movwf	(Clear_Data@n+1)& (0+255),b
 12840  01271A  0E00               	movlw	0
 12841  01271C  6FD8               	movwf	Clear_Data@n& (0+255),b
 12842                           
 12843                           ;zigbee.c: 6: for(n=0;n<=5;n++){
 12844  01271E  0E00               	movlw	0
 12845  012720  6FD9               	movwf	(Clear_Data@n+1)& (0+255),b
 12846  012722  0E00               	movlw	0
 12847  012724  6FD8               	movwf	Clear_Data@n& (0+255),b
 12848  012726                     l5991:
 12849                           
 12850                           ; BSR set to: 1
 12851  012726  51D9               	movf	(Clear_Data@n+1)& (0+255),w,b
 12852  012728  E10F               	bnz	l348
 12853  01272A  0E06               	movlw	6
 12854  01272C  5DD8               	subwf	Clear_Data@n& (0+255),w,b
 12855  01272E  B0D8               	btfsc	status,0,c
 12856  012730  0012               	return	
 12857                           
 12858                           ; BSR set to: 1
 12859                           ;zigbee.c: 7: DATA_RX[n]=0;
 12860                           
 12861                           ; BSR set to: 1
 12862                           
 12863                           ; BSR set to: 1
 12864  012732  0EB2               	movlw	low _DATA_RX
 12865  012734  25D8               	addwf	Clear_Data@n& (0+255),w,b
 12866  012736  6ED9               	movwf	fsr2l,c
 12867  012738  0E00               	movlw	high _DATA_RX
 12868  01273A  21D9               	addwfc	(Clear_Data@n+1)& (0+255),w,b
 12869  01273C  6EDA               	movwf	fsr2h,c
 12870  01273E  0E00               	movlw	0
 12871  012740  6EDF               	movwf	indf2,c
 12872                           
 12873                           ; BSR set to: 1
 12874  012742  4BD8               	infsnz	Clear_Data@n& (0+255),f,b
 12875  012744  2BD9               	incf	(Clear_Data@n+1)& (0+255),f,b
 12876  012746  D7EF               	goto	l5991
 12877  012748                     l348:
 12878                           
 12879                           ; BSR set to: 1
 12880  012748  0012               	return		;funcret
 12881  01274A                     __end_of_Clear_Data:
 12882                           	opt stack 0
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           intcon	equ	0xFF2
 12890                           intcon2	equ	0xFF1
 12891                           indf0	equ	0xFEF
 12892                           postinc0	equ	0xFEE
 12893                           fsr0h	equ	0xFEA
 12894                           fsr0l	equ	0xFE9
 12895                           wreg	equ	0xFE8
 12896                           indf1	equ	0xFE7
 12897                           postdec1	equ	0xFE5
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           fsr2h	equ	0xFDA
 12903                           fsr2l	equ	0xFD9
 12904                           status	equ	0xFD8
 12905                           
 12906 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 12907 ;; Defined at:
 12908 ;;		line 154 in file "2_April_TestMain.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;		None
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;		None
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  1    wreg      void 
 12915 ;; Registers used:
 12916 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12924 ;;      Temps:          0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12925 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12926 ;;Total ram usage:       22 bytes
 12927 ;; Hardware stack levels used:    1
 12928 ;; Hardware stack levels required when called:    7
 12929 ;; This function calls:
 12930 ;;		_TMR0_ISR
 12931 ;; This function is called by:
 12932 ;;		Interrupt level 1
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           	psect	intcodelo
 12937  000018                     __pintcodelo:
 12938                           	opt stack 0
 12939  000018                     _INTERRUPT_InterruptManagerLow:
 12940                           	opt stack 18
 12941                           
 12942                           ; BSR set to: 1
 12943                           ;incstack = 0
 12944  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12945  00001A  CFD8 F0EA          	movff	status,??_INTERRUPT_InterruptManagerLow+1
 12946  00001E  CFE8 F0EB          	movff	wreg,??_INTERRUPT_InterruptManagerLow+2
 12947  000022  CFE0 F0EC          	movff	bsr,??_INTERRUPT_InterruptManagerLow+3
 12948  000026  CFFA F0ED          	movff	pclath,??_INTERRUPT_InterruptManagerLow+4
 12949  00002A  CFFB F0EE          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+5
 12950  00002E  CFE9 F0EF          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+6
 12951  000032  CFEA F0F0          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+7
 12952  000036  CFE1 F0F1          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+8
 12953  00003A  CFE2 F0F2          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+9
 12954  00003E  CFD9 F0F3          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+10
 12955  000042  CFDA F0F4          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+11
 12956  000046  CFF3 F0F5          	movff	prodl,??_INTERRUPT_InterruptManagerLow+12
 12957  00004A  CFF4 F0F6          	movff	prodh,??_INTERRUPT_InterruptManagerLow+13
 12958  00004E  CFF6 F0F7          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+14
 12959  000052  CFF7 F0F8          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+15
 12960  000056  CFF8 F0F9          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+16
 12961  00005A  CFF5 F0FA          	movff	tablat,??_INTERRUPT_InterruptManagerLow+17
 12962  00005E  C049  F0FB         	movff	btemp,??_INTERRUPT_InterruptManagerLow+18
 12963  000062  C04A  F0FC         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+19
 12964  000066  C04B  F0FD         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+20
 12965  00006A  C04C  F0FE         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+21
 12966                           
 12967                           ;2_April_TestMain.c: 157: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 12968  00006E  BAF2               	btfsc	intcon,5,c	;volatile
 12969  000070  A4F2               	btfss	intcon,2,c	;volatile
 12970  000072  D018               	goto	i1l928
 12971                           
 12972                           ;2_April_TestMain.c: 158: {
 12973                           ;2_April_TestMain.c: 159: Nilp++;
 12974  000074  2A04               	incf	_Nilp,f,c
 12975                           
 12976                           ;2_April_TestMain.c: 160: if(Nilp>=200){
 12977  000076  0EC7               	movlw	199
 12978  000078  6404               	cpfsgt	_Nilp,c
 12979  00007A  D012               	goto	i1l929
 12980                           
 12981                           ;2_April_TestMain.c: 161: Nilp=0;
 12982  00007C  0E00               	movlw	0
 12983  00007E  6E04               	movwf	_Nilp,c
 12984                           
 12985                           ;2_April_TestMain.c: 162: PORTAbits.RA3=~PORTAbits.RA3;
 12986  000080  A680               	btfss	3968,3,c	;volatile
 12987  000082  D002               	goto	i1u386_20
 12988  000084  0E01               	movlw	1
 12989  000086  D001               	goto	i1u386_26
 12990  000088                     i1u386_20:
 12991  000088  0E00               	movlw	0
 12992  00008A                     i1u386_26:
 12993  00008A  0AFF               	xorlw	255
 12994  00008C  0100               	movlb	0	; () banked
 12995  00008E  6FE9               	movwf	??_INTERRUPT_InterruptManagerLow& (0+255),b
 12996  000090  47E9               	rlncf	??_INTERRUPT_InterruptManagerLow& (0+255),f,b
 12997  000092  47E9               	rlncf	??_INTERRUPT_InterruptManagerLow& (0+255),f,b
 12998  000094  47E9               	rlncf	??_INTERRUPT_InterruptManagerLow& (0+255),f,b
 12999  000096  5080               	movf	3968,w,c	;volatile
 13000  000098  19E9               	xorwf	??_INTERRUPT_InterruptManagerLow& (0+255),w,b
 13001  00009A  0BF7               	andlw	-9
 13002  00009C  19E9               	xorwf	??_INTERRUPT_InterruptManagerLow& (0+255),w,b
 13003  00009E  6E80               	movwf	3968,c	;volatile
 13004  0000A0                     i1l929:
 13005                           
 13006                           ;2_April_TestMain.c: 163: }
 13007                           ;2_April_TestMain.c: 165: TMR0_ISR();
 13008                           
 13009                           ; BSR set to: 0
 13010  0000A0  EC42  F094         	call	_TMR0_ISR	;wreg free
 13011  0000A4                     i1l928:
 13012                           
 13013                           ;2_April_TestMain.c: 167: else
 13014                           ;2_April_TestMain.c: 168: {
 13015  0000A4  C0FE  F04C         	movff	??_INTERRUPT_InterruptManagerLow+21,btemp+3
 13016  0000A8  C0FD  F04B         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+2
 13017  0000AC  C0FC  F04A         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+1
 13018  0000B0  C0FB  F049         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp
 13019  0000B4  C0FA  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+17,tablat
 13020  0000B8  C0F9  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+16,tblptru
 13021  0000BC  C0F8  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptrh
 13022  0000C0  C0F7  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrl
 13023  0000C4  C0F6  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+13,prodh
 13024  0000C8  C0F5  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+12,prodl
 13025  0000CC  C0F4  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+11,fsr2h
 13026  0000D0  C0F3  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2l
 13027  0000D4  C0F2  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr1h
 13028  0000D8  C0F1  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1l
 13029  0000DC  C0F0  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr0h
 13030  0000E0  C0EF  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0l
 13031  0000E4  C0EE  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+5,pclatu
 13032  0000E8  C0ED  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+4,pclath
 13033  0000EC  C0EC  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+3,bsr
 13034  0000F0  C0EB  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+2,wreg
 13035  0000F4  C0EA  FFD8         	movff	??_INTERRUPT_InterruptManagerLow+1,status
 13036  0000F8  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13037  0000FA  0010               	retfie	
 13038  0000FC                     __end_of_INTERRUPT_InterruptManagerLow:
 13039                           	opt stack 0
 13040                           pclatu	equ	0xFFB
 13041                           pclath	equ	0xFFA
 13042                           tblptru	equ	0xFF8
 13043                           tblptrh	equ	0xFF7
 13044                           tblptrl	equ	0xFF6
 13045                           tablat	equ	0xFF5
 13046                           prodh	equ	0xFF4
 13047                           prodl	equ	0xFF3
 13048                           intcon	equ	0xFF2
 13049                           intcon2	equ	0xFF1
 13050                           indf0	equ	0xFEF
 13051                           postinc0	equ	0xFEE
 13052                           fsr0h	equ	0xFEA
 13053                           fsr0l	equ	0xFE9
 13054                           wreg	equ	0xFE8
 13055                           indf1	equ	0xFE7
 13056                           postdec1	equ	0xFE5
 13057                           fsr1h	equ	0xFE2
 13058                           fsr1l	equ	0xFE1
 13059                           bsr	equ	0xFE0
 13060                           indf2	equ	0xFDF
 13061                           postinc2	equ	0xFDE
 13062                           fsr2h	equ	0xFDA
 13063                           fsr2l	equ	0xFD9
 13064                           status	equ	0xFD8
 13065                           
 13066 ;; *************** function _TMR0_ISR *****************
 13067 ;; Defined at:
 13068 ;;		line 128 in file "mcc_generated_files/tmr0.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;		None
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;		None
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      void 
 13075 ;; Registers used:
 13076 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 0/0
 13079 ;;		On exit  : 0/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;Total ram usage:        0 bytes
 13087 ;; Hardware stack levels used:    1
 13088 ;; Hardware stack levels required when called:    6
 13089 ;; This function calls:
 13090 ;;		_TMR0_CallBack
 13091 ;; This function is called by:
 13092 ;;		_INTERRUPT_InterruptManagerLow
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text65
 13097  012884                     __ptext65:
 13098                           	opt stack 0
 13099  012884                     _TMR0_ISR:
 13100                           	opt stack 18
 13101                           
 13102                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
 13103                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 13104                           
 13105                           ;incstack = 0
 13106  012884  94F2               	bcf	intcon,2,c	;volatile
 13107                           
 13108                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
 13109  012886  C024  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 13110                           
 13111                           ;tmr0.c: 139: if (++CountCallBack >= 10)
 13112  01288A  0100               	movlb	0	; () banked
 13113  01288C  4B99               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 13114  01288E  2B9A               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13115  012890  519A               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13116  012892  E104               	bnz	i1u328_20
 13117  012894  0E0A               	movlw	10
 13118  012896  5D99               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 13119  012898  A0D8               	btfss	status,0,c
 13120  01289A  0012               	return	
 13121  01289C                     i1u328_20:
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;tmr0.c: 140: {
 13125                           ;tmr0.c: 142: TMR0_CallBack();
 13126  01289C  EC8C  F094         	call	_TMR0_CallBack	;wreg free
 13127                           
 13128                           ;tmr0.c: 145: CountCallBack = 0;
 13129  0128A0  0E00               	movlw	0
 13130  0128A2  0100               	movlb	0	; () banked
 13131  0128A4  6F9A               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 13132  0128A6  0E00               	movlw	0
 13133  0128A8  6F99               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 13134  0128AA  0012               	return	
 13135  0128AC                     __end_of_TMR0_ISR:
 13136                           	opt stack 0
 13137                           pclatu	equ	0xFFB
 13138                           pclath	equ	0xFFA
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           intcon2	equ	0xFF1
 13147                           indf0	equ	0xFEF
 13148                           postinc0	equ	0xFEE
 13149                           fsr0h	equ	0xFEA
 13150                           fsr0l	equ	0xFE9
 13151                           wreg	equ	0xFE8
 13152                           indf1	equ	0xFE7
 13153                           postdec1	equ	0xFE5
 13154                           fsr1h	equ	0xFE2
 13155                           fsr1l	equ	0xFE1
 13156                           bsr	equ	0xFE0
 13157                           indf2	equ	0xFDF
 13158                           postinc2	equ	0xFDE
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _TMR0_CallBack *****************
 13164 ;; Defined at:
 13165 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;		None
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;		None
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1    wreg      void 
 13172 ;; Registers used:
 13173 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;Total ram usage:        0 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    5
 13186 ;; This function calls:
 13187 ;;		Absolute function
 13188 ;;		_TMR0_DefaultInterruptHandler
 13189 ;; This function is called by:
 13190 ;;		_TMR0_ISR
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text66
 13195  012918                     __ptext66:
 13196                           	opt stack 0
 13197  012918                     _TMR0_CallBack:
 13198                           	opt stack 18
 13199                           
 13200                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;incstack = 0
 13204  012918  0100               	movlb	0	; () banked
 13205  01291A  5185               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13206  01291C  1186               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13207  01291E  1187               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 13208  012920  B4D8               	btfsc	status,2,c
 13209  012922  0012               	return	
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;tmr0.c: 156: {
 13213                           ;tmr0.c: 157: TMR0_InterruptHandler();
 13214  012924  D801               	call	i1u318_28
 13215  012926  0012               	return	
 13216  012928                     i1u318_28:
 13217  012928  0005               	push	
 13218  01292A  6EFA               	movwf	pclath,c
 13219  01292C  5185               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13220  01292E  6EFD               	movwf	tosl,c
 13221  012930  5186               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13222  012932  6EFE               	movwf	tosh,c
 13223  012934  5187               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 13224  012936  6EFF               	movwf	tosu,c
 13225  012938  50FA               	movf	pclath,w,c
 13226  01293A  0012               	return		;indir
 13227  01293C                     __end_of_TMR0_CallBack:
 13228                           	opt stack 0
 13229                           tosu	equ	0xFFF
 13230                           tosh	equ	0xFFE
 13231                           tosl	equ	0xFFD
 13232                           pclatu	equ	0xFFB
 13233                           pclath	equ	0xFFA
 13234                           tblptru	equ	0xFF8
 13235                           tblptrh	equ	0xFF7
 13236                           tblptrl	equ	0xFF6
 13237                           tablat	equ	0xFF5
 13238                           prodh	equ	0xFF4
 13239                           prodl	equ	0xFF3
 13240                           intcon	equ	0xFF2
 13241                           intcon2	equ	0xFF1
 13242                           indf0	equ	0xFEF
 13243                           postinc0	equ	0xFEE
 13244                           fsr0h	equ	0xFEA
 13245                           fsr0l	equ	0xFE9
 13246                           wreg	equ	0xFE8
 13247                           indf1	equ	0xFE7
 13248                           postdec1	equ	0xFE5
 13249                           fsr1h	equ	0xFE2
 13250                           fsr1l	equ	0xFE1
 13251                           bsr	equ	0xFE0
 13252                           indf2	equ	0xFDF
 13253                           postinc2	equ	0xFDE
 13254                           fsr2h	equ	0xFDA
 13255                           fsr2l	equ	0xFD9
 13256                           status	equ	0xFD8
 13257                           
 13258 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13259 ;; Defined at:
 13260 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		None
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    4
 13281 ;; This function calls:
 13282 ;;		Nothing
 13283 ;; This function is called by:
 13284 ;;		_TMR0_Initialize
 13285 ;;		_TMR0_CallBack
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text67
 13290  012B4E                     __ptext67:
 13291                           	opt stack 0
 13292  012B4E                     _TMR0_DefaultInterruptHandler:
 13293                           	opt stack 18
 13294                           
 13295                           ;incstack = 0
 13296  012B4E  0012               	return		;funcret
 13297  012B50                     __end_of_TMR0_DefaultInterruptHandler:
 13298                           	opt stack 0
 13299                           tosu	equ	0xFFF
 13300                           tosh	equ	0xFFE
 13301                           tosl	equ	0xFFD
 13302                           pclatu	equ	0xFFB
 13303                           pclath	equ	0xFFA
 13304                           tblptru	equ	0xFF8
 13305                           tblptrh	equ	0xFF7
 13306                           tblptrl	equ	0xFF6
 13307                           tablat	equ	0xFF5
 13308                           prodh	equ	0xFF4
 13309                           prodl	equ	0xFF3
 13310                           intcon	equ	0xFF2
 13311                           intcon2	equ	0xFF1
 13312                           indf0	equ	0xFEF
 13313                           postinc0	equ	0xFEE
 13314                           fsr0h	equ	0xFEA
 13315                           fsr0l	equ	0xFE9
 13316                           wreg	equ	0xFE8
 13317                           indf1	equ	0xFE7
 13318                           postdec1	equ	0xFE5
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           bsr	equ	0xFE0
 13322                           indf2	equ	0xFDF
 13323                           postinc2	equ	0xFDE
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 13329 ;; Defined at:
 13330 ;;		line 112 in file "2_April_TestMain.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;		None
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13346 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13347 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;Total ram usage:       20 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    3
 13351 ;; This function calls:
 13352 ;;		_read_RX_FIFO
 13353 ;;		i2_Xor_check
 13354 ;;		i2_read_ZIGBEE_short
 13355 ;; This function is called by:
 13356 ;;		Interrupt level 2
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           	psect	intcode
 13361  000008                     __pintcode:
 13362                           	opt stack 0
 13363  000008                     _INTERRUPT_InterruptManagerHigh:
 13364                           	opt stack 18
 13365                           
 13366                           ;incstack = 0
 13367  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13368  00000A  EF9F  F08B         	goto	int_func
 13369                           tosu	equ	0xFFF
 13370                           tosh	equ	0xFFE
 13371                           tosl	equ	0xFFD
 13372                           pclatu	equ	0xFFB
 13373                           pclath	equ	0xFFA
 13374                           tblptru	equ	0xFF8
 13375                           tblptrh	equ	0xFF7
 13376                           tblptrl	equ	0xFF6
 13377                           tablat	equ	0xFF5
 13378                           prodh	equ	0xFF4
 13379                           prodl	equ	0xFF3
 13380                           intcon	equ	0xFF2
 13381                           intcon2	equ	0xFF1
 13382                           indf0	equ	0xFEF
 13383                           postinc0	equ	0xFEE
 13384                           fsr0h	equ	0xFEA
 13385                           fsr0l	equ	0xFE9
 13386                           wreg	equ	0xFE8
 13387                           indf1	equ	0xFE7
 13388                           postdec1	equ	0xFE5
 13389                           fsr1h	equ	0xFE2
 13390                           fsr1l	equ	0xFE1
 13391                           bsr	equ	0xFE0
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           fsr2h	equ	0xFDA
 13395                           fsr2l	equ	0xFD9
 13396                           status	equ	0xFD8
 13397                           
 13398                           	psect	intcode_body
 13399  01173E                     __pintcode_body:
 13400                           	opt stack 18
 13401  01173E                     int_func:
 13402                           	opt stack 18
 13403  01173E  CFFA F037          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
 13404  011742  CFFB F038          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
 13405  011746  CFE9 F039          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
 13406  01174A  CFEA F03A          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
 13407  01174E  CFE1 F03B          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
 13408  011752  CFE2 F03C          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
 13409  011756  CFD9 F03D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
 13410  01175A  CFDA F03E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
 13411  01175E  CFF3 F03F          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
 13412  011762  CFF4 F040          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
 13413  011766  CFF6 F041          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
 13414  01176A  CFF7 F042          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
 13415  01176E  CFF8 F043          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
 13416  011772  CFF5 F044          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
 13417  011776  C049  F045         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
 13418  01177A  C04A  F046         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
 13419  01177E  C04B  F047         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
 13420  011782  C04C  F048         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
 13421                           
 13422                           ;2_April_TestMain.c: 115: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 13423  011786  B8F2               	btfsc	intcon,4,c	;volatile
 13424  011788  A2F2               	btfss	intcon,1,c	;volatile
 13425  01178A  D020               	goto	i2l914
 13426                           
 13427                           ;2_April_TestMain.c: 116: {
 13428                           ;2_April_TestMain.c: 117: INTTRUPT=read_ZIGBEE_short(0X31);
 13429  01178C  0E31               	movlw	49
 13430  01178E  ECAF  F094         	call	i2_read_ZIGBEE_short
 13431  011792  6E23               	movwf	_INTTRUPT,c
 13432                           
 13433                           ;2_April_TestMain.c: 119: if((INTTRUPT & 0x08)==0x08){
 13434  011794  A623               	btfss	_INTTRUPT,3,c
 13435  011796  D018               	goto	i2l915
 13436                           
 13437                           ;2_April_TestMain.c: 120: INTCONbits.GIE=0;
 13438  011798  9EF2               	bcf	intcon,7,c	;volatile
 13439                           
 13440                           ;2_April_TestMain.c: 121: read_RX_FIFO();
 13441  01179A  ECBF  F087         	call	_read_RX_FIFO	;wreg free
 13442                           
 13443                           ;2_April_TestMain.c: 122: INTCONbits.GIE=1;
 13444  01179E  8EF2               	bsf	intcon,7,c	;volatile
 13445                           
 13446                           ;2_April_TestMain.c: 123: CRC=Xor_check(DATA_RX,3);
 13447  0117A0  0EB2               	movlw	low _DATA_RX
 13448  0117A2  6E25               	movwf	i2Xor_check@data_value,c
 13449  0117A4  0E00               	movlw	high _DATA_RX
 13450  0117A6  6E26               	movwf	i2Xor_check@data_value+1,c
 13451  0117A8  0E03               	movlw	3
 13452  0117AA  6E27               	movwf	i2Xor_check@length,c
 13453  0117AC  EC2D  F093         	call	i2_Xor_check	;wreg free
 13454  0117B0  C025  F091         	movff	?i2_Xor_check,_CRC
 13455  0117B4  C026  F092         	movff	?i2_Xor_check+1,_CRC+1
 13456                           
 13457                           ;2_April_TestMain.c: 124: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]);
 13458  0117B8  0100               	movlb	0	; () banked
 13459  0117BA  51B6               	movf	(_DATA_RX+4)& (0+255),w,b
 13460  0117BC  6E35               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
 13461  0117BE  51B5               	movf	(_DATA_RX+3)& (0+255),w,b
 13462  0117C0  6F95               	movwf	_Rv_CRC& (0+255),b
 13463  0117C2  C035  F096         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;2_April_TestMain.c: 125: __nop();
 13467  0117C6  F000               	nop	
 13468  0117C8                     i2l915:
 13469                           
 13470                           ;2_April_TestMain.c: 126: }
 13471                           ;2_April_TestMain.c: 128: INTCONbits.INT0IF=0;
 13472  0117C8  92F2               	bcf	intcon,1,c	;volatile
 13473                           
 13474                           ;2_April_TestMain.c: 129: }
 13475  0117CA  D037               	goto	i2l917
 13476  0117CC                     i2l914:
 13477                           
 13478                           ;2_April_TestMain.c: 130: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13479  0117CC  BA9D               	btfsc	3997,5,c	;volatile
 13480  0117CE  AA9E               	btfss	3998,5,c	;volatile
 13481  0117D0  D034               	goto	i2l917
 13482                           
 13483                           ;2_April_TestMain.c: 131: {
 13484                           ;2_April_TestMain.c: 133: RxBuffer[id] = RCREG;
 13485  0117D2  5003               	movf	_id,w,c
 13486  0117D4  0D01               	mullw	1
 13487  0117D6  0E00               	movlw	low _RxBuffer
 13488  0117D8  24F3               	addwf	prodl,w,c
 13489  0117DA  6ED9               	movwf	fsr2l,c
 13490  0117DC  0E02               	movlw	high _RxBuffer
 13491  0117DE  20F4               	addwfc	prodh,w,c
 13492  0117E0  6EDA               	movwf	fsr2h,c
 13493  0117E2  CFAE FFDF          	movff	4014,indf2	;volatile
 13494                           
 13495                           ;2_April_TestMain.c: 134: if((RxBuffer[0] == '$') && (ds != 5)){
 13496  0117E6  0E24               	movlw	36
 13497  0117E8  0102               	movlb	2	; () banked
 13498  0117EA  1900               	xorwf	_RxBuffer& (0+255),w,b
 13499  0117EC  A4D8               	btfss	status,2,c
 13500  0117EE  D00C               	goto	i2l919
 13501                           
 13502                           ; BSR set to: 2
 13503  0117F0  0E05               	movlw	5
 13504  0117F2  1801               	xorwf	_ds,w,c
 13505  0117F4  B4D8               	btfsc	status,2,c
 13506  0117F6  D008               	goto	i2l919
 13507                           
 13508                           ; BSR set to: 2
 13509                           ;2_April_TestMain.c: 135: id++;
 13510  0117F8  2A03               	incf	_id,f,c
 13511                           
 13512                           ; BSR set to: 2
 13513                           ;2_April_TestMain.c: 136: if(id>=RXcounter){
 13514  0117FA  5002               	movf	_RXcounter,w,c
 13515  0117FC  5C03               	subwf	_id,w,c
 13516  0117FE  A0D8               	btfss	status,0,c
 13517  011800  D003               	goto	i2l919
 13518                           
 13519                           ; BSR set to: 2
 13520                           ;2_April_TestMain.c: 137: WaitForReceive = 0;
 13521  011802  0E00               	movlw	0
 13522  011804  0100               	movlb	0	; () banked
 13523  011806  6FA5               	movwf	_WaitForReceive& (0+255),b
 13524  011808                     i2l919:
 13525                           
 13526                           ;2_April_TestMain.c: 138: }
 13527                           ;2_April_TestMain.c: 139: }
 13528                           ;2_April_TestMain.c: 141: if(ds == 10){
 13529                           
 13530                           ; BSR set to: 0
 13531                           
 13532                           ; BSR set to: 0
 13533  011808  0E0A               	movlw	10
 13534  01180A  1801               	xorwf	_ds,w,c
 13535  01180C  A4D8               	btfss	status,2,c
 13536  01180E  D008               	goto	i2l921
 13537                           
 13538                           ;2_April_TestMain.c: 142: id++;
 13539  011810  2A03               	incf	_id,f,c
 13540                           
 13541                           ;2_April_TestMain.c: 143: if(id>=RXcounter){
 13542  011812  5002               	movf	_RXcounter,w,c
 13543  011814  5C03               	subwf	_id,w,c
 13544  011816  A0D8               	btfss	status,0,c
 13545  011818  D003               	goto	i2l921
 13546                           
 13547                           ;2_April_TestMain.c: 144: WaitForReceive = 0;
 13548  01181A  0E00               	movlw	0
 13549  01181C  0100               	movlb	0	; () banked
 13550  01181E  6FA5               	movwf	_WaitForReceive& (0+255),b
 13551  011820                     i2l921:
 13552                           
 13553                           ;2_April_TestMain.c: 145: }
 13554                           ;2_April_TestMain.c: 146: }
 13555                           ;2_April_TestMain.c: 147: if((RxBuffer[10] == 'S') && (RxBuffer[11] == 'M')){
 13556                           
 13557                           ; BSR set to: 0
 13558                           
 13559                           ; BSR set to: 0
 13560  011820  0E53               	movlw	83
 13561  011822  0102               	movlb	2	; () banked
 13562  011824  190A               	xorwf	(_RxBuffer+10)& (0+255),w,b
 13563  011826  A4D8               	btfss	status,2,c
 13564  011828  D007               	goto	i2l922
 13565                           
 13566                           ; BSR set to: 2
 13567  01182A  0E4D               	movlw	77
 13568  01182C  190B               	xorwf	(_RxBuffer+11)& (0+255),w,b
 13569  01182E  A4D8               	btfss	status,2,c
 13570  011830  D003               	goto	i2l922
 13571                           
 13572                           ; BSR set to: 2
 13573                           ;2_April_TestMain.c: 148: F_WaitForReceive=1;
 13574  011832  0E01               	movlw	1
 13575  011834  0100               	movlb	0	; () banked
 13576  011836  6FA4               	movwf	_F_WaitForReceive& (0+255),b
 13577  011838                     i2l922:
 13578                           
 13579                           ;2_April_TestMain.c: 149: }
 13580                           ;2_April_TestMain.c: 150: PIR1bits.RCIF=0;
 13581                           
 13582                           ; BSR set to: 0
 13583  011838  9A9E               	bcf	3998,5,c	;volatile
 13584  01183A                     i2l917:
 13585  01183A  C048  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
 13586  01183E  C047  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
 13587  011842  C046  F04A         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
 13588  011846  C045  F049         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
 13589  01184A  C044  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
 13590  01184E  C043  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
 13591  011852  C042  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
 13592  011856  C041  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
 13593  01185A  C040  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
 13594  01185E  C03F  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
 13595  011862  C03E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
 13596  011866  C03D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
 13597  01186A  C03C  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
 13598  01186E  C03B  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
 13599  011872  C03A  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
 13600  011876  C039  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
 13601  01187A  C038  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
 13602  01187E  C037  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
 13603  011882  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13604  011884  0011               	retfie		f
 13605  011886                     __end_of_INTERRUPT_InterruptManagerHigh:
 13606                           	opt stack 0
 13607                           tosu	equ	0xFFF
 13608                           tosh	equ	0xFFE
 13609                           tosl	equ	0xFFD
 13610                           pclatu	equ	0xFFB
 13611                           pclath	equ	0xFFA
 13612                           tblptru	equ	0xFF8
 13613                           tblptrh	equ	0xFF7
 13614                           tblptrl	equ	0xFF6
 13615                           tablat	equ	0xFF5
 13616                           prodh	equ	0xFF4
 13617                           prodl	equ	0xFF3
 13618                           intcon	equ	0xFF2
 13619                           intcon2	equ	0xFF1
 13620                           indf0	equ	0xFEF
 13621                           postinc0	equ	0xFEE
 13622                           fsr0h	equ	0xFEA
 13623                           fsr0l	equ	0xFE9
 13624                           wreg	equ	0xFE8
 13625                           indf1	equ	0xFE7
 13626                           postdec1	equ	0xFE5
 13627                           fsr1h	equ	0xFE2
 13628                           fsr1l	equ	0xFE1
 13629                           bsr	equ	0xFE0
 13630                           indf2	equ	0xFDF
 13631                           postinc2	equ	0xFDE
 13632                           fsr2h	equ	0xFDA
 13633                           fsr2l	equ	0xFD9
 13634                           status	equ	0xFD8
 13635                           
 13636 ;; *************** function i2_read_ZIGBEE_short *****************
 13637 ;; Defined at:
 13638 ;;		line 404 in file "zigbee.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  address         1    wreg     unsigned char 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  address         1    2[COMRAM] unsigned char 
 13643 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      unsigned char 
 13646 ;; Registers used:
 13647 ;;		wreg, status,2, status,0, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13657 ;;Total ram usage:        2 bytes
 13658 ;; Hardware stack levels used:    1
 13659 ;; Hardware stack levels required when called:    1
 13660 ;; This function calls:
 13661 ;;		i2_SPI_Read
 13662 ;;		i2_SPI_Write
 13663 ;; This function is called by:
 13664 ;;		_INTERRUPT_InterruptManagerHigh
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668                           	psect	text69
 13669  01295E                     __ptext69:
 13670                           	opt stack 0
 13671  01295E                     i2_read_ZIGBEE_short:
 13672                           	opt stack 19
 13673                           
 13674                           ;incstack = 0
 13675                           ;i2read_ZIGBEE_short@address stored from wreg
 13676  01295E  6E27               	movwf	i2read_ZIGBEE_short@address,c
 13677                           
 13678                           ;zigbee.c: 405: unsigned char data_r = 0;
 13679  012960  0E00               	movlw	0
 13680  012962  6E28               	movwf	i2read_ZIGBEE_short@data_r,c
 13681                           
 13682                           ;zigbee.c: 407: PORTCbits.RC0=0;
 13683  012964  9082               	bcf	3970,0,c	;volatile
 13684                           
 13685                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
 13686  012966  5027               	movf	i2read_ZIGBEE_short@address,w,c
 13687  012968  2427               	addwf	i2read_ZIGBEE_short@address,w,c
 13688  01296A  0B7E               	andlw	126
 13689  01296C  6E27               	movwf	i2read_ZIGBEE_short@address,c
 13690                           
 13691                           ;zigbee.c: 409: SPI_Write(address);
 13692  01296E  5027               	movf	i2read_ZIGBEE_short@address,w,c
 13693  012970  EC7E  F095         	call	i2_SPI_Write
 13694                           
 13695                           ;zigbee.c: 410: data_r = SPI_Read();
 13696  012974  EC86  F095         	call	i2_SPI_Read	;wreg free
 13697  012978  6E28               	movwf	i2read_ZIGBEE_short@data_r,c
 13698                           
 13699                           ;zigbee.c: 411: PORTCbits.RC0=1;
 13700  01297A  8082               	bsf	3970,0,c	;volatile
 13701                           
 13702                           ;zigbee.c: 413: return data_r;
 13703  01297C  5028               	movf	i2read_ZIGBEE_short@data_r,w,c
 13704  01297E  0012               	return	
 13705  012980                     __end_ofi2_read_ZIGBEE_short:
 13706                           	opt stack 0
 13707                           tosu	equ	0xFFF
 13708                           tosh	equ	0xFFE
 13709                           tosl	equ	0xFFD
 13710                           pclatu	equ	0xFFB
 13711                           pclath	equ	0xFFA
 13712                           tblptru	equ	0xFF8
 13713                           tblptrh	equ	0xFF7
 13714                           tblptrl	equ	0xFF6
 13715                           tablat	equ	0xFF5
 13716                           prodh	equ	0xFF4
 13717                           prodl	equ	0xFF3
 13718                           intcon	equ	0xFF2
 13719                           intcon2	equ	0xFF1
 13720                           indf0	equ	0xFEF
 13721                           postinc0	equ	0xFEE
 13722                           fsr0h	equ	0xFEA
 13723                           fsr0l	equ	0xFE9
 13724                           wreg	equ	0xFE8
 13725                           indf1	equ	0xFE7
 13726                           postdec1	equ	0xFE5
 13727                           fsr1h	equ	0xFE2
 13728                           fsr1l	equ	0xFE1
 13729                           bsr	equ	0xFE0
 13730                           indf2	equ	0xFDF
 13731                           postinc2	equ	0xFDE
 13732                           fsr2h	equ	0xFDA
 13733                           fsr2l	equ	0xFD9
 13734                           status	equ	0xFD8
 13735                           
 13736 ;; *************** function i2_Xor_check *****************
 13737 ;; Defined at:
 13738 ;;		line 504 in file "zigbee.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;  data_value      2    0[COMRAM] PTR unsigned char 
 13741 ;;		 -> DATA_TX(3), DATA_RX(5), 
 13742 ;;  length          1    2[COMRAM] unsigned char 
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;  Xor_check       2    6[COMRAM] unsigned short 
 13745 ;;  Xor_check       2    4[COMRAM] unsigned short 
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  2    0[COMRAM] unsigned short 
 13748 ;; Registers used:
 13749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13755 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13759 ;;Total ram usage:        8 bytes
 13760 ;; Hardware stack levels used:    1
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		_INTERRUPT_InterruptManagerHigh
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           	psect	text70
 13769  01265A                     __ptext70:
 13770                           	opt stack 0
 13771  01265A                     i2_Xor_check:
 13772                           	opt stack 20
 13773                           
 13774                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
 13775                           
 13776                           ;incstack = 0
 13777  01265A  0E8D               	movlw	141
 13778  01265C  6E2A               	movwf	i2Xor_check@xor_value+1,c
 13779  01265E  0E0D               	movlw	13
 13780  012660  6E29               	movwf	i2Xor_check@xor_value,c
 13781                           
 13782                           ;zigbee.c: 507: unsigned short xor=0x00;
 13783  012662  0E00               	movlw	0
 13784  012664  6E2C               	movwf	i2Xor_check@xor+1,c
 13785  012666  0E00               	movlw	0
 13786  012668  6E2B               	movwf	i2Xor_check@xor,c
 13787                           
 13788                           ;zigbee.c: 508: while(length --)
 13789  01266A  D00A               	goto	i2l536
 13790  01266C                     
 13791                           ;zigbee.c: 509: {
 13792                           ;zigbee.c: 510: xor_value ^= *data_value++;
 13793  01266C  C025  FFD9         	movff	i2Xor_check@data_value,fsr2l
 13794  012670  C026  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
 13795  012674  50DF               	movf	indf2,w,c
 13796  012676  6E28               	movwf	??i2_Xor_check& (0+255),c
 13797  012678  5028               	movf	??i2_Xor_check,w,c
 13798  01267A  1A29               	xorwf	i2Xor_check@xor_value,f,c
 13799  01267C  4A25               	infsnz	i2Xor_check@data_value,f,c
 13800  01267E  2A26               	incf	i2Xor_check@data_value+1,f,c
 13801  012680                     i2l536:
 13802  012680  0627               	decf	i2Xor_check@length,f,c
 13803  012682  2827               	incf	i2Xor_check@length,w,c
 13804  012684  A4D8               	btfss	status,2,c
 13805  012686  D7F2               	goto	i2l537
 13806                           
 13807                           ;zigbee.c: 511: }
 13808                           ;zigbee.c: 512: xor=xor_value;
 13809  012688  C029  F02B         	movff	i2Xor_check@xor_value,i2Xor_check@xor
 13810  01268C  C02A  F02C         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
 13811                           
 13812                           ;zigbee.c: 513: return(xor);
 13813  012690  C02B  F025         	movff	i2Xor_check@xor,?i2_Xor_check
 13814  012694  C02C  F026         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
 13815  012698  0012               	return		;funcret
 13816  01269A                     __end_ofi2_Xor_check:
 13817                           	opt stack 0
 13818                           tosu	equ	0xFFF
 13819                           tosh	equ	0xFFE
 13820                           tosl	equ	0xFFD
 13821                           pclatu	equ	0xFFB
 13822                           pclath	equ	0xFFA
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           intcon2	equ	0xFF1
 13831                           indf0	equ	0xFEF
 13832                           postinc0	equ	0xFEE
 13833                           fsr0h	equ	0xFEA
 13834                           fsr0l	equ	0xFE9
 13835                           wreg	equ	0xFE8
 13836                           indf1	equ	0xFE7
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           bsr	equ	0xFE0
 13841                           indf2	equ	0xFDF
 13842                           postinc2	equ	0xFDE
 13843                           fsr2h	equ	0xFDA
 13844                           fsr2l	equ	0xFD9
 13845                           status	equ	0xFD8
 13846                           
 13847 ;; *************** function _read_RX_FIFO *****************
 13848 ;; Defined at:
 13849 ;;		line 11 in file "zigbee.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  i               1   15[COMRAM] unsigned char 
 13854 ;;  temp            1   14[COMRAM] unsigned char 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  1    wreg      void 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13866 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;Total ram usage:        7 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    2
 13871 ;; This function calls:
 13872 ;;		_read_ZIGBEE_long
 13873 ;;		i2_write_ZIGBEE_short
 13874 ;; This function is called by:
 13875 ;;		_INTERRUPT_InterruptManagerHigh
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text71
 13880  010F7E                     __ptext71:
 13881                           	opt stack 0
 13882  010F7E                     _read_RX_FIFO:
 13883                           	opt stack 18
 13884                           
 13885                           ;zigbee.c: 13: unsigned char temp = 0;
 13886                           
 13887                           ;incstack = 0
 13888  010F7E  0E00               	movlw	0
 13889  010F80  6E33               	movwf	read_RX_FIFO@temp,c
 13890                           
 13891                           ;zigbee.c: 14: unsigned char i = 0;
 13892  010F82  0E00               	movlw	0
 13893  010F84  6E34               	movwf	read_RX_FIFO@i,c
 13894                           
 13895                           ;zigbee.c: 16: temp=0;
 13896  010F86  0E00               	movlw	0
 13897  010F88  6E33               	movwf	read_RX_FIFO@temp,c
 13898                           
 13899                           ;zigbee.c: 17: temp = temp | 0x04;
 13900  010F8A  5033               	movf	read_RX_FIFO@temp,w,c
 13901  010F8C  0904               	iorlw	4
 13902  010F8E  6E33               	movwf	read_RX_FIFO@temp,c
 13903                           
 13904                           ;zigbee.c: 18: write_ZIGBEE_short(0x39, temp);
 13905  010F90  C033  F027         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 13906  010F94  0E39               	movlw	57
 13907  010F96  ECEF  F094         	call	i2_write_ZIGBEE_short
 13908                           
 13909                           ;zigbee.c: 20: LENGTH=read_ZIGBEE_long(0x300);
 13910  010F9A  0E03               	movlw	3
 13911  010F9C  6E28               	movwf	read_ZIGBEE_long@address+1,c
 13912  010F9E  0E00               	movlw	0
 13913  010FA0  6E27               	movwf	read_ZIGBEE_long@address,c
 13914  010FA2  EC1B  F092         	call	_read_ZIGBEE_long	;wreg free
 13915  010FA6  6E20               	movwf	_LENGTH,c
 13916                           
 13917                           ;zigbee.c: 21: __nop();
 13918  010FA8  F000               	nop	
 13919                           
 13920                           ;zigbee.c: 22: for(i=0; i<128; i++)
 13921  010FAA  0E00               	movlw	0
 13922  010FAC  6E34               	movwf	read_RX_FIFO@i,c
 13923  010FAE  0E7F               	movlw	127
 13924  010FB0  6434               	cpfsgt	read_RX_FIFO@i,c
 13925  010FB2  D001               	goto	i2l351
 13926  010FB4  D06A               	goto	i2u186_40
 13927  010FB6                     i2l351:
 13928                           
 13929                           ;zigbee.c: 23: {
 13930                           ;zigbee.c: 24: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 13931  010FB6  0E92               	movlw	low _DATA_LENGHT
 13932  010FB8  6EF6               	movwf	tblptrl,c
 13933  010FBA                     	if	1	;There is more than 1 active tblptr byte
 13934  010FBA  0EFD               	movlw	high _DATA_LENGHT
 13935  010FBC  6EF7               	movwf	tblptrh,c
 13936  010FBE                     	endif
 13937  010FBE                     	if	1	;There are 3 active tblptr bytes
 13938  010FBE  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 13939  010FC0  6EF8               	movwf	tblptru,c
 13940  010FC2                     	endif
 13941  010FC2  0008               	tblrd		*
 13942  010FC4  50F5               	movf	tablat,w,c
 13943  010FC6  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 13944  010FC8  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 13945  010FCA  0E91               	movlw	low _HEADER_LENGHT
 13946  010FCC  6EF6               	movwf	tblptrl,c
 13947  010FCE                     	if	1	;There is more than 1 active tblptr byte
 13948  010FCE  0EFD               	movlw	high _HEADER_LENGHT
 13949  010FD0  6EF7               	movwf	tblptrh,c
 13950  010FD2                     	endif
 13951  010FD2                     	if	1	;There are 3 active tblptr bytes
 13952  010FD2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 13953  010FD4  6EF8               	movwf	tblptru,c
 13954  010FD6                     	endif
 13955  010FD6  0008               	tblrd		*
 13956  010FD8  50F5               	movf	tablat,w,c
 13957  010FDA  262E               	addwf	??_read_RX_FIFO,f,c
 13958  010FDC  0E00               	movlw	0
 13959  010FDE  222F               	addwfc	??_read_RX_FIFO+1,f,c
 13960  010FE0  0E05               	movlw	5
 13961  010FE2  262E               	addwf	??_read_RX_FIFO,f,c
 13962  010FE4  0E00               	movlw	0
 13963  010FE6  222F               	addwfc	??_read_RX_FIFO+1,f,c
 13964  010FE8  5034               	movf	read_RX_FIFO@i,w,c
 13965  010FEA  6E30               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 13966  010FEC  6A31               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 13967  010FEE  502E               	movf	??_read_RX_FIFO,w,c
 13968  010FF0  5C30               	subwf	??_read_RX_FIFO+2,w,c
 13969  010FF2  5031               	movf	??_read_RX_FIFO+3,w,c
 13970  010FF4  0A80               	xorlw	128
 13971  010FF6  6E32               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 13972  010FF8  502F               	movf	??_read_RX_FIFO+1,w,c
 13973  010FFA  0A80               	xorlw	128
 13974  010FFC  5832               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 13975  010FFE  B0D8               	btfsc	status,0,c
 13976  011000  D012               	goto	i2l353
 13977                           
 13978                           ;zigbee.c: 25: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 13979  011002  5034               	movf	read_RX_FIFO@i,w,c
 13980  011004  0D01               	mullw	1
 13981  011006  0EB6               	movlw	low _data_RX_FIFO
 13982  011008  24F3               	addwf	prodl,w,c
 13983  01100A  6ED9               	movwf	fsr2l,c
 13984  01100C  0E01               	movlw	high _data_RX_FIFO
 13985  01100E  20F4               	addwfc	prodh,w,c
 13986  011010  6EDA               	movwf	fsr2h,c
 13987  011012  5034               	movf	read_RX_FIFO@i,w,c
 13988  011014  0100               	movlb	0	; () banked
 13989  011016  25C8               	addwf	_address_RX_FIFO& (0+255),w,b
 13990  011018  6E27               	movwf	read_ZIGBEE_long@address,c
 13991  01101A  0E00               	movlw	0
 13992  01101C  21C9               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 13993  01101E  6E28               	movwf	read_ZIGBEE_long@address+1,c
 13994  011020  EC1B  F092         	call	_read_ZIGBEE_long	;wreg free
 13995  011024  6EDF               	movwf	indf2,c
 13996  011026                     i2l353:
 13997                           
 13998                           ;zigbee.c: 26: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 13999  011026  0E92               	movlw	low _DATA_LENGHT
 14000  011028  6EF6               	movwf	tblptrl,c
 14001  01102A                     	if	1	;There is more than 1 active tblptr byte
 14002  01102A  0EFD               	movlw	high _DATA_LENGHT
 14003  01102C  6EF7               	movwf	tblptrh,c
 14004  01102E                     	endif
 14005  01102E                     	if	1	;There are 3 active tblptr bytes
 14006  01102E  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 14007  011030  6EF8               	movwf	tblptru,c
 14008  011032                     	endif
 14009  011032  0008               	tblrd		*
 14010  011034  50F5               	movf	tablat,w,c
 14011  011036  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14012  011038  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14013  01103A  0E91               	movlw	low _HEADER_LENGHT
 14014  01103C  6EF6               	movwf	tblptrl,c
 14015  01103E                     	if	1	;There is more than 1 active tblptr byte
 14016  01103E  0EFD               	movlw	high _HEADER_LENGHT
 14017  011040  6EF7               	movwf	tblptrh,c
 14018  011042                     	endif
 14019  011042                     	if	1	;There are 3 active tblptr bytes
 14020  011042  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14021  011044  6EF8               	movwf	tblptru,c
 14022  011046                     	endif
 14023  011046  0008               	tblrd		*
 14024  011048  50F5               	movf	tablat,w,c
 14025  01104A  262E               	addwf	??_read_RX_FIFO,f,c
 14026  01104C  0E00               	movlw	0
 14027  01104E  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14028  011050  0E05               	movlw	5
 14029  011052  262E               	addwf	??_read_RX_FIFO,f,c
 14030  011054  0E00               	movlw	0
 14031  011056  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14032  011058  5034               	movf	read_RX_FIFO@i,w,c
 14033  01105A  6E30               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 14034  01105C  6A31               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 14035  01105E  502E               	movf	??_read_RX_FIFO,w,c
 14036  011060  5C30               	subwf	??_read_RX_FIFO+2,w,c
 14037  011062  5031               	movf	??_read_RX_FIFO+3,w,c
 14038  011064  0A80               	xorlw	128
 14039  011066  6E32               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 14040  011068  502F               	movf	??_read_RX_FIFO+1,w,c
 14041  01106A  0A80               	xorlw	128
 14042  01106C  5832               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 14043  01106E  A0D8               	btfss	status,0,c
 14044  011070  D00A               	goto	i2l354
 14045                           
 14046                           ;zigbee.c: 27: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 14047  011072  5034               	movf	read_RX_FIFO@i,w,c
 14048  011074  0100               	movlb	0	; () banked
 14049  011076  25C8               	addwf	_address_RX_FIFO& (0+255),w,b
 14050  011078  6E27               	movwf	read_ZIGBEE_long@address,c
 14051  01107A  0E00               	movlw	0
 14052  01107C  21C9               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 14053  01107E  6E28               	movwf	read_ZIGBEE_long@address+1,c
 14054  011080  EC1B  F092         	call	_read_ZIGBEE_long	;wreg free
 14055  011084  6E1B               	movwf	_lost_data,c
 14056  011086                     i2l354:
 14057  011086  2A34               	incf	read_RX_FIFO@i,f,c
 14058  011088  D792               	goto	L9
 14059  01108A                     i2u186_40:
 14060                           
 14061                           ;zigbee.c: 28: }
 14062                           ;zigbee.c: 30: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 14063  01108A  0E91               	movlw	low _HEADER_LENGHT
 14064  01108C  6EF6               	movwf	tblptrl,c
 14065  01108E                     	if	1	;There is more than 1 active tblptr byte
 14066  01108E  0EFD               	movlw	high _HEADER_LENGHT
 14067  011090  6EF7               	movwf	tblptrh,c
 14068  011092                     	endif
 14069  011092                     	if	1	;There are 3 active tblptr bytes
 14070  011092  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14071  011094  6EF8               	movwf	tblptru,c
 14072  011096                     	endif
 14073  011096  0008               	tblrd		*
 14074  011098  50F5               	movf	tablat,w,c
 14075  01109A  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14076  01109C  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14077  01109E  0E01               	movlw	1
 14078  0110A0  262E               	addwf	??_read_RX_FIFO,f,c
 14079  0110A2  0E00               	movlw	0
 14080  0110A4  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14081  0110A6  0EB6               	movlw	low _data_RX_FIFO
 14082  0110A8  242E               	addwf	??_read_RX_FIFO,w,c
 14083  0110AA  6ED9               	movwf	fsr2l,c
 14084  0110AC  0E01               	movlw	high _data_RX_FIFO
 14085  0110AE  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14086  0110B0  6EDA               	movwf	fsr2h,c
 14087  0110B2  50DF               	movf	indf2,w,c
 14088  0110B4  0100               	movlb	0	; () banked
 14089  0110B6  6FB2               	movwf	_DATA_RX& (0+255),b
 14090                           
 14091                           ;zigbee.c: 31: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 14092  0110B8  0E91               	movlw	low _HEADER_LENGHT
 14093  0110BA  6EF6               	movwf	tblptrl,c
 14094  0110BC                     	if	1	;There is more than 1 active tblptr byte
 14095  0110BC  0EFD               	movlw	high _HEADER_LENGHT
 14096  0110BE  6EF7               	movwf	tblptrh,c
 14097  0110C0                     	endif
 14098  0110C0                     	if	1	;There are 3 active tblptr bytes
 14099  0110C0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14100  0110C2  6EF8               	movwf	tblptru,c
 14101  0110C4                     	endif
 14102  0110C4  0008               	tblrd		*
 14103  0110C6  50F5               	movf	tablat,w,c
 14104  0110C8  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14105  0110CA  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14106  0110CC  0E02               	movlw	2
 14107  0110CE  262E               	addwf	??_read_RX_FIFO,f,c
 14108  0110D0  0E00               	movlw	0
 14109  0110D2  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14110  0110D4  0EB6               	movlw	low _data_RX_FIFO
 14111  0110D6  242E               	addwf	??_read_RX_FIFO,w,c
 14112  0110D8  6ED9               	movwf	fsr2l,c
 14113  0110DA  0E01               	movlw	high _data_RX_FIFO
 14114  0110DC  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14115  0110DE  6EDA               	movwf	fsr2h,c
 14116  0110E0  50DF               	movf	indf2,w,c
 14117  0110E2  6FB3               	movwf	(_DATA_RX+1)& (0+255),b
 14118                           
 14119                           ;zigbee.c: 32: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 14120  0110E4  0E91               	movlw	low _HEADER_LENGHT
 14121  0110E6  6EF6               	movwf	tblptrl,c
 14122  0110E8                     	if	1	;There is more than 1 active tblptr byte
 14123  0110E8  0EFD               	movlw	high _HEADER_LENGHT
 14124  0110EA  6EF7               	movwf	tblptrh,c
 14125  0110EC                     	endif
 14126  0110EC                     	if	1	;There are 3 active tblptr bytes
 14127  0110EC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14128  0110EE  6EF8               	movwf	tblptru,c
 14129  0110F0                     	endif
 14130  0110F0  0008               	tblrd		*
 14131  0110F2  50F5               	movf	tablat,w,c
 14132  0110F4  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14133  0110F6  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14134  0110F8  0E03               	movlw	3
 14135  0110FA  262E               	addwf	??_read_RX_FIFO,f,c
 14136  0110FC  0E00               	movlw	0
 14137  0110FE  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14138  011100  0EB6               	movlw	low _data_RX_FIFO
 14139  011102  242E               	addwf	??_read_RX_FIFO,w,c
 14140  011104  6ED9               	movwf	fsr2l,c
 14141  011106  0E01               	movlw	high _data_RX_FIFO
 14142  011108  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14143  01110A  6EDA               	movwf	fsr2h,c
 14144  01110C  50DF               	movf	indf2,w,c
 14145  01110E  6FB4               	movwf	(_DATA_RX+2)& (0+255),b
 14146                           
 14147                           ;zigbee.c: 34: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 14148  011110  0E91               	movlw	low _HEADER_LENGHT
 14149  011112  6EF6               	movwf	tblptrl,c
 14150  011114                     	if	1	;There is more than 1 active tblptr byte
 14151  011114  0EFD               	movlw	high _HEADER_LENGHT
 14152  011116  6EF7               	movwf	tblptrh,c
 14153  011118                     	endif
 14154  011118                     	if	1	;There are 3 active tblptr bytes
 14155  011118  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14156  01111A  6EF8               	movwf	tblptru,c
 14157  01111C                     	endif
 14158  01111C  0008               	tblrd		*
 14159  01111E  50F5               	movf	tablat,w,c
 14160  011120  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14161  011122  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14162  011124  0E04               	movlw	4
 14163  011126  262E               	addwf	??_read_RX_FIFO,f,c
 14164  011128  0E00               	movlw	0
 14165  01112A  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14166  01112C  0EB6               	movlw	low _data_RX_FIFO
 14167  01112E  242E               	addwf	??_read_RX_FIFO,w,c
 14168  011130  6ED9               	movwf	fsr2l,c
 14169  011132  0E01               	movlw	high _data_RX_FIFO
 14170  011134  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14171  011136  6EDA               	movwf	fsr2h,c
 14172  011138  50DF               	movf	indf2,w,c
 14173  01113A  6FB5               	movwf	(_DATA_RX+3)& (0+255),b
 14174                           
 14175                           ;zigbee.c: 35: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 14176  01113C  0E91               	movlw	low _HEADER_LENGHT
 14177  01113E  6EF6               	movwf	tblptrl,c
 14178  011140                     	if	1	;There is more than 1 active tblptr byte
 14179  011140  0EFD               	movlw	high _HEADER_LENGHT
 14180  011142  6EF7               	movwf	tblptrh,c
 14181  011144                     	endif
 14182  011144                     	if	1	;There are 3 active tblptr bytes
 14183  011144  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14184  011146  6EF8               	movwf	tblptru,c
 14185  011148                     	endif
 14186  011148  0008               	tblrd		*
 14187  01114A  50F5               	movf	tablat,w,c
 14188  01114C  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14189  01114E  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14190  011150  0E05               	movlw	5
 14191  011152  262E               	addwf	??_read_RX_FIFO,f,c
 14192  011154  0E00               	movlw	0
 14193  011156  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14194  011158  0EB6               	movlw	low _data_RX_FIFO
 14195  01115A  242E               	addwf	??_read_RX_FIFO,w,c
 14196  01115C  6ED9               	movwf	fsr2l,c
 14197  01115E  0E01               	movlw	high _data_RX_FIFO
 14198  011160  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14199  011162  6EDA               	movwf	fsr2h,c
 14200  011164  50DF               	movf	indf2,w,c
 14201  011166  6FB6               	movwf	(_DATA_RX+4)& (0+255),b
 14202                           
 14203                           ;zigbee.c: 39: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 14204  011168  0E91               	movlw	low _HEADER_LENGHT
 14205  01116A  6EF6               	movwf	tblptrl,c
 14206  01116C                     	if	1	;There is more than 1 active tblptr byte
 14207  01116C  0EFD               	movlw	high _HEADER_LENGHT
 14208  01116E  6EF7               	movwf	tblptrh,c
 14209  011170                     	endif
 14210  011170                     	if	1	;There are 3 active tblptr bytes
 14211  011170  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14212  011172  6EF8               	movwf	tblptru,c
 14213  011174                     	endif
 14214  011174  0008               	tblrd		*
 14215  011176  50F5               	movf	tablat,w,c
 14216  011178  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14217  01117A  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14218  01117C  0E92               	movlw	low _DATA_LENGHT
 14219  01117E  6EF6               	movwf	tblptrl,c
 14220  011180                     	if	1	;There is more than 1 active tblptr byte
 14221  011180  0EFD               	movlw	high _DATA_LENGHT
 14222  011182  6EF7               	movwf	tblptrh,c
 14223  011184                     	endif
 14224  011184                     	if	1	;There are 3 active tblptr bytes
 14225  011184  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 14226  011186  6EF8               	movwf	tblptru,c
 14227  011188                     	endif
 14228  011188  0008               	tblrd		*
 14229  01118A  50F5               	movf	tablat,w,c
 14230  01118C  262E               	addwf	??_read_RX_FIFO,f,c
 14231  01118E  0E00               	movlw	0
 14232  011190  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14233  011192  0E03               	movlw	3
 14234  011194  262E               	addwf	??_read_RX_FIFO,f,c
 14235  011196  0E00               	movlw	0
 14236  011198  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14237  01119A  0EB6               	movlw	low _data_RX_FIFO
 14238  01119C  242E               	addwf	??_read_RX_FIFO,w,c
 14239  01119E  6ED9               	movwf	fsr2l,c
 14240  0111A0  0E01               	movlw	high _data_RX_FIFO
 14241  0111A2  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14242  0111A4  6EDA               	movwf	fsr2h,c
 14243  0111A6  50DF               	movf	indf2,w,c
 14244  0111A8  6E1D               	movwf	_LQI,c
 14245                           
 14246                           ;zigbee.c: 40: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 14247  0111AA  0E91               	movlw	low _HEADER_LENGHT
 14248  0111AC  6EF6               	movwf	tblptrl,c
 14249  0111AE                     	if	1	;There is more than 1 active tblptr byte
 14250  0111AE  0EFD               	movlw	high _HEADER_LENGHT
 14251  0111B0  6EF7               	movwf	tblptrh,c
 14252  0111B2                     	endif
 14253  0111B2                     	if	1	;There are 3 active tblptr bytes
 14254  0111B2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 14255  0111B4  6EF8               	movwf	tblptru,c
 14256  0111B6                     	endif
 14257  0111B6  0008               	tblrd		*
 14258  0111B8  50F5               	movf	tablat,w,c
 14259  0111BA  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 14260  0111BC  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 14261  0111BE  0E92               	movlw	low _DATA_LENGHT
 14262  0111C0  6EF6               	movwf	tblptrl,c
 14263  0111C2                     	if	1	;There is more than 1 active tblptr byte
 14264  0111C2  0EFD               	movlw	high _DATA_LENGHT
 14265  0111C4  6EF7               	movwf	tblptrh,c
 14266  0111C6                     	endif
 14267  0111C6                     	if	1	;There are 3 active tblptr bytes
 14268  0111C6  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 14269  0111C8  6EF8               	movwf	tblptru,c
 14270  0111CA                     	endif
 14271  0111CA  0008               	tblrd		*
 14272  0111CC  50F5               	movf	tablat,w,c
 14273  0111CE  262E               	addwf	??_read_RX_FIFO,f,c
 14274  0111D0  0E00               	movlw	0
 14275  0111D2  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14276  0111D4  0E04               	movlw	4
 14277  0111D6  262E               	addwf	??_read_RX_FIFO,f,c
 14278  0111D8  0E00               	movlw	0
 14279  0111DA  222F               	addwfc	??_read_RX_FIFO+1,f,c
 14280  0111DC  0EB6               	movlw	low _data_RX_FIFO
 14281  0111DE  242E               	addwf	??_read_RX_FIFO,w,c
 14282  0111E0  6ED9               	movwf	fsr2l,c
 14283  0111E2  0E01               	movlw	high _data_RX_FIFO
 14284  0111E4  202F               	addwfc	??_read_RX_FIFO+1,w,c
 14285  0111E6  6EDA               	movwf	fsr2h,c
 14286  0111E8  50DF               	movf	indf2,w,c
 14287  0111EA  6E1C               	movwf	_RSSI2,c
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;zigbee.c: 42: temp=0;
 14291  0111EC  0E00               	movlw	0
 14292  0111EE  6E33               	movwf	read_RX_FIFO@temp,c
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;zigbee.c: 43: temp = temp & (!0x04);
 14296  0111F0  0E00               	movlw	0
 14297  0111F2  6E33               	movwf	read_RX_FIFO@temp,c
 14298                           
 14299                           ; BSR set to: 0
 14300                           ;zigbee.c: 44: write_ZIGBEE_short(0x39, temp);
 14301  0111F4  C033  F027         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 14302  0111F8  0E39               	movlw	57
 14303  0111FA  ECEF  F094         	call	i2_write_ZIGBEE_short
 14304  0111FE  0012               	return		;funcret
 14305  011200                     __end_of_read_RX_FIFO:
 14306                           	opt stack 0
 14307                           tosu	equ	0xFFF
 14308                           tosh	equ	0xFFE
 14309                           tosl	equ	0xFFD
 14310                           pclatu	equ	0xFFB
 14311                           pclath	equ	0xFFA
 14312                           tblptru	equ	0xFF8
 14313                           tblptrh	equ	0xFF7
 14314                           tblptrl	equ	0xFF6
 14315                           tablat	equ	0xFF5
 14316                           prodh	equ	0xFF4
 14317                           prodl	equ	0xFF3
 14318                           intcon	equ	0xFF2
 14319                           intcon2	equ	0xFF1
 14320                           indf0	equ	0xFEF
 14321                           postinc0	equ	0xFEE
 14322                           fsr0h	equ	0xFEA
 14323                           fsr0l	equ	0xFE9
 14324                           wreg	equ	0xFE8
 14325                           indf1	equ	0xFE7
 14326                           postdec1	equ	0xFE5
 14327                           fsr1h	equ	0xFE2
 14328                           fsr1l	equ	0xFE1
 14329                           bsr	equ	0xFE0
 14330                           indf2	equ	0xFDF
 14331                           postinc2	equ	0xFDE
 14332                           fsr2h	equ	0xFDA
 14333                           fsr2l	equ	0xFD9
 14334                           status	equ	0xFD8
 14335                           
 14336 ;; *************** function i2_write_ZIGBEE_short *****************
 14337 ;; Defined at:
 14338 ;;		line 397 in file "zigbee.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;  address         1    wreg     unsigned char 
 14341 ;;  data_r          1    2[COMRAM] unsigned char 
 14342 ;; Auto vars:     Size  Location     Type
 14343 ;;  address         1    3[COMRAM] unsigned char 
 14344 ;; Return value:  Size  Location     Type
 14345 ;;                  1    wreg      void 
 14346 ;; Registers used:
 14347 ;;		wreg, status,2, status,0, cstack
 14348 ;; Tracked objects:
 14349 ;;		On entry : 0/0
 14350 ;;		On exit  : 0/0
 14351 ;;		Unchanged: 0/0
 14352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14357 ;;Total ram usage:        2 bytes
 14358 ;; Hardware stack levels used:    1
 14359 ;; Hardware stack levels required when called:    1
 14360 ;; This function calls:
 14361 ;;		i2_SPI_Write
 14362 ;; This function is called by:
 14363 ;;		_read_RX_FIFO
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367                           	psect	text72
 14368  0129DE                     __ptext72:
 14369                           	opt stack 0
 14370  0129DE                     i2_write_ZIGBEE_short:
 14371                           	opt stack 18
 14372                           
 14373                           ;incstack = 0
 14374                           ;i2write_ZIGBEE_short@address stored from wreg
 14375  0129DE  6E28               	movwf	i2write_ZIGBEE_short@address,c
 14376                           
 14377                           ;zigbee.c: 398: PORTCbits.RC0=0;
 14378  0129E0  9082               	bcf	3970,0,c	;volatile
 14379                           
 14380                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
 14381  0129E2  5028               	movf	i2write_ZIGBEE_short@address,w,c
 14382  0129E4  2428               	addwf	i2write_ZIGBEE_short@address,w,c
 14383  0129E6  0B7F               	andlw	127
 14384  0129E8  0901               	iorlw	1
 14385  0129EA  6E28               	movwf	i2write_ZIGBEE_short@address,c
 14386                           
 14387                           ;zigbee.c: 400: SPI_Write(address);
 14388  0129EC  5028               	movf	i2write_ZIGBEE_short@address,w,c
 14389  0129EE  EC7E  F095         	call	i2_SPI_Write
 14390                           
 14391                           ;zigbee.c: 401: SPI_Write(data_r);
 14392  0129F2  5027               	movf	i2write_ZIGBEE_short@data_r,w,c
 14393  0129F4  EC7E  F095         	call	i2_SPI_Write
 14394                           
 14395                           ;zigbee.c: 402: PORTCbits.RC0=1;
 14396  0129F8  8082               	bsf	3970,0,c	;volatile
 14397  0129FA  0012               	return		;funcret
 14398  0129FC                     __end_ofi2_write_ZIGBEE_short:
 14399                           	opt stack 0
 14400                           tosu	equ	0xFFF
 14401                           tosh	equ	0xFFE
 14402                           tosl	equ	0xFFD
 14403                           pclatu	equ	0xFFB
 14404                           pclath	equ	0xFFA
 14405                           tblptru	equ	0xFF8
 14406                           tblptrh	equ	0xFF7
 14407                           tblptrl	equ	0xFF6
 14408                           tablat	equ	0xFF5
 14409                           prodh	equ	0xFF4
 14410                           prodl	equ	0xFF3
 14411                           intcon	equ	0xFF2
 14412                           intcon2	equ	0xFF1
 14413                           indf0	equ	0xFEF
 14414                           postinc0	equ	0xFEE
 14415                           fsr0h	equ	0xFEA
 14416                           fsr0l	equ	0xFE9
 14417                           wreg	equ	0xFE8
 14418                           indf1	equ	0xFE7
 14419                           postdec1	equ	0xFE5
 14420                           fsr1h	equ	0xFE2
 14421                           fsr1l	equ	0xFE1
 14422                           bsr	equ	0xFE0
 14423                           indf2	equ	0xFDF
 14424                           postinc2	equ	0xFDE
 14425                           fsr2h	equ	0xFDA
 14426                           fsr2l	equ	0xFD9
 14427                           status	equ	0xFD8
 14428                           
 14429 ;; *************** function _read_ZIGBEE_long *****************
 14430 ;; Defined at:
 14431 ;;		line 426 in file "zigbee.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  address         2    2[COMRAM] unsigned int 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  address_low     1    8[COMRAM] unsigned char 
 14436 ;;  address_high    1    7[COMRAM] unsigned char 
 14437 ;;  data_r          1    6[COMRAM] unsigned char 
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      unsigned char 
 14440 ;; Registers used:
 14441 ;;		wreg, status,2, status,0, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14451 ;;Total ram usage:        7 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:    1
 14454 ;; This function calls:
 14455 ;;		i2_SPI_Read
 14456 ;;		i2_SPI_Write
 14457 ;; This function is called by:
 14458 ;;		_read_RX_FIFO
 14459 ;; This function uses a non-reentrant model
 14460 ;;
 14461                           
 14462                           	psect	text73
 14463  012436                     __ptext73:
 14464                           	opt stack 0
 14465  012436                     _read_ZIGBEE_long:
 14466                           	opt stack 18
 14467                           
 14468                           ;zigbee.c: 427: unsigned char data_r = 0;
 14469                           
 14470                           ;incstack = 0
 14471  012436  0E00               	movlw	0
 14472  012438  6E2B               	movwf	read_ZIGBEE_long@data_r,c
 14473                           
 14474                           ;zigbee.c: 428: unsigned char address_high = 0, address_low = 0;
 14475  01243A  0E00               	movlw	0
 14476  01243C  6E2C               	movwf	read_ZIGBEE_long@address_high,c
 14477  01243E  0E00               	movlw	0
 14478  012440  6E2D               	movwf	read_ZIGBEE_long@address_low,c
 14479                           
 14480                           ;zigbee.c: 431: PORTCbits.RC0=0;
 14481  012442  9082               	bcf	3970,0,c	;volatile
 14482                           
 14483                           ;zigbee.c: 432: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 14484  012444  C027  F029         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 14485  012448  C028  F02A         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 14486  01244C  90D8               	bcf	status,0,c
 14487  01244E  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 14488  012450  3229               	rrcf	??_read_ZIGBEE_long,f,c
 14489  012452  90D8               	bcf	status,0,c
 14490  012454  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 14491  012456  3229               	rrcf	??_read_ZIGBEE_long,f,c
 14492  012458  90D8               	bcf	status,0,c
 14493  01245A  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 14494  01245C  3229               	rrcf	??_read_ZIGBEE_long,f,c
 14495  01245E  5029               	movf	??_read_ZIGBEE_long,w,c
 14496  012460  0B7F               	andlw	127
 14497  012462  0980               	iorlw	128
 14498  012464  6E2C               	movwf	read_ZIGBEE_long@address_high,c
 14499                           
 14500                           ;zigbee.c: 433: address_low = ((unsigned char)(address << 5) & 0b11100000);
 14501  012466  3827               	swapf	read_ZIGBEE_long@address,w,c
 14502  012468  46E8               	rlncf	wreg,f,c
 14503  01246A  0BE0               	andlw	224
 14504  01246C  0BE0               	andlw	224
 14505  01246E  6E2D               	movwf	read_ZIGBEE_long@address_low,c
 14506                           
 14507                           ;zigbee.c: 434: SPI_Write(address_high);
 14508  012470  502C               	movf	read_ZIGBEE_long@address_high,w,c
 14509  012472  EC7E  F095         	call	i2_SPI_Write
 14510                           
 14511                           ;zigbee.c: 435: SPI_Write(address_low);
 14512  012476  502D               	movf	read_ZIGBEE_long@address_low,w,c
 14513  012478  EC7E  F095         	call	i2_SPI_Write
 14514                           
 14515                           ;zigbee.c: 436: data_r = SPI_Read();
 14516  01247C  EC86  F095         	call	i2_SPI_Read	;wreg free
 14517  012480  6E2B               	movwf	read_ZIGBEE_long@data_r,c
 14518                           
 14519                           ;zigbee.c: 437: PORTCbits.RC0=1;
 14520  012482  8082               	bsf	3970,0,c	;volatile
 14521                           
 14522                           ;zigbee.c: 438: return data_r;
 14523  012484  502B               	movf	read_ZIGBEE_long@data_r,w,c
 14524  012486  0012               	return	
 14525  012488                     __end_of_read_ZIGBEE_long:
 14526                           	opt stack 0
 14527                           tosu	equ	0xFFF
 14528                           tosh	equ	0xFFE
 14529                           tosl	equ	0xFFD
 14530                           pclatu	equ	0xFFB
 14531                           pclath	equ	0xFFA
 14532                           tblptru	equ	0xFF8
 14533                           tblptrh	equ	0xFF7
 14534                           tblptrl	equ	0xFF6
 14535                           tablat	equ	0xFF5
 14536                           prodh	equ	0xFF4
 14537                           prodl	equ	0xFF3
 14538                           intcon	equ	0xFF2
 14539                           intcon2	equ	0xFF1
 14540                           indf0	equ	0xFEF
 14541                           postinc0	equ	0xFEE
 14542                           fsr0h	equ	0xFEA
 14543                           fsr0l	equ	0xFE9
 14544                           wreg	equ	0xFE8
 14545                           indf1	equ	0xFE7
 14546                           postdec1	equ	0xFE5
 14547                           fsr1h	equ	0xFE2
 14548                           fsr1l	equ	0xFE1
 14549                           bsr	equ	0xFE0
 14550                           indf2	equ	0xFDF
 14551                           postinc2	equ	0xFDE
 14552                           fsr2h	equ	0xFDA
 14553                           fsr2l	equ	0xFD9
 14554                           status	equ	0xFD8
 14555                           
 14556 ;; *************** function i2_SPI_Write *****************
 14557 ;; Defined at:
 14558 ;;		line 458 in file "zigbee.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;  command         1    wreg     unsigned char 
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;  command         1    1[COMRAM] unsigned char 
 14563 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      void 
 14566 ;; Registers used:
 14567 ;;		wreg
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14577 ;;Total ram usage:        2 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_read_ZIGBEE_long
 14583 ;;		i2_write_ZIGBEE_short
 14584 ;;		i2_read_ZIGBEE_short
 14585 ;; This function uses a non-reentrant model
 14586 ;;
 14587                           
 14588                           	psect	text74
 14589  012AFC                     __ptext74:
 14590                           	opt stack 0
 14591  012AFC                     i2_SPI_Write:
 14592                           	opt stack 19
 14593                           
 14594                           ;incstack = 0
 14595                           ;i2SPI_Write@command stored from wreg
 14596  012AFC  6E26               	movwf	i2SPI_Write@command,c
 14597                           
 14598                           ;zigbee.c: 459: unsigned char response;
 14599                           ;zigbee.c: 460: SSP1BUF = command;
 14600  012AFE  C026  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 14601  012B02  A0C7               	btfss	4039,0,c	;volatile
 14602  012B04  D7FE               	goto	i2l491
 14603                           
 14604                           ;zigbee.c: 462: response = SSP1BUF;
 14605  012B06  CFC9 F025          	movff	4041,i2SPI_Write@response	;volatile
 14606  012B0A  0012               	return		;funcret
 14607  012B0C                     __end_ofi2_SPI_Write:
 14608                           	opt stack 0
 14609                           tosu	equ	0xFFF
 14610                           tosh	equ	0xFFE
 14611                           tosl	equ	0xFFD
 14612                           pclatu	equ	0xFFB
 14613                           pclath	equ	0xFFA
 14614                           tblptru	equ	0xFF8
 14615                           tblptrh	equ	0xFF7
 14616                           tblptrl	equ	0xFF6
 14617                           tablat	equ	0xFF5
 14618                           prodh	equ	0xFF4
 14619                           prodl	equ	0xFF3
 14620                           intcon	equ	0xFF2
 14621                           intcon2	equ	0xFF1
 14622                           indf0	equ	0xFEF
 14623                           postinc0	equ	0xFEE
 14624                           fsr0h	equ	0xFEA
 14625                           fsr0l	equ	0xFE9
 14626                           wreg	equ	0xFE8
 14627                           indf1	equ	0xFE7
 14628                           postdec1	equ	0xFE5
 14629                           fsr1h	equ	0xFE2
 14630                           fsr1l	equ	0xFE1
 14631                           bsr	equ	0xFE0
 14632                           indf2	equ	0xFDF
 14633                           postinc2	equ	0xFDE
 14634                           fsr2h	equ	0xFDA
 14635                           fsr2l	equ	0xFD9
 14636                           status	equ	0xFD8
 14637                           
 14638 ;; *************** function i2_SPI_Read *****************
 14639 ;; Defined at:
 14640 ;;		line 464 in file "zigbee.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;		None
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      unsigned char 
 14647 ;; Registers used:
 14648 ;;		wreg, status,2
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14658 ;;Total ram usage:        1 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; This function calls:
 14661 ;;		Nothing
 14662 ;; This function is called by:
 14663 ;;		_read_ZIGBEE_long
 14664 ;;		i2_read_ZIGBEE_short
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text75
 14669  012B0C                     __ptext75:
 14670                           	opt stack 0
 14671  012B0C                     i2_SPI_Read:
 14672                           	opt stack 19
 14673                           
 14674                           ;zigbee.c: 465: unsigned char TempVar;
 14675                           ;zigbee.c: 466: SSP1BUF = 0xff;
 14676                           
 14677                           ;incstack = 0
 14678  012B0C  68C9               	setf	4041,c	;volatile
 14679  012B0E  A0C7               	btfss	4039,0,c	;volatile
 14680  012B10  D7FE               	goto	i2l497
 14681                           
 14682                           ;zigbee.c: 468: TempVar = SSP1BUF;
 14683  012B12  CFC9 F025          	movff	4041,i2SPI_Read@TempVar	;volatile
 14684                           
 14685                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
 14686  012B16  969E               	bcf	3998,3,c	;volatile
 14687                           
 14688                           ;zigbee.c: 470: return ( TempVar );
 14689  012B18  5025               	movf	i2SPI_Read@TempVar,w,c
 14690  012B1A  0012               	return	
 14691  012B1C                     __end_ofi2_SPI_Read:
 14692                           	opt stack 0
 14693                           tosu	equ	0xFFF
 14694                           tosh	equ	0xFFE
 14695                           tosl	equ	0xFFD
 14696                           pclatu	equ	0xFFB
 14697                           pclath	equ	0xFFA
 14698                           tblptru	equ	0xFF8
 14699                           tblptrh	equ	0xFF7
 14700                           tblptrl	equ	0xFF6
 14701                           tablat	equ	0xFF5
 14702                           prodh	equ	0xFF4
 14703                           prodl	equ	0xFF3
 14704                           intcon	equ	0xFF2
 14705                           intcon2	equ	0xFF1
 14706                           indf0	equ	0xFEF
 14707                           postinc0	equ	0xFEE
 14708                           fsr0h	equ	0xFEA
 14709                           fsr0l	equ	0xFE9
 14710                           wreg	equ	0xFE8
 14711                           indf1	equ	0xFE7
 14712                           postdec1	equ	0xFE5
 14713                           fsr1h	equ	0xFE2
 14714                           fsr1l	equ	0xFE1
 14715                           bsr	equ	0xFE0
 14716                           indf2	equ	0xFDF
 14717                           postinc2	equ	0xFDE
 14718                           fsr2h	equ	0xFDA
 14719                           fsr2l	equ	0xFD9
 14720                           status	equ	0xFD8
 14721                           tosu	equ	0xFFF
 14722                           tosh	equ	0xFFE
 14723                           tosl	equ	0xFFD
 14724                           pclatu	equ	0xFFB
 14725                           pclath	equ	0xFFA
 14726                           tblptru	equ	0xFF8
 14727                           tblptrh	equ	0xFF7
 14728                           tblptrl	equ	0xFF6
 14729                           tablat	equ	0xFF5
 14730                           prodh	equ	0xFF4
 14731                           prodl	equ	0xFF3
 14732                           intcon	equ	0xFF2
 14733                           intcon2	equ	0xFF1
 14734                           indf0	equ	0xFEF
 14735                           postinc0	equ	0xFEE
 14736                           fsr0h	equ	0xFEA
 14737                           fsr0l	equ	0xFE9
 14738                           wreg	equ	0xFE8
 14739                           indf1	equ	0xFE7
 14740                           postdec1	equ	0xFE5
 14741                           fsr1h	equ	0xFE2
 14742                           fsr1l	equ	0xFE1
 14743                           bsr	equ	0xFE0
 14744                           indf2	equ	0xFDF
 14745                           postinc2	equ	0xFDE
 14746                           fsr2h	equ	0xFDA
 14747                           fsr2l	equ	0xFD9
 14748                           status	equ	0xFD8
 14749                           
 14750                           	psect	text76
 14751  000000                     __ptext76:
 14752                           	opt stack 0
 14753                           tosu	equ	0xFFF
 14754                           tosh	equ	0xFFE
 14755                           tosl	equ	0xFFD
 14756                           pclatu	equ	0xFFB
 14757                           pclath	equ	0xFFA
 14758                           tblptru	equ	0xFF8
 14759                           tblptrh	equ	0xFF7
 14760                           tblptrl	equ	0xFF6
 14761                           tablat	equ	0xFF5
 14762                           prodh	equ	0xFF4
 14763                           prodl	equ	0xFF3
 14764                           intcon	equ	0xFF2
 14765                           intcon2	equ	0xFF1
 14766                           indf0	equ	0xFEF
 14767                           postinc0	equ	0xFEE
 14768                           fsr0h	equ	0xFEA
 14769                           fsr0l	equ	0xFE9
 14770                           wreg	equ	0xFE8
 14771                           indf1	equ	0xFE7
 14772                           postdec1	equ	0xFE5
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           bsr	equ	0xFE0
 14776                           indf2	equ	0xFDF
 14777                           postinc2	equ	0xFDE
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782                           	psect	rparam
 14783  0000                     tosu	equ	0xFFF
 14784                           tosh	equ	0xFFE
 14785                           tosl	equ	0xFFD
 14786                           pclatu	equ	0xFFB
 14787                           pclath	equ	0xFFA
 14788                           tblptru	equ	0xFF8
 14789                           tblptrh	equ	0xFF7
 14790                           tblptrl	equ	0xFF6
 14791                           tablat	equ	0xFF5
 14792                           prodh	equ	0xFF4
 14793                           prodl	equ	0xFF3
 14794                           intcon	equ	0xFF2
 14795                           intcon2	equ	0xFF1
 14796                           indf0	equ	0xFEF
 14797                           postinc0	equ	0xFEE
 14798                           fsr0h	equ	0xFEA
 14799                           fsr0l	equ	0xFE9
 14800                           wreg	equ	0xFE8
 14801                           indf1	equ	0xFE7
 14802                           postdec1	equ	0xFE5
 14803                           fsr1h	equ	0xFE2
 14804                           fsr1l	equ	0xFE1
 14805                           bsr	equ	0xFE0
 14806                           indf2	equ	0xFDF
 14807                           postinc2	equ	0xFDE
 14808                           fsr2h	equ	0xFDA
 14809                           fsr2l	equ	0xFD9
 14810                           status	equ	0xFD8
 14811                           
 14812                           	psect	temp
 14813  000049                     btemp:
 14814                           	opt stack 0
 14815  000049                     	ds	1
 14816  0000                     int$flags	set	btemp
 14817  0000                     wtemp6	set	btemp+1
 14818                           tosu	equ	0xFFF
 14819                           tosh	equ	0xFFE
 14820                           tosl	equ	0xFFD
 14821                           pclatu	equ	0xFFB
 14822                           pclath	equ	0xFFA
 14823                           tblptru	equ	0xFF8
 14824                           tblptrh	equ	0xFF7
 14825                           tblptrl	equ	0xFF6
 14826                           tablat	equ	0xFF5
 14827                           prodh	equ	0xFF4
 14828                           prodl	equ	0xFF3
 14829                           intcon	equ	0xFF2
 14830                           intcon2	equ	0xFF1
 14831                           indf0	equ	0xFEF
 14832                           postinc0	equ	0xFEE
 14833                           fsr0h	equ	0xFEA
 14834                           fsr0l	equ	0xFE9
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postdec1	equ	0xFE5
 14838                           fsr1h	equ	0xFE2
 14839                           fsr1l	equ	0xFE1
 14840                           bsr	equ	0xFE0
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           fsr2h	equ	0xFDA
 14844                           fsr2l	equ	0xFD9
 14845                           status	equ	0xFD8


Data Sizes:
    Strings     535
    Constant    230
    Data        229
    BSS         260
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      72
    BANK0           160     22     159
    BANK1           256     18     234
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    LcdDisplay@string	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_41(CODE[17]), STR_40(CODE[17]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[15]), STR_36(CODE[16]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[20]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[20]), STR_27(CODE[20]), STR_26(CODE[20]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[21]), 
		 -> STR_21(CODE[21]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[17]), 
		 -> STR_17(CODE[15]), STR_16(CODE[17]), STR_15(CODE[15]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[20]), 
		 -> STR_5(CODE[20]), STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), 

    SprintRom@datas	PTR const unsigned char  size(2) Largest target is 12
		 -> ATCheck(CODE[3]), Delet_All_SMS(CODE[12]), 

    Sprint@datas	PTR unsigned char  size(2) Largest target is 37
		 -> Message6(CODE[37]), Message3(CODE[32]), send(BANK0[2]), SEND_SMS(BANK1[21]), 
		 -> Call(BANK0[6]), Number(BANK1[15]), SMS_format(BANK0[10]), Message5(BANK1[24]), 
		 -> Message4(BANK1[22]), Array(BANK1[19]), Emeregency3(BANK1[23]), Emeregency2(BANK1[22]), 
		 -> Emeregency(BANK1[21]), SMSsender(BANK1[13]), 

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK0[8]), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_write_TX_normal_FIFO
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _lcd_off_cursor->_LcdCmd
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _Module_Init->_Sprint
    _Module_Init->_SprintRom
    _DeleteAllSms->_SprintRom
    _lcd_clear->_LcdCmd
    _SprintRom->_Delayms
    _LcdDisplay->_LcdCmd
    _LcdDisplay->_LcdData
    _LcdData->_Delayms
    _Message_Send_Frame_Parking_light_Board->_Sprint
    _Message_Send_Frame_LDR_ON->_Sprint
    _Message_Send_Frame_LDR_OFF->_Sprint
    _Message_Send_Frame_3->_Sprint
    _Message_Send_Frame_2->_Sprint
    _Message_Send_Frame_1->_Sprint
    _Sprint->_Delayms
    _LcdInit->_LcdCmd
    _LcdCmd->_Delayms
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  572253
                                             16 BANK1      2     2      0
                       _ClearRxBytes
                         _Clear_Data
                           _Delay_ms
                            _Delayms
                      _ID_Conversion
                            _InitSPI
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                            _LcdInit
               _Message_Send_Frame_1
               _Message_Send_Frame_2
               _Message_Send_Frame_3
         _Message_Send_Frame_LDR_OFF
          _Message_Send_Frame_LDR_ON
_Message_Send_Frame_Parking_light_Bo
                        _Module_Init
                           _RF_reset
                         _Read_b_eep
                  _SYSTEM_Initialize
                            _SerInit
                             _Sprint
                          _SprintRom
                        _Write_b_eep
                            ___awdiv
                            ___awmod
                          _check_msg
              _init_ZIGBEE_nonbeacon
                          _lcd_clear
                     _lcd_off_cursor
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   17253
                                              9 BANK1      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                              2 BANK1      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                              0 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                              4 BANK1      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                              9 BANK1      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    1474
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _lcd_off_cursor                                       0     0      0   13487
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   39573
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0    9661
                                              9 BANK1      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    4864
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    1474
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1474
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                              2 BANK1      7     4      3
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                              2 BANK1      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _check_msg                                            2     2      0     209
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1513
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1525
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep                                          4     1      3     459
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SerInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     121
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Module_Init                                          0     0      0  118650
                       _ClearRxBytes
                       _DeleteAllSms
                             _Sprint
                          _SprintRom
                          _lcd_clear
 ---------------------------------------------------------------------------------
 (2) _DeleteAllSms                                         0     0      0   71937
                       _ClearRxBytes
                            _Delayms
                         _LcdDisplay
                          _SprintRom
                          _lcd_clear
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0   13487
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _SprintRom                                            7     4      3   14132
                                              6 BANK1      7     4      3
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _LcdDisplay                                           4     2      2   30760
                                              7 BANK1      3     1      2
                             _LcdCmd
                            _LcdData
 ---------------------------------------------------------------------------------
 (4) _LcdData                                              1     1      0   13487
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _ClearRxBytes                                         1     1      0     102
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_Parking_light_Board               0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_LDR_ON                            0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_LDR_OFF                           0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_3                                 0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_2                                 0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Message_Send_Frame_1                                 0     0      0   32448
                            _Delayms
                             _Sprint
 ---------------------------------------------------------------------------------
 (1) _Sprint                                               7     4      3   18992
                                              6 BANK1      7     4      3
                            _Delayms
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0   26943
                            _Delayms
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               1     1      0   13487
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _Delayms                                              6     4      2   13456
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ID_Conversion                                        5     5      0     324
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Clear_Data                                           2     2      0     102
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       22    22      0       0
                                              0 BANK0     22    22      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1020
                                             16 COMRAM    20    20      0
                       _read_RX_FIFO
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearRxBytes
   _Clear_Data
   _Delay_ms
   _Delayms
   _ID_Conversion
   _InitSPI
     _delay
   _LcdCmd
     _Delayms
   _LcdData
     _Delayms
   _LcdDisplay
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
   _LcdInit
     _Delayms
     _LcdCmd
       _Delayms
   _Message_Send_Frame_1
     _Delayms
     _Sprint
       _Delayms
   _Message_Send_Frame_2
     _Delayms
     _Sprint
       _Delayms
   _Message_Send_Frame_3
     _Delayms
     _Sprint
       _Delayms
   _Message_Send_Frame_LDR_OFF
     _Delayms
     _Sprint
       _Delayms
   _Message_Send_Frame_LDR_ON
     _Delayms
     _Sprint
       _Delayms
   _Message_Send_Frame_Parking_light_Board
     _Delayms
     _Sprint
       _Delayms
   _Module_Init
     _ClearRxBytes
     _DeleteAllSms
       _ClearRxBytes
       _Delayms
       _LcdDisplay
         _LcdCmd
           _Delayms
         _LcdData
           _Delayms
       _SprintRom
         _Delayms
       _lcd_clear
         _LcdCmd
           _Delayms
     _Sprint
       _Delayms
     _SprintRom
       _Delayms
     _lcd_clear
       _LcdCmd
         _Delayms
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _SerInit
   _Sprint
     _Delayms
   _SprintRom
     _Delayms
   _Write_b_eep
   ___awdiv
   ___awmod
   _check_msg
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _lcd_clear
     _LcdCmd
       _Delayms
   _lcd_off_cursor
     _LcdCmd
       _Delayms
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      EA       7       91.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      48       1       76.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     235      12        0.0%
DATA                 0      0     235       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 02 18:07:01 2018

                                  _LIGHT_ALL_OFF FD28                                  _LIGHT_ALTERNATE FD1B  
                                              _T 000E                                                _d 0014  
                                              _g 009C                                                _i 00B0  
                                              _n 009E                                                _t 009B  
                                SPI_Read@TempVar 01D8                                     ___awdiv@sign 01DD  
                                             _id 0003                                               _ii 00AF  
                                             _ds 0001                                               bsr 000FE0  
                                    __CFG_BORV$3 000000                                  _timer0ReloadVal 0024  
                                   __CFG_CP0$OFF 000000                                     __CFG_CP1$OFF 000000  
                                   __CFG_CP2$OFF 000000                                     __CFG_CP3$OFF 000000  
                                   __CFG_CP4$OFF 000000                        i2read_ZIGBEE_short@data_r 0028  
                                   __CFG_CP5$OFF 000000                                     __CFG_CP6$OFF 000000  
                                   __CFG_CP7$OFF 000000                                              l410 15C0  
                                            l411 1430                                              l420 14E4  
                                            l412 1444                                              l421 14F8  
                                            l413 1458                                              l502 29D0  
                                            l422 150C                                              l414 146C  
                                            l503 29CC                                              l423 1520  
                                            l415 1480                                              l408 155C  
                                            l424 1534                                              l416 1494  
                                            l440 1D5C                                              l425 1548  
                                            l417 14A8                                              l409 141E  
                                            l514 2648                                              l418 14BC  
                                            l442 1D70                                              l515 2626  
                                            l419 14D0                                              l435 2566  
                                            l443 1D8C                                              l451 21B4  
                                            l348 2748                                              l516 263E  
                                            l444 1DA8                                              l452 21D0  
                                            l509 2A22                                              l390 18BA  
                                            l470 24A4                                              l391 18F4  
                                            l439 1DC4                                              l367 275C  
                                            l448 21EC                                              l536 253C  
                                            l456 164C                                              l449 21A0  
                                            l537 2528                                              l491 2ACE  
                                            l387 1934                                              l395 25C8  
                                            l548 2700                                              l388 1892  
                                            l396 25A4                                              l398 25BA  
                      __end_of_LIGHT_CARD_STATUS FD1B                                              l497 2AA4  
                                            l941 0248                                              l951 0354  
                                            l943 02AC                                              l960 059E  
                                            l944 0256                                              l936 0150  
                                            l953 08F0                                              l945 02A8  
                                            l937 015E                                              l970 09CC  
                                            l962 0670                                              l954 03DA  
                                            l946 02A0                                              l955 0918  
                                            l947 0278                                              l980 0BCC  
                                            l972 09DA                                              l956 0408  
                                            l981 0BDC                                              l965 07B0  
                                            l957 0426                                              l990 0EFA  
                                            l982 0BEC                                              l974 09E8  
                                            l966 0830                                              l958 0444  
                                            l991 0EB4                                              l967 0850  
                                            l959 078C                                              l976 09F6  
                                            l968 09A6                                              l993 0ECC  
                                            l985 0CA2                                              l969 0B44  
                                            l995 0EE6                                              l987 0D78  
                                            l979 0B98                                              _CRC 0091  
                                            l997 0F10                                              l989 0E96  
                                            l999 0F28                                     __CFG_CPB$OFF 000000  
                          i2Xor_check@data_value 0025                                     __CFG_CPD$OFF 000000  
                                            _LQI 001D                                              _SMS 0072  
                               _set_long_address 274A                       ??_INT0_SetInterruptHandler 01DB  
                                     _SMS_format 00CB                                              _msg 00BA  
                     __end_of_Enable_Result_Code FD61                             __size_of_Write_b_eep 003C  
                                   ___awmod@sign 01DD                                              prod 000FF3  
                                            tosl 000FFD                                              wreg 000FE8  
                        __size_of_start_transmit 0048                       i2read_ZIGBEE_short@address 0027  
                                    i2_Xor_check 265A               __size_of_Message_Send_Frame_LDR_ON 0090  
                                __end_of_ATCheck FDE7                      read_ZIGBEE_long@address_low 002D  
                                           l1001 0F42                                             l1010 22CA  
                                           l1011 227C                                             l1100 25E8  
                                           l1020 234A                                             l1013 22B4  
                                           l1022 2370                                             l1110 1214  
                                           l1120 12CE                                             l1112 124A  
                                           l1121 12E0                                             l1113 1252  
                          ?_write_TX_normal_FIFO 0025                                             l1034 2228  
                                           l1130 139A                                             l1114 1266  
                                           l1019 2386                                             l1043 1B9A  
                                           l1131 13AC                                             l1123 1316  
                                           l1140 1C70                                             l1028 281C  
                                           l1124 131E                                             l1116 1278  
                                           l1037 2254                                             l1133 13E2  
                                           l1125 1336                                             l1142 1CB4  
                                           l1134 13EA                                             l1126 1344  
                                           l1118 12AE                                             l1311 2038  
                                           l1135 1402                                             l1119 12B6  
                                           l1320 209E                                             l1312 2048  
                                           l1128 137A                                             l1129 1382  
                                           l1138 1C40                                             l1314 2066  
                                           l1315 205E                                             l1331 2172  
                                           l1332 217C                                             l1324 2138  
                                           l1333 218A                                             l1325 2144  
                                           l1318 2086                                             l1319 2090  
                                           l1327 215A                                             l1328 2152  
                                           l1099 2602                                             l6013 2754  
                                           l6131 1642                                             l6151 16A4  
                                           l6401 133C                                             l6331 120C  
                                           l5631 262E                                             l6425 13A4  
                                           l6353 1270                                             l7171 0BEC  
                                           l5737 2814                                             l6377 12D8  
                                           l7337 0F54                                             l6739 0156  
                                           l5991 2726                                             _DATA 001F  
                                           STR_1 FF51                                             STR_2 FF64  
                                           STR_3 FEB1                                             STR_4 FE11  
                                           STR_5 FEC5                                             STR_6 FE75  
                                           STR_7 FE11                                             STR_8 FE9D  
                                           STR_9 FE11                                             _LATA 000F89  
                                           _LATB 000F8A                                             _LATC 000F8B  
                                           _IMEI FD7B                                             u3200 1418  
                                           _LATD 000F8C                                             _LATE 000F8D  
                                           _LATF 000F8E                                             _LATG 000F8F  
                                           u4021 09B4                                             u3080 2644  
                                           u3240 22B2                                             u4131 0BFA  
                                           u3350 167C                                             u3247 22A8  
                                           u3600 13F0                                             u3520 1324  
                                           u3440 1258                                             u3370 1730  
                                           u3710 206A                                             u3560 1388  
                                           u3480 12BC                                             u3395 270E  
                                           u3396 2710                                             u3770 215E  
                                           u3951 0508                                             u3880 018E  
                                           _Call 00DD                                             _Nilp 0004  
                                           _Tick 0009                                             _main 0000  
                          write_TX_normal_FIFO@i 01E7                            write_TX_normal_FIFO@n 01E6  
                                           _send 00E3                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             indf0 000FEF  
                                           fsr2h 000FDA                                             fsr0l 000FE9  
                                           indf1 000FE7                                             indf2 000FDF  
                                           fsr1l 000FE1                                             fsr2l 000FD9  
                                           btemp 0049                                       _Clear_Data 2714  
                                           prodh 000FF4                                             prodl 000FF3  
                                           start 00FC                                  __end_of_SMSread FD57  
                                  __CFG_IESO$OFF 000000                                    __CFG_FOSC$HS1 000000  
                                __end_of_LcdData 29A0                                  __end_of_Delayms 265A  
                                __end_of_LcdInit 2436                               _set_reception_mode 2194  
                                  __CFG_MCLRE$ON 000000                         ?_set_frame_format_filter 0025  
                                   ___param_bank 000000                                       _LcdDisplay 25DA  
                              i2Xor_check@length 0027                                  _set_not_encrypt 2A4E  
                          __end_of_set_RSSI_mode 25DA                                  __end_of_InitSPI 2918  
                                set_not_ACK@temp 01DC              __size_of_Message_Send_Frame_LDR_OFF 00B0  
                         set_RSSI_mode@RSSI_mode 01DC                                  __end_of_SerInit 233A  
                      __size_of_enable_interrupt 000E                   ??_TMR0_DefaultInterruptHandler 00E9  
                                  __CFG_RETEN$ON 000000                   __size_of_OSCILLATOR_Initialize 0014  
                            ?_set_reception_mode 0025                           ?_init_ZIGBEE_nonbeacon 0025  
                  __end_of_OSCILLATOR_Initialize 2AA2                                      ?i2_SPI_Read 0025  
                                          ?_main 0025                                  __end_of___awdiv 20A8  
                                          _CHECK 00B1                                            _EEADR 000F62  
                                          STR_10 FED9                                            STR_11 FE11  
                                          STR_20 FFBF                                            STR_12 FEED  
                                          STR_13 FF01                                            STR_21 FDFC  
                                          STR_14 FF15                                            STR_30 FE61  
                                          STR_22 FDE7                                            STR_15 FFEF  
                                          STR_23 FF29                                            STR_31 FE89  
                                          STR_32 FFEF                                            STR_16 FFBF  
                                          STR_40 FF9D                                            STR_24 FF8A  
                                          STR_17 FFEF                                            STR_33 FFE0  
                                          STR_41 FFAE                                            STR_25 FF77  
                                          STR_34 FFEF                                            STR_18 FFBF  
                                          STR_26 FF3D                                            STR_35 FFE0  
                                          STR_19 FFD0                                            STR_27 FE25  
                                          STR_36 FFD0                                            STR_28 FE39  
                                __end_of___awmod 2194                                            STR_37 FFE0  
                                          STR_29 FE4D                                            STR_38 FEB1  
                                          STR_39 FE11                              _data_TX_normal_FIFO 0060  
                                          _T0CON 000FD5                                  ___awdiv@divisor 01DA  
                                 __CFG_DEBUG$OFF 000000                                            _ERROR 0011  
                                          i2l351 0FB6                                            i2l353 1026  
                                          i2l354 1086                                            i2l536 2680  
                                          i1l928 00A4                                            i2l537 266C  
                                          i1l929 00A0                                            i2l491 2B02  
                                          i2l497 2B0E                                            i2l921 1820  
                                          i2l922 1838                                            i2l914 17CC  
                                          i2l915 17C8                                            i2l917 183A  
                                          i2l919 1808                                  ___awdiv@counter 01DC  
                                          _RCREG 000FAE                                            _VALUE 0006  
                            i2SPI_Write@response 0025                                            _TMR0H 000FD7  
                                          _TMR0L 000FD6                                            _SPBRG 000FAF  
                                          _PORTE 000F84                                            _RSSI2 001C  
                                          _TRISA 000F92                                            _TRISB 000F93  
                                          _TRISC 000F94                                            _TRISD 000F95  
                                          _TRISE 000F96                                            _TRISF 000F97  
                                          _TRISG 000F98                                            _TXREG 000FAD  
                                 _WaitForReceive 00A5                                            _TX_ID 000A  
                                     _Emeregency 016A                                    __CFG_WRT0$OFF 000000  
                                          _Array 0194                                    __CFG_WRT1$OFF 000000  
                                          _Frame 009D                                    __CFG_WRT2$OFF 000000  
                                  __CFG_WRT3$OFF 000000                                    __CFG_WRT4$OFF 000000  
                                 __CFG_EBRT0$OFF 000000                                    __CFG_WRT5$OFF 000000  
                                 __CFG_EBRT1$OFF 000000                                    __CFG_WRT6$OFF 000000  
                                 __CFG_EBRT2$OFF 000000                                    __CFG_WRT7$OFF 000000  
                                 __CFG_EBRT3$OFF 000000                                   __CFG_EBRT4$OFF 000000  
                                 __CFG_FCMEN$OFF 000000                                   __CFG_EBRT5$OFF 000000  
                                 __CFG_EBRT6$OFF 000000                                   __CFG_EBRT7$OFF 000000  
                               __end_of_TMR0_ISR 28AC                                            _Trick 0008  
                                  __CFG_WRTB$OFF 000000                                    __CFG_WRTC$OFF 000000  
                                          _Store 0013                                    __CFG_WRTD$OFF 000000  
                                 Read_b_eep@badd 01D8                                   __CFG_EBRTB$OFF 000000  
                                SprintRom@length 01E0                                            _ckeck 008D  
                                          _delay 29C0                           Write_b_eep@GIE_BIT_VAL 01DB  
                                          _value 0007                                 __end_of_SPI_Read 2AB4  
                                          pclath 000FFA                             ??_set_reception_mode 01DC  
                                          tablat 000FF5                                 __end_of_RF_reset 2884  
                                          status 000FD8                                            wtemp6 004A  
                        __end_of_LIGHT_ALTERNATE FD28                                     Sprint@length 01E0  
                             __size_of_SPI_Write 0012                   ?_INTERRUPT_InterruptManagerLow 0025  
                               __end_of_Delay_ms 2A34                           __size_of_ID_Conversion 00AA  
                               __end_of_Get_Baud FD7B                         __end_of_read_ZIGBEE_long 2488  
                                   __end_of_IMEI FD82                                  __initialization 20A8  
                                   __end_of_main 0F7E                                 read_RX_FIFO@temp 0033  
                                     _Read_b_eep 2AEA                                    ??_Module_Init 01E5  
                   __end_ofi2_write_ZIGBEE_short 29FC                     __end_of_Message_Send_Frame_1 2022  
                   __end_of_Message_Send_Frame_2 1F92                     __end_of_Message_Send_Frame_3 1F02  
                               __end_of_Message1 FD4D                                 __end_of_Message2 FD0E  
                               __end_of_Message3 FDD8                                 __end_of_Message6 FDB8  
                                 _ADDRESS_long_1 0100                                   _ADDRESS_long_2 00D5  
                                         ??_main 01E8                                    ?_read_RX_FIFO 0025  
                                  __activetblptr 000003                                   __CFG_PLLCFG$ON 000000  
                         ??_write_TX_normal_FIFO 01E1                                           ?_delay 01D8  
                                   ?i2_SPI_Write 0025                                       _Send_Frame 00A9  
                                         _EEDATA 000F61                                           _EECON2 000F7E  
                                         _ANCON0 000F25                                           _ANCON1 000F24  
                                         _ANCON2 000F23                                 ___awdiv@dividend 01D8  
 __end_of_Message_Send_Frame_Parking_light_Board 1AB2  __size_of_Message_Send_Frame_Parking_light_Board 00B0  
        ?_Message_Send_Frame_Parking_light_Board 0025         ??_Message_Send_Frame_Parking_light_Board 01E5  
         _Message_Send_Frame_Parking_light_Board 1A02                            __size_of_DeleteAllSms 00AE  
                                         _LENGTH 0020         __end_of_nonbeacon_PAN_coordinator_device 26D8  
      __size_of_nonbeacon_PAN_coordinator_device 003E                ?_nonbeacon_PAN_coordinator_device 0025  
             ??_nonbeacon_PAN_coordinator_device 01DC                 _nonbeacon_PAN_coordinator_device 269A  
                                __CFG_BBSIZ$BB2K 000000                                   __CFG_WDTEN$OFF 000000  
                                         _ID_SET 000C                                        ??_LcdData 01DE  
                               SPI_Write@command 01D9                                        ??_Delayms 01DA  
                                         _OSCCON 000FD3                                        ??_LcdInit 01DF  
                          __size_of_ClearRxBytes 002A                          __end_of_set_not_encrypt 2A64  
                            __size_ofi2_SPI_Read 0010                                       _Sim_Status FD6A  
                                    ?_Clear_Data 0025                                     ?_set_channel 0025  
                               set_CCA_mode@temp 01DD                                        ??_InitSPI 01DC  
                                         _TX_CRC 0093                                      _Emeregency2 0154  
                                    _Emeregency3 0127                                           _LcdCmd 29A0  
                               __end_of_echo_off FD88                                           _Chksum 00A3  
                                         _Count1 0022                                           _Count2 0021  
                                         _V_Temp 009F                                        ??_SerInit 01D8  
                                         _Rv_CRC 0095                                   __CFG_XINST$OFF 000000  
                                         _Number 01A7                          write_ZIGBEE_long@data_r 01DC  
                                    ?_LcdDisplay 01DF                                     ?_set_not_ACK 0025  
                                         _Sprint 226C                         set_short_address@address 01DC  
                                  ClearRxBytes@i 01D8                                        ??___awdiv 01DC  
                                 __CFG_STVREN$ON 000000                                        ??___awmod 01DC  
                                         _data_r 001E                                           delay@l 01DA  
                                         clear_0 20EE                                           clear_1 20FA  
                                         clear_2 2106                                           clear_3 2112  
                               ___awdiv@quotient 01DE                                  ___awmod@divisor 01DA  
                              _set_WAKE_from_pin 29FC                                  ___awmod@counter 01DC  
                                 ??_read_RX_FIFO 002E                                 __end_of_pin_wake 2AC6  
                            Xor_check@data_value 01D8                               ?_set_WAKE_from_pin 0025  
                              __end_of_SPI_Write 2AD8                                    _ID_Conversion 1C10  
                             Xor_check@xor_value 01DC                                     _DeleteAllSms 1B62  
                   __end_of_LIGHT_DEBBUGE_STATUS FD6A                              __end_of_Module_Init 226C  
                               ??_lcd_off_cursor 01DF                                     __mediumconst FD00  
                                   _data_RX_FIFO 01B6                                   _start_transmit 2488  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8                                     _ClearRxBytes 280A  
                          __end_of_TMR0_CallBack 293C         INT0_SetInterruptHandler@InterruptHandler 01D8  
                            ??_set_WAKE_from_pin 01DC                                _init_ZIGBEE_basic 1CBA  
                             __size_of_SprintRom 0056                    __size_of_INTERRUPT_Initialize 0006  
               ??_INTERRUPT_InterruptManagerHigh 0035                  ?_INTERRUPT_InterruptManagerHigh 0025  
                              _SYSTEM_Initialize 2AD8                               ?_init_ZIGBEE_basic 0025  
                                     __accesstop 0060                          __end_of__initialization 2118  
                                  ?_set_CCA_mode 0025                               __size_of_Xor_check 0042  
                                     _Store_DATA 0081                     __size_ofi2_read_ZIGBEE_short 0022  
                             ?_SYSTEM_Initialize 0025                         __end_of_set_long_address 277E  
                                  ___rparam_used 000001                             __end_of_LIGHT_ALL_ON FD42  
                            ??_init_ZIGBEE_basic 01E1                                   __pcstackCOMRAM 0025  
                                   __pidataBANK0 277E                                     __pidataBANK1 194C  
           nonbeacon_PAN_coordinator_device@temp 01DC                              ??_SYSTEM_Initialize 01DB  
                                      ?_TMR0_ISR 0025                                    __end_of_delay 29DE  
                      __end_of_set_WAKE_from_pin 2A18                                      ?_Read_b_eep 01D8  
                             __size_of_check_msg 0206                                 _enable_interrupt 2B1C  
                                      ?_SPI_Read 0025                                       SprintRom@i 01E4  
                                     SprintRom@j 01E3                                   ?_ID_Conversion 0025  
                         __end_of_start_transmit 24D0                      __size_of_EXT_INT_Initialize 001A  
                                      ?_RF_reset 0025                            TMR0_ISR@CountCallBack 0099  
                            __size_of_Clear_Data 0036                                        ?_Delay_ms 01D8  
                             __size_of_lcd_clear 0008                                     Xor_check@xor 01DE  
                      __end_of_init_ZIGBEE_basic 1D50                      __size_of_write_ZIGBEE_short 0024  
                                   ?i2_Xor_check 0025                    write_ZIGBEE_long@address_high 01DF  
                       read_ZIGBEE_short@address 01DB                                          ??_delay 01DA  
                            __size_of_LcdDisplay 0040                        __end_of_SYSTEM_Initialize 2AEA  
                                _Manufacturer_Id FD8D                                  _ADDRESS_short_1 00C6  
                                _ADDRESS_short_2 00E7                                       __pbssBANK0 0060  
                                     __pbssBANK1 01B6                                       __pbssBANK2 0200  
                                 ??_set_CCA_mode 01DC                             i2_write_ZIGBEE_short 29DE  
                          _INT0_InterruptHandler 0088                             _Message_Send_Frame_1 1F92  
                           _Message_Send_Frame_2 1F02                             _Message_Send_Frame_3 1E72  
                             _Enable_Result_Code FD57                                 ?_set_not_encrypt 0025  
                                        ?_LcdCmd 0025                                    ?_set_TX_power 0025  
                                        ?_Sprint 01DE                          ??_init_ZIGBEE_nonbeacon 01E2  
                                     ??_TMR0_ISR 00E9                      i2write_ZIGBEE_short@address 0028  
                             __size_of_pin_reset 0022                                       _enable_PLL 2A7A  
                              __end_of_SprintRom 2390                                      _Module_Init 2204  
                                   ??i2_SPI_Read 0025                                       ??_SPI_Read 01D8  
                                  ??_Write_b_eep 01DB                                          _DATA_RX 00B2  
                                        _DATA_TX 00B7                                __end_of_Xor_check 2556  
                                ?_start_transmit 0025                                       ??_RF_reset 01DC  
                                        _ATCheck FDE4                                          _ID_READ 00AE  
                                        _IDByte1 00A2                                          _IDByte2 00A1  
                                        _IDByte3 00A0                 __size_of_set_frame_format_filter 0092  
                                        _REFOCON 000F2A                                       ??_Delay_ms 01DA  
                                        _OSCCON2 000F64                                          _F_ERROR 0010  
                                        _OSCTUNE 000F9B                                          _F_IdSet 0015  
                                        _SSP1BUF 000FC9                      set_frame_format_filter@temp 01DD  
                                        _F_SetID 000D                                          _F_Input 0018  
                     i2write_ZIGBEE_short@data_r 0027                                __end_of_check_msg 1406  
                                        _SMSread FD4D                                          _T_ERROR 008F  
                         set_reception_mode@temp 01DD                              __size_of_Read_b_eep 0012  
                           __size_ofi2_SPI_Write 0010                            ?i2_write_ZIGBEE_short 0027  
                                        _LcdData 2980                                          _Delayms 261A  
                          ?_Message_Send_Frame_1 0025                            ?_Message_Send_Frame_2 0025  
                          ?_Message_Send_Frame_3 0025                                          _LcdInit 23E4  
              __size_of_INT0_SetInterruptHandler 000E                                          _T_Input 0019  
                           __end_of_read_RX_FIFO 1200                        ?_INT0_SetInterruptHandler 01D8  
                                        _InitSPI 28F4                               __end_ofi2_SPI_Read 2B1C  
                              SPI_Write@response 01D8                                  __size_of_LcdCmd 0020  
                                 ??_set_TX_power 01E1                                  Xor_check@length 01DA  
                                __CFG_PWRTEN$OFF 000000                                        ?_pin_wake 0025  
                                        _Send_ID 008B                                          __Hparam 0000  
                                        _SerInit 22D4                                    _HEADER_LENGHT FD91  
                              ?_read_ZIGBEE_long 0027                                          __Lparam 0000  
                           __size_of_set_channel 01C0                         write_ZIGBEE_long@address 01DA  
                           _LIGHT_DEBBUGE_STATUS FD61                                __end_of_lcd_clear 2B48  
                                __size_of_Sprint 0068                               ??_read_ZIGBEE_long 0029  
                        read_ZIGBEE_long@address 0027                                          ___awdiv 2022  
                                        ___awmod 2122                       __size_of_set_WAKE_from_pin 001C  
                                        Sprint@i 01E4                                          Sprint@j 01E3  
                                        _address 0005                             __size_of_set_not_ACK 0016  
                                ??_ID_Conversion 01D8                                set_long_address@i 01DE  
                                        __pcinit 20A8                                          __ramtop 1000  
                                        __ptext0 0000                                          __ptext1 15C6  
                                        __ptext2 2488                                          __ptext3 2834  
                                        __ptext4 2AA2                                          __ptext5 2A4E  
                                        __ptext6 2A64                                          __ptext7 2514  
                                        __ptext8 27AE                                          __ptext9 2194  
                                      _T0CONbits 000FD5                            _OSCILLATOR_Initialize 2A8E  
                        __end_of_Manufacturer_Id FD91                                 ___awmod@dividend 01D8  
                       ??_PIN_MANAGER_Initialize 01D8                                __CFG_MSSPMSK$MSK7 000000  
                         _address_TX_normal_FIFO 0097                       __size_of_init_ZIGBEE_basic 0096  
                            __end_of_Write_b_eep 2714                                       _set_PAN_ID 27DC  
                   ??_Message_Send_Frame_LDR_OFF 01E5                       __size_of_SYSTEM_Initialize 0012  
                                  _Delet_All_SMS FDD8                                   __pintcode_body 173E  
                         __size_of_set_RSSI_mode 0042                             end_of_initialization 2118  
                              __end_of_pin_reset 295E                      __size_of_set_reception_mode 0070  
                     ?_Message_Send_Frame_LDR_ON 0025                                        Delay_ms@y 01DA  
                                _address_RX_FIFO 00C8                                          int_func 173E  
                                   ??_Clear_Data 01D8                        set_channel@channel_number 01E1  
                              _write_ZIGBEE_long 2390                                        _F_ID_SEND 00AA  
                                     ??_pin_wake 01DC                                        _F_ID_Send 00AD  
                             ?_write_ZIGBEE_long 01DA                                     ??_LcdDisplay 01E1  
                                      _RCSTAbits 000FAB                                          postdec1 000FE5  
                            __end_of_DATA_LENGHT FD93                                          postinc0 000FEE  
                                        postinc2 000FDE                                _set_short_address 27AE  
                              set_TX_power@power 01E2                                      ?_enable_PLL 0025  
                             ?_set_short_address 01DC                              ??_write_ZIGBEE_long 01DD  
                           __end_of_set_CCA_mode 194C                                        _PORTAbits 000F80  
                                      _PORTCbits 000F82                                        _PORTEbits 000F84  
                                      _PORTFbits 000F85                              i2_read_ZIGBEE_short 295E  
                            ??_set_short_address 01DE                               __end_of_Clear_Data 274A  
                                      _TRISCbits 000F94                             __end_of_Set_Responce FD8D  
                                   _LIGHT_ALL_ON FD35                                        _SPI_Write 2AC6  
                            set_not_encrypt@temp 01DC                           ??i2_write_ZIGBEE_short 0028  
                                 i2Xor_check@xor 002B                               __end_of_LcdDisplay 261A  
                         ??_Message_Send_Frame_1 01E5                           ??_Message_Send_Frame_2 01E5  
                         ??_Message_Send_Frame_3 01E5                         __end_of_enable_interrupt 2B2A  
                  __size_of_write_TX_normal_FIFO 0178                             __size_ofi2_Xor_check 0040  
                      __end_of_write_ZIGBEE_long 23E4                         set_reception_mode@r_mode 01DC  
              __end_of_Message_Send_Frame_LDR_ON 1E72                             ?i2_read_ZIGBEE_short 0025  
                                      _SMSsender 01CB                                        _TXSTAbits 000FAC  
                                      _T_ID_Send 000B                                ID_Conversion@num1 01DC  
                              ID_Conversion@num2 01DB                                ID_Conversion@num3 01D9  
                              ?_set_long_address 01DC                            __end_of_LIGHT_ALL_OFF FD35  
                                 __end_of_LcdCmd 29C0                        __end_of_set_short_address 27DC  
                             i2SPI_Write@command 0026                               ??_set_long_address 01DE  
                                      _Device_ID 001A                     __end_of_INTERRUPT_Initialize 2B4E  
                                  _set_RSSI_mode 2598                                     ??_Read_b_eep 01DA  
                                 __end_of_Sprint 22D4                     _INT0_DefaultInterruptHandler 000000  
                                 SprintRom@datas 01DE                                __size_of_TMR0_ISR 0028  
                                    _Write_b_eep 26D8                           ?_OSCILLATOR_Initialize 0025  
                        _set_frame_format_filter 1D50                                        _Count_LED 000F  
                                    Sprint@datas 01DE                          set_long_address@address 01DC  
                              __size_of_SPI_Read 0012                                        _RXcounter 0002  
                            start_initialization 20A8                             __end_of_set_TX_power 2598  
                __size_of_PIN_MANAGER_Initialize 0044                                __size_of_RF_reset 0028  
                                    ?_set_PAN_ID 01DC                                       ?_SPI_Write 0025  
                              __size_of_Delay_ms 001C                            __size_of_read_RX_FIFO 0282  
                                      _InputRead 0016                              __size_of_enable_PLL 0014  
                             __end_of_Read_b_eep 2AFC                            ??i2_read_ZIGBEE_short 0027  
                                    _DATA_LENGHT FD92                                         ??_LcdCmd 01DE  
                                 check_msg@Check 01D9                                         ??_Sprint 01E1  
                                 ?_set_RSSI_mode 0025                  set_frame_format_filter@fff_mode 01DC  
                                   Delay_ms@time 01D8                           __size_of_TMR0_CallBack 0024  
                               ??_start_transmit 01DC                   __size_of_init_ZIGBEE_nonbeacon 0024  
                                    __pdataBANK0 00BA                                      __pdataBANK1 0100  
                  __end_of_init_ZIGBEE_nonbeacon 28D0                                     ?_Module_Init 0025  
                     __end_of_EXT_INT_Initialize 2A4E                                     LcdData@value 01DE  
                                   _read_RX_FIFO 0F7E                           ID_Conversion@Id_Number 01DA  
                                      _SprintRom 233A                       __end_of_write_ZIGBEE_short 28F4  
                           i2Xor_check@xor_value 0029                                      __pbssCOMRAM 0001  
                             __end_of_Sim_Status FD73                 __end_of_INT0_SetInterruptHandler 2B38  
             __end_of_Message_Send_Frame_LDR_OFF 1B62                       _Message_Send_Frame_LDR_OFF 1AB2  
                                  __pcstackBANK0 00E9                                    __pcstackBANK1 01D8  
                              set_RSSI_mode@temp 01DD                                        _Xor_check 2514  
                       write_ZIGBEE_short@data_r 01DA                                         ?_LcdData 0025  
                                       ?_Delayms 01D8                       __size_of_write_ZIGBEE_long 0054  
                                       ?_LcdInit 0025                     write_ZIGBEE_long@address_low 01E0  
                        read_ZIGBEE_short@data_r 01DA                          __size_of_lcd_off_cursor 0008  
                                       ?_InitSPI 0025                            _TMR0_InterruptHandler 0085  
                                      _check_msg 1200                                         ?_SerInit 0025  
                         _PIN_MANAGER_Initialize 24D0                       __size_of_set_short_address 002E  
                              __CFG_CCP2MX$PORTC 000000                                        __pintcode 0008  
                          __size_of_set_CCA_mode 00C6                     read_ZIGBEE_long@address_high 002C  
                                  __pmediumconst FD00                                __size_of_pin_wake 0012  
                                       ?___awdiv 01D8                              __size_of_set_PAN_ID 002E  
                                       ?___awmod 01D8                         __size_of_set_not_encrypt 0016  
                                      _lcd_clear 2B40                        ??_set_frame_format_filter 01DC  
                                    __pintcodelo 0018                                i2SPI_Read@TempVar 0025  
                                     ?_SprintRom 01DE                                     _Send_Frame_2 00A8  
                      __size_of_read_ZIGBEE_long 0052                                       ?_Xor_check 01D8  
                                  ??i2_SPI_Write 0025                                      ??_SPI_Write 01D8  
                         read_ZIGBEE_long@data_r 002B                                   __size_of_delay 001E  
                                  _TMR0_CallBack 2918                             _INTERRUPT_Initialize 2B48  
                    ??_Message_Send_Frame_LDR_ON 01E5                                     _set_CCA_mode 1886  
                                 LcdDisplay@LINE 01E1                                    ??_set_channel 01E1  
                                     ?_check_msg 0025                                        _pin_reset 293C  
                                       _PIE1bits 000F9D                                         _PAN_ID_1 00C4  
                                       _PAN_ID_2 00E5                                         Delayms@k 01DA  
                                       Delayms@l 01DC                                         _INTTRUPT 0023  
                                       i1u318_28 2928                                         i1u328_20 289C  
                                ??_set_RSSI_mode 01DC                                        _lost_data 001B  
                                       i1u386_20 0088                                         _F_BUZZER 00AC  
                                       i1u386_26 008A                                         _PIR1bits 000F9E  
                                       i2u186_40 108A                                         _SEND_SMS 017F  
                                  ??_set_not_ACK 01DC                                     _Set_Responce FD88  
                                       _RCONbits 000FD0                                        _slave_add 0012  
                                    _LED_PATTERN 0108                                         _TMR0_ISR 2884  
                                   ??_enable_PLL 01E1                                       ?_lcd_clear 0025  
                                       _SPI_Read 2AA2                            __size_of_set_TX_power 0042  
                               __CFG_SOSCSEL$DIG 000000                            __end_of_ID_Conversion 1CBA  
                                       _Call_Cut 00C0                                  Write_b_eep@badd 01D8  
                                       _RF_reset 285C                                  Write_b_eep@data 01DA  
                                  ?_DeleteAllSms 0025                                         _T_BUZZER 00AB  
                                       _Delay_ms 2A18                                    ?_ClearRxBytes 0025  
                                  read_RX_FIFO@i 0034                                         _Get_Baud FD73  
                                 ?_TMR0_CallBack 0025                       __end_of_set_reception_mode 2204  
                                    _INTCON2bits 000FF1                                        copy_data0 20BC  
                                      copy_data1 20DC                            ?_INTERRUPT_Initialize 0025  
                       _INT0_SetInterruptHandler 2B2A                  __end_of_set_frame_format_filter 1DE2  
                              ?_enable_interrupt 0025                               __end_of_enable_PLL 2A8E  
                               __size_of_LcdData 0020                                 __size_of_Delayms 0040  
                            __end_ofi2_SPI_Write 2B0C                                         _Message1 FD42  
                                       _Message2 FD01                                         _Message3 FDB8  
                                       _Message4 013E                                         _Message5 010F  
                                       _Message6 FD93                                 __size_of_LcdInit 0052  
                             ??_enable_interrupt 01DC                                _read_ZIGBEE_short 2834  
                                     _EECON1bits 000F7F                                       ?_pin_reset 0025  
                                    Clear_Data@n 01D8                                 __size_of_InitSPI 0024  
                                       _RxBuffer 0200                                         __Hrparam 0000  
                             ?_read_ZIGBEE_short 0025                                     _set_TX_power 2556  
                                       __Lrparam 0000                                         _Sent_sms 00A6  
                               __size_of_SerInit 0066                               __CFG_BOREN$SBORDIS 000000  
                            __end_of_set_channel 15C6                                      LcdCmd@value 01DE  
                   __end_of_write_TX_normal_FIFO 173E                                         _Portread 0017  
                        ??_OSCILLATOR_Initialize 01D8                                 __size_of___awdiv 0086  
                               __size_of___awmod 0072                              ??_read_ZIGBEE_short 01DA  
                                    Delayms@time 01D8                        _Message_Send_Frame_LDR_ON 1DE2  
                                   ?_Write_b_eep 01D8                              __end_of_set_not_ACK 2A7A  
                           __size_of_Module_Init 0068                                   ??_DeleteAllSms 01E5  
                      __size_of_set_long_address 0034                                      ??_SprintRom 01E1  
                              ??_set_not_encrypt 01DC                                   ??_ClearRxBytes 01D8  
                ??_INTERRUPT_InterruptManagerLow 00E9                                         _echo_off FD82  
                                  ??i2_Xor_check 0028                                     ??_set_PAN_ID 01DE  
                                    ??_Xor_check 01DB                                         __ptext10 274A  
                                       __ptext11 1D50                                         __ptext20 285C  
                                       __ptext12 29FC                                         __ptext21 2598  
                                       __ptext13 2556                                         __ptext30 2AC6  
                                       __ptext22 1886                                         __ptext14 27DC  
                                       __ptext31 1200                                         __ptext23 2AB4  
                                       __ptext15 293C                                         __ptext40 2A34  
                                       __ptext32 2122                                         __ptext24 2A18  
                                       __ptext16 269A                                         __ptext41 2B2A  
                                       __ptext33 2022                                         __ptext25 1CBA  
                                       __ptext17 2B38                                         __ptext50 1A02  
                                       __ptext42 2AEA                                         __ptext34 26D8  
                                       __ptext26 2A7A                                         __ptext18 28AC  
                                       __ptext51 1DE2                                         __ptext43 2204  
                                       __ptext35 22D4                                         __ptext27 2390  
                                       __ptext19 1406                                         __ptext60 28F4  
                                       __ptext52 1AB2                                         __ptext44 1B62  
                                       __ptext36 2AD8                                         __ptext28 2B1C  
                                       __ptext61 29C0                                         __ptext53 1E72  
                                       __ptext45 2B40                                         __ptext37 24D0  
                                       __ptext29 28D0                                         __ptext70 265A  
                                       __ptext62 1C10                                         __ptext54 1F02  
                                       __ptext46 233A                                         __ptext38 2A8E  
                                       __ptext71 0F7E                                         __ptext63 2714  
                                       __ptext55 1F92                                         __ptext47 25DA  
                                       __ptext39 2B48                                         __ptext72 29DE  
                                       __ptext56 226C                                         __ptext48 2980  
                                       __ptext73 2436                                         __ptext65 2884  
                                       __ptext57 23E4                                         __ptext49 280A  
                                       __ptext74 2AFC                                         __ptext66 2918  
                                       __ptext58 29A0                                         __ptext75 2B0C  
                                       __ptext67 2B4E                                         __ptext59 261A  
                                       __ptext76 0000                                         __ptext69 295E  
                                   _SSP1CON1bits 000FC6                        __end_of_read_ZIGBEE_short 285C  
                  __size_ofi2_write_ZIGBEE_short 001E                    __size_of_Message_Send_Frame_1 0090  
                  __size_of_Message_Send_Frame_2 0090                    __size_of_Message_Send_Frame_3 0090  
                                 _lcd_off_cursor 2B38                                    __size_of_main 0F7E  
                                       delay@dly 01D8                                      ??_check_msg 01D8  
           __end_of_TMR0_DefaultInterruptHandler 2B50            __size_of_TMR0_DefaultInterruptHandler 0002  
                   _TMR0_DefaultInterruptHandler 2B4E                                         _pin_wake 2AB4  
                            __CFG_RTCOSC$SOSCREF 000000                                         int$flags 0049  
                           set_CCA_mode@CCA_mode 01DC                               __end_of_set_PAN_ID 280A  
                                    ??_lcd_clear 01DF                        write_ZIGBEE_short@address 01DB  
                                   _SSP1STATbits 000FC7                              __CFG_INTOSCSEL$HIGH 000000  
                                     _RECEIVE_OK 00A7                                 _read_ZIGBEE_long 2436  
                                     _INTCONbits 000FF2                                set_PAN_ID@address 01DC  
                                ??_TMR0_CallBack 00E9                      ?_Message_Send_Frame_LDR_OFF 0025  
                         ??_INTERRUPT_Initialize 01D8                      __end_ofi2_read_ZIGBEE_short 2980  
                                    i2_SPI_Write 2AFC                               _EXT_INT_Initialize 2A34  
                         __end_of_lcd_off_cursor 2B40                                         intlevel1 0000  
                                       intlevel2 0000                               _write_ZIGBEE_short 28D0  
                            __end_ofi2_Xor_check 269A                          ?_PIN_MANAGER_Initialize 0025  
                               LcdDisplay@string 01DF                              ?_EXT_INT_Initialize 0025  
                                    _set_channel 1406                                      ??_pin_reset 01DC  
                          __end_of_HEADER_LENGHT FD92                                 _F_WaitForReceive 00A4  
                  ?_TMR0_DefaultInterruptHandler 0025                              ?_write_ZIGBEE_short 01DA  
                                    _set_not_ACK 2A64                               __CFG_WDTPS$1048576 000000  
                                     i2_SPI_Read 2B0C           __end_of_INTERRUPT_InterruptManagerHigh 1886  
        __size_of_INTERRUPT_InterruptManagerHigh 187E                   _INTERRUPT_InterruptManagerHigh 0008  
                          _init_ZIGBEE_nonbeacon 28AC                             ??_EXT_INT_Initialize 01DB  
                                     _SEQ_NUMBER 00CA                                _LIGHT_CARD_STATUS FD0E  
                           ??_write_ZIGBEE_short 01DB                            __end_of_Delet_All_SMS FDE4  
          __end_of_INTERRUPT_InterruptManagerLow 00FC           __size_of_INTERRUPT_InterruptManagerLow 00E4  
                  _INTERRUPT_InterruptManagerLow 0018                             _write_TX_normal_FIFO 15C6  
                                ?_lcd_off_cursor 0025                   __end_of_PIN_MANAGER_Initialize 2514  
                     __size_of_read_ZIGBEE_short 0028                              __CFG_BORPWR$ZPBORMV 000000  
                           __end_of_DeleteAllSms 1C10                             __end_of_ClearRxBytes 2834  
