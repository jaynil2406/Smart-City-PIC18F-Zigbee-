

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 07 15:24:54 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           ; Version 1.45
    96                           ; Generated 16/11/2017 GMT
    97                           ; 
    98                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K22 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK0
   131  002E58                     __pidataBANK0:
   132                           	opt stack 0
   133                           
   134                           ;initializer for _PAN_ID_1
   135  002E58  03                 	db	3
   136  002E59  03                 	db	3
   137                           
   138                           ;initializer for _ADDRESS_short_1
   139  002E5A  01                 	db	1
   140  002E5B  01                 	db	1
   141                           
   142                           ;initializer for _address_RX_FIFO
   143  002E5C  0300               	dw	768
   144                           
   145                           ;initializer for _SEQ_NUMBER
   146  002E5E  23                 	db	35
   147                           
   148                           ;initializer for _PAN_ID_2
   149  002E5F  03                 	db	3
   150  002E60  03                 	db	3
   151                           
   152                           ;initializer for _ADDRESS_short_2
   153  002E61  02                 	db	2
   154  002E62  02                 	db	2
   155                           
   156                           	psect	idataBANK1
   157  002DFE                     __pidataBANK1:
   158                           	opt stack 0
   159                           
   160                           ;initializer for _ADDRESS_long_1
   161  002DFE  01                 	db	1
   162  002DFF  01                 	db	1
   163  002E00  01                 	db	1
   164  002E01  01                 	db	1
   165  002E02  01                 	db	1
   166  002E03  01                 	db	1
   167  002E04  01                 	db	1
   168  002E05  01                 	db	1
   169                           
   170                           ;initializer for _ADDRESS_long_2
   171  002E06  02                 	db	2
   172  002E07  02                 	db	2
   173  002E08  02                 	db	2
   174  002E09  02                 	db	2
   175  002E0A  02                 	db	2
   176  002E0B  02                 	db	2
   177  002E0C  02                 	db	2
   178  002E0D  02                 	db	2
   179                           
   180                           	psect	smallconst
   181  001000                     __psmallconst:
   182                           	opt stack 0
   183  001000  00                 	db	0
   184  001001                     _Resistance0:
   185                           	opt stack 0
   186  001001  B3                 	db	179
   187  001002  71                 	db	113
   188  001003  49                 	db	73
   189  001004                     __end_of_Resistance0:
   190                           	opt stack 0
   191  001004                     _Vcc:
   192                           	opt stack 0
   193  001004  33                 	db	51
   194  001005  53                 	db	83
   195  001006  40                 	db	64
   196  001007                     __end_of_Vcc:
   197                           	opt stack 0
   198  001007                     _R3:
   199                           	opt stack 0
   200  001007  40                 	db	64
   201  001008  1C                 	db	28
   202  001009  46                 	db	70
   203  00100A                     __end_of_R3:
   204                           	opt stack 0
   205  00100A                     _AdcRef:
   206                           	opt stack 0
   207  00100A  33                 	db	51
   208  00100B  53                 	db	83
   209  00100C  3A                 	db	58
   210  00100D                     __end_of_AdcRef:
   211                           	opt stack 0
   212  00100D                     _HEADER_LENGHT:
   213                           	opt stack 0
   214  00100D  0B                 	db	11
   215  00100E                     __end_of_HEADER_LENGHT:
   216                           	opt stack 0
   217  00100E                     _DATA_LENGHT:
   218                           	opt stack 0
   219  00100E  05                 	db	5
   220  00100F                     __end_of_DATA_LENGHT:
   221                           	opt stack 0
   222  0000                     _REFOCON	set	3882
   223  0000                     _ANCON2	set	3875
   224  0000                     _ANCON1	set	3876
   225  0000                     _ANCON0	set	3877
   226  0000                     _PORTE	set	3972
   227  0000                     _PORTD	set	3971
   228  0000                     _PORTAbits	set	3968
   229  0000                     _EECON2	set	3966
   230  0000                     _EECON1bits	set	3967
   231  0000                     _EEDATA	set	3937
   232  0000                     _EEADR	set	3938
   233  0000                     _PIR1bits	set	3998
   234  0000                     _SSP1BUF	set	4041
   235  0000                     _SSP1STATbits	set	4039
   236  0000                     _TRISCbits	set	3988
   237  0000                     _SSP1CON1bits	set	4038
   238  0000                     _PORTFbits	set	3973
   239  0000                     _PORTCbits	set	3970
   240  0000                     _OSCTUNE	set	3995
   241  0000                     _OSCCON2	set	3940
   242  0000                     _OSCCON	set	4051
   243  0000                     _T0CONbits	set	4053
   244  0000                     _T0CON	set	4053
   245  0000                     _TMR0L	set	4054
   246  0000                     _TMR0H	set	4055
   247  0000                     _ADCON0bits	set	4034
   248  0000                     _ADRESL	set	4035
   249  0000                     _ADRESH	set	4036
   250  0000                     _ADCON2	set	4032
   251  0000                     _ADCON1	set	4033
   252  0000                     _ADCON0	set	4034
   253  0000                     _TRISD	set	3989
   254  0000                     _TRISC	set	3988
   255  0000                     _TRISB	set	3987
   256  0000                     _TRISG	set	3992
   257  0000                     _TRISA	set	3986
   258  0000                     _TRISF	set	3991
   259  0000                     _TRISE	set	3990
   260  0000                     _LATC	set	3979
   261  0000                     _LATG	set	3983
   262  0000                     _LATB	set	3978
   263  0000                     _LATF	set	3982
   264  0000                     _LATA	set	3977
   265  0000                     _LATD	set	3980
   266  0000                     _LATE	set	3981
   267  0000                     _RCONbits	set	4048
   268  0000                     _INTCON2bits	set	4081
   269  0000                     _INTCONbits	set	4082
   270                           
   271                           ; #config settings
   272  00100F  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  0025EA                     __pcinit:
   276                           	opt stack 0
   277  0025EA                     start_initialization:
   278                           	opt stack 0
   279  0025EA                     __initialization:
   280                           	opt stack 0
   281                           
   282                           ; Initialize objects allocated to BANK1 (16 bytes)
   283                           ; load TBLPTR registers with __pidataBANK1
   284  0025EA  0EFE               	movlw	low __pidataBANK1
   285  0025EC  6EF6               	movwf	tblptrl,c
   286  0025EE  0E2D               	movlw	high __pidataBANK1
   287  0025F0  6EF7               	movwf	tblptrh,c
   288  0025F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   289  0025F4  6EF8               	movwf	tblptru,c
   290  0025F6  EE01  F052         	lfsr	0,__pdataBANK1
   291  0025FA  EE10 F010          	lfsr	1,16
   292  0025FE                     copy_data0:
   293  0025FE  0009               	tblrd		*+
   294  002600  CFF5 FFEE          	movff	tablat,postinc0
   295  002604  50E5               	movf	postdec1,w,c
   296  002606  50E1               	movf	fsr1l,w,c
   297  002608  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to BANK0 (11 bytes)
   300                           ; load TBLPTR registers with __pidataBANK0
   301  00260A  0E58               	movlw	low __pidataBANK0
   302  00260C  6EF6               	movwf	tblptrl,c
   303  00260E  0E2E               	movlw	high __pidataBANK0
   304  002610  6EF7               	movwf	tblptrh,c
   305  002612  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   306  002614  6EF8               	movwf	tblptru,c
   307  002616  EE00  F0E0         	lfsr	0,__pdataBANK0
   308  00261A  EE10 F00B          	lfsr	1,11
   309  00261E                     copy_data1:
   310  00261E  0009               	tblrd		*+
   311  002620  CFF5 FFEE          	movff	tablat,postinc0
   312  002624  50E5               	movf	postdec1,w,c
   313  002626  50E1               	movf	fsr1l,w,c
   314  002628  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK1 (43 bytes)
   317  00262A  EE01  F000         	lfsr	0,__pbssBANK1
   318  00262E  0E2B               	movlw	43
   319  002630                     clear_0:
   320  002630  6AEE               	clrf	postinc0,c
   321  002632  06E8               	decf	wreg,f,c
   322  002634  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK0 (72 bytes)
   325  002636  EE00  F060         	lfsr	0,__pbssBANK0
   326  00263A  0E48               	movlw	72
   327  00263C                     clear_1:
   328  00263C  6AEE               	clrf	postinc0,c
   329  00263E  06E8               	decf	wreg,f,c
   330  002640  E1FD               	bnz	clear_1
   331                           
   332                           ; Clear objects allocated to COMRAM (37 bytes)
   333  002642  EE00  F001         	lfsr	0,__pbssCOMRAM
   334  002646  0E25               	movlw	37
   335  002648                     clear_2:
   336  002648  6AEE               	clrf	postinc0,c
   337  00264A  06E8               	decf	wreg,f,c
   338  00264C  E1FD               	bnz	clear_2
   339  00264E                     end_of_initialization:
   340                           	opt stack 0
   341  00264E                     __end_of__initialization:
   342                           	opt stack 0
   343  00264E  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   344  002650  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   345  002652  0100               	movlb	0
   346  002654  EF08  F008         	goto	_main	;jump to C main() function
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssCOMRAM
   357  000001                     __pbssCOMRAM:
   358                           	opt stack 0
   359  000001                     _T_Calling:
   360                           	opt stack 0
   361  000001                     	ds	1
   362  000002                     _tick2:
   363                           	opt stack 0
   364  000002                     	ds	1
   365  000003                     _tick:
   366                           	opt stack 0
   367  000003                     	ds	1
   368  000004                     _portread:
   369                           	opt stack 0
   370  000004                     	ds	1
   371  000005                     _F_ID_SEND:
   372                           	opt stack 0
   373  000005                     	ds	1
   374  000006                     _T_BUZZER:
   375                           	opt stack 0
   376  000006                     	ds	1
   377  000007                     _F_ID_Send:
   378                           	opt stack 0
   379  000007                     	ds	1
   380  000008                     _Nilp:
   381                           	opt stack 0
   382  000008                     	ds	1
   383  000009                     _address:
   384                           	opt stack 0
   385  000009                     	ds	1
   386  00000A                     _VALUE:
   387                           	opt stack 0
   388  00000A                     	ds	1
   389  00000B                     _value:
   390                           	opt stack 0
   391  00000B                     	ds	1
   392  00000C                     _Trick:
   393                           	opt stack 0
   394  00000C                     	ds	1
   395  00000D                     _Tick:
   396                           	opt stack 0
   397  00000D                     	ds	1
   398  00000E                     _TX_ID:
   399                           	opt stack 0
   400  00000E                     	ds	1
   401  00000F                     _T_ID_Send:
   402                           	opt stack 0
   403  00000F                     	ds	1
   404  000010                     _F_SetID:
   405                           	opt stack 0
   406  000010                     	ds	1
   407  000011                     _T:
   408                           	opt stack 0
   409  000011                     	ds	1
   410  000012                     _Count_LED:
   411                           	opt stack 0
   412  000012                     	ds	1
   413  000013                     _F_ERROR:
   414                           	opt stack 0
   415  000013                     	ds	1
   416  000014                     _ERROR:
   417                           	opt stack 0
   418  000014                     	ds	1
   419  000015                     _slave_add:
   420                           	opt stack 0
   421  000015                     	ds	1
   422  000016                     _Store:
   423                           	opt stack 0
   424  000016                     	ds	1
   425  000017                     _d:
   426                           	opt stack 0
   427  000017                     	ds	1
   428  000018                     _i:
   429                           	opt stack 0
   430  000018                     	ds	1
   431  000019                     _F_IdSet:
   432                           	opt stack 0
   433  000019                     	ds	1
   434  00001A                     _InputRead:
   435                           	opt stack 0
   436  00001A                     	ds	1
   437  00001B                     _Portread:
   438                           	opt stack 0
   439  00001B                     	ds	1
   440  00001C                     _F_Input:
   441                           	opt stack 0
   442  00001C                     	ds	1
   443  00001D                     _T_Input:
   444                           	opt stack 0
   445  00001D                     	ds	1
   446  00001E                     _Device_ID:
   447                           	opt stack 0
   448  00001E                     	ds	1
   449  00001F                     _lost_data:
   450                           	opt stack 0
   451  00001F                     	ds	1
   452  000020                     _RSSI2:
   453                           	opt stack 0
   454  000020                     	ds	1
   455  000021                     _LQI:
   456                           	opt stack 0
   457  000021                     	ds	1
   458  000022                     _data_r:
   459                           	opt stack 0
   460  000022                     	ds	1
   461  000023                     _DATA:
   462                           	opt stack 0
   463  000023                     	ds	1
   464  000024                     _LENGTH:
   465                           	opt stack 0
   466  000024                     	ds	1
   467  000025                     _INTTRUPT:
   468                           	opt stack 0
   469  000025                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	bssBANK0
   480  000060                     __pbssBANK0:
   481                           	opt stack 0
   482  000060                     _ZigBee_Receive_Buffer:
   483                           	opt stack 0
   484  000060                     	ds	6
   485  000066                     _Delta:
   486                           	opt stack 0
   487  000066                     	ds	4
   488  00006A                     _ResistanceLDR:
   489                           	opt stack 0
   490  00006A                     	ds	3
   491  00006D                     _VoltageOutput:
   492                           	opt stack 0
   493  00006D                     	ds	3
   494  000070                     _Store_DATA:
   495                           	opt stack 0
   496  000070                     	ds	3
   497  000073                     _TMR0_InterruptHandler:
   498                           	opt stack 0
   499  000073                     	ds	3
   500  000076                     _INT0_InterruptHandler:
   501                           	opt stack 0
   502  000076                     	ds	3
   503  000079                     _Value_LDR:
   504                           	opt stack 0
   505  000079                     	ds	2
   506  00007B                     _Relay_On_Time:
   507                           	opt stack 0
   508  00007B                     	ds	2
   509  00007D                     _Time_start:
   510                           	opt stack 0
   511  00007D                     	ds	2
   512  00007F                     _ckeck:
   513                           	opt stack 0
   514  00007F                     	ds	2
   515  000081                     _T_ERROR:
   516                           	opt stack 0
   517  000081                     	ds	2
   518  000083                     _CRC:
   519                           	opt stack 0
   520  000083                     	ds	2
   521  000085                     _TX_CRC:
   522                           	opt stack 0
   523  000085                     	ds	2
   524  000087                     _Rv_CRC:
   525                           	opt stack 0
   526  000087                     	ds	2
   527  000089                     _address_TX_normal_FIFO:
   528                           	opt stack 0
   529  000089                     	ds	2
   530  00008B                     TMR0_ISR@CountCallBack:
   531                           	opt stack 0
   532  00008B                     	ds	2
   533  00008D                     _F_LDR_STATUS:
   534                           	opt stack 0
   535  00008D                     	ds	1
   536  00008E                     _ID_READ_Store:
   537                           	opt stack 0
   538  00008E                     	ds	1
   539  00008F                     _Previous_Status:
   540                           	opt stack 0
   541  00008F                     	ds	1
   542  000090                     _F_MSG:
   543                           	opt stack 0
   544  000090                     	ds	1
   545  000091                     _ALT_ON:
   546                           	opt stack 0
   547  000091                     	ds	1
   548  000092                     _F_Relay_Time:
   549                           	opt stack 0
   550  000092                     	ds	1
   551  000093                     _F_Calling:
   552                           	opt stack 0
   553  000093                     	ds	1
   554  000094                     _F_Buzzer:
   555                           	opt stack 0
   556  000094                     	ds	1
   557  000095                     _RECEIVE_OK:
   558                           	opt stack 0
   559  000095                     	ds	1
   560  000096                     _Send_Frame_2:
   561                           	opt stack 0
   562  000096                     	ds	1
   563  000097                     _Send_Frame:
   564                           	opt stack 0
   565  000097                     	ds	1
   566  000098                     _F_BUZZER:
   567                           	opt stack 0
   568  000098                     	ds	1
   569  000099                     _ID_READ:
   570                           	opt stack 0
   571  000099                     	ds	1
   572  00009A                     _ID_SET:
   573                           	opt stack 0
   574  00009A                     	ds	1
   575  00009B                     _ii:
   576                           	opt stack 0
   577  00009B                     	ds	1
   578  00009C                     _CHECK:
   579                           	opt stack 0
   580  00009C                     	ds	1
   581  00009D                     _Count2:
   582                           	opt stack 0
   583  00009D                     	ds	1
   584  00009E                     _Count1:
   585                           	opt stack 0
   586  00009E                     	ds	1
   587  00009F                     _timer0ReloadVal:
   588                           	opt stack 0
   589  00009F                     	ds	1
   590  0000A0                     _DATA_RX:
   591                           	opt stack 0
   592  0000A0                     	ds	5
   593  0000A5                     _DATA_TX:
   594                           	opt stack 0
   595  0000A5                     	ds	3
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	dataBANK0
   606  0000E0                     __pdataBANK0:
   607                           	opt stack 0
   608  0000E0                     _PAN_ID_1:
   609                           	opt stack 0
   610  0000E0                     	ds	2
   611  0000E2                     _ADDRESS_short_1:
   612                           	opt stack 0
   613  0000E2                     	ds	2
   614  0000E4                     _address_RX_FIFO:
   615                           	opt stack 0
   616  0000E4                     	ds	2
   617  0000E6                     _SEQ_NUMBER:
   618                           	opt stack 0
   619  0000E6                     	ds	1
   620  0000E7                     _PAN_ID_2:
   621                           	opt stack 0
   622  0000E7                     	ds	2
   623  0000E9                     _ADDRESS_short_2:
   624                           	opt stack 0
   625  0000E9                     	ds	2
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	bssBANK1
   636  000100                     __pbssBANK1:
   637                           	opt stack 0
   638  000100                     _data_RX_FIFO:
   639                           	opt stack 0
   640  000100                     	ds	21
   641  000115                     _data_TX_normal_FIFO:
   642                           	opt stack 0
   643  000115                     	ds	18
   644  000127                     _Light:
   645                           	opt stack 0
   646  000127                     	ds	4
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           
   656                           	psect	dataBANK1
   657  000152                     __pdataBANK1:
   658                           	opt stack 0
   659  000152                     _ADDRESS_long_1:
   660                           	opt stack 0
   661  000152                     	ds	8
   662  00015A                     _ADDRESS_long_2:
   663                           	opt stack 0
   664  00015A                     	ds	8
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1l	equ	0xFE1
   673                           
   674                           	psect	cstackBANK1
   675  00012B                     __pcstackBANK1:
   676                           	opt stack 0
   677  00012B                     ??___ftadd:
   678                           
   679                           ; 1 bytes @ 0x0
   680  00012B                     	ds	3
   681  00012E                     ___ftadd@sign:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x3
   685  00012E                     	ds	1
   686  00012F                     ___ftadd@exp2:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x4
   690  00012F                     	ds	1
   691  000130                     ___ftadd@exp1:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x5
   695  000130                     	ds	1
   696  000131                     ?___ftdiv:
   697                           	opt stack 0
   698  000131                     ___ftdiv@f1:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x6
   702  000131                     	ds	3
   703  000134                     ___ftdiv@f2:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x9
   707  000134                     	ds	3
   708  000137                     ??___ftdiv:
   709                           
   710                           ; 1 bytes @ 0xC
   711  000137                     	ds	3
   712  00013A                     ___ftdiv@cntr:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0xF
   716  00013A                     	ds	1
   717  00013B                     ___ftdiv@f3:
   718                           	opt stack 0
   719                           
   720                           ; 3 bytes @ 0x10
   721  00013B                     	ds	3
   722  00013E                     ___ftdiv@exp:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x13
   726  00013E                     	ds	1
   727  00013F                     ___ftdiv@sign:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x14
   731  00013F                     	ds	1
   732  000140                     ?___fttol:
   733                           	opt stack 0
   734  000140                     ___fttol@f1:
   735                           	opt stack 0
   736                           
   737                           ; 3 bytes @ 0x15
   738  000140                     	ds	4
   739  000144                     ??___fttol:
   740                           
   741                           ; 1 bytes @ 0x19
   742  000144                     	ds	5
   743  000149                     ___fttol@sign1:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x1E
   747  000149                     	ds	1
   748  00014A                     ___fttol@lval:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x1F
   752  00014A                     	ds	4
   753  00014E                     ___fttol@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x23
   757  00014E                     	ds	1
   758  00014F                     _main$2280:
   759                           	opt stack 0
   760                           
   761                           ; 3 bytes @ 0x24
   762  00014F                     	ds	3
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	cstackBANK0
   773  0000A8                     __pcstackBANK0:
   774                           	opt stack 0
   775  0000A8                     ??_INTERRUPT_InterruptManagerLow:
   776                           
   777                           ; 1 bytes @ 0x0
   778  0000A8                     	ds	21
   779  0000BD                     ?_Xor_check:
   780                           	opt stack 0
   781  0000BD                     ?_ADC_GetConversion:
   782                           	opt stack 0
   783  0000BD                     ?___ftpack:
   784                           	opt stack 0
   785  0000BD                     ?___aldiv:
   786                           	opt stack 0
   787  0000BD                     SPI_Write@response:
   788                           	opt stack 0
   789  0000BD                     SPI_Read@TempVar:
   790                           	opt stack 0
   791  0000BD                     Clear_Zigbee_Store_Buffer@d:
   792                           	opt stack 0
   793  0000BD                     Clear_Data@n:
   794                           	opt stack 0
   795  0000BD                     delay@dly:
   796                           	opt stack 0
   797  0000BD                     Delay_ms@time:
   798                           	opt stack 0
   799  0000BD                     Xor_check@data_value:
   800                           	opt stack 0
   801  0000BD                     Write_b_eep@badd:
   802                           	opt stack 0
   803  0000BD                     Read_b_eep@badd:
   804                           	opt stack 0
   805  0000BD                     INT0_SetInterruptHandler@InterruptHandler:
   806                           	opt stack 0
   807  0000BD                     TMR0_SetInterruptHandler@InterruptHandler:
   808                           	opt stack 0
   809  0000BD                     ___ftpack@arg:
   810                           	opt stack 0
   811  0000BD                     ___aldiv@dividend:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x15
   815  0000BD                     	ds	1
   816  0000BE                     SPI_Write@command:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x16
   820  0000BE                     	ds	1
   821  0000BF                     ??_ADC_GetConversion:
   822  0000BF                     write_ZIGBEE_short@data_r:
   823                           	opt stack 0
   824  0000BF                     read_ZIGBEE_short@data_r:
   825                           	opt stack 0
   826  0000BF                     Xor_check@length:
   827                           	opt stack 0
   828  0000BF                     Write_b_eep@data:
   829                           	opt stack 0
   830  0000BF                     write_ZIGBEE_long@address:
   831                           	opt stack 0
   832  0000BF                     delay@l:
   833                           	opt stack 0
   834  0000BF                     Delay_ms@y:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x17
   838  0000BF                     	ds	1
   839  0000C0                     ??_Xor_check:
   840  0000C0                     write_ZIGBEE_short@address:
   841                           	opt stack 0
   842  0000C0                     read_ZIGBEE_short@address:
   843                           	opt stack 0
   844  0000C0                     Write_b_eep@GIE_BIT_VAL:
   845                           	opt stack 0
   846  0000C0                     ___ftpack@exp:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x18
   850  0000C0                     	ds	1
   851  0000C1                     ADC_GetConversion@channel:
   852                           	opt stack 0
   853  0000C1                     set_CCA_mode@CCA_mode:
   854                           	opt stack 0
   855  0000C1                     set_RSSI_mode@RSSI_mode:
   856                           	opt stack 0
   857  0000C1                     nonbeacon_PAN_coordinator_device@temp:
   858                           	opt stack 0
   859  0000C1                     set_frame_format_filter@fff_mode:
   860                           	opt stack 0
   861  0000C1                     set_reception_mode@r_mode:
   862                           	opt stack 0
   863  0000C1                     set_not_ACK@temp:
   864                           	opt stack 0
   865  0000C1                     set_not_encrypt@temp:
   866                           	opt stack 0
   867  0000C1                     write_ZIGBEE_long@data_r:
   868                           	opt stack 0
   869  0000C1                     ___ftpack@sign:
   870                           	opt stack 0
   871  0000C1                     set_long_address@address:
   872                           	opt stack 0
   873  0000C1                     set_short_address@address:
   874                           	opt stack 0
   875  0000C1                     set_PAN_ID@address:
   876                           	opt stack 0
   877  0000C1                     Xor_check@xor_value:
   878                           	opt stack 0
   879  0000C1                     ___aldiv@divisor:
   880                           	opt stack 0
   881                           
   882                           ; 4 bytes @ 0x19
   883  0000C1                     	ds	1
   884  0000C2                     ??_write_ZIGBEE_long:
   885  0000C2                     ??___ftpack:
   886  0000C2                     set_CCA_mode@temp:
   887                           	opt stack 0
   888  0000C2                     set_RSSI_mode@temp:
   889                           	opt stack 0
   890  0000C2                     set_frame_format_filter@temp:
   891                           	opt stack 0
   892  0000C2                     set_reception_mode@temp:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x1A
   896  0000C2                     	ds	1
   897  0000C3                     set_long_address@i:
   898                           	opt stack 0
   899  0000C3                     Xor_check@xor:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x1B
   903  0000C3                     	ds	1
   904  0000C4                     write_ZIGBEE_long@address_high:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x1C
   908  0000C4                     	ds	1
   909  0000C5                     ?___lwtoft:
   910                           	opt stack 0
   911  0000C5                     write_ZIGBEE_long@address_low:
   912                           	opt stack 0
   913  0000C5                     ___aldiv@counter:
   914                           	opt stack 0
   915  0000C5                     ___lwtoft@c:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919  0000C5                     	ds	1
   920  0000C6                     ??_set_TX_power:
   921  0000C6                     ??_write_TX_normal_FIFO:
   922  0000C6                     set_channel@channel_number:
   923                           	opt stack 0
   924  0000C6                     ___aldiv@sign:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x1E
   928  0000C6                     	ds	1
   929  0000C7                     set_TX_power@power:
   930                           	opt stack 0
   931  0000C7                     ___aldiv@quotient:
   932                           	opt stack 0
   933                           
   934                           ; 4 bytes @ 0x1F
   935  0000C7                     	ds	1
   936  0000C8                     ?___ftmul:
   937                           	opt stack 0
   938  0000C8                     ___ftmul@f1:
   939                           	opt stack 0
   940                           
   941                           ; 3 bytes @ 0x20
   942  0000C8                     	ds	3
   943  0000CB                     write_TX_normal_FIFO@n:
   944                           	opt stack 0
   945  0000CB                     ___ftmul@f2:
   946                           	opt stack 0
   947                           
   948                           ; 3 bytes @ 0x23
   949  0000CB                     	ds	1
   950  0000CC                     write_TX_normal_FIFO@i:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x24
   954  0000CC                     	ds	2
   955  0000CE                     ??___ftmul:
   956                           
   957                           ; 1 bytes @ 0x26
   958  0000CE                     	ds	3
   959  0000D1                     ___ftmul@exp:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x29
   963  0000D1                     	ds	1
   964  0000D2                     ___ftmul@f3_as_product:
   965                           	opt stack 0
   966                           
   967                           ; 3 bytes @ 0x2A
   968  0000D2                     	ds	3
   969  0000D5                     ___ftmul@cntr:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x2D
   973  0000D5                     	ds	1
   974  0000D6                     ___ftmul@sign:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x2E
   978  0000D6                     	ds	1
   979  0000D7                     ?___ftneg:
   980                           	opt stack 0
   981  0000D7                     ___ftneg@f1:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x2F
   985  0000D7                     	ds	3
   986  0000DA                     ?___ftadd:
   987                           	opt stack 0
   988  0000DA                     ___ftadd@f1:
   989                           	opt stack 0
   990                           
   991                           ; 3 bytes @ 0x32
   992  0000DA                     	ds	3
   993  0000DD                     ___ftadd@f2:
   994                           	opt stack 0
   995                           
   996                           ; 3 bytes @ 0x35
   997  0000DD                     	ds	3
   998  0000E0                     tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           postdec1	equ	0xFE5
  1005                           fsr1l	equ	0xFE1
  1006                           
  1007                           ; 1 bytes @ 0x38
  1008                           
  1009                           	psect	cstackCOMRAM
  1010  000026                     __pcstackCOMRAM:
  1011                           	opt stack 0
  1012  000026                     ?i2_Xor_check:
  1013                           	opt stack 0
  1014  000026                     Zigbee_data_Store_Buffer@a:
  1015                           	opt stack 0
  1016  000026                     i2SPI_Write@response:
  1017                           	opt stack 0
  1018  000026                     i2SPI_Read@TempVar:
  1019                           	opt stack 0
  1020  000026                     i2Clear_Data@n:
  1021                           	opt stack 0
  1022  000026                     i2Xor_check@data_value:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x0
  1026  000026                     	ds	1
  1027  000027                     i2SPI_Write@command:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x1
  1031  000027                     	ds	1
  1032  000028                     i2write_ZIGBEE_short@data_r:
  1033                           	opt stack 0
  1034  000028                     i2read_ZIGBEE_short@address:
  1035                           	opt stack 0
  1036  000028                     i2Xor_check@length:
  1037                           	opt stack 0
  1038  000028                     read_ZIGBEE_long@address:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x2
  1042  000028                     	ds	1
  1043  000029                     ??i2_Xor_check:
  1044  000029                     i2write_ZIGBEE_short@address:
  1045                           	opt stack 0
  1046  000029                     i2read_ZIGBEE_short@data_r:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0x3
  1050  000029                     	ds	1
  1051  00002A                     ??_read_ZIGBEE_long:
  1052  00002A                     i2Xor_check@xor_value:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x4
  1056  00002A                     	ds	2
  1057  00002C                     read_ZIGBEE_long@data_r:
  1058                           	opt stack 0
  1059  00002C                     i2Xor_check@xor:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x6
  1063  00002C                     	ds	1
  1064  00002D                     read_ZIGBEE_long@address_high:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x7
  1068  00002D                     	ds	1
  1069  00002E                     read_ZIGBEE_long@address_low:
  1070                           	opt stack 0
  1071                           
  1072                           ; 1 bytes @ 0x8
  1073  00002E                     	ds	1
  1074  00002F                     ??_read_RX_FIFO:
  1075                           
  1076                           ; 1 bytes @ 0x9
  1077  00002F                     	ds	5
  1078  000034                     read_RX_FIFO@temp:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0xE
  1082  000034                     	ds	1
  1083  000035                     read_RX_FIFO@i:
  1084                           	opt stack 0
  1085                           
  1086                           ; 1 bytes @ 0xF
  1087  000035                     	ds	1
  1088  000036                     ??_INTERRUPT_InterruptManagerHigh:
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  000036                     	ds	20
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postdec1	equ	0xFE5
  1099                           fsr1l	equ	0xFE1
  1100                           
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 100 in file "07_May_Motion+LDR_Main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        3 bytes
  1125 ;; Hardware stack levels required when called:   13
  1126 ;; This function calls:
  1127 ;;		_ADC_GetConversion
  1128 ;;		_Clear_Data
  1129 ;;		_Clear_Zigbee_Store_Buffer
  1130 ;;		_Delay_ms
  1131 ;;		_InitSPI
  1132 ;;		_RF_reset
  1133 ;;		_Read_b_eep
  1134 ;;		_SYSTEM_Initialize
  1135 ;;		_Write_b_eep
  1136 ;;		___aldiv
  1137 ;;		___ftadd
  1138 ;;		___ftdiv
  1139 ;;		___ftmul
  1140 ;;		___ftneg
  1141 ;;		___fttol
  1142 ;;		___lwtoft
  1143 ;;		_init_ZIGBEE_nonbeacon
  1144 ;;		_nonbeacon_PAN_coordinator_device
  1145 ;;		_pin_reset
  1146 ;;		_pin_wake
  1147 ;;		_set_PAN_ID
  1148 ;;		_set_TX_power
  1149 ;;		_set_WAKE_from_pin
  1150 ;;		_set_frame_format_filter
  1151 ;;		_set_long_address
  1152 ;;		_set_reception_mode
  1153 ;;		_set_short_address
  1154 ;;		_write_TX_normal_FIFO
  1155 ;; This function is called by:
  1156 ;;		Startup code after reset
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text0
  1161  001010                     __ptext0:
  1162                           	opt stack 0
  1163  001010                     _main:
  1164                           	opt stack 18
  1165                           
  1166                           ;07_May_Motion+LDR_Main.c: 103: Delay_ms(100);Delay_ms(100);
  1167                           
  1168                           ;incstack = 0
  1169  001010  0E00               	movlw	0
  1170  001012  0100               	movlb	0	; () banked
  1171  001014  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1172  001016  0E64               	movlw	100
  1173  001018  6FBD               	movwf	Delay_ms@time& (0+255),b
  1174  00101A  EC7E  F016         	call	_Delay_ms	;wreg free
  1175  00101E  0E00               	movlw	0
  1176  001020  0100               	movlb	0	; () banked
  1177  001022  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1178  001024  0E64               	movlw	100
  1179  001026  6FBD               	movwf	Delay_ms@time& (0+255),b
  1180  001028  EC7E  F016         	call	_Delay_ms	;wreg free
  1181                           
  1182                           ;07_May_Motion+LDR_Main.c: 104: Delay_ms(100);Delay_ms(100);
  1183  00102C  0E00               	movlw	0
  1184  00102E  0100               	movlb	0	; () banked
  1185  001030  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1186  001032  0E64               	movlw	100
  1187  001034  6FBD               	movwf	Delay_ms@time& (0+255),b
  1188  001036  EC7E  F016         	call	_Delay_ms	;wreg free
  1189  00103A  0E00               	movlw	0
  1190  00103C  0100               	movlb	0	; () banked
  1191  00103E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1192  001040  0E64               	movlw	100
  1193  001042  6FBD               	movwf	Delay_ms@time& (0+255),b
  1194  001044  EC7E  F016         	call	_Delay_ms	;wreg free
  1195                           
  1196                           ;07_May_Motion+LDR_Main.c: 105: SYSTEM_Initialize();
  1197  001048  EC8C  F016         	call	_SYSTEM_Initialize	;wreg free
  1198                           
  1199                           ;07_May_Motion+LDR_Main.c: 106: InitSPI();
  1200  00104C  ECFA  F015         	call	_InitSPI	;wreg free
  1201                           
  1202                           ;07_May_Motion+LDR_Main.c: 107: Delay_ms(10);
  1203  001050  0E00               	movlw	0
  1204  001052  0100               	movlb	0	; () banked
  1205  001054  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1206  001056  0E0A               	movlw	10
  1207  001058  6FBD               	movwf	Delay_ms@time& (0+255),b
  1208  00105A  EC7E  F016         	call	_Delay_ms	;wreg free
  1209                           
  1210                           ;07_May_Motion+LDR_Main.c: 108: pin_reset();
  1211  00105E  EC30  F016         	call	_pin_reset	;wreg free
  1212                           
  1213                           ;07_May_Motion+LDR_Main.c: 109: RF_reset();
  1214  001062  EC61  F015         	call	_RF_reset	;wreg free
  1215                           
  1216                           ;07_May_Motion+LDR_Main.c: 110: set_WAKE_from_pin();
  1217  001066  EC70  F016         	call	_set_WAKE_from_pin	;wreg free
  1218                           
  1219                           ;07_May_Motion+LDR_Main.c: 112: set_long_address(ADDRESS_long_2);
  1220  00106A  0E5A               	movlw	low _ADDRESS_long_2
  1221  00106C  0100               	movlb	0	; () banked
  1222  00106E  6FC1               	movwf	set_long_address@address& (0+255),b
  1223  001070  0E01               	movlw	high _ADDRESS_long_2
  1224  001072  6FC2               	movwf	(set_long_address@address+1)& (0+255),b
  1225  001074  ECBA  F014         	call	_set_long_address	;wreg free
  1226                           
  1227                           ;07_May_Motion+LDR_Main.c: 113: set_short_address(ADDRESS_short_2);
  1228  001078  0EE9               	movlw	low _ADDRESS_short_2
  1229  00107A  0100               	movlb	0	; () banked
  1230  00107C  6FC1               	movwf	set_short_address@address& (0+255),b
  1231  00107E  0E00               	movlw	high _ADDRESS_short_2
  1232  001080  6FC2               	movwf	(set_short_address@address+1)& (0+255),b
  1233  001082  EC08  F015         	call	_set_short_address	;wreg free
  1234                           
  1235                           ;07_May_Motion+LDR_Main.c: 114: set_PAN_ID(PAN_ID_2);
  1236  001086  0EE7               	movlw	low _PAN_ID_2
  1237  001088  0100               	movlb	0	; () banked
  1238  00108A  6FC1               	movwf	set_PAN_ID@address& (0+255),b
  1239  00108C  0E00               	movlw	high _PAN_ID_2
  1240  00108E  6FC2               	movwf	(set_PAN_ID@address+1)& (0+255),b
  1241  001090  EC1F  F015         	call	_set_PAN_ID	;wreg free
  1242                           
  1243                           ;07_May_Motion+LDR_Main.c: 116: init_ZIGBEE_nonbeacon();
  1244  001094  ECD6  F015         	call	_init_ZIGBEE_nonbeacon	;wreg free
  1245                           
  1246                           ;07_May_Motion+LDR_Main.c: 118: nonbeacon_PAN_coordinator_device();
  1247  001098  EC47  F014         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  1248                           
  1249                           ;07_May_Motion+LDR_Main.c: 119: set_TX_power(31);
  1250  00109C  0E1F               	movlw	31
  1251  00109E  ECC4  F013         	call	_set_TX_power
  1252                           
  1253                           ;07_May_Motion+LDR_Main.c: 120: set_frame_format_filter(1);
  1254  0010A2  0E01               	movlw	1
  1255  0010A4  EC74  F012         	call	_set_frame_format_filter
  1256                           
  1257                           ;07_May_Motion+LDR_Main.c: 121: set_reception_mode(1);
  1258  0010A8  0E01               	movlw	1
  1259  0010AA  ECBD  F012         	call	_set_reception_mode
  1260                           
  1261                           ;07_May_Motion+LDR_Main.c: 122: pin_wake();
  1262  0010AE  ECE4  F016         	call	_pin_wake	;wreg free
  1263                           
  1264                           ;07_May_Motion+LDR_Main.c: 123: Count1=1;
  1265  0010B2  0E01               	movlw	1
  1266  0010B4  0100               	movlb	0	; () banked
  1267  0010B6  6F9E               	movwf	_Count1& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;07_May_Motion+LDR_Main.c: 124: Count2=1;
  1271  0010B8  0E01               	movlw	1
  1272  0010BA  6F9D               	movwf	_Count2& (0+255),b
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;07_May_Motion+LDR_Main.c: 125: Delay_ms(10);
  1276  0010BC  0E00               	movlw	0
  1277  0010BE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1278  0010C0  0E0A               	movlw	10
  1279  0010C2  6FBD               	movwf	Delay_ms@time& (0+255),b
  1280  0010C4  EC7E  F016         	call	_Delay_ms	;wreg free
  1281                           
  1282                           ;07_May_Motion+LDR_Main.c: 126: ID_SET=1;
  1283  0010C8  0E01               	movlw	1
  1284  0010CA  0100               	movlb	0	; () banked
  1285  0010CC  6F9A               	movwf	_ID_SET& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;07_May_Motion+LDR_Main.c: 127: (INTCONbits.GIEH = 1);
  1289  0010CE  8EF2               	bsf	intcon,7,c	;volatile
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;07_May_Motion+LDR_Main.c: 128: (INTCONbits.GIEL = 1);
  1293  0010D0  8CF2               	bsf	intcon,6,c	;volatile
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;07_May_Motion+LDR_Main.c: 129: (INTCONbits.PEIE = 1);
  1297  0010D2  8CF2               	bsf	intcon,6,c	;volatile
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;07_May_Motion+LDR_Main.c: 130: ID_READ=PORTD;
  1301  0010D4  CF83 F099          	movff	3971,_ID_READ	;volatile
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;07_May_Motion+LDR_Main.c: 131: Previous_Status=Read_b_eep(0x05);
  1305  0010D8  0E00               	movlw	0
  1306  0010DA  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1307  0010DC  0E05               	movlw	5
  1308  0010DE  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1309  0010E0  ECF6  F016         	call	_Read_b_eep	;wreg free
  1310  0010E4  0100               	movlb	0	; () banked
  1311  0010E6  6F8F               	movwf	_Previous_Status& (0+255),b
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;07_May_Motion+LDR_Main.c: 132: ID_READ_Store=Read_b_eep(0x02);
  1315  0010E8  0E00               	movlw	0
  1316  0010EA  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1317  0010EC  0E02               	movlw	2
  1318  0010EE  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1319  0010F0  ECF6  F016         	call	_Read_b_eep	;wreg free
  1320  0010F4  0100               	movlb	0	; () banked
  1321  0010F6  6F8E               	movwf	_ID_READ_Store& (0+255),b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;07_May_Motion+LDR_Main.c: 137: if(ID_READ_Store == ID_READ ){
  1325  0010F8  5199               	movf	_ID_READ& (0+255),w,b
  1326  0010FA  198E               	xorwf	_ID_READ_Store& (0+255),w,b
  1327  0010FC  A4D8               	btfss	status,2,c
  1328  0010FE  D011               	goto	l868
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;07_May_Motion+LDR_Main.c: 138: if(Previous_Status == 1){
  1332  001100  058F               	decf	_Previous_Status& (0+255),w,b
  1333  001102  A4D8               	btfss	status,2,c
  1334  001104  D002               	goto	l869
  1335  001106                     u5210:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;07_May_Motion+LDR_Main.c: 139: F_MSG=1;
  1339  001106  0E01               	movlw	1
  1340  001108  D2D8               	goto	L8
  1341  00110A                     l869:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;07_May_Motion+LDR_Main.c: 141: else if(Previous_Status == 2){
  1345                           
  1346                           ; BSR set to: 0
  1347  00110A  0E02               	movlw	2
  1348  00110C  198F               	xorwf	_Previous_Status& (0+255),w,b
  1349  00110E  A4D8               	btfss	status,2,c
  1350  001110  D002               	goto	l871
  1351  001112                     u5220:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;07_May_Motion+LDR_Main.c: 142: F_MSG=2;
  1355  001112  0E02               	movlw	2
  1356  001114  D2D2               	goto	L8
  1357  001116                     l871:
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;07_May_Motion+LDR_Main.c: 144: else if(Previous_Status == 3){
  1361                           
  1362                           ; BSR set to: 0
  1363  001116  0E03               	movlw	3
  1364  001118  198F               	xorwf	_Previous_Status& (0+255),w,b
  1365  00111A  A4D8               	btfss	status,2,c
  1366  00111C  D2CD               	goto	l909
  1367  00111E                     u5230:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;07_May_Motion+LDR_Main.c: 145: F_MSG=3;
  1371  00111E  0E03               	movlw	3
  1372  001120  D2CC               	goto	L8
  1373  001122                     l868:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;07_May_Motion+LDR_Main.c: 151: Write_b_eep(0x05,0xFF);
  1377                           
  1378                           ; BSR set to: 0
  1379  001122  0E00               	movlw	0
  1380  001124  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1381  001126  0E05               	movlw	5
  1382  001128  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1383  00112A  0EFF               	movlw	255
  1384  00112C  6FBF               	movwf	Write_b_eep@data& (0+255),b
  1385  00112E  EC66  F014         	call	_Write_b_eep	;wreg free
  1386                           
  1387                           ;07_May_Motion+LDR_Main.c: 152: ID_READ_Store=0;
  1388  001132  0E00               	movlw	0
  1389  001134  0100               	movlb	0	; () banked
  1390  001136  6F8E               	movwf	_ID_READ_Store& (0+255),b
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;07_May_Motion+LDR_Main.c: 153: Previous_Status=0;
  1394  001138  0E00               	movlw	0
  1395  00113A  6F8F               	movwf	_Previous_Status& (0+255),b
  1396  00113C                     
  1397                           ; BSR set to: 0
  1398                           ;07_May_Motion+LDR_Main.c: 156: {
  1399                           ;07_May_Motion+LDR_Main.c: 157: if( ID_SET == 1 ){
  1400                           
  1401                           ; BSR set to: 0
  1402                           
  1403                           ;07_May_Motion+LDR_Main.c: 154: }
  1404                           ;07_May_Motion+LDR_Main.c: 155: while (1)
  1405                           
  1406                           ; BSR set to: 0
  1407  00113C  059A               	decf	_ID_SET& (0+255),w,b
  1408  00113E  A4D8               	btfss	status,2,c
  1409  001140  D02C               	goto	l877
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;07_May_Motion+LDR_Main.c: 158: PORTAbits.RA0=0;
  1413  001142  9080               	bcf	3968,0,c	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;07_May_Motion+LDR_Main.c: 159: ID_SET=0;
  1417  001144  0E00               	movlw	0
  1418  001146  6F9A               	movwf	_ID_SET& (0+255),b
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;07_May_Motion+LDR_Main.c: 160: ID_READ=PORTD;
  1422  001148  CF83 F099          	movff	3971,_ID_READ	;volatile
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;07_May_Motion+LDR_Main.c: 161: Write_b_eep(0x02,ID_READ);
  1426  00114C  0E00               	movlw	0
  1427  00114E  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1428  001150  0E02               	movlw	2
  1429  001152  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1430  001154  C099  F0BF         	movff	_ID_READ,Write_b_eep@data
  1431  001158  EC66  F014         	call	_Write_b_eep	;wreg free
  1432                           
  1433                           ;07_May_Motion+LDR_Main.c: 162: Write_b_eep(0x02,ID_READ);
  1434  00115C  0E00               	movlw	0
  1435  00115E  0100               	movlb	0	; () banked
  1436  001160  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1437  001162  0E02               	movlw	2
  1438  001164  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1439  001166  C099  F0BF         	movff	_ID_READ,Write_b_eep@data
  1440  00116A  EC66  F014         	call	_Write_b_eep	;wreg free
  1441                           
  1442                           ;07_May_Motion+LDR_Main.c: 163: data_TX_normal_FIFO[13]='#';
  1443  00116E  0E23               	movlw	35
  1444  001170  0101               	movlb	1	; () banked
  1445  001172  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;07_May_Motion+LDR_Main.c: 164: data_TX_normal_FIFO[14]=ID_READ;
  1449  001174  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;07_May_Motion+LDR_Main.c: 165: Delay_ms(20);Delay_ms(20);
  1453  001178  0E00               	movlw	0
  1454  00117A  0100               	movlb	0	; () banked
  1455  00117C  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1456  00117E  0E14               	movlw	20
  1457  001180  6FBD               	movwf	Delay_ms@time& (0+255),b
  1458  001182  EC7E  F016         	call	_Delay_ms	;wreg free
  1459  001186  0E00               	movlw	0
  1460  001188  0100               	movlb	0	; () banked
  1461  00118A  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1462  00118C  0E14               	movlw	20
  1463  00118E  6FBD               	movwf	Delay_ms@time& (0+255),b
  1464  001190  EC7E  F016         	call	_Delay_ms	;wreg free
  1465                           
  1466                           ;07_May_Motion+LDR_Main.c: 166: write_TX_normal_FIFO();
  1467  001194  EC71  F00E         	call	_write_TX_normal_FIFO	;wreg free
  1468                           
  1469                           ;07_May_Motion+LDR_Main.c: 167: PORTAbits.RA0=1;
  1470  001198  8080               	bsf	3968,0,c	;volatile
  1471  00119A                     l877:
  1472                           
  1473                           ;07_May_Motion+LDR_Main.c: 168: }
  1474                           ;07_May_Motion+LDR_Main.c: 169: if( CRC == Rv_CRC ){
  1475  00119A  0100               	movlb	0	; () banked
  1476  00119C  5187               	movf	_Rv_CRC& (0+255),w,b
  1477  00119E  1983               	xorwf	_CRC& (0+255),w,b
  1478  0011A0  E103               	bnz	u5251
  1479  0011A2  5188               	movf	(_Rv_CRC+1)& (0+255),w,b
  1480  0011A4  1984               	xorwf	(_CRC+1)& (0+255),w,b
  1481  0011A6  A4D8               	btfss	status,2,c
  1482  0011A8                     u5251:
  1483  0011A8  D1D5               	goto	l883
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;07_May_Motion+LDR_Main.c: 171: Clear_Data();
  1487  0011AA  EC84  F014         	call	_Clear_Data	;wreg free
  1488                           
  1489                           ;07_May_Motion+LDR_Main.c: 172: ID_READ=Read_b_eep(0x02);
  1490  0011AE  0E00               	movlw	0
  1491  0011B0  0100               	movlb	0	; () banked
  1492  0011B2  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1493  0011B4  0E02               	movlw	2
  1494  0011B6  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1495  0011B8  ECF6  F016         	call	_Read_b_eep	;wreg free
  1496  0011BC  0100               	movlb	0	; () banked
  1497  0011BE  6F99               	movwf	_ID_READ& (0+255),b
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;07_May_Motion+LDR_Main.c: 173: if(ZigBee_Receive_Buffer[0] == '#'){
  1501  0011C0  0E23               	movlw	35
  1502  0011C2  1960               	xorwf	_ZigBee_Receive_Buffer& (0+255),w,b
  1503  0011C4  A4D8               	btfss	status,2,c
  1504  0011C6  D042               	goto	l879
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;07_May_Motion+LDR_Main.c: 174: ZigBee_Receive_Buffer[0]=0x00;
  1508  0011C8  0E00               	movlw	0
  1509  0011CA  6F60               	movwf	_ZigBee_Receive_Buffer& (0+255),b
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;07_May_Motion+LDR_Main.c: 175: if(( ZigBee_Receive_Buffer[1] == 'O' ) && (ID_READ == Zi
      +                          gBee_Receive_Buffer[2] )){
  1513  0011CC  0E4F               	movlw	79
  1514  0011CE  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1515  0011D0  A4D8               	btfss	status,2,c
  1516  0011D2  D01B               	goto	l880
  1517                           
  1518                           ; BSR set to: 0
  1519  0011D4  5199               	movf	_ID_READ& (0+255),w,b
  1520  0011D6  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1521  0011D8  A4D8               	btfss	status,2,c
  1522  0011DA  D017               	goto	l880
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;07_May_Motion+LDR_Main.c: 176: PORTAbits.RA2=0;
  1526  0011DC  9480               	bcf	3968,2,c	;volatile
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;07_May_Motion+LDR_Main.c: 177: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1530  0011DE  0E00               	movlw	0
  1531  0011E0  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1532  0011E2  0E64               	movlw	100
  1533  0011E4  6FBD               	movwf	Delay_ms@time& (0+255),b
  1534  0011E6  EC7E  F016         	call	_Delay_ms	;wreg free
  1535  0011EA  0E00               	movlw	0
  1536  0011EC  0100               	movlb	0	; () banked
  1537  0011EE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1538  0011F0  0E64               	movlw	100
  1539  0011F2  6FBD               	movwf	Delay_ms@time& (0+255),b
  1540  0011F4  EC7E  F016         	call	_Delay_ms	;wreg free
  1541  0011F8  0E00               	movlw	0
  1542  0011FA  0100               	movlb	0	; () banked
  1543  0011FC  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1544  0011FE  0E64               	movlw	100
  1545  001200  6FBD               	movwf	Delay_ms@time& (0+255),b
  1546  001202  EC7E  F016         	call	_Delay_ms	;wreg free
  1547                           
  1548                           ;07_May_Motion+LDR_Main.c: 178: PORTAbits.RA2=1;
  1549  001206  8480               	bsf	3968,2,c	;volatile
  1550                           
  1551                           ;07_May_Motion+LDR_Main.c: 179: }
  1552  001208  D01F               	goto	l882
  1553  00120A                     l880:
  1554                           
  1555                           ;07_May_Motion+LDR_Main.c: 180: else if(( ZigBee_Receive_Buffer[1] == 'E' ) && (ID_READ 
      +                          == ZigBee_Receive_Buffer[2] )){
  1556  00120A  0E45               	movlw	69
  1557  00120C  0100               	movlb	0	; () banked
  1558  00120E  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1559  001210  A4D8               	btfss	status,2,c
  1560  001212  D01A               	goto	l882
  1561                           
  1562                           ; BSR set to: 0
  1563  001214  5199               	movf	_ID_READ& (0+255),w,b
  1564  001216  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1565  001218  A4D8               	btfss	status,2,c
  1566  00121A  D016               	goto	l882
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;07_May_Motion+LDR_Main.c: 181: PORTAbits.RA3=0;
  1570  00121C  9680               	bcf	3968,3,c	;volatile
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;07_May_Motion+LDR_Main.c: 182: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1574  00121E  0E00               	movlw	0
  1575  001220  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1576  001222  0E64               	movlw	100
  1577  001224  6FBD               	movwf	Delay_ms@time& (0+255),b
  1578  001226  EC7E  F016         	call	_Delay_ms	;wreg free
  1579  00122A  0E00               	movlw	0
  1580  00122C  0100               	movlb	0	; () banked
  1581  00122E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1582  001230  0E64               	movlw	100
  1583  001232  6FBD               	movwf	Delay_ms@time& (0+255),b
  1584  001234  EC7E  F016         	call	_Delay_ms	;wreg free
  1585  001238  0E00               	movlw	0
  1586  00123A  0100               	movlb	0	; () banked
  1587  00123C  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1588  00123E  0E64               	movlw	100
  1589  001240  6FBD               	movwf	Delay_ms@time& (0+255),b
  1590  001242  EC7E  F016         	call	_Delay_ms	;wreg free
  1591                           
  1592                           ;07_May_Motion+LDR_Main.c: 183: PORTAbits.RA3=1;
  1593  001246  8680               	bsf	3968,3,c	;volatile
  1594  001248                     l882:
  1595                           
  1596                           ;07_May_Motion+LDR_Main.c: 184: }
  1597                           ;07_May_Motion+LDR_Main.c: 185: Clear_Zigbee_Store_Buffer();
  1598  001248  ECC3  F015         	call	_Clear_Zigbee_Store_Buffer	;wreg free
  1599  00124C                     l879:
  1600                           
  1601                           ;07_May_Motion+LDR_Main.c: 186: }
  1602                           ;07_May_Motion+LDR_Main.c: 187: if(ZigBee_Receive_Buffer[0] == '$'){
  1603  00124C  0E24               	movlw	36
  1604  00124E  0100               	movlb	0	; () banked
  1605  001250  1960               	xorwf	_ZigBee_Receive_Buffer& (0+255),w,b
  1606  001252  A4D8               	btfss	status,2,c
  1607  001254  D17F               	goto	l883
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;07_May_Motion+LDR_Main.c: 188: ZigBee_Receive_Buffer[0]=0x00;
  1611  001256  0E00               	movlw	0
  1612  001258  6F60               	movwf	_ZigBee_Receive_Buffer& (0+255),b
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;07_May_Motion+LDR_Main.c: 189: if(ZigBee_Receive_Buffer[1]=='M'){
  1616  00125A  0E4D               	movlw	77
  1617  00125C  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1618  00125E  A4D8               	btfss	status,2,c
  1619  001260  D02C               	goto	l887
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;07_May_Motion+LDR_Main.c: 191: if(ZigBee_Receive_Buffer[2]=='1'){
  1623  001262  0E31               	movlw	49
  1624  001264  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1625  001266  A4D8               	btfss	status,2,c
  1626  001268  D00A               	goto	l885
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;07_May_Motion+LDR_Main.c: 192: F_MSG=1;
  1630  00126A  0E01               	movlw	1
  1631  00126C  6F90               	movwf	_F_MSG& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;07_May_Motion+LDR_Main.c: 193: Write_b_eep(0x05,F_MSG);
  1635  00126E  0E00               	movlw	0
  1636  001270  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1637  001272  0E05               	movlw	5
  1638  001274  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1639  001276  C090  F0BF         	movff	_F_MSG,Write_b_eep@data
  1640  00127A  EC66  F014         	call	_Write_b_eep	;wreg free
  1641  00127E                     l885:
  1642                           
  1643                           ;07_May_Motion+LDR_Main.c: 194: }
  1644                           ;07_May_Motion+LDR_Main.c: 195: if(ZigBee_Receive_Buffer[2]=='2'){
  1645  00127E  0E32               	movlw	50
  1646  001280  0100               	movlb	0	; () banked
  1647  001282  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1648  001284  A4D8               	btfss	status,2,c
  1649  001286  D00A               	goto	l886
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;07_May_Motion+LDR_Main.c: 196: F_MSG=2;
  1653  001288  0E02               	movlw	2
  1654  00128A  6F90               	movwf	_F_MSG& (0+255),b
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;07_May_Motion+LDR_Main.c: 197: Write_b_eep(0x05,F_MSG);
  1658  00128C  0E00               	movlw	0
  1659  00128E  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1660  001290  0E05               	movlw	5
  1661  001292  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1662  001294  C090  F0BF         	movff	_F_MSG,Write_b_eep@data
  1663  001298  EC66  F014         	call	_Write_b_eep	;wreg free
  1664  00129C                     l886:
  1665                           
  1666                           ;07_May_Motion+LDR_Main.c: 198: }
  1667                           ;07_May_Motion+LDR_Main.c: 199: if(ZigBee_Receive_Buffer[2]=='3'){
  1668  00129C  0E33               	movlw	51
  1669  00129E  0100               	movlb	0	; () banked
  1670  0012A0  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1671  0012A2  A4D8               	btfss	status,2,c
  1672  0012A4  D00A               	goto	l887
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;07_May_Motion+LDR_Main.c: 200: F_MSG=3;
  1676  0012A6  0E03               	movlw	3
  1677  0012A8  6F90               	movwf	_F_MSG& (0+255),b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;07_May_Motion+LDR_Main.c: 201: Write_b_eep(0x05,F_MSG);
  1681  0012AA  0E00               	movlw	0
  1682  0012AC  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1683  0012AE  0E05               	movlw	5
  1684  0012B0  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1685  0012B2  C090  F0BF         	movff	_F_MSG,Write_b_eep@data
  1686  0012B6  EC66  F014         	call	_Write_b_eep	;wreg free
  1687  0012BA                     l887:
  1688                           
  1689                           ;07_May_Motion+LDR_Main.c: 202: }
  1690                           ;07_May_Motion+LDR_Main.c: 203: }
  1691                           ;07_May_Motion+LDR_Main.c: 204: if(ZigBee_Receive_Buffer[1]=='L'){
  1692  0012BA  0E4C               	movlw	76
  1693  0012BC  0100               	movlb	0	; () banked
  1694  0012BE  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1695  0012C0  A4D8               	btfss	status,2,c
  1696  0012C2  D146               	goto	l889
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;07_May_Motion+LDR_Main.c: 205: ZigBee_Receive_Buffer[1]=0x00;
  1700  0012C4  0E00               	movlw	0
  1701  0012C6  6F61               	movwf	(_ZigBee_Receive_Buffer+1)& (0+255),b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;07_May_Motion+LDR_Main.c: 206: if(ZigBee_Receive_Buffer[2]==ID_READ){
  1705  0012C8  5199               	movf	_ID_READ& (0+255),w,b
  1706  0012CA  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1707  0012CC  A4D8               	btfss	status,2,c
  1708  0012CE  D140               	goto	l889
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;07_May_Motion+LDR_Main.c: 207: PORTAbits.RA0=1;
  1712  0012D0  8080               	bsf	3968,0,c	;volatile
  1713                           
  1714                           ;07_May_Motion+LDR_Main.c: 208: PORTAbits.RA5=0;
  1715  0012D2  9A80               	bcf	3968,5,c	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;07_May_Motion+LDR_Main.c: 209: Delay_ms(1000);Delay_ms(1000);Delay_ms(100);
  1719  0012D4  0E03               	movlw	3
  1720  0012D6  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1721  0012D8  0EE8               	movlw	232
  1722  0012DA  6FBD               	movwf	Delay_ms@time& (0+255),b
  1723  0012DC  EC7E  F016         	call	_Delay_ms	;wreg free
  1724  0012E0  0E03               	movlw	3
  1725  0012E2  0100               	movlb	0	; () banked
  1726  0012E4  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1727  0012E6  0EE8               	movlw	232
  1728  0012E8  6FBD               	movwf	Delay_ms@time& (0+255),b
  1729  0012EA  EC7E  F016         	call	_Delay_ms	;wreg free
  1730  0012EE  0E00               	movlw	0
  1731  0012F0  0100               	movlb	0	; () banked
  1732  0012F2  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1733  0012F4  0E64               	movlw	100
  1734  0012F6  6FBD               	movwf	Delay_ms@time& (0+255),b
  1735  0012F8  EC7E  F016         	call	_Delay_ms	;wreg free
  1736                           
  1737                           ;07_May_Motion+LDR_Main.c: 210: Delay_ms(1000);Delay_ms(1000);Delay_ms(1000);
  1738  0012FC  0E03               	movlw	3
  1739  0012FE  0100               	movlb	0	; () banked
  1740  001300  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1741  001302  0EE8               	movlw	232
  1742  001304  6FBD               	movwf	Delay_ms@time& (0+255),b
  1743  001306  EC7E  F016         	call	_Delay_ms	;wreg free
  1744  00130A  0E03               	movlw	3
  1745  00130C  0100               	movlb	0	; () banked
  1746  00130E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1747  001310  0EE8               	movlw	232
  1748  001312  6FBD               	movwf	Delay_ms@time& (0+255),b
  1749  001314  EC7E  F016         	call	_Delay_ms	;wreg free
  1750  001318  0E03               	movlw	3
  1751  00131A  0100               	movlb	0	; () banked
  1752  00131C  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1753  00131E  0EE8               	movlw	232
  1754  001320  6FBD               	movwf	Delay_ms@time& (0+255),b
  1755  001322  EC7E  F016         	call	_Delay_ms	;wreg free
  1756                           
  1757                           ;07_May_Motion+LDR_Main.c: 211: PORTAbits.RA0=0;
  1758  001326  9080               	bcf	3968,0,c	;volatile
  1759                           
  1760                           ;07_May_Motion+LDR_Main.c: 212: PORTAbits.RA5=1;
  1761  001328  8A80               	bsf	3968,5,c	;volatile
  1762                           
  1763                           ;07_May_Motion+LDR_Main.c: 213: F_Relay_Time=0;
  1764  00132A  0E00               	movlw	0
  1765  00132C  0100               	movlb	0	; () banked
  1766  00132E  6F92               	movwf	_F_Relay_Time& (0+255),b
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;07_May_Motion+LDR_Main.c: 214: Relay_On_Time=0;
  1770  001330  0E00               	movlw	0
  1771  001332  6F7C               	movwf	(_Relay_On_Time+1)& (0+255),b
  1772  001334  0E00               	movlw	0
  1773  001336  6F7B               	movwf	_Relay_On_Time& (0+255),b
  1774  001338                     
  1775                           ; BSR set to: 0
  1776                           
  1777                           ; BSR set to: 0
  1778                           
  1779                           ; BSR set to: 0
  1780  001338  0592               	decf	_F_Relay_Time& (0+255),w,b
  1781  00133A  A4D8               	btfss	status,2,c
  1782  00133C  D7FD               	goto	l891
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;07_May_Motion+LDR_Main.c: 216: Value_LDR=ADC_GetConversion(6);
  1786                           
  1787                           ; BSR set to: 0
  1788  00133E  0E06               	movlw	6
  1789  001340  EC9F  F014         	call	_ADC_GetConversion
  1790  001344  C0BD  F079         	movff	?_ADC_GetConversion,_Value_LDR
  1791  001348  C0BE  F07A         	movff	?_ADC_GetConversion+1,_Value_LDR+1
  1792                           
  1793                           ;07_May_Motion+LDR_Main.c: 217: VoltageOutput=((float) Value_LDR) * AdcRef;
  1794  00134C  C079  F0C5         	movff	_Value_LDR,___lwtoft@c
  1795  001350  C07A  F0C6         	movff	_Value_LDR+1,___lwtoft@c+1
  1796  001354  EC9D  F015         	call	___lwtoft	;wreg free
  1797  001358  C0C5  F0C8         	movff	?___lwtoft,___ftmul@f1
  1798  00135C  C0C6  F0C9         	movff	?___lwtoft+1,___ftmul@f1+1
  1799  001360  C0C7  F0CA         	movff	?___lwtoft+2,___ftmul@f1+2
  1800  001364  0E0A               	movlw	low _AdcRef
  1801  001366  6EF6               	movwf	tblptrl,c
  1802  001368                     	if	1	;There is more than 1 active tblptr byte
  1803  001368  0E10               	movlw	high _AdcRef
  1804  00136A  6EF7               	movwf	tblptrh,c
  1805  00136C                     	endif
  1806  00136C                     	if	1	;There are 3 active tblptr bytes
  1807  00136C  0E00               	movlw	low (_AdcRef shr (0+16))
  1808  00136E  6EF8               	movwf	tblptru,c
  1809  001370                     	endif
  1810  001370  0009               	tblrd		*+
  1811  001372  CFF5 F0CB          	movff	tablat,___ftmul@f2
  1812  001376  0009               	tblrd		*+
  1813  001378  CFF5 F0CC          	movff	tablat,___ftmul@f2+1
  1814  00137C  000A               	tblrd		*-
  1815  00137E  CFF5 F0CD          	movff	tablat,___ftmul@f2+2
  1816  001382  ECA1  F00F         	call	___ftmul	;wreg free
  1817  001386  C0C8  F06D         	movff	?___ftmul,_VoltageOutput
  1818  00138A  C0C9  F06E         	movff	?___ftmul+1,_VoltageOutput+1
  1819  00138E  C0CA  F06F         	movff	?___ftmul+2,_VoltageOutput+2
  1820                           
  1821                           ;07_May_Motion+LDR_Main.c: 218: ResistanceLDR = (VoltageOutput * R3)/(Vcc - VoltageOutpu
      +                          t);
  1822  001392  0E07               	movlw	low _R3
  1823  001394  6EF6               	movwf	tblptrl,c
  1824  001396                     	if	1	;There is more than 1 active tblptr byte
  1825  001396  0E10               	movlw	high _R3
  1826  001398  6EF7               	movwf	tblptrh,c
  1827  00139A                     	endif
  1828  00139A                     	if	1	;There are 3 active tblptr bytes
  1829  00139A  0E00               	movlw	low (_R3 shr (0+16))
  1830  00139C  6EF8               	movwf	tblptru,c
  1831  00139E                     	endif
  1832  00139E  0009               	tblrd		*+
  1833  0013A0  CFF5 F0CB          	movff	tablat,___ftmul@f2
  1834  0013A4  0009               	tblrd		*+
  1835  0013A6  CFF5 F0CC          	movff	tablat,___ftmul@f2+1
  1836  0013AA  000A               	tblrd		*-
  1837  0013AC  CFF5 F0CD          	movff	tablat,___ftmul@f2+2
  1838  0013B0  C06D  F0C8         	movff	_VoltageOutput,___ftmul@f1
  1839  0013B4  C06E  F0C9         	movff	_VoltageOutput+1,___ftmul@f1+1
  1840  0013B8  C06F  F0CA         	movff	_VoltageOutput+2,___ftmul@f1+2
  1841  0013BC  ECA1  F00F         	call	___ftmul	;wreg free
  1842  0013C0  C0C8  F131         	movff	?___ftmul,___ftdiv@f1
  1843  0013C4  C0C9  F132         	movff	?___ftmul+1,___ftdiv@f1+1
  1844  0013C8  C0CA  F133         	movff	?___ftmul+2,___ftdiv@f1+2
  1845  0013CC  0E04               	movlw	low _Vcc
  1846  0013CE  6EF6               	movwf	tblptrl,c
  1847  0013D0                     	if	1	;There is more than 1 active tblptr byte
  1848  0013D0  0E10               	movlw	high _Vcc
  1849  0013D2  6EF7               	movwf	tblptrh,c
  1850  0013D4                     	endif
  1851  0013D4                     	if	1	;There are 3 active tblptr bytes
  1852  0013D4  0E00               	movlw	low (_Vcc shr (0+16))
  1853  0013D6  6EF8               	movwf	tblptru,c
  1854  0013D8                     	endif
  1855  0013D8  0009               	tblrd		*+
  1856  0013DA  CFF5 F0DD          	movff	tablat,___ftadd@f2
  1857  0013DE  0009               	tblrd		*+
  1858  0013E0  CFF5 F0DE          	movff	tablat,___ftadd@f2+1
  1859  0013E4  000A               	tblrd		*-
  1860  0013E6  CFF5 F0DF          	movff	tablat,___ftadd@f2+2
  1861  0013EA  C06D  F0D7         	movff	_VoltageOutput,___ftneg@f1
  1862  0013EE  C06E  F0D8         	movff	_VoltageOutput+1,___ftneg@f1+1
  1863  0013F2  C06F  F0D9         	movff	_VoltageOutput+2,___ftneg@f1+2
  1864  0013F6  ECB0  F015         	call	___ftneg	;wreg free
  1865  0013FA  C0D7  F0DA         	movff	?___ftneg,___ftadd@f1
  1866  0013FE  C0D8  F0DB         	movff	?___ftneg+1,___ftadd@f1+1
  1867  001402  C0D9  F0DC         	movff	?___ftneg+2,___ftadd@f1+2
  1868  001406  ECA0  F00C         	call	___ftadd	;wreg free
  1869  00140A  C0DA  F134         	movff	?___ftadd,___ftdiv@f2
  1870  00140E  C0DB  F135         	movff	?___ftadd+1,___ftdiv@f2+1
  1871  001412  C0DC  F136         	movff	?___ftadd+2,___ftdiv@f2+2
  1872  001416  EC93  F010         	call	___ftdiv	;wreg free
  1873  00141A  C131  F06A         	movff	?___ftdiv,_ResistanceLDR
  1874  00141E  C132  F06B         	movff	?___ftdiv+1,_ResistanceLDR+1
  1875  001422  C133  F06C         	movff	?___ftdiv+2,_ResistanceLDR+2
  1876                           
  1877                           ;07_May_Motion+LDR_Main.c: 219: Light = (unsigned long)((100 - ((ResistanceLDR / Resista
      +                          nce0)*100)) * 1000);
  1878  001426  0E00               	movlw	0
  1879  001428  0100               	movlb	0	; () banked
  1880  00142A  6FDD               	movwf	___ftadd@f2& (0+255),b
  1881  00142C  0EC8               	movlw	200
  1882  00142E  6FDE               	movwf	(___ftadd@f2+1)& (0+255),b
  1883  001430  0E42               	movlw	66
  1884  001432  6FDF               	movwf	(___ftadd@f2+2)& (0+255),b
  1885  001434  0E00               	movlw	0
  1886  001436  6FCB               	movwf	___ftmul@f2& (0+255),b
  1887  001438  0EC8               	movlw	200
  1888  00143A  6FCC               	movwf	(___ftmul@f2+1)& (0+255),b
  1889  00143C  0E42               	movlw	66
  1890  00143E  6FCD               	movwf	(___ftmul@f2+2)& (0+255),b
  1891  001440  0E01               	movlw	low _Resistance0
  1892  001442  6EF6               	movwf	tblptrl,c
  1893  001444                     	if	1	;There is more than 1 active tblptr byte
  1894  001444  0E10               	movlw	high _Resistance0
  1895  001446  6EF7               	movwf	tblptrh,c
  1896  001448                     	endif
  1897  001448                     	if	1	;There are 3 active tblptr bytes
  1898  001448  0E00               	movlw	low (_Resistance0 shr (0+16))
  1899  00144A  6EF8               	movwf	tblptru,c
  1900  00144C                     	endif
  1901  00144C  0009               	tblrd		*+
  1902  00144E  CFF5 F134          	movff	tablat,___ftdiv@f2
  1903  001452  0009               	tblrd		*+
  1904  001454  CFF5 F135          	movff	tablat,___ftdiv@f2+1
  1905  001458  000A               	tblrd		*-
  1906  00145A  CFF5 F136          	movff	tablat,___ftdiv@f2+2
  1907  00145E  C06A  F131         	movff	_ResistanceLDR,___ftdiv@f1
  1908  001462  C06B  F132         	movff	_ResistanceLDR+1,___ftdiv@f1+1
  1909  001466  C06C  F133         	movff	_ResistanceLDR+2,___ftdiv@f1+2
  1910  00146A  EC93  F010         	call	___ftdiv	;wreg free
  1911  00146E  C131  F0C8         	movff	?___ftdiv,___ftmul@f1
  1912  001472  C132  F0C9         	movff	?___ftdiv+1,___ftmul@f1+1
  1913  001476  C133  F0CA         	movff	?___ftdiv+2,___ftmul@f1+2
  1914  00147A  ECA1  F00F         	call	___ftmul	;wreg free
  1915  00147E  C0C8  F0D7         	movff	?___ftmul,___ftneg@f1
  1916  001482  C0C9  F0D8         	movff	?___ftmul+1,___ftneg@f1+1
  1917  001486  C0CA  F0D9         	movff	?___ftmul+2,___ftneg@f1+2
  1918  00148A  ECB0  F015         	call	___ftneg	;wreg free
  1919  00148E  C0D7  F0DA         	movff	?___ftneg,___ftadd@f1
  1920  001492  C0D8  F0DB         	movff	?___ftneg+1,___ftadd@f1+1
  1921  001496  C0D9  F0DC         	movff	?___ftneg+2,___ftadd@f1+2
  1922  00149A  ECA0  F00C         	call	___ftadd	;wreg free
  1923  00149E  C0DA  F14F         	movff	?___ftadd,_main$2280
  1924  0014A2  C0DB  F150         	movff	?___ftadd+1,_main$2280+1
  1925  0014A6  C0DC  F151         	movff	?___ftadd+2,_main$2280+2
  1926                           
  1927                           ;07_May_Motion+LDR_Main.c: 219: Light = (unsigned long)((100 - ((ResistanceLDR / Resista
      +                          nce0)*100)) * 1000);
  1928  0014AA  0E00               	movlw	0
  1929  0014AC  0100               	movlb	0	; () banked
  1930  0014AE  6FCB               	movwf	___ftmul@f2& (0+255),b
  1931  0014B0  0E7A               	movlw	122
  1932  0014B2  6FCC               	movwf	(___ftmul@f2+1)& (0+255),b
  1933  0014B4  0E44               	movlw	68
  1934  0014B6  6FCD               	movwf	(___ftmul@f2+2)& (0+255),b
  1935  0014B8  C14F  F0C8         	movff	_main$2280,___ftmul@f1
  1936  0014BC  C150  F0C9         	movff	_main$2280+1,___ftmul@f1+1
  1937  0014C0  C151  F0CA         	movff	_main$2280+2,___ftmul@f1+2
  1938  0014C4  ECA1  F00F         	call	___ftmul	;wreg free
  1939  0014C8  C0C8  F140         	movff	?___ftmul,___fttol@f1
  1940  0014CC  C0C9  F141         	movff	?___ftmul+1,___fttol@f1+1
  1941  0014D0  C0CA  F142         	movff	?___ftmul+2,___fttol@f1+2
  1942  0014D4  EC25  F00F         	call	___fttol	;wreg free
  1943  0014D8  C140  F127         	movff	?___fttol,_Light
  1944  0014DC  C141  F128         	movff	?___fttol+1,_Light+1
  1945  0014E0  C142  F129         	movff	?___fttol+2,_Light+2
  1946  0014E4  C143  F12A         	movff	?___fttol+3,_Light+3
  1947                           
  1948                           ;07_May_Motion+LDR_Main.c: 220: Delta= Light - 1;
  1949  0014E8  0EFF               	movlw	255
  1950  0014EA  0101               	movlb	1	; () banked
  1951  0014EC  2527               	addwf	_Light& (0+255),w,b
  1952  0014EE  0100               	movlb	0	; () banked
  1953  0014F0  6F66               	movwf	_Delta& (0+255),b
  1954  0014F2  0EFF               	movlw	255
  1955  0014F4  0101               	movlb	1	; () banked
  1956  0014F6  2128               	addwfc	(_Light+1)& (0+255),w,b
  1957  0014F8  0100               	movlb	0	; () banked
  1958  0014FA  6F67               	movwf	(_Delta+1)& (0+255),b
  1959  0014FC  0EFF               	movlw	255
  1960  0014FE  0101               	movlb	1	; () banked
  1961  001500  2129               	addwfc	(_Light+2)& (0+255),w,b
  1962  001502  0100               	movlb	0	; () banked
  1963  001504  6F68               	movwf	(_Delta+2)& (0+255),b
  1964  001506  0EFF               	movlw	255
  1965  001508  0101               	movlb	1	; () banked
  1966  00150A  212A               	addwfc	(_Light+3)& (0+255),w,b
  1967  00150C  0100               	movlb	0	; () banked
  1968  00150E  6F69               	movwf	(_Delta+3)& (0+255),b
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;07_May_Motion+LDR_Main.c: 221: Delta=Delta/1000;
  1972  001510  C066  F0BD         	movff	_Delta,___aldiv@dividend
  1973  001514  C067  F0BE         	movff	_Delta+1,___aldiv@dividend+1
  1974  001518  C068  F0BF         	movff	_Delta+2,___aldiv@dividend+2
  1975  00151C  C069  F0C0         	movff	_Delta+3,___aldiv@dividend+3
  1976  001520  0EE8               	movlw	232
  1977  001522  6FC1               	movwf	___aldiv@divisor& (0+255),b
  1978  001524  0E03               	movlw	3
  1979  001526  6FC2               	movwf	(___aldiv@divisor+1)& (0+255),b
  1980  001528  0E00               	movlw	0
  1981  00152A  6FC3               	movwf	(___aldiv@divisor+2)& (0+255),b
  1982  00152C  0E00               	movlw	0
  1983  00152E  6FC4               	movwf	(___aldiv@divisor+3)& (0+255),b
  1984  001530  EC07  F011         	call	___aldiv	;wreg free
  1985  001534  C0BD  F066         	movff	?___aldiv,_Delta
  1986  001538  C0BE  F067         	movff	?___aldiv+1,_Delta+1
  1987  00153C  C0BF  F068         	movff	?___aldiv+2,_Delta+2
  1988  001540  C0C0  F069         	movff	?___aldiv+3,_Delta+3
  1989                           
  1990                           ;07_May_Motion+LDR_Main.c: 224: PORTAbits.RA0=1;
  1991  001544  8080               	bsf	3968,0,c	;volatile
  1992                           
  1993                           ;07_May_Motion+LDR_Main.c: 225: PORTAbits.RA5=0;
  1994  001546  9A80               	bcf	3968,5,c	;volatile
  1995                           
  1996                           ;07_May_Motion+LDR_Main.c: 226: PORTAbits.RA1=0;
  1997  001548  9280               	bcf	3968,1,c	;volatile
  1998                           
  1999                           ;07_May_Motion+LDR_Main.c: 227: F_LDR_STATUS=1;
  2000  00154A  0E01               	movlw	1
  2001  00154C  0100               	movlb	0	; () banked
  2002  00154E  6F8D               	movwf	_F_LDR_STATUS& (0+255),b
  2003  001550                     l889:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;07_May_Motion+LDR_Main.c: 228: }
  2007                           ;07_May_Motion+LDR_Main.c: 229: }
  2008                           ;07_May_Motion+LDR_Main.c: 230: Clear_Zigbee_Store_Buffer();
  2009                           
  2010                           ; BSR set to: 0
  2011                           
  2012                           ; BSR set to: 0
  2013  001550  ECC3  F015         	call	_Clear_Zigbee_Store_Buffer	;wreg free
  2014  001554                     l883:
  2015                           
  2016                           ;07_May_Motion+LDR_Main.c: 231: }
  2017                           ;07_May_Motion+LDR_Main.c: 232: }
  2018                           ;07_May_Motion+LDR_Main.c: 233: if(F_Calling == 1){
  2019  001554  0100               	movlb	0	; () banked
  2020  001556  0593               	decf	_F_Calling& (0+255),w,b
  2021  001558  A4D8               	btfss	status,2,c
  2022  00155A  D01C               	goto	l893
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;07_May_Motion+LDR_Main.c: 234: F_Calling=0;
  2026  00155C  0E00               	movlw	0
  2027  00155E  6F93               	movwf	_F_Calling& (0+255),b
  2028                           
  2029                           ;07_May_Motion+LDR_Main.c: 235: F_BUZZER=1;
  2030  001560  0E01               	movlw	1
  2031  001562  6F98               	movwf	_F_BUZZER& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;07_May_Motion+LDR_Main.c: 236: ID_READ=Read_b_eep(0x02);
  2035  001564  0E00               	movlw	0
  2036  001566  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2037  001568  0E02               	movlw	2
  2038  00156A  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  2039  00156C  ECF6  F016         	call	_Read_b_eep	;wreg free
  2040  001570  0100               	movlb	0	; () banked
  2041  001572  6F99               	movwf	_ID_READ& (0+255),b
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;07_May_Motion+LDR_Main.c: 237: data_TX_normal_FIFO[13]='$';
  2045  001574  0E24               	movlw	36
  2046  001576  0101               	movlb	1	; () banked
  2047  001578  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2048                           
  2049                           ; BSR set to: 1
  2050                           ;07_May_Motion+LDR_Main.c: 238: data_TX_normal_FIFO[14]=ID_READ;
  2051  00157A  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;07_May_Motion+LDR_Main.c: 239: data_TX_normal_FIFO[15]='C';
  2055  00157E  0E43               	movlw	67
  2056  001580  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;07_May_Motion+LDR_Main.c: 240: write_TX_normal_FIFO();
  2060  001582  EC71  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2061                           
  2062                           ;07_May_Motion+LDR_Main.c: 241: Delay_ms(20);
  2063  001586  0E00               	movlw	0
  2064  001588  0100               	movlb	0	; () banked
  2065  00158A  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2066  00158C  0E14               	movlw	20
  2067  00158E  6FBD               	movwf	Delay_ms@time& (0+255),b
  2068  001590  EC7E  F016         	call	_Delay_ms	;wreg free
  2069  001594                     l893:
  2070                           
  2071                           ;07_May_Motion+LDR_Main.c: 242: }
  2072                           ;07_May_Motion+LDR_Main.c: 243: if( F_MSG==1 ){
  2073  001594  0100               	movlb	0	; () banked
  2074  001596  0590               	decf	_F_MSG& (0+255),w,b
  2075  001598  A4D8               	btfss	status,2,c
  2076  00159A  D006               	goto	l894
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;07_May_Motion+LDR_Main.c: 244: PORTAbits.RA0=0;
  2080  00159C  9080               	bcf	3968,0,c	;volatile
  2081                           
  2082                           ;07_May_Motion+LDR_Main.c: 245: PORTAbits.RA5=1;
  2083  00159E  8A80               	bsf	3968,5,c	;volatile
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;07_May_Motion+LDR_Main.c: 246: F_MSG=0;
  2087  0015A0  0E00               	movlw	0
  2088  0015A2  6F90               	movwf	_F_MSG& (0+255),b
  2089                           
  2090                           ;07_May_Motion+LDR_Main.c: 247: ALT_ON=0;
  2091  0015A4  0E00               	movlw	0
  2092  0015A6  6F91               	movwf	_ALT_ON& (0+255),b
  2093  0015A8                     l894:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;07_May_Motion+LDR_Main.c: 248: }
  2097                           ;07_May_Motion+LDR_Main.c: 249: if( F_MSG==2){
  2098                           
  2099                           ; BSR set to: 0
  2100  0015A8  0E02               	movlw	2
  2101  0015AA  1990               	xorwf	_F_MSG& (0+255),w,b
  2102  0015AC  A4D8               	btfss	status,2,c
  2103  0015AE  D006               	goto	l895
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;07_May_Motion+LDR_Main.c: 250: PORTAbits.RA0=1;
  2107  0015B0  8080               	bsf	3968,0,c	;volatile
  2108                           
  2109                           ;07_May_Motion+LDR_Main.c: 251: PORTAbits.RA5=0;
  2110  0015B2  9A80               	bcf	3968,5,c	;volatile
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;07_May_Motion+LDR_Main.c: 252: F_MSG=0;
  2114  0015B4  0E00               	movlw	0
  2115  0015B6  6F90               	movwf	_F_MSG& (0+255),b
  2116                           
  2117                           ;07_May_Motion+LDR_Main.c: 253: ALT_ON=0;
  2118  0015B8  0E00               	movlw	0
  2119  0015BA  6F91               	movwf	_ALT_ON& (0+255),b
  2120  0015BC                     l895:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;07_May_Motion+LDR_Main.c: 254: }
  2124                           ;07_May_Motion+LDR_Main.c: 255: if( F_MSG==3){
  2125                           
  2126                           ; BSR set to: 0
  2127  0015BC  0E03               	movlw	3
  2128  0015BE  1990               	xorwf	_F_MSG& (0+255),w,b
  2129  0015C0  A4D8               	btfss	status,2,c
  2130  0015C2  D00A               	goto	l896
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;07_May_Motion+LDR_Main.c: 256: if((ID_READ%2)==0){
  2134  0015C4  B199               	btfsc	_ID_READ& (0+255),0,b
  2135  0015C6  D004               	goto	l897
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;07_May_Motion+LDR_Main.c: 257: PORTAbits.RA0=0;
  2139  0015C8  9080               	bcf	3968,0,c	;volatile
  2140                           
  2141                           ;07_May_Motion+LDR_Main.c: 258: PORTAbits.RA5=1;
  2142  0015CA  8A80               	bsf	3968,5,c	;volatile
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;07_May_Motion+LDR_Main.c: 259: ALT_ON=0;
  2146  0015CC  0E00               	movlw	0
  2147  0015CE  D001               	goto	L1
  2148  0015D0                     l897:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;07_May_Motion+LDR_Main.c: 261: else{
  2152                           ;07_May_Motion+LDR_Main.c: 262: ALT_ON=1;
  2153                           
  2154                           ; BSR set to: 0
  2155  0015D0  0E01               	movlw	1
  2156  0015D2                     L1:
  2157  0015D2  6F91               	movwf	_ALT_ON& (0+255),b
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;07_May_Motion+LDR_Main.c: 263: }
  2161                           ;07_May_Motion+LDR_Main.c: 264: F_MSG=0;
  2162  0015D4  0E00               	movlw	0
  2163  0015D6  6F90               	movwf	_F_MSG& (0+255),b
  2164  0015D8                     l896:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;07_May_Motion+LDR_Main.c: 265: }
  2168                           ;07_May_Motion+LDR_Main.c: 266: if((ALT_ON==1)&&(PORTFbits.RF3==1)){
  2169                           
  2170                           ; BSR set to: 0
  2171  0015D8  0591               	decf	_ALT_ON& (0+255),w,b
  2172  0015DA  B4D8               	btfsc	status,2,c
  2173                           
  2174                           ; BSR set to: 0
  2175  0015DC  A685               	btfss	3973,3,c	;volatile
  2176  0015DE  D006               	goto	l899
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;07_May_Motion+LDR_Main.c: 267: PORTAbits.RA0=0;
  2180  0015E0  9080               	bcf	3968,0,c	;volatile
  2181                           
  2182                           ;07_May_Motion+LDR_Main.c: 268: PORTAbits.RA5=1;
  2183  0015E2  8A80               	bsf	3968,5,c	;volatile
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;07_May_Motion+LDR_Main.c: 269: Time_start=0;
  2187  0015E4  0E00               	movlw	0
  2188  0015E6  6F7E               	movwf	(_Time_start+1)& (0+255),b
  2189  0015E8  0E00               	movlw	0
  2190  0015EA  6F7D               	movwf	_Time_start& (0+255),b
  2191  0015EC                     l899:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;07_May_Motion+LDR_Main.c: 270: }
  2195                           ;07_May_Motion+LDR_Main.c: 272: if((ALT_ON==1)&&(PORTFbits.RF3==0)){
  2196                           
  2197                           ; BSR set to: 0
  2198  0015EC  0591               	decf	_ALT_ON& (0+255),w,b
  2199  0015EE  B4D8               	btfsc	status,2,c
  2200                           
  2201                           ; BSR set to: 0
  2202  0015F0  B685               	btfsc	3973,3,c	;volatile
  2203  0015F2  D00C               	goto	l901
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;07_May_Motion+LDR_Main.c: 273: if(Time_start>1000){
  2207  0015F4  0EE9               	movlw	233
  2208  0015F6  5D7D               	subwf	_Time_start& (0+255),w,b
  2209  0015F8  0E03               	movlw	3
  2210  0015FA  597E               	subwfb	(_Time_start+1)& (0+255),w,b
  2211  0015FC  A0D8               	btfss	status,0,c
  2212  0015FE  D006               	goto	l901
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;07_May_Motion+LDR_Main.c: 274: PORTAbits.RA0=1;
  2216  001600  8080               	bsf	3968,0,c	;volatile
  2217                           
  2218                           ;07_May_Motion+LDR_Main.c: 275: PORTAbits.RA5=0;
  2219  001602  9A80               	bcf	3968,5,c	;volatile
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;07_May_Motion+LDR_Main.c: 276: Time_start=0;
  2223  001604  0E00               	movlw	0
  2224  001606  6F7E               	movwf	(_Time_start+1)& (0+255),b
  2225  001608  0E00               	movlw	0
  2226  00160A  6F7D               	movwf	_Time_start& (0+255),b
  2227  00160C                     l901:
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;07_May_Motion+LDR_Main.c: 277: }
  2231                           ;07_May_Motion+LDR_Main.c: 278: }
  2232                           ;07_May_Motion+LDR_Main.c: 279: if(F_LDR_STATUS==1){
  2233                           
  2234                           ; BSR set to: 0
  2235                           
  2236                           ; BSR set to: 0
  2237  00160C  058D               	decf	_F_LDR_STATUS& (0+255),w,b
  2238  00160E  A4D8               	btfss	status,2,c
  2239  001610  D595               	goto	l875
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;07_May_Motion+LDR_Main.c: 280: F_LDR_STATUS=0;
  2243  001612  0E00               	movlw	0
  2244  001614  6F8D               	movwf	_F_LDR_STATUS& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;07_May_Motion+LDR_Main.c: 281: if(Delta >4 && Delta<=90){
  2248  001616  BF69               	btfsc	(_Delta+3)& (0+255),7,b
  2249  001618  D023               	goto	l903
  2250  00161A  5169               	movf	(_Delta+3)& (0+255),w,b
  2251  00161C  1168               	iorwf	(_Delta+2)& (0+255),w,b
  2252  00161E  1167               	iorwf	(_Delta+1)& (0+255),w,b
  2253  001620  E104               	bnz	u5500
  2254  001622  0E05               	movlw	5
  2255  001624  5D66               	subwf	_Delta& (0+255),w,b
  2256  001626  A0D8               	btfss	status,0,c
  2257  001628  D01B               	goto	l903
  2258  00162A                     u5500:
  2259                           
  2260                           ; BSR set to: 0
  2261  00162A  BF69               	btfsc	(_Delta+3)& (0+255),7,b
  2262  00162C  D008               	goto	u5510
  2263  00162E  5169               	movf	(_Delta+3)& (0+255),w,b
  2264  001630  1168               	iorwf	(_Delta+2)& (0+255),w,b
  2265  001632  1167               	iorwf	(_Delta+1)& (0+255),w,b
  2266  001634  E115               	bnz	l6254
  2267  001636  0E5B               	movlw	91
  2268  001638  5D66               	subwf	_Delta& (0+255),w,b
  2269  00163A  B0D8               	btfsc	status,0,c
  2270  00163C  D011               	goto	l903
  2271  00163E                     u5510:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;07_May_Motion+LDR_Main.c: 282: data_TX_normal_FIFO[13]='$';
  2275  00163E  0E24               	movlw	36
  2276  001640  0101               	movlb	1	; () banked
  2277  001642  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;07_May_Motion+LDR_Main.c: 283: data_TX_normal_FIFO[14]=ID_READ;
  2281  001644  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2282                           
  2283                           ;07_May_Motion+LDR_Main.c: 284: data_TX_normal_FIFO[15]='1';
  2284  001648  0E31               	movlw	49
  2285  00164A  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;07_May_Motion+LDR_Main.c: 285: write_TX_normal_FIFO();
  2289  00164C  EC71  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2290                           
  2291                           ;07_May_Motion+LDR_Main.c: 286: Delay_ms(100);
  2292  001650  0E00               	movlw	0
  2293  001652  0100               	movlb	0	; () banked
  2294  001654  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2295  001656  0E64               	movlw	100
  2296  001658  6FBD               	movwf	Delay_ms@time& (0+255),b
  2297  00165A  EC7E  F016         	call	_Delay_ms	;wreg free
  2298  00165E  D010               	goto	l6262
  2299  001660                     l903:
  2300  001660                     l6254:
  2301                           
  2302                           ;07_May_Motion+LDR_Main.c: 289: else{
  2303                           ;07_May_Motion+LDR_Main.c: 290: data_TX_normal_FIFO[13]='$';
  2304  001660  0E24               	movlw	36
  2305  001662  0101               	movlb	1	; () banked
  2306  001664  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;07_May_Motion+LDR_Main.c: 291: data_TX_normal_FIFO[14]=ID_READ;
  2310  001666  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2311                           
  2312                           ;07_May_Motion+LDR_Main.c: 292: data_TX_normal_FIFO[15]='0';
  2313  00166A  0E30               	movlw	48
  2314  00166C  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;07_May_Motion+LDR_Main.c: 293: write_TX_normal_FIFO();
  2318  00166E  EC71  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2319                           
  2320                           ;07_May_Motion+LDR_Main.c: 294: Delay_ms(100);
  2321  001672  0E00               	movlw	0
  2322  001674  0100               	movlb	0	; () banked
  2323  001676  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2324  001678  0E64               	movlw	100
  2325  00167A  6FBD               	movwf	Delay_ms@time& (0+255),b
  2326  00167C  EC7E  F016         	call	_Delay_ms	;wreg free
  2327  001680                     l6262:
  2328                           
  2329                           ;07_May_Motion+LDR_Main.c: 295: PORTAbits.RA1=1;
  2330  001680  8280               	bsf	3968,1,c	;volatile
  2331                           
  2332                           ;07_May_Motion+LDR_Main.c: 296: }
  2333                           ;07_May_Motion+LDR_Main.c: 297: Delay_ms(100);
  2334  001682  0E00               	movlw	0
  2335  001684  0100               	movlb	0	; () banked
  2336  001686  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2337  001688  0E64               	movlw	100
  2338  00168A  6FBD               	movwf	Delay_ms@time& (0+255),b
  2339  00168C  EC7E  F016         	call	_Delay_ms	;wreg free
  2340                           
  2341                           ;07_May_Motion+LDR_Main.c: 298: Previous_Status=Read_b_eep(0x05);
  2342  001690  0E00               	movlw	0
  2343  001692  0100               	movlb	0	; () banked
  2344  001694  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2345  001696  0E05               	movlw	5
  2346  001698  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  2347  00169A  ECF6  F016         	call	_Read_b_eep	;wreg free
  2348  00169E  0100               	movlb	0	; () banked
  2349  0016A0  6F8F               	movwf	_Previous_Status& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;07_May_Motion+LDR_Main.c: 299: if(Previous_Status == 1){
  2353  0016A2  058F               	decf	_Previous_Status& (0+255),w,b
  2354  0016A4  B4D8               	btfsc	status,2,c
  2355  0016A6  D52F               	goto	u5210
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;07_May_Motion+LDR_Main.c: 302: else if(Previous_Status == 2){
  2359                           
  2360                           ; BSR set to: 0
  2361                           
  2362                           ;07_May_Motion+LDR_Main.c: 301: }
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;07_May_Motion+LDR_Main.c: 300: F_MSG=1;
  2366  0016A8  0E02               	movlw	2
  2367  0016AA  198F               	xorwf	_Previous_Status& (0+255),w,b
  2368  0016AC  B4D8               	btfsc	status,2,c
  2369  0016AE  D531               	goto	u5220
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;07_May_Motion+LDR_Main.c: 305: else if(Previous_Status == 3){
  2373                           
  2374                           ; BSR set to: 0
  2375                           
  2376                           ;07_May_Motion+LDR_Main.c: 304: }
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;07_May_Motion+LDR_Main.c: 303: F_MSG=2;
  2380  0016B0  0E03               	movlw	3
  2381  0016B2  198F               	xorwf	_Previous_Status& (0+255),w,b
  2382  0016B4  B4D8               	btfsc	status,2,c
  2383  0016B6  D533               	goto	u5230
  2384  0016B8                     l909:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;07_May_Motion+LDR_Main.c: 308: else
  2388                           ;07_May_Motion+LDR_Main.c: 309: F_MSG=0;
  2389                           
  2390                           ; BSR set to: 0
  2391  0016B8  0E00               	movlw	0
  2392  0016BA                     L8:
  2393  0016BA  6F90               	movwf	_F_MSG& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           
  2397                           ; BSR set to: 0
  2398                           
  2399                           ; BSR set to: 0
  2400                           
  2401                           ; BSR set to: 0
  2402                           
  2403                           ; BSR set to: 0
  2404  0016BC  D53F               	goto	l875
  2405  0016BE                     __end_of_main:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           intcon	equ	0xFF2
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           postdec1	equ	0xFE5
  2415                           fsr1l	equ	0xFE1
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _write_TX_normal_FIFO *****************
  2419 ;; Defined at:
  2420 ;;		line 334 in file "zigbee.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  i               1   36[BANK0 ] unsigned char 
  2425 ;;  n               1   35[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        7 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:   11
  2442 ;; This function calls:
  2443 ;;		_Delay_ms
  2444 ;;		_Xor_check
  2445 ;;		_set_not_ACK
  2446 ;;		_set_not_encrypt
  2447 ;;		_start_transmit
  2448 ;;		_write_ZIGBEE_long
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text1
  2455  001CE2                     __ptext1:
  2456                           	opt stack 0
  2457  001CE2                     _write_TX_normal_FIFO:
  2458                           	opt stack 19
  2459                           
  2460                           ;zigbee.c: 335: unsigned char i = 0,n = 0;
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;incstack = 0
  2464  001CE2  0E00               	movlw	0
  2465  001CE4  0100               	movlb	0	; () banked
  2466  001CE6  6FCC               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2467  001CE8  0E00               	movlw	0
  2468  001CEA  6FCB               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;zigbee.c: 337: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  2472  001CEC  0E0D               	movlw	low _HEADER_LENGHT
  2473  001CEE  6EF6               	movwf	tblptrl,c
  2474  001CF0                     	if	1	;There is more than 1 active tblptr byte
  2475  001CF0  0E10               	movlw	high _HEADER_LENGHT
  2476  001CF2  6EF7               	movwf	tblptrh,c
  2477  001CF4                     	endif
  2478  001CF4                     	if	1	;There are 3 active tblptr bytes
  2479  001CF4  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2480  001CF6  6EF8               	movwf	tblptru,c
  2481  001CF8                     	endif
  2482  001CF8  0008               	tblrd		*
  2483  001CFA  CFF5 F115          	movff	tablat,_data_TX_normal_FIFO
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;zigbee.c: 338: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  2487  001CFE  0E0E               	movlw	low _DATA_LENGHT
  2488  001D00  6EF6               	movwf	tblptrl,c
  2489  001D02                     	if	1	;There is more than 1 active tblptr byte
  2490  001D02  0E10               	movlw	high _DATA_LENGHT
  2491  001D04  6EF7               	movwf	tblptrh,c
  2492  001D06                     	endif
  2493  001D06                     	if	1	;There are 3 active tblptr bytes
  2494  001D06  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2495  001D08  6EF8               	movwf	tblptru,c
  2496  001D0A                     	endif
  2497  001D0A  0008               	tblrd		*
  2498  001D0C  CFF5 F0C6          	movff	tablat,??_write_TX_normal_FIFO
  2499  001D10  0E0D               	movlw	low _HEADER_LENGHT
  2500  001D12  6EF6               	movwf	tblptrl,c
  2501  001D14                     	if	1	;There is more than 1 active tblptr byte
  2502  001D14  0E10               	movlw	high _HEADER_LENGHT
  2503  001D16  6EF7               	movwf	tblptrh,c
  2504  001D18                     	endif
  2505  001D18                     	if	1	;There are 3 active tblptr bytes
  2506  001D18  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2507  001D1A  6EF8               	movwf	tblptru,c
  2508  001D1C                     	endif
  2509  001D1C  0008               	tblrd		*
  2510  001D1E  50F5               	movf	tablat,w,c
  2511  001D20  25C6               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  2512  001D22  0101               	movlb	1	; () banked
  2513  001D24  6F16               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  2514                           
  2515                           ; BSR set to: 1
  2516                           ;zigbee.c: 339: data_TX_normal_FIFO[2] = 0x01;
  2517  001D26  0E01               	movlw	1
  2518  001D28  6F17               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  2519                           
  2520                           ; BSR set to: 1
  2521                           ;zigbee.c: 340: data_TX_normal_FIFO[3] = 0x88;
  2522  001D2A  0E88               	movlw	136
  2523  001D2C  6F18               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  2524                           
  2525                           ; BSR set to: 1
  2526                           ;zigbee.c: 341: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  2527  001D2E  C0E6  F119         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;zigbee.c: 342: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  2531  001D32  C0E8  F11A         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  2532                           
  2533                           ; BSR set to: 1
  2534                           ;zigbee.c: 343: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  2535  001D36  C0E7  F11B         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;zigbee.c: 344: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  2539  001D3A  C0E9  F11C         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;zigbee.c: 345: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  2543  001D3E  C0EA  F11D         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  2544                           
  2545                           ; BSR set to: 1
  2546                           ;zigbee.c: 346: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  2547  001D42  C0E0  F11E         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;zigbee.c: 347: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  2551  001D46  C0E1  F11F         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  2552                           
  2553                           ; BSR set to: 1
  2554                           ;zigbee.c: 348: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  2555  001D4A  C0E2  F120         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;zigbee.c: 349: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  2559  001D4E  C0E3  F121         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;zigbee.c: 351: for(n=0,ii=13;n<3;n++,ii++){
  2563  001D52  0E00               	movlw	0
  2564  001D54  0100               	movlb	0	; () banked
  2565  001D56  6FCB               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2566                           
  2567                           ; BSR set to: 0
  2568  001D58  0E0D               	movlw	13
  2569  001D5A  6F9B               	movwf	_ii& (0+255),b
  2570  001D5C                     l4676:
  2571                           
  2572                           ; BSR set to: 0
  2573  001D5C  0E02               	movlw	2
  2574  001D5E  65CB               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  2575  001D60  D001               	goto	l495
  2576  001D62  D015               	goto	u3210
  2577  001D64                     l495:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;zigbee.c: 352: DATA_TX[n] = data_TX_normal_FIFO[ii];
  2581                           
  2582                           ; BSR set to: 0
  2583  001D64  519B               	movf	_ii& (0+255),w,b
  2584  001D66  0D01               	mullw	1
  2585  001D68  0E15               	movlw	low _data_TX_normal_FIFO
  2586  001D6A  24F3               	addwf	prodl,w,c
  2587  001D6C  6ED9               	movwf	fsr2l,c
  2588  001D6E  0E01               	movlw	high _data_TX_normal_FIFO
  2589  001D70  20F4               	addwfc	prodh,w,c
  2590  001D72  6EDA               	movwf	fsr2h,c
  2591  001D74  51CB               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  2592  001D76  0D01               	mullw	1
  2593  001D78  0EA5               	movlw	low _DATA_TX
  2594  001D7A  24F3               	addwf	prodl,w,c
  2595  001D7C  6EE1               	movwf	fsr1l,c
  2596  001D7E  0E00               	movlw	high _DATA_TX
  2597  001D80  20F4               	addwfc	prodh,w,c
  2598  001D82  6EE2               	movwf	fsr1h,c
  2599  001D84  CFDF FFE7          	movff	indf2,indf1
  2600                           
  2601                           ; BSR set to: 0
  2602  001D88  2BCB               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  2603                           
  2604                           ; BSR set to: 0
  2605  001D8A  2B9B               	incf	_ii& (0+255),f,b
  2606  001D8C  D7E7               	goto	l4676
  2607  001D8E                     u3210:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;zigbee.c: 353: }
  2611                           ;zigbee.c: 354: TX_CRC = Xor_check(DATA_TX,3);
  2612                           
  2613                           ; BSR set to: 0
  2614  001D8E  0EA5               	movlw	low _DATA_TX
  2615  001D90  6FBD               	movwf	Xor_check@data_value& (0+255),b
  2616  001D92  0E00               	movlw	high _DATA_TX
  2617  001D94  6FBE               	movwf	(Xor_check@data_value+1)& (0+255),b
  2618  001D96  0E03               	movlw	3
  2619  001D98  6FBF               	movwf	Xor_check@length& (0+255),b
  2620  001D9A  ECA3  F013         	call	_Xor_check	;wreg free
  2621  001D9E  C0BD  F085         	movff	?_Xor_check,_TX_CRC
  2622  001DA2  C0BE  F086         	movff	?_Xor_check+1,_TX_CRC+1
  2623                           
  2624                           ;zigbee.c: 355: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  2625  001DA6  C085  F125         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  2626                           
  2627                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  2628  001DAA  0100               	movlb	0	; () banked
  2629  001DAC  5186               	movf	(_TX_CRC+1)& (0+255),w,b
  2630  001DAE  0101               	movlb	1	; () banked
  2631  001DB0  6F26               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  2632                           
  2633                           ; BSR set to: 1
  2634                           ;zigbee.c: 359: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  2635  001DB2  0E00               	movlw	0
  2636  001DB4  0100               	movlb	0	; () banked
  2637  001DB6  6FCC               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2638  001DB8                     l4696:
  2639                           
  2640                           ; BSR set to: 0
  2641  001DB8  0E0D               	movlw	low _HEADER_LENGHT
  2642  001DBA  6EF6               	movwf	tblptrl,c
  2643  001DBC                     	if	1	;There is more than 1 active tblptr byte
  2644  001DBC  0E10               	movlw	high _HEADER_LENGHT
  2645  001DBE  6EF7               	movwf	tblptrh,c
  2646  001DC0                     	endif
  2647  001DC0                     	if	1	;There are 3 active tblptr bytes
  2648  001DC0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2649  001DC2  6EF8               	movwf	tblptru,c
  2650  001DC4                     	endif
  2651  001DC4  0008               	tblrd		*
  2652  001DC6  50F5               	movf	tablat,w,c
  2653  001DC8  6FC6               	movwf	??_write_TX_normal_FIFO& (0+255),b
  2654  001DCA  6BC7               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  2655  001DCC  0E0E               	movlw	low _DATA_LENGHT
  2656  001DCE  6EF6               	movwf	tblptrl,c
  2657  001DD0                     	if	1	;There is more than 1 active tblptr byte
  2658  001DD0  0E10               	movlw	high _DATA_LENGHT
  2659  001DD2  6EF7               	movwf	tblptrh,c
  2660  001DD4                     	endif
  2661  001DD4                     	if	1	;There are 3 active tblptr bytes
  2662  001DD4  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2663  001DD6  6EF8               	movwf	tblptru,c
  2664  001DD8                     	endif
  2665  001DD8  0008               	tblrd		*
  2666  001DDA  50F5               	movf	tablat,w,c
  2667  001DDC  27C6               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2668  001DDE  0E00               	movlw	0
  2669  001DE0  23C7               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2670  001DE2  0E02               	movlw	2
  2671  001DE4  27C6               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2672  001DE6  0E00               	movlw	0
  2673  001DE8  23C7               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2674  001DEA  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2675  001DEC  6FC8               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  2676  001DEE  6BC9               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  2677  001DF0  51C6               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  2678  001DF2  5DC8               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  2679  001DF4  51C9               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  2680  001DF6  0A80               	xorlw	128
  2681  001DF8  6FCA               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  2682  001DFA  51C7               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  2683  001DFC  0A80               	xorlw	128
  2684  001DFE  59CA               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  2685  001E00  B0D8               	btfsc	status,0,c
  2686  001E02  D01C               	goto	u3230
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;zigbee.c: 360: {
  2690                           ;zigbee.c: 361: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  2691                           
  2692                           ; BSR set to: 0
  2693                           
  2694                           ; BSR set to: 0
  2695  001E04  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2696  001E06  2589               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  2697  001E08  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  2698  001E0A  0E00               	movlw	0
  2699  001E0C  218A               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  2700  001E0E  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  2701  001E10  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2702  001E12  0D01               	mullw	1
  2703  001E14  0E15               	movlw	low _data_TX_normal_FIFO
  2704  001E16  24F3               	addwf	prodl,w,c
  2705  001E18  6ED9               	movwf	fsr2l,c
  2706  001E1A  0E01               	movlw	high _data_TX_normal_FIFO
  2707  001E1C  20F4               	addwfc	prodh,w,c
  2708  001E1E  6EDA               	movwf	fsr2h,c
  2709  001E20  50DF               	movf	indf2,w,c
  2710  001E22  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  2711  001E24  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  2712                           
  2713                           ;zigbee.c: 362: Delay_ms(10);
  2714  001E28  0E00               	movlw	0
  2715  001E2A  0100               	movlb	0	; () banked
  2716  001E2C  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2717  001E2E  0E0A               	movlw	10
  2718  001E30  6FBD               	movwf	Delay_ms@time& (0+255),b
  2719  001E32  EC7E  F016         	call	_Delay_ms	;wreg free
  2720  001E36  0100               	movlb	0	; () banked
  2721  001E38  2BCC               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  2722  001E3A  D7BE               	goto	l4696
  2723  001E3C                     u3230:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;zigbee.c: 363: }
  2727                           ;zigbee.c: 364: set_not_ACK();
  2728                           
  2729                           ; BSR set to: 0
  2730  001E3C  ECB1  F016         	call	_set_not_ACK	;wreg free
  2731                           
  2732                           ;zigbee.c: 365: set_not_encrypt();
  2733  001E40  ECA6  F016         	call	_set_not_encrypt	;wreg free
  2734                           
  2735                           ;zigbee.c: 366: start_transmit();
  2736  001E44  EC7F  F013         	call	_start_transmit	;wreg free
  2737  001E48  0012               	return		;funcret
  2738  001E4A                     __end_of_write_TX_normal_FIFO:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           prodh	equ	0xFF4
  2745                           prodl	equ	0xFF3
  2746                           intcon	equ	0xFF2
  2747                           postinc0	equ	0xFEE
  2748                           wreg	equ	0xFE8
  2749                           indf1	equ	0xFE7
  2750                           postdec1	equ	0xFE5
  2751                           fsr1h	equ	0xFE2
  2752                           fsr1l	equ	0xFE1
  2753                           indf2	equ	0xFDF
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _start_transmit *****************
  2759 ;; Defined at:
  2760 ;;		line 382 in file "zigbee.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:   10
  2781 ;; This function calls:
  2782 ;;		_read_ZIGBEE_short
  2783 ;;		_write_ZIGBEE_short
  2784 ;; This function is called by:
  2785 ;;		_write_TX_normal_FIFO
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text2
  2790  0026FE                     __ptext2:
  2791                           	opt stack 0
  2792  0026FE                     _start_transmit:
  2793                           	opt stack 19
  2794                           
  2795                           ;zigbee.c: 384: CHECK=0;
  2796                           
  2797                           ;incstack = 0
  2798  0026FE  0E00               	movlw	0
  2799  002700  0100               	movlb	0	; () banked
  2800  002702  6F9C               	movwf	_CHECK& (0+255),b
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;zigbee.c: 385: CHECK = CHECK | 0x01;
  2804  002704  519C               	movf	_CHECK& (0+255),w,b
  2805  002706  0901               	iorlw	1
  2806  002708  6F9C               	movwf	_CHECK& (0+255),b
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;zigbee.c: 386: write_ZIGBEE_short(0x1B,CHECK);
  2810  00270A  C09C  F0BF         	movff	_CHECK,write_ZIGBEE_short@data_r
  2811  00270E  0E1B               	movlw	27
  2812  002710  ECE8  F015         	call	_write_ZIGBEE_short
  2813                           
  2814                           ;zigbee.c: 388: CHECK=0;
  2815  002714  0E00               	movlw	0
  2816  002716  0100               	movlb	0	; () banked
  2817  002718  6F9C               	movwf	_CHECK& (0+255),b
  2818  00271A                     
  2819                           ; BSR set to: 0
  2820                           
  2821                           ; BSR set to: 0
  2822  00271A  0E31               	movlw	49
  2823  00271C  EC4D  F015         	call	_read_ZIGBEE_short
  2824  002720  06E8               	decf	wreg,f,c
  2825  002722  A4D8               	btfss	status,2,c
  2826  002724  D7FA               	goto	l509
  2827                           
  2828                           ;zigbee.c: 390: CHECK = read_ZIGBEE_short(0x31);
  2829  002726  0E31               	movlw	49
  2830  002728  EC4D  F015         	call	_read_ZIGBEE_short
  2831  00272C  0100               	movlb	0	; () banked
  2832  00272E  6F9C               	movwf	_CHECK& (0+255),b
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;zigbee.c: 391: __nop();
  2836  002730  F000               	nop	
  2837                           
  2838                           ;zigbee.c: 392: CHECK = 0;
  2839  002732  0E00               	movlw	0
  2840  002734  0100               	movlb	0	; () banked
  2841  002736  6F9C               	movwf	_CHECK& (0+255),b
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;zigbee.c: 393: CHECK = read_ZIGBEE_short(0x24);
  2845  002738  0E24               	movlw	36
  2846  00273A  EC4D  F015         	call	_read_ZIGBEE_short
  2847  00273E  0100               	movlb	0	; () banked
  2848  002740  6F9C               	movwf	_CHECK& (0+255),b
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;zigbee.c: 394: __nop();
  2852  002742  F000               	nop	
  2853  002744  0012               	return		;funcret
  2854  002746                     __end_of_start_transmit:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           indf1	equ	0xFE7
  2866                           postdec1	equ	0xFE5
  2867                           fsr1h	equ	0xFE2
  2868                           fsr1l	equ	0xFE1
  2869                           indf2	equ	0xFDF
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _read_ZIGBEE_short *****************
  2875 ;; Defined at:
  2876 ;;		line 403 in file "zigbee.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  address         1    wreg     unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  address         1   24[BANK0 ] unsigned char 
  2881 ;;  data_r          1   23[BANK0 ] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      unsigned char 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    9
  2898 ;; This function calls:
  2899 ;;		_SPI_Read
  2900 ;;		_SPI_Write
  2901 ;; This function is called by:
  2902 ;;		_start_transmit
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text3
  2907  002A9A                     __ptext3:
  2908                           	opt stack 0
  2909  002A9A                     _read_ZIGBEE_short:
  2910                           	opt stack 19
  2911                           
  2912                           ;incstack = 0
  2913                           ;read_ZIGBEE_short@address stored from wreg
  2914  002A9A  0100               	movlb	0	; () banked
  2915  002A9C  6FC0               	movwf	read_ZIGBEE_short@address& (0+255),b
  2916                           
  2917                           ;zigbee.c: 404: unsigned char data_r = 0;
  2918  002A9E  0E00               	movlw	0
  2919  002AA0  0100               	movlb	0	; () banked
  2920  002AA2  6FBF               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;zigbee.c: 406: PORTCbits.RC0=0;
  2924  002AA4  9082               	bcf	3970,0,c	;volatile
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;zigbee.c: 407: address = (address << 1) & 0b01111110;
  2928  002AA6  51C0               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2929  002AA8  25C0               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  2930  002AAA  0B7E               	andlw	126
  2931  002AAC  6FC0               	movwf	read_ZIGBEE_short@address& (0+255),b
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;zigbee.c: 408: SPI_Write(address);
  2935  002AAE  51C0               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2936  002AB0  ECED  F016         	call	_SPI_Write
  2937                           
  2938                           ;zigbee.c: 409: data_r = SPI_Read();
  2939  002AB4  ECDB  F016         	call	_SPI_Read	;wreg free
  2940  002AB8  0100               	movlb	0	; () banked
  2941  002ABA  6FBF               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;zigbee.c: 410: PORTCbits.RC0=1;
  2945  002ABC  8082               	bsf	3970,0,c	;volatile
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;zigbee.c: 412: return data_r;
  2949  002ABE  51BF               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  2950  002AC0  0012               	return	
  2951  002AC2                     __end_of_read_ZIGBEE_short:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           indf1	equ	0xFE7
  2963                           postdec1	equ	0xFE5
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _SPI_Read *****************
  2972 ;; Defined at:
  2973 ;;		line 463 in file "zigbee.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  TempVar         1   21[BANK0 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:        1 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    8
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_read_ZIGBEE_short
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text4
  3002  002DB6                     __ptext4:
  3003                           	opt stack 0
  3004  002DB6                     _SPI_Read:
  3005                           	opt stack 19
  3006                           
  3007                           ;zigbee.c: 464: unsigned char TempVar;
  3008                           ;zigbee.c: 465: SSP1BUF = 0xff;
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;incstack = 0
  3012  002DB6  68C9               	setf	4041,c	;volatile
  3013  002DB8  A0C7               	btfss	4039,0,c	;volatile
  3014  002DBA  D7FE               	goto	l536
  3015                           
  3016                           ;zigbee.c: 467: TempVar = SSP1BUF;
  3017  002DBC  CFC9 F0BD          	movff	4041,SPI_Read@TempVar	;volatile
  3018                           
  3019                           ;zigbee.c: 468: PIR1bits.SSP1IF = 0;
  3020  002DC0  969E               	bcf	3998,3,c	;volatile
  3021                           
  3022                           ;zigbee.c: 469: return ( TempVar );
  3023  002DC2  0100               	movlb	0	; () banked
  3024  002DC4  51BD               	movf	SPI_Read@TempVar& (0+255),w,b
  3025  002DC6  0012               	return	
  3026  002DC8                     __end_of_SPI_Read:
  3027                           	opt stack 0
  3028                           tblptru	equ	0xFF8
  3029                           tblptrh	equ	0xFF7
  3030                           tblptrl	equ	0xFF6
  3031                           tablat	equ	0xFF5
  3032                           prodh	equ	0xFF4
  3033                           prodl	equ	0xFF3
  3034                           intcon	equ	0xFF2
  3035                           postinc0	equ	0xFEE
  3036                           wreg	equ	0xFE8
  3037                           indf1	equ	0xFE7
  3038                           postdec1	equ	0xFE5
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           fsr2h	equ	0xFDA
  3043                           fsr2l	equ	0xFD9
  3044                           status	equ	0xFD8
  3045                           
  3046 ;; *************** function _set_not_encrypt *****************
  3047 ;; Defined at:
  3048 ;;		line 375 in file "zigbee.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  temp            1   25[BANK0 ] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;Total ram usage:        1 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:   10
  3069 ;; This function calls:
  3070 ;;		_write_ZIGBEE_short
  3071 ;; This function is called by:
  3072 ;;		_write_TX_normal_FIFO
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text5
  3077  002D4C                     __ptext5:
  3078                           	opt stack 0
  3079  002D4C                     _set_not_encrypt:
  3080                           	opt stack 19
  3081                           
  3082                           ;zigbee.c: 377: unsigned char temp = 0;
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;incstack = 0
  3086  002D4C  0E00               	movlw	0
  3087  002D4E  0100               	movlb	0	; () banked
  3088  002D50  6FC1               	movwf	set_not_encrypt@temp& (0+255),b
  3089                           
  3090                           ;zigbee.c: 378: temp = temp & (!0x02);
  3091  002D52  0E00               	movlw	0
  3092  002D54  6FC1               	movwf	set_not_encrypt@temp& (0+255),b
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;zigbee.c: 379: write_ZIGBEE_short(0x1B, temp);
  3096  002D56  C0C1  F0BF         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  3097  002D5A  0E1B               	movlw	27
  3098  002D5C  ECE8  F015         	call	_write_ZIGBEE_short
  3099  002D60  0012               	return		;funcret
  3100  002D62                     __end_of_set_not_encrypt:
  3101                           	opt stack 0
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           postinc0	equ	0xFEE
  3110                           wreg	equ	0xFE8
  3111                           indf1	equ	0xFE7
  3112                           postdec1	equ	0xFE5
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _set_not_ACK *****************
  3121 ;; Defined at:
  3122 ;;		line 369 in file "zigbee.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  temp            1   25[BANK0 ] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;Total ram usage:        1 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:   10
  3143 ;; This function calls:
  3144 ;;		_write_ZIGBEE_short
  3145 ;; This function is called by:
  3146 ;;		_write_TX_normal_FIFO
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text6
  3151  002D62                     __ptext6:
  3152                           	opt stack 0
  3153  002D62                     _set_not_ACK:
  3154                           	opt stack 19
  3155                           
  3156                           ;zigbee.c: 371: unsigned char temp = 0;
  3157                           
  3158                           ;incstack = 0
  3159  002D62  0E00               	movlw	0
  3160  002D64  0100               	movlb	0	; () banked
  3161  002D66  6FC1               	movwf	set_not_ACK@temp& (0+255),b
  3162                           
  3163                           ;zigbee.c: 372: temp = temp & (!0x04);
  3164  002D68  0E00               	movlw	0
  3165  002D6A  6FC1               	movwf	set_not_ACK@temp& (0+255),b
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;zigbee.c: 373: write_ZIGBEE_short(0x1B, temp);
  3169  002D6C  C0C1  F0BF         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  3170  002D70  0E1B               	movlw	27
  3171  002D72  ECE8  F015         	call	_write_ZIGBEE_short
  3172  002D76  0012               	return		;funcret
  3173  002D78                     __end_of_set_not_ACK:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           indf1	equ	0xFE7
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function _Xor_check *****************
  3194 ;; Defined at:
  3195 ;;		line 501 in file "zigbee.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  data_value      2   21[BANK0 ] PTR unsigned char 
  3198 ;;		 -> DATA_TX(3), DATA_RX(5), 
  3199 ;;  length          1   23[BANK0 ] unsigned char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  xor             2   27[BANK0 ] unsigned short 
  3202 ;;  xor_value       2   25[BANK0 ] unsigned short 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  2   21[BANK0 ] unsigned short 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;Total ram usage:        8 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    8
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_write_TX_normal_FIFO
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text7
  3227  002746                     __ptext7:
  3228                           	opt stack 0
  3229  002746                     _Xor_check:
  3230                           	opt stack 21
  3231                           
  3232                           ;zigbee.c: 503: unsigned short xor_value = 0x8d0d;
  3233                           
  3234                           ;incstack = 0
  3235  002746  0E8D               	movlw	141
  3236  002748  0100               	movlb	0	; () banked
  3237  00274A  6FC2               	movwf	(Xor_check@xor_value+1)& (0+255),b
  3238  00274C  0E0D               	movlw	13
  3239  00274E  6FC1               	movwf	Xor_check@xor_value& (0+255),b
  3240                           
  3241                           ;zigbee.c: 504: unsigned short xor=0x00;
  3242  002750  0E00               	movlw	0
  3243  002752  6FC4               	movwf	(Xor_check@xor+1)& (0+255),b
  3244  002754  0E00               	movlw	0
  3245  002756  6FC3               	movwf	Xor_check@xor& (0+255),b
  3246                           
  3247                           ;zigbee.c: 505: while(length --)
  3248  002758  D00A               	goto	l575
  3249  00275A                     
  3250                           ; BSR set to: 0
  3251                           ;zigbee.c: 506: {
  3252                           ;zigbee.c: 507: xor_value ^= *data_value++;
  3253                           
  3254                           ; BSR set to: 0
  3255  00275A  C0BD  FFD9         	movff	Xor_check@data_value,fsr2l
  3256  00275E  C0BE  FFDA         	movff	Xor_check@data_value+1,fsr2h
  3257  002762  50DF               	movf	indf2,w,c
  3258  002764  6FC0               	movwf	??_Xor_check& (0+255),b
  3259  002766  51C0               	movf	??_Xor_check& (0+255),w,b
  3260  002768  1BC1               	xorwf	Xor_check@xor_value& (0+255),f,b
  3261                           
  3262                           ; BSR set to: 0
  3263  00276A  4BBD               	infsnz	Xor_check@data_value& (0+255),f,b
  3264  00276C  2BBE               	incf	(Xor_check@data_value+1)& (0+255),f,b
  3265  00276E                     l575:
  3266                           
  3267                           ; BSR set to: 0
  3268                           
  3269                           ; BSR set to: 0
  3270  00276E  07BF               	decf	Xor_check@length& (0+255),f,b
  3271  002770  29BF               	incf	Xor_check@length& (0+255),w,b
  3272  002772  A4D8               	btfss	status,2,c
  3273  002774  D7F2               	goto	l576
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;zigbee.c: 508: }
  3277                           ;zigbee.c: 509: xor=xor_value;
  3278  002776  C0C1  F0C3         	movff	Xor_check@xor_value,Xor_check@xor
  3279  00277A  C0C2  F0C4         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  3280                           
  3281                           ;zigbee.c: 510: return(xor);
  3282  00277E  C0C3  F0BD         	movff	Xor_check@xor,?_Xor_check
  3283  002782  C0C4  F0BE         	movff	Xor_check@xor+1,?_Xor_check+1
  3284                           
  3285                           ; BSR set to: 0
  3286  002786  0012               	return		;funcret
  3287  002788                     __end_of_Xor_check:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           postdec1	equ	0xFE5
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _set_short_address *****************
  3308 ;; Defined at:
  3309 ;;		line 67 in file "zigbee.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  address         2   25[BANK0 ] PTR unsigned char 
  3312 ;;		 -> ADDRESS_short_2(2), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:   10
  3331 ;; This function calls:
  3332 ;;		_write_ZIGBEE_short
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text8
  3339  002A10                     __ptext8:
  3340                           	opt stack 0
  3341  002A10                     _set_short_address:
  3342                           	opt stack 20
  3343                           
  3344                           ;zigbee.c: 68: write_ZIGBEE_short(0x03, address[0]);
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;incstack = 0
  3348  002A10  C0C1  FFD9         	movff	set_short_address@address,fsr2l
  3349  002A14  C0C2  FFDA         	movff	set_short_address@address+1,fsr2h
  3350  002A18  50DF               	movf	indf2,w,c
  3351  002A1A  0100               	movlb	0	; () banked
  3352  002A1C  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3353  002A1E  0E03               	movlw	3
  3354  002A20  ECE8  F015         	call	_write_ZIGBEE_short
  3355                           
  3356                           ;zigbee.c: 69: write_ZIGBEE_short(0x04, address[1]);
  3357  002A24  0100               	movlb	0	; () banked
  3358  002A26  EE20 F001          	lfsr	2,1
  3359  002A2A  51C1               	movf	set_short_address@address& (0+255),w,b
  3360  002A2C  26D9               	addwf	fsr2l,f,c
  3361  002A2E  51C2               	movf	(set_short_address@address+1)& (0+255),w,b
  3362  002A30  22DA               	addwfc	fsr2h,f,c
  3363  002A32  50DF               	movf	indf2,w,c
  3364  002A34  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3365  002A36  0E04               	movlw	4
  3366  002A38  ECE8  F015         	call	_write_ZIGBEE_short
  3367  002A3C  0012               	return		;funcret
  3368  002A3E                     __end_of_set_short_address:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           prodh	equ	0xFF4
  3375                           prodl	equ	0xFF3
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           indf1	equ	0xFE7
  3380                           postdec1	equ	0xFE5
  3381                           fsr1h	equ	0xFE2
  3382                           fsr1l	equ	0xFE1
  3383                           indf2	equ	0xFDF
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function _set_reception_mode *****************
  3389 ;; Defined at:
  3390 ;;		line 303 in file "zigbee.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  r_mode          1    wreg     unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  r_mode          1   25[BANK0 ] unsigned char 
  3395 ;;  temp            1   26[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:        2 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:   10
  3412 ;; This function calls:
  3413 ;;		_write_ZIGBEE_short
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text9
  3420  00257A                     __ptext9:
  3421                           	opt stack 0
  3422  00257A                     _set_reception_mode:
  3423                           	opt stack 20
  3424                           
  3425                           ;incstack = 0
  3426                           ;set_reception_mode@r_mode stored from wreg
  3427  00257A  0100               	movlb	0	; () banked
  3428  00257C  6FC1               	movwf	set_reception_mode@r_mode& (0+255),b
  3429                           
  3430                           ;zigbee.c: 305: unsigned char temp=0;
  3431  00257E  0E00               	movlw	0
  3432  002580  0100               	movlb	0	; () banked
  3433  002582  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3434                           
  3435                           ;zigbee.c: 306: switch(r_mode)
  3436  002584  D026               	goto	l487
  3437  002586                     
  3438                           ; BSR set to: 0
  3439                           ;zigbee.c: 309: {
  3440                           ;zigbee.c: 310: temp=0;
  3441                           
  3442                           ; BSR set to: 0
  3443  002586  0E00               	movlw	0
  3444  002588  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3445                           
  3446                           ;zigbee.c: 311: temp = temp & (!0x03);
  3447  00258A  0E00               	movlw	0
  3448  00258C  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;zigbee.c: 312: write_ZIGBEE_short(0x00, temp);
  3452  00258E  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3453  002592  0E00               	movlw	0
  3454  002594  ECE8  F015         	call	_write_ZIGBEE_short
  3455                           
  3456                           ;zigbee.c: 313: }
  3457                           ;zigbee.c: 314: break;
  3458  002598  0012               	return	
  3459  00259A                     
  3460                           ;zigbee.c: 317: {
  3461                           ;zigbee.c: 318: temp=0;
  3462  00259A  0E00               	movlw	0
  3463  00259C  0100               	movlb	0	; () banked
  3464  00259E  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3465                           
  3466                           ;zigbee.c: 319: temp = temp & (!0x01);
  3467  0025A0  0E00               	movlw	0
  3468  0025A2  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;zigbee.c: 320: temp = temp | 0x02;
  3472  0025A4  51C2               	movf	set_reception_mode@temp& (0+255),w,b
  3473  0025A6  0902               	iorlw	2
  3474  0025A8  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;zigbee.c: 321: write_ZIGBEE_short(0x00, temp);
  3478  0025AA  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3479  0025AE  0E00               	movlw	0
  3480  0025B0  ECE8  F015         	call	_write_ZIGBEE_short
  3481                           
  3482                           ;zigbee.c: 322: }
  3483                           ;zigbee.c: 323: break;
  3484  0025B4  0012               	return	
  3485  0025B6                     
  3486                           ;zigbee.c: 325: {
  3487                           ;zigbee.c: 326: temp=0;
  3488  0025B6  0E00               	movlw	0
  3489  0025B8  0100               	movlb	0	; () banked
  3490  0025BA  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3491                           
  3492                           ;zigbee.c: 327: temp = temp & (!0x02);
  3493  0025BC  0E00               	movlw	0
  3494  0025BE  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;zigbee.c: 328: temp = temp | 0x01;
  3498  0025C0  51C2               	movf	set_reception_mode@temp& (0+255),w,b
  3499  0025C2  0901               	iorlw	1
  3500  0025C4  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;zigbee.c: 329: write_ZIGBEE_short(0x00, temp);
  3504  0025C6  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3505  0025CA  0E00               	movlw	0
  3506  0025CC  ECE8  F015         	call	_write_ZIGBEE_short
  3507                           
  3508                           ;zigbee.c: 332: }
  3509                           
  3510                           ;zigbee.c: 330: }
  3511                           ;zigbee.c: 331: break;
  3512  0025D0  0012               	return	
  3513  0025D2                     l487:
  3514  0025D2  0100               	movlb	0	; () banked
  3515  0025D4  51C1               	movf	set_reception_mode@r_mode& (0+255),w,b
  3516                           
  3517                           ; Switch size 1, requested type "space"
  3518                           ; Number of cases is 3, Range of values is 1 to 3
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte           10     6 (average)
  3522                           ;	Chosen strategy is simple_byte
  3523  0025D6  0A01               	xorlw	1	; case 1
  3524  0025D8  B4D8               	btfsc	status,2,c
  3525  0025DA  D7D5               	goto	l488
  3526  0025DC  0A03               	xorlw	3	; case 2
  3527  0025DE  B4D8               	btfsc	status,2,c
  3528  0025E0  D7DC               	goto	l490
  3529  0025E2  0A01               	xorlw	1	; case 3
  3530  0025E4  A4D8               	btfss	status,2,c
  3531  0025E6  0012               	return	
  3532  0025E8  D7E6               	goto	l491
  3533  0025EA                     __end_of_set_reception_mode:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           indf1	equ	0xFE7
  3545                           postdec1	equ	0xFE5
  3546                           fsr1h	equ	0xFE2
  3547                           fsr1l	equ	0xFE1
  3548                           indf2	equ	0xFDF
  3549                           fsr2h	equ	0xFDA
  3550                           fsr2l	equ	0xFD9
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _set_long_address *****************
  3554 ;; Defined at:
  3555 ;;		line 62 in file "zigbee.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  address         2   25[BANK0 ] PTR unsigned char 
  3558 ;;		 -> ADDRESS_long_2(8), 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  i               1   27[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;Total ram usage:        3 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:   10
  3577 ;; This function calls:
  3578 ;;		_write_ZIGBEE_short
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text10
  3585  002974                     __ptext10:
  3586                           	opt stack 0
  3587  002974                     _set_long_address:
  3588                           	opt stack 20
  3589                           
  3590                           ;zigbee.c: 63: unsigned char i = 0;
  3591                           
  3592                           ;incstack = 0
  3593  002974  0E00               	movlw	0
  3594  002976  0100               	movlb	0	; () banked
  3595  002978  6FC3               	movwf	set_long_address@i& (0+255),b
  3596                           
  3597                           ;zigbee.c: 64: for(i = 0; i < 8; i++)
  3598  00297A  0E00               	movlw	0
  3599  00297C  6FC3               	movwf	set_long_address@i& (0+255),b
  3600  00297E                     l4558:
  3601                           
  3602                           ; BSR set to: 0
  3603  00297E  0E07               	movlw	7
  3604  002980  65C3               	cpfsgt	set_long_address@i& (0+255),b
  3605  002982  D001               	goto	l406
  3606  002984  0012               	return	
  3607  002986                     l406:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;zigbee.c: 65: write_ZIGBEE_short(0x05 + i, address[i]);
  3611                           
  3612                           ; BSR set to: 0
  3613  002986  51C3               	movf	set_long_address@i& (0+255),w,b
  3614  002988  0D01               	mullw	1
  3615  00298A  50F3               	movf	prodl,w,c
  3616  00298C  25C1               	addwf	set_long_address@address& (0+255),w,b
  3617  00298E  6ED9               	movwf	fsr2l,c
  3618  002990  50F4               	movf	prodh,w,c
  3619  002992  21C2               	addwfc	(set_long_address@address+1)& (0+255),w,b
  3620  002994  6EDA               	movwf	fsr2h,c
  3621  002996  50DF               	movf	indf2,w,c
  3622  002998  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3623  00299A  51C3               	movf	set_long_address@i& (0+255),w,b
  3624  00299C  0F05               	addlw	5
  3625  00299E  ECE8  F015         	call	_write_ZIGBEE_short
  3626  0029A2  0100               	movlb	0	; () banked
  3627  0029A4  2BC3               	incf	set_long_address@i& (0+255),f,b
  3628  0029A6  D7EB               	goto	l4558
  3629  0029A8                     __end_of_set_long_address:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           postinc0	equ	0xFEE
  3639                           wreg	equ	0xFE8
  3640                           indf1	equ	0xFE7
  3641                           postdec1	equ	0xFE5
  3642                           fsr1h	equ	0xFE2
  3643                           fsr1l	equ	0xFE1
  3644                           indf2	equ	0xFDF
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _set_frame_format_filter *****************
  3650 ;; Defined at:
  3651 ;;		line 262 in file "zigbee.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  fff_mode        1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  fff_mode        1   25[BANK0 ] unsigned char 
  3656 ;;  temp            1   26[BANK0 ] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:   10
  3673 ;; This function calls:
  3674 ;;		_write_ZIGBEE_short
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text11
  3681  0024E8                     __ptext11:
  3682                           	opt stack 0
  3683  0024E8                     _set_frame_format_filter:
  3684                           	opt stack 20
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688                           ;set_frame_format_filter@fff_mode stored from wreg
  3689  0024E8  0100               	movlb	0	; () banked
  3690  0024EA  6FC1               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  3691                           
  3692                           ;zigbee.c: 264: unsigned char temp = 0;
  3693  0024EC  0E00               	movlw	0
  3694  0024EE  0100               	movlb	0	; () banked
  3695  0024F0  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3696                           
  3697                           ;zigbee.c: 265: switch(fff_mode)
  3698  0024F2  D034               	goto	l478
  3699  0024F4                     
  3700                           ; BSR set to: 0
  3701                           ;zigbee.c: 268: {
  3702                           ;zigbee.c: 269: temp=0;
  3703                           
  3704                           ; BSR set to: 0
  3705  0024F4  0E00               	movlw	0
  3706  0024F6  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3707                           
  3708                           ;zigbee.c: 270: temp = temp & (!0x0E);
  3709  0024F8  0E00               	movlw	0
  3710  0024FA  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;zigbee.c: 271: write_ZIGBEE_short(0x0D, temp);
  3714  0024FC  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3715  002500  0E0D               	movlw	13
  3716  002502  ECE8  F015         	call	_write_ZIGBEE_short
  3717                           
  3718                           ;zigbee.c: 272: }
  3719                           ;zigbee.c: 273: break;
  3720  002506  0012               	return	
  3721  002508                     
  3722                           ;zigbee.c: 275: {
  3723                           ;zigbee.c: 276: temp=0;
  3724  002508  0E00               	movlw	0
  3725  00250A  0100               	movlb	0	; () banked
  3726  00250C  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3727                           
  3728                           ;zigbee.c: 277: temp = temp & (!0x06);
  3729  00250E  0E00               	movlw	0
  3730  002510  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;zigbee.c: 278: temp = temp | 0x08;
  3734  002512  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3735  002514  0908               	iorlw	8
  3736  002516  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;zigbee.c: 279: write_ZIGBEE_short(0x0D, temp);
  3740  002518  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3741  00251C  0E0D               	movlw	13
  3742  00251E  ECE8  F015         	call	_write_ZIGBEE_short
  3743                           
  3744                           ;zigbee.c: 280: }
  3745                           ;zigbee.c: 281: break;
  3746  002522  0012               	return	
  3747  002524                     
  3748                           ;zigbee.c: 283: {
  3749                           ;zigbee.c: 284: temp=0;
  3750  002524  0E00               	movlw	0
  3751  002526  0100               	movlb	0	; () banked
  3752  002528  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3753                           
  3754                           ;zigbee.c: 285: temp = temp & (!0x0A);
  3755  00252A  0E00               	movlw	0
  3756  00252C  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;zigbee.c: 286: temp = temp | 0x04;
  3760  00252E  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3761  002530  0904               	iorlw	4
  3762  002532  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;zigbee.c: 287: write_ZIGBEE_short(0x0D, temp);
  3766  002534  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3767  002538  0E0D               	movlw	13
  3768  00253A  ECE8  F015         	call	_write_ZIGBEE_short
  3769                           
  3770                           ;zigbee.c: 288: }
  3771                           ;zigbee.c: 289: break;
  3772  00253E  0012               	return	
  3773  002540                     
  3774                           ;zigbee.c: 292: {
  3775                           ;zigbee.c: 293: temp=0;
  3776  002540  0E00               	movlw	0
  3777  002542  0100               	movlb	0	; () banked
  3778  002544  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3779                           
  3780                           ;zigbee.c: 294: temp = temp & (!0x0C);
  3781  002546  0E00               	movlw	0
  3782  002548  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;zigbee.c: 295: temp = temp | 0x02;
  3786  00254A  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3787  00254C  0902               	iorlw	2
  3788  00254E  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;zigbee.c: 296: write_ZIGBEE_short(0x0D, temp);
  3792  002550  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3793  002554  0E0D               	movlw	13
  3794  002556  ECE8  F015         	call	_write_ZIGBEE_short
  3795                           
  3796                           ;zigbee.c: 299: }
  3797                           
  3798                           ;zigbee.c: 297: }
  3799                           ;zigbee.c: 298: break;
  3800  00255A  0012               	return	
  3801  00255C                     l478:
  3802  00255C  0100               	movlb	0	; () banked
  3803  00255E  51C1               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  3804                           
  3805                           ; Switch size 1, requested type "space"
  3806                           ; Number of cases is 4, Range of values is 1 to 4
  3807                           ; switch strategies available:
  3808                           ; Name         Instructions Cycles
  3809                           ; simple_byte           13     7 (average)
  3810                           ;	Chosen strategy is simple_byte
  3811  002560  0A01               	xorlw	1	; case 1
  3812  002562  B4D8               	btfsc	status,2,c
  3813  002564  D7C7               	goto	l479
  3814  002566  0A03               	xorlw	3	; case 2
  3815  002568  B4D8               	btfsc	status,2,c
  3816  00256A  D7CE               	goto	l481
  3817  00256C  0A01               	xorlw	1	; case 3
  3818  00256E  B4D8               	btfsc	status,2,c
  3819  002570  D7D9               	goto	l482
  3820  002572  0A07               	xorlw	7	; case 4
  3821  002574  A4D8               	btfss	status,2,c
  3822  002576  0012               	return	
  3823  002578  D7E3               	goto	l483
  3824  00257A                     __end_of_set_frame_format_filter:
  3825                           	opt stack 0
  3826                           tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           indf1	equ	0xFE7
  3836                           postdec1	equ	0xFE5
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844 ;; *************** function _set_WAKE_from_pin *****************
  3845 ;; Defined at:
  3846 ;;		line 57 in file "zigbee.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   10
  3867 ;; This function calls:
  3868 ;;		_write_ZIGBEE_short
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text12
  3875  002CE0                     __ptext12:
  3876                           	opt stack 0
  3877  002CE0                     _set_WAKE_from_pin:
  3878                           	opt stack 20
  3879                           
  3880                           ;zigbee.c: 58: PORTFbits.RF2=0;
  3881                           
  3882                           ;incstack = 0
  3883  002CE0  9485               	bcf	3973,2,c	;volatile
  3884                           
  3885                           ;zigbee.c: 59: write_ZIGBEE_short(0x0D,0x60);
  3886  002CE2  0E60               	movlw	96
  3887  002CE4  0100               	movlb	0	; () banked
  3888  002CE6  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3889  002CE8  0E0D               	movlw	13
  3890  002CEA  ECE8  F015         	call	_write_ZIGBEE_short
  3891                           
  3892                           ;zigbee.c: 60: write_ZIGBEE_short(0x22,0x80);
  3893  002CEE  0E80               	movlw	128
  3894  002CF0  0100               	movlb	0	; () banked
  3895  002CF2  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3896  002CF4  0E22               	movlw	34
  3897  002CF6  ECE8  F015         	call	_write_ZIGBEE_short
  3898  002CFA  0012               	return		;funcret
  3899  002CFC                     __end_of_set_WAKE_from_pin:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           indf1	equ	0xFE7
  3911                           postdec1	equ	0xFE5
  3912                           fsr1h	equ	0xFE2
  3913                           fsr1l	equ	0xFE1
  3914                           indf2	equ	0xFDF
  3915                           fsr2h	equ	0xFDA
  3916                           fsr2l	equ	0xFD9
  3917                           status	equ	0xFD8
  3918                           
  3919 ;; *************** function _set_TX_power *****************
  3920 ;; Defined at:
  3921 ;;		line 251 in file "zigbee.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  power           1    wreg     unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  power           1   31[BANK0 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        2 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:   10
  3942 ;; This function calls:
  3943 ;;		_write_ZIGBEE_long
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text13
  3950  002788                     __ptext13:
  3951                           	opt stack 0
  3952  002788                     _set_TX_power:
  3953                           	opt stack 20
  3954                           
  3955                           ;incstack = 0
  3956                           ;set_TX_power@power stored from wreg
  3957  002788  0100               	movlb	0	; () banked
  3958  00278A  6FC7               	movwf	set_TX_power@power& (0+255),b
  3959                           
  3960                           ;zigbee.c: 252: if((power < 0) || (power > 31))
  3961  00278C  0E1F               	movlw	31
  3962  00278E  0100               	movlb	0	; () banked
  3963  002790  65C7               	cpfsgt	set_TX_power@power& (0+255),b
  3964  002792  D002               	goto	l474
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;zigbee.c: 253: power = 31;
  3968  002794  0E1F               	movlw	31
  3969  002796  6FC7               	movwf	set_TX_power@power& (0+255),b
  3970  002798                     l474:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;zigbee.c: 255: power = 31 - power;
  3974                           
  3975                           ; BSR set to: 0
  3976  002798  51C7               	movf	set_TX_power@power& (0+255),w,b
  3977  00279A  0800               	sublw	0
  3978  00279C  0F1F               	addlw	31
  3979  00279E  6FC7               	movwf	set_TX_power@power& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;zigbee.c: 256: power = ((power & 0b00011111) << 3) & 0b11111000;
  3983  0027A0  C0C7  F0C6         	movff	set_TX_power@power,??_set_TX_power
  3984  0027A4  0E1F               	movlw	31
  3985  0027A6  17C6               	andwf	??_set_TX_power& (0+255),f,b
  3986  0027A8  90D8               	bcf	status,0,c
  3987  0027AA  37C6               	rlcf	??_set_TX_power& (0+255),f,b
  3988  0027AC  90D8               	bcf	status,0,c
  3989  0027AE  37C6               	rlcf	??_set_TX_power& (0+255),f,b
  3990  0027B0  90D8               	bcf	status,0,c
  3991  0027B2  35C6               	rlcf	??_set_TX_power& (0+255),w,b
  3992  0027B4  0BF8               	andlw	248
  3993  0027B6  6FC7               	movwf	set_TX_power@power& (0+255),b
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;zigbee.c: 257: write_ZIGBEE_long(0x203, power);
  3997  0027B8  0E02               	movlw	2
  3998  0027BA  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  3999  0027BC  0E03               	movlw	3
  4000  0027BE  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4001  0027C0  C0C7  F0C1         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  4002  0027C4  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4003  0027C8  0012               	return		;funcret
  4004  0027CA                     __end_of_set_TX_power:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           indf1	equ	0xFE7
  4016                           postdec1	equ	0xFE5
  4017                           fsr1h	equ	0xFE2
  4018                           fsr1l	equ	0xFE1
  4019                           indf2	equ	0xFDF
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function _set_PAN_ID *****************
  4025 ;; Defined at:
  4026 ;;		line 71 in file "zigbee.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  address         2   25[BANK0 ] PTR unsigned char 
  4029 ;;		 -> PAN_ID_2(2), 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        2 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:   10
  4048 ;; This function calls:
  4049 ;;		_write_ZIGBEE_short
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text14
  4056  002A3E                     __ptext14:
  4057                           	opt stack 0
  4058  002A3E                     _set_PAN_ID:
  4059                           	opt stack 20
  4060                           
  4061                           ;zigbee.c: 72: write_ZIGBEE_short(0x01, address[0]);
  4062                           
  4063                           ;incstack = 0
  4064  002A3E  C0C1  FFD9         	movff	set_PAN_ID@address,fsr2l
  4065  002A42  C0C2  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  4066  002A46  50DF               	movf	indf2,w,c
  4067  002A48  0100               	movlb	0	; () banked
  4068  002A4A  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4069  002A4C  0E01               	movlw	1
  4070  002A4E  ECE8  F015         	call	_write_ZIGBEE_short
  4071                           
  4072                           ;zigbee.c: 73: write_ZIGBEE_short(0x02, address[1]);
  4073  002A52  0100               	movlb	0	; () banked
  4074  002A54  EE20 F001          	lfsr	2,1
  4075  002A58  51C1               	movf	set_PAN_ID@address& (0+255),w,b
  4076  002A5A  26D9               	addwf	fsr2l,f,c
  4077  002A5C  51C2               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  4078  002A5E  22DA               	addwfc	fsr2h,f,c
  4079  002A60  50DF               	movf	indf2,w,c
  4080  002A62  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4081  002A64  0E02               	movlw	2
  4082  002A66  ECE8  F015         	call	_write_ZIGBEE_short
  4083  002A6A  0012               	return		;funcret
  4084  002A6C                     __end_of_set_PAN_ID:
  4085                           	opt stack 0
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           indf1	equ	0xFE7
  4096                           postdec1	equ	0xFE5
  4097                           fsr1h	equ	0xFE2
  4098                           fsr1l	equ	0xFE1
  4099                           indf2	equ	0xFDF
  4100                           fsr2h	equ	0xFDA
  4101                           fsr2l	equ	0xFD9
  4102                           status	equ	0xFD8
  4103                           
  4104 ;; *************** function _pin_reset *****************
  4105 ;; Defined at:
  4106 ;;		line 46 in file "zigbee.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    9
  4127 ;; This function calls:
  4128 ;;		_Delay_ms
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text15
  4135  002C60                     __ptext15:
  4136                           	opt stack 0
  4137  002C60                     _pin_reset:
  4138                           	opt stack 21
  4139                           
  4140                           ;zigbee.c: 47: PORTCbits.RC1=0;
  4141                           
  4142                           ;incstack = 0
  4143  002C60  9282               	bcf	3970,1,c	;volatile
  4144                           
  4145                           ;zigbee.c: 48: Delay_ms(10);
  4146  002C62  0E00               	movlw	0
  4147  002C64  0100               	movlb	0	; () banked
  4148  002C66  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4149  002C68  0E0A               	movlw	10
  4150  002C6A  6FBD               	movwf	Delay_ms@time& (0+255),b
  4151  002C6C  EC7E  F016         	call	_Delay_ms	;wreg free
  4152                           
  4153                           ;zigbee.c: 49: PORTCbits.RC1=1;
  4154  002C70  8282               	bsf	3970,1,c	;volatile
  4155                           
  4156                           ;zigbee.c: 50: Delay_ms(10);
  4157  002C72  0E00               	movlw	0
  4158  002C74  0100               	movlb	0	; () banked
  4159  002C76  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4160  002C78  0E0A               	movlw	10
  4161  002C7A  6FBD               	movwf	Delay_ms@time& (0+255),b
  4162  002C7C  EC7E  F016         	call	_Delay_ms	;wreg free
  4163  002C80  0012               	return		;funcret
  4164  002C82                     __end_of_pin_reset:
  4165                           	opt stack 0
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           prodh	equ	0xFF4
  4171                           prodl	equ	0xFF3
  4172                           intcon	equ	0xFF2
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           indf1	equ	0xFE7
  4176                           postdec1	equ	0xFE5
  4177                           fsr1h	equ	0xFE2
  4178                           fsr1l	equ	0xFE1
  4179                           indf2	equ	0xFDF
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  4185 ;; Defined at:
  4186 ;;		line 235 in file "zigbee.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  temp            1   25[BANK0 ] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:   10
  4207 ;; This function calls:
  4208 ;;		_write_ZIGBEE_short
  4209 ;; This function is called by:
  4210 ;;		_main
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text16
  4215  00288E                     __ptext16:
  4216                           	opt stack 0
  4217  00288E                     _nonbeacon_PAN_coordinator_device:
  4218                           	opt stack 20
  4219                           
  4220                           ;zigbee.c: 236: unsigned char temp = 0;
  4221                           
  4222                           ;incstack = 0
  4223  00288E  0E00               	movlw	0
  4224  002890  0100               	movlb	0	; () banked
  4225  002892  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4226                           
  4227                           ;zigbee.c: 238: temp=0;
  4228  002894  0E00               	movlw	0
  4229  002896  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;zigbee.c: 239: temp = temp | 0x08;
  4233  002898  51C1               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4234  00289A  0908               	iorlw	8
  4235  00289C  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;zigbee.c: 240: write_ZIGBEE_short(0x00, temp);
  4239  00289E  C0C1  F0BF         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4240  0028A2  0E00               	movlw	0
  4241  0028A4  ECE8  F015         	call	_write_ZIGBEE_short
  4242                           
  4243                           ;zigbee.c: 242: temp=0;
  4244  0028A8  0E00               	movlw	0
  4245  0028AA  0100               	movlb	0	; () banked
  4246  0028AC  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;zigbee.c: 243: temp = temp & 0xDF;
  4250  0028AE  51C1               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4251  0028B0  0BDF               	andlw	223
  4252  0028B2  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4253                           
  4254                           ;zigbee.c: 244: write_ZIGBEE_short(0x11, temp);
  4255  0028B4  C0C1  F0BF         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4256  0028B8  0E11               	movlw	17
  4257  0028BA  ECE8  F015         	call	_write_ZIGBEE_short
  4258                           
  4259                           ;zigbee.c: 246: write_ZIGBEE_short(0x10, 0xFF);
  4260  0028BE  0EFF               	movlw	255
  4261  0028C0  0100               	movlb	0	; () banked
  4262  0028C2  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4263  0028C4  0E10               	movlw	16
  4264  0028C6  ECE8  F015         	call	_write_ZIGBEE_short
  4265  0028CA  0012               	return		;funcret
  4266  0028CC                     __end_of_nonbeacon_PAN_coordinator_device:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           indf1	equ	0xFE7
  4278                           postdec1	equ	0xFE5
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           fsr2h	equ	0xFDA
  4283                           fsr2l	equ	0xFD9
  4284                           status	equ	0xFD8
  4285                           
  4286 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  4287 ;; Defined at:
  4288 ;;		line 75 in file "zigbee.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:   12
  4309 ;; This function calls:
  4310 ;;		_RF_reset
  4311 ;;		_enable_interrupt
  4312 ;;		_init_ZIGBEE_basic
  4313 ;;		_pin_wake
  4314 ;;		_set_CCA_mode
  4315 ;;		_set_RSSI_mode
  4316 ;;		_set_channel
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text17
  4323  002BAC                     __ptext17:
  4324                           	opt stack 0
  4325  002BAC                     _init_ZIGBEE_nonbeacon:
  4326                           	opt stack 18
  4327                           
  4328                           ;zigbee.c: 76: init_ZIGBEE_basic();
  4329                           
  4330                           ;incstack = 0
  4331  002BAC  EC29  F012         	call	_init_ZIGBEE_basic	;wreg free
  4332                           
  4333                           ;zigbee.c: 77: set_CCA_mode(1);
  4334  002BB0  0E01               	movlw	1
  4335  002BB2  EC6E  F011         	call	_set_CCA_mode
  4336                           
  4337                           ;zigbee.c: 78: set_RSSI_mode(2);
  4338  002BB6  0E02               	movlw	2
  4339  002BB8  ECE5  F013         	call	_set_RSSI_mode
  4340                           
  4341                           ;zigbee.c: 79: enable_interrupt();
  4342  002BBC  EC17  F017         	call	_enable_interrupt	;wreg free
  4343                           
  4344                           ;zigbee.c: 80: set_channel(15);
  4345  002BC0  0E0F               	movlw	15
  4346  002BC2  EC91  F00D         	call	_set_channel
  4347                           
  4348                           ;zigbee.c: 81: pin_wake();
  4349  002BC6  ECE4  F016         	call	_pin_wake	;wreg free
  4350                           
  4351                           ;zigbee.c: 82: RF_reset();
  4352  002BCA  EC61  F015         	call	_RF_reset	;wreg free
  4353  002BCE  0012               	return		;funcret
  4354  002BD0                     __end_of_init_ZIGBEE_nonbeacon:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           intcon	equ	0xFF2
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           indf1	equ	0xFE7
  4366                           postdec1	equ	0xFE5
  4367                           fsr1h	equ	0xFE2
  4368                           fsr1l	equ	0xFE1
  4369                           indf2	equ	0xFDF
  4370                           fsr2h	equ	0xFDA
  4371                           fsr2l	equ	0xFD9
  4372                           status	equ	0xFD8
  4373                           
  4374 ;; *************** function _set_channel *****************
  4375 ;; Defined at:
  4376 ;;		line 171 in file "zigbee.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  channel_numb    1    wreg     unsigned char 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  channel_numb    1   30[BANK0 ] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;Total ram usage:        1 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:   11
  4397 ;; This function calls:
  4398 ;;		_RF_reset
  4399 ;;		_write_ZIGBEE_long
  4400 ;; This function is called by:
  4401 ;;		_init_ZIGBEE_nonbeacon
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text18
  4406  001B22                     __ptext18:
  4407                           	opt stack 0
  4408  001B22                     _set_channel:
  4409                           	opt stack 18
  4410                           
  4411                           ;incstack = 0
  4412                           ;set_channel@channel_number stored from wreg
  4413  001B22  0100               	movlb	0	; () banked
  4414  001B24  6FC6               	movwf	set_channel@channel_number& (0+255),b
  4415                           
  4416                           ;zigbee.c: 173: if((channel_number > 26) || (channel_number < 11))
  4417  001B26  0E1B               	movlw	27
  4418  001B28  0100               	movlb	0	; () banked
  4419  001B2A  61C6               	cpfslt	set_channel@channel_number& (0+255),b
  4420  001B2C  D003               	goto	u3010
  4421                           
  4422                           ; BSR set to: 0
  4423  001B2E  0E0B               	movlw	11
  4424  001B30  61C6               	cpfslt	set_channel@channel_number& (0+255),b
  4425  001B32  D0A2               	goto	l447
  4426  001B34                     u3010:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;zigbee.c: 174: channel_number = 11;
  4430                           
  4431                           ; BSR set to: 0
  4432  001B34  0E0B               	movlw	11
  4433  001B36  6FC6               	movwf	set_channel@channel_number& (0+255),b
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;zigbee.c: 176: switch(channel_number)
  4437  001B38  D09F               	goto	l447
  4438  001B3A                     
  4439                           ; BSR set to: 0
  4440                           ;zigbee.c: 179: write_ZIGBEE_long(0x200, 0x02);
  4441                           
  4442                           ; BSR set to: 0
  4443  001B3A  0E02               	movlw	2
  4444  001B3C  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4445  001B3E  0E00               	movlw	0
  4446  001B40  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4447  001B42  0E02               	movlw	2
  4448  001B44  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4449  001B46  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4450                           
  4451                           ;zigbee.c: 180: break;
  4452  001B4A  D0C8               	goto	l449
  4453  001B4C                     
  4454                           ;zigbee.c: 183: write_ZIGBEE_long(0x200, 0x12);
  4455  001B4C  0E02               	movlw	2
  4456  001B4E  0100               	movlb	0	; () banked
  4457  001B50  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4458  001B52  0E00               	movlw	0
  4459  001B54  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4460  001B56  0E12               	movlw	18
  4461  001B58  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4462  001B5A  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4463                           
  4464                           ;zigbee.c: 184: break;
  4465  001B5E  D0BE               	goto	l449
  4466  001B60                     
  4467                           ;zigbee.c: 187: write_ZIGBEE_long(0x200, 0x22);
  4468  001B60  0E02               	movlw	2
  4469  001B62  0100               	movlb	0	; () banked
  4470  001B64  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4471  001B66  0E00               	movlw	0
  4472  001B68  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4473  001B6A  0E22               	movlw	34
  4474  001B6C  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4475  001B6E  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4476                           
  4477                           ;zigbee.c: 188: break;
  4478  001B72  D0B4               	goto	l449
  4479  001B74                     
  4480                           ;zigbee.c: 190: write_ZIGBEE_long(0x200, 0x32);
  4481  001B74  0E02               	movlw	2
  4482  001B76  0100               	movlb	0	; () banked
  4483  001B78  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4484  001B7A  0E00               	movlw	0
  4485  001B7C  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4486  001B7E  0E32               	movlw	50
  4487  001B80  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4488  001B82  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4489                           
  4490                           ;zigbee.c: 191: break;
  4491  001B86  D0AA               	goto	l449
  4492  001B88                     
  4493                           ;zigbee.c: 193: write_ZIGBEE_long(0x200, 0x42);
  4494  001B88  0E02               	movlw	2
  4495  001B8A  0100               	movlb	0	; () banked
  4496  001B8C  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4497  001B8E  0E00               	movlw	0
  4498  001B90  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4499  001B92  0E42               	movlw	66
  4500  001B94  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4501  001B96  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4502                           
  4503                           ;zigbee.c: 194: break;
  4504  001B9A  D0A0               	goto	l449
  4505  001B9C                     
  4506                           ;zigbee.c: 196: write_ZIGBEE_long(0x200, 0x52);
  4507  001B9C  0E02               	movlw	2
  4508  001B9E  0100               	movlb	0	; () banked
  4509  001BA0  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4510  001BA2  0E00               	movlw	0
  4511  001BA4  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4512  001BA6  0E52               	movlw	82
  4513  001BA8  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4514  001BAA  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4515                           
  4516                           ;zigbee.c: 197: break;
  4517  001BAE  D096               	goto	l449
  4518  001BB0                     
  4519                           ;zigbee.c: 199: write_ZIGBEE_long(0x200, 0x62);
  4520  001BB0  0E02               	movlw	2
  4521  001BB2  0100               	movlb	0	; () banked
  4522  001BB4  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4523  001BB6  0E00               	movlw	0
  4524  001BB8  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4525  001BBA  0E62               	movlw	98
  4526  001BBC  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4527  001BBE  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4528                           
  4529                           ;zigbee.c: 200: break;
  4530  001BC2  D08C               	goto	l449
  4531  001BC4                     
  4532                           ;zigbee.c: 202: write_ZIGBEE_long(0x200, 0x72);
  4533  001BC4  0E02               	movlw	2
  4534  001BC6  0100               	movlb	0	; () banked
  4535  001BC8  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4536  001BCA  0E00               	movlw	0
  4537  001BCC  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4538  001BCE  0E72               	movlw	114
  4539  001BD0  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4540  001BD2  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4541                           
  4542                           ;zigbee.c: 203: break;
  4543  001BD6  D082               	goto	l449
  4544  001BD8                     
  4545                           ;zigbee.c: 205: write_ZIGBEE_long(0x200, 0x82);
  4546  001BD8  0E02               	movlw	2
  4547  001BDA  0100               	movlb	0	; () banked
  4548  001BDC  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4549  001BDE  0E00               	movlw	0
  4550  001BE0  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4551  001BE2  0E82               	movlw	130
  4552  001BE4  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4553  001BE6  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4554                           
  4555                           ;zigbee.c: 206: break;
  4556  001BEA  D078               	goto	l449
  4557  001BEC                     
  4558                           ;zigbee.c: 208: write_ZIGBEE_long(0x200, 0x92);
  4559  001BEC  0E02               	movlw	2
  4560  001BEE  0100               	movlb	0	; () banked
  4561  001BF0  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4562  001BF2  0E00               	movlw	0
  4563  001BF4  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4564  001BF6  0E92               	movlw	146
  4565  001BF8  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4566  001BFA  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4567                           
  4568                           ;zigbee.c: 209: break;
  4569  001BFE  D06E               	goto	l449
  4570  001C00                     
  4571                           ;zigbee.c: 211: write_ZIGBEE_long(0x200, 0xA2);
  4572  001C00  0E02               	movlw	2
  4573  001C02  0100               	movlb	0	; () banked
  4574  001C04  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4575  001C06  0E00               	movlw	0
  4576  001C08  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4577  001C0A  0EA2               	movlw	162
  4578  001C0C  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4579  001C0E  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4580                           
  4581                           ;zigbee.c: 212: break;
  4582  001C12  D064               	goto	l449
  4583  001C14                     
  4584                           ;zigbee.c: 214: write_ZIGBEE_long(0x200, 0xB2);
  4585  001C14  0E02               	movlw	2
  4586  001C16  0100               	movlb	0	; () banked
  4587  001C18  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4588  001C1A  0E00               	movlw	0
  4589  001C1C  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4590  001C1E  0EB2               	movlw	178
  4591  001C20  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4592  001C22  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4593                           
  4594                           ;zigbee.c: 215: break;
  4595  001C26  D05A               	goto	l449
  4596  001C28                     
  4597                           ;zigbee.c: 217: write_ZIGBEE_long(0x200, 0xC2);
  4598  001C28  0E02               	movlw	2
  4599  001C2A  0100               	movlb	0	; () banked
  4600  001C2C  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4601  001C2E  0E00               	movlw	0
  4602  001C30  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4603  001C32  0EC2               	movlw	194
  4604  001C34  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4605  001C36  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4606                           
  4607                           ;zigbee.c: 218: break;
  4608  001C3A  D050               	goto	l449
  4609  001C3C                     
  4610                           ;zigbee.c: 220: write_ZIGBEE_long(0x200, 0xD2);
  4611  001C3C  0E02               	movlw	2
  4612  001C3E  0100               	movlb	0	; () banked
  4613  001C40  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4614  001C42  0E00               	movlw	0
  4615  001C44  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4616  001C46  0ED2               	movlw	210
  4617  001C48  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4618  001C4A  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4619                           
  4620                           ;zigbee.c: 221: break;
  4621  001C4E  D046               	goto	l449
  4622  001C50                     
  4623                           ;zigbee.c: 223: write_ZIGBEE_long(0x200, 0xE2);
  4624  001C50  0E02               	movlw	2
  4625  001C52  0100               	movlb	0	; () banked
  4626  001C54  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4627  001C56  0E00               	movlw	0
  4628  001C58  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4629  001C5A  0EE2               	movlw	226
  4630  001C5C  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4631  001C5E  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4632                           
  4633                           ;zigbee.c: 224: break;
  4634  001C62  D03C               	goto	l449
  4635  001C64                     
  4636                           ;zigbee.c: 226: write_ZIGBEE_long(0x200, 0xF2);
  4637  001C64  0E02               	movlw	2
  4638  001C66  0100               	movlb	0	; () banked
  4639  001C68  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4640  001C6A  0E00               	movlw	0
  4641  001C6C  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4642  001C6E  0EF2               	movlw	242
  4643  001C70  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4644  001C72  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  4645                           
  4646                           ;zigbee.c: 228: }
  4647                           
  4648                           ;zigbee.c: 227: break;
  4649  001C76  D032               	goto	l449
  4650  001C78                     l447:
  4651  001C78  0100               	movlb	0	; () banked
  4652  001C7A  51C6               	movf	set_channel@channel_number& (0+255),w,b
  4653                           
  4654                           ; Switch size 1, requested type "space"
  4655                           ; Number of cases is 16, Range of values is 11 to 26
  4656                           ; switch strategies available:
  4657                           ; Name         Instructions Cycles
  4658                           ; simple_byte           49    25 (average)
  4659                           ;	Chosen strategy is simple_byte
  4660  001C7C  0A0B               	xorlw	11	; case 11
  4661  001C7E  B4D8               	btfsc	status,2,c
  4662  001C80  D75C               	goto	l448
  4663  001C82  0A07               	xorlw	7	; case 12
  4664  001C84  B4D8               	btfsc	status,2,c
  4665  001C86  D762               	goto	l450
  4666  001C88  0A01               	xorlw	1	; case 13
  4667  001C8A  B4D8               	btfsc	status,2,c
  4668  001C8C  D769               	goto	l451
  4669  001C8E  0A03               	xorlw	3	; case 14
  4670  001C90  B4D8               	btfsc	status,2,c
  4671  001C92  D770               	goto	l452
  4672  001C94  0A01               	xorlw	1	; case 15
  4673  001C96  B4D8               	btfsc	status,2,c
  4674  001C98  D777               	goto	l453
  4675  001C9A  0A1F               	xorlw	31	; case 16
  4676  001C9C  B4D8               	btfsc	status,2,c
  4677  001C9E  D77E               	goto	l454
  4678  001CA0  0A01               	xorlw	1	; case 17
  4679  001CA2  B4D8               	btfsc	status,2,c
  4680  001CA4  D785               	goto	l455
  4681  001CA6  0A03               	xorlw	3	; case 18
  4682  001CA8  B4D8               	btfsc	status,2,c
  4683  001CAA  D78C               	goto	l456
  4684  001CAC  0A01               	xorlw	1	; case 19
  4685  001CAE  B4D8               	btfsc	status,2,c
  4686  001CB0  D793               	goto	l457
  4687  001CB2  0A07               	xorlw	7	; case 20
  4688  001CB4  B4D8               	btfsc	status,2,c
  4689  001CB6  D79A               	goto	l458
  4690  001CB8  0A01               	xorlw	1	; case 21
  4691  001CBA  B4D8               	btfsc	status,2,c
  4692  001CBC  D7A1               	goto	l459
  4693  001CBE  0A03               	xorlw	3	; case 22
  4694  001CC0  B4D8               	btfsc	status,2,c
  4695  001CC2  D7A8               	goto	l460
  4696  001CC4  0A01               	xorlw	1	; case 23
  4697  001CC6  B4D8               	btfsc	status,2,c
  4698  001CC8  D7AF               	goto	l461
  4699  001CCA  0A0F               	xorlw	15	; case 24
  4700  001CCC  B4D8               	btfsc	status,2,c
  4701  001CCE  D7B6               	goto	l462
  4702  001CD0  0A01               	xorlw	1	; case 25
  4703  001CD2  B4D8               	btfsc	status,2,c
  4704  001CD4  D7BD               	goto	l463
  4705  001CD6  0A03               	xorlw	3	; case 26
  4706  001CD8  B4D8               	btfsc	status,2,c
  4707  001CDA  D7C4               	goto	l464
  4708  001CDC                     l449:
  4709                           
  4710                           ;zigbee.c: 229: RF_reset();
  4711                           
  4712                           ; BSR set to: 0
  4713  001CDC  EC61  F015         	call	_RF_reset	;wreg free
  4714  001CE0  0012               	return		;funcret
  4715  001CE2                     __end_of_set_channel:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           indf1	equ	0xFE7
  4727                           postdec1	equ	0xFE5
  4728                           fsr1h	equ	0xFE2
  4729                           fsr1l	equ	0xFE1
  4730                           indf2	equ	0xFDF
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _RF_reset *****************
  4736 ;; Defined at:
  4737 ;;		line 52 in file "zigbee.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:   10
  4758 ;; This function calls:
  4759 ;;		_Delay_ms
  4760 ;;		_write_ZIGBEE_short
  4761 ;; This function is called by:
  4762 ;;		_init_ZIGBEE_nonbeacon
  4763 ;;		_set_channel
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text19
  4769  002AC2                     __ptext19:
  4770                           	opt stack 0
  4771  002AC2                     _RF_reset:
  4772                           	opt stack 18
  4773                           
  4774                           ;zigbee.c: 53: write_ZIGBEE_short(0x36,0x04);
  4775                           
  4776                           ;incstack = 0
  4777  002AC2  0E04               	movlw	4
  4778  002AC4  0100               	movlb	0	; () banked
  4779  002AC6  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4780  002AC8  0E36               	movlw	54
  4781  002ACA  ECE8  F015         	call	_write_ZIGBEE_short
  4782                           
  4783                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,(!0x04));
  4784  002ACE  0E00               	movlw	0
  4785  002AD0  0100               	movlb	0	; () banked
  4786  002AD2  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4787  002AD4  0E36               	movlw	54
  4788  002AD6  ECE8  F015         	call	_write_ZIGBEE_short
  4789                           
  4790                           ;zigbee.c: 55: Delay_ms(20);
  4791  002ADA  0E00               	movlw	0
  4792  002ADC  0100               	movlb	0	; () banked
  4793  002ADE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4794  002AE0  0E14               	movlw	20
  4795  002AE2  6FBD               	movwf	Delay_ms@time& (0+255),b
  4796  002AE4  EC7E  F016         	call	_Delay_ms	;wreg free
  4797  002AE8  0012               	return		;funcret
  4798  002AEA                     __end_of_RF_reset:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           indf1	equ	0xFE7
  4810                           postdec1	equ	0xFE5
  4811                           fsr1h	equ	0xFE2
  4812                           fsr1l	equ	0xFE1
  4813                           indf2	equ	0xFDF
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _set_RSSI_mode *****************
  4819 ;; Defined at:
  4820 ;;		line 149 in file "zigbee.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  RSSI_mode       1    wreg     unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  RSSI_mode       1   25[BANK0 ] unsigned char 
  4825 ;;  temp            1   26[BANK0 ] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        2 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:   10
  4842 ;; This function calls:
  4843 ;;		_write_ZIGBEE_short
  4844 ;; This function is called by:
  4845 ;;		_init_ZIGBEE_nonbeacon
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text20
  4850  0027CA                     __ptext20:
  4851                           	opt stack 0
  4852  0027CA                     _set_RSSI_mode:
  4853                           	opt stack 19
  4854                           
  4855                           ;incstack = 0
  4856                           ;set_RSSI_mode@RSSI_mode stored from wreg
  4857  0027CA  0100               	movlb	0	; () banked
  4858  0027CC  6FC1               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  4859                           
  4860                           ;zigbee.c: 151: unsigned char temp = 0;
  4861  0027CE  0E00               	movlw	0
  4862  0027D0  0100               	movlb	0	; () banked
  4863  0027D2  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4864                           
  4865                           ;zigbee.c: 152: switch(RSSI_mode)
  4866  0027D4  D012               	goto	l434
  4867  0027D6                     
  4868                           ; BSR set to: 0
  4869                           ;zigbee.c: 155: {
  4870                           ;zigbee.c: 156: temp=0;
  4871                           
  4872                           ; BSR set to: 0
  4873  0027D6  0E00               	movlw	0
  4874  0027D8  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;zigbee.c: 157: temp = temp | 0x80;
  4878  0027DA  51C2               	movf	set_RSSI_mode@temp& (0+255),w,b
  4879  0027DC  0980               	iorlw	128
  4880  0027DE  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;zigbee.c: 158: write_ZIGBEE_short(0x3E, temp);
  4884  0027E0  C0C2  F0BF         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  4885  0027E4  0E3E               	movlw	62
  4886  0027E6  ECE8  F015         	call	_write_ZIGBEE_short
  4887                           
  4888                           ;zigbee.c: 159: }
  4889                           ;zigbee.c: 160: break;
  4890  0027EA  0012               	return	
  4891  0027EC                     
  4892                           ;zigbee.c: 163: write_ZIGBEE_short(0x3E, 0x40);
  4893  0027EC  0E40               	movlw	64
  4894  0027EE  0100               	movlb	0	; () banked
  4895  0027F0  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4896  0027F2  0E3E               	movlw	62
  4897  0027F4  ECE8  F015         	call	_write_ZIGBEE_short
  4898                           
  4899                           ;zigbee.c: 165: }
  4900                           
  4901                           ;zigbee.c: 164: break;
  4902  0027F8  0012               	return	
  4903  0027FA                     l434:
  4904  0027FA  0100               	movlb	0	; () banked
  4905  0027FC  51C1               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  4906                           
  4907                           ; Switch size 1, requested type "space"
  4908                           ; Number of cases is 2, Range of values is 1 to 2
  4909                           ; switch strategies available:
  4910                           ; Name         Instructions Cycles
  4911                           ; simple_byte            7     4 (average)
  4912                           ;	Chosen strategy is simple_byte
  4913  0027FE  0A01               	xorlw	1	; case 1
  4914  002800  B4D8               	btfsc	status,2,c
  4915  002802  D7E9               	goto	l435
  4916  002804  0A03               	xorlw	3	; case 2
  4917  002806  A4D8               	btfss	status,2,c
  4918  002808  0012               	return	
  4919  00280A  D7F0               	goto	l437
  4920  00280C                     __end_of_set_RSSI_mode:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           intcon	equ	0xFF2
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           indf1	equ	0xFE7
  4932                           postdec1	equ	0xFE5
  4933                           fsr1h	equ	0xFE2
  4934                           fsr1l	equ	0xFE1
  4935                           indf2	equ	0xFDF
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function _set_CCA_mode *****************
  4941 ;; Defined at:
  4942 ;;		line 102 in file "zigbee.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  CCA_mode        1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  CCA_mode        1   25[BANK0 ] unsigned char 
  4947 ;;  temp            1   26[BANK0 ] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;Total ram usage:        2 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:   10
  4964 ;; This function calls:
  4965 ;;		_write_ZIGBEE_short
  4966 ;; This function is called by:
  4967 ;;		_init_ZIGBEE_nonbeacon
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text21
  4972  0022DC                     __ptext21:
  4973                           	opt stack 0
  4974  0022DC                     _set_CCA_mode:
  4975                           	opt stack 19
  4976                           
  4977                           ;incstack = 0
  4978                           ;set_CCA_mode@CCA_mode stored from wreg
  4979  0022DC  0100               	movlb	0	; () banked
  4980  0022DE  6FC1               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  4981                           
  4982                           ;zigbee.c: 104: unsigned char temp = 0;
  4983  0022E0  0E00               	movlw	0
  4984  0022E2  0100               	movlb	0	; () banked
  4985  0022E4  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4986                           
  4987                           ;zigbee.c: 105: switch(CCA_mode)
  4988  0022E6  D051               	goto	l426
  4989  0022E8                     
  4990                           ; BSR set to: 0
  4991                           ;zigbee.c: 108: {
  4992                           ;zigbee.c: 109: temp=0;
  4993                           
  4994                           ; BSR set to: 0
  4995  0022E8  0E00               	movlw	0
  4996  0022EA  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;zigbee.c: 110: temp = temp | 0x80;
  5000  0022EC  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5001  0022EE  0980               	iorlw	128
  5002  0022F0  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;zigbee.c: 111: temp = temp & 0xDF;
  5006  0022F2  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5007  0022F4  0BDF               	andlw	223
  5008  0022F6  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;zigbee.c: 112: write_ZIGBEE_short(0x3A, temp);
  5012  0022F8  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5013  0022FC  0E3A               	movlw	58
  5014  0022FE  ECE8  F015         	call	_write_ZIGBEE_short
  5015                           
  5016                           ;zigbee.c: 113: write_ZIGBEE_short(0x3F, 0x60);
  5017  002302  0E60               	movlw	96
  5018  002304  0100               	movlb	0	; () banked
  5019  002306  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5020  002308  0E3F               	movlw	63
  5021  00230A  ECE8  F015         	call	_write_ZIGBEE_short
  5022                           
  5023                           ;zigbee.c: 114: }
  5024                           ;zigbee.c: 115: break;
  5025  00230E  0012               	return	
  5026  002310                     
  5027                           ;zigbee.c: 118: {
  5028                           ;zigbee.c: 119: temp=0;
  5029  002310  0E00               	movlw	0
  5030  002312  0100               	movlb	0	; () banked
  5031  002314  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;zigbee.c: 120: temp = temp | 0x40;
  5035  002316  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5036  002318  0940               	iorlw	64
  5037  00231A  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;zigbee.c: 121: temp = temp & 0x7F;
  5041  00231C  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5042  00231E  0B7F               	andlw	127
  5043  002320  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;zigbee.c: 122: write_ZIGBEE_short(0x3A, temp);
  5047  002322  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5048  002326  0E3A               	movlw	58
  5049  002328  ECE8  F015         	call	_write_ZIGBEE_short
  5050                           
  5051                           ;zigbee.c: 124: temp=0;
  5052  00232C  0E00               	movlw	0
  5053  00232E  0100               	movlb	0	; () banked
  5054  002330  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;zigbee.c: 125: temp = temp | 0x38;
  5058  002332  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5059  002334  0938               	iorlw	56
  5060  002336  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;zigbee.c: 126: temp = temp & 0xFB;
  5064  002338  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5065  00233A  0BFB               	andlw	251
  5066  00233C  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5067                           
  5068                           ;zigbee.c: 127: write_ZIGBEE_short(0x3A, temp);
  5069  00233E  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5070  002342  0E3A               	movlw	58
  5071  002344  ECE8  F015         	call	_write_ZIGBEE_short
  5072                           
  5073                           ;zigbee.c: 128: }
  5074                           ;zigbee.c: 129: break;
  5075  002348  0012               	return	
  5076  00234A                     
  5077                           ;zigbee.c: 132: {
  5078                           ;zigbee.c: 133: temp=0;
  5079  00234A  0E00               	movlw	0
  5080  00234C  0100               	movlb	0	; () banked
  5081  00234E  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;zigbee.c: 134: temp = temp | 0xC0;
  5085  002350  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5086  002352  09C0               	iorlw	192
  5087  002354  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;zigbee.c: 135: write_ZIGBEE_short(0x3A, temp);
  5091  002356  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5092  00235A  0E3A               	movlw	58
  5093  00235C  ECE8  F015         	call	_write_ZIGBEE_short
  5094                           
  5095                           ;zigbee.c: 137: temp=0;
  5096  002360  0E00               	movlw	0
  5097  002362  0100               	movlb	0	; () banked
  5098  002364  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;zigbee.c: 138: temp = temp | 0x38;
  5102  002366  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5103  002368  0938               	iorlw	56
  5104  00236A  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;zigbee.c: 139: temp = temp & 0xFB;
  5108  00236C  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5109  00236E  0BFB               	andlw	251
  5110  002370  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;zigbee.c: 140: write_ZIGBEE_short(0x3A, temp);
  5114  002372  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5115  002376  0E3A               	movlw	58
  5116  002378  ECE8  F015         	call	_write_ZIGBEE_short
  5117                           
  5118                           ;zigbee.c: 142: write_ZIGBEE_short(0x3F, 0x60);
  5119  00237C  0E60               	movlw	96
  5120  00237E  0100               	movlb	0	; () banked
  5121  002380  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5122  002382  0E3F               	movlw	63
  5123  002384  ECE8  F015         	call	_write_ZIGBEE_short
  5124                           
  5125                           ;zigbee.c: 145: }
  5126                           
  5127                           ;zigbee.c: 143: }
  5128                           ;zigbee.c: 144: break;
  5129  002388  0012               	return	
  5130  00238A                     l426:
  5131  00238A  0100               	movlb	0	; () banked
  5132  00238C  51C1               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  5133                           
  5134                           ; Switch size 1, requested type "space"
  5135                           ; Number of cases is 3, Range of values is 1 to 3
  5136                           ; switch strategies available:
  5137                           ; Name         Instructions Cycles
  5138                           ; simple_byte           10     6 (average)
  5139                           ;	Chosen strategy is simple_byte
  5140  00238E  0A01               	xorlw	1	; case 1
  5141  002390  B4D8               	btfsc	status,2,c
  5142  002392  D7AA               	goto	l427
  5143  002394  0A03               	xorlw	3	; case 2
  5144  002396  B4D8               	btfsc	status,2,c
  5145  002398  D7BB               	goto	l429
  5146  00239A  0A01               	xorlw	1	; case 3
  5147  00239C  A4D8               	btfss	status,2,c
  5148  00239E  0012               	return	
  5149  0023A0  D7D4               	goto	l430
  5150  0023A2                     __end_of_set_CCA_mode:
  5151                           	opt stack 0
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postdec1	equ	0xFE5
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170 ;; *************** function _pin_wake *****************
  5171 ;; Defined at:
  5172 ;;		line 231 in file "zigbee.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    9
  5193 ;; This function calls:
  5194 ;;		_Delay_ms
  5195 ;; This function is called by:
  5196 ;;		_init_ZIGBEE_nonbeacon
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text22
  5202  002DC8                     __ptext22:
  5203                           	opt stack 0
  5204  002DC8                     _pin_wake:
  5205                           	opt stack 21
  5206                           
  5207                           ;zigbee.c: 232: PORTFbits.RF2=1;
  5208                           
  5209                           ;incstack = 0
  5210  002DC8  8485               	bsf	3973,2,c	;volatile
  5211                           
  5212                           ;zigbee.c: 233: Delay_ms(10);
  5213  002DCA  0E00               	movlw	0
  5214  002DCC  0100               	movlb	0	; () banked
  5215  002DCE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  5216  002DD0  0E0A               	movlw	10
  5217  002DD2  6FBD               	movwf	Delay_ms@time& (0+255),b
  5218  002DD4  EC7E  F016         	call	_Delay_ms	;wreg free
  5219  002DD8  0012               	return		;funcret
  5220  002DDA                     __end_of_pin_wake:
  5221                           	opt stack 0
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           prodh	equ	0xFF4
  5227                           prodl	equ	0xFF3
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           indf1	equ	0xFE7
  5232                           postdec1	equ	0xFE5
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           indf2	equ	0xFDF
  5236                           fsr2h	equ	0xFDA
  5237                           fsr2l	equ	0xFD9
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _Delay_ms *****************
  5241 ;; Defined at:
  5242 ;;		line 475 in file "zigbee.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  time            2   21[BANK0 ] unsigned int 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  y               2   23[BANK0 ] unsigned int 
  5247 ;;  x               2    0        unsigned int 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;Total ram usage:        4 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    8
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_pin_reset
  5268 ;;		_RF_reset
  5269 ;;		_pin_wake
  5270 ;;		_write_TX_normal_FIFO
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text23
  5276  002CFC                     __ptext23:
  5277                           	opt stack 0
  5278  002CFC                     _Delay_ms:
  5279                           	opt stack 21
  5280                           
  5281                           ;zigbee.c: 476: unsigned int x,y=0;
  5282                           
  5283                           ;incstack = 0
  5284  002CFC  0E00               	movlw	0
  5285  002CFE  0100               	movlb	0	; () banked
  5286  002D00  6FC0               	movwf	(Delay_ms@y+1)& (0+255),b
  5287  002D02  0E00               	movlw	0
  5288  002D04  6FBF               	movwf	Delay_ms@y& (0+255),b
  5289  002D06                     
  5290                           ; BSR set to: 0
  5291                           
  5292                           ; BSR set to: 0
  5293                           
  5294                           ; BSR set to: 0
  5295  002D06  4BBD               	infsnz	Delay_ms@time& (0+255),f,b
  5296  002D08  2BBE               	incf	(Delay_ms@time+1)& (0+255),f,b
  5297  002D0A  0E10               	movlw	16
  5298  002D0C  5DBD               	subwf	Delay_ms@time& (0+255),w,b
  5299  002D0E  0E27               	movlw	39
  5300  002D10  59BE               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  5301  002D12  B0D8               	btfsc	status,0,c
  5302  002D14  0012               	return	
  5303  002D16  D7F7               	goto	l548
  5304  002D18                     __end_of_Delay_ms:
  5305                           	opt stack 0
  5306                           tblptru	equ	0xFF8
  5307                           tblptrh	equ	0xFF7
  5308                           tblptrl	equ	0xFF6
  5309                           tablat	equ	0xFF5
  5310                           prodh	equ	0xFF4
  5311                           prodl	equ	0xFF3
  5312                           intcon	equ	0xFF2
  5313                           postinc0	equ	0xFEE
  5314                           wreg	equ	0xFE8
  5315                           indf1	equ	0xFE7
  5316                           postdec1	equ	0xFE5
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function _init_ZIGBEE_basic *****************
  5325 ;; Defined at:
  5326 ;;		line 85 in file "zigbee.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:   11
  5347 ;; This function calls:
  5348 ;;		_enable_PLL
  5349 ;;		_write_ZIGBEE_long
  5350 ;;		_write_ZIGBEE_short
  5351 ;; This function is called by:
  5352 ;;		_init_ZIGBEE_nonbeacon
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text24
  5357  002452                     __ptext24:
  5358                           	opt stack 0
  5359  002452                     _init_ZIGBEE_basic:
  5360                           	opt stack 18
  5361                           
  5362                           ;zigbee.c: 86: write_ZIGBEE_short(0x18, 0x98);
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;incstack = 0
  5366  002452  0E98               	movlw	152
  5367  002454  0100               	movlb	0	; () banked
  5368  002456  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5369  002458  0E18               	movlw	24
  5370  00245A  ECE8  F015         	call	_write_ZIGBEE_short
  5371                           
  5372                           ;zigbee.c: 87: write_ZIGBEE_short(0x2E, 0x95);
  5373  00245E  0E95               	movlw	149
  5374  002460  0100               	movlb	0	; () banked
  5375  002462  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5376  002464  0E2E               	movlw	46
  5377  002466  ECE8  F015         	call	_write_ZIGBEE_short
  5378                           
  5379                           ;zigbee.c: 88: write_ZIGBEE_long(0x201, 0x01);
  5380  00246A  0E02               	movlw	2
  5381  00246C  0100               	movlb	0	; () banked
  5382  00246E  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5383  002470  0E01               	movlw	1
  5384  002472  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5385  002474  0E01               	movlw	1
  5386  002476  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5387  002478  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5388                           
  5389                           ;zigbee.c: 89: enable_PLL();
  5390  00247C  ECC7  F016         	call	_enable_PLL	;wreg free
  5391                           
  5392                           ;zigbee.c: 90: write_ZIGBEE_long(0x206, 0x90);
  5393  002480  0E02               	movlw	2
  5394  002482  0100               	movlb	0	; () banked
  5395  002484  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5396  002486  0E06               	movlw	6
  5397  002488  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5398  00248A  0E90               	movlw	144
  5399  00248C  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5400  00248E  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5401                           
  5402                           ;zigbee.c: 91: write_ZIGBEE_long(0x207, 0x80);
  5403  002492  0E02               	movlw	2
  5404  002494  0100               	movlb	0	; () banked
  5405  002496  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5406  002498  0E07               	movlw	7
  5407  00249A  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5408  00249C  0E80               	movlw	128
  5409  00249E  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5410  0024A0  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5411                           
  5412                           ;zigbee.c: 92: write_ZIGBEE_long(0x208, 0x10);
  5413  0024A4  0E02               	movlw	2
  5414  0024A6  0100               	movlb	0	; () banked
  5415  0024A8  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5416  0024AA  0E08               	movlw	8
  5417  0024AC  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5418  0024AE  0E10               	movlw	16
  5419  0024B0  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5420  0024B2  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5421                           
  5422                           ;zigbee.c: 93: write_ZIGBEE_short(0x211,0X02);
  5423  0024B6  0E02               	movlw	2
  5424  0024B8  0100               	movlb	0	; () banked
  5425  0024BA  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5426  0024BC  0E11               	movlw	17
  5427  0024BE  ECE8  F015         	call	_write_ZIGBEE_short
  5428                           
  5429                           ;zigbee.c: 94: write_ZIGBEE_long(0x220, 0x21);
  5430  0024C2  0E02               	movlw	2
  5431  0024C4  0100               	movlb	0	; () banked
  5432  0024C6  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5433  0024C8  0E20               	movlw	32
  5434  0024CA  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5435  0024CC  0E21               	movlw	33
  5436  0024CE  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5437  0024D0  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5438                           
  5439                           ;zigbee.c: 95: write_ZIGBEE_long(0x22F, 0x0F);
  5440  0024D4  0E02               	movlw	2
  5441  0024D6  0100               	movlb	0	; () banked
  5442  0024D8  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5443  0024DA  0E2F               	movlw	47
  5444  0024DC  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5445  0024DE  0E0F               	movlw	15
  5446  0024E0  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5447  0024E2  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5448  0024E6  0012               	return		;funcret
  5449  0024E8                     __end_of_init_ZIGBEE_basic:
  5450                           	opt stack 0
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           indf1	equ	0xFE7
  5461                           postdec1	equ	0xFE5
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           indf2	equ	0xFDF
  5465                           fsr2h	equ	0xFDA
  5466                           fsr2l	equ	0xFD9
  5467                           status	equ	0xFD8
  5468                           
  5469 ;; *************** function _enable_PLL *****************
  5470 ;; Defined at:
  5471 ;;		line 99 in file "zigbee.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:   10
  5492 ;; This function calls:
  5493 ;;		_write_ZIGBEE_long
  5494 ;; This function is called by:
  5495 ;;		_init_ZIGBEE_basic
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text25
  5500  002D8E                     __ptext25:
  5501                           	opt stack 0
  5502  002D8E                     _enable_PLL:
  5503                           	opt stack 18
  5504                           
  5505                           ;zigbee.c: 100: write_ZIGBEE_long(0x202, 0x80);
  5506                           
  5507                           ;incstack = 0
  5508  002D8E  0E02               	movlw	2
  5509  002D90  0100               	movlb	0	; () banked
  5510  002D92  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5511  002D94  0E02               	movlw	2
  5512  002D96  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5513  002D98  0E80               	movlw	128
  5514  002D9A  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5515  002D9C  EC2C  F013         	call	_write_ZIGBEE_long	;wreg free
  5516  002DA0  0012               	return		;funcret
  5517  002DA2                     __end_of_enable_PLL:
  5518                           	opt stack 0
  5519                           tblptru	equ	0xFF8
  5520                           tblptrh	equ	0xFF7
  5521                           tblptrl	equ	0xFF6
  5522                           tablat	equ	0xFF5
  5523                           prodh	equ	0xFF4
  5524                           prodl	equ	0xFF3
  5525                           intcon	equ	0xFF2
  5526                           postinc0	equ	0xFEE
  5527                           wreg	equ	0xFE8
  5528                           indf1	equ	0xFE7
  5529                           postdec1	equ	0xFE5
  5530                           fsr1h	equ	0xFE2
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function _write_ZIGBEE_long *****************
  5538 ;; Defined at:
  5539 ;;		line 414 in file "zigbee.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  address         2   23[BANK0 ] unsigned int 
  5542 ;;  data_r          1   25[BANK0 ] unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  address_low     1   29[BANK0 ] unsigned char 
  5545 ;;  address_high    1   28[BANK0 ] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:        7 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    9
  5562 ;; This function calls:
  5563 ;;		_SPI_Write
  5564 ;; This function is called by:
  5565 ;;		_init_ZIGBEE_basic
  5566 ;;		_enable_PLL
  5567 ;;		_set_channel
  5568 ;;		_set_TX_power
  5569 ;;		_write_TX_normal_FIFO
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text26
  5574  002658                     __ptext26:
  5575                           	opt stack 0
  5576  002658                     _write_ZIGBEE_long:
  5577                           	opt stack 20
  5578                           
  5579                           ;zigbee.c: 415: unsigned char address_high = 0, address_low = 0;
  5580                           
  5581                           ;incstack = 0
  5582  002658  0E00               	movlw	0
  5583  00265A  0100               	movlb	0	; () banked
  5584  00265C  6FC4               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5585  00265E  0E00               	movlw	0
  5586  002660  6FC5               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;zigbee.c: 417: PORTCbits.RC0=0;
  5590  002662  9082               	bcf	3970,0,c	;volatile
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;zigbee.c: 418: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  5594  002664  C0BF  F0C2         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  5595  002668  C0C0  F0C3         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  5596  00266C  90D8               	bcf	status,0,c
  5597  00266E  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5598  002670  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5599  002672  90D8               	bcf	status,0,c
  5600  002674  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5601  002676  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5602  002678  90D8               	bcf	status,0,c
  5603  00267A  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5604  00267C  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5605  00267E  51C2               	movf	??_write_ZIGBEE_long& (0+255),w,b
  5606  002680  0B7F               	andlw	127
  5607  002682  0980               	iorlw	128
  5608  002684  6FC4               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;zigbee.c: 419: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  5612  002686  39BF               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  5613  002688  46E8               	rlncf	wreg,f,c
  5614  00268A  0BE0               	andlw	224
  5615  00268C  0BE0               	andlw	224
  5616  00268E  0910               	iorlw	16
  5617  002690  6FC5               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;zigbee.c: 420: SPI_Write(address_high);
  5621  002692  51C4               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  5622  002694  ECED  F016         	call	_SPI_Write
  5623                           
  5624                           ;zigbee.c: 421: SPI_Write(address_low);
  5625  002698  0100               	movlb	0	; () banked
  5626  00269A  51C5               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  5627  00269C  ECED  F016         	call	_SPI_Write
  5628                           
  5629                           ;zigbee.c: 422: SPI_Write(data_r);
  5630  0026A0  0100               	movlb	0	; () banked
  5631  0026A2  51C1               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  5632  0026A4  ECED  F016         	call	_SPI_Write
  5633                           
  5634                           ;zigbee.c: 423: PORTCbits.RC0=1;
  5635  0026A8  8082               	bsf	3970,0,c	;volatile
  5636  0026AA  0012               	return		;funcret
  5637  0026AC                     __end_of_write_ZIGBEE_long:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           indf1	equ	0xFE7
  5649                           postdec1	equ	0xFE5
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           indf2	equ	0xFDF
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function _enable_interrupt *****************
  5658 ;; Defined at:
  5659 ;;		line 167 in file "zigbee.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:   10
  5680 ;; This function calls:
  5681 ;;		_write_ZIGBEE_short
  5682 ;; This function is called by:
  5683 ;;		_init_ZIGBEE_nonbeacon
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text27
  5688  002E2E                     __ptext27:
  5689                           	opt stack 0
  5690  002E2E                     _enable_interrupt:
  5691                           	opt stack 19
  5692                           
  5693                           ;zigbee.c: 168: write_ZIGBEE_short(0x32, 0xF7);
  5694                           
  5695                           ;incstack = 0
  5696  002E2E  0EF7               	movlw	247
  5697  002E30  0100               	movlb	0	; () banked
  5698  002E32  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5699  002E34  0E32               	movlw	50
  5700  002E36  ECE8  F015         	call	_write_ZIGBEE_short
  5701  002E3A  0012               	return		;funcret
  5702  002E3C                     __end_of_enable_interrupt:
  5703                           	opt stack 0
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           postinc0	equ	0xFEE
  5712                           wreg	equ	0xFE8
  5713                           indf1	equ	0xFE7
  5714                           postdec1	equ	0xFE5
  5715                           fsr1h	equ	0xFE2
  5716                           fsr1l	equ	0xFE1
  5717                           indf2	equ	0xFDF
  5718                           fsr2h	equ	0xFDA
  5719                           fsr2l	equ	0xFD9
  5720                           status	equ	0xFD8
  5721                           
  5722 ;; *************** function _write_ZIGBEE_short *****************
  5723 ;; Defined at:
  5724 ;;		line 396 in file "zigbee.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  address         1    wreg     unsigned char 
  5727 ;;  data_r          1   23[BANK0 ] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  address         1   24[BANK0 ] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5739 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;Total ram usage:        2 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    9
  5746 ;; This function calls:
  5747 ;;		_SPI_Write
  5748 ;; This function is called by:
  5749 ;;		_RF_reset
  5750 ;;		_set_WAKE_from_pin
  5751 ;;		_set_long_address
  5752 ;;		_set_short_address
  5753 ;;		_set_PAN_ID
  5754 ;;		_init_ZIGBEE_basic
  5755 ;;		_set_CCA_mode
  5756 ;;		_set_RSSI_mode
  5757 ;;		_enable_interrupt
  5758 ;;		_nonbeacon_PAN_coordinator_device
  5759 ;;		_set_frame_format_filter
  5760 ;;		_set_reception_mode
  5761 ;;		_set_not_ACK
  5762 ;;		_set_not_encrypt
  5763 ;;		_start_transmit
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text28
  5768  002BD0                     __ptext28:
  5769                           	opt stack 0
  5770  002BD0                     _write_ZIGBEE_short:
  5771                           	opt stack 19
  5772                           
  5773                           ;incstack = 0
  5774                           ;write_ZIGBEE_short@address stored from wreg
  5775  002BD0  0100               	movlb	0	; () banked
  5776  002BD2  6FC0               	movwf	write_ZIGBEE_short@address& (0+255),b
  5777                           
  5778                           ;zigbee.c: 397: PORTCbits.RC0=0;
  5779  002BD4  9082               	bcf	3970,0,c	;volatile
  5780                           
  5781                           ;zigbee.c: 398: address = ((address << 1) & 0b01111111) | 0x01;
  5782  002BD6  0100               	movlb	0	; () banked
  5783  002BD8  51C0               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5784  002BDA  25C0               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  5785  002BDC  0B7F               	andlw	127
  5786  002BDE  0901               	iorlw	1
  5787  002BE0  6FC0               	movwf	write_ZIGBEE_short@address& (0+255),b
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;zigbee.c: 399: SPI_Write(address);
  5791  002BE2  51C0               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5792  002BE4  ECED  F016         	call	_SPI_Write
  5793                           
  5794                           ;zigbee.c: 400: SPI_Write(data_r);
  5795  002BE8  0100               	movlb	0	; () banked
  5796  002BEA  51BF               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  5797  002BEC  ECED  F016         	call	_SPI_Write
  5798                           
  5799                           ;zigbee.c: 401: PORTCbits.RC0=1;
  5800  002BF0  8082               	bsf	3970,0,c	;volatile
  5801  002BF2  0012               	return		;funcret
  5802  002BF4                     __end_of_write_ZIGBEE_short:
  5803                           	opt stack 0
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           postinc0	equ	0xFEE
  5812                           wreg	equ	0xFE8
  5813                           indf1	equ	0xFE7
  5814                           postdec1	equ	0xFE5
  5815                           fsr1h	equ	0xFE2
  5816                           fsr1l	equ	0xFE1
  5817                           indf2	equ	0xFDF
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _SPI_Write *****************
  5823 ;; Defined at:
  5824 ;;		line 457 in file "zigbee.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  command         1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  command         1   22[BANK0 ] unsigned char 
  5829 ;;  response        1   21[BANK0 ] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        2 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    8
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_write_ZIGBEE_short
  5850 ;;		_read_ZIGBEE_short
  5851 ;;		_write_ZIGBEE_long
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text29
  5856  002DDA                     __ptext29:
  5857                           	opt stack 0
  5858  002DDA                     _SPI_Write:
  5859                           	opt stack 20
  5860                           
  5861                           ;incstack = 0
  5862                           ;SPI_Write@command stored from wreg
  5863  002DDA  0100               	movlb	0	; () banked
  5864  002DDC  6FBE               	movwf	SPI_Write@command& (0+255),b
  5865                           
  5866                           ;zigbee.c: 458: unsigned char response;
  5867                           ;zigbee.c: 459: SSP1BUF = command;
  5868  002DDE  C0BE  FFC9         	movff	SPI_Write@command,4041	;volatile
  5869  002DE2  A0C7               	btfss	4039,0,c	;volatile
  5870  002DE4  D7FE               	goto	l530
  5871                           
  5872                           ;zigbee.c: 461: response = SSP1BUF;
  5873  002DE6  CFC9 F0BD          	movff	4041,SPI_Write@response	;volatile
  5874  002DEA  0012               	return		;funcret
  5875  002DEC                     __end_of_SPI_Write:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           intcon	equ	0xFF2
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           indf1	equ	0xFE7
  5887                           postdec1	equ	0xFE5
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           indf2	equ	0xFDF
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function ___lwtoft *****************
  5896 ;; Defined at:
  5897 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  c               2   29[BANK0 ] unsigned int 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  3   29[BANK0 ] float 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5911 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;Total ram usage:        3 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    9
  5918 ;; This function calls:
  5919 ;;		___ftpack
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text30
  5926  002B3A                     __ptext30:
  5927                           	opt stack 0
  5928  002B3A                     ___lwtoft:
  5929                           	opt stack 21
  5930                           
  5931                           ;incstack = 0
  5932  002B3A  C0C5  F0BD         	movff	___lwtoft@c,___ftpack@arg
  5933  002B3E  C0C6  F0BE         	movff	___lwtoft@c+1,___ftpack@arg+1
  5934  002B42  0100               	movlb	0	; () banked
  5935  002B44  6BBF               	clrf	(___ftpack@arg+2)& (0+255),b
  5936  002B46  0E8E               	movlw	142
  5937  002B48  6FC0               	movwf	___ftpack@exp& (0+255),b
  5938  002B4A  0E00               	movlw	0
  5939  002B4C  6FC1               	movwf	___ftpack@sign& (0+255),b
  5940  002B4E  ECD1  F011         	call	___ftpack	;wreg free
  5941  002B52  C0BD  F0C5         	movff	?___ftpack,?___lwtoft
  5942  002B56  C0BE  F0C6         	movff	?___ftpack+1,?___lwtoft+1
  5943  002B5A  C0BF  F0C7         	movff	?___ftpack+2,?___lwtoft+2
  5944  002B5E  0012               	return	
  5945  002B60                     __end_of___lwtoft:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           indf1	equ	0xFE7
  5957                           postdec1	equ	0xFE5
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function ___fttol *****************
  5966 ;; Defined at:
  5967 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  f1              3   21[BANK1 ] float 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  lval            4   31[BANK1 ] unsigned long 
  5972 ;;  exp1            1   35[BANK1 ] unsigned char 
  5973 ;;  sign1           1   30[BANK1 ] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  4   21[BANK1 ] long 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:       15 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    8
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_main
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text31
  5998  001E4A                     __ptext31:
  5999                           	opt stack 0
  6000  001E4A                     ___fttol:
  6001                           	opt stack 22
  6002                           
  6003                           ;incstack = 0
  6004  001E4A  C142  F144         	movff	___fttol@f1+2,??___fttol
  6005  001E4E  0101               	movlb	1	; () banked
  6006  001E50  6B45               	clrf	(??___fttol+1)& (0+255),b
  6007  001E52  6B46               	clrf	(??___fttol+2)& (0+255),b
  6008  001E54  3541               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6009  001E56  3744               	rlcf	??___fttol& (0+255),f,b
  6010  001E58  E301               	bnc	u5021
  6011  001E5A  8145               	bsf	(??___fttol+1)& (0+255),0,b
  6012  001E5C                     u5021:
  6013  001E5C  5144               	movf	??___fttol& (0+255),w,b
  6014  001E5E  6F4E               	movwf	___fttol@exp1& (0+255),b
  6015  001E60  514E               	movf	___fttol@exp1& (0+255),w,b
  6016  001E62  A4D8               	btfss	status,2,c
  6017  001E64  D009               	goto	l1245
  6018                           
  6019                           ; BSR set to: 1
  6020  001E66  0E00               	movlw	0
  6021  001E68  6F40               	movwf	?___fttol& (0+255),b
  6022  001E6A  0E00               	movlw	0
  6023  001E6C  6F41               	movwf	(?___fttol+1)& (0+255),b
  6024  001E6E  0E00               	movlw	0
  6025  001E70  6F42               	movwf	(?___fttol+2)& (0+255),b
  6026  001E72  0E00               	movlw	0
  6027  001E74  6F43               	movwf	(?___fttol+3)& (0+255),b
  6028                           
  6029                           ; BSR set to: 1
  6030  001E76  0012               	return	
  6031  001E78                     l1245:
  6032                           
  6033                           ; BSR set to: 1
  6034                           
  6035                           ; BSR set to: 1
  6036  001E78  0E17               	movlw	23
  6037  001E7A  6F44               	movwf	??___fttol& (0+255),b
  6038  001E7C  C140  F145         	movff	___fttol@f1,??___fttol+1
  6039  001E80  C141  F146         	movff	___fttol@f1+1,??___fttol+2
  6040  001E84  C142  F147         	movff	___fttol@f1+2,??___fttol+3
  6041  001E88  2944               	incf	??___fttol& (0+255),w,b
  6042  001E8A  6F48               	movwf	(??___fttol+4)& (0+255),b
  6043  001E8C  D004               	goto	u5040
  6044  001E8E                     u5045:
  6045  001E8E  90D8               	bcf	status,0,c
  6046  001E90  3347               	rrcf	(??___fttol+3)& (0+255),f,b
  6047  001E92  3346               	rrcf	(??___fttol+2)& (0+255),f,b
  6048  001E94  3345               	rrcf	(??___fttol+1)& (0+255),f,b
  6049  001E96                     u5040:
  6050  001E96  2F48               	decfsz	(??___fttol+4)& (0+255),f,b
  6051  001E98  D7FA               	goto	u5045
  6052  001E9A  0101               	movlb	1	; () banked
  6053  001E9C  5145               	movf	(??___fttol+1)& (0+255),w,b
  6054  001E9E  6F49               	movwf	___fttol@sign1& (0+255),b
  6055                           
  6056                           ; BSR set to: 1
  6057  001EA0  8F41               	bsf	(___fttol@f1+1)& (0+255),7,b
  6058                           
  6059                           ; BSR set to: 1
  6060  001EA2  0EFF               	movlw	255
  6061  001EA4  1740               	andwf	___fttol@f1& (0+255),f,b
  6062  001EA6  0EFF               	movlw	255
  6063  001EA8  1741               	andwf	(___fttol@f1+1)& (0+255),f,b
  6064  001EAA  0E00               	movlw	0
  6065  001EAC  1742               	andwf	(___fttol@f1+2)& (0+255),f,b
  6066                           
  6067                           ; BSR set to: 1
  6068  001EAE  5140               	movf	___fttol@f1& (0+255),w,b
  6069  001EB0  6F4A               	movwf	___fttol@lval& (0+255),b
  6070  001EB2  5141               	movf	(___fttol@f1+1)& (0+255),w,b
  6071  001EB4  6F4B               	movwf	(___fttol@lval+1)& (0+255),b
  6072  001EB6  5142               	movf	(___fttol@f1+2)& (0+255),w,b
  6073  001EB8  6F4C               	movwf	(___fttol@lval+2)& (0+255),b
  6074  001EBA  6B4D               	clrf	(___fttol@lval+3)& (0+255),b
  6075                           
  6076                           ; BSR set to: 1
  6077  001EBC  0E8E               	movlw	142
  6078  001EBE  5F4E               	subwf	___fttol@exp1& (0+255),f,b
  6079                           
  6080                           ; BSR set to: 1
  6081  001EC0  AF4E               	btfss	___fttol@exp1& (0+255),7,b
  6082  001EC2  D016               	goto	l1247
  6083                           
  6084                           ; BSR set to: 1
  6085  001EC4  514E               	movf	___fttol@exp1& (0+255),w,b
  6086  001EC6  0A80               	xorlw	128
  6087  001EC8  0F8F               	addlw	143
  6088  001ECA  B0D8               	btfsc	status,0,c
  6089  001ECC  D009               	goto	l1248
  6090                           
  6091                           ; BSR set to: 1
  6092  001ECE  0E00               	movlw	0
  6093  001ED0  6F40               	movwf	?___fttol& (0+255),b
  6094  001ED2  0E00               	movlw	0
  6095  001ED4  6F41               	movwf	(?___fttol+1)& (0+255),b
  6096  001ED6  0E00               	movlw	0
  6097  001ED8  6F42               	movwf	(?___fttol+2)& (0+255),b
  6098  001EDA  0E00               	movlw	0
  6099  001EDC  6F43               	movwf	(?___fttol+3)& (0+255),b
  6100                           
  6101                           ; BSR set to: 1
  6102  001EDE  0012               	return	
  6103  001EE0                     l1248:
  6104                           
  6105                           ; BSR set to: 1
  6106                           
  6107                           ; BSR set to: 1
  6108                           
  6109                           ; BSR set to: 1
  6110  001EE0  90D8               	bcf	status,0,c
  6111  001EE2  334D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6112  001EE4  334C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6113  001EE6  334B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6114  001EE8  334A               	rrcf	___fttol@lval& (0+255),f,b
  6115                           
  6116                           ; BSR set to: 1
  6117  001EEA  3F4E               	incfsz	___fttol@exp1& (0+255),f,b
  6118  001EEC  D7F9               	goto	l1248
  6119                           
  6120                           ; BSR set to: 1
  6121  001EEE  D015               	goto	u5080
  6122  001EF0                     l1247:
  6123                           
  6124                           ; BSR set to: 1
  6125                           
  6126                           ; BSR set to: 1
  6127  001EF0  0E17               	movlw	23
  6128  001EF2  654E               	cpfsgt	___fttol@exp1& (0+255),b
  6129  001EF4  D00F               	goto	l1253
  6130                           
  6131                           ; BSR set to: 1
  6132  001EF6  0E00               	movlw	0
  6133  001EF8  6F40               	movwf	?___fttol& (0+255),b
  6134  001EFA  0E00               	movlw	0
  6135  001EFC  6F41               	movwf	(?___fttol+1)& (0+255),b
  6136  001EFE  0E00               	movlw	0
  6137  001F00  6F42               	movwf	(?___fttol+2)& (0+255),b
  6138  001F02  0E00               	movlw	0
  6139  001F04  6F43               	movwf	(?___fttol+3)& (0+255),b
  6140                           
  6141                           ; BSR set to: 1
  6142  001F06  0012               	return	
  6143  001F08                     
  6144                           ; BSR set to: 1
  6145                           
  6146                           ; BSR set to: 1
  6147  001F08  90D8               	bcf	status,0,c
  6148  001F0A  374A               	rlcf	___fttol@lval& (0+255),f,b
  6149  001F0C  374B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6150  001F0E  374C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6151  001F10  374D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6152  001F12  074E               	decf	___fttol@exp1& (0+255),f,b
  6153  001F14                     l1253:
  6154                           
  6155                           ; BSR set to: 1
  6156                           
  6157                           ; BSR set to: 1
  6158  001F14  514E               	movf	___fttol@exp1& (0+255),w,b
  6159  001F16  A4D8               	btfss	status,2,c
  6160  001F18  D7F7               	goto	l1254
  6161  001F1A                     u5080:
  6162                           
  6163                           ; BSR set to: 1
  6164                           
  6165                           ; BSR set to: 1
  6166                           
  6167                           ; BSR set to: 1
  6168  001F1A  5149               	movf	___fttol@sign1& (0+255),w,b
  6169  001F1C  B4D8               	btfsc	status,2,c
  6170  001F1E  D008               	goto	l1256
  6171                           
  6172                           ; BSR set to: 1
  6173  001F20  1F4D               	comf	(___fttol@lval+3)& (0+255),f,b
  6174  001F22  1F4C               	comf	(___fttol@lval+2)& (0+255),f,b
  6175  001F24  1F4B               	comf	(___fttol@lval+1)& (0+255),f,b
  6176  001F26  6D4A               	negf	___fttol@lval& (0+255),b
  6177  001F28  0E00               	movlw	0
  6178  001F2A  234B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6179  001F2C  234C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6180  001F2E  234D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6181  001F30                     l1256:
  6182                           
  6183                           ; BSR set to: 1
  6184                           
  6185                           ; BSR set to: 1
  6186  001F30  C14A  F140         	movff	___fttol@lval,?___fttol
  6187  001F34  C14B  F141         	movff	___fttol@lval+1,?___fttol+1
  6188  001F38  C14C  F142         	movff	___fttol@lval+2,?___fttol+2
  6189  001F3C  C14D  F143         	movff	___fttol@lval+3,?___fttol+3
  6190  001F40  0012               	return	
  6191  001F42                     __end_of___fttol:
  6192                           	opt stack 0
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           intcon	equ	0xFF2
  6200                           postinc0	equ	0xFEE
  6201                           wreg	equ	0xFE8
  6202                           indf1	equ	0xFE7
  6203                           postdec1	equ	0xFE5
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           indf2	equ	0xFDF
  6207                           fsr2h	equ	0xFDA
  6208                           fsr2l	equ	0xFD9
  6209                           status	equ	0xFD8
  6210                           
  6211 ;; *************** function ___ftneg *****************
  6212 ;; Defined at:
  6213 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  f1              3   47[BANK0 ] float 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  3   47[BANK0 ] float 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6227 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;Total ram usage:        3 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    8
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text32
  6242  002B60                     __ptext32:
  6243                           	opt stack 0
  6244  002B60                     ___ftneg:
  6245                           	opt stack 22
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;incstack = 0
  6249  002B60  0100               	movlb	0	; () banked
  6250  002B62  51D7               	movf	___ftneg@f1& (0+255),w,b
  6251  002B64  11D8               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6252  002B66  11D9               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6253  002B68  B4D8               	btfsc	status,2,c
  6254  002B6A  D006               	goto	l1235
  6255                           
  6256                           ; BSR set to: 0
  6257  002B6C  0E00               	movlw	0
  6258  002B6E  1BD7               	xorwf	___ftneg@f1& (0+255),f,b
  6259  002B70  0E00               	movlw	0
  6260  002B72  1BD8               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6261  002B74  0E80               	movlw	128
  6262  002B76  1BD9               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6263  002B78                     l1235:
  6264                           
  6265                           ; BSR set to: 0
  6266  002B78  C0D7  F0D7         	movff	___ftneg@f1,?___ftneg
  6267  002B7C  C0D8  F0D8         	movff	___ftneg@f1+1,?___ftneg+1
  6268  002B80  C0D9  F0D9         	movff	___ftneg@f1+2,?___ftneg+2
  6269                           
  6270                           ; BSR set to: 0
  6271  002B84  0012               	return		;funcret
  6272  002B86                     __end_of___ftneg:
  6273                           	opt stack 0
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           postinc0	equ	0xFEE
  6282                           wreg	equ	0xFE8
  6283                           indf1	equ	0xFE7
  6284                           postdec1	equ	0xFE5
  6285                           fsr1h	equ	0xFE2
  6286                           fsr1l	equ	0xFE1
  6287                           indf2	equ	0xFDF
  6288                           fsr2h	equ	0xFDA
  6289                           fsr2l	equ	0xFD9
  6290                           status	equ	0xFD8
  6291                           
  6292 ;; *************** function ___ftmul *****************
  6293 ;; Defined at:
  6294 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  f1              3   32[BANK0 ] float 
  6297 ;;  f2              3   35[BANK0 ] float 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
  6300 ;;  sign            1   46[BANK0 ] unsigned char 
  6301 ;;  cntr            1   45[BANK0 ] unsigned char 
  6302 ;;  exp             1   41[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  3   32[BANK0 ] float 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:       15 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    9
  6319 ;; This function calls:
  6320 ;;		___ftpack
  6321 ;; This function is called by:
  6322 ;;		_main
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text33
  6327  001F42                     __ptext33:
  6328                           	opt stack 0
  6329  001F42                     ___ftmul:
  6330                           	opt stack 21
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;incstack = 0
  6334  001F42  C0CA  F0CE         	movff	___ftmul@f1+2,??___ftmul
  6335  001F46  0100               	movlb	0	; () banked
  6336  001F48  6BCF               	clrf	(??___ftmul+1)& (0+255),b
  6337  001F4A  6BD0               	clrf	(??___ftmul+2)& (0+255),b
  6338  001F4C  35C9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6339  001F4E  37CE               	rlcf	??___ftmul& (0+255),f,b
  6340  001F50  E301               	bnc	u3631
  6341  001F52  81CF               	bsf	(??___ftmul+1)& (0+255),0,b
  6342  001F54                     u3631:
  6343  001F54  51CE               	movf	??___ftmul& (0+255),w,b
  6344  001F56  6FD1               	movwf	___ftmul@exp& (0+255),b
  6345  001F58  51D1               	movf	___ftmul@exp& (0+255),w,b
  6346  001F5A  A4D8               	btfss	status,2,c
  6347  001F5C  D007               	goto	l1224
  6348                           
  6349                           ; BSR set to: 0
  6350  001F5E  0E00               	movlw	0
  6351  001F60  6FC8               	movwf	?___ftmul& (0+255),b
  6352  001F62  0E00               	movlw	0
  6353  001F64  6FC9               	movwf	(?___ftmul+1)& (0+255),b
  6354  001F66  0E00               	movlw	0
  6355  001F68  6FCA               	movwf	(?___ftmul+2)& (0+255),b
  6356                           
  6357                           ; BSR set to: 0
  6358  001F6A  0012               	return	
  6359  001F6C                     l1224:
  6360                           
  6361                           ; BSR set to: 0
  6362                           
  6363                           ; BSR set to: 0
  6364  001F6C  C0CD  F0CE         	movff	___ftmul@f2+2,??___ftmul
  6365  001F70  6BCF               	clrf	(??___ftmul+1)& (0+255),b
  6366  001F72  6BD0               	clrf	(??___ftmul+2)& (0+255),b
  6367  001F74  35CC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6368  001F76  37CE               	rlcf	??___ftmul& (0+255),f,b
  6369  001F78  E301               	bnc	u3651
  6370  001F7A  81CF               	bsf	(??___ftmul+1)& (0+255),0,b
  6371  001F7C                     u3651:
  6372  001F7C  51CE               	movf	??___ftmul& (0+255),w,b
  6373  001F7E  6FD6               	movwf	___ftmul@sign& (0+255),b
  6374  001F80  51D6               	movf	___ftmul@sign& (0+255),w,b
  6375  001F82  A4D8               	btfss	status,2,c
  6376  001F84  D007               	goto	l1226
  6377                           
  6378                           ; BSR set to: 0
  6379  001F86  0E00               	movlw	0
  6380  001F88  6FC8               	movwf	?___ftmul& (0+255),b
  6381  001F8A  0E00               	movlw	0
  6382  001F8C  6FC9               	movwf	(?___ftmul+1)& (0+255),b
  6383  001F8E  0E00               	movlw	0
  6384  001F90  6FCA               	movwf	(?___ftmul+2)& (0+255),b
  6385                           
  6386                           ; BSR set to: 0
  6387  001F92  0012               	return	
  6388  001F94                     l1226:
  6389                           
  6390                           ; BSR set to: 0
  6391                           
  6392                           ; BSR set to: 0
  6393  001F94  51D6               	movf	___ftmul@sign& (0+255),w,b
  6394  001F96  0F7B               	addlw	123
  6395  001F98  27D1               	addwf	___ftmul@exp& (0+255),f,b
  6396                           
  6397                           ; BSR set to: 0
  6398  001F9A  C0CA  F0D6         	movff	___ftmul@f1+2,___ftmul@sign
  6399  001F9E  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6400  001FA0  1BD6               	xorwf	___ftmul@sign& (0+255),f,b
  6401  001FA2  0E80               	movlw	128
  6402  001FA4  17D6               	andwf	___ftmul@sign& (0+255),f,b
  6403                           
  6404                           ; BSR set to: 0
  6405  001FA6  8FC9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6406                           
  6407                           ; BSR set to: 0
  6408  001FA8  8FCC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6409                           
  6410                           ; BSR set to: 0
  6411  001FAA  0EFF               	movlw	255
  6412  001FAC  17CB               	andwf	___ftmul@f2& (0+255),f,b
  6413  001FAE  0EFF               	movlw	255
  6414  001FB0  17CC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6415  001FB2  0E00               	movlw	0
  6416  001FB4  17CD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6417                           
  6418                           ; BSR set to: 0
  6419  001FB6  0E00               	movlw	0
  6420  001FB8  6FD2               	movwf	___ftmul@f3_as_product& (0+255),b
  6421  001FBA  0E00               	movlw	0
  6422  001FBC  6FD3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6423  001FBE  0E00               	movlw	0
  6424  001FC0  6FD4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6425                           
  6426                           ; BSR set to: 0
  6427  001FC2  0E07               	movlw	7
  6428  001FC4  6FD5               	movwf	___ftmul@cntr& (0+255),b
  6429  001FC6                     
  6430                           ; BSR set to: 0
  6431                           
  6432                           ; BSR set to: 0
  6433  001FC6  A1C8               	btfss	___ftmul@f1& (0+255),0,b
  6434  001FC8  D006               	goto	l1228
  6435                           
  6436                           ; BSR set to: 0
  6437  001FCA  51CB               	movf	___ftmul@f2& (0+255),w,b
  6438  001FCC  27D2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6439  001FCE  51CC               	movf	(___ftmul@f2+1)& (0+255),w,b
  6440  001FD0  23D3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6441  001FD2  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6442  001FD4  23D4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6443  001FD6                     l1228:
  6444                           
  6445                           ; BSR set to: 0
  6446                           
  6447                           ; BSR set to: 0
  6448  001FD6  90D8               	bcf	status,0,c
  6449  001FD8  33CA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6450  001FDA  33C9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6451  001FDC  33C8               	rrcf	___ftmul@f1& (0+255),f,b
  6452  001FDE  90D8               	bcf	status,0,c
  6453  001FE0  37CB               	rlcf	___ftmul@f2& (0+255),f,b
  6454  001FE2  37CC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6455  001FE4  37CD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6456                           
  6457                           ; BSR set to: 0
  6458  001FE6  2FD5               	decfsz	___ftmul@cntr& (0+255),f,b
  6459  001FE8  D7EE               	goto	l1227
  6460                           
  6461                           ; BSR set to: 0
  6462                           
  6463                           ; BSR set to: 0
  6464  001FEA  0E09               	movlw	9
  6465  001FEC  6FD5               	movwf	___ftmul@cntr& (0+255),b
  6466  001FEE                     
  6467                           ; BSR set to: 0
  6468                           
  6469                           ; BSR set to: 0
  6470  001FEE  A1C8               	btfss	___ftmul@f1& (0+255),0,b
  6471  001FF0  D006               	goto	l1231
  6472                           
  6473                           ; BSR set to: 0
  6474  001FF2  51CB               	movf	___ftmul@f2& (0+255),w,b
  6475  001FF4  27D2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6476  001FF6  51CC               	movf	(___ftmul@f2+1)& (0+255),w,b
  6477  001FF8  23D3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6478  001FFA  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6479  001FFC  23D4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6480  001FFE                     l1231:
  6481                           
  6482                           ; BSR set to: 0
  6483                           
  6484                           ; BSR set to: 0
  6485  001FFE  90D8               	bcf	status,0,c
  6486  002000  33CA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6487  002002  33C9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6488  002004  33C8               	rrcf	___ftmul@f1& (0+255),f,b
  6489  002006  90D8               	bcf	status,0,c
  6490  002008  33D4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6491  00200A  33D3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6492  00200C  33D2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6493                           
  6494                           ; BSR set to: 0
  6495  00200E  2FD5               	decfsz	___ftmul@cntr& (0+255),f,b
  6496  002010  D7EE               	goto	l1230
  6497                           
  6498                           ; BSR set to: 0
  6499                           
  6500                           ; BSR set to: 0
  6501  002012  C0D2  F0BD         	movff	___ftmul@f3_as_product,___ftpack@arg
  6502  002016  C0D3  F0BE         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6503  00201A  C0D4  F0BF         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6504  00201E  C0D1  F0C0         	movff	___ftmul@exp,___ftpack@exp
  6505  002022  C0D6  F0C1         	movff	___ftmul@sign,___ftpack@sign
  6506  002026  ECD1  F011         	call	___ftpack	;wreg free
  6507  00202A  C0BD  F0C8         	movff	?___ftpack,?___ftmul
  6508  00202E  C0BE  F0C9         	movff	?___ftpack+1,?___ftmul+1
  6509  002032  C0BF  F0CA         	movff	?___ftpack+2,?___ftmul+2
  6510  002036  0012               	return	
  6511  002038                     __end_of___ftmul:
  6512                           	opt stack 0
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           prodh	equ	0xFF4
  6518                           prodl	equ	0xFF3
  6519                           intcon	equ	0xFF2
  6520                           postinc0	equ	0xFEE
  6521                           wreg	equ	0xFE8
  6522                           indf1	equ	0xFE7
  6523                           postdec1	equ	0xFE5
  6524                           fsr1h	equ	0xFE2
  6525                           fsr1l	equ	0xFE1
  6526                           indf2	equ	0xFDF
  6527                           fsr2h	equ	0xFDA
  6528                           fsr2l	equ	0xFD9
  6529                           status	equ	0xFD8
  6530                           
  6531 ;; *************** function ___ftdiv *****************
  6532 ;; Defined at:
  6533 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  f1              3    6[BANK1 ] float 
  6536 ;;  f2              3    9[BANK1 ] float 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  f3              3   16[BANK1 ] float 
  6539 ;;  sign            1   20[BANK1 ] unsigned char 
  6540 ;;  exp             1   19[BANK1 ] unsigned char 
  6541 ;;  cntr            1   15[BANK1 ] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  3    6[BANK1 ] float 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6551 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;Total ram usage:       15 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    9
  6558 ;; This function calls:
  6559 ;;		___ftpack
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text34
  6566  002126                     __ptext34:
  6567                           	opt stack 0
  6568  002126                     ___ftdiv:
  6569                           	opt stack 21
  6570                           
  6571                           ;incstack = 0
  6572  002126  C133  F137         	movff	___ftdiv@f1+2,??___ftdiv
  6573  00212A  0101               	movlb	1	; () banked
  6574  00212C  6B38               	clrf	(??___ftdiv+1)& (0+255),b
  6575  00212E  6B39               	clrf	(??___ftdiv+2)& (0+255),b
  6576  002130  3532               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  6577  002132  3737               	rlcf	??___ftdiv& (0+255),f,b
  6578  002134  E301               	bnc	u3581
  6579  002136  8138               	bsf	(??___ftdiv+1)& (0+255),0,b
  6580  002138                     u3581:
  6581  002138  5137               	movf	??___ftdiv& (0+255),w,b
  6582  00213A  6F3E               	movwf	___ftdiv@exp& (0+255),b
  6583  00213C  513E               	movf	___ftdiv@exp& (0+255),w,b
  6584  00213E  A4D8               	btfss	status,2,c
  6585  002140  D007               	goto	l1209
  6586                           
  6587                           ; BSR set to: 1
  6588  002142  0E00               	movlw	0
  6589  002144  6F31               	movwf	?___ftdiv& (0+255),b
  6590  002146  0E00               	movlw	0
  6591  002148  6F32               	movwf	(?___ftdiv+1)& (0+255),b
  6592  00214A  0E00               	movlw	0
  6593  00214C  6F33               	movwf	(?___ftdiv+2)& (0+255),b
  6594                           
  6595                           ; BSR set to: 1
  6596  00214E  0012               	return	
  6597  002150                     l1209:
  6598                           
  6599                           ; BSR set to: 1
  6600                           
  6601                           ; BSR set to: 1
  6602  002150  C136  F137         	movff	___ftdiv@f2+2,??___ftdiv
  6603  002154  6B38               	clrf	(??___ftdiv+1)& (0+255),b
  6604  002156  6B39               	clrf	(??___ftdiv+2)& (0+255),b
  6605  002158  3535               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  6606  00215A  3737               	rlcf	??___ftdiv& (0+255),f,b
  6607  00215C  E301               	bnc	u3601
  6608  00215E  8138               	bsf	(??___ftdiv+1)& (0+255),0,b
  6609  002160                     u3601:
  6610  002160  5137               	movf	??___ftdiv& (0+255),w,b
  6611  002162  6F3F               	movwf	___ftdiv@sign& (0+255),b
  6612  002164  513F               	movf	___ftdiv@sign& (0+255),w,b
  6613  002166  A4D8               	btfss	status,2,c
  6614  002168  D007               	goto	l1211
  6615                           
  6616                           ; BSR set to: 1
  6617  00216A  0E00               	movlw	0
  6618  00216C  6F31               	movwf	?___ftdiv& (0+255),b
  6619  00216E  0E00               	movlw	0
  6620  002170  6F32               	movwf	(?___ftdiv+1)& (0+255),b
  6621  002172  0E00               	movlw	0
  6622  002174  6F33               	movwf	(?___ftdiv+2)& (0+255),b
  6623                           
  6624                           ; BSR set to: 1
  6625  002176  0012               	return	
  6626  002178                     l1211:
  6627                           
  6628                           ; BSR set to: 1
  6629                           
  6630                           ; BSR set to: 1
  6631  002178  0E00               	movlw	0
  6632  00217A  6F3B               	movwf	___ftdiv@f3& (0+255),b
  6633  00217C  0E00               	movlw	0
  6634  00217E  6F3C               	movwf	(___ftdiv@f3+1)& (0+255),b
  6635  002180  0E00               	movlw	0
  6636  002182  6F3D               	movwf	(___ftdiv@f3+2)& (0+255),b
  6637                           
  6638                           ; BSR set to: 1
  6639  002184  513F               	movf	___ftdiv@sign& (0+255),w,b
  6640  002186  0F89               	addlw	137
  6641  002188  5F3E               	subwf	___ftdiv@exp& (0+255),f,b
  6642                           
  6643                           ; BSR set to: 1
  6644  00218A  C133  F13F         	movff	___ftdiv@f1+2,___ftdiv@sign
  6645                           
  6646                           ; BSR set to: 1
  6647  00218E  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6648  002190  1B3F               	xorwf	___ftdiv@sign& (0+255),f,b
  6649                           
  6650                           ; BSR set to: 1
  6651  002192  0E80               	movlw	128
  6652  002194  173F               	andwf	___ftdiv@sign& (0+255),f,b
  6653                           
  6654                           ; BSR set to: 1
  6655  002196  8F32               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  6656                           
  6657                           ; BSR set to: 1
  6658  002198  0EFF               	movlw	255
  6659  00219A  1731               	andwf	___ftdiv@f1& (0+255),f,b
  6660  00219C  0EFF               	movlw	255
  6661  00219E  1732               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  6662  0021A0  0E00               	movlw	0
  6663  0021A2  1733               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  6664                           
  6665                           ; BSR set to: 1
  6666  0021A4  8F35               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  6667                           
  6668                           ; BSR set to: 1
  6669  0021A6  0EFF               	movlw	255
  6670  0021A8  1734               	andwf	___ftdiv@f2& (0+255),f,b
  6671  0021AA  0EFF               	movlw	255
  6672  0021AC  1735               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  6673  0021AE  0E00               	movlw	0
  6674  0021B0  1736               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  6675                           
  6676                           ; BSR set to: 1
  6677  0021B2  0E18               	movlw	24
  6678  0021B4  6F3A               	movwf	___ftdiv@cntr& (0+255),b
  6679  0021B6                     
  6680                           ; BSR set to: 1
  6681                           
  6682                           ; BSR set to: 1
  6683  0021B6  90D8               	bcf	status,0,c
  6684  0021B8  373B               	rlcf	___ftdiv@f3& (0+255),f,b
  6685  0021BA  373C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6686  0021BC  373D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6687                           
  6688                           ; BSR set to: 1
  6689  0021BE  5134               	movf	___ftdiv@f2& (0+255),w,b
  6690  0021C0  5D31               	subwf	___ftdiv@f1& (0+255),w,b
  6691  0021C2  5135               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6692  0021C4  5932               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6693  0021C6  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6694  0021C8  5933               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6695  0021CA  A0D8               	btfss	status,0,c
  6696  0021CC  D007               	goto	l1213
  6697                           
  6698                           ; BSR set to: 1
  6699  0021CE  5134               	movf	___ftdiv@f2& (0+255),w,b
  6700  0021D0  5F31               	subwf	___ftdiv@f1& (0+255),f,b
  6701  0021D2  5135               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6702  0021D4  5B32               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6703  0021D6  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6704  0021D8  5B33               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 1
  6707  0021DA  813B               	bsf	___ftdiv@f3& (0+255),0,b
  6708  0021DC                     l1213:
  6709                           
  6710                           ; BSR set to: 1
  6711  0021DC  90D8               	bcf	status,0,c
  6712  0021DE  3731               	rlcf	___ftdiv@f1& (0+255),f,b
  6713  0021E0  3732               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6714  0021E2  3733               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6715                           
  6716                           ; BSR set to: 1
  6717  0021E4  2F3A               	decfsz	___ftdiv@cntr& (0+255),f,b
  6718  0021E6  D7E7               	goto	l1212
  6719                           
  6720                           ; BSR set to: 1
  6721                           
  6722                           ; BSR set to: 1
  6723  0021E8  C13B  F0BD         	movff	___ftdiv@f3,___ftpack@arg
  6724  0021EC  C13C  F0BE         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6725  0021F0  C13D  F0BF         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6726  0021F4  C13E  F0C0         	movff	___ftdiv@exp,___ftpack@exp
  6727  0021F8  C13F  F0C1         	movff	___ftdiv@sign,___ftpack@sign
  6728  0021FC  ECD1  F011         	call	___ftpack	;wreg free
  6729  002200  C0BD  F131         	movff	?___ftpack,?___ftdiv
  6730  002204  C0BE  F132         	movff	?___ftpack+1,?___ftdiv+1
  6731  002208  C0BF  F133         	movff	?___ftpack+2,?___ftdiv+2
  6732  00220C  0012               	return	
  6733  00220E                     __end_of___ftdiv:
  6734                           	opt stack 0
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           postinc0	equ	0xFEE
  6743                           wreg	equ	0xFE8
  6744                           indf1	equ	0xFE7
  6745                           postdec1	equ	0xFE5
  6746                           fsr1h	equ	0xFE2
  6747                           fsr1l	equ	0xFE1
  6748                           indf2	equ	0xFDF
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8
  6752                           
  6753 ;; *************** function ___ftadd *****************
  6754 ;; Defined at:
  6755 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  f1              3   50[BANK0 ] float 
  6758 ;;  f2              3   53[BANK0 ] float 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  exp1            1    5[BANK1 ] unsigned char 
  6761 ;;  exp2            1    4[BANK1 ] unsigned char 
  6762 ;;  sign            1    3[BANK1 ] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  3   50[BANK0 ] float 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6772 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;Total ram usage:       12 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    9
  6779 ;; This function calls:
  6780 ;;		___ftpack
  6781 ;; This function is called by:
  6782 ;;		_main
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text35
  6787  001940                     __ptext35:
  6788                           	opt stack 0
  6789  001940                     ___ftadd:
  6790                           	opt stack 21
  6791                           
  6792                           ;incstack = 0
  6793  001940  C0DC  F12B         	movff	___ftadd@f1+2,??___ftadd
  6794  001944  0101               	movlb	1	; () banked
  6795  001946  6B2C               	clrf	(??___ftadd+1)& (0+255),b
  6796  001948  6B2D               	clrf	(??___ftadd+2)& (0+255),b
  6797  00194A  0100               	movlb	0	; () banked
  6798  00194C  35DB               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6799  00194E  0101               	movlb	1	; () banked
  6800  001950  372B               	rlcf	??___ftadd& (0+255),f,b
  6801  001952  E301               	bnc	u3371
  6802  001954  812C               	bsf	(??___ftadd+1)& (0+255),0,b
  6803  001956                     u3371:
  6804  001956  512B               	movf	??___ftadd& (0+255),w,b
  6805  001958  6F30               	movwf	___ftadd@exp1& (0+255),b
  6806  00195A  C0DF  F12B         	movff	___ftadd@f2+2,??___ftadd
  6807  00195E  6B2C               	clrf	(??___ftadd+1)& (0+255),b
  6808  001960  6B2D               	clrf	(??___ftadd+2)& (0+255),b
  6809  001962  0100               	movlb	0	; () banked
  6810  001964  35DE               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6811  001966  0101               	movlb	1	; () banked
  6812  001968  372B               	rlcf	??___ftadd& (0+255),f,b
  6813  00196A  E301               	bnc	u3381
  6814  00196C  812C               	bsf	(??___ftadd+1)& (0+255),0,b
  6815  00196E                     u3381:
  6816  00196E  512B               	movf	??___ftadd& (0+255),w,b
  6817  001970  6F2F               	movwf	___ftadd@exp2& (0+255),b
  6818                           
  6819                           ; BSR set to: 1
  6820  001972  5130               	movf	___ftadd@exp1& (0+255),w,b
  6821  001974  B4D8               	btfsc	status,2,c
  6822  001976  D00B               	goto	u3410
  6823                           
  6824                           ; BSR set to: 1
  6825  001978  512F               	movf	___ftadd@exp2& (0+255),w,b
  6826  00197A  5D30               	subwf	___ftadd@exp1& (0+255),w,b
  6827  00197C  B0D8               	btfsc	status,0,c
  6828  00197E  D00E               	goto	l1176
  6829                           
  6830                           ; BSR set to: 1
  6831  001980  5130               	movf	___ftadd@exp1& (0+255),w,b
  6832  001982  0800               	sublw	0
  6833  001984  252F               	addwf	___ftadd@exp2& (0+255),w,b
  6834  001986  6F2B               	movwf	??___ftadd& (0+255),b
  6835  001988  0E18               	movlw	24
  6836  00198A  652B               	cpfsgt	??___ftadd& (0+255),b
  6837  00198C  D007               	goto	l1176
  6838  00198E                     u3410:
  6839                           
  6840                           ; BSR set to: 1
  6841  00198E  C0DD  F0DA         	movff	___ftadd@f2,?___ftadd
  6842  001992  C0DE  F0DB         	movff	___ftadd@f2+1,?___ftadd+1
  6843  001996  C0DF  F0DC         	movff	___ftadd@f2+2,?___ftadd+2
  6844  00199A  0012               	return	
  6845  00199C                     l1176:
  6846                           
  6847                           ; BSR set to: 1
  6848                           
  6849                           ; BSR set to: 1
  6850  00199C  512F               	movf	___ftadd@exp2& (0+255),w,b
  6851  00199E  B4D8               	btfsc	status,2,c
  6852  0019A0  D00B               	goto	u3440
  6853                           
  6854                           ; BSR set to: 1
  6855  0019A2  5130               	movf	___ftadd@exp1& (0+255),w,b
  6856  0019A4  5D2F               	subwf	___ftadd@exp2& (0+255),w,b
  6857  0019A6  B0D8               	btfsc	status,0,c
  6858  0019A8  D00E               	goto	l1180
  6859                           
  6860                           ; BSR set to: 1
  6861  0019AA  512F               	movf	___ftadd@exp2& (0+255),w,b
  6862  0019AC  0800               	sublw	0
  6863  0019AE  2530               	addwf	___ftadd@exp1& (0+255),w,b
  6864  0019B0  6F2B               	movwf	??___ftadd& (0+255),b
  6865  0019B2  0E18               	movlw	24
  6866  0019B4  652B               	cpfsgt	??___ftadd& (0+255),b
  6867  0019B6  D007               	goto	l1180
  6868  0019B8                     u3440:
  6869                           
  6870                           ; BSR set to: 1
  6871  0019B8  C0DA  F0DA         	movff	___ftadd@f1,?___ftadd
  6872  0019BC  C0DB  F0DB         	movff	___ftadd@f1+1,?___ftadd+1
  6873  0019C0  C0DC  F0DC         	movff	___ftadd@f1+2,?___ftadd+2
  6874  0019C4  0012               	return	
  6875  0019C6                     l1180:
  6876                           
  6877                           ; BSR set to: 1
  6878                           
  6879                           ; BSR set to: 1
  6880  0019C6  0E06               	movlw	6
  6881  0019C8  6F2E               	movwf	___ftadd@sign& (0+255),b
  6882                           
  6883                           ; BSR set to: 1
  6884  0019CA  0100               	movlb	0	; () banked
  6885  0019CC  AFDC               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6886  0019CE  D002               	goto	l1183
  6887                           
  6888                           ; BSR set to: 0
  6889  0019D0  0101               	movlb	1	; () banked
  6890  0019D2  8F2E               	bsf	___ftadd@sign& (0+255),7,b
  6891  0019D4                     l1183:
  6892                           
  6893                           ; BSR set to: 1
  6894  0019D4  0100               	movlb	0	; () banked
  6895  0019D6  AFDF               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6896  0019D8  D002               	goto	l1184
  6897                           
  6898                           ; BSR set to: 0
  6899  0019DA  0101               	movlb	1	; () banked
  6900  0019DC  8D2E               	bsf	___ftadd@sign& (0+255),6,b
  6901  0019DE                     l1184:
  6902  0019DE  0100               	movlb	0	; () banked
  6903  0019E0  8FDB               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6904                           
  6905                           ; BSR set to: 0
  6906  0019E2  0EFF               	movlw	255
  6907  0019E4  17DA               	andwf	___ftadd@f1& (0+255),f,b
  6908  0019E6  0EFF               	movlw	255
  6909  0019E8  17DB               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6910  0019EA  0E00               	movlw	0
  6911  0019EC  17DC               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6912  0019EE  8FDE               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6913                           
  6914                           ; BSR set to: 0
  6915  0019F0  0EFF               	movlw	255
  6916  0019F2  17DD               	andwf	___ftadd@f2& (0+255),f,b
  6917  0019F4  0EFF               	movlw	255
  6918  0019F6  17DE               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6919  0019F8  0E00               	movlw	0
  6920  0019FA  17DF               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6921                           
  6922                           ; BSR set to: 0
  6923  0019FC  0101               	movlb	1	; () banked
  6924  0019FE  512F               	movf	___ftadd@exp2& (0+255),w,b
  6925  001A00  5D30               	subwf	___ftadd@exp1& (0+255),w,b
  6926  001A02  B0D8               	btfsc	status,0,c
  6927  001A04  D01F               	goto	l1185
  6928  001A06                     u3470:
  6929                           
  6930                           ; BSR set to: 1
  6931                           
  6932                           ; BSR set to: 1
  6933  001A06  0100               	movlb	0	; () banked
  6934  001A08  90D8               	bcf	status,0,c
  6935  001A0A  37DD               	rlcf	___ftadd@f2& (0+255),f,b
  6936  001A0C  37DE               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6937  001A0E  37DF               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6938  001A10  0101               	movlb	1	; () banked
  6939  001A12  072F               	decf	___ftadd@exp2& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 1
  6942  001A14  5130               	movf	___ftadd@exp1& (0+255),w,b
  6943  001A16  192F               	xorwf	___ftadd@exp2& (0+255),w,b
  6944  001A18  B4D8               	btfsc	status,2,c
  6945  001A1A  D00F               	goto	l1190
  6946                           
  6947                           ; BSR set to: 1
  6948  001A1C  072E               	decf	___ftadd@sign& (0+255),f,b
  6949  001A1E  C12E  F12B         	movff	___ftadd@sign,??___ftadd
  6950  001A22  0E07               	movlw	7
  6951  001A24  172B               	andwf	??___ftadd& (0+255),f,b
  6952  001A26  B4D8               	btfsc	status,2,c
  6953  001A28  D008               	goto	l1190
  6954  001A2A  D7ED               	goto	u3470
  6955  001A2C                     
  6956                           ; BSR set to: 1
  6957                           
  6958                           ; BSR set to: 1
  6959  001A2C  0100               	movlb	0	; () banked
  6960  001A2E  90D8               	bcf	status,0,c
  6961  001A30  33DC               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6962  001A32  33DB               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6963  001A34  33DA               	rrcf	___ftadd@f1& (0+255),f,b
  6964  001A36  0101               	movlb	1	; () banked
  6965  001A38  2B30               	incf	___ftadd@exp1& (0+255),f,b
  6966  001A3A                     l1190:
  6967                           
  6968                           ; BSR set to: 1
  6969                           
  6970                           ; BSR set to: 1
  6971  001A3A  512F               	movf	___ftadd@exp2& (0+255),w,b
  6972  001A3C  1930               	xorwf	___ftadd@exp1& (0+255),w,b
  6973  001A3E  B4D8               	btfsc	status,2,c
  6974  001A40  D023               	goto	u3540
  6975  001A42  D7F4               	goto	l1191
  6976  001A44                     l1185:
  6977                           
  6978                           ; BSR set to: 1
  6979                           
  6980                           ; BSR set to: 1
  6981  001A44  5130               	movf	___ftadd@exp1& (0+255),w,b
  6982  001A46  5D2F               	subwf	___ftadd@exp2& (0+255),w,b
  6983  001A48  B0D8               	btfsc	status,0,c
  6984  001A4A  D01E               	goto	u3540
  6985  001A4C                     u3510:
  6986                           
  6987                           ; BSR set to: 1
  6988                           
  6989                           ; BSR set to: 1
  6990  001A4C  0100               	movlb	0	; () banked
  6991  001A4E  90D8               	bcf	status,0,c
  6992  001A50  37DA               	rlcf	___ftadd@f1& (0+255),f,b
  6993  001A52  37DB               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6994  001A54  37DC               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6995  001A56  0101               	movlb	1	; () banked
  6996  001A58  0730               	decf	___ftadd@exp1& (0+255),f,b
  6997                           
  6998                           ; BSR set to: 1
  6999  001A5A  5130               	movf	___ftadd@exp1& (0+255),w,b
  7000  001A5C  192F               	xorwf	___ftadd@exp2& (0+255),w,b
  7001  001A5E  B4D8               	btfsc	status,2,c
  7002  001A60  D00F               	goto	l1199
  7003                           
  7004                           ; BSR set to: 1
  7005  001A62  072E               	decf	___ftadd@sign& (0+255),f,b
  7006  001A64  C12E  F12B         	movff	___ftadd@sign,??___ftadd
  7007  001A68  0E07               	movlw	7
  7008  001A6A  172B               	andwf	??___ftadd& (0+255),f,b
  7009  001A6C  B4D8               	btfsc	status,2,c
  7010  001A6E  D008               	goto	l1199
  7011  001A70  D7ED               	goto	u3510
  7012  001A72                     
  7013                           ; BSR set to: 1
  7014                           
  7015                           ; BSR set to: 1
  7016  001A72  0100               	movlb	0	; () banked
  7017  001A74  90D8               	bcf	status,0,c
  7018  001A76  33DF               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7019  001A78  33DE               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7020  001A7A  33DD               	rrcf	___ftadd@f2& (0+255),f,b
  7021  001A7C  0101               	movlb	1	; () banked
  7022  001A7E  2B2F               	incf	___ftadd@exp2& (0+255),f,b
  7023  001A80                     l1199:
  7024                           
  7025                           ; BSR set to: 1
  7026                           
  7027                           ; BSR set to: 1
  7028  001A80  512F               	movf	___ftadd@exp2& (0+255),w,b
  7029  001A82  1930               	xorwf	___ftadd@exp1& (0+255),w,b
  7030  001A84  A4D8               	btfss	status,2,c
  7031  001A86  D7F5               	goto	l1200
  7032  001A88                     u3540:
  7033                           
  7034                           ; BSR set to: 1
  7035                           
  7036                           ; BSR set to: 1
  7037                           
  7038                           ; BSR set to: 1
  7039  001A88  AF2E               	btfss	___ftadd@sign& (0+255),7,b
  7040  001A8A  D00D               	goto	l1202
  7041                           
  7042                           ; BSR set to: 1
  7043  001A8C  0EFF               	movlw	255
  7044  001A8E  0100               	movlb	0	; () banked
  7045  001A90  1BDA               	xorwf	___ftadd@f1& (0+255),f,b
  7046  001A92  0EFF               	movlw	255
  7047  001A94  1BDB               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7048  001A96  0EFF               	movlw	255
  7049  001A98  1BDC               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7050  001A9A  0E01               	movlw	1
  7051  001A9C  27DA               	addwf	___ftadd@f1& (0+255),f,b
  7052  001A9E  0E00               	movlw	0
  7053  001AA0  23DB               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7054  001AA2  0E00               	movlw	0
  7055  001AA4  23DC               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7056  001AA6                     l1202:
  7057  001AA6  0101               	movlb	1	; () banked
  7058  001AA8  AD2E               	btfss	___ftadd@sign& (0+255),6,b
  7059  001AAA  D00D               	goto	l1203
  7060                           
  7061                           ; BSR set to: 1
  7062  001AAC  0EFF               	movlw	255
  7063  001AAE  0100               	movlb	0	; () banked
  7064  001AB0  1BDD               	xorwf	___ftadd@f2& (0+255),f,b
  7065  001AB2  0EFF               	movlw	255
  7066  001AB4  1BDE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7067  001AB6  0EFF               	movlw	255
  7068  001AB8  1BDF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7069  001ABA  0E01               	movlw	1
  7070  001ABC  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7071  001ABE  0E00               	movlw	0
  7072  001AC0  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7073  001AC2  0E00               	movlw	0
  7074  001AC4  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7075  001AC6                     l1203:
  7076                           
  7077                           ; BSR set to: 0
  7078  001AC6  0E00               	movlw	0
  7079  001AC8  0101               	movlb	1	; () banked
  7080  001ACA  6F2E               	movwf	___ftadd@sign& (0+255),b
  7081                           
  7082                           ; BSR set to: 1
  7083  001ACC  0100               	movlb	0	; () banked
  7084  001ACE  51DA               	movf	___ftadd@f1& (0+255),w,b
  7085  001AD0  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7086  001AD2  51DB               	movf	(___ftadd@f1+1)& (0+255),w,b
  7087  001AD4  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7088  001AD6  51DC               	movf	(___ftadd@f1+2)& (0+255),w,b
  7089  001AD8  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7090                           
  7091                           ; BSR set to: 0
  7092  001ADA  AFDF               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7093  001ADC  D00F               	goto	l1204
  7094                           
  7095                           ; BSR set to: 0
  7096  001ADE  0EFF               	movlw	255
  7097  001AE0  1BDD               	xorwf	___ftadd@f2& (0+255),f,b
  7098  001AE2  0EFF               	movlw	255
  7099  001AE4  1BDE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7100  001AE6  0EFF               	movlw	255
  7101  001AE8  1BDF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7102  001AEA  0E01               	movlw	1
  7103  001AEC  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7104  001AEE  0E00               	movlw	0
  7105  001AF0  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7106  001AF2  0E00               	movlw	0
  7107  001AF4  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7108                           
  7109                           ; BSR set to: 0
  7110  001AF6  0E01               	movlw	1
  7111  001AF8  0101               	movlb	1	; () banked
  7112  001AFA  6F2E               	movwf	___ftadd@sign& (0+255),b
  7113  001AFC                     l1204:
  7114                           
  7115                           ; BSR set to: 1
  7116  001AFC  C0DD  F0BD         	movff	___ftadd@f2,___ftpack@arg
  7117  001B00  C0DE  F0BE         	movff	___ftadd@f2+1,___ftpack@arg+1
  7118  001B04  C0DF  F0BF         	movff	___ftadd@f2+2,___ftpack@arg+2
  7119  001B08  C130  F0C0         	movff	___ftadd@exp1,___ftpack@exp
  7120  001B0C  C12E  F0C1         	movff	___ftadd@sign,___ftpack@sign
  7121  001B10  ECD1  F011         	call	___ftpack	;wreg free
  7122  001B14  C0BD  F0DA         	movff	?___ftpack,?___ftadd
  7123  001B18  C0BE  F0DB         	movff	?___ftpack+1,?___ftadd+1
  7124  001B1C  C0BF  F0DC         	movff	?___ftpack+2,?___ftadd+2
  7125  001B20  0012               	return	
  7126  001B22                     __end_of___ftadd:
  7127                           	opt stack 0
  7128                           tblptru	equ	0xFF8
  7129                           tblptrh	equ	0xFF7
  7130                           tblptrl	equ	0xFF6
  7131                           tablat	equ	0xFF5
  7132                           prodh	equ	0xFF4
  7133                           prodl	equ	0xFF3
  7134                           intcon	equ	0xFF2
  7135                           postinc0	equ	0xFEE
  7136                           wreg	equ	0xFE8
  7137                           indf1	equ	0xFE7
  7138                           postdec1	equ	0xFE5
  7139                           fsr1h	equ	0xFE2
  7140                           fsr1l	equ	0xFE1
  7141                           indf2	equ	0xFDF
  7142                           fsr2h	equ	0xFDA
  7143                           fsr2l	equ	0xFD9
  7144                           status	equ	0xFD8
  7145                           
  7146 ;; *************** function ___ftpack *****************
  7147 ;; Defined at:
  7148 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  arg             3   21[BANK0 ] unsigned um
  7151 ;;  exp             1   24[BANK0 ] unsigned char 
  7152 ;;  sign            1   25[BANK0 ] unsigned char 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  3   21[BANK0 ] float 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7164 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;Total ram usage:        8 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    8
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		___ftadd
  7175 ;;		___ftdiv
  7176 ;;		___ftmul
  7177 ;;		___lwtoft
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text36
  7182  0023A2                     __ptext36:
  7183                           	opt stack 0
  7184  0023A2                     ___ftpack:
  7185                           	opt stack 21
  7186                           
  7187                           ;incstack = 0
  7188  0023A2  0100               	movlb	0	; () banked
  7189  0023A4  51C0               	movf	___ftpack@exp& (0+255),w,b
  7190  0023A6  B4D8               	btfsc	status,2,c
  7191  0023A8  D005               	goto	u3060
  7192                           
  7193                           ; BSR set to: 0
  7194  0023AA  51BD               	movf	___ftpack@arg& (0+255),w,b
  7195  0023AC  11BE               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7196  0023AE  11BF               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7197  0023B0  A4D8               	btfss	status,2,c
  7198  0023B2  D00C               	goto	l1145
  7199  0023B4                     u3060:
  7200                           
  7201                           ; BSR set to: 0
  7202                           
  7203                           ; BSR set to: 0
  7204  0023B4  0E00               	movlw	0
  7205  0023B6  6FBD               	movwf	?___ftpack& (0+255),b
  7206  0023B8  0E00               	movlw	0
  7207  0023BA  6FBE               	movwf	(?___ftpack+1)& (0+255),b
  7208  0023BC  0E00               	movlw	0
  7209  0023BE  6FBF               	movwf	(?___ftpack+2)& (0+255),b
  7210                           
  7211                           ; BSR set to: 0
  7212  0023C0  0012               	return	
  7213  0023C2                     
  7214                           ; BSR set to: 0
  7215                           
  7216                           ; BSR set to: 0
  7217  0023C2  2BC0               	incf	___ftpack@exp& (0+255),f,b
  7218  0023C4  90D8               	bcf	status,0,c
  7219  0023C6  33BF               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7220  0023C8  33BE               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7221  0023CA  33BD               	rrcf	___ftpack@arg& (0+255),f,b
  7222  0023CC                     l1145:
  7223                           
  7224                           ; BSR set to: 0
  7225                           
  7226                           ; BSR set to: 0
  7227  0023CC  0E00               	movlw	0
  7228  0023CE  15BD               	andwf	___ftpack@arg& (0+255),w,b
  7229  0023D0  6FC2               	movwf	??___ftpack& (0+255),b
  7230  0023D2  0E00               	movlw	0
  7231  0023D4  15BE               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7232  0023D6  6FC3               	movwf	(??___ftpack+1)& (0+255),b
  7233  0023D8  0EFE               	movlw	254
  7234  0023DA  15BF               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7235  0023DC  6FC4               	movwf	(??___ftpack+2)& (0+255),b
  7236  0023DE  51C2               	movf	??___ftpack& (0+255),w,b
  7237  0023E0  11C3               	iorwf	(??___ftpack+1)& (0+255),w,b
  7238  0023E2  11C4               	iorwf	(??___ftpack+2)& (0+255),w,b
  7239  0023E4  B4D8               	btfsc	status,2,c
  7240  0023E6  D00C               	goto	l1148
  7241  0023E8  D7EC               	goto	l1146
  7242  0023EA                     
  7243                           ; BSR set to: 0
  7244                           
  7245                           ; BSR set to: 0
  7246  0023EA  2BC0               	incf	___ftpack@exp& (0+255),f,b
  7247                           
  7248                           ; BSR set to: 0
  7249  0023EC  0E01               	movlw	1
  7250  0023EE  27BD               	addwf	___ftpack@arg& (0+255),f,b
  7251  0023F0  0E00               	movlw	0
  7252  0023F2  23BE               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  7253  0023F4  0E00               	movlw	0
  7254  0023F6  23BF               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  7255  0023F8  90D8               	bcf	status,0,c
  7256  0023FA  33BF               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7257  0023FC  33BE               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7258  0023FE  33BD               	rrcf	___ftpack@arg& (0+255),f,b
  7259  002400                     l1148:
  7260                           
  7261                           ; BSR set to: 0
  7262                           
  7263                           ; BSR set to: 0
  7264  002400  0E00               	movlw	0
  7265  002402  15BD               	andwf	___ftpack@arg& (0+255),w,b
  7266  002404  6FC2               	movwf	??___ftpack& (0+255),b
  7267  002406  0E00               	movlw	0
  7268  002408  15BE               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7269  00240A  6FC3               	movwf	(??___ftpack+1)& (0+255),b
  7270  00240C  0EFF               	movlw	255
  7271  00240E  15BF               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7272  002410  6FC4               	movwf	(??___ftpack+2)& (0+255),b
  7273  002412  51C2               	movf	??___ftpack& (0+255),w,b
  7274  002414  11C3               	iorwf	(??___ftpack+1)& (0+255),w,b
  7275  002416  11C4               	iorwf	(??___ftpack+2)& (0+255),w,b
  7276  002418  B4D8               	btfsc	status,2,c
  7277  00241A  D006               	goto	l1151
  7278  00241C  D7E6               	goto	l1149
  7279  00241E                     
  7280                           ; BSR set to: 0
  7281                           
  7282                           ; BSR set to: 0
  7283  00241E  07C0               	decf	___ftpack@exp& (0+255),f,b
  7284  002420  90D8               	bcf	status,0,c
  7285  002422  37BD               	rlcf	___ftpack@arg& (0+255),f,b
  7286  002424  37BE               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  7287  002426  37BF               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  7288  002428                     l1151:
  7289                           
  7290                           ; BSR set to: 0
  7291                           
  7292                           ; BSR set to: 0
  7293  002428  BFBE               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  7294  00242A  D003               	goto	u3100
  7295                           
  7296                           ; BSR set to: 0
  7297  00242C  0E02               	movlw	2
  7298  00242E  61C0               	cpfslt	___ftpack@exp& (0+255),b
  7299  002430  D7F6               	goto	l1152
  7300  002432                     u3100:
  7301                           
  7302                           ; BSR set to: 0
  7303                           
  7304                           ; BSR set to: 0
  7305  002432  A1C0               	btfss	___ftpack@exp& (0+255),0,b
  7306                           
  7307                           ; BSR set to: 0
  7308  002434  9FBE               	bcf	(___ftpack@arg+1)& (0+255),7,b
  7309                           
  7310                           ; BSR set to: 0
  7311                           
  7312                           ; BSR set to: 0
  7313  002436  90D8               	bcf	status,0,c
  7314  002438  33C0               	rrcf	___ftpack@exp& (0+255),f,b
  7315  00243A  51C0               	movf	___ftpack@exp& (0+255),w,b
  7316  00243C  13BF               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  7317                           
  7318                           ; BSR set to: 0
  7319  00243E  51C1               	movf	___ftpack@sign& (0+255),w,b
  7320  002440  A4D8               	btfss	status,2,c
  7321                           
  7322                           ; BSR set to: 0
  7323  002442  8FBF               	bsf	(___ftpack@arg+2)& (0+255),7,b
  7324                           
  7325                           ; BSR set to: 0
  7326                           
  7327                           ; BSR set to: 0
  7328  002444  C0BD  F0BD         	movff	___ftpack@arg,?___ftpack
  7329  002448  C0BE  F0BE         	movff	___ftpack@arg+1,?___ftpack+1
  7330  00244C  C0BF  F0BF         	movff	___ftpack@arg+2,?___ftpack+2
  7331  002450  0012               	return	
  7332  002452                     __end_of___ftpack:
  7333                           	opt stack 0
  7334                           tblptru	equ	0xFF8
  7335                           tblptrh	equ	0xFF7
  7336                           tblptrl	equ	0xFF6
  7337                           tablat	equ	0xFF5
  7338                           prodh	equ	0xFF4
  7339                           prodl	equ	0xFF3
  7340                           intcon	equ	0xFF2
  7341                           postinc0	equ	0xFEE
  7342                           wreg	equ	0xFE8
  7343                           indf1	equ	0xFE7
  7344                           postdec1	equ	0xFE5
  7345                           fsr1h	equ	0xFE2
  7346                           fsr1l	equ	0xFE1
  7347                           indf2	equ	0xFDF
  7348                           fsr2h	equ	0xFDA
  7349                           fsr2l	equ	0xFD9
  7350                           status	equ	0xFD8
  7351                           
  7352 ;; *************** function ___aldiv *****************
  7353 ;; Defined at:
  7354 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  dividend        4   21[BANK0 ] long 
  7357 ;;  divisor         4   25[BANK0 ] long 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  quotient        4   31[BANK0 ] long 
  7360 ;;  sign            1   30[BANK0 ] unsigned char 
  7361 ;;  counter         1   29[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  4   21[BANK0 ] long 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7371 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;Total ram usage:       14 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    8
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text37
  7386  00220E                     __ptext37:
  7387                           	opt stack 0
  7388  00220E                     ___aldiv:
  7389                           	opt stack 22
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;incstack = 0
  7393  00220E  0E00               	movlw	0
  7394  002210  0100               	movlb	0	; () banked
  7395  002212  6FC6               	movwf	___aldiv@sign& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398  002214  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7399  002216  D00A               	goto	l986
  7400                           
  7401                           ; BSR set to: 0
  7402  002218  1FC4               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7403  00221A  1FC3               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7404  00221C  1FC2               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7405  00221E  6DC1               	negf	___aldiv@divisor& (0+255),b
  7406  002220  0E00               	movlw	0
  7407  002222  23C2               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7408  002224  23C3               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7409  002226  23C4               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7410                           
  7411                           ; BSR set to: 0
  7412  002228  0E01               	movlw	1
  7413  00222A  6FC6               	movwf	___aldiv@sign& (0+255),b
  7414  00222C                     l986:
  7415                           
  7416                           ; BSR set to: 0
  7417                           
  7418                           ; BSR set to: 0
  7419  00222C  AFC0               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7420  00222E  D00A               	goto	l987
  7421                           
  7422                           ; BSR set to: 0
  7423  002230  1FC0               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7424  002232  1FBF               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7425  002234  1FBE               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7426  002236  6DBD               	negf	___aldiv@dividend& (0+255),b
  7427  002238  0E00               	movlw	0
  7428  00223A  23BE               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7429  00223C  23BF               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7430  00223E  23C0               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7431                           
  7432                           ; BSR set to: 0
  7433  002240  0E01               	movlw	1
  7434  002242  1BC6               	xorwf	___aldiv@sign& (0+255),f,b
  7435  002244                     l987:
  7436                           
  7437                           ; BSR set to: 0
  7438                           
  7439                           ; BSR set to: 0
  7440  002244  0E00               	movlw	0
  7441  002246  6FC7               	movwf	___aldiv@quotient& (0+255),b
  7442  002248  0E00               	movlw	0
  7443  00224A  6FC8               	movwf	(___aldiv@quotient+1)& (0+255),b
  7444  00224C  0E00               	movlw	0
  7445  00224E  6FC9               	movwf	(___aldiv@quotient+2)& (0+255),b
  7446  002250  0E00               	movlw	0
  7447  002252  6FCA               	movwf	(___aldiv@quotient+3)& (0+255),b
  7448                           
  7449                           ; BSR set to: 0
  7450  002254  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7451  002256  11C2               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7452  002258  11C3               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7453  00225A  11C4               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7454  00225C  B4D8               	btfsc	status,2,c
  7455  00225E  D02A               	goto	l994
  7456                           
  7457                           ; BSR set to: 0
  7458  002260  0E01               	movlw	1
  7459  002262  6FC5               	movwf	___aldiv@counter& (0+255),b
  7460  002264  D006               	goto	l989
  7461  002266                     
  7462                           ; BSR set to: 0
  7463                           
  7464                           ; BSR set to: 0
  7465  002266  90D8               	bcf	status,0,c
  7466  002268  37C1               	rlcf	___aldiv@divisor& (0+255),f,b
  7467  00226A  37C2               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7468  00226C  37C3               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7469  00226E  37C4               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7470  002270  2BC5               	incf	___aldiv@counter& (0+255),f,b
  7471  002272                     l989:
  7472                           
  7473                           ; BSR set to: 0
  7474                           
  7475                           ; BSR set to: 0
  7476  002272  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7477  002274  D7F8               	goto	l990
  7478  002276                     u3340:
  7479                           
  7480                           ; BSR set to: 0
  7481                           
  7482                           ; BSR set to: 0
  7483                           
  7484                           ; BSR set to: 0
  7485  002276  90D8               	bcf	status,0,c
  7486  002278  37C7               	rlcf	___aldiv@quotient& (0+255),f,b
  7487  00227A  37C8               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7488  00227C  37C9               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7489  00227E  37CA               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7490                           
  7491                           ; BSR set to: 0
  7492  002280  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7493  002282  5DBD               	subwf	___aldiv@dividend& (0+255),w,b
  7494  002284  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7495  002286  59BE               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7496  002288  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7497  00228A  59BF               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7498  00228C  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7499  00228E  59C0               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7500  002290  A0D8               	btfss	status,0,c
  7501  002292  D009               	goto	l993
  7502                           
  7503                           ; BSR set to: 0
  7504  002294  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7505  002296  5FBD               	subwf	___aldiv@dividend& (0+255),f,b
  7506  002298  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7507  00229A  5BBE               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7508  00229C  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7509  00229E  5BBF               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7510  0022A0  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7511  0022A2  5BC0               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7512                           
  7513                           ; BSR set to: 0
  7514  0022A4  81C7               	bsf	___aldiv@quotient& (0+255),0,b
  7515  0022A6                     l993:
  7516                           
  7517                           ; BSR set to: 0
  7518                           
  7519                           ; BSR set to: 0
  7520  0022A6  90D8               	bcf	status,0,c
  7521  0022A8  33C4               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7522  0022AA  33C3               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7523  0022AC  33C2               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7524  0022AE  33C1               	rrcf	___aldiv@divisor& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 0
  7527  0022B0  2FC5               	decfsz	___aldiv@counter& (0+255),f,b
  7528  0022B2  D7E1               	goto	u3340
  7529  0022B4                     l994:
  7530                           
  7531                           ; BSR set to: 0
  7532                           
  7533                           ; BSR set to: 0
  7534                           
  7535                           ; BSR set to: 0
  7536  0022B4  51C6               	movf	___aldiv@sign& (0+255),w,b
  7537  0022B6  B4D8               	btfsc	status,2,c
  7538  0022B8  D008               	goto	l995
  7539                           
  7540                           ; BSR set to: 0
  7541  0022BA  1FCA               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7542  0022BC  1FC9               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7543  0022BE  1FC8               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7544  0022C0  6DC7               	negf	___aldiv@quotient& (0+255),b
  7545  0022C2  0E00               	movlw	0
  7546  0022C4  23C8               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7547  0022C6  23C9               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7548  0022C8  23CA               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7549  0022CA                     l995:
  7550                           
  7551                           ; BSR set to: 0
  7552                           
  7553                           ; BSR set to: 0
  7554  0022CA  C0C7  F0BD         	movff	___aldiv@quotient,?___aldiv
  7555  0022CE  C0C8  F0BE         	movff	___aldiv@quotient+1,?___aldiv+1
  7556  0022D2  C0C9  F0BF         	movff	___aldiv@quotient+2,?___aldiv+2
  7557  0022D6  C0CA  F0C0         	movff	___aldiv@quotient+3,?___aldiv+3
  7558  0022DA  0012               	return	
  7559  0022DC                     __end_of___aldiv:
  7560                           	opt stack 0
  7561                           tblptru	equ	0xFF8
  7562                           tblptrh	equ	0xFF7
  7563                           tblptrl	equ	0xFF6
  7564                           tablat	equ	0xFF5
  7565                           prodh	equ	0xFF4
  7566                           prodl	equ	0xFF3
  7567                           intcon	equ	0xFF2
  7568                           postinc0	equ	0xFEE
  7569                           wreg	equ	0xFE8
  7570                           indf1	equ	0xFE7
  7571                           postdec1	equ	0xFE5
  7572                           fsr1h	equ	0xFE2
  7573                           fsr1l	equ	0xFE1
  7574                           indf2	equ	0xFDF
  7575                           fsr2h	equ	0xFDA
  7576                           fsr2l	equ	0xFD9
  7577                           status	equ	0xFD8
  7578                           
  7579 ;; *************** function _Write_b_eep *****************
  7580 ;; Defined at:
  7581 ;;		line 527 in file "zigbee.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  badd            2   21[BANK0 ] unsigned int 
  7584 ;;  data            1   23[BANK0 ] unsigned char 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  GIE_BIT_VAL     1   24[BANK0 ] unsigned char 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  1    wreg      void 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7596 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;Total ram usage:        4 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    8
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_main
  7607 ;;		_Store_ID
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text38
  7612  0028CC                     __ptext38:
  7613                           	opt stack 0
  7614  0028CC                     _Write_b_eep:
  7615                           	opt stack 22
  7616                           
  7617                           ;zigbee.c: 528: char GIE_BIT_VAL = 0;
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;incstack = 0
  7621  0028CC  0E00               	movlw	0
  7622  0028CE  0100               	movlb	0	; () banked
  7623  0028D0  6FC0               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;zigbee.c: 529: EEADR = (badd & 0x0FF);
  7627  0028D2  C0BD  FF62         	movff	Write_b_eep@badd,3938	;volatile
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;zigbee.c: 530: EEDATA = data;
  7631  0028D6  C0BF  FF61         	movff	Write_b_eep@data,3937	;volatile
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;zigbee.c: 531: EECON1bits.EEPGD = 0;
  7635  0028DA  9E7F               	bcf	3967,7,c	;volsfr
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;zigbee.c: 532: EECON1bits.CFGS = 0;
  7639  0028DC  9C7F               	bcf	3967,6,c	;volsfr
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;zigbee.c: 533: EECON1bits.WREN = 1;
  7643  0028DE  847F               	bsf	3967,2,c	;volsfr
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;zigbee.c: 534: GIE_BIT_VAL = INTCONbits.GIE;
  7647  0028E0  0E00               	movlw	0
  7648  0028E2  BEF2               	btfsc	intcon,7,c	;volatile
  7649  0028E4  0E01               	movlw	1
  7650  0028E6  6FC0               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;zigbee.c: 535: INTCONbits.GIE = 0;
  7654  0028E8  9EF2               	bcf	intcon,7,c	;volatile
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;zigbee.c: 536: EECON2 = 0x55;
  7658  0028EA  0E55               	movlw	85
  7659  0028EC  6E7E               	movwf	3966,c	;volsfr
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;zigbee.c: 537: EECON2 = 0xAA;
  7663  0028EE  0EAA               	movlw	170
  7664  0028F0  6E7E               	movwf	3966,c	;volsfr
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;zigbee.c: 538: EECON1bits.WR = 1;
  7668  0028F2  827F               	bsf	3967,1,c	;volsfr
  7669  0028F4                     
  7670                           ; BSR set to: 0
  7671  0028F4  B27F               	btfsc	3967,1,c	;volsfr
  7672  0028F6  D7FE               	goto	l587
  7673                           
  7674                           ;zigbee.c: 540: INTCONbits.GIE = GIE_BIT_VAL;
  7675  0028F8  0100               	movlb	0	; () banked
  7676  0028FA  B1C0               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  7677  0028FC  D002               	bra	u3255
  7678  0028FE  9EF2               	bcf	intcon,7,c	;volatile
  7679  002900  D001               	bra	u3256
  7680  002902                     u3255:
  7681  002902  8EF2               	bsf	intcon,7,c	;volatile
  7682  002904                     u3256:
  7683                           
  7684                           ;zigbee.c: 541: EECON1bits.WREN = 0;
  7685  002904  947F               	bcf	3967,2,c	;volsfr
  7686  002906  0012               	return		;funcret
  7687  002908                     __end_of_Write_b_eep:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           intcon	equ	0xFF2
  7696                           postinc0	equ	0xFEE
  7697                           wreg	equ	0xFE8
  7698                           indf1	equ	0xFE7
  7699                           postdec1	equ	0xFE5
  7700                           fsr1h	equ	0xFE2
  7701                           fsr1l	equ	0xFE1
  7702                           indf2	equ	0xFDF
  7703                           fsr2h	equ	0xFDA
  7704                           fsr2l	equ	0xFD9
  7705                           status	equ	0xFD8
  7706                           
  7707 ;; *************** function _SYSTEM_Initialize *****************
  7708 ;; Defined at:
  7709 ;;		line 128 in file "mcc_generated_files/mcc.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;Total ram usage:        0 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:   10
  7730 ;; This function calls:
  7731 ;;		_ADC_Initialize
  7732 ;;		_EXT_INT_Initialize
  7733 ;;		_INTERRUPT_Initialize
  7734 ;;		_OSCILLATOR_Initialize
  7735 ;;		_PIN_MANAGER_Initialize
  7736 ;;		_TMR0_Initialize
  7737 ;; This function is called by:
  7738 ;;		_main
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text39
  7743  002D18                     __ptext39:
  7744                           	opt stack 0
  7745  002D18                     _SYSTEM_Initialize:
  7746                           	opt stack 20
  7747                           
  7748                           ;mcc.c: 130: INTERRUPT_Initialize();
  7749                           
  7750                           ;incstack = 0
  7751  002D18  EC36  F017         	call	_INTERRUPT_Initialize	;wreg free
  7752                           
  7753                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  7754  002D1C  EC06  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  7755                           
  7756                           ;mcc.c: 132: OSCILLATOR_Initialize();
  7757  002D20  ECD1  F016         	call	_OSCILLATOR_Initialize	;wreg free
  7758                           
  7759                           ;mcc.c: 133: EXT_INT_Initialize();
  7760  002D24  EC99  F016         	call	_EXT_INT_Initialize	;wreg free
  7761                           
  7762                           ;mcc.c: 134: TMR0_Initialize();
  7763  002D28  EC75  F015         	call	_TMR0_Initialize	;wreg free
  7764                           
  7765                           ;mcc.c: 135: ADC_Initialize();
  7766  002D2C  ECBC  F016         	call	_ADC_Initialize	;wreg free
  7767  002D30  0012               	return		;funcret
  7768  002D32                     __end_of_SYSTEM_Initialize:
  7769                           	opt stack 0
  7770                           tblptru	equ	0xFF8
  7771                           tblptrh	equ	0xFF7
  7772                           tblptrl	equ	0xFF6
  7773                           tablat	equ	0xFF5
  7774                           prodh	equ	0xFF4
  7775                           prodl	equ	0xFF3
  7776                           intcon	equ	0xFF2
  7777                           postinc0	equ	0xFEE
  7778                           wreg	equ	0xFE8
  7779                           indf1	equ	0xFE7
  7780                           postdec1	equ	0xFE5
  7781                           fsr1h	equ	0xFE2
  7782                           fsr1l	equ	0xFE1
  7783                           indf2	equ	0xFDF
  7784                           fsr2h	equ	0xFDA
  7785                           fsr2l	equ	0xFD9
  7786                           status	equ	0xFD8
  7787                           
  7788 ;; *************** function _TMR0_Initialize *****************
  7789 ;; Defined at:
  7790 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    9
  7811 ;; This function calls:
  7812 ;;		_TMR0_SetInterruptHandler
  7813 ;; This function is called by:
  7814 ;;		_SYSTEM_Initialize
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text40
  7819  002AEA                     __ptext40:
  7820                           	opt stack 0
  7821  002AEA                     _TMR0_Initialize:
  7822                           	opt stack 20
  7823                           
  7824                           ;tmr0.c: 71: TMR0H = 0x00;
  7825                           
  7826                           ;incstack = 0
  7827  002AEA  0E00               	movlw	0
  7828  002AEC  6ED7               	movwf	4055,c	;volatile
  7829                           
  7830                           ;tmr0.c: 74: TMR0L = 0xF6;
  7831  002AEE  0EF6               	movlw	246
  7832  002AF0  6ED6               	movwf	4054,c	;volatile
  7833                           
  7834                           ;tmr0.c: 78: timer0ReloadVal = 246;
  7835  002AF2  0EF6               	movlw	246
  7836  002AF4  0100               	movlb	0	; () banked
  7837  002AF6  6F9F               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  7841  002AF8  94F2               	bcf	intcon,2,c	;volatile
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  7845  002AFA  8AF2               	bsf	intcon,5,c	;volatile
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  7849  002AFC  0E72               	movlw	low _TMR0_DefaultInterruptHandler
  7850  002AFE  6FBD               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  7851  002B00  0E2E               	movlw	high _TMR0_DefaultInterruptHandler
  7852  002B02  6FBE               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7853  002B04  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  7854  002B06  6FBF               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7855  002B08  EC1E  F017         	call	_TMR0_SetInterruptHandler	;wreg free
  7856                           
  7857                           ;tmr0.c: 90: T0CON = 0xD7;
  7858  002B0C  0ED7               	movlw	215
  7859  002B0E  6ED5               	movwf	4053,c	;volatile
  7860  002B10  0012               	return		;funcret
  7861  002B12                     __end_of_TMR0_Initialize:
  7862                           	opt stack 0
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           intcon	equ	0xFF2
  7870                           postinc0	equ	0xFEE
  7871                           wreg	equ	0xFE8
  7872                           indf1	equ	0xFE7
  7873                           postdec1	equ	0xFE5
  7874                           fsr1h	equ	0xFE2
  7875                           fsr1l	equ	0xFE1
  7876                           indf2	equ	0xFDF
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _TMR0_SetInterruptHandler *****************
  7882 ;; Defined at:
  7883 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  InterruptHan    3   21[BANK0 ] PTR FTN()void 
  7886 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;		None
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7898 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;Total ram usage:        3 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    8
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_TMR0_Initialize
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text41
  7913  002E3C                     __ptext41:
  7914                           	opt stack 0
  7915  002E3C                     _TMR0_SetInterruptHandler:
  7916                           	opt stack 20
  7917                           
  7918                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
  7919                           
  7920                           ;incstack = 0
  7921  002E3C  C0BD  F073         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7922  002E40  C0BE  F074         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7923  002E44  C0BF  F075         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  7924  002E48  0012               	return		;funcret
  7925  002E4A                     __end_of_TMR0_SetInterruptHandler:
  7926                           	opt stack 0
  7927                           tblptru	equ	0xFF8
  7928                           tblptrh	equ	0xFF7
  7929                           tblptrl	equ	0xFF6
  7930                           tablat	equ	0xFF5
  7931                           prodh	equ	0xFF4
  7932                           prodl	equ	0xFF3
  7933                           intcon	equ	0xFF2
  7934                           postinc0	equ	0xFEE
  7935                           wreg	equ	0xFE8
  7936                           indf1	equ	0xFE7
  7937                           postdec1	equ	0xFE5
  7938                           fsr1h	equ	0xFE2
  7939                           fsr1l	equ	0xFE1
  7940                           indf2	equ	0xFDF
  7941                           fsr2h	equ	0xFDA
  7942                           fsr2l	equ	0xFD9
  7943                           status	equ	0xFD8
  7944                           
  7945 ;; *************** function _PIN_MANAGER_Initialize *****************
  7946 ;; Defined at:
  7947 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;Total ram usage:        0 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    8
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_SYSTEM_Initialize
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           	psect	text42
  7976  00280C                     __ptext42:
  7977                           	opt stack 0
  7978  00280C                     _PIN_MANAGER_Initialize:
  7979                           	opt stack 21
  7980                           
  7981                           ;pin_manager.c: 57: LATE = 0x04;
  7982                           
  7983                           ;incstack = 0
  7984  00280C  0E04               	movlw	4
  7985  00280E  6E8D               	movwf	3981,c	;volatile
  7986                           
  7987                           ;pin_manager.c: 58: LATD = 0x00;
  7988  002810  0E00               	movlw	0
  7989  002812  6E8C               	movwf	3980,c	;volatile
  7990                           
  7991                           ;pin_manager.c: 59: LATA = 0x0F;
  7992  002814  0E0F               	movlw	15
  7993  002816  6E89               	movwf	3977,c	;volatile
  7994                           
  7995                           ;pin_manager.c: 60: LATF = 0x0A;
  7996  002818  0E0A               	movlw	10
  7997  00281A  6E8E               	movwf	3982,c	;volatile
  7998                           
  7999                           ;pin_manager.c: 61: LATB = 0x00;
  8000  00281C  0E00               	movlw	0
  8001  00281E  6E8A               	movwf	3978,c	;volatile
  8002                           
  8003                           ;pin_manager.c: 62: LATG = 0x00;
  8004  002820  0E00               	movlw	0
  8005  002822  6E8F               	movwf	3983,c	;volatile
  8006                           
  8007                           ;pin_manager.c: 63: LATC = 0x03;
  8008  002824  0E03               	movlw	3
  8009  002826  6E8B               	movwf	3979,c	;volatile
  8010                           
  8011                           ;pin_manager.c: 68: TRISE = 0xFF;
  8012  002828  6896               	setf	3990,c	;volatile
  8013                           
  8014                           ;pin_manager.c: 69: TRISF = 0xFA;
  8015  00282A  0EFA               	movlw	250
  8016  00282C  6E97               	movwf	3991,c	;volatile
  8017                           
  8018                           ;pin_manager.c: 70: TRISA = 0xC0;
  8019  00282E  0EC0               	movlw	192
  8020  002830  6E92               	movwf	3986,c	;volatile
  8021                           
  8022                           ;pin_manager.c: 71: TRISG = 0x1F;
  8023  002832  0E1F               	movlw	31
  8024  002834  6E98               	movwf	3992,c	;volatile
  8025                           
  8026                           ;pin_manager.c: 72: TRISB = 0xFF;
  8027  002836  6893               	setf	3987,c	;volatile
  8028                           
  8029                           ;pin_manager.c: 73: TRISC = 0xFC;
  8030  002838  0EFC               	movlw	252
  8031  00283A  6E94               	movwf	3988,c	;volatile
  8032                           
  8033                           ;pin_manager.c: 74: TRISD = 0xFF;
  8034  00283C  6895               	setf	3989,c	;volatile
  8035                           
  8036                           ;pin_manager.c: 79: ANCON0 = 0x60;
  8037  00283E  0E60               	movlw	96
  8038  002840  010F               	movlb	15	; () banked
  8039  002842  6F25               	movwf	37,b	;volatile
  8040                           
  8041                           ;pin_manager.c: 80: ANCON1 = 0x0E;
  8042  002844  0E0E               	movlw	14
  8043  002846  6F24               	movwf	36,b	;volatile
  8044                           
  8045                           ;pin_manager.c: 81: ANCON2 = 0x0F;
  8046  002848  0E0F               	movlw	15
  8047  00284A  6F23               	movwf	35,b	;volatile
  8048                           
  8049                           ; BSR set to: 15
  8050  00284C  0012               	return		;funcret
  8051  00284E                     __end_of_PIN_MANAGER_Initialize:
  8052                           	opt stack 0
  8053                           tblptru	equ	0xFF8
  8054                           tblptrh	equ	0xFF7
  8055                           tblptrl	equ	0xFF6
  8056                           tablat	equ	0xFF5
  8057                           prodh	equ	0xFF4
  8058                           prodl	equ	0xFF3
  8059                           intcon	equ	0xFF2
  8060                           postinc0	equ	0xFEE
  8061                           wreg	equ	0xFE8
  8062                           indf1	equ	0xFE7
  8063                           postdec1	equ	0xFE5
  8064                           fsr1h	equ	0xFE2
  8065                           fsr1l	equ	0xFE1
  8066                           indf2	equ	0xFDF
  8067                           fsr2h	equ	0xFDA
  8068                           fsr2l	equ	0xFD9
  8069                           status	equ	0xFD8
  8070                           
  8071 ;; *************** function _OSCILLATOR_Initialize *****************
  8072 ;; Defined at:
  8073 ;;		line 138 in file "mcc_generated_files/mcc.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;Total ram usage:        0 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    8
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_SYSTEM_Initialize
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text43
  8102  002DA2                     __ptext43:
  8103                           	opt stack 0
  8104  002DA2                     _OSCILLATOR_Initialize:
  8105                           	opt stack 21
  8106                           
  8107                           ;mcc.c: 141: OSCCON = 0x60;
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;incstack = 0
  8111  002DA2  0E60               	movlw	96
  8112  002DA4  6ED3               	movwf	4051,c	;volatile
  8113                           
  8114                           ;mcc.c: 143: OSCCON2 = 0x00;
  8115  002DA6  0E00               	movlw	0
  8116  002DA8  6E64               	movwf	3940,c	;volatile
  8117                           
  8118                           ;mcc.c: 145: OSCTUNE = 0x00;
  8119  002DAA  0E00               	movlw	0
  8120  002DAC  6E9B               	movwf	3995,c	;volatile
  8121                           
  8122                           ;mcc.c: 147: REFOCON = 0x00;
  8123  002DAE  0E00               	movlw	0
  8124  002DB0  010F               	movlb	15	; () banked
  8125  002DB2  6F2A               	movwf	42,b	;volatile
  8126                           
  8127                           ; BSR set to: 15
  8128  002DB4  0012               	return		;funcret
  8129  002DB6                     __end_of_OSCILLATOR_Initialize:
  8130                           	opt stack 0
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           intcon	equ	0xFF2
  8138                           postinc0	equ	0xFEE
  8139                           wreg	equ	0xFE8
  8140                           indf1	equ	0xFE7
  8141                           postdec1	equ	0xFE5
  8142                           fsr1h	equ	0xFE2
  8143                           fsr1l	equ	0xFE1
  8144                           indf2	equ	0xFDF
  8145                           fsr2h	equ	0xFDA
  8146                           fsr2l	equ	0xFD9
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _INTERRUPT_Initialize *****************
  8150 ;; Defined at:
  8151 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		None
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;Total ram usage:        0 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    8
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_SYSTEM_Initialize
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text44
  8180  002E6C                     __ptext44:
  8181                           	opt stack 0
  8182  002E6C                     _INTERRUPT_Initialize:
  8183                           	opt stack 21
  8184                           
  8185                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  8186                           
  8187                           ; BSR set to: 15
  8188                           ;incstack = 0
  8189  002E6C  8ED0               	bsf	4048,7,c	;volatile
  8190                           
  8191                           ;interrupt_manager.c: 62: INTCON2bits.TMR0IP = 0;
  8192  002E6E  94F1               	bcf	intcon2,2,c	;volatile
  8193  002E70  0012               	return		;funcret
  8194  002E72                     __end_of_INTERRUPT_Initialize:
  8195                           	opt stack 0
  8196                           tblptru	equ	0xFF8
  8197                           tblptrh	equ	0xFF7
  8198                           tblptrl	equ	0xFF6
  8199                           tablat	equ	0xFF5
  8200                           prodh	equ	0xFF4
  8201                           prodl	equ	0xFF3
  8202                           intcon	equ	0xFF2
  8203                           intcon2	equ	0xFF1
  8204                           postinc0	equ	0xFEE
  8205                           wreg	equ	0xFE8
  8206                           indf1	equ	0xFE7
  8207                           postdec1	equ	0xFE5
  8208                           fsr1h	equ	0xFE2
  8209                           fsr1l	equ	0xFE1
  8210                           indf2	equ	0xFDF
  8211                           fsr2h	equ	0xFDA
  8212                           fsr2l	equ	0xFD9
  8213                           status	equ	0xFD8
  8214                           
  8215 ;; *************** function _EXT_INT_Initialize *****************
  8216 ;; Defined at:
  8217 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;Total ram usage:        0 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    9
  8238 ;; This function calls:
  8239 ;;		_INT0_SetInterruptHandler
  8240 ;; This function is called by:
  8241 ;;		_SYSTEM_Initialize
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text45
  8246  002D32                     __ptext45:
  8247                           	opt stack 0
  8248  002D32                     _EXT_INT_Initialize:
  8249                           	opt stack 20
  8250                           
  8251                           ;ext_int.c: 64: (INTCONbits.INT0IF = 0);
  8252                           
  8253                           ;incstack = 0
  8254  002D32  92F2               	bcf	intcon,1,c	;volatile
  8255                           
  8256                           ;ext_int.c: 65: (INTCON2bits.INTEDG0 = 0);
  8257  002D34  9CF1               	bcf	intcon2,6,c	;volatile
  8258                           
  8259                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  8260  002D36  0E74               	movlw	low _INT0_DefaultInterruptHandler
  8261  002D38  0100               	movlb	0	; () banked
  8262  002D3A  6FBD               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  8263  002D3C  0E2E               	movlw	high _INT0_DefaultInterruptHandler
  8264  002D3E  6FBE               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8265  002D40  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  8266  002D42  6FBF               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8267  002D44  EC25  F017         	call	_INT0_SetInterruptHandler	;wreg free
  8268                           
  8269                           ;ext_int.c: 68: (INTCONbits.INT0IE = 1);
  8270  002D48  88F2               	bsf	intcon,4,c	;volatile
  8271  002D4A  0012               	return		;funcret
  8272  002D4C                     __end_of_EXT_INT_Initialize:
  8273                           	opt stack 0
  8274                           tblptru	equ	0xFF8
  8275                           tblptrh	equ	0xFF7
  8276                           tblptrl	equ	0xFF6
  8277                           tablat	equ	0xFF5
  8278                           prodh	equ	0xFF4
  8279                           prodl	equ	0xFF3
  8280                           intcon	equ	0xFF2
  8281                           intcon2	equ	0xFF1
  8282                           postinc0	equ	0xFEE
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _INT0_SetInterruptHandler *****************
  8294 ;; Defined at:
  8295 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  InterruptHan    3   21[BANK0 ] PTR FTN()void 
  8298 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8310 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8314 ;;Total ram usage:        3 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    8
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_EXT_INT_Initialize
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text46
  8325  002E4A                     __ptext46:
  8326                           	opt stack 0
  8327  002E4A                     _INT0_SetInterruptHandler:
  8328                           	opt stack 20
  8329                           
  8330                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
  8331                           
  8332                           ;incstack = 0
  8333  002E4A  C0BD  F076         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8334  002E4E  C0BE  F077         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8335  002E52  C0BF  F078         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  8336  002E56  0012               	return		;funcret
  8337  002E58                     __end_of_INT0_SetInterruptHandler:
  8338                           	opt stack 0
  8339                           tblptru	equ	0xFF8
  8340                           tblptrh	equ	0xFF7
  8341                           tblptrl	equ	0xFF6
  8342                           tablat	equ	0xFF5
  8343                           prodh	equ	0xFF4
  8344                           prodl	equ	0xFF3
  8345                           intcon	equ	0xFF2
  8346                           intcon2	equ	0xFF1
  8347                           postinc0	equ	0xFEE
  8348                           wreg	equ	0xFE8
  8349                           indf1	equ	0xFE7
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           fsr2h	equ	0xFDA
  8355                           fsr2l	equ	0xFD9
  8356                           status	equ	0xFD8
  8357                           
  8358 ;; *************** function _ADC_Initialize *****************
  8359 ;; Defined at:
  8360 ;;		line 60 in file "mcc_generated_files/adc.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;Total ram usage:        0 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    8
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_SYSTEM_Initialize
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text47
  8389  002D78                     __ptext47:
  8390                           	opt stack 0
  8391  002D78                     _ADC_Initialize:
  8392                           	opt stack 21
  8393                           
  8394                           ;adc.c: 65: ADCON0 = 0x19;
  8395                           
  8396                           ;incstack = 0
  8397  002D78  0E19               	movlw	25
  8398  002D7A  6EC2               	movwf	4034,c	;volatile
  8399                           
  8400                           ;adc.c: 68: ADCON1 = 0x00;
  8401  002D7C  0E00               	movlw	0
  8402  002D7E  6EC1               	movwf	4033,c	;volatile
  8403                           
  8404                           ;adc.c: 71: ADCON2 = 0xA5;
  8405  002D80  0EA5               	movlw	165
  8406  002D82  6EC0               	movwf	4032,c	;volatile
  8407                           
  8408                           ;adc.c: 74: ADRESH = 0x00;
  8409  002D84  0E00               	movlw	0
  8410  002D86  6EC4               	movwf	4036,c	;volatile
  8411                           
  8412                           ;adc.c: 77: ADRESL = 0x00;
  8413  002D88  0E00               	movlw	0
  8414  002D8A  6EC3               	movwf	4035,c	;volatile
  8415  002D8C  0012               	return		;funcret
  8416  002D8E                     __end_of_ADC_Initialize:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           prodh	equ	0xFF4
  8423                           prodl	equ	0xFF3
  8424                           intcon	equ	0xFF2
  8425                           intcon2	equ	0xFF1
  8426                           postinc0	equ	0xFEE
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           postdec1	equ	0xFE5
  8430                           fsr1h	equ	0xFE2
  8431                           fsr1l	equ	0xFE1
  8432                           indf2	equ	0xFDF
  8433                           fsr2h	equ	0xFDA
  8434                           fsr2l	equ	0xFD9
  8435                           status	equ	0xFD8
  8436                           
  8437 ;; *************** function _Read_b_eep *****************
  8438 ;; Defined at:
  8439 ;;		line 544 in file "zigbee.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  badd            2   21[BANK0 ] unsigned int 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  1    wreg      unsigned char 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;Total ram usage:        2 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    8
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_main
  8464 ;;		_Store_ID
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text48
  8469  002DEC                     __ptext48:
  8470                           	opt stack 0
  8471  002DEC                     _Read_b_eep:
  8472                           	opt stack 22
  8473                           
  8474                           ;zigbee.c: 546: EEADR = (badd & 0x0FF);
  8475                           
  8476                           ;incstack = 0
  8477  002DEC  C0BD  FF62         	movff	Read_b_eep@badd,3938	;volatile
  8478                           
  8479                           ;zigbee.c: 547: EECON1bits.CFGS = 0;
  8480  002DF0  9C7F               	bcf	3967,6,c	;volsfr
  8481                           
  8482                           ;zigbee.c: 548: EECON1bits.EEPGD = 0;
  8483  002DF2  9E7F               	bcf	3967,7,c	;volsfr
  8484                           
  8485                           ;zigbee.c: 549: EECON1bits.RD = 1;
  8486  002DF4  807F               	bsf	3967,0,c	;volsfr
  8487                           
  8488                           ;zigbee.c: 550: __nop();
  8489  002DF6  F000               	nop	
  8490                           
  8491                           ;zigbee.c: 551: __nop();
  8492  002DF8  F000               	nop	
  8493                           
  8494                           ;zigbee.c: 552: return (EEDATA);
  8495  002DFA  5061               	movf	3937,w,c	;volatile
  8496  002DFC  0012               	return	
  8497  002DFE                     __end_of_Read_b_eep:
  8498                           	opt stack 0
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           intcon2	equ	0xFF1
  8507                           postinc0	equ	0xFEE
  8508                           wreg	equ	0xFE8
  8509                           indf1	equ	0xFE7
  8510                           postdec1	equ	0xFE5
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           indf2	equ	0xFDF
  8514                           fsr2h	equ	0xFDA
  8515                           fsr2l	equ	0xFD9
  8516                           status	equ	0xFD8
  8517                           
  8518 ;; *************** function _InitSPI *****************
  8519 ;; Defined at:
  8520 ;;		line 441 in file "zigbee.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;Total ram usage:        0 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    9
  8541 ;; This function calls:
  8542 ;;		_delay
  8543 ;; This function is called by:
  8544 ;;		_main
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text49
  8549  002BF4                     __ptext49:
  8550                           	opt stack 0
  8551  002BF4                     _InitSPI:
  8552                           	opt stack 21
  8553                           
  8554                           ;zigbee.c: 442: SSP1CON1bits.SSPM0 = 0;
  8555                           
  8556                           ;incstack = 0
  8557  002BF4  90C6               	bcf	4038,0,c	;volatile
  8558                           
  8559                           ;zigbee.c: 443: SSP1CON1bits.SSPM1 = 0;
  8560  002BF6  92C6               	bcf	4038,1,c	;volatile
  8561                           
  8562                           ;zigbee.c: 444: SSP1CON1bits.SSPM2 = 0;
  8563  002BF8  94C6               	bcf	4038,2,c	;volatile
  8564                           
  8565                           ;zigbee.c: 445: SSP1CON1bits.SSPM3 = 0;
  8566  002BFA  96C6               	bcf	4038,3,c	;volatile
  8567                           
  8568                           ;zigbee.c: 447: TRISCbits.TRISC5 = 0;
  8569  002BFC  9A94               	bcf	3988,5,c	;volatile
  8570                           
  8571                           ;zigbee.c: 448: TRISCbits.TRISC3 = 0;
  8572  002BFE  9694               	bcf	3988,3,c	;volatile
  8573                           
  8574                           ;zigbee.c: 449: SSP1CON1bits.SSPEN = 1;
  8575  002C00  8AC6               	bsf	4038,5,c	;volatile
  8576                           
  8577                           ;zigbee.c: 452: SSP1STATbits.SMP = 1;
  8578  002C02  8EC7               	bsf	4039,7,c	;volatile
  8579                           
  8580                           ;zigbee.c: 453: SSP1CON1bits.CKP = 0;
  8581  002C04  98C6               	bcf	4038,4,c	;volatile
  8582                           
  8583                           ;zigbee.c: 454: SSP1STATbits.CKE = 1;
  8584  002C06  8CC7               	bsf	4039,6,c	;volatile
  8585                           
  8586                           ;zigbee.c: 455: delay(10);
  8587  002C08  0E00               	movlw	0
  8588  002C0A  0100               	movlb	0	; () banked
  8589  002C0C  6FBE               	movwf	(delay@dly+1)& (0+255),b
  8590  002C0E  0E0A               	movlw	10
  8591  002C10  6FBD               	movwf	delay@dly& (0+255),b
  8592  002C12  EC52  F016         	call	_delay	;wreg free
  8593  002C16  0012               	return		;funcret
  8594  002C18                     __end_of_InitSPI:
  8595                           	opt stack 0
  8596                           tblptru	equ	0xFF8
  8597                           tblptrh	equ	0xFF7
  8598                           tblptrl	equ	0xFF6
  8599                           tablat	equ	0xFF5
  8600                           prodh	equ	0xFF4
  8601                           prodl	equ	0xFF3
  8602                           intcon	equ	0xFF2
  8603                           intcon2	equ	0xFF1
  8604                           postinc0	equ	0xFEE
  8605                           wreg	equ	0xFE8
  8606                           indf1	equ	0xFE7
  8607                           postdec1	equ	0xFE5
  8608                           fsr1h	equ	0xFE2
  8609                           fsr1l	equ	0xFE1
  8610                           indf2	equ	0xFDF
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8
  8614                           
  8615 ;; *************** function _delay *****************
  8616 ;; Defined at:
  8617 ;;		line 471 in file "zigbee.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  dly             2   21[BANK0 ] unsigned int 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  l               2   23[BANK0 ] unsigned int 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8631 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;Total ram usage:        4 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    8
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_InitSPI
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text50
  8646  002CA4                     __ptext50:
  8647                           	opt stack 0
  8648  002CA4                     _delay:
  8649                           	opt stack 21
  8650                           
  8651                           ;zigbee.c: 472: unsigned int l;
  8652                           ;zigbee.c: 473: for(l=0;l<dly;l++);
  8653                           
  8654                           ;incstack = 0
  8655  002CA4  0E00               	movlw	0
  8656  002CA6  0100               	movlb	0	; () banked
  8657  002CA8  6FC0               	movwf	(delay@l+1)& (0+255),b
  8658  002CAA  0E00               	movlw	0
  8659  002CAC  6FBF               	movwf	delay@l& (0+255),b
  8660  002CAE  D002               	goto	l541
  8661  002CB0                     
  8662                           ; BSR set to: 0
  8663                           
  8664                           ; BSR set to: 0
  8665  002CB0  4BBF               	infsnz	delay@l& (0+255),f,b
  8666  002CB2  2BC0               	incf	(delay@l+1)& (0+255),f,b
  8667  002CB4                     l541:
  8668                           
  8669                           ; BSR set to: 0
  8670                           
  8671                           ; BSR set to: 0
  8672  002CB4  51BD               	movf	delay@dly& (0+255),w,b
  8673  002CB6  5DBF               	subwf	delay@l& (0+255),w,b
  8674  002CB8  51BE               	movf	(delay@dly+1)& (0+255),w,b
  8675  002CBA  59C0               	subwfb	(delay@l+1)& (0+255),w,b
  8676  002CBC  B0D8               	btfsc	status,0,c
  8677  002CBE  0012               	return	
  8678  002CC0  D7F7               	goto	l542
  8679  002CC2                     __end_of_delay:
  8680                           	opt stack 0
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           postinc0	equ	0xFEE
  8690                           wreg	equ	0xFE8
  8691                           indf1	equ	0xFE7
  8692                           postdec1	equ	0xFE5
  8693                           fsr1h	equ	0xFE2
  8694                           fsr1l	equ	0xFE1
  8695                           indf2	equ	0xFDF
  8696                           fsr2h	equ	0xFDA
  8697                           fsr2l	equ	0xFD9
  8698                           status	equ	0xFD8
  8699                           
  8700 ;; *************** function _Clear_Zigbee_Store_Buffer *****************
  8701 ;; Defined at:
  8702 ;;		line 339 in file "07_May_Motion+LDR_Main.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;		None
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  d               1   21[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;Total ram usage:        1 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    8
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text51
  8731  002B86                     __ptext51:
  8732                           	opt stack 0
  8733  002B86                     _Clear_Zigbee_Store_Buffer:
  8734                           	opt stack 22
  8735                           
  8736                           ;07_May_Motion+LDR_Main.c: 340: unsigned char d;
  8737                           ;07_May_Motion+LDR_Main.c: 341: for(d=0;d<=5;d++){
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;incstack = 0
  8741  002B86  0E00               	movlw	0
  8742  002B88  0100               	movlb	0	; () banked
  8743  002B8A  6FBD               	movwf	Clear_Zigbee_Store_Buffer@d& (0+255),b
  8744  002B8C                     l4756:
  8745                           
  8746                           ; BSR set to: 0
  8747  002B8C  0E05               	movlw	5
  8748  002B8E  65BD               	cpfsgt	Clear_Zigbee_Store_Buffer@d& (0+255),b
  8749  002B90  D001               	goto	l928
  8750  002B92  0012               	return	
  8751  002B94                     l928:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;07_May_Motion+LDR_Main.c: 342: ZigBee_Receive_Buffer[d] = 0x00;
  8755                           
  8756                           ; BSR set to: 0
  8757  002B94  51BD               	movf	Clear_Zigbee_Store_Buffer@d& (0+255),w,b
  8758  002B96  0D01               	mullw	1
  8759  002B98  0E60               	movlw	low _ZigBee_Receive_Buffer
  8760  002B9A  24F3               	addwf	prodl,w,c
  8761  002B9C  6ED9               	movwf	fsr2l,c
  8762  002B9E  0E00               	movlw	high _ZigBee_Receive_Buffer
  8763  002BA0  20F4               	addwfc	prodh,w,c
  8764  002BA2  6EDA               	movwf	fsr2h,c
  8765  002BA4  0E00               	movlw	0
  8766  002BA6  6EDF               	movwf	indf2,c
  8767                           
  8768                           ; BSR set to: 0
  8769  002BA8  2BBD               	incf	Clear_Zigbee_Store_Buffer@d& (0+255),f,b
  8770  002BAA  D7F0               	goto	l4756
  8771  002BAC                     __end_of_Clear_Zigbee_Store_Buffer:
  8772                           	opt stack 0
  8773                           tblptru	equ	0xFF8
  8774                           tblptrh	equ	0xFF7
  8775                           tblptrl	equ	0xFF6
  8776                           tablat	equ	0xFF5
  8777                           prodh	equ	0xFF4
  8778                           prodl	equ	0xFF3
  8779                           intcon	equ	0xFF2
  8780                           intcon2	equ	0xFF1
  8781                           postinc0	equ	0xFEE
  8782                           wreg	equ	0xFE8
  8783                           indf1	equ	0xFE7
  8784                           postdec1	equ	0xFE5
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           indf2	equ	0xFDF
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _Clear_Data *****************
  8793 ;; Defined at:
  8794 ;;		line 4 in file "zigbee.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  n               2   21[BANK0 ] unsigned int 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;Total ram usage:        2 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    8
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text52
  8823  002908                     __ptext52:
  8824                           	opt stack 0
  8825  002908                     _Clear_Data:
  8826                           	opt stack 22
  8827                           
  8828                           ;zigbee.c: 5: unsigned int n=0;
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;incstack = 0
  8832  002908  0E00               	movlw	0
  8833  00290A  0100               	movlb	0	; () banked
  8834  00290C  6FBE               	movwf	(Clear_Data@n+1)& (0+255),b
  8835  00290E  0E00               	movlw	0
  8836  002910  6FBD               	movwf	Clear_Data@n& (0+255),b
  8837                           
  8838                           ;zigbee.c: 6: for(n=0;n<=5;n++){
  8839  002912  0E00               	movlw	0
  8840  002914  6FBE               	movwf	(Clear_Data@n+1)& (0+255),b
  8841  002916  0E00               	movlw	0
  8842  002918  6FBD               	movwf	Clear_Data@n& (0+255),b
  8843  00291A                     l4536:
  8844                           
  8845                           ; BSR set to: 0
  8846  00291A  51BE               	movf	(Clear_Data@n+1)& (0+255),w,b
  8847  00291C  E10F               	bnz	l387
  8848  00291E  0E06               	movlw	6
  8849  002920  5DBD               	subwf	Clear_Data@n& (0+255),w,b
  8850  002922  B0D8               	btfsc	status,0,c
  8851  002924  0012               	return	
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;zigbee.c: 7: DATA_RX[n]=0;
  8855                           
  8856                           ; BSR set to: 0
  8857                           
  8858                           ; BSR set to: 0
  8859  002926  0EA0               	movlw	low _DATA_RX
  8860  002928  25BD               	addwf	Clear_Data@n& (0+255),w,b
  8861  00292A  6ED9               	movwf	fsr2l,c
  8862  00292C  0E00               	movlw	high _DATA_RX
  8863  00292E  21BE               	addwfc	(Clear_Data@n+1)& (0+255),w,b
  8864  002930  6EDA               	movwf	fsr2h,c
  8865  002932  0E00               	movlw	0
  8866  002934  6EDF               	movwf	indf2,c
  8867                           
  8868                           ; BSR set to: 0
  8869  002936  4BBD               	infsnz	Clear_Data@n& (0+255),f,b
  8870  002938  2BBE               	incf	(Clear_Data@n+1)& (0+255),f,b
  8871  00293A  D7EF               	goto	l4536
  8872  00293C                     l387:
  8873                           
  8874                           ; BSR set to: 0
  8875  00293C  0012               	return		;funcret
  8876  00293E                     __end_of_Clear_Data:
  8877                           	opt stack 0
  8878                           tblptru	equ	0xFF8
  8879                           tblptrh	equ	0xFF7
  8880                           tblptrl	equ	0xFF6
  8881                           tablat	equ	0xFF5
  8882                           prodh	equ	0xFF4
  8883                           prodl	equ	0xFF3
  8884                           intcon	equ	0xFF2
  8885                           intcon2	equ	0xFF1
  8886                           postinc0	equ	0xFEE
  8887                           wreg	equ	0xFE8
  8888                           indf1	equ	0xFE7
  8889                           postdec1	equ	0xFE5
  8890                           fsr1h	equ	0xFE2
  8891                           fsr1l	equ	0xFE1
  8892                           indf2	equ	0xFDF
  8893                           fsr2h	equ	0xFDA
  8894                           fsr2l	equ	0xFD9
  8895                           status	equ	0xFD8
  8896                           
  8897 ;; *************** function _ADC_GetConversion *****************
  8898 ;; Defined at:
  8899 ;;		line 106 in file "mcc_generated_files/adc.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  channel         1    wreg     enum E7387
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  channel         1   25[BANK0 ] enum E7387
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  2   21[BANK0 ] unsigned int 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;Total ram usage:        5 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    8
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_main
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text53
  8928  00293E                     __ptext53:
  8929                           	opt stack 0
  8930  00293E                     _ADC_GetConversion:
  8931                           	opt stack 22
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;incstack = 0
  8935                           ;ADC_GetConversion@channel stored from wreg
  8936  00293E  0100               	movlb	0	; () banked
  8937  002940  6FC1               	movwf	ADC_GetConversion@channel& (0+255),b
  8938                           
  8939                           ;adc.c: 109: ADCON0bits.CHS = channel;
  8940  002942  C0C1  F0BF         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8941  002946  0100               	movlb	0	; () banked
  8942  002948  47BF               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8943  00294A  47BF               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8944  00294C  50C2               	movf	4034,w,c	;volatile
  8945  00294E  19BF               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8946  002950  0B83               	andlw	-125
  8947  002952  19BF               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8948  002954  6EC2               	movwf	4034,c	;volatile
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;adc.c: 112: ADCON0bits.ADON = 1;
  8952  002956  80C2               	bsf	4034,0,c	;volatile
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;adc.c: 116: ADCON0bits.GO_nDONE = 1;
  8956  002958  82C2               	bsf	4034,1,c	;volatile
  8957  00295A                     
  8958                           ; BSR set to: 0
  8959                           ;adc.c: 120: {
  8960  00295A  B2C2               	btfsc	4034,1,c	;volatile
  8961  00295C  D7FE               	goto	l101
  8962                           
  8963                           ;adc.c: 121: }
  8964                           ;adc.c: 124: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8965  00295E  50C4               	movf	4036,w,c	;volatile
  8966  002960  0100               	movlb	0	; () banked
  8967  002962  6FC0               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  8968  002964  6BBF               	clrf	??_ADC_GetConversion& (0+255),b
  8969  002966  50C3               	movf	4035,w,c	;volatile
  8970  002968  25BF               	addwf	??_ADC_GetConversion& (0+255),w,b
  8971  00296A  6FBD               	movwf	?_ADC_GetConversion& (0+255),b
  8972  00296C  0E00               	movlw	0
  8973  00296E  21C0               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  8974  002970  6FBE               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  8975  002972  0012               	return	
  8976  002974                     __end_of_ADC_GetConversion:
  8977                           	opt stack 0
  8978                           tblptru	equ	0xFF8
  8979                           tblptrh	equ	0xFF7
  8980                           tblptrl	equ	0xFF6
  8981                           tablat	equ	0xFF5
  8982                           prodh	equ	0xFF4
  8983                           prodl	equ	0xFF3
  8984                           intcon	equ	0xFF2
  8985                           intcon2	equ	0xFF1
  8986                           postinc0	equ	0xFEE
  8987                           wreg	equ	0xFE8
  8988                           indf1	equ	0xFE7
  8989                           postdec1	equ	0xFE5
  8990                           fsr1h	equ	0xFE2
  8991                           fsr1l	equ	0xFE1
  8992                           indf2	equ	0xFDF
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  8998 ;; Defined at:
  8999 ;;		line 67 in file "07_May_Motion+LDR_Main.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9017 ;;Total ram usage:       21 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; Hardware stack levels required when called:    7
  9020 ;; This function calls:
  9021 ;;		_ScanInput
  9022 ;;		_TMR0_ISR
  9023 ;; This function is called by:
  9024 ;;		Interrupt level 1
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	intcodelo
  9029  000018                     __pintcodelo:
  9030                           	opt stack 0
  9031  000018                     _INTERRUPT_InterruptManagerLow:
  9032                           	opt stack 18
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;incstack = 0
  9036  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9037  00001A  CFD8 F0A8          	movff	status,??_INTERRUPT_InterruptManagerLow
  9038  00001E  CFE8 F0A9          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  9039  000022  CFE0 F0AA          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  9040  000026  CFFA F0AB          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  9041  00002A  CFFB F0AC          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  9042  00002E  CFE9 F0AD          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  9043  000032  CFEA F0AE          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  9044  000036  CFE1 F0AF          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  9045  00003A  CFE2 F0B0          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  9046  00003E  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  9047  000042  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  9048  000046  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  9049  00004A  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  9050  00004E  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  9051  000052  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  9052  000056  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  9053  00005A  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  9054  00005E  C04A  F0B9         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  9055  000062  C04B  F0BA         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  9056  000066  C04C  F0BB         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  9057  00006A  C04D  F0BC         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  9058                           
  9059                           ;07_May_Motion+LDR_Main.c: 70: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9060  00006E  BAF2               	btfsc	intcon,5,c	;volatile
  9061  000070  A4F2               	btfss	intcon,2,c	;volatile
  9062  000072  D02B               	goto	i1l857
  9063                           
  9064                           ;07_May_Motion+LDR_Main.c: 71: {
  9065                           ;07_May_Motion+LDR_Main.c: 72: tick++;
  9066  000074  2A03               	incf	_tick,f,c
  9067                           
  9068                           ;07_May_Motion+LDR_Main.c: 73: Time_start++;
  9069  000076  0100               	movlb	0	; () banked
  9070  000078  4B7D               	infsnz	_Time_start& (0+255),f,b
  9071  00007A  2B7E               	incf	(_Time_start+1)& (0+255),f,b
  9072                           
  9073                           ;07_May_Motion+LDR_Main.c: 74: Relay_On_Time++;
  9074  00007C  4B7B               	infsnz	_Relay_On_Time& (0+255),f,b
  9075  00007E  2B7C               	incf	(_Relay_On_Time+1)& (0+255),f,b
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;07_May_Motion+LDR_Main.c: 75: if(Relay_On_Time>=5000){
  9079  000080  0E88               	movlw	136
  9080  000082  5D7B               	subwf	_Relay_On_Time& (0+255),w,b
  9081  000084  0E13               	movlw	19
  9082  000086  597C               	subwfb	(_Relay_On_Time+1)& (0+255),w,b
  9083  000088  A0D8               	btfss	status,0,c
  9084  00008A  D006               	goto	i1l858
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;07_May_Motion+LDR_Main.c: 76: F_Relay_Time=1;
  9088  00008C  0E01               	movlw	1
  9089  00008E  6F92               	movwf	_F_Relay_Time& (0+255),b
  9090                           
  9091                           ;07_May_Motion+LDR_Main.c: 77: Relay_On_Time=0;
  9092  000090  0E00               	movlw	0
  9093  000092  6F7C               	movwf	(_Relay_On_Time+1)& (0+255),b
  9094  000094  0E00               	movlw	0
  9095  000096  6F7B               	movwf	_Relay_On_Time& (0+255),b
  9096  000098                     i1l858:
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;07_May_Motion+LDR_Main.c: 78: }
  9100                           ;07_May_Motion+LDR_Main.c: 79: if( tick > 30 ){
  9101                           
  9102                           ; BSR set to: 0
  9103  000098  0E1E               	movlw	30
  9104  00009A  6403               	cpfsgt	_tick,c
  9105  00009C  D004               	goto	i1l859
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;07_May_Motion+LDR_Main.c: 80: ScanInput();
  9109  00009E  EC36  F015         	call	_ScanInput	;wreg free
  9110                           
  9111                           ;07_May_Motion+LDR_Main.c: 81: tick = 0;
  9112  0000A2  0E00               	movlw	0
  9113  0000A4  6E03               	movwf	_tick,c
  9114  0000A6                     i1l859:
  9115                           
  9116                           ;07_May_Motion+LDR_Main.c: 82: }
  9117                           ;07_May_Motion+LDR_Main.c: 83: if(F_BUZZER==1){
  9118  0000A6  0100               	movlb	0	; () banked
  9119  0000A8  0598               	decf	_F_BUZZER& (0+255),w,b
  9120  0000AA  A4D8               	btfss	status,2,c
  9121  0000AC  D00B               	goto	i1l861
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;07_May_Motion+LDR_Main.c: 84: tick2++;
  9125  0000AE  2A02               	incf	_tick2,f,c
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;07_May_Motion+LDR_Main.c: 85: PORTAbits.RA4=1;
  9129  0000B0  8880               	bsf	3968,4,c	;volatile
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;07_May_Motion+LDR_Main.c: 86: if(tick2>200){
  9133  0000B2  0EC8               	movlw	200
  9134  0000B4  6402               	cpfsgt	_tick2,c
  9135  0000B6  D006               	goto	i1l861
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;07_May_Motion+LDR_Main.c: 87: tick2=0;
  9139  0000B8  0E00               	movlw	0
  9140  0000BA  6E02               	movwf	_tick2,c
  9141                           
  9142                           ;07_May_Motion+LDR_Main.c: 88: F_BUZZER=0;
  9143  0000BC  0E00               	movlw	0
  9144  0000BE  6F98               	movwf	_F_BUZZER& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;07_May_Motion+LDR_Main.c: 89: PORTAbits.RA4=0;
  9148  0000C0  9880               	bcf	3968,4,c	;volatile
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;07_May_Motion+LDR_Main.c: 90: __nop();
  9152  0000C2  F000               	nop	
  9153  0000C4                     i1l861:
  9154                           
  9155                           ;07_May_Motion+LDR_Main.c: 91: }
  9156                           ;07_May_Motion+LDR_Main.c: 92: }
  9157                           ;07_May_Motion+LDR_Main.c: 93: TMR0_ISR();
  9158  0000C4  EC89  F015         	call	_TMR0_ISR	;wreg free
  9159                           
  9160                           ;07_May_Motion+LDR_Main.c: 94: }
  9161  0000C8  D001               	goto	i1l862
  9162  0000CA                     i1l857:
  9163                           
  9164                           ;07_May_Motion+LDR_Main.c: 95: else
  9165                           ;07_May_Motion+LDR_Main.c: 96: {
  9166                           ;07_May_Motion+LDR_Main.c: 97: __nop();
  9167  0000CA  F000               	nop	
  9168  0000CC                     i1l862:
  9169  0000CC  C0BC  F04D         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
  9170  0000D0  C0BB  F04C         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
  9171  0000D4  C0BA  F04B         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
  9172  0000D8  C0B9  F04A         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
  9173  0000DC  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
  9174  0000E0  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
  9175  0000E4  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
  9176  0000E8  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
  9177  0000EC  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
  9178  0000F0  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
  9179  0000F4  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
  9180  0000F8  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
  9181  0000FC  C0B0  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
  9182  000100  C0AF  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
  9183  000104  C0AE  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
  9184  000108  C0AD  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
  9185  00010C  C0AC  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  9186  000110  C0AB  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  9187  000114  C0AA  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  9188  000118  C0A9  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  9189  00011C  C0A8  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  9190  000120  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9191  000122  0010               	retfie	
  9192  000124                     __end_of_INTERRUPT_InterruptManagerLow:
  9193                           	opt stack 0
  9194                           pclatu	equ	0xFFB
  9195                           pclath	equ	0xFFA
  9196                           tblptru	equ	0xFF8
  9197                           tblptrh	equ	0xFF7
  9198                           tblptrl	equ	0xFF6
  9199                           tablat	equ	0xFF5
  9200                           prodh	equ	0xFF4
  9201                           prodl	equ	0xFF3
  9202                           intcon	equ	0xFF2
  9203                           intcon2	equ	0xFF1
  9204                           postinc0	equ	0xFEE
  9205                           fsr0h	equ	0xFEA
  9206                           fsr0l	equ	0xFE9
  9207                           wreg	equ	0xFE8
  9208                           indf1	equ	0xFE7
  9209                           postdec1	equ	0xFE5
  9210                           fsr1h	equ	0xFE2
  9211                           fsr1l	equ	0xFE1
  9212                           bsr	equ	0xFE0
  9213                           indf2	equ	0xFDF
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function _TMR0_ISR *****************
  9219 ;; Defined at:
  9220 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      void 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    6
  9241 ;; This function calls:
  9242 ;;		_TMR0_CallBack
  9243 ;; This function is called by:
  9244 ;;		_INTERRUPT_InterruptManagerLow
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text55
  9249  002B12                     __ptext55:
  9250                           	opt stack 0
  9251  002B12                     _TMR0_ISR:
  9252                           	opt stack 18
  9253                           
  9254                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
  9255                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  9256                           
  9257                           ;incstack = 0
  9258  002B12  94F2               	bcf	intcon,2,c	;volatile
  9259                           
  9260                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  9261  002B14  C09F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  9262                           
  9263                           ;tmr0.c: 139: if (++CountCallBack >= 2)
  9264  002B18  0100               	movlb	0	; () banked
  9265  002B1A  4B8B               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  9266  002B1C  2B8C               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9267  002B1E  518C               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9268  002B20  E104               	bnz	i1u501_20
  9269  002B22  0E02               	movlw	2
  9270  002B24  5D8B               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  9271  002B26  A0D8               	btfss	status,0,c
  9272  002B28  0012               	return	
  9273  002B2A                     i1u501_20:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;tmr0.c: 140: {
  9277                           ;tmr0.c: 142: TMR0_CallBack();
  9278  002B2A  EC0C  F016         	call	_TMR0_CallBack	;wreg free
  9279                           
  9280                           ;tmr0.c: 145: CountCallBack = 0;
  9281  002B2E  0E00               	movlw	0
  9282  002B30  0100               	movlb	0	; () banked
  9283  002B32  6F8C               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  9284  002B34  0E00               	movlw	0
  9285  002B36  6F8B               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  9286  002B38  0012               	return	
  9287  002B3A                     __end_of_TMR0_ISR:
  9288                           	opt stack 0
  9289                           pclatu	equ	0xFFB
  9290                           pclath	equ	0xFFA
  9291                           tblptru	equ	0xFF8
  9292                           tblptrh	equ	0xFF7
  9293                           tblptrl	equ	0xFF6
  9294                           tablat	equ	0xFF5
  9295                           prodh	equ	0xFF4
  9296                           prodl	equ	0xFF3
  9297                           intcon	equ	0xFF2
  9298                           intcon2	equ	0xFF1
  9299                           postinc0	equ	0xFEE
  9300                           fsr0h	equ	0xFEA
  9301                           fsr0l	equ	0xFE9
  9302                           wreg	equ	0xFE8
  9303                           indf1	equ	0xFE7
  9304                           postdec1	equ	0xFE5
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           bsr	equ	0xFE0
  9308                           indf2	equ	0xFDF
  9309                           fsr2h	equ	0xFDA
  9310                           fsr2l	equ	0xFD9
  9311                           status	equ	0xFD8
  9312                           
  9313 ;; *************** function _TMR0_CallBack *****************
  9314 ;; Defined at:
  9315 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;		None
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  1    wreg      void 
  9322 ;; Registers used:
  9323 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;Total ram usage:        0 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    5
  9336 ;; This function calls:
  9337 ;;		Absolute function
  9338 ;;		_TMR0_DefaultInterruptHandler
  9339 ;; This function is called by:
  9340 ;;		_TMR0_ISR
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text56
  9345  002C18                     __ptext56:
  9346                           	opt stack 0
  9347  002C18                     _TMR0_CallBack:
  9348                           	opt stack 18
  9349                           
  9350                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;incstack = 0
  9354  002C18  0100               	movlb	0	; () banked
  9355  002C1A  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9356  002C1C  1174               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9357  002C1E  1175               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9358  002C20  B4D8               	btfsc	status,2,c
  9359  002C22  0012               	return	
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;tmr0.c: 156: {
  9363                           ;tmr0.c: 157: TMR0_InterruptHandler();
  9364  002C24  D801               	call	i1u500_28
  9365  002C26  0012               	return	
  9366  002C28                     i1u500_28:
  9367  002C28  0005               	push	
  9368  002C2A  6EFA               	movwf	pclath,c
  9369  002C2C  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9370  002C2E  6EFD               	movwf	tosl,c
  9371  002C30  5174               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9372  002C32  6EFE               	movwf	tosh,c
  9373  002C34  5175               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9374  002C36  6EFF               	movwf	tosu,c
  9375  002C38  50FA               	movf	pclath,w,c
  9376  002C3A  0012               	return		;indir
  9377  002C3C                     __end_of_TMR0_CallBack:
  9378                           	opt stack 0
  9379                           tosu	equ	0xFFF
  9380                           tosh	equ	0xFFE
  9381                           tosl	equ	0xFFD
  9382                           pclatu	equ	0xFFB
  9383                           pclath	equ	0xFFA
  9384                           tblptru	equ	0xFF8
  9385                           tblptrh	equ	0xFF7
  9386                           tblptrl	equ	0xFF6
  9387                           tablat	equ	0xFF5
  9388                           prodh	equ	0xFF4
  9389                           prodl	equ	0xFF3
  9390                           intcon	equ	0xFF2
  9391                           intcon2	equ	0xFF1
  9392                           postinc0	equ	0xFEE
  9393                           fsr0h	equ	0xFEA
  9394                           fsr0l	equ	0xFE9
  9395                           wreg	equ	0xFE8
  9396                           indf1	equ	0xFE7
  9397                           postdec1	equ	0xFE5
  9398                           fsr1h	equ	0xFE2
  9399                           fsr1l	equ	0xFE1
  9400                           bsr	equ	0xFE0
  9401                           indf2	equ	0xFDF
  9402                           fsr2h	equ	0xFDA
  9403                           fsr2l	equ	0xFD9
  9404                           status	equ	0xFD8
  9405                           
  9406 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9407 ;; Defined at:
  9408 ;;		line 165 in file "mcc_generated_files/tmr0.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;		None
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;		None
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		None
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;Total ram usage:        0 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    4
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_TMR0_Initialize
  9433 ;;		_TMR0_CallBack
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text57
  9438  002E72                     __ptext57:
  9439                           	opt stack 0
  9440  002E72                     _TMR0_DefaultInterruptHandler:
  9441                           	opt stack 18
  9442                           
  9443                           ;incstack = 0
  9444  002E72  0012               	return		;funcret
  9445  002E74                     __end_of_TMR0_DefaultInterruptHandler:
  9446                           	opt stack 0
  9447                           tosu	equ	0xFFF
  9448                           tosh	equ	0xFFE
  9449                           tosl	equ	0xFFD
  9450                           pclatu	equ	0xFFB
  9451                           pclath	equ	0xFFA
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           postinc0	equ	0xFEE
  9461                           fsr0h	equ	0xFEA
  9462                           fsr0l	equ	0xFE9
  9463                           wreg	equ	0xFE8
  9464                           indf1	equ	0xFE7
  9465                           postdec1	equ	0xFE5
  9466                           fsr1h	equ	0xFE2
  9467                           fsr1l	equ	0xFE1
  9468                           bsr	equ	0xFE0
  9469                           indf2	equ	0xFDF
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474 ;; *************** function _ScanInput *****************
  9475 ;; Defined at:
  9476 ;;		line 314 in file "07_May_Motion+LDR_Main.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;Total ram usage:        0 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:    4
  9497 ;; This function calls:
  9498 ;;		Nothing
  9499 ;; This function is called by:
  9500 ;;		_INTERRUPT_InterruptManagerLow
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text58
  9505  002A6C                     __ptext58:
  9506                           	opt stack 0
  9507  002A6C                     _ScanInput:
  9508                           	opt stack 20
  9509                           
  9510                           ;07_May_Motion+LDR_Main.c: 316: portread = PORTE;
  9511                           
  9512                           ;incstack = 0
  9513  002A6C  CF84 F004          	movff	3972,_portread	;volatile
  9514                           
  9515                           ;07_May_Motion+LDR_Main.c: 318: if((portread & 0x04)!=0){
  9516  002A70  A404               	btfss	_portread,2,c
  9517  002A72  D006               	goto	i1l916
  9518                           
  9519                           ;07_May_Motion+LDR_Main.c: 319: T_Calling=0;
  9520  002A74  0E00               	movlw	0
  9521  002A76  6E01               	movwf	_T_Calling,c
  9522                           
  9523                           ;07_May_Motion+LDR_Main.c: 320: F_Calling=0;
  9524  002A78  0E00               	movlw	0
  9525  002A7A  0100               	movlb	0	; () banked
  9526  002A7C  6F93               	movwf	_F_Calling& (0+255),b
  9527                           
  9528                           ;07_May_Motion+LDR_Main.c: 321: }
  9529  002A7E  D005               	goto	i1l918
  9530  002A80                     i1l916:
  9531                           
  9532                           ;07_May_Motion+LDR_Main.c: 322: else if(F_Calling!= 2){
  9533                           
  9534                           ; BSR set to: 0
  9535  002A80  0E02               	movlw	2
  9536  002A82  0100               	movlb	0	; () banked
  9537  002A84  1993               	xorwf	_F_Calling& (0+255),w,b
  9538  002A86  A4D8               	btfss	status,2,c
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;07_May_Motion+LDR_Main.c: 323: T_Calling++;
  9542  002A88  2A01               	incf	_T_Calling,f,c
  9543  002A8A                     i1l918:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;07_May_Motion+LDR_Main.c: 324: }
  9547                           ;07_May_Motion+LDR_Main.c: 326: if(T_Calling > 30){
  9548                           
  9549                           ; BSR set to: 0
  9550                           
  9551                           ; BSR set to: 0
  9552  002A8A  0E1E               	movlw	30
  9553  002A8C  6401               	cpfsgt	_T_Calling,c
  9554  002A8E  0012               	return	
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;07_May_Motion+LDR_Main.c: 327: F_Calling = 1;
  9558  002A90  0E01               	movlw	1
  9559  002A92  6F93               	movwf	_F_Calling& (0+255),b
  9560                           
  9561                           ;07_May_Motion+LDR_Main.c: 328: T_Calling = 0;
  9562  002A94  0E00               	movlw	0
  9563  002A96  6E01               	movwf	_T_Calling,c
  9564  002A98  0012               	return	
  9565  002A9A                     __end_of_ScanInput:
  9566                           	opt stack 0
  9567                           tosu	equ	0xFFF
  9568                           tosh	equ	0xFFE
  9569                           tosl	equ	0xFFD
  9570                           pclatu	equ	0xFFB
  9571                           pclath	equ	0xFFA
  9572                           tblptru	equ	0xFF8
  9573                           tblptrh	equ	0xFF7
  9574                           tblptrl	equ	0xFF6
  9575                           tablat	equ	0xFF5
  9576                           prodh	equ	0xFF4
  9577                           prodl	equ	0xFF3
  9578                           intcon	equ	0xFF2
  9579                           intcon2	equ	0xFF1
  9580                           postinc0	equ	0xFEE
  9581                           fsr0h	equ	0xFEA
  9582                           fsr0l	equ	0xFE9
  9583                           wreg	equ	0xFE8
  9584                           indf1	equ	0xFE7
  9585                           postdec1	equ	0xFE5
  9586                           fsr1h	equ	0xFE2
  9587                           fsr1l	equ	0xFE1
  9588                           bsr	equ	0xFE0
  9589                           indf2	equ	0xFDF
  9590                           fsr2h	equ	0xFDA
  9591                           fsr2l	equ	0xFD9
  9592                           status	equ	0xFD8
  9593                           
  9594 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  9595 ;; Defined at:
  9596 ;;		line 39 in file "07_May_Motion+LDR_Main.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;Total ram usage:       20 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    3
  9617 ;; This function calls:
  9618 ;;		_INT0_ISR
  9619 ;;		_Zigbee_data_Store_Buffer
  9620 ;;		_read_RX_FIFO
  9621 ;;		i2_Clear_Data
  9622 ;;		i2_Xor_check
  9623 ;;		i2_read_ZIGBEE_short
  9624 ;; This function is called by:
  9625 ;;		Interrupt level 2
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	intcode
  9630  000008                     __pintcode:
  9631                           	opt stack 0
  9632  000008                     _INTERRUPT_InterruptManagerHigh:
  9633                           	opt stack 18
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;incstack = 0
  9637  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9638  00000A  EF1C  F010         	goto	int_func
  9639                           tosu	equ	0xFFF
  9640                           tosh	equ	0xFFE
  9641                           tosl	equ	0xFFD
  9642                           pclatu	equ	0xFFB
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           intcon2	equ	0xFF1
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           indf1	equ	0xFE7
  9657                           postdec1	equ	0xFE5
  9658                           fsr1h	equ	0xFE2
  9659                           fsr1l	equ	0xFE1
  9660                           bsr	equ	0xFE0
  9661                           indf2	equ	0xFDF
  9662                           fsr2h	equ	0xFDA
  9663                           fsr2l	equ	0xFD9
  9664                           status	equ	0xFD8
  9665                           
  9666                           	psect	intcode_body
  9667  002038                     __pintcode_body:
  9668                           	opt stack 18
  9669  002038                     int_func:
  9670                           	opt stack 18
  9671  002038  CFFA F038          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
  9672  00203C  CFFB F039          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
  9673  002040  CFE9 F03A          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
  9674  002044  CFEA F03B          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
  9675  002048  CFE1 F03C          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
  9676  00204C  CFE2 F03D          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
  9677  002050  CFD9 F03E          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
  9678  002054  CFDA F03F          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
  9679  002058  CFF3 F040          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
  9680  00205C  CFF4 F041          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
  9681  002060  CFF6 F042          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
  9682  002064  CFF7 F043          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
  9683  002068  CFF8 F044          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
  9684  00206C  CFF5 F045          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
  9685  002070  C04A  F046         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
  9686  002074  C04B  F047         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
  9687  002078  C04C  F048         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
  9688  00207C  C04D  F049         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
  9689                           
  9690                           ;07_May_Motion+LDR_Main.c: 42: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  9691  002080  B8F2               	btfsc	intcon,4,c	;volatile
  9692  002082  A2F2               	btfss	intcon,1,c	;volatile
  9693  002084  D029               	goto	i2l847
  9694                           
  9695                           ;07_May_Motion+LDR_Main.c: 43: {
  9696                           ;07_May_Motion+LDR_Main.c: 44: INTTRUPT=read_ZIGBEE_short(0X31);
  9697  002086  0E31               	movlw	49
  9698  002088  EC41  F016         	call	i2_read_ZIGBEE_short
  9699  00208C  6E25               	movwf	_INTTRUPT,c
  9700                           
  9701                           ;07_May_Motion+LDR_Main.c: 46: if((INTTRUPT & 0x08)==0x08)
  9702  00208E  A625               	btfss	_INTTRUPT,3,c
  9703  002090  D020               	goto	i2l850
  9704                           
  9705                           ;07_May_Motion+LDR_Main.c: 47: {
  9706                           ;07_May_Motion+LDR_Main.c: 48: INTCONbits.GIE=0;
  9707  002092  9EF2               	bcf	intcon,7,c	;volatile
  9708                           
  9709                           ;07_May_Motion+LDR_Main.c: 49: read_RX_FIFO();
  9710  002094  EC5F  F00B         	call	_read_RX_FIFO	;wreg free
  9711                           
  9712                           ;07_May_Motion+LDR_Main.c: 50: INTCONbits.GIE=1;
  9713  002098  8EF2               	bsf	intcon,7,c	;volatile
  9714                           
  9715                           ;07_May_Motion+LDR_Main.c: 51: CRC=Xor_check(DATA_RX,3);
  9716  00209A  0EA0               	movlw	low _DATA_RX
  9717  00209C  6E26               	movwf	i2Xor_check@data_value,c
  9718  00209E  0E00               	movlw	high _DATA_RX
  9719  0020A0  6E27               	movwf	i2Xor_check@data_value+1,c
  9720  0020A2  0E03               	movlw	3
  9721  0020A4  6E28               	movwf	i2Xor_check@length,c
  9722  0020A6  EC27  F014         	call	i2_Xor_check	;wreg free
  9723  0020AA  C026  F083         	movff	?i2_Xor_check,_CRC
  9724  0020AE  C027  F084         	movff	?i2_Xor_check+1,_CRC+1
  9725                           
  9726                           ;07_May_Motion+LDR_Main.c: 52: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]);
  9727  0020B2  0100               	movlb	0	; () banked
  9728  0020B4  51A4               	movf	(_DATA_RX+4)& (0+255),w,b
  9729  0020B6  6E36               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
  9730  0020B8  51A3               	movf	(_DATA_RX+3)& (0+255),w,b
  9731  0020BA  6F87               	movwf	_Rv_CRC& (0+255),b
  9732  0020BC  C036  F088         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;07_May_Motion+LDR_Main.c: 53: if(DATA_RX[0]=='*'){
  9736  0020C0  0E2A               	movlw	42
  9737  0020C2  19A0               	xorwf	_DATA_RX& (0+255),w,b
  9738  0020C4  A4D8               	btfss	status,2,c
  9739  0020C6  D003               	goto	i2l849
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;07_May_Motion+LDR_Main.c: 54: Clear_Data();
  9743  0020C8  ECD4  F014         	call	i2_Clear_Data	;wreg free
  9744                           
  9745                           ;07_May_Motion+LDR_Main.c: 55: }
  9746  0020CC  D002               	goto	i2l850
  9747  0020CE                     i2l849:
  9748                           
  9749                           ;07_May_Motion+LDR_Main.c: 56: else
  9750                           ;07_May_Motion+LDR_Main.c: 57: Zigbee_data_Store_Buffer();
  9751  0020CE  ECEE  F014         	call	_Zigbee_data_Store_Buffer	;wreg free
  9752  0020D2                     i2l850:
  9753                           
  9754                           ;07_May_Motion+LDR_Main.c: 58: }
  9755                           ;07_May_Motion+LDR_Main.c: 59: INT0_ISR();
  9756  0020D2  EC32  F017         	call	_INT0_ISR	;wreg free
  9757                           
  9758                           ;07_May_Motion+LDR_Main.c: 60: }
  9759  0020D6  D001               	goto	i2l851
  9760  0020D8                     i2l847:
  9761                           
  9762                           ;07_May_Motion+LDR_Main.c: 61: else
  9763                           ;07_May_Motion+LDR_Main.c: 62: {
  9764                           ;07_May_Motion+LDR_Main.c: 63: __nop();
  9765  0020D8  F000               	nop	
  9766  0020DA                     i2l851:
  9767  0020DA  C049  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
  9768  0020DE  C048  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
  9769  0020E2  C047  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
  9770  0020E6  C046  F04A         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
  9771  0020EA  C045  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
  9772  0020EE  C044  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
  9773  0020F2  C043  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
  9774  0020F6  C042  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
  9775  0020FA  C041  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
  9776  0020FE  C040  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
  9777  002102  C03F  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
  9778  002106  C03E  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
  9779  00210A  C03D  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
  9780  00210E  C03C  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
  9781  002112  C03B  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
  9782  002116  C03A  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
  9783  00211A  C039  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
  9784  00211E  C038  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
  9785  002122  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9786  002124  0011               	retfie		f
  9787  002126                     __end_of_INTERRUPT_InterruptManagerHigh:
  9788                           	opt stack 0
  9789                           tosu	equ	0xFFF
  9790                           tosh	equ	0xFFE
  9791                           tosl	equ	0xFFD
  9792                           pclatu	equ	0xFFB
  9793                           pclath	equ	0xFFA
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           intcon	equ	0xFF2
  9801                           intcon2	equ	0xFF1
  9802                           postinc0	equ	0xFEE
  9803                           fsr0h	equ	0xFEA
  9804                           fsr0l	equ	0xFE9
  9805                           wreg	equ	0xFE8
  9806                           indf1	equ	0xFE7
  9807                           postdec1	equ	0xFE5
  9808                           fsr1h	equ	0xFE2
  9809                           fsr1l	equ	0xFE1
  9810                           bsr	equ	0xFE0
  9811                           indf2	equ	0xFDF
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function i2_read_ZIGBEE_short *****************
  9817 ;; Defined at:
  9818 ;;		line 403 in file "zigbee.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  address         1    wreg     unsigned char 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  address         1    2[COMRAM] unsigned char 
  9823 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      unsigned char 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;Total ram usage:        2 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    1
  9840 ;; This function calls:
  9841 ;;		i2_SPI_Read
  9842 ;;		i2_SPI_Write
  9843 ;; This function is called by:
  9844 ;;		_INTERRUPT_InterruptManagerHigh
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text60
  9849  002C82                     __ptext60:
  9850                           	opt stack 0
  9851  002C82                     i2_read_ZIGBEE_short:
  9852                           	opt stack 19
  9853                           
  9854                           ;incstack = 0
  9855                           ;i2read_ZIGBEE_short@address stored from wreg
  9856  002C82  6E28               	movwf	i2read_ZIGBEE_short@address,c
  9857                           
  9858                           ;zigbee.c: 404: unsigned char data_r = 0;
  9859  002C84  0E00               	movlw	0
  9860  002C86  6E29               	movwf	i2read_ZIGBEE_short@data_r,c
  9861                           
  9862                           ;zigbee.c: 406: PORTCbits.RC0=0;
  9863  002C88  9082               	bcf	3970,0,c	;volatile
  9864                           
  9865                           ;zigbee.c: 407: address = (address << 1) & 0b01111110;
  9866  002C8A  5028               	movf	i2read_ZIGBEE_short@address,w,c
  9867  002C8C  2428               	addwf	i2read_ZIGBEE_short@address,w,c
  9868  002C8E  0B7E               	andlw	126
  9869  002C90  6E28               	movwf	i2read_ZIGBEE_short@address,c
  9870                           
  9871                           ;zigbee.c: 408: SPI_Write(address);
  9872  002C92  5028               	movf	i2read_ZIGBEE_short@address,w,c
  9873  002C94  EC07  F017         	call	i2_SPI_Write
  9874                           
  9875                           ;zigbee.c: 409: data_r = SPI_Read();
  9876  002C98  EC0F  F017         	call	i2_SPI_Read	;wreg free
  9877  002C9C  6E29               	movwf	i2read_ZIGBEE_short@data_r,c
  9878                           
  9879                           ;zigbee.c: 410: PORTCbits.RC0=1;
  9880  002C9E  8082               	bsf	3970,0,c	;volatile
  9881                           
  9882                           ;zigbee.c: 412: return data_r;
  9883  002CA0  5029               	movf	i2read_ZIGBEE_short@data_r,w,c
  9884  002CA2  0012               	return	
  9885  002CA4                     __end_ofi2_read_ZIGBEE_short:
  9886                           	opt stack 0
  9887                           tosu	equ	0xFFF
  9888                           tosh	equ	0xFFE
  9889                           tosl	equ	0xFFD
  9890                           pclatu	equ	0xFFB
  9891                           pclath	equ	0xFFA
  9892                           tblptru	equ	0xFF8
  9893                           tblptrh	equ	0xFF7
  9894                           tblptrl	equ	0xFF6
  9895                           tablat	equ	0xFF5
  9896                           prodh	equ	0xFF4
  9897                           prodl	equ	0xFF3
  9898                           intcon	equ	0xFF2
  9899                           intcon2	equ	0xFF1
  9900                           postinc0	equ	0xFEE
  9901                           fsr0h	equ	0xFEA
  9902                           fsr0l	equ	0xFE9
  9903                           wreg	equ	0xFE8
  9904                           indf1	equ	0xFE7
  9905                           postdec1	equ	0xFE5
  9906                           fsr1h	equ	0xFE2
  9907                           fsr1l	equ	0xFE1
  9908                           bsr	equ	0xFE0
  9909                           indf2	equ	0xFDF
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8
  9913                           
  9914 ;; *************** function i2_Xor_check *****************
  9915 ;; Defined at:
  9916 ;;		line 501 in file "zigbee.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  data_value      2    0[COMRAM] PTR unsigned char 
  9919 ;;		 -> DATA_TX(3), DATA_RX(5), 
  9920 ;;  length          1    2[COMRAM] unsigned char 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  Xor_check       2    6[COMRAM] unsigned short 
  9923 ;;  Xor_check       2    4[COMRAM] unsigned short 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  2    0[COMRAM] unsigned short 
  9926 ;; Registers used:
  9927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9933 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;Total ram usage:        8 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_INTERRUPT_InterruptManagerHigh
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text61
  9947  00284E                     __ptext61:
  9948                           	opt stack 0
  9949  00284E                     i2_Xor_check:
  9950                           	opt stack 20
  9951                           
  9952                           ;zigbee.c: 503: unsigned short xor_value = 0x8d0d;
  9953                           
  9954                           ;incstack = 0
  9955  00284E  0E8D               	movlw	141
  9956  002850  6E2B               	movwf	i2Xor_check@xor_value+1,c
  9957  002852  0E0D               	movlw	13
  9958  002854  6E2A               	movwf	i2Xor_check@xor_value,c
  9959                           
  9960                           ;zigbee.c: 504: unsigned short xor=0x00;
  9961  002856  0E00               	movlw	0
  9962  002858  6E2D               	movwf	i2Xor_check@xor+1,c
  9963  00285A  0E00               	movlw	0
  9964  00285C  6E2C               	movwf	i2Xor_check@xor,c
  9965                           
  9966                           ;zigbee.c: 505: while(length --)
  9967  00285E  D00A               	goto	i2l575
  9968  002860                     
  9969                           ;zigbee.c: 506: {
  9970                           ;zigbee.c: 507: xor_value ^= *data_value++;
  9971  002860  C026  FFD9         	movff	i2Xor_check@data_value,fsr2l
  9972  002864  C027  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
  9973  002868  50DF               	movf	indf2,w,c
  9974  00286A  6E29               	movwf	??i2_Xor_check& (0+255),c
  9975  00286C  5029               	movf	??i2_Xor_check,w,c
  9976  00286E  1A2A               	xorwf	i2Xor_check@xor_value,f,c
  9977  002870  4A26               	infsnz	i2Xor_check@data_value,f,c
  9978  002872  2A27               	incf	i2Xor_check@data_value+1,f,c
  9979  002874                     i2l575:
  9980  002874  0628               	decf	i2Xor_check@length,f,c
  9981  002876  2828               	incf	i2Xor_check@length,w,c
  9982  002878  A4D8               	btfss	status,2,c
  9983  00287A  D7F2               	goto	i2l576
  9984                           
  9985                           ;zigbee.c: 508: }
  9986                           ;zigbee.c: 509: xor=xor_value;
  9987  00287C  C02A  F02C         	movff	i2Xor_check@xor_value,i2Xor_check@xor
  9988  002880  C02B  F02D         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
  9989                           
  9990                           ;zigbee.c: 510: return(xor);
  9991  002884  C02C  F026         	movff	i2Xor_check@xor,?i2_Xor_check
  9992  002888  C02D  F027         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
  9993  00288C  0012               	return		;funcret
  9994  00288E                     __end_ofi2_Xor_check:
  9995                           	opt stack 0
  9996                           tosu	equ	0xFFF
  9997                           tosh	equ	0xFFE
  9998                           tosl	equ	0xFFD
  9999                           pclatu	equ	0xFFB
 10000                           pclath	equ	0xFFA
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           intcon2	equ	0xFF1
 10009                           postinc0	equ	0xFEE
 10010                           fsr0h	equ	0xFEA
 10011                           fsr0l	equ	0xFE9
 10012                           wreg	equ	0xFE8
 10013                           indf1	equ	0xFE7
 10014                           postdec1	equ	0xFE5
 10015                           fsr1h	equ	0xFE2
 10016                           fsr1l	equ	0xFE1
 10017                           bsr	equ	0xFE0
 10018                           indf2	equ	0xFDF
 10019                           fsr2h	equ	0xFDA
 10020                           fsr2l	equ	0xFD9
 10021                           status	equ	0xFD8
 10022                           
 10023 ;; *************** function i2_Clear_Data *****************
 10024 ;; Defined at:
 10025 ;;		line 4 in file "zigbee.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;  Clear_Data      2    0[COMRAM] unsigned int 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;Total ram usage:        2 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_INTERRUPT_InterruptManagerHigh
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text62
 10053  0029A8                     __ptext62:
 10054                           	opt stack 0
 10055  0029A8                     i2_Clear_Data:
 10056                           	opt stack 20
 10057                           
 10058                           ;zigbee.c: 5: unsigned int n=0;
 10059                           
 10060                           ;incstack = 0
 10061  0029A8  0E00               	movlw	0
 10062  0029AA  6E27               	movwf	i2Clear_Data@n+1,c
 10063  0029AC  0E00               	movlw	0
 10064  0029AE  6E26               	movwf	i2Clear_Data@n,c
 10065                           
 10066                           ;zigbee.c: 6: for(n=0;n<=5;n++){
 10067  0029B0  0E00               	movlw	0
 10068  0029B2  6E27               	movwf	i2Clear_Data@n+1,c
 10069  0029B4  0E00               	movlw	0
 10070  0029B6  6E26               	movwf	i2Clear_Data@n,c
 10071  0029B8                     i2l3818:
 10072  0029B8  5027               	movf	i2Clear_Data@n+1,w,c
 10073  0029BA  E10F               	bnz	i2l387
 10074  0029BC  0E06               	movlw	6
 10075  0029BE  5C26               	subwf	i2Clear_Data@n,w,c
 10076  0029C0  B0D8               	btfsc	status,0,c
 10077  0029C2  0012               	return	
 10078                           
 10079                           ;zigbee.c: 7: DATA_RX[n]=0;
 10080  0029C4  0EA0               	movlw	low _DATA_RX
 10081  0029C6  2426               	addwf	i2Clear_Data@n,w,c
 10082  0029C8  6ED9               	movwf	fsr2l,c
 10083  0029CA  0E00               	movlw	high _DATA_RX
 10084  0029CC  2027               	addwfc	i2Clear_Data@n+1,w,c
 10085  0029CE  6EDA               	movwf	fsr2h,c
 10086  0029D0  0E00               	movlw	0
 10087  0029D2  6EDF               	movwf	indf2,c
 10088  0029D4  4A26               	infsnz	i2Clear_Data@n,f,c
 10089  0029D6  2A27               	incf	i2Clear_Data@n+1,f,c
 10090  0029D8  D7EF               	goto	i2l3818
 10091  0029DA                     i2l387:
 10092  0029DA  0012               	return		;funcret
 10093  0029DC                     __end_ofi2_Clear_Data:
 10094                           	opt stack 0
 10095                           tosu	equ	0xFFF
 10096                           tosh	equ	0xFFE
 10097                           tosl	equ	0xFFD
 10098                           pclatu	equ	0xFFB
 10099                           pclath	equ	0xFFA
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           intcon2	equ	0xFF1
 10108                           postinc0	equ	0xFEE
 10109                           fsr0h	equ	0xFEA
 10110                           fsr0l	equ	0xFE9
 10111                           wreg	equ	0xFE8
 10112                           indf1	equ	0xFE7
 10113                           postdec1	equ	0xFE5
 10114                           fsr1h	equ	0xFE2
 10115                           fsr1l	equ	0xFE1
 10116                           bsr	equ	0xFE0
 10117                           indf2	equ	0xFDF
 10118                           fsr2h	equ	0xFDA
 10119                           fsr2l	equ	0xFD9
 10120                           status	equ	0xFD8
 10121                           
 10122 ;; *************** function _read_RX_FIFO *****************
 10123 ;; Defined at:
 10124 ;;		line 10 in file "zigbee.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;		None
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  i               1   15[COMRAM] unsigned char 
 10129 ;;  temp            1   14[COMRAM] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;Total ram usage:        7 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    2
 10146 ;; This function calls:
 10147 ;;		_read_ZIGBEE_long
 10148 ;;		i2_write_ZIGBEE_short
 10149 ;; This function is called by:
 10150 ;;		_INTERRUPT_InterruptManagerHigh
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text63
 10155  0016BE                     __ptext63:
 10156                           	opt stack 0
 10157  0016BE                     _read_RX_FIFO:
 10158                           	opt stack 18
 10159                           
 10160                           ;zigbee.c: 12: unsigned char temp = 0;
 10161                           
 10162                           ;incstack = 0
 10163  0016BE  0E00               	movlw	0
 10164  0016C0  6E34               	movwf	read_RX_FIFO@temp,c
 10165                           
 10166                           ;zigbee.c: 13: unsigned char i = 0;
 10167  0016C2  0E00               	movlw	0
 10168  0016C4  6E35               	movwf	read_RX_FIFO@i,c
 10169                           
 10170                           ;zigbee.c: 15: temp=0;
 10171  0016C6  0E00               	movlw	0
 10172  0016C8  6E34               	movwf	read_RX_FIFO@temp,c
 10173                           
 10174                           ;zigbee.c: 16: temp = temp | 0x04;
 10175  0016CA  5034               	movf	read_RX_FIFO@temp,w,c
 10176  0016CC  0904               	iorlw	4
 10177  0016CE  6E34               	movwf	read_RX_FIFO@temp,c
 10178                           
 10179                           ;zigbee.c: 17: write_ZIGBEE_short(0x39, temp);
 10180  0016D0  C034  F028         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10181  0016D4  0E39               	movlw	57
 10182  0016D6  EC61  F016         	call	i2_write_ZIGBEE_short
 10183                           
 10184                           ;zigbee.c: 19: LENGTH=read_ZIGBEE_long(0x300);
 10185  0016DA  0E03               	movlw	3
 10186  0016DC  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10187  0016DE  0E00               	movlw	0
 10188  0016E0  6E28               	movwf	read_ZIGBEE_long@address,c
 10189  0016E2  EC56  F013         	call	_read_ZIGBEE_long	;wreg free
 10190  0016E6  6E24               	movwf	_LENGTH,c
 10191                           
 10192                           ;zigbee.c: 20: __nop();
 10193  0016E8  F000               	nop	
 10194                           
 10195                           ;zigbee.c: 21: for(i=0; i<128; i++)
 10196  0016EA  0E00               	movlw	0
 10197  0016EC  6E35               	movwf	read_RX_FIFO@i,c
 10198  0016EE  0E7F               	movlw	127
 10199  0016F0  6435               	cpfsgt	read_RX_FIFO@i,c
 10200  0016F2  D001               	goto	i2l390
 10201  0016F4  D06A               	goto	i2u180_40
 10202  0016F6                     i2l390:
 10203                           
 10204                           ;zigbee.c: 22: {
 10205                           ;zigbee.c: 23: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10206  0016F6  0E0E               	movlw	low _DATA_LENGHT
 10207  0016F8  6EF6               	movwf	tblptrl,c
 10208  0016FA                     	if	1	;There is more than 1 active tblptr byte
 10209  0016FA  0E10               	movlw	high _DATA_LENGHT
 10210  0016FC  6EF7               	movwf	tblptrh,c
 10211  0016FE                     	endif
 10212  0016FE                     	if	1	;There are 3 active tblptr bytes
 10213  0016FE  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10214  001700  6EF8               	movwf	tblptru,c
 10215  001702                     	endif
 10216  001702  0008               	tblrd		*
 10217  001704  50F5               	movf	tablat,w,c
 10218  001706  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10219  001708  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10220  00170A  0E0D               	movlw	low _HEADER_LENGHT
 10221  00170C  6EF6               	movwf	tblptrl,c
 10222  00170E                     	if	1	;There is more than 1 active tblptr byte
 10223  00170E  0E10               	movlw	high _HEADER_LENGHT
 10224  001710  6EF7               	movwf	tblptrh,c
 10225  001712                     	endif
 10226  001712                     	if	1	;There are 3 active tblptr bytes
 10227  001712  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10228  001714  6EF8               	movwf	tblptru,c
 10229  001716                     	endif
 10230  001716  0008               	tblrd		*
 10231  001718  50F5               	movf	tablat,w,c
 10232  00171A  262F               	addwf	??_read_RX_FIFO,f,c
 10233  00171C  0E00               	movlw	0
 10234  00171E  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10235  001720  0E05               	movlw	5
 10236  001722  262F               	addwf	??_read_RX_FIFO,f,c
 10237  001724  0E00               	movlw	0
 10238  001726  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10239  001728  5035               	movf	read_RX_FIFO@i,w,c
 10240  00172A  6E31               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10241  00172C  6A32               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10242  00172E  502F               	movf	??_read_RX_FIFO,w,c
 10243  001730  5C31               	subwf	??_read_RX_FIFO+2,w,c
 10244  001732  5032               	movf	??_read_RX_FIFO+3,w,c
 10245  001734  0A80               	xorlw	128
 10246  001736  6E33               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10247  001738  5030               	movf	??_read_RX_FIFO+1,w,c
 10248  00173A  0A80               	xorlw	128
 10249  00173C  5833               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10250  00173E  B0D8               	btfsc	status,0,c
 10251  001740  D012               	goto	i2l392
 10252                           
 10253                           ;zigbee.c: 24: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 10254  001742  5035               	movf	read_RX_FIFO@i,w,c
 10255  001744  0D01               	mullw	1
 10256  001746  0E00               	movlw	low _data_RX_FIFO
 10257  001748  24F3               	addwf	prodl,w,c
 10258  00174A  6ED9               	movwf	fsr2l,c
 10259  00174C  0E01               	movlw	high _data_RX_FIFO
 10260  00174E  20F4               	addwfc	prodh,w,c
 10261  001750  6EDA               	movwf	fsr2h,c
 10262  001752  5035               	movf	read_RX_FIFO@i,w,c
 10263  001754  0100               	movlb	0	; () banked
 10264  001756  25E4               	addwf	_address_RX_FIFO& (0+255),w,b
 10265  001758  6E28               	movwf	read_ZIGBEE_long@address,c
 10266  00175A  0E00               	movlw	0
 10267  00175C  21E5               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10268  00175E  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10269  001760  EC56  F013         	call	_read_ZIGBEE_long	;wreg free
 10270  001764  6EDF               	movwf	indf2,c
 10271  001766                     i2l392:
 10272                           
 10273                           ;zigbee.c: 25: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10274  001766  0E0E               	movlw	low _DATA_LENGHT
 10275  001768  6EF6               	movwf	tblptrl,c
 10276  00176A                     	if	1	;There is more than 1 active tblptr byte
 10277  00176A  0E10               	movlw	high _DATA_LENGHT
 10278  00176C  6EF7               	movwf	tblptrh,c
 10279  00176E                     	endif
 10280  00176E                     	if	1	;There are 3 active tblptr bytes
 10281  00176E  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10282  001770  6EF8               	movwf	tblptru,c
 10283  001772                     	endif
 10284  001772  0008               	tblrd		*
 10285  001774  50F5               	movf	tablat,w,c
 10286  001776  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10287  001778  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10288  00177A  0E0D               	movlw	low _HEADER_LENGHT
 10289  00177C  6EF6               	movwf	tblptrl,c
 10290  00177E                     	if	1	;There is more than 1 active tblptr byte
 10291  00177E  0E10               	movlw	high _HEADER_LENGHT
 10292  001780  6EF7               	movwf	tblptrh,c
 10293  001782                     	endif
 10294  001782                     	if	1	;There are 3 active tblptr bytes
 10295  001782  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10296  001784  6EF8               	movwf	tblptru,c
 10297  001786                     	endif
 10298  001786  0008               	tblrd		*
 10299  001788  50F5               	movf	tablat,w,c
 10300  00178A  262F               	addwf	??_read_RX_FIFO,f,c
 10301  00178C  0E00               	movlw	0
 10302  00178E  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10303  001790  0E05               	movlw	5
 10304  001792  262F               	addwf	??_read_RX_FIFO,f,c
 10305  001794  0E00               	movlw	0
 10306  001796  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10307  001798  5035               	movf	read_RX_FIFO@i,w,c
 10308  00179A  6E31               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10309  00179C  6A32               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10310  00179E  502F               	movf	??_read_RX_FIFO,w,c
 10311  0017A0  5C31               	subwf	??_read_RX_FIFO+2,w,c
 10312  0017A2  5032               	movf	??_read_RX_FIFO+3,w,c
 10313  0017A4  0A80               	xorlw	128
 10314  0017A6  6E33               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10315  0017A8  5030               	movf	??_read_RX_FIFO+1,w,c
 10316  0017AA  0A80               	xorlw	128
 10317  0017AC  5833               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10318  0017AE  A0D8               	btfss	status,0,c
 10319  0017B0  D00A               	goto	i2l393
 10320                           
 10321                           ;zigbee.c: 26: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 10322  0017B2  5035               	movf	read_RX_FIFO@i,w,c
 10323  0017B4  0100               	movlb	0	; () banked
 10324  0017B6  25E4               	addwf	_address_RX_FIFO& (0+255),w,b
 10325  0017B8  6E28               	movwf	read_ZIGBEE_long@address,c
 10326  0017BA  0E00               	movlw	0
 10327  0017BC  21E5               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10328  0017BE  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10329  0017C0  EC56  F013         	call	_read_ZIGBEE_long	;wreg free
 10330  0017C4  6E1F               	movwf	_lost_data,c
 10331  0017C6                     i2l393:
 10332  0017C6  2A35               	incf	read_RX_FIFO@i,f,c
 10333  0017C8  D792               	goto	L9
 10334  0017CA                     i2u180_40:
 10335                           
 10336                           ;zigbee.c: 27: }
 10337                           ;zigbee.c: 29: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 10338  0017CA  0E0D               	movlw	low _HEADER_LENGHT
 10339  0017CC  6EF6               	movwf	tblptrl,c
 10340  0017CE                     	if	1	;There is more than 1 active tblptr byte
 10341  0017CE  0E10               	movlw	high _HEADER_LENGHT
 10342  0017D0  6EF7               	movwf	tblptrh,c
 10343  0017D2                     	endif
 10344  0017D2                     	if	1	;There are 3 active tblptr bytes
 10345  0017D2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10346  0017D4  6EF8               	movwf	tblptru,c
 10347  0017D6                     	endif
 10348  0017D6  0008               	tblrd		*
 10349  0017D8  50F5               	movf	tablat,w,c
 10350  0017DA  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10351  0017DC  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10352  0017DE  0E01               	movlw	1
 10353  0017E0  262F               	addwf	??_read_RX_FIFO,f,c
 10354  0017E2  0E00               	movlw	0
 10355  0017E4  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10356  0017E6  0E00               	movlw	low _data_RX_FIFO
 10357  0017E8  242F               	addwf	??_read_RX_FIFO,w,c
 10358  0017EA  6ED9               	movwf	fsr2l,c
 10359  0017EC  0E01               	movlw	high _data_RX_FIFO
 10360  0017EE  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10361  0017F0  6EDA               	movwf	fsr2h,c
 10362  0017F2  50DF               	movf	indf2,w,c
 10363  0017F4  0100               	movlb	0	; () banked
 10364  0017F6  6FA0               	movwf	_DATA_RX& (0+255),b
 10365                           
 10366                           ;zigbee.c: 30: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 10367  0017F8  0E0D               	movlw	low _HEADER_LENGHT
 10368  0017FA  6EF6               	movwf	tblptrl,c
 10369  0017FC                     	if	1	;There is more than 1 active tblptr byte
 10370  0017FC  0E10               	movlw	high _HEADER_LENGHT
 10371  0017FE  6EF7               	movwf	tblptrh,c
 10372  001800                     	endif
 10373  001800                     	if	1	;There are 3 active tblptr bytes
 10374  001800  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10375  001802  6EF8               	movwf	tblptru,c
 10376  001804                     	endif
 10377  001804  0008               	tblrd		*
 10378  001806  50F5               	movf	tablat,w,c
 10379  001808  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10380  00180A  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10381  00180C  0E02               	movlw	2
 10382  00180E  262F               	addwf	??_read_RX_FIFO,f,c
 10383  001810  0E00               	movlw	0
 10384  001812  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10385  001814  0E00               	movlw	low _data_RX_FIFO
 10386  001816  242F               	addwf	??_read_RX_FIFO,w,c
 10387  001818  6ED9               	movwf	fsr2l,c
 10388  00181A  0E01               	movlw	high _data_RX_FIFO
 10389  00181C  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10390  00181E  6EDA               	movwf	fsr2h,c
 10391  001820  50DF               	movf	indf2,w,c
 10392  001822  6FA1               	movwf	(_DATA_RX+1)& (0+255),b
 10393                           
 10394                           ;zigbee.c: 31: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 10395  001824  0E0D               	movlw	low _HEADER_LENGHT
 10396  001826  6EF6               	movwf	tblptrl,c
 10397  001828                     	if	1	;There is more than 1 active tblptr byte
 10398  001828  0E10               	movlw	high _HEADER_LENGHT
 10399  00182A  6EF7               	movwf	tblptrh,c
 10400  00182C                     	endif
 10401  00182C                     	if	1	;There are 3 active tblptr bytes
 10402  00182C  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10403  00182E  6EF8               	movwf	tblptru,c
 10404  001830                     	endif
 10405  001830  0008               	tblrd		*
 10406  001832  50F5               	movf	tablat,w,c
 10407  001834  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10408  001836  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10409  001838  0E03               	movlw	3
 10410  00183A  262F               	addwf	??_read_RX_FIFO,f,c
 10411  00183C  0E00               	movlw	0
 10412  00183E  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10413  001840  0E00               	movlw	low _data_RX_FIFO
 10414  001842  242F               	addwf	??_read_RX_FIFO,w,c
 10415  001844  6ED9               	movwf	fsr2l,c
 10416  001846  0E01               	movlw	high _data_RX_FIFO
 10417  001848  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10418  00184A  6EDA               	movwf	fsr2h,c
 10419  00184C  50DF               	movf	indf2,w,c
 10420  00184E  6FA2               	movwf	(_DATA_RX+2)& (0+255),b
 10421                           
 10422                           ;zigbee.c: 33: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 10423  001850  0E0D               	movlw	low _HEADER_LENGHT
 10424  001852  6EF6               	movwf	tblptrl,c
 10425  001854                     	if	1	;There is more than 1 active tblptr byte
 10426  001854  0E10               	movlw	high _HEADER_LENGHT
 10427  001856  6EF7               	movwf	tblptrh,c
 10428  001858                     	endif
 10429  001858                     	if	1	;There are 3 active tblptr bytes
 10430  001858  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10431  00185A  6EF8               	movwf	tblptru,c
 10432  00185C                     	endif
 10433  00185C  0008               	tblrd		*
 10434  00185E  50F5               	movf	tablat,w,c
 10435  001860  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10436  001862  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10437  001864  0E04               	movlw	4
 10438  001866  262F               	addwf	??_read_RX_FIFO,f,c
 10439  001868  0E00               	movlw	0
 10440  00186A  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10441  00186C  0E00               	movlw	low _data_RX_FIFO
 10442  00186E  242F               	addwf	??_read_RX_FIFO,w,c
 10443  001870  6ED9               	movwf	fsr2l,c
 10444  001872  0E01               	movlw	high _data_RX_FIFO
 10445  001874  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10446  001876  6EDA               	movwf	fsr2h,c
 10447  001878  50DF               	movf	indf2,w,c
 10448  00187A  6FA3               	movwf	(_DATA_RX+3)& (0+255),b
 10449                           
 10450                           ;zigbee.c: 34: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 10451  00187C  0E0D               	movlw	low _HEADER_LENGHT
 10452  00187E  6EF6               	movwf	tblptrl,c
 10453  001880                     	if	1	;There is more than 1 active tblptr byte
 10454  001880  0E10               	movlw	high _HEADER_LENGHT
 10455  001882  6EF7               	movwf	tblptrh,c
 10456  001884                     	endif
 10457  001884                     	if	1	;There are 3 active tblptr bytes
 10458  001884  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10459  001886  6EF8               	movwf	tblptru,c
 10460  001888                     	endif
 10461  001888  0008               	tblrd		*
 10462  00188A  50F5               	movf	tablat,w,c
 10463  00188C  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10464  00188E  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10465  001890  0E05               	movlw	5
 10466  001892  262F               	addwf	??_read_RX_FIFO,f,c
 10467  001894  0E00               	movlw	0
 10468  001896  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10469  001898  0E00               	movlw	low _data_RX_FIFO
 10470  00189A  242F               	addwf	??_read_RX_FIFO,w,c
 10471  00189C  6ED9               	movwf	fsr2l,c
 10472  00189E  0E01               	movlw	high _data_RX_FIFO
 10473  0018A0  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10474  0018A2  6EDA               	movwf	fsr2h,c
 10475  0018A4  50DF               	movf	indf2,w,c
 10476  0018A6  6FA4               	movwf	(_DATA_RX+4)& (0+255),b
 10477                           
 10478                           ;zigbee.c: 38: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 10479  0018A8  0E0D               	movlw	low _HEADER_LENGHT
 10480  0018AA  6EF6               	movwf	tblptrl,c
 10481  0018AC                     	if	1	;There is more than 1 active tblptr byte
 10482  0018AC  0E10               	movlw	high _HEADER_LENGHT
 10483  0018AE  6EF7               	movwf	tblptrh,c
 10484  0018B0                     	endif
 10485  0018B0                     	if	1	;There are 3 active tblptr bytes
 10486  0018B0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10487  0018B2  6EF8               	movwf	tblptru,c
 10488  0018B4                     	endif
 10489  0018B4  0008               	tblrd		*
 10490  0018B6  50F5               	movf	tablat,w,c
 10491  0018B8  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10492  0018BA  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10493  0018BC  0E0E               	movlw	low _DATA_LENGHT
 10494  0018BE  6EF6               	movwf	tblptrl,c
 10495  0018C0                     	if	1	;There is more than 1 active tblptr byte
 10496  0018C0  0E10               	movlw	high _DATA_LENGHT
 10497  0018C2  6EF7               	movwf	tblptrh,c
 10498  0018C4                     	endif
 10499  0018C4                     	if	1	;There are 3 active tblptr bytes
 10500  0018C4  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10501  0018C6  6EF8               	movwf	tblptru,c
 10502  0018C8                     	endif
 10503  0018C8  0008               	tblrd		*
 10504  0018CA  50F5               	movf	tablat,w,c
 10505  0018CC  262F               	addwf	??_read_RX_FIFO,f,c
 10506  0018CE  0E00               	movlw	0
 10507  0018D0  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10508  0018D2  0E03               	movlw	3
 10509  0018D4  262F               	addwf	??_read_RX_FIFO,f,c
 10510  0018D6  0E00               	movlw	0
 10511  0018D8  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10512  0018DA  0E00               	movlw	low _data_RX_FIFO
 10513  0018DC  242F               	addwf	??_read_RX_FIFO,w,c
 10514  0018DE  6ED9               	movwf	fsr2l,c
 10515  0018E0  0E01               	movlw	high _data_RX_FIFO
 10516  0018E2  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10517  0018E4  6EDA               	movwf	fsr2h,c
 10518  0018E6  50DF               	movf	indf2,w,c
 10519  0018E8  6E21               	movwf	_LQI,c
 10520                           
 10521                           ;zigbee.c: 39: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 10522  0018EA  0E0D               	movlw	low _HEADER_LENGHT
 10523  0018EC  6EF6               	movwf	tblptrl,c
 10524  0018EE                     	if	1	;There is more than 1 active tblptr byte
 10525  0018EE  0E10               	movlw	high _HEADER_LENGHT
 10526  0018F0  6EF7               	movwf	tblptrh,c
 10527  0018F2                     	endif
 10528  0018F2                     	if	1	;There are 3 active tblptr bytes
 10529  0018F2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10530  0018F4  6EF8               	movwf	tblptru,c
 10531  0018F6                     	endif
 10532  0018F6  0008               	tblrd		*
 10533  0018F8  50F5               	movf	tablat,w,c
 10534  0018FA  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10535  0018FC  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10536  0018FE  0E0E               	movlw	low _DATA_LENGHT
 10537  001900  6EF6               	movwf	tblptrl,c
 10538  001902                     	if	1	;There is more than 1 active tblptr byte
 10539  001902  0E10               	movlw	high _DATA_LENGHT
 10540  001904  6EF7               	movwf	tblptrh,c
 10541  001906                     	endif
 10542  001906                     	if	1	;There are 3 active tblptr bytes
 10543  001906  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10544  001908  6EF8               	movwf	tblptru,c
 10545  00190A                     	endif
 10546  00190A  0008               	tblrd		*
 10547  00190C  50F5               	movf	tablat,w,c
 10548  00190E  262F               	addwf	??_read_RX_FIFO,f,c
 10549  001910  0E00               	movlw	0
 10550  001912  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10551  001914  0E04               	movlw	4
 10552  001916  262F               	addwf	??_read_RX_FIFO,f,c
 10553  001918  0E00               	movlw	0
 10554  00191A  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10555  00191C  0E00               	movlw	low _data_RX_FIFO
 10556  00191E  242F               	addwf	??_read_RX_FIFO,w,c
 10557  001920  6ED9               	movwf	fsr2l,c
 10558  001922  0E01               	movlw	high _data_RX_FIFO
 10559  001924  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10560  001926  6EDA               	movwf	fsr2h,c
 10561  001928  50DF               	movf	indf2,w,c
 10562  00192A  6E20               	movwf	_RSSI2,c
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;zigbee.c: 41: temp=0;
 10566  00192C  0E00               	movlw	0
 10567  00192E  6E34               	movwf	read_RX_FIFO@temp,c
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;zigbee.c: 42: temp = temp & (!0x04);
 10571  001930  0E00               	movlw	0
 10572  001932  6E34               	movwf	read_RX_FIFO@temp,c
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;zigbee.c: 43: write_ZIGBEE_short(0x39, temp);
 10576  001934  C034  F028         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10577  001938  0E39               	movlw	57
 10578  00193A  EC61  F016         	call	i2_write_ZIGBEE_short
 10579  00193E  0012               	return		;funcret
 10580  001940                     __end_of_read_RX_FIFO:
 10581                           	opt stack 0
 10582                           tosu	equ	0xFFF
 10583                           tosh	equ	0xFFE
 10584                           tosl	equ	0xFFD
 10585                           pclatu	equ	0xFFB
 10586                           pclath	equ	0xFFA
 10587                           tblptru	equ	0xFF8
 10588                           tblptrh	equ	0xFF7
 10589                           tblptrl	equ	0xFF6
 10590                           tablat	equ	0xFF5
 10591                           prodh	equ	0xFF4
 10592                           prodl	equ	0xFF3
 10593                           intcon	equ	0xFF2
 10594                           intcon2	equ	0xFF1
 10595                           postinc0	equ	0xFEE
 10596                           fsr0h	equ	0xFEA
 10597                           fsr0l	equ	0xFE9
 10598                           wreg	equ	0xFE8
 10599                           indf1	equ	0xFE7
 10600                           postdec1	equ	0xFE5
 10601                           fsr1h	equ	0xFE2
 10602                           fsr1l	equ	0xFE1
 10603                           bsr	equ	0xFE0
 10604                           indf2	equ	0xFDF
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function i2_write_ZIGBEE_short *****************
 10610 ;; Defined at:
 10611 ;;		line 396 in file "zigbee.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  address         1    wreg     unsigned char 
 10614 ;;  data_r          1    2[COMRAM] unsigned char 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  address         1    3[COMRAM] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0, cstack
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;Total ram usage:        2 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:    1
 10633 ;; This function calls:
 10634 ;;		i2_SPI_Write
 10635 ;; This function is called by:
 10636 ;;		_read_RX_FIFO
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text64
 10641  002CC2                     __ptext64:
 10642                           	opt stack 0
 10643  002CC2                     i2_write_ZIGBEE_short:
 10644                           	opt stack 18
 10645                           
 10646                           ;incstack = 0
 10647                           ;i2write_ZIGBEE_short@address stored from wreg
 10648  002CC2  6E29               	movwf	i2write_ZIGBEE_short@address,c
 10649                           
 10650                           ;zigbee.c: 397: PORTCbits.RC0=0;
 10651  002CC4  9082               	bcf	3970,0,c	;volatile
 10652                           
 10653                           ;zigbee.c: 398: address = ((address << 1) & 0b01111111) | 0x01;
 10654  002CC6  5029               	movf	i2write_ZIGBEE_short@address,w,c
 10655  002CC8  2429               	addwf	i2write_ZIGBEE_short@address,w,c
 10656  002CCA  0B7F               	andlw	127
 10657  002CCC  0901               	iorlw	1
 10658  002CCE  6E29               	movwf	i2write_ZIGBEE_short@address,c
 10659                           
 10660                           ;zigbee.c: 399: SPI_Write(address);
 10661  002CD0  5029               	movf	i2write_ZIGBEE_short@address,w,c
 10662  002CD2  EC07  F017         	call	i2_SPI_Write
 10663                           
 10664                           ;zigbee.c: 400: SPI_Write(data_r);
 10665  002CD6  5028               	movf	i2write_ZIGBEE_short@data_r,w,c
 10666  002CD8  EC07  F017         	call	i2_SPI_Write
 10667                           
 10668                           ;zigbee.c: 401: PORTCbits.RC0=1;
 10669  002CDC  8082               	bsf	3970,0,c	;volatile
 10670  002CDE  0012               	return		;funcret
 10671  002CE0                     __end_ofi2_write_ZIGBEE_short:
 10672                           	opt stack 0
 10673                           tosu	equ	0xFFF
 10674                           tosh	equ	0xFFE
 10675                           tosl	equ	0xFFD
 10676                           pclatu	equ	0xFFB
 10677                           pclath	equ	0xFFA
 10678                           tblptru	equ	0xFF8
 10679                           tblptrh	equ	0xFF7
 10680                           tblptrl	equ	0xFF6
 10681                           tablat	equ	0xFF5
 10682                           prodh	equ	0xFF4
 10683                           prodl	equ	0xFF3
 10684                           intcon	equ	0xFF2
 10685                           intcon2	equ	0xFF1
 10686                           postinc0	equ	0xFEE
 10687                           fsr0h	equ	0xFEA
 10688                           fsr0l	equ	0xFE9
 10689                           wreg	equ	0xFE8
 10690                           indf1	equ	0xFE7
 10691                           postdec1	equ	0xFE5
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           bsr	equ	0xFE0
 10695                           indf2	equ	0xFDF
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function _read_ZIGBEE_long *****************
 10701 ;; Defined at:
 10702 ;;		line 425 in file "zigbee.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  address         2    2[COMRAM] unsigned int 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  address_low     1    8[COMRAM] unsigned char 
 10707 ;;  address_high    1    7[COMRAM] unsigned char 
 10708 ;;  data_r          1    6[COMRAM] unsigned char 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      unsigned char 
 10711 ;; Registers used:
 10712 ;;		wreg, status,2, status,0, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;Total ram usage:        7 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    1
 10725 ;; This function calls:
 10726 ;;		i2_SPI_Read
 10727 ;;		i2_SPI_Write
 10728 ;; This function is called by:
 10729 ;;		_read_RX_FIFO
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text65
 10734  0026AC                     __ptext65:
 10735                           	opt stack 0
 10736  0026AC                     _read_ZIGBEE_long:
 10737                           	opt stack 18
 10738                           
 10739                           ;zigbee.c: 426: unsigned char data_r = 0;
 10740                           
 10741                           ;incstack = 0
 10742  0026AC  0E00               	movlw	0
 10743  0026AE  6E2C               	movwf	read_ZIGBEE_long@data_r,c
 10744                           
 10745                           ;zigbee.c: 427: unsigned char address_high = 0, address_low = 0;
 10746  0026B0  0E00               	movlw	0
 10747  0026B2  6E2D               	movwf	read_ZIGBEE_long@address_high,c
 10748  0026B4  0E00               	movlw	0
 10749  0026B6  6E2E               	movwf	read_ZIGBEE_long@address_low,c
 10750                           
 10751                           ;zigbee.c: 430: PORTCbits.RC0=0;
 10752  0026B8  9082               	bcf	3970,0,c	;volatile
 10753                           
 10754                           ;zigbee.c: 431: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 10755  0026BA  C028  F02A         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 10756  0026BE  C029  F02B         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 10757  0026C2  90D8               	bcf	status,0,c
 10758  0026C4  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10759  0026C6  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10760  0026C8  90D8               	bcf	status,0,c
 10761  0026CA  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10762  0026CC  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10763  0026CE  90D8               	bcf	status,0,c
 10764  0026D0  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10765  0026D2  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10766  0026D4  502A               	movf	??_read_ZIGBEE_long,w,c
 10767  0026D6  0B7F               	andlw	127
 10768  0026D8  0980               	iorlw	128
 10769  0026DA  6E2D               	movwf	read_ZIGBEE_long@address_high,c
 10770                           
 10771                           ;zigbee.c: 432: address_low = ((unsigned char)(address << 5) & 0b11100000);
 10772  0026DC  3828               	swapf	read_ZIGBEE_long@address,w,c
 10773  0026DE  46E8               	rlncf	wreg,f,c
 10774  0026E0  0BE0               	andlw	224
 10775  0026E2  0BE0               	andlw	224
 10776  0026E4  6E2E               	movwf	read_ZIGBEE_long@address_low,c
 10777                           
 10778                           ;zigbee.c: 433: SPI_Write(address_high);
 10779  0026E6  502D               	movf	read_ZIGBEE_long@address_high,w,c
 10780  0026E8  EC07  F017         	call	i2_SPI_Write
 10781                           
 10782                           ;zigbee.c: 434: SPI_Write(address_low);
 10783  0026EC  502E               	movf	read_ZIGBEE_long@address_low,w,c
 10784  0026EE  EC07  F017         	call	i2_SPI_Write
 10785                           
 10786                           ;zigbee.c: 435: data_r = SPI_Read();
 10787  0026F2  EC0F  F017         	call	i2_SPI_Read	;wreg free
 10788  0026F6  6E2C               	movwf	read_ZIGBEE_long@data_r,c
 10789                           
 10790                           ;zigbee.c: 436: PORTCbits.RC0=1;
 10791  0026F8  8082               	bsf	3970,0,c	;volatile
 10792                           
 10793                           ;zigbee.c: 437: return data_r;
 10794  0026FA  502C               	movf	read_ZIGBEE_long@data_r,w,c
 10795  0026FC  0012               	return	
 10796  0026FE                     __end_of_read_ZIGBEE_long:
 10797                           	opt stack 0
 10798                           tosu	equ	0xFFF
 10799                           tosh	equ	0xFFE
 10800                           tosl	equ	0xFFD
 10801                           pclatu	equ	0xFFB
 10802                           pclath	equ	0xFFA
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           intcon	equ	0xFF2
 10810                           intcon2	equ	0xFF1
 10811                           postinc0	equ	0xFEE
 10812                           fsr0h	equ	0xFEA
 10813                           fsr0l	equ	0xFE9
 10814                           wreg	equ	0xFE8
 10815                           indf1	equ	0xFE7
 10816                           postdec1	equ	0xFE5
 10817                           fsr1h	equ	0xFE2
 10818                           fsr1l	equ	0xFE1
 10819                           bsr	equ	0xFE0
 10820                           indf2	equ	0xFDF
 10821                           fsr2h	equ	0xFDA
 10822                           fsr2l	equ	0xFD9
 10823                           status	equ	0xFD8
 10824                           
 10825 ;; *************** function i2_SPI_Write *****************
 10826 ;; Defined at:
 10827 ;;		line 457 in file "zigbee.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  command         1    wreg     unsigned char 
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;  command         1    1[COMRAM] unsigned char 
 10832 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;Total ram usage:        2 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; This function calls:
 10849 ;;		Nothing
 10850 ;; This function is called by:
 10851 ;;		_read_ZIGBEE_long
 10852 ;;		i2_write_ZIGBEE_short
 10853 ;;		i2_read_ZIGBEE_short
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text66
 10858  002E0E                     __ptext66:
 10859                           	opt stack 0
 10860  002E0E                     i2_SPI_Write:
 10861                           	opt stack 19
 10862                           
 10863                           ;incstack = 0
 10864                           ;i2SPI_Write@command stored from wreg
 10865  002E0E  6E27               	movwf	i2SPI_Write@command,c
 10866                           
 10867                           ;zigbee.c: 458: unsigned char response;
 10868                           ;zigbee.c: 459: SSP1BUF = command;
 10869  002E10  C027  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 10870  002E14  A0C7               	btfss	4039,0,c	;volatile
 10871  002E16  D7FE               	goto	i2l530
 10872                           
 10873                           ;zigbee.c: 461: response = SSP1BUF;
 10874  002E18  CFC9 F026          	movff	4041,i2SPI_Write@response	;volatile
 10875  002E1C  0012               	return		;funcret
 10876  002E1E                     __end_ofi2_SPI_Write:
 10877                           	opt stack 0
 10878                           tosu	equ	0xFFF
 10879                           tosh	equ	0xFFE
 10880                           tosl	equ	0xFFD
 10881                           pclatu	equ	0xFFB
 10882                           pclath	equ	0xFFA
 10883                           tblptru	equ	0xFF8
 10884                           tblptrh	equ	0xFF7
 10885                           tblptrl	equ	0xFF6
 10886                           tablat	equ	0xFF5
 10887                           prodh	equ	0xFF4
 10888                           prodl	equ	0xFF3
 10889                           intcon	equ	0xFF2
 10890                           intcon2	equ	0xFF1
 10891                           postinc0	equ	0xFEE
 10892                           fsr0h	equ	0xFEA
 10893                           fsr0l	equ	0xFE9
 10894                           wreg	equ	0xFE8
 10895                           indf1	equ	0xFE7
 10896                           postdec1	equ	0xFE5
 10897                           fsr1h	equ	0xFE2
 10898                           fsr1l	equ	0xFE1
 10899                           bsr	equ	0xFE0
 10900                           indf2	equ	0xFDF
 10901                           fsr2h	equ	0xFDA
 10902                           fsr2l	equ	0xFD9
 10903                           status	equ	0xFD8
 10904                           
 10905 ;; *************** function i2_SPI_Read *****************
 10906 ;; Defined at:
 10907 ;;		line 463 in file "zigbee.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;		None
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      unsigned char 
 10914 ;; Registers used:
 10915 ;;		wreg, status,2
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;Total ram usage:        1 bytes
 10926 ;; Hardware stack levels used:    1
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_read_ZIGBEE_long
 10931 ;;		i2_read_ZIGBEE_short
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text67
 10936  002E1E                     __ptext67:
 10937                           	opt stack 0
 10938  002E1E                     i2_SPI_Read:
 10939                           	opt stack 19
 10940                           
 10941                           ;zigbee.c: 464: unsigned char TempVar;
 10942                           ;zigbee.c: 465: SSP1BUF = 0xff;
 10943                           
 10944                           ;incstack = 0
 10945  002E1E  68C9               	setf	4041,c	;volatile
 10946  002E20  A0C7               	btfss	4039,0,c	;volatile
 10947  002E22  D7FE               	goto	i2l536
 10948                           
 10949                           ;zigbee.c: 467: TempVar = SSP1BUF;
 10950  002E24  CFC9 F026          	movff	4041,i2SPI_Read@TempVar	;volatile
 10951                           
 10952                           ;zigbee.c: 468: PIR1bits.SSP1IF = 0;
 10953  002E28  969E               	bcf	3998,3,c	;volatile
 10954                           
 10955                           ;zigbee.c: 469: return ( TempVar );
 10956  002E2A  5026               	movf	i2SPI_Read@TempVar,w,c
 10957  002E2C  0012               	return	
 10958  002E2E                     __end_ofi2_SPI_Read:
 10959                           	opt stack 0
 10960                           tosu	equ	0xFFF
 10961                           tosh	equ	0xFFE
 10962                           tosl	equ	0xFFD
 10963                           pclatu	equ	0xFFB
 10964                           pclath	equ	0xFFA
 10965                           tblptru	equ	0xFF8
 10966                           tblptrh	equ	0xFF7
 10967                           tblptrl	equ	0xFF6
 10968                           tablat	equ	0xFF5
 10969                           prodh	equ	0xFF4
 10970                           prodl	equ	0xFF3
 10971                           intcon	equ	0xFF2
 10972                           intcon2	equ	0xFF1
 10973                           postinc0	equ	0xFEE
 10974                           fsr0h	equ	0xFEA
 10975                           fsr0l	equ	0xFE9
 10976                           wreg	equ	0xFE8
 10977                           indf1	equ	0xFE7
 10978                           postdec1	equ	0xFE5
 10979                           fsr1h	equ	0xFE2
 10980                           fsr1l	equ	0xFE1
 10981                           bsr	equ	0xFE0
 10982                           indf2	equ	0xFDF
 10983                           fsr2h	equ	0xFDA
 10984                           fsr2l	equ	0xFD9
 10985                           status	equ	0xFD8
 10986                           
 10987 ;; *************** function _Zigbee_data_Store_Buffer *****************
 10988 ;; Defined at:
 10989 ;;		line 331 in file "07_May_Motion+LDR_Main.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  a               1    0[COMRAM] unsigned char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;Total ram usage:        1 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_INTERRUPT_InterruptManagerHigh
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text68
 11017  0029DC                     __ptext68:
 11018                           	opt stack 0
 11019  0029DC                     _Zigbee_data_Store_Buffer:
 11020                           	opt stack 20
 11021                           
 11022                           ;07_May_Motion+LDR_Main.c: 333: unsigned char a;
 11023                           ;07_May_Motion+LDR_Main.c: 334: for(a=0;a<=5;a++){
 11024                           
 11025                           ;incstack = 0
 11026  0029DC  0E00               	movlw	0
 11027  0029DE  6E26               	movwf	Zigbee_data_Store_Buffer@a,c
 11028  0029E0                     i2l3520:
 11029  0029E0  0E05               	movlw	5
 11030  0029E2  6426               	cpfsgt	Zigbee_data_Store_Buffer@a,c
 11031  0029E4  D001               	goto	i2l923
 11032  0029E6  0012               	return	
 11033  0029E8                     i2l923:
 11034                           
 11035                           ;07_May_Motion+LDR_Main.c: 335: ZigBee_Receive_Buffer[a] = DATA_RX[a];
 11036  0029E8  5026               	movf	Zigbee_data_Store_Buffer@a,w,c
 11037  0029EA  0D01               	mullw	1
 11038  0029EC  0EA0               	movlw	low _DATA_RX
 11039  0029EE  24F3               	addwf	prodl,w,c
 11040  0029F0  6ED9               	movwf	fsr2l,c
 11041  0029F2  0E00               	movlw	high _DATA_RX
 11042  0029F4  20F4               	addwfc	prodh,w,c
 11043  0029F6  6EDA               	movwf	fsr2h,c
 11044  0029F8  5026               	movf	Zigbee_data_Store_Buffer@a,w,c
 11045  0029FA  0D01               	mullw	1
 11046  0029FC  0E60               	movlw	low _ZigBee_Receive_Buffer
 11047  0029FE  24F3               	addwf	prodl,w,c
 11048  002A00  6EE1               	movwf	fsr1l,c
 11049  002A02  0E00               	movlw	high _ZigBee_Receive_Buffer
 11050  002A04  20F4               	addwfc	prodh,w,c
 11051  002A06  6EE2               	movwf	fsr1h,c
 11052  002A08  CFDF FFE7          	movff	indf2,indf1
 11053  002A0C  2A26               	incf	Zigbee_data_Store_Buffer@a,f,c
 11054  002A0E  D7E8               	goto	i2l3520
 11055  002A10                     __end_of_Zigbee_data_Store_Buffer:
 11056                           	opt stack 0
 11057                           tosu	equ	0xFFF
 11058                           tosh	equ	0xFFE
 11059                           tosl	equ	0xFFD
 11060                           pclatu	equ	0xFFB
 11061                           pclath	equ	0xFFA
 11062                           tblptru	equ	0xFF8
 11063                           tblptrh	equ	0xFF7
 11064                           tblptrl	equ	0xFF6
 11065                           tablat	equ	0xFF5
 11066                           prodh	equ	0xFF4
 11067                           prodl	equ	0xFF3
 11068                           intcon	equ	0xFF2
 11069                           intcon2	equ	0xFF1
 11070                           postinc0	equ	0xFEE
 11071                           fsr0h	equ	0xFEA
 11072                           fsr0l	equ	0xFE9
 11073                           wreg	equ	0xFE8
 11074                           indf1	equ	0xFE7
 11075                           postdec1	equ	0xFE5
 11076                           fsr1h	equ	0xFE2
 11077                           fsr1l	equ	0xFE1
 11078                           bsr	equ	0xFE0
 11079                           indf2	equ	0xFDF
 11080                           fsr2h	equ	0xFDA
 11081                           fsr2l	equ	0xFD9
 11082                           status	equ	0xFD8
 11083                           
 11084 ;; *************** function _INT0_ISR *****************
 11085 ;; Defined at:
 11086 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11104 ;;Total ram usage:        0 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    2
 11107 ;; This function calls:
 11108 ;;		_INT0_CallBack
 11109 ;; This function is called by:
 11110 ;;		_INTERRUPT_InterruptManagerHigh
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114                           	psect	text69
 11115  002E64                     __ptext69:
 11116                           	opt stack 0
 11117  002E64                     _INT0_ISR:
 11118                           	opt stack 18
 11119                           
 11120                           ;ext_int.c: 34: (INTCONbits.INT0IF = 0);
 11121                           
 11122                           ;incstack = 0
 11123  002E64  92F2               	bcf	intcon,1,c	;volatile
 11124                           
 11125                           ;ext_int.c: 37: INT0_CallBack();
 11126  002E66  EC1E  F016         	call	_INT0_CallBack	;wreg free
 11127  002E6A  0012               	return		;funcret
 11128  002E6C                     __end_of_INT0_ISR:
 11129                           	opt stack 0
 11130                           tosu	equ	0xFFF
 11131                           tosh	equ	0xFFE
 11132                           tosl	equ	0xFFD
 11133                           pclatu	equ	0xFFB
 11134                           pclath	equ	0xFFA
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           intcon2	equ	0xFF1
 11143                           postinc0	equ	0xFEE
 11144                           fsr0h	equ	0xFEA
 11145                           fsr0l	equ	0xFE9
 11146                           wreg	equ	0xFE8
 11147                           indf1	equ	0xFE7
 11148                           postdec1	equ	0xFE5
 11149                           fsr1h	equ	0xFE2
 11150                           fsr1l	equ	0xFE1
 11151                           bsr	equ	0xFE0
 11152                           indf2	equ	0xFDF
 11153                           fsr2h	equ	0xFDA
 11154                           fsr2l	equ	0xFD9
 11155                           status	equ	0xFD8
 11156                           
 11157 ;; *************** function _INT0_CallBack *****************
 11158 ;; Defined at:
 11159 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;		None
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;		None
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      void 
 11166 ;; Registers used:
 11167 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;Total ram usage:        0 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:    1
 11180 ;; This function calls:
 11181 ;;		Absolute function
 11182 ;;		_INT0_DefaultInterruptHandler
 11183 ;; This function is called by:
 11184 ;;		_INT0_ISR
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text70
 11189  002C3C                     __ptext70:
 11190                           	opt stack 0
 11191  002C3C                     _INT0_CallBack:
 11192                           	opt stack 18
 11193                           
 11194                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 11195                           
 11196                           ;incstack = 0
 11197  002C3C  0100               	movlb	0	; () banked
 11198  002C3E  5176               	movf	_INT0_InterruptHandler& (0+255),w,b
 11199  002C40  1177               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11200  002C42  1178               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11201  002C44  B4D8               	btfsc	status,2,c
 11202  002C46  0012               	return	
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;ext_int.c: 45: {
 11206                           ;ext_int.c: 46: INT0_InterruptHandler();
 11207  002C48  D801               	call	i2u498_48
 11208  002C4A  0012               	return	
 11209  002C4C                     i2u498_48:
 11210  002C4C  0005               	push	
 11211  002C4E  6EFA               	movwf	pclath,c
 11212  002C50  5176               	movf	_INT0_InterruptHandler& (0+255),w,b
 11213  002C52  6EFD               	movwf	tosl,c
 11214  002C54  5177               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11215  002C56  6EFE               	movwf	tosh,c
 11216  002C58  5178               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11217  002C5A  6EFF               	movwf	tosu,c
 11218  002C5C  50FA               	movf	pclath,w,c
 11219  002C5E  0012               	return		;indir
 11220  002C60                     __end_of_INT0_CallBack:
 11221                           	opt stack 0
 11222                           tosu	equ	0xFFF
 11223                           tosh	equ	0xFFE
 11224                           tosl	equ	0xFFD
 11225                           pclatu	equ	0xFFB
 11226                           pclath	equ	0xFFA
 11227                           tblptru	equ	0xFF8
 11228                           tblptrh	equ	0xFF7
 11229                           tblptrl	equ	0xFF6
 11230                           tablat	equ	0xFF5
 11231                           prodh	equ	0xFF4
 11232                           prodl	equ	0xFF3
 11233                           intcon	equ	0xFF2
 11234                           intcon2	equ	0xFF1
 11235                           postinc0	equ	0xFEE
 11236                           fsr0h	equ	0xFEA
 11237                           fsr0l	equ	0xFE9
 11238                           wreg	equ	0xFE8
 11239                           indf1	equ	0xFE7
 11240                           postdec1	equ	0xFE5
 11241                           fsr1h	equ	0xFE2
 11242                           fsr1l	equ	0xFE1
 11243                           bsr	equ	0xFE0
 11244                           indf2	equ	0xFDF
 11245                           fsr2h	equ	0xFDA
 11246                           fsr2l	equ	0xFD9
 11247                           status	equ	0xFD8
 11248                           
 11249 ;; *************** function _INT0_DefaultInterruptHandler *****************
 11250 ;; Defined at:
 11251 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		None
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_EXT_INT_Initialize
 11275 ;;		_INT0_CallBack
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text71
 11280  002E74                     __ptext71:
 11281                           	opt stack 0
 11282  002E74                     _INT0_DefaultInterruptHandler:
 11283                           	opt stack 18
 11284                           
 11285                           ;incstack = 0
 11286  002E74  0012               	return		;funcret
 11287  002E76                     __end_of_INT0_DefaultInterruptHandler:
 11288                           	opt stack 0
 11289                           tosu	equ	0xFFF
 11290                           tosh	equ	0xFFE
 11291                           tosl	equ	0xFFD
 11292                           pclatu	equ	0xFFB
 11293                           pclath	equ	0xFFA
 11294                           tblptru	equ	0xFF8
 11295                           tblptrh	equ	0xFF7
 11296                           tblptrl	equ	0xFF6
 11297                           tablat	equ	0xFF5
 11298                           prodh	equ	0xFF4
 11299                           prodl	equ	0xFF3
 11300                           intcon	equ	0xFF2
 11301                           intcon2	equ	0xFF1
 11302                           postinc0	equ	0xFEE
 11303                           fsr0h	equ	0xFEA
 11304                           fsr0l	equ	0xFE9
 11305                           wreg	equ	0xFE8
 11306                           indf1	equ	0xFE7
 11307                           postdec1	equ	0xFE5
 11308                           fsr1h	equ	0xFE2
 11309                           fsr1l	equ	0xFE1
 11310                           bsr	equ	0xFE0
 11311                           indf2	equ	0xFDF
 11312                           fsr2h	equ	0xFDA
 11313                           fsr2l	equ	0xFD9
 11314                           status	equ	0xFD8
 11315                           tosu	equ	0xFFF
 11316                           tosh	equ	0xFFE
 11317                           tosl	equ	0xFFD
 11318                           pclatu	equ	0xFFB
 11319                           pclath	equ	0xFFA
 11320                           tblptru	equ	0xFF8
 11321                           tblptrh	equ	0xFF7
 11322                           tblptrl	equ	0xFF6
 11323                           tablat	equ	0xFF5
 11324                           prodh	equ	0xFF4
 11325                           prodl	equ	0xFF3
 11326                           intcon	equ	0xFF2
 11327                           intcon2	equ	0xFF1
 11328                           postinc0	equ	0xFEE
 11329                           fsr0h	equ	0xFEA
 11330                           fsr0l	equ	0xFE9
 11331                           wreg	equ	0xFE8
 11332                           indf1	equ	0xFE7
 11333                           postdec1	equ	0xFE5
 11334                           fsr1h	equ	0xFE2
 11335                           fsr1l	equ	0xFE1
 11336                           bsr	equ	0xFE0
 11337                           indf2	equ	0xFDF
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342                           	psect	text72
 11343  000000                     __ptext72:
 11344                           	opt stack 0
 11345                           tosu	equ	0xFFF
 11346                           tosh	equ	0xFFE
 11347                           tosl	equ	0xFFD
 11348                           pclatu	equ	0xFFB
 11349                           pclath	equ	0xFFA
 11350                           tblptru	equ	0xFF8
 11351                           tblptrh	equ	0xFF7
 11352                           tblptrl	equ	0xFF6
 11353                           tablat	equ	0xFF5
 11354                           prodh	equ	0xFF4
 11355                           prodl	equ	0xFF3
 11356                           intcon	equ	0xFF2
 11357                           intcon2	equ	0xFF1
 11358                           postinc0	equ	0xFEE
 11359                           fsr0h	equ	0xFEA
 11360                           fsr0l	equ	0xFE9
 11361                           wreg	equ	0xFE8
 11362                           indf1	equ	0xFE7
 11363                           postdec1	equ	0xFE5
 11364                           fsr1h	equ	0xFE2
 11365                           fsr1l	equ	0xFE1
 11366                           bsr	equ	0xFE0
 11367                           indf2	equ	0xFDF
 11368                           fsr2h	equ	0xFDA
 11369                           fsr2l	equ	0xFD9
 11370                           status	equ	0xFD8
 11371                           
 11372                           	psect	rparam
 11373  0000                     tosu	equ	0xFFF
 11374                           tosh	equ	0xFFE
 11375                           tosl	equ	0xFFD
 11376                           pclatu	equ	0xFFB
 11377                           pclath	equ	0xFFA
 11378                           tblptru	equ	0xFF8
 11379                           tblptrh	equ	0xFF7
 11380                           tblptrl	equ	0xFF6
 11381                           tablat	equ	0xFF5
 11382                           prodh	equ	0xFF4
 11383                           prodl	equ	0xFF3
 11384                           intcon	equ	0xFF2
 11385                           intcon2	equ	0xFF1
 11386                           postinc0	equ	0xFEE
 11387                           fsr0h	equ	0xFEA
 11388                           fsr0l	equ	0xFE9
 11389                           wreg	equ	0xFE8
 11390                           indf1	equ	0xFE7
 11391                           postdec1	equ	0xFE5
 11392                           fsr1h	equ	0xFE2
 11393                           fsr1l	equ	0xFE1
 11394                           bsr	equ	0xFE0
 11395                           indf2	equ	0xFDF
 11396                           fsr2h	equ	0xFDA
 11397                           fsr2l	equ	0xFD9
 11398                           status	equ	0xFD8
 11399                           
 11400                           	psect	temp
 11401  00004A                     btemp:
 11402                           	opt stack 0
 11403  00004A                     	ds	1
 11404  0000                     int$flags	set	btemp
 11405  0000                     wtemp6	set	btemp+1
 11406                           tosu	equ	0xFFF
 11407                           tosh	equ	0xFFE
 11408                           tosl	equ	0xFFD
 11409                           pclatu	equ	0xFFB
 11410                           pclath	equ	0xFFA
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           intcon2	equ	0xFF1
 11419                           postinc0	equ	0xFEE
 11420                           fsr0h	equ	0xFEA
 11421                           fsr0l	equ	0xFE9
 11422                           wreg	equ	0xFE8
 11423                           indf1	equ	0xFE7
 11424                           postdec1	equ	0xFE5
 11425                           fsr1h	equ	0xFE2
 11426                           fsr1l	equ	0xFE1
 11427                           bsr	equ	0xFE0
 11428                           indf2	equ	0xFDF
 11429                           fsr2h	equ	0xFDA
 11430                           fsr2l	equ	0xFD9
 11431                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    14
    Data        27
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      73
    BANK0           160     56     139
    BANK1           256     39      98
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK1[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    _main->___ftadd
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftadd

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  125382
                                             36 BANK1      3     3      0
                  _ADC_GetConversion
                         _Clear_Data
          _Clear_Zigbee_Store_Buffer
                           _Delay_ms
                            _InitSPI
                           _RF_reset
                         _Read_b_eep
                  _SYSTEM_Initialize
                        _Write_b_eep
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
              _init_ZIGBEE_nonbeacon
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   18423
                                             30 BANK0      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                             23 BANK0      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                             21 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                             25 BANK0      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                             25 BANK0      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                             30 BANK0      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                             25 BANK0      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    2644
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   43083
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0   10831
                                             30 BANK0      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    6034
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    2644
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    2644
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                             23 BANK0      7     4      3
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                             23 BANK0      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3014
                                             29 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     829
                                             21 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     245
                                             47 BANK0      3     0      3
                            ___ftmul (ARG)
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4241
                                             32 BANK0     15     9      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3813
                                              6 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4758
                                             50 BANK0      6     0      6
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2893
                                             21 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     625
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep                                          4     1      3    1359
                                             21 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     242
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                             21 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     121
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                             21 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     571
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Clear_Zigbee_Store_Buffer                            1     1      0      99
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clear_Data                                           2     2      0     102
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0       0
                                              0 BANK0     21    21      0
                          _ScanInput
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ScanInput                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1179
                                             16 COMRAM    20    20      0
                           _INT0_ISR
           _Zigbee_data_Store_Buffer
                       _read_RX_FIFO
                       i2_Clear_Data
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) i2_Clear_Data                                        2     2      0      69
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _Zigbee_data_Store_Buffer                            1     1      0      90
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Clear_Data
   _Clear_Zigbee_Store_Buffer
   _Delay_ms
   _InitSPI
     _delay
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Write_b_eep
   ___aldiv
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
   ___lwtoft
     ___ftpack
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ScanInput
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _Zigbee_data_Store_Buffer
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Clear_Data
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     27      62       7       38.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      49       1       77.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      12        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 07 15:24:54 2018

                                        _T 0011                                          _d 0017  
                                        _i 0018                            SPI_Read@TempVar 00BD  
                                       _R3 1007                                         _ii 009B  
                                       bsr 000FE0                                __CFG_BORV$3 000000  
                            _ID_READ_Store 008E                            _timer0ReloadVal 009F  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                             __CFG_CP4$OFF 000000                  i2read_ZIGBEE_short@data_r 0029  
                             __CFG_CP5$OFF 000000                               ___ftadd@exp1 0130  
                             ___ftadd@exp2 012F                               __CFG_CP6$OFF 000000  
                             __CFG_CP7$OFF 000000                               ___ftadd@sign 012E  
                                      l101 295A                                        l430 234A  
                                      l406 2986                                        l530 2DE2  
                                      l426 238A                                        l434 27FA  
                                      l450 1B4C                                        l427 22E8  
                                      l435 27D6                                        l451 1B60  
                                      l460 1C14                                        l452 1B74  
                                      l541 2CB4                                        l429 2310  
                                      l437 27EC                                        l461 1C28  
                                      l453 1B88                                        l509 271A  
                                      l542 2CB0                                        l462 1C3C  
                                      l454 1B9C                                        l447 1C78  
                                      l463 1C50                                        l455 1BB0  
                                      l464 1C64                                        l456 1BC4  
                                      l448 1B3A                                        l536 2DB8  
                                      l449 1CDC                                        l457 1BD8  
                                      l481 2508                                        l458 1BEC  
                                      l474 2798                                        l482 2524  
                                      l490 259A                                        l387 293C  
                                      l459 1C00                                        l483 2540  
                                      l491 25B6                                        l548 2D06  
                                      l901 160C                                        l478 255C  
                                      l479 24F4                                        l487 25D2  
                                      l575 276E                                        l495 1D64  
                                      l903 1660                                        l488 2586  
                                      l576 275A                                        l587 28F4  
                                      l909 16B8                                        l871 1116  
                                      l928 2B94                                        l880 120A  
                                      l882 1248                                        l883 1554  
                                      l891 1338                                        l875 113C  
                                      l868 1122                                        l893 1594  
                                      l885 127E                                        l877 119A  
                                      l869 110A                                        l990 2266  
                                      l894 15A8                                        l886 129C  
                                      l895 15BC                                        l887 12BA  
                                      l879 124C                                        l896 15D8  
                                      l993 22A6                                        l897 15D0  
                                      l889 1550                                        l994 22B4  
                                      l986 222C                                        l995 22CA  
                                      l987 2244                                        l899 15EC  
                                      _CRC 0083                                        l989 2272  
                             __CFG_CPB$OFF 000000                      i2Xor_check@data_value 0026  
                             __CFG_CPD$OFF 000000                                        _LQI 0021  
                         _set_long_address 2974                 ??_INT0_SetInterruptHandler 00C0  
                                      _Vcc 1004                       __size_of_Write_b_eep 003C  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 2C3C  
                  __size_of_start_transmit 0048                 i2read_ZIGBEE_short@address 0028  
                              i2_Xor_check 284E                               ___ftdiv@cntr 013A  
              read_ZIGBEE_long@address_low 002E                               ___ftdiv@sign 013F  
                                     l1200 1A72                      ?_write_TX_normal_FIFO 0026  
                                     l1202 1AA6                                       l1203 1AC6  
                                     l1211 2178                                       l1204 1AFC  
                                     l1212 21B6                                       l1213 21DC  
                                     l1230 1FEE                                       l1151 2428  
                                     l1231 1FFE                                       l1152 241E  
                                     l1224 1F6C                                       l1145 23CC  
                                     l1209 2150                                       l1146 23C2  
                                     l1226 1F94                                       l1227 1FC6  
                                     l1235 2B78                                       l1148 2400  
                                     l1180 19C6                                       l1228 1FD6  
                                     l1149 23EA                                       l1253 1F14  
                                     l1245 1E78                                       l1190 1A3A  
                                     l1254 1F08                                       l1191 1A2C  
                                     l1183 19D4                                       l1247 1EF0  
                                     l1184 19DE                                       l1176 199C  
                                     l1256 1F30                                       l1248 1EE0  
                                     l1185 1A44                                       l1199 1A80  
                                     l4536 291A                                       l4558 297E  
                                     l6262 1680                                       l6254 1660  
                                     l4756 2B8C                                       l4676 1D5C  
                                     l4696 1DB8                                       _DATA 0023  
                                     u3010 1B34                                       u3100 2432  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u3210 1D8E  
                                     _LATF 000F8E                                       _LATG 000F8F  
                                     u3060 23B4                                       u3230 1E3C  
                                     u3410 198E                                       u3340 2276  
                                     u5021 1E5C                                       u3510 1A4C  
                                     u3255 2902                                       u3256 2904  
                                     u3440 19B8                                       u5040 1E96  
                                     u3601 2160                                       u5210 1106  
                                     u3371 1956                                       u3540 1A88  
                                     u5220 1112                                       u3381 196E  
                                     u5045 1E8E                                       u3470 1A06  
                                     u5230 111E                                       u3631 1F54  
                                     u5080 1F1A                                       u3651 1F7C  
                                     u5251 11A8                                       u5500 162A  
                                     u3581 2138                                       u5510 163E  
                                     _Nilp 0008                                       _Tick 000D  
                                     _main 1010                               ___ftpack@arg 00BD  
                    write_TX_normal_FIFO@i 00CC                      write_TX_normal_FIFO@n 00CB  
                             ___ftpack@exp 00C0                                       _tick 0003  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004A                                 _Clear_Data 2908  
                          _Previous_Status 008F                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0124  
                            __CFG_IESO$OFF 000000                              __CFG_FOSC$HS1 000000  
                       _set_reception_mode 257A                              __CFG_MCLRE$ON 000000  
                             ___ftmul@cntr 00D5                   ?_set_frame_format_filter 0026  
                             ___param_bank 000000                               ___ftmul@sign 00D6  
                        i2Xor_check@length 0028                            _set_not_encrypt 2D4C  
                    __end_of_set_RSSI_mode 280C                            __end_of_InitSPI 2C18  
                          set_not_ACK@temp 00C1                               ___fttol@exp1 014E  
                   set_RSSI_mode@RSSI_mode 00C1                               ___fttol@lval 014A  
                __size_of_enable_interrupt 000E                    __end_of_TMR0_Initialize 2B12  
                         __end_of_INT0_ISR 2E6C             ??_TMR0_DefaultInterruptHandler 00A8  
                            __CFG_RETEN$ON 000000             __size_of_OSCILLATOR_Initialize 0014  
                      ?_set_reception_mode 0026                     ?_init_ZIGBEE_nonbeacon 0026  
            __end_of_OSCILLATOR_Initialize 2DB6                                ?i2_SPI_Read 0026  
                          __end_of___aldiv 22DC                                      ?_main 0026  
                                    _CHECK 009C                                      _EEADR 000F62  
                          __end_of___ftadd 1B22                            __end_of___ftdiv 220E  
                          __end_of___ftneg 2B86                  _Clear_Zigbee_Store_Buffer 2B86  
                      _data_TX_normal_FIFO 0115                            __end_of___ftmul 2038  
                                    _T0CON 000FD5                            __end_of___fttol 1F42  
                           __CFG_DEBUG$OFF 000000                                      _ERROR 0014  
                                    i2l530 2E14                                      i1l916 2A80  
                                    i1l861 00C4                                      i2l390 16F6  
                                    i1l918 2A8A                                      i1l862 00CC  
                                    i2l536 2E20                                      i2l392 1766  
                                    i2l393 17C6                                      i1l857 00CA  
                                    i1l858 0098                                      i2l387 29DA  
                                    i1l859 00A6                                      i2l575 2874  
                                    i2l576 2860                                      i2l850 20D2  
                                    i2l923 29E8                                      i2l851 20DA  
                                    i2l847 20D8                                      i2l849 20CE  
                                    _F_MSG 0090                                      _VALUE 000A  
                      i2SPI_Write@response 0026                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _PORTD 000F83  
                                    _PORTE 000F84                                      _RSSI2 0020  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0026                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _TRISF 000F97                                      _TRISG 000F98  
                            _VoltageOutput 006D                 ??_Zigbee_data_Store_Buffer 0026  
                                    _TX_ID 000E          __size_of_TMR0_SetInterruptHandler 000E  
                                    _Delta 0066                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                ?_TMR0_SetInterruptHandler 00BD                              __CFG_WRT3$OFF 000000  
                            __CFG_WRT4$OFF 000000                             __CFG_EBRT0$OFF 000000  
                            __CFG_WRT5$OFF 000000                                      _Light 0127  
                           __CFG_EBRT1$OFF 000000                              __CFG_WRT6$OFF 000000  
                           __CFG_EBRT2$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBRT3$OFF 000000                             __CFG_EBRT4$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBRT5$OFF 000000  
                           __CFG_EBRT6$OFF 000000                             __CFG_EBRT7$OFF 000000  
                         __end_of_TMR0_ISR 2B3A                                      _Trick 000C  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                                    _Store 0016                              __CFG_WRTD$OFF 000000  
                           Read_b_eep@badd 00BD                             __CFG_EBRTB$OFF 000000  
                                    _ckeck 007F                                      _delay 2CA4  
                   Write_b_eep@GIE_BIT_VAL 00C0                                      _tick2 0002  
                            ___ftpack@sign 00C1                                      _value 000B  
                         __end_of_SPI_Read 2DC8                                      pclath 000FFA  
                     ??_set_reception_mode 00C1                                      tablat 000FF5  
                         __end_of_RF_reset 2AEA                                      status 000FD8  
                                    wtemp6 004B                         __size_of_SPI_Write 0012  
           ?_INTERRUPT_InterruptManagerLow 0026                           __end_of_Delay_ms 2D18  
                 __end_of_read_ZIGBEE_long 26FE                            __initialization 25EA  
                             __end_of_main 16BE                           read_RX_FIFO@temp 0034  
                               _Read_b_eep 2DEC               __end_ofi2_write_ZIGBEE_short 2CE0  
                           _ADDRESS_long_1 0152                             _ADDRESS_long_2 015A  
                                   ??_main 00E0                              ___fttol@sign1 0149  
                            ?_read_RX_FIFO 0026                              __activetblptr 000003  
                   ??_write_TX_normal_FIFO 00C6                                     ?_delay 00BD  
                             ?i2_SPI_Write 0026                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                               _Send_Frame 0097                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _EEDATA 000F61  
                                   _EECON2 000F7E                                     _ANCON0 000F25  
                                   _ANCON1 000F24                                     _ANCON2 000F23  
                         __end_of___ftpack 2452                                     _ALT_ON 0091  
                                   _LENGTH 0024   __end_of_nonbeacon_PAN_coordinator_device 28CC  
__size_of_nonbeacon_PAN_coordinator_device 003E          ?_nonbeacon_PAN_coordinator_device 0026  
       ??_nonbeacon_PAN_coordinator_device 00C1           _nonbeacon_PAN_coordinator_device 288E  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l3520 29E0                                     _ID_SET 009A  
                                   i2l3818 29B8                           __end_of___lwtoft 2B60  
                         SPI_Write@command 00BE                                     _OSCCON 000FD3  
                                   _AdcRef 100A                    __end_of_set_not_encrypt 2D62  
                      __size_ofi2_SPI_Read 0010                                ?_Clear_Data 0026  
                             ?_set_channel 0026                           set_CCA_mode@temp 00C2  
                                ??_InitSPI 00C1                                     _TX_CRC 0085  
                       __size_of_ScanInput 002E                                     _Count1 009E  
                                   _Count2 009D                                     _Rv_CRC 0087  
                           __CFG_XINST$OFF 000000                    write_ZIGBEE_long@data_r 00C1  
                             ?_set_not_ACK 0026                   set_short_address@address 00C1  
                                ??___aldiv 00C5                                  ??___ftadd 012B  
                           __CFG_STVREN$ON 000000                                     _data_r 0022  
                                ??___ftdiv 0137                                  ??___ftneg 00DA  
                                ??___ftmul 00CE                                  ??___fttol 0144  
                               _Time_start 007D                           ?_TMR0_Initialize 0026  
                                   delay@l 00BF                                     clear_0 2630  
                                   clear_1 263C                                     clear_2 2648  
                        _set_WAKE_from_pin 2CE0                             ??_read_RX_FIFO 002F  
                          ??_INT0_CallBack 0026                           __end_of_pin_wake 2DDA  
                    ___ftmul@f3_as_product 00D2                        Xor_check@data_value 00BD  
                       ?_set_WAKE_from_pin 0026                          __end_of_SPI_Write 2DEC  
                       Xor_check@xor_value 00C1                               __mediumconst 0000  
                             _data_RX_FIFO 0100                             _start_transmit 26FE  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                  Zigbee_data_Store_Buffer@a 0026  
                 ADC_GetConversion@channel 00C1                      __end_of_TMR0_CallBack 2C3C  
 TMR0_SetInterruptHandler@InterruptHandler 00BD   INT0_SetInterruptHandler@InterruptHandler 00BD  
                      ??_set_WAKE_from_pin 00C1                          _init_ZIGBEE_basic 2452  
            __size_of_INTERRUPT_Initialize 0006           ??_INTERRUPT_InterruptManagerHigh 0036  
          ?_INTERRUPT_InterruptManagerHigh 0026                          _SYSTEM_Initialize 2D18  
                       ?_init_ZIGBEE_basic 0026                                 __accesstop 0060  
                  __end_of__initialization 264E                              ?_set_CCA_mode 0026  
                                ?_INT0_ISR 0026                                 ___ftadd@f1 00DA  
                               ___ftadd@f2 00DD                         __size_of_Xor_check 0042  
                               _Store_DATA 0070               __size_ofi2_read_ZIGBEE_short 0022  
                       ?_SYSTEM_Initialize 0026                   __end_of_set_long_address 29A8  
                            ___rparam_used 000001                                 ___ftdiv@f1 0131  
                               ___ftdiv@f2 0134                                 ___ftdiv@f3 013B  
                               ___ftneg@f1 00D7                                 ___ftmul@f1 00C8  
                               ___ftmul@f2 00CB                        ??_init_ZIGBEE_basic 00C6  
                               ___fttol@f1 0140                             __pcstackCOMRAM 0026  
                             __pidataBANK0 2E58                               __pidataBANK1 2DFE  
     nonbeacon_PAN_coordinator_device@temp 00C1                        ??_SYSTEM_Initialize 00C0  
                                ?_TMR0_ISR 0026                              __end_of_delay 2CC2  
                __end_of_set_WAKE_from_pin 2CFC                                ?_Read_b_eep 00BD  
                         _enable_interrupt 2E2E                                 __end_of_R3 100A  
                                ?_SPI_Read 0026                        __end_of_Resistance0 1004  
                               ___lwtoft@c 00C5                     __end_of_start_transmit 2746  
              __size_of_EXT_INT_Initialize 001A                                  ?_RF_reset 0026  
                    TMR0_ISR@CountCallBack 008B                        __size_of_Clear_Data 0036  
                        __end_of_ScanInput 2A9A                                  ?_Delay_ms 00BD  
                             Xor_check@xor 00C3                  __end_of_init_ZIGBEE_basic 24E8  
              __size_of_write_ZIGBEE_short 0024                               ?i2_Xor_check 0026  
            write_ZIGBEE_long@address_high 00C4                   read_ZIGBEE_short@address 00C0  
                                  ??_delay 00BF                  __end_of_SYSTEM_Initialize 2D32  
       __size_of_Clear_Zigbee_Store_Buffer 0026                            _ADDRESS_short_1 00E2  
                          _ADDRESS_short_2 00E9                                 __pbssBANK0 0060  
                               __pbssBANK1 0100                             ??_set_CCA_mode 00C1  
                          __CFG_PLLCFG$OFF 000000                       i2_write_ZIGBEE_short 2CC2  
                    _INT0_InterruptHandler 0076                                 ??_INT0_ISR 0026  
                         ?_set_not_encrypt 0026                              ?_set_TX_power 0026  
                  ??_init_ZIGBEE_nonbeacon 00C7           __end_of_TMR0_SetInterruptHandler 2E4A  
                               ??_TMR0_ISR 00A8                i2write_ZIGBEE_short@address 0029  
                       __size_of_pin_reset 0022                                 _enable_PLL 2D8E  
                             ??i2_SPI_Read 0026                                  ?___ftpack 00BD  
                               ??_SPI_Read 00BD                              ??_Write_b_eep 00C0  
                                  _DATA_RX 00A0                                    _DATA_TX 00A5  
                  __size_of_ADC_Initialize 0016                                  ?___lwtoft 00C5  
                        __end_of_Xor_check 2788                            ?_start_transmit 0026  
                               ??_RF_reset 00C1                                    _ID_READ 0099  
         __size_of_set_frame_format_filter 0092                                    _REFOCON 000F2A  
                               ??_Delay_ms 00BF                                    _OSCCON2 000F64  
                                  _F_ERROR 0013                                    _OSCTUNE 000F9B  
                                  _F_IdSet 0019                                    _SSP1BUF 000FC9  
              set_frame_format_filter@temp 00C2                                    _F_SetID 0010  
                                  _F_Input 001C                 i2write_ZIGBEE_short@data_r 0028  
                                  _T_ERROR 0081                     set_reception_mode@temp 00C2  
                      __size_of_Read_b_eep 0012                       __size_ofi2_SPI_Write 0010  
                    ?i2_write_ZIGBEE_short 0028          __size_of_INT0_SetInterruptHandler 000E  
                                  _T_Input 001D                       __end_of_read_RX_FIFO 1940  
                ?_INT0_SetInterruptHandler 00BD                              ?i2_Clear_Data 0026  
                                  _InitSPI 2BF4                              _Relay_On_Time 007B  
                       __end_ofi2_SPI_Read 2E2E                          SPI_Write@response 00BD  
                           ??_set_TX_power 00C6                            Xor_check@length 00BF  
                          __CFG_PWRTEN$OFF 000000                                  ?_pin_wake 0026  
                                  __Hparam 0000                              _HEADER_LENGHT 100D  
                            i2Clear_Data@n 0026                          ?_read_ZIGBEE_long 0028  
                                  __Lparam 0000                       __size_of_set_channel 01C0  
                 write_ZIGBEE_long@address 00BF                                _Resistance0 1001  
                                  ___aldiv 220E                         ??_read_ZIGBEE_long 002A  
                  read_ZIGBEE_long@address 0028                                    ___ftadd 1940  
                                  ___ftdiv 2126                                    ___ftneg 2B60  
               __size_of_set_WAKE_from_pin 001C                                    ___ftmul 1F42  
                                  ___fttol 1E4A                               __psmallconst 1000  
                                  _address 0009                       __size_of_set_not_ACK 0016  
                        set_long_address@i 00C3                                    __pcinit 25EA  
                               ??___ftpack 00C2                                    __ramtop 1000  
                                  __ptext0 1010                                    __ptext1 1CE2  
                                  __ptext2 26FE                                    __ptext3 2A9A  
                                  __ptext4 2DB6                                    __ptext5 2D4C  
                                  __ptext6 2D62                                    __ptext7 2746  
                                  __ptext8 2A10                                    __ptext9 257A  
                               ??___lwtoft 00C8                                  _T0CONbits 000FD5  
                    _OSCILLATOR_Initialize 2DA2                           ___aldiv@dividend 00BD  
                 ??_PIN_MANAGER_Initialize 00BD                          __CFG_MSSPMSK$MSK7 000000  
                   _address_TX_normal_FIFO 0089                 __size_of_init_ZIGBEE_basic 0096  
                      __end_of_Write_b_eep 2908                                 _set_PAN_ID 2A3E  
               __size_of_SYSTEM_Initialize 001A                             __pintcode_body 2038  
                   __size_of_set_RSSI_mode 0042                       end_of_initialization 264E  
                        __end_of_pin_reset 2C82                __size_of_set_reception_mode 0070  
                                Delay_ms@y 00BF                            _address_RX_FIFO 00E4  
                                  int_func 2038                             ??i2_Clear_Data 0026  
                             ??_Clear_Data 00BD                  set_channel@channel_number 00C6  
                        _write_ZIGBEE_long 2658          __size_of_Zigbee_data_Store_Buffer 0034  
                                _F_ID_SEND 0005                  ?_Zigbee_data_Store_Buffer 0026  
                               ??_pin_wake 00C1                                  _F_ID_Send 0007  
                       ?_write_ZIGBEE_long 00BF                           ___aldiv@quotient 00C7  
                                  postdec1 000FE5                        __end_of_DATA_LENGHT 100F  
                                  postinc0 000FEE                          _set_short_address 2A10  
                        set_TX_power@power 00C7                                ?_enable_PLL 0026  
                                _F_Calling 0093                         ?_set_short_address 00C1  
                      ??_write_ZIGBEE_long 00C2                       __end_of_set_CCA_mode 23A2  
                 _TMR0_SetInterruptHandler 2E3C                                  _PORTAbits 000F80  
                                _PORTCbits 000F82                                  _PORTFbits 000F85  
                      i2_read_ZIGBEE_short 2C82                        ??_set_short_address 00C3  
                       __end_of_Clear_Data 293E                                  _TRISCbits 000F94  
                                _SPI_Write 2DDA                        set_not_encrypt@temp 00C1  
                   ??i2_write_ZIGBEE_short 0029                             i2Xor_check@xor 002C  
                 __end_of_enable_interrupt 2E3C              __size_of_write_TX_normal_FIFO 0168  
                     __size_ofi2_Xor_check 0040                      _ZigBee_Receive_Buffer 0060  
                __end_of_write_ZIGBEE_long 26AC                   set_reception_mode@r_mode 00C1  
                              ___ftdiv@exp 013E                       ?i2_read_ZIGBEE_short 0026  
                                _T_ID_Send 000F                             __end_of_AdcRef 100D  
                        ?_set_long_address 00C1                          __size_of_INT0_ISR 0008  
                __end_of_set_short_address 2A3E                         i2SPI_Write@command 0027  
                              ___ftmul@exp 00D1                         ??_set_long_address 00C3  
                                _Device_ID 001E                                  _T_Calling 0001  
             __end_of_INTERRUPT_Initialize 2E72                              _set_RSSI_mode 27CA  
                             ??_Read_b_eep 00BF       __end_of_INT0_DefaultInterruptHandler 2E76  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 2E74  
                        __size_of_TMR0_ISR 0028                             _ADC_Initialize 2D78  
                              _Write_b_eep 28CC                     ?_OSCILLATOR_Initialize 0026  
                  _set_frame_format_filter 24E8                                  _Count_LED 0012  
                  set_long_address@address 00C1                          __size_of_SPI_Read 0012  
                    __end_of_INT0_CallBack 2C60                        start_initialization 25EA  
                     __end_of_set_TX_power 27CA                   __size_of_TMR0_Initialize 0028  
          __size_of_PIN_MANAGER_Initialize 0042                          __size_of_RF_reset 0028  
                              __end_of_Vcc 1007                                ?_set_PAN_ID 00C1  
                               ?_SPI_Write 0026                                  _ScanInput 2A6C  
                        __size_of_Delay_ms 001C                      __size_of_read_RX_FIFO 0282  
                                _InputRead 001A                        __size_of_enable_PLL 0014  
                       __end_of_Read_b_eep 2DFE                      ??i2_read_ZIGBEE_short 0028  
                              _DATA_LENGHT 100E                                  _Value_LDR 0079  
                           ?_set_RSSI_mode 0026            set_frame_format_filter@fff_mode 00C1  
                             Delay_ms@time 00BD                     __size_of_TMR0_CallBack 0024  
                         ??_start_transmit 00C1                     __end_of_ADC_Initialize 2D8E  
           __size_of_init_ZIGBEE_nonbeacon 0024                                __pdataBANK0 00E0  
                              __pdataBANK1 0152              __end_of_init_ZIGBEE_nonbeacon 2BD0  
                            _ResistanceLDR 006A                 __end_of_EXT_INT_Initialize 2D4C  
            ?_INT0_DefaultInterruptHandler 0026                       __end_ofi2_Clear_Data 29DC  
                             _read_RX_FIFO 16BE                          __size_of___ftpack 00B0  
               __end_of_write_ZIGBEE_short 2BF4                       i2Xor_check@xor_value 002A  
                              __pbssCOMRAM 0001           __end_of_INT0_SetInterruptHandler 2E58  
                        __size_of___lwtoft 0026                              __pcstackBANK0 00A8  
                            __pcstackBANK1 012B                          set_RSSI_mode@temp 00C2  
                                _Xor_check 2746                                 ?_ScanInput 0026  
                 write_ZIGBEE_short@data_r 00BF                 __size_of_write_ZIGBEE_long 0054  
             write_ZIGBEE_long@address_low 00C5                    read_ZIGBEE_short@data_r 00BF  
                                 ?_InitSPI 0026                      _TMR0_InterruptHandler 0073  
                                _main$2280 014F                     _PIN_MANAGER_Initialize 280C  
               __size_of_set_short_address 002E                          __CFG_CCP2MX$PORTC 000000  
                                __pintcode 0008                      __size_of_set_CCA_mode 00C6  
             read_ZIGBEE_long@address_high 002D                          __size_of_pin_wake 0012  
                                 ?___aldiv 00BD                                   ?___ftadd 00DA  
               Clear_Zigbee_Store_Buffer@d 00BD                        __size_of_set_PAN_ID 002E  
                                 ?___ftdiv 0131                                   ?___ftneg 00D7  
                 __size_of_set_not_encrypt 0016                                   ?___ftmul 00C8  
                                 ?___fttol 0140                            ?_ADC_Initialize 0026  
                ??_set_frame_format_filter 00C1                                __pintcodelo 0018  
                        i2SPI_Read@TempVar 0026                                __smallconst 1000  
                             _Send_Frame_2 0096                  __size_of_read_ZIGBEE_long 0052  
         __end_of_Zigbee_data_Store_Buffer 2A10                               _F_LDR_STATUS 008D  
                               ?_Xor_check 00BD                              ??i2_SPI_Write 0026  
                              ??_SPI_Write 00BD                     read_ZIGBEE_long@data_r 002C  
                           __size_of_delay 001E                              _TMR0_CallBack 2C18  
                     _INTERRUPT_Initialize 2E6C                            ___aldiv@divisor 00C1  
                        ??_TMR0_Initialize 00C0                            ___aldiv@counter 00C5  
                                 _INT0_ISR 2E64                               _set_CCA_mode 22DC  
                            ??_set_channel 00C6                 ?_Clear_Zigbee_Store_Buffer 0026  
                                _pin_reset 2C60                                   _PAN_ID_1 00E0  
                                 _PAN_ID_2 00E7                                   _INTTRUPT 0025  
                                 i1u500_28 2C28                                   i1u501_20 2B2A  
                          ??_set_RSSI_mode 00C1                                  _lost_data 001F  
                                 _F_BUZZER 0098                                   i2u180_40 17CA  
               ??_TMR0_SetInterruptHandler 00C0                                   _PIR1bits 000F9E  
                                 i2u498_48 2C4C                              ??_set_not_ACK 00C1  
                                 _RCONbits 000FD0                                  _slave_add 0015  
                                 _TMR0_ISR 2B12                               ??_enable_PLL 00C6  
                                 _F_Buzzer 0094                                   _SPI_Read 2DB6  
                    __size_of_set_TX_power 0042                                 _ADCON0bits 000FC2  
                         __CFG_SOSCSEL$DIG 000000                            Write_b_eep@badd 00BD  
                                 _RF_reset 2AC2                            Write_b_eep@data 00BF  
                                 _T_BUZZER 0006             ??_INT0_DefaultInterruptHandler 0026  
                                 _Delay_ms 2CFC                              read_RX_FIFO@i 0035  
                           ?_TMR0_CallBack 0026                 __end_of_set_reception_mode 25EA  
                              ??_ScanInput 00A8                                _INTCON2bits 000FF1  
                                copy_data0 25FE                                  copy_data1 261E  
                    ?_INTERRUPT_Initialize 0026                   _INT0_SetInterruptHandler 2E4A  
          __end_of_set_frame_format_filter 257A                          ?_enable_interrupt 0026  
                       __end_of_enable_PLL 2DA2                        __end_ofi2_SPI_Write 2E1E  
                       ??_enable_interrupt 00C1                          _read_ZIGBEE_short 2A9A  
                               _EECON1bits 000F7F                                 ?_pin_reset 0026  
                              Clear_Data@n 00BD          __end_of_Clear_Zigbee_Store_Buffer 2BAC  
                         __size_of_InitSPI 0024                                   __Hrparam 0000  
                       ?_read_ZIGBEE_short 0026                               _set_TX_power 2788  
                                 __Lrparam 0000                          _ADC_GetConversion 293E  
                       __CFG_BOREN$SBORDIS 000000                        __end_of_set_channel 1CE2  
             __end_of_write_TX_normal_FIFO 1E4A                                   _Portread 001B  
                  ??_OSCILLATOR_Initialize 00BD                         ?_ADC_GetConversion 00BD  
                    __size_ofi2_Clear_Data 0034                           __size_of___aldiv 00CE  
                         __size_of___ftadd 01E2                           __size_of___ftdiv 00E8  
                         __size_of___ftneg 0026                           __size_of___ftmul 00F6  
                         __size_of___fttol 00F8                        ??_read_ZIGBEE_short 00BF  
                                 ___ftpack 23A2                               ?_Write_b_eep 00BD  
                      __end_of_set_not_ACK 2D78                                   ___lwtoft 2B3A  
                __size_of_set_long_address 0034                        ??_ADC_GetConversion 00BF  
                        ??_set_not_encrypt 00C1            ??_INTERRUPT_InterruptManagerLow 00A8  
                            ??i2_Xor_check 0029                               ??_set_PAN_ID 00C3  
                              ??_Xor_check 00C0                                   __ptext10 2974  
                                 __ptext11 24E8                                   __ptext20 27CA  
                                 __ptext12 2CE0                                   __ptext21 22DC  
                                 __ptext13 2788                                   __ptext30 2B3A  
                                 __ptext22 2DC8                                   __ptext14 2A3E  
                                 __ptext31 1E4A                                   __ptext23 2CFC  
                                 __ptext15 2C60                                   __ptext40 2AEA  
                                 __ptext32 2B60                                   __ptext24 2452  
                                 __ptext16 288E                                   __ptext41 2E3C  
                                 __ptext33 1F42                                   __ptext25 2D8E  
                                 __ptext17 2BAC                                   __ptext50 2CA4  
                                 __ptext42 280C                                   __ptext34 2126  
                                 __ptext26 2658                                   __ptext18 1B22  
                                 __ptext51 2B86                                   __ptext43 2DA2  
                                 __ptext35 1940                                   __ptext27 2E2E  
                                 __ptext19 2AC2                                   __ptext60 2C82  
                                 __ptext52 2908                                   __ptext44 2E6C  
                                 __ptext36 23A2                                   __ptext28 2BD0  
                                 __ptext61 284E                                   __ptext53 293E  
                                 __ptext45 2D32                                   __ptext37 220E  
                                 __ptext29 2DDA                                   __ptext70 2C3C  
                                 __ptext62 29A8                                   __ptext46 2E4A  
                                 __ptext38 28CC                                   __ptext71 2E74  
                                 __ptext63 16BE                                   __ptext55 2B12  
                                 __ptext47 2D78                                   __ptext39 2D18  
                                 __ptext72 0000                                   __ptext64 2CC2  
                                 __ptext56 2C18                                   __ptext48 2DEC  
                                 __ptext65 26AC                                   __ptext57 2E72  
                                 __ptext49 2BF4                                   __ptext66 2E0E  
                                 __ptext58 2A6C                                   __ptext67 2E1E  
                                 __ptext68 29DC                                   __ptext69 2E64  
                             _SSP1CON1bits 000FC6                  __end_of_read_ZIGBEE_short 2AC2  
                 _Zigbee_data_Store_Buffer 29DC              __size_ofi2_write_ZIGBEE_short 001E  
                            __size_of_main 06AE                                   delay@dly 00BD  
                             i2_Clear_Data 29A8       __end_of_TMR0_DefaultInterruptHandler 2E74  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 2E72  
                __end_of_ADC_GetConversion 2974                                   _pin_wake 2DC8  
                      __CFG_RTCOSC$SOSCREF 000000                                   int$flags 004A  
                                 _portread 0004                       set_CCA_mode@CCA_mode 00C1  
                       __end_of_set_PAN_ID 2A6C                  write_ZIGBEE_short@address 00C0  
                             _SSP1STATbits 000FC7                        __CFG_INTOSCSEL$HIGH 000000  
                               _RECEIVE_OK 0095                           _read_ZIGBEE_long 26AC  
                               _INTCONbits 000FF2                          set_PAN_ID@address 00C1  
                          ??_TMR0_CallBack 00A8                     ??_INTERRUPT_Initialize 00BD  
              __end_ofi2_read_ZIGBEE_short 2CA4                                i2_SPI_Write 2E0E  
                       _EXT_INT_Initialize 2D32                                   intlevel1 0000  
                                 intlevel2 0000                         _write_ZIGBEE_short 2BD0  
                      __end_ofi2_Xor_check 288E                    ?_PIN_MANAGER_Initialize 0026  
                      ?_EXT_INT_Initialize 0026                                _set_channel 1B22  
                              ??_pin_reset 00C1                      __end_of_HEADER_LENGHT 100E  
                         ??_ADC_Initialize 00BD                     __size_of_INT0_CallBack 0024  
            ?_TMR0_DefaultInterruptHandler 0026                        ?_write_ZIGBEE_short 00BF  
                              _set_not_ACK 2D62                         __CFG_WDTPS$1048576 000000  
                               i2_SPI_Read 2E1E     __end_of_INTERRUPT_InterruptManagerHigh 2126  
  __size_of_INTERRUPT_InterruptManagerHigh 211E             _INTERRUPT_InterruptManagerHigh 0008  
                    _init_ZIGBEE_nonbeacon 2BAC                       ??_EXT_INT_Initialize 00C0  
                               _SEQ_NUMBER 00E6                            _TMR0_Initialize 2AEA  
                             ___aldiv@sign 00C6                       ??_write_ZIGBEE_short 00C0  
                             _F_Relay_Time 0092      __end_of_INTERRUPT_InterruptManagerLow 0124  
   __size_of_INTERRUPT_InterruptManagerLow 010C              _INTERRUPT_InterruptManagerLow 0018  
                     _write_TX_normal_FIFO 1CE2             __end_of_PIN_MANAGER_Initialize 284E  
               __size_of_read_ZIGBEE_short 0028                        __CFG_BORPWR$ZPBORMV 000000  
              ??_Clear_Zigbee_Store_Buffer 00BD                 __size_of_ADC_GetConversion 0036  
