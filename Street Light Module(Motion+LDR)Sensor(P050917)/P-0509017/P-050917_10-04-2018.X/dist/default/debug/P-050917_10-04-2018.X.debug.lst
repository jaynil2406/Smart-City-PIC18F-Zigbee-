

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 07 14:07:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 1.45
    95                           ; Generated 16/11/2017 GMT
    96                           ; 
    97                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F67K22 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK0
   130  002DF0                     __pidataBANK0:
   131                           	opt stack 0
   132                           
   133                           ;initializer for _PAN_ID_1
   134  002DF0  03                 	db	3
   135  002DF1  03                 	db	3
   136                           
   137                           ;initializer for _ADDRESS_short_1
   138  002DF2  01                 	db	1
   139  002DF3  01                 	db	1
   140                           
   141                           ;initializer for _address_RX_FIFO
   142  002DF4  0300               	dw	768
   143                           
   144                           ;initializer for _SEQ_NUMBER
   145  002DF6  23                 	db	35
   146                           
   147                           ;initializer for _PAN_ID_2
   148  002DF7  03                 	db	3
   149  002DF8  03                 	db	3
   150                           
   151                           ;initializer for _ADDRESS_short_2
   152  002DF9  02                 	db	2
   153  002DFA  02                 	db	2
   154                           
   155                           	psect	idataBANK1
   156  002D96                     __pidataBANK1:
   157                           	opt stack 0
   158                           
   159                           ;initializer for _ADDRESS_long_1
   160  002D96  01                 	db	1
   161  002D97  01                 	db	1
   162  002D98  01                 	db	1
   163  002D99  01                 	db	1
   164  002D9A  01                 	db	1
   165  002D9B  01                 	db	1
   166  002D9C  01                 	db	1
   167  002D9D  01                 	db	1
   168                           
   169                           ;initializer for _ADDRESS_long_2
   170  002D9E  02                 	db	2
   171  002D9F  02                 	db	2
   172  002DA0  02                 	db	2
   173  002DA1  02                 	db	2
   174  002DA2  02                 	db	2
   175  002DA3  02                 	db	2
   176  002DA4  02                 	db	2
   177  002DA5  02                 	db	2
   178                           
   179                           	psect	smallconst
   180  001000                     __psmallconst:
   181                           	opt stack 0
   182  001000  00                 	db	0
   183  001001                     _Resistance0:
   184                           	opt stack 0
   185  001001  B3                 	db	179
   186  001002  71                 	db	113
   187  001003  49                 	db	73
   188  001004                     __end_of_Resistance0:
   189                           	opt stack 0
   190  001004                     _Vcc:
   191                           	opt stack 0
   192  001004  33                 	db	51
   193  001005  53                 	db	83
   194  001006  40                 	db	64
   195  001007                     __end_of_Vcc:
   196                           	opt stack 0
   197  001007                     _R3:
   198                           	opt stack 0
   199  001007  40                 	db	64
   200  001008  1C                 	db	28
   201  001009  46                 	db	70
   202  00100A                     __end_of_R3:
   203                           	opt stack 0
   204  00100A                     _AdcRef:
   205                           	opt stack 0
   206  00100A  33                 	db	51
   207  00100B  53                 	db	83
   208  00100C  3A                 	db	58
   209  00100D                     __end_of_AdcRef:
   210                           	opt stack 0
   211  00100D                     _HEADER_LENGHT:
   212                           	opt stack 0
   213  00100D  0B                 	db	11
   214  00100E                     __end_of_HEADER_LENGHT:
   215                           	opt stack 0
   216  00100E                     _DATA_LENGHT:
   217                           	opt stack 0
   218  00100E  05                 	db	5
   219  00100F                     __end_of_DATA_LENGHT:
   220                           	opt stack 0
   221  0000                     _REFOCON	set	3882
   222  0000                     _ANCON2	set	3875
   223  0000                     _ANCON1	set	3876
   224  0000                     _ANCON0	set	3877
   225  0000                     _PORTE	set	3972
   226  0000                     _PORTD	set	3971
   227  0000                     _PORTAbits	set	3968
   228  0000                     _EECON2	set	3966
   229  0000                     _EECON1bits	set	3967
   230  0000                     _EEDATA	set	3937
   231  0000                     _EEADR	set	3938
   232  0000                     _PIR1bits	set	3998
   233  0000                     _SSP1BUF	set	4041
   234  0000                     _SSP1STATbits	set	4039
   235  0000                     _TRISCbits	set	3988
   236  0000                     _SSP1CON1bits	set	4038
   237  0000                     _PORTFbits	set	3973
   238  0000                     _PORTCbits	set	3970
   239  0000                     _OSCTUNE	set	3995
   240  0000                     _OSCCON2	set	3940
   241  0000                     _OSCCON	set	4051
   242  0000                     _T0CONbits	set	4053
   243  0000                     _T0CON	set	4053
   244  0000                     _TMR0L	set	4054
   245  0000                     _TMR0H	set	4055
   246  0000                     _ADCON0bits	set	4034
   247  0000                     _ADRESL	set	4035
   248  0000                     _ADRESH	set	4036
   249  0000                     _ADCON2	set	4032
   250  0000                     _ADCON1	set	4033
   251  0000                     _ADCON0	set	4034
   252  0000                     _TRISD	set	3989
   253  0000                     _TRISC	set	3988
   254  0000                     _TRISB	set	3987
   255  0000                     _TRISG	set	3992
   256  0000                     _TRISA	set	3986
   257  0000                     _TRISF	set	3991
   258  0000                     _TRISE	set	3990
   259  0000                     _LATC	set	3979
   260  0000                     _LATG	set	3983
   261  0000                     _LATB	set	3978
   262  0000                     _LATF	set	3982
   263  0000                     _LATA	set	3977
   264  0000                     _LATD	set	3980
   265  0000                     _LATE	set	3981
   266  0000                     _RCONbits	set	4048
   267  0000                     _INTCON2bits	set	4081
   268  0000                     _INTCONbits	set	4082
   269                           
   270                           ; #config settings
   271  00100F  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           	psect	cinit
   274  0025B6                     __pcinit:
   275                           	opt stack 0
   276  0025B6                     start_initialization:
   277                           	opt stack 0
   278  0025B6                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Initialize objects allocated to BANK1 (16 bytes)
   282                           ; load TBLPTR registers with __pidataBANK1
   283  0025B6  0E96               	movlw	low __pidataBANK1
   284  0025B8  6EF6               	movwf	tblptrl,c
   285  0025BA  0E2D               	movlw	high __pidataBANK1
   286  0025BC  6EF7               	movwf	tblptrh,c
   287  0025BE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   288  0025C0  6EF8               	movwf	tblptru,c
   289  0025C2  EE01  F052         	lfsr	0,__pdataBANK1
   290  0025C6  EE10 F010          	lfsr	1,16
   291  0025CA                     copy_data0:
   292  0025CA  0009               	tblrd		*+
   293  0025CC  CFF5 FFEE          	movff	tablat,postinc0
   294  0025D0  50E5               	movf	postdec1,w,c
   295  0025D2  50E1               	movf	fsr1l,w,c
   296  0025D4  E1FA               	bnz	copy_data0
   297                           
   298                           ; Initialize objects allocated to BANK0 (11 bytes)
   299                           ; load TBLPTR registers with __pidataBANK0
   300  0025D6  0EF0               	movlw	low __pidataBANK0
   301  0025D8  6EF6               	movwf	tblptrl,c
   302  0025DA  0E2D               	movlw	high __pidataBANK0
   303  0025DC  6EF7               	movwf	tblptrh,c
   304  0025DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   305  0025E0  6EF8               	movwf	tblptru,c
   306  0025E2  EE00  F0E0         	lfsr	0,__pdataBANK0
   307  0025E6  EE10 F00B          	lfsr	1,11
   308  0025EA                     copy_data1:
   309  0025EA  0009               	tblrd		*+
   310  0025EC  CFF5 FFEE          	movff	tablat,postinc0
   311  0025F0  50E5               	movf	postdec1,w,c
   312  0025F2  50E1               	movf	fsr1l,w,c
   313  0025F4  E1FA               	bnz	copy_data1
   314                           
   315                           ; Clear objects allocated to BANK1 (43 bytes)
   316  0025F6  EE01  F000         	lfsr	0,__pbssBANK1
   317  0025FA  0E2B               	movlw	43
   318  0025FC                     clear_0:
   319  0025FC  6AEE               	clrf	postinc0,c
   320  0025FE  06E8               	decf	wreg,f,c
   321  002600  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to BANK0 (72 bytes)
   324  002602  EE00  F060         	lfsr	0,__pbssBANK0
   325  002606  0E48               	movlw	72
   326  002608                     clear_1:
   327  002608  6AEE               	clrf	postinc0,c
   328  00260A  06E8               	decf	wreg,f,c
   329  00260C  E1FD               	bnz	clear_1
   330                           
   331                           ; Clear objects allocated to COMRAM (37 bytes)
   332  00260E  EE00  F001         	lfsr	0,__pbssCOMRAM
   333  002612  0E25               	movlw	37
   334  002614                     clear_2:
   335  002614  6AEE               	clrf	postinc0,c
   336  002616  06E8               	decf	wreg,f,c
   337  002618  E1FD               	bnz	clear_2
   338  00261A                     end_of_initialization:
   339                           	opt stack 0
   340  00261A                     __end_of__initialization:
   341                           	opt stack 0
   342  00261A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343  00261C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344  00261E  0100               	movlb	0
   345  002620  EF08  F008         	goto	_main	;jump to C main() function
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	bssCOMRAM
   356  000001                     __pbssCOMRAM:
   357                           	opt stack 0
   358  000001                     _T_Calling:
   359                           	opt stack 0
   360  000001                     	ds	1
   361  000002                     _tick2:
   362                           	opt stack 0
   363  000002                     	ds	1
   364  000003                     _tick:
   365                           	opt stack 0
   366  000003                     	ds	1
   367  000004                     _portread:
   368                           	opt stack 0
   369  000004                     	ds	1
   370  000005                     _F_ID_SEND:
   371                           	opt stack 0
   372  000005                     	ds	1
   373  000006                     _T_BUZZER:
   374                           	opt stack 0
   375  000006                     	ds	1
   376  000007                     _F_ID_Send:
   377                           	opt stack 0
   378  000007                     	ds	1
   379  000008                     _Nilp:
   380                           	opt stack 0
   381  000008                     	ds	1
   382  000009                     _address:
   383                           	opt stack 0
   384  000009                     	ds	1
   385  00000A                     _VALUE:
   386                           	opt stack 0
   387  00000A                     	ds	1
   388  00000B                     _value:
   389                           	opt stack 0
   390  00000B                     	ds	1
   391  00000C                     _Trick:
   392                           	opt stack 0
   393  00000C                     	ds	1
   394  00000D                     _Tick:
   395                           	opt stack 0
   396  00000D                     	ds	1
   397  00000E                     _TX_ID:
   398                           	opt stack 0
   399  00000E                     	ds	1
   400  00000F                     _T_ID_Send:
   401                           	opt stack 0
   402  00000F                     	ds	1
   403  000010                     _F_SetID:
   404                           	opt stack 0
   405  000010                     	ds	1
   406  000011                     _T:
   407                           	opt stack 0
   408  000011                     	ds	1
   409  000012                     _Count_LED:
   410                           	opt stack 0
   411  000012                     	ds	1
   412  000013                     _F_ERROR:
   413                           	opt stack 0
   414  000013                     	ds	1
   415  000014                     _ERROR:
   416                           	opt stack 0
   417  000014                     	ds	1
   418  000015                     _slave_add:
   419                           	opt stack 0
   420  000015                     	ds	1
   421  000016                     _Store:
   422                           	opt stack 0
   423  000016                     	ds	1
   424  000017                     _d:
   425                           	opt stack 0
   426  000017                     	ds	1
   427  000018                     _i:
   428                           	opt stack 0
   429  000018                     	ds	1
   430  000019                     _F_IdSet:
   431                           	opt stack 0
   432  000019                     	ds	1
   433  00001A                     _InputRead:
   434                           	opt stack 0
   435  00001A                     	ds	1
   436  00001B                     _Portread:
   437                           	opt stack 0
   438  00001B                     	ds	1
   439  00001C                     _F_Input:
   440                           	opt stack 0
   441  00001C                     	ds	1
   442  00001D                     _T_Input:
   443                           	opt stack 0
   444  00001D                     	ds	1
   445  00001E                     _Device_ID:
   446                           	opt stack 0
   447  00001E                     	ds	1
   448  00001F                     _lost_data:
   449                           	opt stack 0
   450  00001F                     	ds	1
   451  000020                     _RSSI2:
   452                           	opt stack 0
   453  000020                     	ds	1
   454  000021                     _LQI:
   455                           	opt stack 0
   456  000021                     	ds	1
   457  000022                     _data_r:
   458                           	opt stack 0
   459  000022                     	ds	1
   460  000023                     _DATA:
   461                           	opt stack 0
   462  000023                     	ds	1
   463  000024                     _LENGTH:
   464                           	opt stack 0
   465  000024                     	ds	1
   466  000025                     _INTTRUPT:
   467                           	opt stack 0
   468  000025                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	bssBANK0
   479  000060                     __pbssBANK0:
   480                           	opt stack 0
   481  000060                     _ZigBee_Receive_Buffer:
   482                           	opt stack 0
   483  000060                     	ds	6
   484  000066                     _Delta:
   485                           	opt stack 0
   486  000066                     	ds	4
   487  00006A                     _ResistanceLDR:
   488                           	opt stack 0
   489  00006A                     	ds	3
   490  00006D                     _VoltageOutput:
   491                           	opt stack 0
   492  00006D                     	ds	3
   493  000070                     _Store_DATA:
   494                           	opt stack 0
   495  000070                     	ds	3
   496  000073                     _TMR0_InterruptHandler:
   497                           	opt stack 0
   498  000073                     	ds	3
   499  000076                     _INT0_InterruptHandler:
   500                           	opt stack 0
   501  000076                     	ds	3
   502  000079                     _Value_LDR:
   503                           	opt stack 0
   504  000079                     	ds	2
   505  00007B                     _Relay_On_Time:
   506                           	opt stack 0
   507  00007B                     	ds	2
   508  00007D                     _Time_start:
   509                           	opt stack 0
   510  00007D                     	ds	2
   511  00007F                     _ckeck:
   512                           	opt stack 0
   513  00007F                     	ds	2
   514  000081                     _T_ERROR:
   515                           	opt stack 0
   516  000081                     	ds	2
   517  000083                     _CRC:
   518                           	opt stack 0
   519  000083                     	ds	2
   520  000085                     _TX_CRC:
   521                           	opt stack 0
   522  000085                     	ds	2
   523  000087                     _Rv_CRC:
   524                           	opt stack 0
   525  000087                     	ds	2
   526  000089                     _address_TX_normal_FIFO:
   527                           	opt stack 0
   528  000089                     	ds	2
   529  00008B                     TMR0_ISR@CountCallBack:
   530                           	opt stack 0
   531  00008B                     	ds	2
   532  00008D                     _F_LDR_STATUS:
   533                           	opt stack 0
   534  00008D                     	ds	1
   535  00008E                     _ID_READ_Store:
   536                           	opt stack 0
   537  00008E                     	ds	1
   538  00008F                     _Previous_Status:
   539                           	opt stack 0
   540  00008F                     	ds	1
   541  000090                     _F_MSG:
   542                           	opt stack 0
   543  000090                     	ds	1
   544  000091                     _ALT_ON:
   545                           	opt stack 0
   546  000091                     	ds	1
   547  000092                     _F_Relay_Time:
   548                           	opt stack 0
   549  000092                     	ds	1
   550  000093                     _F_Calling:
   551                           	opt stack 0
   552  000093                     	ds	1
   553  000094                     _F_Buzzer:
   554                           	opt stack 0
   555  000094                     	ds	1
   556  000095                     _RECEIVE_OK:
   557                           	opt stack 0
   558  000095                     	ds	1
   559  000096                     _Send_Frame_2:
   560                           	opt stack 0
   561  000096                     	ds	1
   562  000097                     _Send_Frame:
   563                           	opt stack 0
   564  000097                     	ds	1
   565  000098                     _F_BUZZER:
   566                           	opt stack 0
   567  000098                     	ds	1
   568  000099                     _ID_READ:
   569                           	opt stack 0
   570  000099                     	ds	1
   571  00009A                     _ID_SET:
   572                           	opt stack 0
   573  00009A                     	ds	1
   574  00009B                     _ii:
   575                           	opt stack 0
   576  00009B                     	ds	1
   577  00009C                     _CHECK:
   578                           	opt stack 0
   579  00009C                     	ds	1
   580  00009D                     _Count2:
   581                           	opt stack 0
   582  00009D                     	ds	1
   583  00009E                     _Count1:
   584                           	opt stack 0
   585  00009E                     	ds	1
   586  00009F                     _timer0ReloadVal:
   587                           	opt stack 0
   588  00009F                     	ds	1
   589  0000A0                     _DATA_RX:
   590                           	opt stack 0
   591  0000A0                     	ds	5
   592  0000A5                     _DATA_TX:
   593                           	opt stack 0
   594  0000A5                     	ds	3
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           postdec1	equ	0xFE5
   602                           fsr1l	equ	0xFE1
   603                           
   604                           	psect	dataBANK0
   605  0000E0                     __pdataBANK0:
   606                           	opt stack 0
   607  0000E0                     _PAN_ID_1:
   608                           	opt stack 0
   609  0000E0                     	ds	2
   610  0000E2                     _ADDRESS_short_1:
   611                           	opt stack 0
   612  0000E2                     	ds	2
   613  0000E4                     _address_RX_FIFO:
   614                           	opt stack 0
   615  0000E4                     	ds	2
   616  0000E6                     _SEQ_NUMBER:
   617                           	opt stack 0
   618  0000E6                     	ds	1
   619  0000E7                     _PAN_ID_2:
   620                           	opt stack 0
   621  0000E7                     	ds	2
   622  0000E9                     _ADDRESS_short_2:
   623                           	opt stack 0
   624  0000E9                     	ds	2
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634                           	psect	bssBANK1
   635  000100                     __pbssBANK1:
   636                           	opt stack 0
   637  000100                     _data_RX_FIFO:
   638                           	opt stack 0
   639  000100                     	ds	21
   640  000115                     _data_TX_normal_FIFO:
   641                           	opt stack 0
   642  000115                     	ds	18
   643  000127                     _Light:
   644                           	opt stack 0
   645  000127                     	ds	4
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           postinc0	equ	0xFEE
   651                           wreg	equ	0xFE8
   652                           postdec1	equ	0xFE5
   653                           fsr1l	equ	0xFE1
   654                           
   655                           	psect	dataBANK1
   656  000152                     __pdataBANK1:
   657                           	opt stack 0
   658  000152                     _ADDRESS_long_1:
   659                           	opt stack 0
   660  000152                     	ds	8
   661  00015A                     _ADDRESS_long_2:
   662                           	opt stack 0
   663  00015A                     	ds	8
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           	psect	cstackBANK1
   674  00012B                     __pcstackBANK1:
   675                           	opt stack 0
   676  00012B                     ??___ftadd:
   677                           
   678                           ; 1 bytes @ 0x0
   679  00012B                     	ds	3
   680  00012E                     ___ftadd@sign:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x3
   684  00012E                     	ds	1
   685  00012F                     ___ftadd@exp2:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x4
   689  00012F                     	ds	1
   690  000130                     ___ftadd@exp1:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x5
   694  000130                     	ds	1
   695  000131                     ?___ftdiv:
   696                           	opt stack 0
   697  000131                     ___ftdiv@f1:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x6
   701  000131                     	ds	3
   702  000134                     ___ftdiv@f2:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x9
   706  000134                     	ds	3
   707  000137                     ??___ftdiv:
   708                           
   709                           ; 1 bytes @ 0xC
   710  000137                     	ds	3
   711  00013A                     ___ftdiv@cntr:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0xF
   715  00013A                     	ds	1
   716  00013B                     ___ftdiv@f3:
   717                           	opt stack 0
   718                           
   719                           ; 3 bytes @ 0x10
   720  00013B                     	ds	3
   721  00013E                     ___ftdiv@exp:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x13
   725  00013E                     	ds	1
   726  00013F                     ___ftdiv@sign:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x14
   730  00013F                     	ds	1
   731  000140                     ?___fttol:
   732                           	opt stack 0
   733  000140                     ___fttol@f1:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x15
   737  000140                     	ds	4
   738  000144                     ??___fttol:
   739                           
   740                           ; 1 bytes @ 0x19
   741  000144                     	ds	5
   742  000149                     ___fttol@sign1:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x1E
   746  000149                     	ds	1
   747  00014A                     ___fttol@lval:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x1F
   751  00014A                     	ds	4
   752  00014E                     ___fttol@exp1:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x23
   756  00014E                     	ds	1
   757  00014F                     _main$2278:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x24
   761  00014F                     	ds	3
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           
   771                           	psect	cstackBANK0
   772  0000A8                     __pcstackBANK0:
   773                           	opt stack 0
   774  0000A8                     ??_INTERRUPT_InterruptManagerLow:
   775                           
   776                           ; 1 bytes @ 0x0
   777  0000A8                     	ds	21
   778  0000BD                     ?_Xor_check:
   779                           	opt stack 0
   780  0000BD                     ?_ADC_GetConversion:
   781                           	opt stack 0
   782  0000BD                     ?___ftpack:
   783                           	opt stack 0
   784  0000BD                     ?___aldiv:
   785                           	opt stack 0
   786  0000BD                     SPI_Write@response:
   787                           	opt stack 0
   788  0000BD                     SPI_Read@TempVar:
   789                           	opt stack 0
   790  0000BD                     Clear_Zigbee_Store_Buffer@d:
   791                           	opt stack 0
   792  0000BD                     Clear_Data@n:
   793                           	opt stack 0
   794  0000BD                     delay@dly:
   795                           	opt stack 0
   796  0000BD                     Delay_ms@time:
   797                           	opt stack 0
   798  0000BD                     Xor_check@data_value:
   799                           	opt stack 0
   800  0000BD                     Write_b_eep@badd:
   801                           	opt stack 0
   802  0000BD                     Read_b_eep@badd:
   803                           	opt stack 0
   804  0000BD                     INT0_SetInterruptHandler@InterruptHandler:
   805                           	opt stack 0
   806  0000BD                     TMR0_SetInterruptHandler@InterruptHandler:
   807                           	opt stack 0
   808  0000BD                     ___ftpack@arg:
   809                           	opt stack 0
   810  0000BD                     ___aldiv@dividend:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x15
   814  0000BD                     	ds	1
   815  0000BE                     SPI_Write@command:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x16
   819  0000BE                     	ds	1
   820  0000BF                     ??_ADC_GetConversion:
   821  0000BF                     write_ZIGBEE_short@data_r:
   822                           	opt stack 0
   823  0000BF                     read_ZIGBEE_short@data_r:
   824                           	opt stack 0
   825  0000BF                     Xor_check@length:
   826                           	opt stack 0
   827  0000BF                     Write_b_eep@data:
   828                           	opt stack 0
   829  0000BF                     write_ZIGBEE_long@address:
   830                           	opt stack 0
   831  0000BF                     delay@l:
   832                           	opt stack 0
   833  0000BF                     Delay_ms@y:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x17
   837  0000BF                     	ds	1
   838  0000C0                     ??_Xor_check:
   839  0000C0                     write_ZIGBEE_short@address:
   840                           	opt stack 0
   841  0000C0                     read_ZIGBEE_short@address:
   842                           	opt stack 0
   843  0000C0                     Write_b_eep@GIE_BIT_VAL:
   844                           	opt stack 0
   845  0000C0                     ___ftpack@exp:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x18
   849  0000C0                     	ds	1
   850  0000C1                     ADC_GetConversion@channel:
   851                           	opt stack 0
   852  0000C1                     set_CCA_mode@CCA_mode:
   853                           	opt stack 0
   854  0000C1                     set_RSSI_mode@RSSI_mode:
   855                           	opt stack 0
   856  0000C1                     nonbeacon_PAN_coordinator_device@temp:
   857                           	opt stack 0
   858  0000C1                     set_frame_format_filter@fff_mode:
   859                           	opt stack 0
   860  0000C1                     set_reception_mode@r_mode:
   861                           	opt stack 0
   862  0000C1                     set_not_ACK@temp:
   863                           	opt stack 0
   864  0000C1                     set_not_encrypt@temp:
   865                           	opt stack 0
   866  0000C1                     write_ZIGBEE_long@data_r:
   867                           	opt stack 0
   868  0000C1                     ___ftpack@sign:
   869                           	opt stack 0
   870  0000C1                     set_long_address@address:
   871                           	opt stack 0
   872  0000C1                     set_short_address@address:
   873                           	opt stack 0
   874  0000C1                     set_PAN_ID@address:
   875                           	opt stack 0
   876  0000C1                     Xor_check@xor_value:
   877                           	opt stack 0
   878  0000C1                     ___aldiv@divisor:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x19
   882  0000C1                     	ds	1
   883  0000C2                     ??_write_ZIGBEE_long:
   884  0000C2                     ??___ftpack:
   885  0000C2                     set_CCA_mode@temp:
   886                           	opt stack 0
   887  0000C2                     set_RSSI_mode@temp:
   888                           	opt stack 0
   889  0000C2                     set_frame_format_filter@temp:
   890                           	opt stack 0
   891  0000C2                     set_reception_mode@temp:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x1A
   895  0000C2                     	ds	1
   896  0000C3                     set_long_address@i:
   897                           	opt stack 0
   898  0000C3                     Xor_check@xor:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x1B
   902  0000C3                     	ds	1
   903  0000C4                     write_ZIGBEE_long@address_high:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x1C
   907  0000C4                     	ds	1
   908  0000C5                     ?___lwtoft:
   909                           	opt stack 0
   910  0000C5                     write_ZIGBEE_long@address_low:
   911                           	opt stack 0
   912  0000C5                     ___aldiv@counter:
   913                           	opt stack 0
   914  0000C5                     ___lwtoft@c:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x1D
   918  0000C5                     	ds	1
   919  0000C6                     ??_set_TX_power:
   920  0000C6                     ??_write_TX_normal_FIFO:
   921  0000C6                     set_channel@channel_number:
   922                           	opt stack 0
   923  0000C6                     ___aldiv@sign:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x1E
   927  0000C6                     	ds	1
   928  0000C7                     set_TX_power@power:
   929                           	opt stack 0
   930  0000C7                     ___aldiv@quotient:
   931                           	opt stack 0
   932                           
   933                           ; 4 bytes @ 0x1F
   934  0000C7                     	ds	1
   935  0000C8                     ?___ftmul:
   936                           	opt stack 0
   937  0000C8                     ___ftmul@f1:
   938                           	opt stack 0
   939                           
   940                           ; 3 bytes @ 0x20
   941  0000C8                     	ds	3
   942  0000CB                     write_TX_normal_FIFO@n:
   943                           	opt stack 0
   944  0000CB                     ___ftmul@f2:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0x23
   948  0000CB                     	ds	1
   949  0000CC                     write_TX_normal_FIFO@i:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x24
   953  0000CC                     	ds	2
   954  0000CE                     ??___ftmul:
   955                           
   956                           ; 1 bytes @ 0x26
   957  0000CE                     	ds	3
   958  0000D1                     ___ftmul@exp:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x29
   962  0000D1                     	ds	1
   963  0000D2                     ___ftmul@f3_as_product:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0x2A
   967  0000D2                     	ds	3
   968  0000D5                     ___ftmul@cntr:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x2D
   972  0000D5                     	ds	1
   973  0000D6                     ___ftmul@sign:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x2E
   977  0000D6                     	ds	1
   978  0000D7                     ?___ftneg:
   979                           	opt stack 0
   980  0000D7                     ___ftneg@f1:
   981                           	opt stack 0
   982                           
   983                           ; 3 bytes @ 0x2F
   984  0000D7                     	ds	3
   985  0000DA                     ?___ftadd:
   986                           	opt stack 0
   987  0000DA                     ___ftadd@f1:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x32
   991  0000DA                     	ds	3
   992  0000DD                     ___ftadd@f2:
   993                           	opt stack 0
   994                           
   995                           ; 3 bytes @ 0x35
   996  0000DD                     	ds	3
   997  0000E0                     tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1l	equ	0xFE1
  1005                           
  1006                           ; 1 bytes @ 0x38
  1007                           
  1008                           	psect	cstackCOMRAM
  1009  000026                     __pcstackCOMRAM:
  1010                           	opt stack 0
  1011  000026                     ?i2_Xor_check:
  1012                           	opt stack 0
  1013  000026                     Zigbee_data_Store_Buffer@a:
  1014                           	opt stack 0
  1015  000026                     i2SPI_Write@response:
  1016                           	opt stack 0
  1017  000026                     i2SPI_Read@TempVar:
  1018                           	opt stack 0
  1019  000026                     i2Xor_check@data_value:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x0
  1023  000026                     	ds	1
  1024  000027                     i2SPI_Write@command:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1
  1028  000027                     	ds	1
  1029  000028                     i2write_ZIGBEE_short@data_r:
  1030                           	opt stack 0
  1031  000028                     i2read_ZIGBEE_short@address:
  1032                           	opt stack 0
  1033  000028                     i2Xor_check@length:
  1034                           	opt stack 0
  1035  000028                     read_ZIGBEE_long@address:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x2
  1039  000028                     	ds	1
  1040  000029                     ??i2_Xor_check:
  1041  000029                     i2write_ZIGBEE_short@address:
  1042                           	opt stack 0
  1043  000029                     i2read_ZIGBEE_short@data_r:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x3
  1047  000029                     	ds	1
  1048  00002A                     ??_read_ZIGBEE_long:
  1049  00002A                     i2Xor_check@xor_value:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x4
  1053  00002A                     	ds	2
  1054  00002C                     read_ZIGBEE_long@data_r:
  1055                           	opt stack 0
  1056  00002C                     i2Xor_check@xor:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x6
  1060  00002C                     	ds	1
  1061  00002D                     read_ZIGBEE_long@address_high:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x7
  1065  00002D                     	ds	1
  1066  00002E                     read_ZIGBEE_long@address_low:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x8
  1070  00002E                     	ds	1
  1071  00002F                     ??_read_RX_FIFO:
  1072                           
  1073                           ; 1 bytes @ 0x9
  1074  00002F                     	ds	5
  1075  000034                     read_RX_FIFO@temp:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  000034                     	ds	1
  1080  000035                     read_RX_FIFO@i:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0xF
  1084  000035                     	ds	1
  1085  000036                     ??_INTERRUPT_InterruptManagerHigh:
  1086                           
  1087                           ; 1 bytes @ 0x10
  1088  000036                     	ds	20
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1l	equ	0xFE1
  1097                           
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 96 in file "07_May_Motion+LDR_Main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;Total ram usage:        3 bytes
  1122 ;; Hardware stack levels required when called:   13
  1123 ;; This function calls:
  1124 ;;		_ADC_GetConversion
  1125 ;;		_Clear_Data
  1126 ;;		_Clear_Zigbee_Store_Buffer
  1127 ;;		_Delay_ms
  1128 ;;		_InitSPI
  1129 ;;		_RF_reset
  1130 ;;		_Read_b_eep
  1131 ;;		_SYSTEM_Initialize
  1132 ;;		_Write_b_eep
  1133 ;;		___aldiv
  1134 ;;		___ftadd
  1135 ;;		___ftdiv
  1136 ;;		___ftmul
  1137 ;;		___ftneg
  1138 ;;		___fttol
  1139 ;;		___lwtoft
  1140 ;;		_init_ZIGBEE_nonbeacon
  1141 ;;		_nonbeacon_PAN_coordinator_device
  1142 ;;		_pin_reset
  1143 ;;		_pin_wake
  1144 ;;		_set_PAN_ID
  1145 ;;		_set_TX_power
  1146 ;;		_set_WAKE_from_pin
  1147 ;;		_set_frame_format_filter
  1148 ;;		_set_long_address
  1149 ;;		_set_reception_mode
  1150 ;;		_set_short_address
  1151 ;;		_write_TX_normal_FIFO
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text0
  1158  001010                     __ptext0:
  1159                           	opt stack 0
  1160  001010                     _main:
  1161                           	opt stack 18
  1162                           
  1163                           ;07_May_Motion+LDR_Main.c: 99: Delay_ms(100);Delay_ms(100);
  1164                           
  1165                           ;incstack = 0
  1166  001010  0E00               	movlw	0
  1167  001012  0100               	movlb	0	; () banked
  1168  001014  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1169  001016  0E64               	movlw	100
  1170  001018  6FBD               	movwf	Delay_ms@time& (0+255),b
  1171  00101A  EC4A  F016         	call	_Delay_ms	;wreg free
  1172  00101E  0E00               	movlw	0
  1173  001020  0100               	movlb	0	; () banked
  1174  001022  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1175  001024  0E64               	movlw	100
  1176  001026  6FBD               	movwf	Delay_ms@time& (0+255),b
  1177  001028  EC4A  F016         	call	_Delay_ms	;wreg free
  1178                           
  1179                           ;07_May_Motion+LDR_Main.c: 100: Delay_ms(100);Delay_ms(100);
  1180  00102C  0E00               	movlw	0
  1181  00102E  0100               	movlb	0	; () banked
  1182  001030  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1183  001032  0E64               	movlw	100
  1184  001034  6FBD               	movwf	Delay_ms@time& (0+255),b
  1185  001036  EC4A  F016         	call	_Delay_ms	;wreg free
  1186  00103A  0E00               	movlw	0
  1187  00103C  0100               	movlb	0	; () banked
  1188  00103E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1189  001040  0E64               	movlw	100
  1190  001042  6FBD               	movwf	Delay_ms@time& (0+255),b
  1191  001044  EC4A  F016         	call	_Delay_ms	;wreg free
  1192                           
  1193                           ;07_May_Motion+LDR_Main.c: 101: SYSTEM_Initialize();
  1194  001048  EC58  F016         	call	_SYSTEM_Initialize	;wreg free
  1195                           
  1196                           ;07_May_Motion+LDR_Main.c: 102: InitSPI();
  1197  00104C  ECC6  F015         	call	_InitSPI	;wreg free
  1198                           
  1199                           ;07_May_Motion+LDR_Main.c: 103: Delay_ms(10);
  1200  001050  0E00               	movlw	0
  1201  001052  0100               	movlb	0	; () banked
  1202  001054  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1203  001056  0E0A               	movlw	10
  1204  001058  6FBD               	movwf	Delay_ms@time& (0+255),b
  1205  00105A  EC4A  F016         	call	_Delay_ms	;wreg free
  1206                           
  1207                           ;07_May_Motion+LDR_Main.c: 104: pin_reset();
  1208  00105E  ECFC  F015         	call	_pin_reset	;wreg free
  1209                           
  1210                           ;07_May_Motion+LDR_Main.c: 105: RF_reset();
  1211  001062  EC2D  F015         	call	_RF_reset	;wreg free
  1212                           
  1213                           ;07_May_Motion+LDR_Main.c: 106: set_WAKE_from_pin();
  1214  001066  EC3C  F016         	call	_set_WAKE_from_pin	;wreg free
  1215                           
  1216                           ;07_May_Motion+LDR_Main.c: 108: set_long_address(ADDRESS_long_2);
  1217  00106A  0E5A               	movlw	low _ADDRESS_long_2
  1218  00106C  0100               	movlb	0	; () banked
  1219  00106E  6FC1               	movwf	set_long_address@address& (0+255),b
  1220  001070  0E01               	movlw	high _ADDRESS_long_2
  1221  001072  6FC2               	movwf	(set_long_address@address+1)& (0+255),b
  1222  001074  ECA0  F014         	call	_set_long_address	;wreg free
  1223                           
  1224                           ;07_May_Motion+LDR_Main.c: 109: set_short_address(ADDRESS_short_2);
  1225  001078  0EE9               	movlw	low _ADDRESS_short_2
  1226  00107A  0100               	movlb	0	; () banked
  1227  00107C  6FC1               	movwf	set_short_address@address& (0+255),b
  1228  00107E  0E00               	movlw	high _ADDRESS_short_2
  1229  001080  6FC2               	movwf	(set_short_address@address+1)& (0+255),b
  1230  001082  ECD4  F014         	call	_set_short_address	;wreg free
  1231                           
  1232                           ;07_May_Motion+LDR_Main.c: 110: set_PAN_ID(PAN_ID_2);
  1233  001086  0EE7               	movlw	low _PAN_ID_2
  1234  001088  0100               	movlb	0	; () banked
  1235  00108A  6FC1               	movwf	set_PAN_ID@address& (0+255),b
  1236  00108C  0E00               	movlw	high _PAN_ID_2
  1237  00108E  6FC2               	movwf	(set_PAN_ID@address+1)& (0+255),b
  1238  001090  ECEB  F014         	call	_set_PAN_ID	;wreg free
  1239                           
  1240                           ;07_May_Motion+LDR_Main.c: 112: init_ZIGBEE_nonbeacon();
  1241  001094  ECA2  F015         	call	_init_ZIGBEE_nonbeacon	;wreg free
  1242                           
  1243                           ;07_May_Motion+LDR_Main.c: 114: nonbeacon_PAN_coordinator_device();
  1244  001098  EC2D  F014         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  1245                           
  1246                           ;07_May_Motion+LDR_Main.c: 115: set_TX_power(31);
  1247  00109C  0E1F               	movlw	31
  1248  00109E  ECAA  F013         	call	_set_TX_power
  1249                           
  1250                           ;07_May_Motion+LDR_Main.c: 116: set_frame_format_filter(1);
  1251  0010A2  0E01               	movlw	1
  1252  0010A4  EC5A  F012         	call	_set_frame_format_filter
  1253                           
  1254                           ;07_May_Motion+LDR_Main.c: 117: set_reception_mode(1);
  1255  0010A8  0E01               	movlw	1
  1256  0010AA  ECA3  F012         	call	_set_reception_mode
  1257                           
  1258                           ;07_May_Motion+LDR_Main.c: 118: pin_wake();
  1259  0010AE  ECB0  F016         	call	_pin_wake	;wreg free
  1260                           
  1261                           ;07_May_Motion+LDR_Main.c: 119: Count1=1;
  1262  0010B2  0E01               	movlw	1
  1263  0010B4  0100               	movlb	0	; () banked
  1264  0010B6  6F9E               	movwf	_Count1& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;07_May_Motion+LDR_Main.c: 120: Count2=1;
  1268  0010B8  0E01               	movlw	1
  1269  0010BA  6F9D               	movwf	_Count2& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;07_May_Motion+LDR_Main.c: 121: Delay_ms(10);
  1273  0010BC  0E00               	movlw	0
  1274  0010BE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1275  0010C0  0E0A               	movlw	10
  1276  0010C2  6FBD               	movwf	Delay_ms@time& (0+255),b
  1277  0010C4  EC4A  F016         	call	_Delay_ms	;wreg free
  1278                           
  1279                           ;07_May_Motion+LDR_Main.c: 122: ID_SET=1;
  1280  0010C8  0E01               	movlw	1
  1281  0010CA  0100               	movlb	0	; () banked
  1282  0010CC  6F9A               	movwf	_ID_SET& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;07_May_Motion+LDR_Main.c: 123: (INTCONbits.GIEH = 1);
  1286  0010CE  8EF2               	bsf	intcon,7,c	;volatile
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;07_May_Motion+LDR_Main.c: 124: (INTCONbits.GIEL = 1);
  1290  0010D0  8CF2               	bsf	intcon,6,c	;volatile
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;07_May_Motion+LDR_Main.c: 125: (INTCONbits.PEIE = 1);
  1294  0010D2  8CF2               	bsf	intcon,6,c	;volatile
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;07_May_Motion+LDR_Main.c: 126: ID_READ=PORTD;
  1298  0010D4  CF83 F099          	movff	3971,_ID_READ	;volatile
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;07_May_Motion+LDR_Main.c: 127: Previous_Status=Read_b_eep(0x05);
  1302  0010D8  0E00               	movlw	0
  1303  0010DA  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1304  0010DC  0E05               	movlw	5
  1305  0010DE  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1306  0010E0  ECC2  F016         	call	_Read_b_eep	;wreg free
  1307  0010E4  0100               	movlb	0	; () banked
  1308  0010E6  6F8F               	movwf	_Previous_Status& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;07_May_Motion+LDR_Main.c: 128: ID_READ_Store=Read_b_eep(0x02);
  1312  0010E8  0E00               	movlw	0
  1313  0010EA  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1314  0010EC  0E02               	movlw	2
  1315  0010EE  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1316  0010F0  ECC2  F016         	call	_Read_b_eep	;wreg free
  1317  0010F4  0100               	movlb	0	; () banked
  1318  0010F6  6F8E               	movwf	_ID_READ_Store& (0+255),b
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;07_May_Motion+LDR_Main.c: 133: if(ID_READ_Store == ID_READ ){
  1322  0010F8  5199               	movf	_ID_READ& (0+255),w,b
  1323  0010FA  198E               	xorwf	_ID_READ_Store& (0+255),w,b
  1324  0010FC  A4D8               	btfss	status,2,c
  1325  0010FE  D00B               	goto	l866
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;07_May_Motion+LDR_Main.c: 134: if(Previous_Status == 1){
  1329  001100  058F               	decf	_Previous_Status& (0+255),w,b
  1330  001102  A4D8               	btfss	status,2,c
  1331  001104  D002               	goto	l867
  1332  001106                     u5030:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;07_May_Motion+LDR_Main.c: 135: F_MSG=1;
  1336  001106  0E01               	movlw	1
  1337  001108  D2C5               	goto	L6
  1338  00110A                     l867:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;07_May_Motion+LDR_Main.c: 137: else if(Previous_Status == 2){
  1342                           
  1343                           ; BSR set to: 0
  1344  00110A  0E02               	movlw	2
  1345  00110C  198F               	xorwf	_Previous_Status& (0+255),w,b
  1346  00110E  A4D8               	btfss	status,2,c
  1347  001110  D2C0               	goto	l903
  1348  001112                     u5040:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;07_May_Motion+LDR_Main.c: 138: F_MSG=2;
  1352  001112  0E02               	movlw	2
  1353  001114  D2BF               	goto	L6
  1354  001116                     l866:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;07_May_Motion+LDR_Main.c: 147: Write_b_eep(0x05,0xFF);
  1358                           
  1359                           ; BSR set to: 0
  1360  001116  0E00               	movlw	0
  1361  001118  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1362  00111A  0E05               	movlw	5
  1363  00111C  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1364  00111E  0EFF               	movlw	255
  1365  001120  6FBF               	movwf	Write_b_eep@data& (0+255),b
  1366  001122  EC4C  F014         	call	_Write_b_eep	;wreg free
  1367                           
  1368                           ;07_May_Motion+LDR_Main.c: 148: ID_READ_Store=0;
  1369  001126  0E00               	movlw	0
  1370  001128  0100               	movlb	0	; () banked
  1371  00112A  6F8E               	movwf	_ID_READ_Store& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;07_May_Motion+LDR_Main.c: 149: Previous_Status=0;
  1375  00112C  0E00               	movlw	0
  1376  00112E  6F8F               	movwf	_Previous_Status& (0+255),b
  1377  001130                     
  1378                           ; BSR set to: 0
  1379                           ;07_May_Motion+LDR_Main.c: 152: {
  1380                           ;07_May_Motion+LDR_Main.c: 153: if( ID_SET == 1 ){
  1381                           
  1382                           ; BSR set to: 0
  1383                           
  1384                           ;07_May_Motion+LDR_Main.c: 150: }
  1385                           ;07_May_Motion+LDR_Main.c: 151: while (1)
  1386                           
  1387                           ; BSR set to: 0
  1388  001130  059A               	decf	_ID_SET& (0+255),w,b
  1389  001132  A4D8               	btfss	status,2,c
  1390  001134  D02C               	goto	l873
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;07_May_Motion+LDR_Main.c: 154: PORTAbits.RA0=0;
  1394  001136  9080               	bcf	3968,0,c	;volatile
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;07_May_Motion+LDR_Main.c: 155: ID_SET=0;
  1398  001138  0E00               	movlw	0
  1399  00113A  6F9A               	movwf	_ID_SET& (0+255),b
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;07_May_Motion+LDR_Main.c: 156: ID_READ=PORTD;
  1403  00113C  CF83 F099          	movff	3971,_ID_READ	;volatile
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;07_May_Motion+LDR_Main.c: 157: Write_b_eep(0x02,ID_READ);
  1407  001140  0E00               	movlw	0
  1408  001142  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1409  001144  0E02               	movlw	2
  1410  001146  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1411  001148  C099  F0BF         	movff	_ID_READ,Write_b_eep@data
  1412  00114C  EC4C  F014         	call	_Write_b_eep	;wreg free
  1413                           
  1414                           ;07_May_Motion+LDR_Main.c: 158: Write_b_eep(0x02,ID_READ);
  1415  001150  0E00               	movlw	0
  1416  001152  0100               	movlb	0	; () banked
  1417  001154  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1418  001156  0E02               	movlw	2
  1419  001158  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1420  00115A  C099  F0BF         	movff	_ID_READ,Write_b_eep@data
  1421  00115E  EC4C  F014         	call	_Write_b_eep	;wreg free
  1422                           
  1423                           ;07_May_Motion+LDR_Main.c: 159: data_TX_normal_FIFO[13]='#';
  1424  001162  0E23               	movlw	35
  1425  001164  0101               	movlb	1	; () banked
  1426  001166  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;07_May_Motion+LDR_Main.c: 160: data_TX_normal_FIFO[14]=ID_READ;
  1430  001168  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  1431                           
  1432                           ; BSR set to: 1
  1433                           ;07_May_Motion+LDR_Main.c: 161: Delay_ms(20);Delay_ms(20);
  1434  00116C  0E00               	movlw	0
  1435  00116E  0100               	movlb	0	; () banked
  1436  001170  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1437  001172  0E14               	movlw	20
  1438  001174  6FBD               	movwf	Delay_ms@time& (0+255),b
  1439  001176  EC4A  F016         	call	_Delay_ms	;wreg free
  1440  00117A  0E00               	movlw	0
  1441  00117C  0100               	movlb	0	; () banked
  1442  00117E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1443  001180  0E14               	movlw	20
  1444  001182  6FBD               	movwf	Delay_ms@time& (0+255),b
  1445  001184  EC4A  F016         	call	_Delay_ms	;wreg free
  1446                           
  1447                           ;07_May_Motion+LDR_Main.c: 162: write_TX_normal_FIFO();
  1448  001188  EC5E  F00E         	call	_write_TX_normal_FIFO	;wreg free
  1449                           
  1450                           ;07_May_Motion+LDR_Main.c: 163: PORTAbits.RA0=1;
  1451  00118C  8080               	bsf	3968,0,c	;volatile
  1452  00118E                     l873:
  1453                           
  1454                           ;07_May_Motion+LDR_Main.c: 164: }
  1455                           ;07_May_Motion+LDR_Main.c: 165: if( CRC == Rv_CRC ){
  1456  00118E  0100               	movlb	0	; () banked
  1457  001190  5187               	movf	_Rv_CRC& (0+255),w,b
  1458  001192  1983               	xorwf	_CRC& (0+255),w,b
  1459  001194  E103               	bnz	u5061
  1460  001196  5188               	movf	(_Rv_CRC+1)& (0+255),w,b
  1461  001198  1984               	xorwf	(_CRC+1)& (0+255),w,b
  1462  00119A  A4D8               	btfss	status,2,c
  1463  00119C                     u5061:
  1464  00119C  D1CC               	goto	l879
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;07_May_Motion+LDR_Main.c: 167: Clear_Data();
  1468  00119E  EC6A  F014         	call	_Clear_Data	;wreg free
  1469                           
  1470                           ;07_May_Motion+LDR_Main.c: 168: ID_READ=Read_b_eep(0x02);
  1471  0011A2  0E00               	movlw	0
  1472  0011A4  0100               	movlb	0	; () banked
  1473  0011A6  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1474  0011A8  0E02               	movlw	2
  1475  0011AA  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  1476  0011AC  ECC2  F016         	call	_Read_b_eep	;wreg free
  1477  0011B0  0100               	movlb	0	; () banked
  1478  0011B2  6F99               	movwf	_ID_READ& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;07_May_Motion+LDR_Main.c: 169: if(ZigBee_Receive_Buffer[0] == '#'){
  1482  0011B4  0E23               	movlw	35
  1483  0011B6  1960               	xorwf	_ZigBee_Receive_Buffer& (0+255),w,b
  1484  0011B8  A4D8               	btfss	status,2,c
  1485  0011BA  D042               	goto	l875
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;07_May_Motion+LDR_Main.c: 170: ZigBee_Receive_Buffer[0]=0x00;
  1489  0011BC  0E00               	movlw	0
  1490  0011BE  6F60               	movwf	_ZigBee_Receive_Buffer& (0+255),b
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;07_May_Motion+LDR_Main.c: 171: if(( ZigBee_Receive_Buffer[1] == 'O' ) && (ID_READ == Zi
      +                          gBee_Receive_Buffer[2] )){
  1494  0011C0  0E4F               	movlw	79
  1495  0011C2  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1496  0011C4  A4D8               	btfss	status,2,c
  1497  0011C6  D01B               	goto	l876
  1498                           
  1499                           ; BSR set to: 0
  1500  0011C8  5199               	movf	_ID_READ& (0+255),w,b
  1501  0011CA  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1502  0011CC  A4D8               	btfss	status,2,c
  1503  0011CE  D017               	goto	l876
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;07_May_Motion+LDR_Main.c: 172: PORTAbits.RA2=0;
  1507  0011D0  9480               	bcf	3968,2,c	;volatile
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;07_May_Motion+LDR_Main.c: 173: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1511  0011D2  0E00               	movlw	0
  1512  0011D4  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1513  0011D6  0E64               	movlw	100
  1514  0011D8  6FBD               	movwf	Delay_ms@time& (0+255),b
  1515  0011DA  EC4A  F016         	call	_Delay_ms	;wreg free
  1516  0011DE  0E00               	movlw	0
  1517  0011E0  0100               	movlb	0	; () banked
  1518  0011E2  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1519  0011E4  0E64               	movlw	100
  1520  0011E6  6FBD               	movwf	Delay_ms@time& (0+255),b
  1521  0011E8  EC4A  F016         	call	_Delay_ms	;wreg free
  1522  0011EC  0E00               	movlw	0
  1523  0011EE  0100               	movlb	0	; () banked
  1524  0011F0  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1525  0011F2  0E64               	movlw	100
  1526  0011F4  6FBD               	movwf	Delay_ms@time& (0+255),b
  1527  0011F6  EC4A  F016         	call	_Delay_ms	;wreg free
  1528                           
  1529                           ;07_May_Motion+LDR_Main.c: 174: PORTAbits.RA2=1;
  1530  0011FA  8480               	bsf	3968,2,c	;volatile
  1531                           
  1532                           ;07_May_Motion+LDR_Main.c: 175: }
  1533  0011FC  D01F               	goto	l878
  1534  0011FE                     l876:
  1535                           
  1536                           ;07_May_Motion+LDR_Main.c: 176: else if(( ZigBee_Receive_Buffer[1] == 'E' ) && (ID_READ 
      +                          == ZigBee_Receive_Buffer[2] )){
  1537  0011FE  0E45               	movlw	69
  1538  001200  0100               	movlb	0	; () banked
  1539  001202  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1540  001204  A4D8               	btfss	status,2,c
  1541  001206  D01A               	goto	l878
  1542                           
  1543                           ; BSR set to: 0
  1544  001208  5199               	movf	_ID_READ& (0+255),w,b
  1545  00120A  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1546  00120C  A4D8               	btfss	status,2,c
  1547  00120E  D016               	goto	l878
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;07_May_Motion+LDR_Main.c: 177: PORTAbits.RA3=0;
  1551  001210  9680               	bcf	3968,3,c	;volatile
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;07_May_Motion+LDR_Main.c: 178: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1555  001212  0E00               	movlw	0
  1556  001214  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1557  001216  0E64               	movlw	100
  1558  001218  6FBD               	movwf	Delay_ms@time& (0+255),b
  1559  00121A  EC4A  F016         	call	_Delay_ms	;wreg free
  1560  00121E  0E00               	movlw	0
  1561  001220  0100               	movlb	0	; () banked
  1562  001222  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1563  001224  0E64               	movlw	100
  1564  001226  6FBD               	movwf	Delay_ms@time& (0+255),b
  1565  001228  EC4A  F016         	call	_Delay_ms	;wreg free
  1566  00122C  0E00               	movlw	0
  1567  00122E  0100               	movlb	0	; () banked
  1568  001230  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1569  001232  0E64               	movlw	100
  1570  001234  6FBD               	movwf	Delay_ms@time& (0+255),b
  1571  001236  EC4A  F016         	call	_Delay_ms	;wreg free
  1572                           
  1573                           ;07_May_Motion+LDR_Main.c: 179: PORTAbits.RA3=1;
  1574  00123A  8680               	bsf	3968,3,c	;volatile
  1575  00123C                     l878:
  1576                           
  1577                           ;07_May_Motion+LDR_Main.c: 180: }
  1578                           ;07_May_Motion+LDR_Main.c: 181: Clear_Zigbee_Store_Buffer();
  1579  00123C  EC8F  F015         	call	_Clear_Zigbee_Store_Buffer	;wreg free
  1580  001240                     l875:
  1581                           
  1582                           ;07_May_Motion+LDR_Main.c: 182: }
  1583                           ;07_May_Motion+LDR_Main.c: 183: if(ZigBee_Receive_Buffer[0] == '$'){
  1584  001240  0E24               	movlw	36
  1585  001242  0100               	movlb	0	; () banked
  1586  001244  1960               	xorwf	_ZigBee_Receive_Buffer& (0+255),w,b
  1587  001246  A4D8               	btfss	status,2,c
  1588  001248  D176               	goto	l879
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;07_May_Motion+LDR_Main.c: 184: ZigBee_Receive_Buffer[0]=0x00;
  1592  00124A  0E00               	movlw	0
  1593  00124C  6F60               	movwf	_ZigBee_Receive_Buffer& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;07_May_Motion+LDR_Main.c: 185: if(ZigBee_Receive_Buffer[1]=='M'){
  1597  00124E  0E4D               	movlw	77
  1598  001250  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1599  001252  A4D8               	btfss	status,2,c
  1600  001254  D024               	goto	l883
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;07_May_Motion+LDR_Main.c: 187: if(ZigBee_Receive_Buffer[2]=='1'){
  1604  001256  0E31               	movlw	49
  1605  001258  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1606  00125A  A4D8               	btfss	status,2,c
  1607  00125C  D00A               	goto	l881
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;07_May_Motion+LDR_Main.c: 188: F_MSG=1;
  1611  00125E  0E01               	movlw	1
  1612  001260  6F90               	movwf	_F_MSG& (0+255),b
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;07_May_Motion+LDR_Main.c: 189: Write_b_eep(0x05,F_MSG);
  1616  001262  0E00               	movlw	0
  1617  001264  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1618  001266  0E05               	movlw	5
  1619  001268  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1620  00126A  C090  F0BF         	movff	_F_MSG,Write_b_eep@data
  1621  00126E  EC4C  F014         	call	_Write_b_eep	;wreg free
  1622  001272                     l881:
  1623                           
  1624                           ;07_May_Motion+LDR_Main.c: 190: }
  1625                           ;07_May_Motion+LDR_Main.c: 191: if(ZigBee_Receive_Buffer[2]=='2'){
  1626  001272  0E32               	movlw	50
  1627  001274  0100               	movlb	0	; () banked
  1628  001276  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1629  001278  A4D8               	btfss	status,2,c
  1630  00127A  D00A               	goto	l882
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;07_May_Motion+LDR_Main.c: 192: F_MSG=2;
  1634  00127C  0E02               	movlw	2
  1635  00127E  6F90               	movwf	_F_MSG& (0+255),b
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;07_May_Motion+LDR_Main.c: 193: Write_b_eep(0x05,F_MSG);
  1639  001280  0E00               	movlw	0
  1640  001282  6FBE               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1641  001284  0E05               	movlw	5
  1642  001286  6FBD               	movwf	Write_b_eep@badd& (0+255),b
  1643  001288  C090  F0BF         	movff	_F_MSG,Write_b_eep@data
  1644  00128C  EC4C  F014         	call	_Write_b_eep	;wreg free
  1645  001290                     l882:
  1646                           
  1647                           ;07_May_Motion+LDR_Main.c: 194: }
  1648                           ;07_May_Motion+LDR_Main.c: 195: if(ZigBee_Receive_Buffer[2]=='3'){
  1649  001290  0E33               	movlw	51
  1650  001292  0100               	movlb	0	; () banked
  1651  001294  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1652  001296  A4D8               	btfss	status,2,c
  1653  001298  D002               	goto	l883
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;07_May_Motion+LDR_Main.c: 196: F_MSG=3;
  1657  00129A  0E03               	movlw	3
  1658  00129C  6F90               	movwf	_F_MSG& (0+255),b
  1659  00129E                     l883:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;07_May_Motion+LDR_Main.c: 198: }
  1663                           ;07_May_Motion+LDR_Main.c: 199: }
  1664                           ;07_May_Motion+LDR_Main.c: 200: if(ZigBee_Receive_Buffer[1]=='L'){
  1665                           
  1666                           ; BSR set to: 0
  1667                           
  1668                           ; BSR set to: 0
  1669  00129E  0E4C               	movlw	76
  1670  0012A0  1961               	xorwf	(_ZigBee_Receive_Buffer+1)& (0+255),w,b
  1671  0012A2  A4D8               	btfss	status,2,c
  1672  0012A4  D146               	goto	l885
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;07_May_Motion+LDR_Main.c: 201: ZigBee_Receive_Buffer[1]=0x00;
  1676  0012A6  0E00               	movlw	0
  1677  0012A8  6F61               	movwf	(_ZigBee_Receive_Buffer+1)& (0+255),b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;07_May_Motion+LDR_Main.c: 202: if(ZigBee_Receive_Buffer[2]==ID_READ){
  1681  0012AA  5199               	movf	_ID_READ& (0+255),w,b
  1682  0012AC  1962               	xorwf	(_ZigBee_Receive_Buffer+2)& (0+255),w,b
  1683  0012AE  A4D8               	btfss	status,2,c
  1684  0012B0  D140               	goto	l885
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;07_May_Motion+LDR_Main.c: 203: PORTAbits.RA0=1;
  1688  0012B2  8080               	bsf	3968,0,c	;volatile
  1689                           
  1690                           ;07_May_Motion+LDR_Main.c: 204: PORTAbits.RA5=0;
  1691  0012B4  9A80               	bcf	3968,5,c	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;07_May_Motion+LDR_Main.c: 205: Delay_ms(1000);Delay_ms(1000);Delay_ms(100);
  1695  0012B6  0E03               	movlw	3
  1696  0012B8  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1697  0012BA  0EE8               	movlw	232
  1698  0012BC  6FBD               	movwf	Delay_ms@time& (0+255),b
  1699  0012BE  EC4A  F016         	call	_Delay_ms	;wreg free
  1700  0012C2  0E03               	movlw	3
  1701  0012C4  0100               	movlb	0	; () banked
  1702  0012C6  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1703  0012C8  0EE8               	movlw	232
  1704  0012CA  6FBD               	movwf	Delay_ms@time& (0+255),b
  1705  0012CC  EC4A  F016         	call	_Delay_ms	;wreg free
  1706  0012D0  0E00               	movlw	0
  1707  0012D2  0100               	movlb	0	; () banked
  1708  0012D4  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1709  0012D6  0E64               	movlw	100
  1710  0012D8  6FBD               	movwf	Delay_ms@time& (0+255),b
  1711  0012DA  EC4A  F016         	call	_Delay_ms	;wreg free
  1712                           
  1713                           ;07_May_Motion+LDR_Main.c: 206: Delay_ms(1000);Delay_ms(1000);Delay_ms(1000);
  1714  0012DE  0E03               	movlw	3
  1715  0012E0  0100               	movlb	0	; () banked
  1716  0012E2  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1717  0012E4  0EE8               	movlw	232
  1718  0012E6  6FBD               	movwf	Delay_ms@time& (0+255),b
  1719  0012E8  EC4A  F016         	call	_Delay_ms	;wreg free
  1720  0012EC  0E03               	movlw	3
  1721  0012EE  0100               	movlb	0	; () banked
  1722  0012F0  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1723  0012F2  0EE8               	movlw	232
  1724  0012F4  6FBD               	movwf	Delay_ms@time& (0+255),b
  1725  0012F6  EC4A  F016         	call	_Delay_ms	;wreg free
  1726  0012FA  0E03               	movlw	3
  1727  0012FC  0100               	movlb	0	; () banked
  1728  0012FE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  1729  001300  0EE8               	movlw	232
  1730  001302  6FBD               	movwf	Delay_ms@time& (0+255),b
  1731  001304  EC4A  F016         	call	_Delay_ms	;wreg free
  1732                           
  1733                           ;07_May_Motion+LDR_Main.c: 207: PORTAbits.RA0=0;
  1734  001308  9080               	bcf	3968,0,c	;volatile
  1735                           
  1736                           ;07_May_Motion+LDR_Main.c: 208: PORTAbits.RA5=1;
  1737  00130A  8A80               	bsf	3968,5,c	;volatile
  1738                           
  1739                           ;07_May_Motion+LDR_Main.c: 209: F_Relay_Time=0;
  1740  00130C  0E00               	movlw	0
  1741  00130E  0100               	movlb	0	; () banked
  1742  001310  6F92               	movwf	_F_Relay_Time& (0+255),b
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;07_May_Motion+LDR_Main.c: 210: Relay_On_Time=0;
  1746  001312  0E00               	movlw	0
  1747  001314  6F7C               	movwf	(_Relay_On_Time+1)& (0+255),b
  1748  001316  0E00               	movlw	0
  1749  001318  6F7B               	movwf	_Relay_On_Time& (0+255),b
  1750  00131A                     
  1751                           ; BSR set to: 0
  1752                           
  1753                           ; BSR set to: 0
  1754                           
  1755                           ; BSR set to: 0
  1756  00131A  0592               	decf	_F_Relay_Time& (0+255),w,b
  1757  00131C  A4D8               	btfss	status,2,c
  1758  00131E  D7FD               	goto	l887
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;07_May_Motion+LDR_Main.c: 212: Value_LDR=ADC_GetConversion(6);
  1762                           
  1763                           ; BSR set to: 0
  1764  001320  0E06               	movlw	6
  1765  001322  EC85  F014         	call	_ADC_GetConversion
  1766  001326  C0BD  F079         	movff	?_ADC_GetConversion,_Value_LDR
  1767  00132A  C0BE  F07A         	movff	?_ADC_GetConversion+1,_Value_LDR+1
  1768                           
  1769                           ;07_May_Motion+LDR_Main.c: 213: VoltageOutput=((float) Value_LDR) * AdcRef;
  1770  00132E  C079  F0C5         	movff	_Value_LDR,___lwtoft@c
  1771  001332  C07A  F0C6         	movff	_Value_LDR+1,___lwtoft@c+1
  1772  001336  EC69  F015         	call	___lwtoft	;wreg free
  1773  00133A  C0C5  F0C8         	movff	?___lwtoft,___ftmul@f1
  1774  00133E  C0C6  F0C9         	movff	?___lwtoft+1,___ftmul@f1+1
  1775  001342  C0C7  F0CA         	movff	?___lwtoft+2,___ftmul@f1+2
  1776  001346  0E0A               	movlw	low _AdcRef
  1777  001348  6EF6               	movwf	tblptrl,c
  1778  00134A                     	if	1	;There is more than 1 active tblptr byte
  1779  00134A  0E10               	movlw	high _AdcRef
  1780  00134C  6EF7               	movwf	tblptrh,c
  1781  00134E                     	endif
  1782  00134E                     	if	1	;There are 3 active tblptr bytes
  1783  00134E  0E00               	movlw	low (_AdcRef shr (0+16))
  1784  001350  6EF8               	movwf	tblptru,c
  1785  001352                     	endif
  1786  001352  0009               	tblrd		*+
  1787  001354  CFF5 F0CB          	movff	tablat,___ftmul@f2
  1788  001358  0009               	tblrd		*+
  1789  00135A  CFF5 F0CC          	movff	tablat,___ftmul@f2+1
  1790  00135E  000A               	tblrd		*-
  1791  001360  CFF5 F0CD          	movff	tablat,___ftmul@f2+2
  1792  001364  EC8E  F00F         	call	___ftmul	;wreg free
  1793  001368  C0C8  F06D         	movff	?___ftmul,_VoltageOutput
  1794  00136C  C0C9  F06E         	movff	?___ftmul+1,_VoltageOutput+1
  1795  001370  C0CA  F06F         	movff	?___ftmul+2,_VoltageOutput+2
  1796                           
  1797                           ;07_May_Motion+LDR_Main.c: 214: ResistanceLDR = (VoltageOutput * R3)/(Vcc - VoltageOutpu
      +                          t);
  1798  001374  0E07               	movlw	low _R3
  1799  001376  6EF6               	movwf	tblptrl,c
  1800  001378                     	if	1	;There is more than 1 active tblptr byte
  1801  001378  0E10               	movlw	high _R3
  1802  00137A  6EF7               	movwf	tblptrh,c
  1803  00137C                     	endif
  1804  00137C                     	if	1	;There are 3 active tblptr bytes
  1805  00137C  0E00               	movlw	low (_R3 shr (0+16))
  1806  00137E  6EF8               	movwf	tblptru,c
  1807  001380                     	endif
  1808  001380  0009               	tblrd		*+
  1809  001382  CFF5 F0CB          	movff	tablat,___ftmul@f2
  1810  001386  0009               	tblrd		*+
  1811  001388  CFF5 F0CC          	movff	tablat,___ftmul@f2+1
  1812  00138C  000A               	tblrd		*-
  1813  00138E  CFF5 F0CD          	movff	tablat,___ftmul@f2+2
  1814  001392  C06D  F0C8         	movff	_VoltageOutput,___ftmul@f1
  1815  001396  C06E  F0C9         	movff	_VoltageOutput+1,___ftmul@f1+1
  1816  00139A  C06F  F0CA         	movff	_VoltageOutput+2,___ftmul@f1+2
  1817  00139E  EC8E  F00F         	call	___ftmul	;wreg free
  1818  0013A2  C0C8  F131         	movff	?___ftmul,___ftdiv@f1
  1819  0013A6  C0C9  F132         	movff	?___ftmul+1,___ftdiv@f1+1
  1820  0013AA  C0CA  F133         	movff	?___ftmul+2,___ftdiv@f1+2
  1821  0013AE  0E04               	movlw	low _Vcc
  1822  0013B0  6EF6               	movwf	tblptrl,c
  1823  0013B2                     	if	1	;There is more than 1 active tblptr byte
  1824  0013B2  0E10               	movlw	high _Vcc
  1825  0013B4  6EF7               	movwf	tblptrh,c
  1826  0013B6                     	endif
  1827  0013B6                     	if	1	;There are 3 active tblptr bytes
  1828  0013B6  0E00               	movlw	low (_Vcc shr (0+16))
  1829  0013B8  6EF8               	movwf	tblptru,c
  1830  0013BA                     	endif
  1831  0013BA  0009               	tblrd		*+
  1832  0013BC  CFF5 F0DD          	movff	tablat,___ftadd@f2
  1833  0013C0  0009               	tblrd		*+
  1834  0013C2  CFF5 F0DE          	movff	tablat,___ftadd@f2+1
  1835  0013C6  000A               	tblrd		*-
  1836  0013C8  CFF5 F0DF          	movff	tablat,___ftadd@f2+2
  1837  0013CC  C06D  F0D7         	movff	_VoltageOutput,___ftneg@f1
  1838  0013D0  C06E  F0D8         	movff	_VoltageOutput+1,___ftneg@f1+1
  1839  0013D4  C06F  F0D9         	movff	_VoltageOutput+2,___ftneg@f1+2
  1840  0013D8  EC7C  F015         	call	___ftneg	;wreg free
  1841  0013DC  C0D7  F0DA         	movff	?___ftneg,___ftadd@f1
  1842  0013E0  C0D8  F0DB         	movff	?___ftneg+1,___ftadd@f1+1
  1843  0013E4  C0D9  F0DC         	movff	?___ftneg+2,___ftadd@f1+2
  1844  0013E8  EC8D  F00C         	call	___ftadd	;wreg free
  1845  0013EC  C0DA  F134         	movff	?___ftadd,___ftdiv@f2
  1846  0013F0  C0DB  F135         	movff	?___ftadd+1,___ftdiv@f2+1
  1847  0013F4  C0DC  F136         	movff	?___ftadd+2,___ftdiv@f2+2
  1848  0013F8  EC09  F010         	call	___ftdiv	;wreg free
  1849  0013FC  C131  F06A         	movff	?___ftdiv,_ResistanceLDR
  1850  001400  C132  F06B         	movff	?___ftdiv+1,_ResistanceLDR+1
  1851  001404  C133  F06C         	movff	?___ftdiv+2,_ResistanceLDR+2
  1852                           
  1853                           ;07_May_Motion+LDR_Main.c: 215: Light = (unsigned long)((100 - ((ResistanceLDR / Resista
      +                          nce0)*100)) * 1000);
  1854  001408  0E00               	movlw	0
  1855  00140A  0100               	movlb	0	; () banked
  1856  00140C  6FDD               	movwf	___ftadd@f2& (0+255),b
  1857  00140E  0EC8               	movlw	200
  1858  001410  6FDE               	movwf	(___ftadd@f2+1)& (0+255),b
  1859  001412  0E42               	movlw	66
  1860  001414  6FDF               	movwf	(___ftadd@f2+2)& (0+255),b
  1861  001416  0E00               	movlw	0
  1862  001418  6FCB               	movwf	___ftmul@f2& (0+255),b
  1863  00141A  0EC8               	movlw	200
  1864  00141C  6FCC               	movwf	(___ftmul@f2+1)& (0+255),b
  1865  00141E  0E42               	movlw	66
  1866  001420  6FCD               	movwf	(___ftmul@f2+2)& (0+255),b
  1867  001422  0E01               	movlw	low _Resistance0
  1868  001424  6EF6               	movwf	tblptrl,c
  1869  001426                     	if	1	;There is more than 1 active tblptr byte
  1870  001426  0E10               	movlw	high _Resistance0
  1871  001428  6EF7               	movwf	tblptrh,c
  1872  00142A                     	endif
  1873  00142A                     	if	1	;There are 3 active tblptr bytes
  1874  00142A  0E00               	movlw	low (_Resistance0 shr (0+16))
  1875  00142C  6EF8               	movwf	tblptru,c
  1876  00142E                     	endif
  1877  00142E  0009               	tblrd		*+
  1878  001430  CFF5 F134          	movff	tablat,___ftdiv@f2
  1879  001434  0009               	tblrd		*+
  1880  001436  CFF5 F135          	movff	tablat,___ftdiv@f2+1
  1881  00143A  000A               	tblrd		*-
  1882  00143C  CFF5 F136          	movff	tablat,___ftdiv@f2+2
  1883  001440  C06A  F131         	movff	_ResistanceLDR,___ftdiv@f1
  1884  001444  C06B  F132         	movff	_ResistanceLDR+1,___ftdiv@f1+1
  1885  001448  C06C  F133         	movff	_ResistanceLDR+2,___ftdiv@f1+2
  1886  00144C  EC09  F010         	call	___ftdiv	;wreg free
  1887  001450  C131  F0C8         	movff	?___ftdiv,___ftmul@f1
  1888  001454  C132  F0C9         	movff	?___ftdiv+1,___ftmul@f1+1
  1889  001458  C133  F0CA         	movff	?___ftdiv+2,___ftmul@f1+2
  1890  00145C  EC8E  F00F         	call	___ftmul	;wreg free
  1891  001460  C0C8  F0D7         	movff	?___ftmul,___ftneg@f1
  1892  001464  C0C9  F0D8         	movff	?___ftmul+1,___ftneg@f1+1
  1893  001468  C0CA  F0D9         	movff	?___ftmul+2,___ftneg@f1+2
  1894  00146C  EC7C  F015         	call	___ftneg	;wreg free
  1895  001470  C0D7  F0DA         	movff	?___ftneg,___ftadd@f1
  1896  001474  C0D8  F0DB         	movff	?___ftneg+1,___ftadd@f1+1
  1897  001478  C0D9  F0DC         	movff	?___ftneg+2,___ftadd@f1+2
  1898  00147C  EC8D  F00C         	call	___ftadd	;wreg free
  1899  001480  C0DA  F14F         	movff	?___ftadd,_main$2278
  1900  001484  C0DB  F150         	movff	?___ftadd+1,_main$2278+1
  1901  001488  C0DC  F151         	movff	?___ftadd+2,_main$2278+2
  1902                           
  1903                           ;07_May_Motion+LDR_Main.c: 215: Light = (unsigned long)((100 - ((ResistanceLDR / Resista
      +                          nce0)*100)) * 1000);
  1904  00148C  0E00               	movlw	0
  1905  00148E  0100               	movlb	0	; () banked
  1906  001490  6FCB               	movwf	___ftmul@f2& (0+255),b
  1907  001492  0E7A               	movlw	122
  1908  001494  6FCC               	movwf	(___ftmul@f2+1)& (0+255),b
  1909  001496  0E44               	movlw	68
  1910  001498  6FCD               	movwf	(___ftmul@f2+2)& (0+255),b
  1911  00149A  C14F  F0C8         	movff	_main$2278,___ftmul@f1
  1912  00149E  C150  F0C9         	movff	_main$2278+1,___ftmul@f1+1
  1913  0014A2  C151  F0CA         	movff	_main$2278+2,___ftmul@f1+2
  1914  0014A6  EC8E  F00F         	call	___ftmul	;wreg free
  1915  0014AA  C0C8  F140         	movff	?___ftmul,___fttol@f1
  1916  0014AE  C0C9  F141         	movff	?___ftmul+1,___fttol@f1+1
  1917  0014B2  C0CA  F142         	movff	?___ftmul+2,___fttol@f1+2
  1918  0014B6  EC12  F00F         	call	___fttol	;wreg free
  1919  0014BA  C140  F127         	movff	?___fttol,_Light
  1920  0014BE  C141  F128         	movff	?___fttol+1,_Light+1
  1921  0014C2  C142  F129         	movff	?___fttol+2,_Light+2
  1922  0014C6  C143  F12A         	movff	?___fttol+3,_Light+3
  1923                           
  1924                           ;07_May_Motion+LDR_Main.c: 216: Delta= Light - 1;
  1925  0014CA  0EFF               	movlw	255
  1926  0014CC  0101               	movlb	1	; () banked
  1927  0014CE  2527               	addwf	_Light& (0+255),w,b
  1928  0014D0  0100               	movlb	0	; () banked
  1929  0014D2  6F66               	movwf	_Delta& (0+255),b
  1930  0014D4  0EFF               	movlw	255
  1931  0014D6  0101               	movlb	1	; () banked
  1932  0014D8  2128               	addwfc	(_Light+1)& (0+255),w,b
  1933  0014DA  0100               	movlb	0	; () banked
  1934  0014DC  6F67               	movwf	(_Delta+1)& (0+255),b
  1935  0014DE  0EFF               	movlw	255
  1936  0014E0  0101               	movlb	1	; () banked
  1937  0014E2  2129               	addwfc	(_Light+2)& (0+255),w,b
  1938  0014E4  0100               	movlb	0	; () banked
  1939  0014E6  6F68               	movwf	(_Delta+2)& (0+255),b
  1940  0014E8  0EFF               	movlw	255
  1941  0014EA  0101               	movlb	1	; () banked
  1942  0014EC  212A               	addwfc	(_Light+3)& (0+255),w,b
  1943  0014EE  0100               	movlb	0	; () banked
  1944  0014F0  6F69               	movwf	(_Delta+3)& (0+255),b
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;07_May_Motion+LDR_Main.c: 217: Delta=Delta/1000;
  1948  0014F2  C066  F0BD         	movff	_Delta,___aldiv@dividend
  1949  0014F6  C067  F0BE         	movff	_Delta+1,___aldiv@dividend+1
  1950  0014FA  C068  F0BF         	movff	_Delta+2,___aldiv@dividend+2
  1951  0014FE  C069  F0C0         	movff	_Delta+3,___aldiv@dividend+3
  1952  001502  0EE8               	movlw	232
  1953  001504  6FC1               	movwf	___aldiv@divisor& (0+255),b
  1954  001506  0E03               	movlw	3
  1955  001508  6FC2               	movwf	(___aldiv@divisor+1)& (0+255),b
  1956  00150A  0E00               	movlw	0
  1957  00150C  6FC3               	movwf	(___aldiv@divisor+2)& (0+255),b
  1958  00150E  0E00               	movlw	0
  1959  001510  6FC4               	movwf	(___aldiv@divisor+3)& (0+255),b
  1960  001512  ECED  F010         	call	___aldiv	;wreg free
  1961  001516  C0BD  F066         	movff	?___aldiv,_Delta
  1962  00151A  C0BE  F067         	movff	?___aldiv+1,_Delta+1
  1963  00151E  C0BF  F068         	movff	?___aldiv+2,_Delta+2
  1964  001522  C0C0  F069         	movff	?___aldiv+3,_Delta+3
  1965                           
  1966                           ;07_May_Motion+LDR_Main.c: 220: PORTAbits.RA0=1;
  1967  001526  8080               	bsf	3968,0,c	;volatile
  1968                           
  1969                           ;07_May_Motion+LDR_Main.c: 221: PORTAbits.RA5=0;
  1970  001528  9A80               	bcf	3968,5,c	;volatile
  1971                           
  1972                           ;07_May_Motion+LDR_Main.c: 222: PORTAbits.RA1=0;
  1973  00152A  9280               	bcf	3968,1,c	;volatile
  1974                           
  1975                           ;07_May_Motion+LDR_Main.c: 223: F_LDR_STATUS=1;
  1976  00152C  0E01               	movlw	1
  1977  00152E  0100               	movlb	0	; () banked
  1978  001530  6F8D               	movwf	_F_LDR_STATUS& (0+255),b
  1979  001532                     l885:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;07_May_Motion+LDR_Main.c: 224: }
  1983                           ;07_May_Motion+LDR_Main.c: 225: }
  1984                           ;07_May_Motion+LDR_Main.c: 226: Clear_Zigbee_Store_Buffer();
  1985                           
  1986                           ; BSR set to: 0
  1987                           
  1988                           ; BSR set to: 0
  1989  001532  EC8F  F015         	call	_Clear_Zigbee_Store_Buffer	;wreg free
  1990  001536                     l879:
  1991                           
  1992                           ;07_May_Motion+LDR_Main.c: 227: }
  1993                           ;07_May_Motion+LDR_Main.c: 228: }
  1994                           ;07_May_Motion+LDR_Main.c: 229: if(F_Calling == 1){
  1995  001536  0100               	movlb	0	; () banked
  1996  001538  0593               	decf	_F_Calling& (0+255),w,b
  1997  00153A  A4D8               	btfss	status,2,c
  1998  00153C  D01C               	goto	l889
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;07_May_Motion+LDR_Main.c: 230: F_Calling=0;
  2002  00153E  0E00               	movlw	0
  2003  001540  6F93               	movwf	_F_Calling& (0+255),b
  2004                           
  2005                           ;07_May_Motion+LDR_Main.c: 231: F_BUZZER=1;
  2006  001542  0E01               	movlw	1
  2007  001544  6F98               	movwf	_F_BUZZER& (0+255),b
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;07_May_Motion+LDR_Main.c: 232: ID_READ=Read_b_eep(0x02);
  2011  001546  0E00               	movlw	0
  2012  001548  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2013  00154A  0E02               	movlw	2
  2014  00154C  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  2015  00154E  ECC2  F016         	call	_Read_b_eep	;wreg free
  2016  001552  0100               	movlb	0	; () banked
  2017  001554  6F99               	movwf	_ID_READ& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;07_May_Motion+LDR_Main.c: 233: data_TX_normal_FIFO[13]='$';
  2021  001556  0E24               	movlw	36
  2022  001558  0101               	movlb	1	; () banked
  2023  00155A  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;07_May_Motion+LDR_Main.c: 234: data_TX_normal_FIFO[14]=ID_READ;
  2027  00155C  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;07_May_Motion+LDR_Main.c: 235: data_TX_normal_FIFO[15]='C';
  2031  001560  0E43               	movlw	67
  2032  001562  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;07_May_Motion+LDR_Main.c: 236: write_TX_normal_FIFO();
  2036  001564  EC5E  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2037                           
  2038                           ;07_May_Motion+LDR_Main.c: 237: Delay_ms(20);
  2039  001568  0E00               	movlw	0
  2040  00156A  0100               	movlb	0	; () banked
  2041  00156C  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2042  00156E  0E14               	movlw	20
  2043  001570  6FBD               	movwf	Delay_ms@time& (0+255),b
  2044  001572  EC4A  F016         	call	_Delay_ms	;wreg free
  2045  001576                     l889:
  2046                           
  2047                           ;07_May_Motion+LDR_Main.c: 238: }
  2048                           ;07_May_Motion+LDR_Main.c: 239: if( F_MSG==1 ){
  2049  001576  0100               	movlb	0	; () banked
  2050  001578  0590               	decf	_F_MSG& (0+255),w,b
  2051  00157A  A4D8               	btfss	status,2,c
  2052  00157C  D006               	goto	l890
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;07_May_Motion+LDR_Main.c: 240: PORTAbits.RA0=0;
  2056  00157E  9080               	bcf	3968,0,c	;volatile
  2057                           
  2058                           ;07_May_Motion+LDR_Main.c: 241: PORTAbits.RA5=1;
  2059  001580  8A80               	bsf	3968,5,c	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;07_May_Motion+LDR_Main.c: 242: F_MSG=0;
  2063  001582  0E00               	movlw	0
  2064  001584  6F90               	movwf	_F_MSG& (0+255),b
  2065                           
  2066                           ;07_May_Motion+LDR_Main.c: 243: ALT_ON=0;
  2067  001586  0E00               	movlw	0
  2068  001588  6F91               	movwf	_ALT_ON& (0+255),b
  2069  00158A                     l890:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;07_May_Motion+LDR_Main.c: 244: }
  2073                           ;07_May_Motion+LDR_Main.c: 245: if( F_MSG==2){
  2074                           
  2075                           ; BSR set to: 0
  2076  00158A  0E02               	movlw	2
  2077  00158C  1990               	xorwf	_F_MSG& (0+255),w,b
  2078  00158E  A4D8               	btfss	status,2,c
  2079  001590  D006               	goto	l891
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;07_May_Motion+LDR_Main.c: 246: PORTAbits.RA0=1;
  2083  001592  8080               	bsf	3968,0,c	;volatile
  2084                           
  2085                           ;07_May_Motion+LDR_Main.c: 247: PORTAbits.RA5=0;
  2086  001594  9A80               	bcf	3968,5,c	;volatile
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;07_May_Motion+LDR_Main.c: 248: F_MSG=0;
  2090  001596  0E00               	movlw	0
  2091  001598  6F90               	movwf	_F_MSG& (0+255),b
  2092                           
  2093                           ;07_May_Motion+LDR_Main.c: 249: ALT_ON=0;
  2094  00159A  0E00               	movlw	0
  2095  00159C  6F91               	movwf	_ALT_ON& (0+255),b
  2096  00159E                     l891:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;07_May_Motion+LDR_Main.c: 250: }
  2100                           ;07_May_Motion+LDR_Main.c: 251: if( F_MSG==3){
  2101                           
  2102                           ; BSR set to: 0
  2103  00159E  0E03               	movlw	3
  2104  0015A0  1990               	xorwf	_F_MSG& (0+255),w,b
  2105  0015A2  A4D8               	btfss	status,2,c
  2106  0015A4  D00A               	goto	l892
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;07_May_Motion+LDR_Main.c: 252: if((ID_READ%2)==0){
  2110  0015A6  B199               	btfsc	_ID_READ& (0+255),0,b
  2111  0015A8  D004               	goto	l893
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;07_May_Motion+LDR_Main.c: 253: PORTAbits.RA0=0;
  2115  0015AA  9080               	bcf	3968,0,c	;volatile
  2116                           
  2117                           ;07_May_Motion+LDR_Main.c: 254: PORTAbits.RA5=1;
  2118  0015AC  8A80               	bsf	3968,5,c	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;07_May_Motion+LDR_Main.c: 255: ALT_ON=0;
  2122  0015AE  0E00               	movlw	0
  2123  0015B0  D001               	goto	L1
  2124  0015B2                     l893:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;07_May_Motion+LDR_Main.c: 257: else{
  2128                           ;07_May_Motion+LDR_Main.c: 258: ALT_ON=1;
  2129                           
  2130                           ; BSR set to: 0
  2131  0015B2  0E01               	movlw	1
  2132  0015B4                     L1:
  2133  0015B4  6F91               	movwf	_ALT_ON& (0+255),b
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;07_May_Motion+LDR_Main.c: 259: }
  2137                           ;07_May_Motion+LDR_Main.c: 260: F_MSG=0;
  2138  0015B6  0E00               	movlw	0
  2139  0015B8  6F90               	movwf	_F_MSG& (0+255),b
  2140  0015BA                     l892:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;07_May_Motion+LDR_Main.c: 261: }
  2144                           ;07_May_Motion+LDR_Main.c: 262: if((ALT_ON==1)&&(PORTFbits.RF3==1)){
  2145                           
  2146                           ; BSR set to: 0
  2147  0015BA  0591               	decf	_ALT_ON& (0+255),w,b
  2148  0015BC  B4D8               	btfsc	status,2,c
  2149                           
  2150                           ; BSR set to: 0
  2151  0015BE  A685               	btfss	3973,3,c	;volatile
  2152  0015C0  D006               	goto	l895
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;07_May_Motion+LDR_Main.c: 263: PORTAbits.RA0=0;
  2156  0015C2  9080               	bcf	3968,0,c	;volatile
  2157                           
  2158                           ;07_May_Motion+LDR_Main.c: 264: PORTAbits.RA5=1;
  2159  0015C4  8A80               	bsf	3968,5,c	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;07_May_Motion+LDR_Main.c: 265: Time_start=0;
  2163  0015C6  0E00               	movlw	0
  2164  0015C8  6F7E               	movwf	(_Time_start+1)& (0+255),b
  2165  0015CA  0E00               	movlw	0
  2166  0015CC  6F7D               	movwf	_Time_start& (0+255),b
  2167  0015CE                     l895:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;07_May_Motion+LDR_Main.c: 266: }
  2171                           ;07_May_Motion+LDR_Main.c: 268: if((ALT_ON==1)&&(PORTFbits.RF3==0)){
  2172                           
  2173                           ; BSR set to: 0
  2174  0015CE  0591               	decf	_ALT_ON& (0+255),w,b
  2175  0015D0  B4D8               	btfsc	status,2,c
  2176                           
  2177                           ; BSR set to: 0
  2178  0015D2  B685               	btfsc	3973,3,c	;volatile
  2179  0015D4  D00C               	goto	l897
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;07_May_Motion+LDR_Main.c: 269: if(Time_start>1000){
  2183  0015D6  0EE9               	movlw	233
  2184  0015D8  5D7D               	subwf	_Time_start& (0+255),w,b
  2185  0015DA  0E03               	movlw	3
  2186  0015DC  597E               	subwfb	(_Time_start+1)& (0+255),w,b
  2187  0015DE  A0D8               	btfss	status,0,c
  2188  0015E0  D006               	goto	l897
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;07_May_Motion+LDR_Main.c: 270: PORTAbits.RA0=1;
  2192  0015E2  8080               	bsf	3968,0,c	;volatile
  2193                           
  2194                           ;07_May_Motion+LDR_Main.c: 271: PORTAbits.RA5=0;
  2195  0015E4  9A80               	bcf	3968,5,c	;volatile
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;07_May_Motion+LDR_Main.c: 272: Time_start=0;
  2199  0015E6  0E00               	movlw	0
  2200  0015E8  6F7E               	movwf	(_Time_start+1)& (0+255),b
  2201  0015EA  0E00               	movlw	0
  2202  0015EC  6F7D               	movwf	_Time_start& (0+255),b
  2203  0015EE                     l897:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;07_May_Motion+LDR_Main.c: 273: }
  2207                           ;07_May_Motion+LDR_Main.c: 274: }
  2208                           ;07_May_Motion+LDR_Main.c: 275: if(F_LDR_STATUS==1){
  2209                           
  2210                           ; BSR set to: 0
  2211                           
  2212                           ; BSR set to: 0
  2213  0015EE  058D               	decf	_F_LDR_STATUS& (0+255),w,b
  2214  0015F0  A4D8               	btfss	status,2,c
  2215  0015F2  D59E               	goto	l871
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;07_May_Motion+LDR_Main.c: 276: F_LDR_STATUS=0;
  2219  0015F4  0E00               	movlw	0
  2220  0015F6  6F8D               	movwf	_F_LDR_STATUS& (0+255),b
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;07_May_Motion+LDR_Main.c: 277: if(Delta >4 && Delta<=90){
  2224  0015F8  BF69               	btfsc	(_Delta+3)& (0+255),7,b
  2225  0015FA  D023               	goto	l899
  2226  0015FC  5169               	movf	(_Delta+3)& (0+255),w,b
  2227  0015FE  1168               	iorwf	(_Delta+2)& (0+255),w,b
  2228  001600  1167               	iorwf	(_Delta+1)& (0+255),w,b
  2229  001602  E104               	bnz	u5310
  2230  001604  0E05               	movlw	5
  2231  001606  5D66               	subwf	_Delta& (0+255),w,b
  2232  001608  A0D8               	btfss	status,0,c
  2233  00160A  D01B               	goto	l899
  2234  00160C                     u5310:
  2235                           
  2236                           ; BSR set to: 0
  2237  00160C  BF69               	btfsc	(_Delta+3)& (0+255),7,b
  2238  00160E  D008               	goto	u5320
  2239  001610  5169               	movf	(_Delta+3)& (0+255),w,b
  2240  001612  1168               	iorwf	(_Delta+2)& (0+255),w,b
  2241  001614  1167               	iorwf	(_Delta+1)& (0+255),w,b
  2242  001616  E115               	bnz	l6154
  2243  001618  0E5B               	movlw	91
  2244  00161A  5D66               	subwf	_Delta& (0+255),w,b
  2245  00161C  B0D8               	btfsc	status,0,c
  2246  00161E  D011               	goto	l899
  2247  001620                     u5320:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;07_May_Motion+LDR_Main.c: 278: data_TX_normal_FIFO[13]='$';
  2251  001620  0E24               	movlw	36
  2252  001622  0101               	movlb	1	; () banked
  2253  001624  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;07_May_Motion+LDR_Main.c: 279: data_TX_normal_FIFO[14]=ID_READ;
  2257  001626  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2258                           
  2259                           ;07_May_Motion+LDR_Main.c: 280: data_TX_normal_FIFO[15]='1';
  2260  00162A  0E31               	movlw	49
  2261  00162C  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2262                           
  2263                           ; BSR set to: 1
  2264                           ;07_May_Motion+LDR_Main.c: 281: write_TX_normal_FIFO();
  2265  00162E  EC5E  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2266                           
  2267                           ;07_May_Motion+LDR_Main.c: 282: Delay_ms(100);
  2268  001632  0E00               	movlw	0
  2269  001634  0100               	movlb	0	; () banked
  2270  001636  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2271  001638  0E64               	movlw	100
  2272  00163A  6FBD               	movwf	Delay_ms@time& (0+255),b
  2273  00163C  EC4A  F016         	call	_Delay_ms	;wreg free
  2274  001640  D010               	goto	l6162
  2275  001642                     l899:
  2276  001642                     l6154:
  2277                           
  2278                           ;07_May_Motion+LDR_Main.c: 285: else{
  2279                           ;07_May_Motion+LDR_Main.c: 286: data_TX_normal_FIFO[13]='$';
  2280  001642  0E24               	movlw	36
  2281  001644  0101               	movlb	1	; () banked
  2282  001646  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;07_May_Motion+LDR_Main.c: 287: data_TX_normal_FIFO[14]=ID_READ;
  2286  001648  C099  F123         	movff	_ID_READ,_data_TX_normal_FIFO+14
  2287                           
  2288                           ;07_May_Motion+LDR_Main.c: 288: data_TX_normal_FIFO[15]='0';
  2289  00164C  0E30               	movlw	48
  2290  00164E  6F24               	movwf	(_data_TX_normal_FIFO+15)& (0+255),b
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;07_May_Motion+LDR_Main.c: 289: write_TX_normal_FIFO();
  2294  001650  EC5E  F00E         	call	_write_TX_normal_FIFO	;wreg free
  2295                           
  2296                           ;07_May_Motion+LDR_Main.c: 290: Delay_ms(100);
  2297  001654  0E00               	movlw	0
  2298  001656  0100               	movlb	0	; () banked
  2299  001658  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2300  00165A  0E64               	movlw	100
  2301  00165C  6FBD               	movwf	Delay_ms@time& (0+255),b
  2302  00165E  EC4A  F016         	call	_Delay_ms	;wreg free
  2303  001662                     l6162:
  2304                           
  2305                           ;07_May_Motion+LDR_Main.c: 291: PORTAbits.RA1=1;
  2306  001662  8280               	bsf	3968,1,c	;volatile
  2307                           
  2308                           ;07_May_Motion+LDR_Main.c: 292: }
  2309                           ;07_May_Motion+LDR_Main.c: 293: Delay_ms(100);
  2310  001664  0E00               	movlw	0
  2311  001666  0100               	movlb	0	; () banked
  2312  001668  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2313  00166A  0E64               	movlw	100
  2314  00166C  6FBD               	movwf	Delay_ms@time& (0+255),b
  2315  00166E  EC4A  F016         	call	_Delay_ms	;wreg free
  2316                           
  2317                           ;07_May_Motion+LDR_Main.c: 294: Previous_Status=Read_b_eep(0x05);
  2318  001672  0E00               	movlw	0
  2319  001674  0100               	movlb	0	; () banked
  2320  001676  6FBE               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2321  001678  0E05               	movlw	5
  2322  00167A  6FBD               	movwf	Read_b_eep@badd& (0+255),b
  2323  00167C  ECC2  F016         	call	_Read_b_eep	;wreg free
  2324  001680  0100               	movlb	0	; () banked
  2325  001682  6F8F               	movwf	_Previous_Status& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;07_May_Motion+LDR_Main.c: 295: if(Previous_Status == 1){
  2329  001684  058F               	decf	_Previous_Status& (0+255),w,b
  2330  001686  B4D8               	btfsc	status,2,c
  2331  001688  D53E               	goto	u5030
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;07_May_Motion+LDR_Main.c: 298: else if(Previous_Status == 2){
  2335                           
  2336                           ; BSR set to: 0
  2337                           
  2338                           ;07_May_Motion+LDR_Main.c: 297: }
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;07_May_Motion+LDR_Main.c: 296: F_MSG=1;
  2342  00168A  0E02               	movlw	2
  2343  00168C  198F               	xorwf	_Previous_Status& (0+255),w,b
  2344  00168E  B4D8               	btfsc	status,2,c
  2345  001690  D540               	goto	u5040
  2346  001692                     l903:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;07_May_Motion+LDR_Main.c: 301: else
  2350                           ;07_May_Motion+LDR_Main.c: 302: F_MSG=0;
  2351                           
  2352                           ; BSR set to: 0
  2353  001692  0E00               	movlw	0
  2354  001694                     L6:
  2355  001694  6F90               	movwf	_F_MSG& (0+255),b
  2356                           
  2357                           ; BSR set to: 0
  2358                           
  2359                           ; BSR set to: 0
  2360                           
  2361                           ; BSR set to: 0
  2362                           
  2363                           ; BSR set to: 0
  2364  001696  D54C               	goto	l871
  2365  001698                     __end_of_main:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           postdec1	equ	0xFE5
  2375                           fsr1l	equ	0xFE1
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _write_TX_normal_FIFO *****************
  2379 ;; Defined at:
  2380 ;;		line 334 in file "zigbee.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  i               1   36[BANK0 ] unsigned char 
  2385 ;;  n               1   35[BANK0 ] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;Total ram usage:        7 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:   11
  2402 ;; This function calls:
  2403 ;;		_Delay_ms
  2404 ;;		_Xor_check
  2405 ;;		_set_not_ACK
  2406 ;;		_set_not_encrypt
  2407 ;;		_start_transmit
  2408 ;;		_write_ZIGBEE_long
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text1
  2415  001CBC                     __ptext1:
  2416                           	opt stack 0
  2417  001CBC                     _write_TX_normal_FIFO:
  2418                           	opt stack 19
  2419                           
  2420                           ;zigbee.c: 335: unsigned char i = 0,n = 0;
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;incstack = 0
  2424  001CBC  0E00               	movlw	0
  2425  001CBE  0100               	movlb	0	; () banked
  2426  001CC0  6FCC               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2427  001CC2  0E00               	movlw	0
  2428  001CC4  6FCB               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;zigbee.c: 337: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  2432  001CC6  0E0D               	movlw	low _HEADER_LENGHT
  2433  001CC8  6EF6               	movwf	tblptrl,c
  2434  001CCA                     	if	1	;There is more than 1 active tblptr byte
  2435  001CCA  0E10               	movlw	high _HEADER_LENGHT
  2436  001CCC  6EF7               	movwf	tblptrh,c
  2437  001CCE                     	endif
  2438  001CCE                     	if	1	;There are 3 active tblptr bytes
  2439  001CCE  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2440  001CD0  6EF8               	movwf	tblptru,c
  2441  001CD2                     	endif
  2442  001CD2  0008               	tblrd		*
  2443  001CD4  CFF5 F115          	movff	tablat,_data_TX_normal_FIFO
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;zigbee.c: 338: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  2447  001CD8  0E0E               	movlw	low _DATA_LENGHT
  2448  001CDA  6EF6               	movwf	tblptrl,c
  2449  001CDC                     	if	1	;There is more than 1 active tblptr byte
  2450  001CDC  0E10               	movlw	high _DATA_LENGHT
  2451  001CDE  6EF7               	movwf	tblptrh,c
  2452  001CE0                     	endif
  2453  001CE0                     	if	1	;There are 3 active tblptr bytes
  2454  001CE0  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2455  001CE2  6EF8               	movwf	tblptru,c
  2456  001CE4                     	endif
  2457  001CE4  0008               	tblrd		*
  2458  001CE6  CFF5 F0C6          	movff	tablat,??_write_TX_normal_FIFO
  2459  001CEA  0E0D               	movlw	low _HEADER_LENGHT
  2460  001CEC  6EF6               	movwf	tblptrl,c
  2461  001CEE                     	if	1	;There is more than 1 active tblptr byte
  2462  001CEE  0E10               	movlw	high _HEADER_LENGHT
  2463  001CF0  6EF7               	movwf	tblptrh,c
  2464  001CF2                     	endif
  2465  001CF2                     	if	1	;There are 3 active tblptr bytes
  2466  001CF2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2467  001CF4  6EF8               	movwf	tblptru,c
  2468  001CF6                     	endif
  2469  001CF6  0008               	tblrd		*
  2470  001CF8  50F5               	movf	tablat,w,c
  2471  001CFA  25C6               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  2472  001CFC  0101               	movlb	1	; () banked
  2473  001CFE  6F16               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;zigbee.c: 339: data_TX_normal_FIFO[2] = 0x01;
  2477  001D00  0E01               	movlw	1
  2478  001D02  6F17               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;zigbee.c: 340: data_TX_normal_FIFO[3] = 0x88;
  2482  001D04  0E88               	movlw	136
  2483  001D06  6F18               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  2484                           
  2485                           ; BSR set to: 1
  2486                           ;zigbee.c: 341: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  2487  001D08  C0E6  F119         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;zigbee.c: 342: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  2491  001D0C  C0E8  F11A         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;zigbee.c: 343: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  2495  001D10  C0E7  F11B         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;zigbee.c: 344: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  2499  001D14  C0E9  F11C         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  2500                           
  2501                           ; BSR set to: 1
  2502                           ;zigbee.c: 345: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  2503  001D18  C0EA  F11D         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  2504                           
  2505                           ; BSR set to: 1
  2506                           ;zigbee.c: 346: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  2507  001D1C  C0E0  F11E         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;zigbee.c: 347: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  2511  001D20  C0E1  F11F         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;zigbee.c: 348: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  2515  001D24  C0E2  F120         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  2516                           
  2517                           ; BSR set to: 1
  2518                           ;zigbee.c: 349: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  2519  001D28  C0E3  F121         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  2520                           
  2521                           ; BSR set to: 1
  2522                           ;zigbee.c: 351: for(n=0,ii=13;n<3;n++,ii++){
  2523  001D2C  0E00               	movlw	0
  2524  001D2E  0100               	movlb	0	; () banked
  2525  001D30  6FCB               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2526                           
  2527                           ; BSR set to: 0
  2528  001D32  0E0D               	movlw	13
  2529  001D34  6F9B               	movwf	_ii& (0+255),b
  2530  001D36                     l4618:
  2531                           
  2532                           ; BSR set to: 0
  2533  001D36  0E02               	movlw	2
  2534  001D38  65CB               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  2535  001D3A  D001               	goto	l495
  2536  001D3C  D015               	goto	u3110
  2537  001D3E                     l495:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;zigbee.c: 352: DATA_TX[n] = data_TX_normal_FIFO[ii];
  2541                           
  2542                           ; BSR set to: 0
  2543  001D3E  519B               	movf	_ii& (0+255),w,b
  2544  001D40  0D01               	mullw	1
  2545  001D42  0E15               	movlw	low _data_TX_normal_FIFO
  2546  001D44  24F3               	addwf	prodl,w,c
  2547  001D46  6ED9               	movwf	fsr2l,c
  2548  001D48  0E01               	movlw	high _data_TX_normal_FIFO
  2549  001D4A  20F4               	addwfc	prodh,w,c
  2550  001D4C  6EDA               	movwf	fsr2h,c
  2551  001D4E  51CB               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  2552  001D50  0D01               	mullw	1
  2553  001D52  0EA5               	movlw	low _DATA_TX
  2554  001D54  24F3               	addwf	prodl,w,c
  2555  001D56  6EE1               	movwf	fsr1l,c
  2556  001D58  0E00               	movlw	high _DATA_TX
  2557  001D5A  20F4               	addwfc	prodh,w,c
  2558  001D5C  6EE2               	movwf	fsr1h,c
  2559  001D5E  CFDF FFE7          	movff	indf2,indf1
  2560                           
  2561                           ; BSR set to: 0
  2562  001D62  2BCB               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  2563                           
  2564                           ; BSR set to: 0
  2565  001D64  2B9B               	incf	_ii& (0+255),f,b
  2566  001D66  D7E7               	goto	l4618
  2567  001D68                     u3110:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;zigbee.c: 353: }
  2571                           ;zigbee.c: 354: TX_CRC = Xor_check(DATA_TX,3);
  2572                           
  2573                           ; BSR set to: 0
  2574  001D68  0EA5               	movlw	low _DATA_TX
  2575  001D6A  6FBD               	movwf	Xor_check@data_value& (0+255),b
  2576  001D6C  0E00               	movlw	high _DATA_TX
  2577  001D6E  6FBE               	movwf	(Xor_check@data_value+1)& (0+255),b
  2578  001D70  0E03               	movlw	3
  2579  001D72  6FBF               	movwf	Xor_check@length& (0+255),b
  2580  001D74  EC89  F013         	call	_Xor_check	;wreg free
  2581  001D78  C0BD  F085         	movff	?_Xor_check,_TX_CRC
  2582  001D7C  C0BE  F086         	movff	?_Xor_check+1,_TX_CRC+1
  2583                           
  2584                           ;zigbee.c: 355: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  2585  001D80  C085  F125         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  2586                           
  2587                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  2588  001D84  0100               	movlb	0	; () banked
  2589  001D86  5186               	movf	(_TX_CRC+1)& (0+255),w,b
  2590  001D88  0101               	movlb	1	; () banked
  2591  001D8A  6F26               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;zigbee.c: 359: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  2595  001D8C  0E00               	movlw	0
  2596  001D8E  0100               	movlb	0	; () banked
  2597  001D90  6FCC               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2598  001D92                     l4638:
  2599                           
  2600                           ; BSR set to: 0
  2601  001D92  0E0D               	movlw	low _HEADER_LENGHT
  2602  001D94  6EF6               	movwf	tblptrl,c
  2603  001D96                     	if	1	;There is more than 1 active tblptr byte
  2604  001D96  0E10               	movlw	high _HEADER_LENGHT
  2605  001D98  6EF7               	movwf	tblptrh,c
  2606  001D9A                     	endif
  2607  001D9A                     	if	1	;There are 3 active tblptr bytes
  2608  001D9A  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2609  001D9C  6EF8               	movwf	tblptru,c
  2610  001D9E                     	endif
  2611  001D9E  0008               	tblrd		*
  2612  001DA0  50F5               	movf	tablat,w,c
  2613  001DA2  6FC6               	movwf	??_write_TX_normal_FIFO& (0+255),b
  2614  001DA4  6BC7               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  2615  001DA6  0E0E               	movlw	low _DATA_LENGHT
  2616  001DA8  6EF6               	movwf	tblptrl,c
  2617  001DAA                     	if	1	;There is more than 1 active tblptr byte
  2618  001DAA  0E10               	movlw	high _DATA_LENGHT
  2619  001DAC  6EF7               	movwf	tblptrh,c
  2620  001DAE                     	endif
  2621  001DAE                     	if	1	;There are 3 active tblptr bytes
  2622  001DAE  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2623  001DB0  6EF8               	movwf	tblptru,c
  2624  001DB2                     	endif
  2625  001DB2  0008               	tblrd		*
  2626  001DB4  50F5               	movf	tablat,w,c
  2627  001DB6  27C6               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2628  001DB8  0E00               	movlw	0
  2629  001DBA  23C7               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2630  001DBC  0E02               	movlw	2
  2631  001DBE  27C6               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2632  001DC0  0E00               	movlw	0
  2633  001DC2  23C7               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2634  001DC4  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2635  001DC6  6FC8               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  2636  001DC8  6BC9               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  2637  001DCA  51C6               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  2638  001DCC  5DC8               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  2639  001DCE  51C9               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  2640  001DD0  0A80               	xorlw	128
  2641  001DD2  6FCA               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  2642  001DD4  51C7               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  2643  001DD6  0A80               	xorlw	128
  2644  001DD8  59CA               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  2645  001DDA  B0D8               	btfsc	status,0,c
  2646  001DDC  D01C               	goto	u3130
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;zigbee.c: 360: {
  2650                           ;zigbee.c: 361: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  2651                           
  2652                           ; BSR set to: 0
  2653                           
  2654                           ; BSR set to: 0
  2655  001DDE  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2656  001DE0  2589               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  2657  001DE2  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  2658  001DE4  0E00               	movlw	0
  2659  001DE6  218A               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  2660  001DE8  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  2661  001DEA  51CC               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2662  001DEC  0D01               	mullw	1
  2663  001DEE  0E15               	movlw	low _data_TX_normal_FIFO
  2664  001DF0  24F3               	addwf	prodl,w,c
  2665  001DF2  6ED9               	movwf	fsr2l,c
  2666  001DF4  0E01               	movlw	high _data_TX_normal_FIFO
  2667  001DF6  20F4               	addwfc	prodh,w,c
  2668  001DF8  6EDA               	movwf	fsr2h,c
  2669  001DFA  50DF               	movf	indf2,w,c
  2670  001DFC  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  2671  001DFE  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  2672                           
  2673                           ;zigbee.c: 362: Delay_ms(10);
  2674  001E02  0E00               	movlw	0
  2675  001E04  0100               	movlb	0	; () banked
  2676  001E06  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  2677  001E08  0E0A               	movlw	10
  2678  001E0A  6FBD               	movwf	Delay_ms@time& (0+255),b
  2679  001E0C  EC4A  F016         	call	_Delay_ms	;wreg free
  2680  001E10  0100               	movlb	0	; () banked
  2681  001E12  2BCC               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  2682  001E14  D7BE               	goto	l4638
  2683  001E16                     u3130:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;zigbee.c: 363: }
  2687                           ;zigbee.c: 364: set_not_ACK();
  2688                           
  2689                           ; BSR set to: 0
  2690  001E16  EC7D  F016         	call	_set_not_ACK	;wreg free
  2691                           
  2692                           ;zigbee.c: 365: set_not_encrypt();
  2693  001E1A  EC72  F016         	call	_set_not_encrypt	;wreg free
  2694                           
  2695                           ;zigbee.c: 366: start_transmit();
  2696  001E1E  EC65  F013         	call	_start_transmit	;wreg free
  2697  001E22  0012               	return		;funcret
  2698  001E24                     __end_of_write_TX_normal_FIFO:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           indf1	equ	0xFE7
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           indf2	equ	0xFDF
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _start_transmit *****************
  2719 ;; Defined at:
  2720 ;;		line 382 in file "zigbee.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:   10
  2741 ;; This function calls:
  2742 ;;		_read_ZIGBEE_short
  2743 ;;		_write_ZIGBEE_short
  2744 ;; This function is called by:
  2745 ;;		_write_TX_normal_FIFO
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text2
  2750  0026CA                     __ptext2:
  2751                           	opt stack 0
  2752  0026CA                     _start_transmit:
  2753                           	opt stack 19
  2754                           
  2755                           ;zigbee.c: 384: CHECK=0;
  2756                           
  2757                           ;incstack = 0
  2758  0026CA  0E00               	movlw	0
  2759  0026CC  0100               	movlb	0	; () banked
  2760  0026CE  6F9C               	movwf	_CHECK& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;zigbee.c: 385: CHECK = CHECK | 0x01;
  2764  0026D0  519C               	movf	_CHECK& (0+255),w,b
  2765  0026D2  0901               	iorlw	1
  2766  0026D4  6F9C               	movwf	_CHECK& (0+255),b
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;zigbee.c: 386: write_ZIGBEE_short(0x1B,CHECK);
  2770  0026D6  C09C  F0BF         	movff	_CHECK,write_ZIGBEE_short@data_r
  2771  0026DA  0E1B               	movlw	27
  2772  0026DC  ECB4  F015         	call	_write_ZIGBEE_short
  2773                           
  2774                           ;zigbee.c: 388: CHECK=0;
  2775  0026E0  0E00               	movlw	0
  2776  0026E2  0100               	movlb	0	; () banked
  2777  0026E4  6F9C               	movwf	_CHECK& (0+255),b
  2778  0026E6                     
  2779                           ; BSR set to: 0
  2780                           
  2781                           ; BSR set to: 0
  2782  0026E6  0E31               	movlw	49
  2783  0026E8  EC19  F015         	call	_read_ZIGBEE_short
  2784  0026EC  06E8               	decf	wreg,f,c
  2785  0026EE  A4D8               	btfss	status,2,c
  2786  0026F0  D7FA               	goto	l509
  2787                           
  2788                           ;zigbee.c: 390: CHECK = read_ZIGBEE_short(0x31);
  2789  0026F2  0E31               	movlw	49
  2790  0026F4  EC19  F015         	call	_read_ZIGBEE_short
  2791  0026F8  0100               	movlb	0	; () banked
  2792  0026FA  6F9C               	movwf	_CHECK& (0+255),b
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;zigbee.c: 391: __nop();
  2796  0026FC  F000               	nop	
  2797                           
  2798                           ;zigbee.c: 392: CHECK = 0;
  2799  0026FE  0E00               	movlw	0
  2800  002700  0100               	movlb	0	; () banked
  2801  002702  6F9C               	movwf	_CHECK& (0+255),b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;zigbee.c: 393: CHECK = read_ZIGBEE_short(0x24);
  2805  002704  0E24               	movlw	36
  2806  002706  EC19  F015         	call	_read_ZIGBEE_short
  2807  00270A  0100               	movlb	0	; () banked
  2808  00270C  6F9C               	movwf	_CHECK& (0+255),b
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;zigbee.c: 394: __nop();
  2812  00270E  F000               	nop	
  2813  002710  0012               	return		;funcret
  2814  002712                     __end_of_start_transmit:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           indf1	equ	0xFE7
  2826                           postdec1	equ	0xFE5
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _read_ZIGBEE_short *****************
  2835 ;; Defined at:
  2836 ;;		line 403 in file "zigbee.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  address         1    wreg     unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  address         1   24[BANK0 ] unsigned char 
  2841 ;;  data_r          1   23[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    9
  2858 ;; This function calls:
  2859 ;;		_SPI_Read
  2860 ;;		_SPI_Write
  2861 ;; This function is called by:
  2862 ;;		_start_transmit
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text3
  2867  002A32                     __ptext3:
  2868                           	opt stack 0
  2869  002A32                     _read_ZIGBEE_short:
  2870                           	opt stack 19
  2871                           
  2872                           ;incstack = 0
  2873                           ;read_ZIGBEE_short@address stored from wreg
  2874  002A32  0100               	movlb	0	; () banked
  2875  002A34  6FC0               	movwf	read_ZIGBEE_short@address& (0+255),b
  2876                           
  2877                           ;zigbee.c: 404: unsigned char data_r = 0;
  2878  002A36  0E00               	movlw	0
  2879  002A38  0100               	movlb	0	; () banked
  2880  002A3A  6FBF               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;zigbee.c: 406: PORTCbits.RC0=0;
  2884  002A3C  9082               	bcf	3970,0,c	;volatile
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;zigbee.c: 407: address = (address << 1) & 0b01111110;
  2888  002A3E  51C0               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2889  002A40  25C0               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  2890  002A42  0B7E               	andlw	126
  2891  002A44  6FC0               	movwf	read_ZIGBEE_short@address& (0+255),b
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;zigbee.c: 408: SPI_Write(address);
  2895  002A46  51C0               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2896  002A48  ECB9  F016         	call	_SPI_Write
  2897                           
  2898                           ;zigbee.c: 409: data_r = SPI_Read();
  2899  002A4C  ECA7  F016         	call	_SPI_Read	;wreg free
  2900  002A50  0100               	movlb	0	; () banked
  2901  002A52  6FBF               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;zigbee.c: 410: PORTCbits.RC0=1;
  2905  002A54  8082               	bsf	3970,0,c	;volatile
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;zigbee.c: 412: return data_r;
  2909  002A56  51BF               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  2910  002A58  0012               	return	
  2911  002A5A                     __end_of_read_ZIGBEE_short:
  2912                           	opt stack 0
  2913                           tblptru	equ	0xFF8
  2914                           tblptrh	equ	0xFF7
  2915                           tblptrl	equ	0xFF6
  2916                           tablat	equ	0xFF5
  2917                           prodh	equ	0xFF4
  2918                           prodl	equ	0xFF3
  2919                           intcon	equ	0xFF2
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           indf1	equ	0xFE7
  2923                           postdec1	equ	0xFE5
  2924                           fsr1h	equ	0xFE2
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _SPI_Read *****************
  2932 ;; Defined at:
  2933 ;;		line 463 in file "zigbee.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  TempVar         1   21[BANK0 ] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      unsigned char 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;Total ram usage:        1 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    8
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_read_ZIGBEE_short
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text4
  2962  002D4E                     __ptext4:
  2963                           	opt stack 0
  2964  002D4E                     _SPI_Read:
  2965                           	opt stack 19
  2966                           
  2967                           ;zigbee.c: 464: unsigned char TempVar;
  2968                           ;zigbee.c: 465: SSP1BUF = 0xff;
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;incstack = 0
  2972  002D4E  68C9               	setf	4041,c	;volatile
  2973  002D50  A0C7               	btfss	4039,0,c	;volatile
  2974  002D52  D7FE               	goto	l536
  2975                           
  2976                           ;zigbee.c: 467: TempVar = SSP1BUF;
  2977  002D54  CFC9 F0BD          	movff	4041,SPI_Read@TempVar	;volatile
  2978                           
  2979                           ;zigbee.c: 468: PIR1bits.SSP1IF = 0;
  2980  002D58  969E               	bcf	3998,3,c	;volatile
  2981                           
  2982                           ;zigbee.c: 469: return ( TempVar );
  2983  002D5A  0100               	movlb	0	; () banked
  2984  002D5C  51BD               	movf	SPI_Read@TempVar& (0+255),w,b
  2985  002D5E  0012               	return	
  2986  002D60                     __end_of_SPI_Read:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           indf1	equ	0xFE7
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _set_not_encrypt *****************
  3007 ;; Defined at:
  3008 ;;		line 375 in file "zigbee.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  temp            1   25[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        1 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:   10
  3029 ;; This function calls:
  3030 ;;		_write_ZIGBEE_short
  3031 ;; This function is called by:
  3032 ;;		_write_TX_normal_FIFO
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text5
  3037  002CE4                     __ptext5:
  3038                           	opt stack 0
  3039  002CE4                     _set_not_encrypt:
  3040                           	opt stack 19
  3041                           
  3042                           ;zigbee.c: 377: unsigned char temp = 0;
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;incstack = 0
  3046  002CE4  0E00               	movlw	0
  3047  002CE6  0100               	movlb	0	; () banked
  3048  002CE8  6FC1               	movwf	set_not_encrypt@temp& (0+255),b
  3049                           
  3050                           ;zigbee.c: 378: temp = temp & (!0x02);
  3051  002CEA  0E00               	movlw	0
  3052  002CEC  6FC1               	movwf	set_not_encrypt@temp& (0+255),b
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;zigbee.c: 379: write_ZIGBEE_short(0x1B, temp);
  3056  002CEE  C0C1  F0BF         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  3057  002CF2  0E1B               	movlw	27
  3058  002CF4  ECB4  F015         	call	_write_ZIGBEE_short
  3059  002CF8  0012               	return		;funcret
  3060  002CFA                     __end_of_set_not_encrypt:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           postinc0	equ	0xFEE
  3070                           wreg	equ	0xFE8
  3071                           indf1	equ	0xFE7
  3072                           postdec1	equ	0xFE5
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _set_not_ACK *****************
  3081 ;; Defined at:
  3082 ;;		line 369 in file "zigbee.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  temp            1   25[BANK0 ] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;Total ram usage:        1 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:   10
  3103 ;; This function calls:
  3104 ;;		_write_ZIGBEE_short
  3105 ;; This function is called by:
  3106 ;;		_write_TX_normal_FIFO
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text6
  3111  002CFA                     __ptext6:
  3112                           	opt stack 0
  3113  002CFA                     _set_not_ACK:
  3114                           	opt stack 19
  3115                           
  3116                           ;zigbee.c: 371: unsigned char temp = 0;
  3117                           
  3118                           ;incstack = 0
  3119  002CFA  0E00               	movlw	0
  3120  002CFC  0100               	movlb	0	; () banked
  3121  002CFE  6FC1               	movwf	set_not_ACK@temp& (0+255),b
  3122                           
  3123                           ;zigbee.c: 372: temp = temp & (!0x04);
  3124  002D00  0E00               	movlw	0
  3125  002D02  6FC1               	movwf	set_not_ACK@temp& (0+255),b
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;zigbee.c: 373: write_ZIGBEE_short(0x1B, temp);
  3129  002D04  C0C1  F0BF         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  3130  002D08  0E1B               	movlw	27
  3131  002D0A  ECB4  F015         	call	_write_ZIGBEE_short
  3132  002D0E  0012               	return		;funcret
  3133  002D10                     __end_of_set_not_ACK:
  3134                           	opt stack 0
  3135                           tblptru	equ	0xFF8
  3136                           tblptrh	equ	0xFF7
  3137                           tblptrl	equ	0xFF6
  3138                           tablat	equ	0xFF5
  3139                           prodh	equ	0xFF4
  3140                           prodl	equ	0xFF3
  3141                           intcon	equ	0xFF2
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           indf1	equ	0xFE7
  3145                           postdec1	equ	0xFE5
  3146                           fsr1h	equ	0xFE2
  3147                           fsr1l	equ	0xFE1
  3148                           indf2	equ	0xFDF
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _Xor_check *****************
  3154 ;; Defined at:
  3155 ;;		line 501 in file "zigbee.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  data_value      2   21[BANK0 ] PTR unsigned char 
  3158 ;;		 -> DATA_TX(3), DATA_RX(5), 
  3159 ;;  length          1   23[BANK0 ] unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  xor             2   27[BANK0 ] unsigned short 
  3162 ;;  xor_value       2   25[BANK0 ] unsigned short 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  2   21[BANK0 ] unsigned short 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        8 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    8
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_write_TX_normal_FIFO
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text7
  3187  002712                     __ptext7:
  3188                           	opt stack 0
  3189  002712                     _Xor_check:
  3190                           	opt stack 21
  3191                           
  3192                           ;zigbee.c: 503: unsigned short xor_value = 0x8d0d;
  3193                           
  3194                           ;incstack = 0
  3195  002712  0E8D               	movlw	141
  3196  002714  0100               	movlb	0	; () banked
  3197  002716  6FC2               	movwf	(Xor_check@xor_value+1)& (0+255),b
  3198  002718  0E0D               	movlw	13
  3199  00271A  6FC1               	movwf	Xor_check@xor_value& (0+255),b
  3200                           
  3201                           ;zigbee.c: 504: unsigned short xor=0x00;
  3202  00271C  0E00               	movlw	0
  3203  00271E  6FC4               	movwf	(Xor_check@xor+1)& (0+255),b
  3204  002720  0E00               	movlw	0
  3205  002722  6FC3               	movwf	Xor_check@xor& (0+255),b
  3206                           
  3207                           ;zigbee.c: 505: while(length --)
  3208  002724  D00A               	goto	l575
  3209  002726                     
  3210                           ; BSR set to: 0
  3211                           ;zigbee.c: 506: {
  3212                           ;zigbee.c: 507: xor_value ^= *data_value++;
  3213                           
  3214                           ; BSR set to: 0
  3215  002726  C0BD  FFD9         	movff	Xor_check@data_value,fsr2l
  3216  00272A  C0BE  FFDA         	movff	Xor_check@data_value+1,fsr2h
  3217  00272E  50DF               	movf	indf2,w,c
  3218  002730  6FC0               	movwf	??_Xor_check& (0+255),b
  3219  002732  51C0               	movf	??_Xor_check& (0+255),w,b
  3220  002734  1BC1               	xorwf	Xor_check@xor_value& (0+255),f,b
  3221                           
  3222                           ; BSR set to: 0
  3223  002736  4BBD               	infsnz	Xor_check@data_value& (0+255),f,b
  3224  002738  2BBE               	incf	(Xor_check@data_value+1)& (0+255),f,b
  3225  00273A                     l575:
  3226                           
  3227                           ; BSR set to: 0
  3228                           
  3229                           ; BSR set to: 0
  3230  00273A  07BF               	decf	Xor_check@length& (0+255),f,b
  3231  00273C  29BF               	incf	Xor_check@length& (0+255),w,b
  3232  00273E  A4D8               	btfss	status,2,c
  3233  002740  D7F2               	goto	l576
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;zigbee.c: 508: }
  3237                           ;zigbee.c: 509: xor=xor_value;
  3238  002742  C0C1  F0C3         	movff	Xor_check@xor_value,Xor_check@xor
  3239  002746  C0C2  F0C4         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  3240                           
  3241                           ;zigbee.c: 510: return(xor);
  3242  00274A  C0C3  F0BD         	movff	Xor_check@xor,?_Xor_check
  3243  00274E  C0C4  F0BE         	movff	Xor_check@xor+1,?_Xor_check+1
  3244                           
  3245                           ; BSR set to: 0
  3246  002752  0012               	return		;funcret
  3247  002754                     __end_of_Xor_check:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           postinc0	equ	0xFEE
  3257                           wreg	equ	0xFE8
  3258                           indf1	equ	0xFE7
  3259                           postdec1	equ	0xFE5
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _set_short_address *****************
  3268 ;; Defined at:
  3269 ;;		line 67 in file "zigbee.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  address         2   25[BANK0 ] PTR unsigned char 
  3272 ;;		 -> ADDRESS_short_2(2), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:   10
  3291 ;; This function calls:
  3292 ;;		_write_ZIGBEE_short
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text8
  3299  0029A8                     __ptext8:
  3300                           	opt stack 0
  3301  0029A8                     _set_short_address:
  3302                           	opt stack 20
  3303                           
  3304                           ;zigbee.c: 68: write_ZIGBEE_short(0x03, address[0]);
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;incstack = 0
  3308  0029A8  C0C1  FFD9         	movff	set_short_address@address,fsr2l
  3309  0029AC  C0C2  FFDA         	movff	set_short_address@address+1,fsr2h
  3310  0029B0  50DF               	movf	indf2,w,c
  3311  0029B2  0100               	movlb	0	; () banked
  3312  0029B4  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3313  0029B6  0E03               	movlw	3
  3314  0029B8  ECB4  F015         	call	_write_ZIGBEE_short
  3315                           
  3316                           ;zigbee.c: 69: write_ZIGBEE_short(0x04, address[1]);
  3317  0029BC  0100               	movlb	0	; () banked
  3318  0029BE  EE20 F001          	lfsr	2,1
  3319  0029C2  51C1               	movf	set_short_address@address& (0+255),w,b
  3320  0029C4  26D9               	addwf	fsr2l,f,c
  3321  0029C6  51C2               	movf	(set_short_address@address+1)& (0+255),w,b
  3322  0029C8  22DA               	addwfc	fsr2h,f,c
  3323  0029CA  50DF               	movf	indf2,w,c
  3324  0029CC  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3325  0029CE  0E04               	movlw	4
  3326  0029D0  ECB4  F015         	call	_write_ZIGBEE_short
  3327  0029D4  0012               	return		;funcret
  3328  0029D6                     __end_of_set_short_address:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postdec1	equ	0xFE5
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _set_reception_mode *****************
  3349 ;; Defined at:
  3350 ;;		line 303 in file "zigbee.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  r_mode          1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  r_mode          1   25[BANK0 ] unsigned char 
  3355 ;;  temp            1   26[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;Total ram usage:        2 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:   10
  3372 ;; This function calls:
  3373 ;;		_write_ZIGBEE_short
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text9
  3380  002546                     __ptext9:
  3381                           	opt stack 0
  3382  002546                     _set_reception_mode:
  3383                           	opt stack 20
  3384                           
  3385                           ;incstack = 0
  3386                           ;set_reception_mode@r_mode stored from wreg
  3387  002546  0100               	movlb	0	; () banked
  3388  002548  6FC1               	movwf	set_reception_mode@r_mode& (0+255),b
  3389                           
  3390                           ;zigbee.c: 305: unsigned char temp=0;
  3391  00254A  0E00               	movlw	0
  3392  00254C  0100               	movlb	0	; () banked
  3393  00254E  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3394                           
  3395                           ;zigbee.c: 306: switch(r_mode)
  3396  002550  D026               	goto	l487
  3397  002552                     
  3398                           ; BSR set to: 0
  3399                           ;zigbee.c: 309: {
  3400                           ;zigbee.c: 310: temp=0;
  3401                           
  3402                           ; BSR set to: 0
  3403  002552  0E00               	movlw	0
  3404  002554  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3405                           
  3406                           ;zigbee.c: 311: temp = temp & (!0x03);
  3407  002556  0E00               	movlw	0
  3408  002558  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;zigbee.c: 312: write_ZIGBEE_short(0x00, temp);
  3412  00255A  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3413  00255E  0E00               	movlw	0
  3414  002560  ECB4  F015         	call	_write_ZIGBEE_short
  3415                           
  3416                           ;zigbee.c: 313: }
  3417                           ;zigbee.c: 314: break;
  3418  002564  0012               	return	
  3419  002566                     
  3420                           ;zigbee.c: 317: {
  3421                           ;zigbee.c: 318: temp=0;
  3422  002566  0E00               	movlw	0
  3423  002568  0100               	movlb	0	; () banked
  3424  00256A  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3425                           
  3426                           ;zigbee.c: 319: temp = temp & (!0x01);
  3427  00256C  0E00               	movlw	0
  3428  00256E  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;zigbee.c: 320: temp = temp | 0x02;
  3432  002570  51C2               	movf	set_reception_mode@temp& (0+255),w,b
  3433  002572  0902               	iorlw	2
  3434  002574  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;zigbee.c: 321: write_ZIGBEE_short(0x00, temp);
  3438  002576  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3439  00257A  0E00               	movlw	0
  3440  00257C  ECB4  F015         	call	_write_ZIGBEE_short
  3441                           
  3442                           ;zigbee.c: 322: }
  3443                           ;zigbee.c: 323: break;
  3444  002580  0012               	return	
  3445  002582                     
  3446                           ;zigbee.c: 325: {
  3447                           ;zigbee.c: 326: temp=0;
  3448  002582  0E00               	movlw	0
  3449  002584  0100               	movlb	0	; () banked
  3450  002586  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3451                           
  3452                           ;zigbee.c: 327: temp = temp & (!0x02);
  3453  002588  0E00               	movlw	0
  3454  00258A  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;zigbee.c: 328: temp = temp | 0x01;
  3458  00258C  51C2               	movf	set_reception_mode@temp& (0+255),w,b
  3459  00258E  0901               	iorlw	1
  3460  002590  6FC2               	movwf	set_reception_mode@temp& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;zigbee.c: 329: write_ZIGBEE_short(0x00, temp);
  3464  002592  C0C2  F0BF         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3465  002596  0E00               	movlw	0
  3466  002598  ECB4  F015         	call	_write_ZIGBEE_short
  3467                           
  3468                           ;zigbee.c: 332: }
  3469                           
  3470                           ;zigbee.c: 330: }
  3471                           ;zigbee.c: 331: break;
  3472  00259C  0012               	return	
  3473  00259E                     l487:
  3474  00259E  0100               	movlb	0	; () banked
  3475  0025A0  51C1               	movf	set_reception_mode@r_mode& (0+255),w,b
  3476                           
  3477                           ; Switch size 1, requested type "space"
  3478                           ; Number of cases is 3, Range of values is 1 to 3
  3479                           ; switch strategies available:
  3480                           ; Name         Instructions Cycles
  3481                           ; simple_byte           10     6 (average)
  3482                           ;	Chosen strategy is simple_byte
  3483  0025A2  0A01               	xorlw	1	; case 1
  3484  0025A4  B4D8               	btfsc	status,2,c
  3485  0025A6  D7D5               	goto	l488
  3486  0025A8  0A03               	xorlw	3	; case 2
  3487  0025AA  B4D8               	btfsc	status,2,c
  3488  0025AC  D7DC               	goto	l490
  3489  0025AE  0A01               	xorlw	1	; case 3
  3490  0025B0  A4D8               	btfss	status,2,c
  3491  0025B2  0012               	return	
  3492  0025B4  D7E6               	goto	l491
  3493  0025B6                     __end_of_set_reception_mode:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           postdec1	equ	0xFE5
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _set_long_address *****************
  3514 ;; Defined at:
  3515 ;;		line 62 in file "zigbee.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  address         2   25[BANK0 ] PTR unsigned char 
  3518 ;;		 -> ADDRESS_long_2(8), 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  i               1   27[BANK0 ] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:        3 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:   10
  3537 ;; This function calls:
  3538 ;;		_write_ZIGBEE_short
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text10
  3545  002940                     __ptext10:
  3546                           	opt stack 0
  3547  002940                     _set_long_address:
  3548                           	opt stack 20
  3549                           
  3550                           ;zigbee.c: 63: unsigned char i = 0;
  3551                           
  3552                           ;incstack = 0
  3553  002940  0E00               	movlw	0
  3554  002942  0100               	movlb	0	; () banked
  3555  002944  6FC3               	movwf	set_long_address@i& (0+255),b
  3556                           
  3557                           ;zigbee.c: 64: for(i = 0; i < 8; i++)
  3558  002946  0E00               	movlw	0
  3559  002948  6FC3               	movwf	set_long_address@i& (0+255),b
  3560  00294A                     l4500:
  3561                           
  3562                           ; BSR set to: 0
  3563  00294A  0E07               	movlw	7
  3564  00294C  65C3               	cpfsgt	set_long_address@i& (0+255),b
  3565  00294E  D001               	goto	l406
  3566  002950  0012               	return	
  3567  002952                     l406:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;zigbee.c: 65: write_ZIGBEE_short(0x05 + i, address[i]);
  3571                           
  3572                           ; BSR set to: 0
  3573  002952  51C3               	movf	set_long_address@i& (0+255),w,b
  3574  002954  0D01               	mullw	1
  3575  002956  50F3               	movf	prodl,w,c
  3576  002958  25C1               	addwf	set_long_address@address& (0+255),w,b
  3577  00295A  6ED9               	movwf	fsr2l,c
  3578  00295C  50F4               	movf	prodh,w,c
  3579  00295E  21C2               	addwfc	(set_long_address@address+1)& (0+255),w,b
  3580  002960  6EDA               	movwf	fsr2h,c
  3581  002962  50DF               	movf	indf2,w,c
  3582  002964  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3583  002966  51C3               	movf	set_long_address@i& (0+255),w,b
  3584  002968  0F05               	addlw	5
  3585  00296A  ECB4  F015         	call	_write_ZIGBEE_short
  3586  00296E  0100               	movlb	0	; () banked
  3587  002970  2BC3               	incf	set_long_address@i& (0+255),f,b
  3588  002972  D7EB               	goto	l4500
  3589  002974                     __end_of_set_long_address:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           indf1	equ	0xFE7
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _set_frame_format_filter *****************
  3610 ;; Defined at:
  3611 ;;		line 262 in file "zigbee.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  fff_mode        1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  fff_mode        1   25[BANK0 ] unsigned char 
  3616 ;;  temp            1   26[BANK0 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:   10
  3633 ;; This function calls:
  3634 ;;		_write_ZIGBEE_short
  3635 ;; This function is called by:
  3636 ;;		_main
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text11
  3641  0024B4                     __ptext11:
  3642                           	opt stack 0
  3643  0024B4                     _set_frame_format_filter:
  3644                           	opt stack 20
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;incstack = 0
  3648                           ;set_frame_format_filter@fff_mode stored from wreg
  3649  0024B4  0100               	movlb	0	; () banked
  3650  0024B6  6FC1               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  3651                           
  3652                           ;zigbee.c: 264: unsigned char temp = 0;
  3653  0024B8  0E00               	movlw	0
  3654  0024BA  0100               	movlb	0	; () banked
  3655  0024BC  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3656                           
  3657                           ;zigbee.c: 265: switch(fff_mode)
  3658  0024BE  D034               	goto	l478
  3659  0024C0                     
  3660                           ; BSR set to: 0
  3661                           ;zigbee.c: 268: {
  3662                           ;zigbee.c: 269: temp=0;
  3663                           
  3664                           ; BSR set to: 0
  3665  0024C0  0E00               	movlw	0
  3666  0024C2  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3667                           
  3668                           ;zigbee.c: 270: temp = temp & (!0x0E);
  3669  0024C4  0E00               	movlw	0
  3670  0024C6  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;zigbee.c: 271: write_ZIGBEE_short(0x0D, temp);
  3674  0024C8  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3675  0024CC  0E0D               	movlw	13
  3676  0024CE  ECB4  F015         	call	_write_ZIGBEE_short
  3677                           
  3678                           ;zigbee.c: 272: }
  3679                           ;zigbee.c: 273: break;
  3680  0024D2  0012               	return	
  3681  0024D4                     
  3682                           ;zigbee.c: 275: {
  3683                           ;zigbee.c: 276: temp=0;
  3684  0024D4  0E00               	movlw	0
  3685  0024D6  0100               	movlb	0	; () banked
  3686  0024D8  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3687                           
  3688                           ;zigbee.c: 277: temp = temp & (!0x06);
  3689  0024DA  0E00               	movlw	0
  3690  0024DC  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;zigbee.c: 278: temp = temp | 0x08;
  3694  0024DE  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3695  0024E0  0908               	iorlw	8
  3696  0024E2  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;zigbee.c: 279: write_ZIGBEE_short(0x0D, temp);
  3700  0024E4  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3701  0024E8  0E0D               	movlw	13
  3702  0024EA  ECB4  F015         	call	_write_ZIGBEE_short
  3703                           
  3704                           ;zigbee.c: 280: }
  3705                           ;zigbee.c: 281: break;
  3706  0024EE  0012               	return	
  3707  0024F0                     
  3708                           ;zigbee.c: 283: {
  3709                           ;zigbee.c: 284: temp=0;
  3710  0024F0  0E00               	movlw	0
  3711  0024F2  0100               	movlb	0	; () banked
  3712  0024F4  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3713                           
  3714                           ;zigbee.c: 285: temp = temp & (!0x0A);
  3715  0024F6  0E00               	movlw	0
  3716  0024F8  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;zigbee.c: 286: temp = temp | 0x04;
  3720  0024FA  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3721  0024FC  0904               	iorlw	4
  3722  0024FE  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;zigbee.c: 287: write_ZIGBEE_short(0x0D, temp);
  3726  002500  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3727  002504  0E0D               	movlw	13
  3728  002506  ECB4  F015         	call	_write_ZIGBEE_short
  3729                           
  3730                           ;zigbee.c: 288: }
  3731                           ;zigbee.c: 289: break;
  3732  00250A  0012               	return	
  3733  00250C                     
  3734                           ;zigbee.c: 292: {
  3735                           ;zigbee.c: 293: temp=0;
  3736  00250C  0E00               	movlw	0
  3737  00250E  0100               	movlb	0	; () banked
  3738  002510  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3739                           
  3740                           ;zigbee.c: 294: temp = temp & (!0x0C);
  3741  002512  0E00               	movlw	0
  3742  002514  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;zigbee.c: 295: temp = temp | 0x02;
  3746  002516  51C2               	movf	set_frame_format_filter@temp& (0+255),w,b
  3747  002518  0902               	iorlw	2
  3748  00251A  6FC2               	movwf	set_frame_format_filter@temp& (0+255),b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;zigbee.c: 296: write_ZIGBEE_short(0x0D, temp);
  3752  00251C  C0C2  F0BF         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3753  002520  0E0D               	movlw	13
  3754  002522  ECB4  F015         	call	_write_ZIGBEE_short
  3755                           
  3756                           ;zigbee.c: 299: }
  3757                           
  3758                           ;zigbee.c: 297: }
  3759                           ;zigbee.c: 298: break;
  3760  002526  0012               	return	
  3761  002528                     l478:
  3762  002528  0100               	movlb	0	; () banked
  3763  00252A  51C1               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  3764                           
  3765                           ; Switch size 1, requested type "space"
  3766                           ; Number of cases is 4, Range of values is 1 to 4
  3767                           ; switch strategies available:
  3768                           ; Name         Instructions Cycles
  3769                           ; simple_byte           13     7 (average)
  3770                           ;	Chosen strategy is simple_byte
  3771  00252C  0A01               	xorlw	1	; case 1
  3772  00252E  B4D8               	btfsc	status,2,c
  3773  002530  D7C7               	goto	l479
  3774  002532  0A03               	xorlw	3	; case 2
  3775  002534  B4D8               	btfsc	status,2,c
  3776  002536  D7CE               	goto	l481
  3777  002538  0A01               	xorlw	1	; case 3
  3778  00253A  B4D8               	btfsc	status,2,c
  3779  00253C  D7D9               	goto	l482
  3780  00253E  0A07               	xorlw	7	; case 4
  3781  002540  A4D8               	btfss	status,2,c
  3782  002542  0012               	return	
  3783  002544  D7E3               	goto	l483
  3784  002546                     __end_of_set_frame_format_filter:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           prodh	equ	0xFF4
  3791                           prodl	equ	0xFF3
  3792                           intcon	equ	0xFF2
  3793                           postinc0	equ	0xFEE
  3794                           wreg	equ	0xFE8
  3795                           indf1	equ	0xFE7
  3796                           postdec1	equ	0xFE5
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804 ;; *************** function _set_WAKE_from_pin *****************
  3805 ;; Defined at:
  3806 ;;		line 57 in file "zigbee.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:   10
  3827 ;; This function calls:
  3828 ;;		_write_ZIGBEE_short
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text12
  3835  002C78                     __ptext12:
  3836                           	opt stack 0
  3837  002C78                     _set_WAKE_from_pin:
  3838                           	opt stack 20
  3839                           
  3840                           ;zigbee.c: 58: PORTFbits.RF2=0;
  3841                           
  3842                           ;incstack = 0
  3843  002C78  9485               	bcf	3973,2,c	;volatile
  3844                           
  3845                           ;zigbee.c: 59: write_ZIGBEE_short(0x0D,0x60);
  3846  002C7A  0E60               	movlw	96
  3847  002C7C  0100               	movlb	0	; () banked
  3848  002C7E  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3849  002C80  0E0D               	movlw	13
  3850  002C82  ECB4  F015         	call	_write_ZIGBEE_short
  3851                           
  3852                           ;zigbee.c: 60: write_ZIGBEE_short(0x22,0x80);
  3853  002C86  0E80               	movlw	128
  3854  002C88  0100               	movlb	0	; () banked
  3855  002C8A  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3856  002C8C  0E22               	movlw	34
  3857  002C8E  ECB4  F015         	call	_write_ZIGBEE_short
  3858  002C92  0012               	return		;funcret
  3859  002C94                     __end_of_set_WAKE_from_pin:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           intcon	equ	0xFF2
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           indf1	equ	0xFE7
  3871                           postdec1	equ	0xFE5
  3872                           fsr1h	equ	0xFE2
  3873                           fsr1l	equ	0xFE1
  3874                           indf2	equ	0xFDF
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function _set_TX_power *****************
  3880 ;; Defined at:
  3881 ;;		line 251 in file "zigbee.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  power           1    wreg     unsigned char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  power           1   31[BANK0 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        2 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:   10
  3902 ;; This function calls:
  3903 ;;		_write_ZIGBEE_long
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text13
  3910  002754                     __ptext13:
  3911                           	opt stack 0
  3912  002754                     _set_TX_power:
  3913                           	opt stack 20
  3914                           
  3915                           ;incstack = 0
  3916                           ;set_TX_power@power stored from wreg
  3917  002754  0100               	movlb	0	; () banked
  3918  002756  6FC7               	movwf	set_TX_power@power& (0+255),b
  3919                           
  3920                           ;zigbee.c: 252: if((power < 0) || (power > 31))
  3921  002758  0E1F               	movlw	31
  3922  00275A  0100               	movlb	0	; () banked
  3923  00275C  65C7               	cpfsgt	set_TX_power@power& (0+255),b
  3924  00275E  D002               	goto	l474
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;zigbee.c: 253: power = 31;
  3928  002760  0E1F               	movlw	31
  3929  002762  6FC7               	movwf	set_TX_power@power& (0+255),b
  3930  002764                     l474:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;zigbee.c: 255: power = 31 - power;
  3934                           
  3935                           ; BSR set to: 0
  3936  002764  51C7               	movf	set_TX_power@power& (0+255),w,b
  3937  002766  0800               	sublw	0
  3938  002768  0F1F               	addlw	31
  3939  00276A  6FC7               	movwf	set_TX_power@power& (0+255),b
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;zigbee.c: 256: power = ((power & 0b00011111) << 3) & 0b11111000;
  3943  00276C  C0C7  F0C6         	movff	set_TX_power@power,??_set_TX_power
  3944  002770  0E1F               	movlw	31
  3945  002772  17C6               	andwf	??_set_TX_power& (0+255),f,b
  3946  002774  90D8               	bcf	status,0,c
  3947  002776  37C6               	rlcf	??_set_TX_power& (0+255),f,b
  3948  002778  90D8               	bcf	status,0,c
  3949  00277A  37C6               	rlcf	??_set_TX_power& (0+255),f,b
  3950  00277C  90D8               	bcf	status,0,c
  3951  00277E  35C6               	rlcf	??_set_TX_power& (0+255),w,b
  3952  002780  0BF8               	andlw	248
  3953  002782  6FC7               	movwf	set_TX_power@power& (0+255),b
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;zigbee.c: 257: write_ZIGBEE_long(0x203, power);
  3957  002784  0E02               	movlw	2
  3958  002786  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  3959  002788  0E03               	movlw	3
  3960  00278A  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  3961  00278C  C0C7  F0C1         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  3962  002790  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  3963  002794  0012               	return		;funcret
  3964  002796                     __end_of_set_TX_power:
  3965                           	opt stack 0
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           prodh	equ	0xFF4
  3971                           prodl	equ	0xFF3
  3972                           intcon	equ	0xFF2
  3973                           postinc0	equ	0xFEE
  3974                           wreg	equ	0xFE8
  3975                           indf1	equ	0xFE7
  3976                           postdec1	equ	0xFE5
  3977                           fsr1h	equ	0xFE2
  3978                           fsr1l	equ	0xFE1
  3979                           indf2	equ	0xFDF
  3980                           fsr2h	equ	0xFDA
  3981                           fsr2l	equ	0xFD9
  3982                           status	equ	0xFD8
  3983                           
  3984 ;; *************** function _set_PAN_ID *****************
  3985 ;; Defined at:
  3986 ;;		line 71 in file "zigbee.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  address         2   25[BANK0 ] PTR unsigned char 
  3989 ;;		 -> PAN_ID_2(2), 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;Total ram usage:        2 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:   10
  4008 ;; This function calls:
  4009 ;;		_write_ZIGBEE_short
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text14
  4016  0029D6                     __ptext14:
  4017                           	opt stack 0
  4018  0029D6                     _set_PAN_ID:
  4019                           	opt stack 20
  4020                           
  4021                           ;zigbee.c: 72: write_ZIGBEE_short(0x01, address[0]);
  4022                           
  4023                           ;incstack = 0
  4024  0029D6  C0C1  FFD9         	movff	set_PAN_ID@address,fsr2l
  4025  0029DA  C0C2  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  4026  0029DE  50DF               	movf	indf2,w,c
  4027  0029E0  0100               	movlb	0	; () banked
  4028  0029E2  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4029  0029E4  0E01               	movlw	1
  4030  0029E6  ECB4  F015         	call	_write_ZIGBEE_short
  4031                           
  4032                           ;zigbee.c: 73: write_ZIGBEE_short(0x02, address[1]);
  4033  0029EA  0100               	movlb	0	; () banked
  4034  0029EC  EE20 F001          	lfsr	2,1
  4035  0029F0  51C1               	movf	set_PAN_ID@address& (0+255),w,b
  4036  0029F2  26D9               	addwf	fsr2l,f,c
  4037  0029F4  51C2               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  4038  0029F6  22DA               	addwfc	fsr2h,f,c
  4039  0029F8  50DF               	movf	indf2,w,c
  4040  0029FA  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4041  0029FC  0E02               	movlw	2
  4042  0029FE  ECB4  F015         	call	_write_ZIGBEE_short
  4043  002A02  0012               	return		;funcret
  4044  002A04                     __end_of_set_PAN_ID:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           indf1	equ	0xFE7
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           indf2	equ	0xFDF
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _pin_reset *****************
  4065 ;; Defined at:
  4066 ;;		line 46 in file "zigbee.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    9
  4087 ;; This function calls:
  4088 ;;		_Delay_ms
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text15
  4095  002BF8                     __ptext15:
  4096                           	opt stack 0
  4097  002BF8                     _pin_reset:
  4098                           	opt stack 21
  4099                           
  4100                           ;zigbee.c: 47: PORTCbits.RC1=0;
  4101                           
  4102                           ;incstack = 0
  4103  002BF8  9282               	bcf	3970,1,c	;volatile
  4104                           
  4105                           ;zigbee.c: 48: Delay_ms(10);
  4106  002BFA  0E00               	movlw	0
  4107  002BFC  0100               	movlb	0	; () banked
  4108  002BFE  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4109  002C00  0E0A               	movlw	10
  4110  002C02  6FBD               	movwf	Delay_ms@time& (0+255),b
  4111  002C04  EC4A  F016         	call	_Delay_ms	;wreg free
  4112                           
  4113                           ;zigbee.c: 49: PORTCbits.RC1=1;
  4114  002C08  8282               	bsf	3970,1,c	;volatile
  4115                           
  4116                           ;zigbee.c: 50: Delay_ms(10);
  4117  002C0A  0E00               	movlw	0
  4118  002C0C  0100               	movlb	0	; () banked
  4119  002C0E  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4120  002C10  0E0A               	movlw	10
  4121  002C12  6FBD               	movwf	Delay_ms@time& (0+255),b
  4122  002C14  EC4A  F016         	call	_Delay_ms	;wreg free
  4123  002C18  0012               	return		;funcret
  4124  002C1A                     __end_of_pin_reset:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           intcon	equ	0xFF2
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           indf1	equ	0xFE7
  4136                           postdec1	equ	0xFE5
  4137                           fsr1h	equ	0xFE2
  4138                           fsr1l	equ	0xFE1
  4139                           indf2	equ	0xFDF
  4140                           fsr2h	equ	0xFDA
  4141                           fsr2l	equ	0xFD9
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  4145 ;; Defined at:
  4146 ;;		line 235 in file "zigbee.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  temp            1   25[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;Total ram usage:        1 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:   10
  4167 ;; This function calls:
  4168 ;;		_write_ZIGBEE_short
  4169 ;; This function is called by:
  4170 ;;		_main
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text16
  4175  00285A                     __ptext16:
  4176                           	opt stack 0
  4177  00285A                     _nonbeacon_PAN_coordinator_device:
  4178                           	opt stack 20
  4179                           
  4180                           ;zigbee.c: 236: unsigned char temp = 0;
  4181                           
  4182                           ;incstack = 0
  4183  00285A  0E00               	movlw	0
  4184  00285C  0100               	movlb	0	; () banked
  4185  00285E  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4186                           
  4187                           ;zigbee.c: 238: temp=0;
  4188  002860  0E00               	movlw	0
  4189  002862  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;zigbee.c: 239: temp = temp | 0x08;
  4193  002864  51C1               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4194  002866  0908               	iorlw	8
  4195  002868  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;zigbee.c: 240: write_ZIGBEE_short(0x00, temp);
  4199  00286A  C0C1  F0BF         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4200  00286E  0E00               	movlw	0
  4201  002870  ECB4  F015         	call	_write_ZIGBEE_short
  4202                           
  4203                           ;zigbee.c: 242: temp=0;
  4204  002874  0E00               	movlw	0
  4205  002876  0100               	movlb	0	; () banked
  4206  002878  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;zigbee.c: 243: temp = temp & 0xDF;
  4210  00287A  51C1               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4211  00287C  0BDF               	andlw	223
  4212  00287E  6FC1               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4213                           
  4214                           ;zigbee.c: 244: write_ZIGBEE_short(0x11, temp);
  4215  002880  C0C1  F0BF         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4216  002884  0E11               	movlw	17
  4217  002886  ECB4  F015         	call	_write_ZIGBEE_short
  4218                           
  4219                           ;zigbee.c: 246: write_ZIGBEE_short(0x10, 0xFF);
  4220  00288A  0EFF               	movlw	255
  4221  00288C  0100               	movlb	0	; () banked
  4222  00288E  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4223  002890  0E10               	movlw	16
  4224  002892  ECB4  F015         	call	_write_ZIGBEE_short
  4225  002896  0012               	return		;funcret
  4226  002898                     __end_of_nonbeacon_PAN_coordinator_device:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postdec1	equ	0xFE5
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           indf2	equ	0xFDF
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  4247 ;; Defined at:
  4248 ;;		line 75 in file "zigbee.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:   12
  4269 ;; This function calls:
  4270 ;;		_RF_reset
  4271 ;;		_enable_interrupt
  4272 ;;		_init_ZIGBEE_basic
  4273 ;;		_pin_wake
  4274 ;;		_set_CCA_mode
  4275 ;;		_set_RSSI_mode
  4276 ;;		_set_channel
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text17
  4283  002B44                     __ptext17:
  4284                           	opt stack 0
  4285  002B44                     _init_ZIGBEE_nonbeacon:
  4286                           	opt stack 18
  4287                           
  4288                           ;zigbee.c: 76: init_ZIGBEE_basic();
  4289                           
  4290                           ;incstack = 0
  4291  002B44  EC0F  F012         	call	_init_ZIGBEE_basic	;wreg free
  4292                           
  4293                           ;zigbee.c: 77: set_CCA_mode(1);
  4294  002B48  0E01               	movlw	1
  4295  002B4A  EC54  F011         	call	_set_CCA_mode
  4296                           
  4297                           ;zigbee.c: 78: set_RSSI_mode(2);
  4298  002B4E  0E02               	movlw	2
  4299  002B50  ECCB  F013         	call	_set_RSSI_mode
  4300                           
  4301                           ;zigbee.c: 79: enable_interrupt();
  4302  002B54  ECE3  F016         	call	_enable_interrupt	;wreg free
  4303                           
  4304                           ;zigbee.c: 80: set_channel(15);
  4305  002B58  0E0F               	movlw	15
  4306  002B5A  EC7E  F00D         	call	_set_channel
  4307                           
  4308                           ;zigbee.c: 81: pin_wake();
  4309  002B5E  ECB0  F016         	call	_pin_wake	;wreg free
  4310                           
  4311                           ;zigbee.c: 82: RF_reset();
  4312  002B62  EC2D  F015         	call	_RF_reset	;wreg free
  4313  002B66  0012               	return		;funcret
  4314  002B68                     __end_of_init_ZIGBEE_nonbeacon:
  4315                           	opt stack 0
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           prodh	equ	0xFF4
  4321                           prodl	equ	0xFF3
  4322                           intcon	equ	0xFF2
  4323                           postinc0	equ	0xFEE
  4324                           wreg	equ	0xFE8
  4325                           indf1	equ	0xFE7
  4326                           postdec1	equ	0xFE5
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _set_channel *****************
  4335 ;; Defined at:
  4336 ;;		line 171 in file "zigbee.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  channel_numb    1    wreg     unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  channel_numb    1   30[BANK0 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        1 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:   11
  4357 ;; This function calls:
  4358 ;;		_RF_reset
  4359 ;;		_write_ZIGBEE_long
  4360 ;; This function is called by:
  4361 ;;		_init_ZIGBEE_nonbeacon
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text18
  4366  001AFC                     __ptext18:
  4367                           	opt stack 0
  4368  001AFC                     _set_channel:
  4369                           	opt stack 18
  4370                           
  4371                           ;incstack = 0
  4372                           ;set_channel@channel_number stored from wreg
  4373  001AFC  0100               	movlb	0	; () banked
  4374  001AFE  6FC6               	movwf	set_channel@channel_number& (0+255),b
  4375                           
  4376                           ;zigbee.c: 173: if((channel_number > 26) || (channel_number < 11))
  4377  001B00  0E1B               	movlw	27
  4378  001B02  0100               	movlb	0	; () banked
  4379  001B04  61C6               	cpfslt	set_channel@channel_number& (0+255),b
  4380  001B06  D003               	goto	u2910
  4381                           
  4382                           ; BSR set to: 0
  4383  001B08  0E0B               	movlw	11
  4384  001B0A  61C6               	cpfslt	set_channel@channel_number& (0+255),b
  4385  001B0C  D0A2               	goto	l447
  4386  001B0E                     u2910:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;zigbee.c: 174: channel_number = 11;
  4390                           
  4391                           ; BSR set to: 0
  4392  001B0E  0E0B               	movlw	11
  4393  001B10  6FC6               	movwf	set_channel@channel_number& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;zigbee.c: 176: switch(channel_number)
  4397  001B12  D09F               	goto	l447
  4398  001B14                     
  4399                           ; BSR set to: 0
  4400                           ;zigbee.c: 179: write_ZIGBEE_long(0x200, 0x02);
  4401                           
  4402                           ; BSR set to: 0
  4403  001B14  0E02               	movlw	2
  4404  001B16  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4405  001B18  0E00               	movlw	0
  4406  001B1A  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4407  001B1C  0E02               	movlw	2
  4408  001B1E  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4409  001B20  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4410                           
  4411                           ;zigbee.c: 180: break;
  4412  001B24  D0C8               	goto	l449
  4413  001B26                     
  4414                           ;zigbee.c: 183: write_ZIGBEE_long(0x200, 0x12);
  4415  001B26  0E02               	movlw	2
  4416  001B28  0100               	movlb	0	; () banked
  4417  001B2A  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4418  001B2C  0E00               	movlw	0
  4419  001B2E  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4420  001B30  0E12               	movlw	18
  4421  001B32  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4422  001B34  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4423                           
  4424                           ;zigbee.c: 184: break;
  4425  001B38  D0BE               	goto	l449
  4426  001B3A                     
  4427                           ;zigbee.c: 187: write_ZIGBEE_long(0x200, 0x22);
  4428  001B3A  0E02               	movlw	2
  4429  001B3C  0100               	movlb	0	; () banked
  4430  001B3E  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4431  001B40  0E00               	movlw	0
  4432  001B42  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4433  001B44  0E22               	movlw	34
  4434  001B46  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4435  001B48  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4436                           
  4437                           ;zigbee.c: 188: break;
  4438  001B4C  D0B4               	goto	l449
  4439  001B4E                     
  4440                           ;zigbee.c: 190: write_ZIGBEE_long(0x200, 0x32);
  4441  001B4E  0E02               	movlw	2
  4442  001B50  0100               	movlb	0	; () banked
  4443  001B52  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4444  001B54  0E00               	movlw	0
  4445  001B56  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4446  001B58  0E32               	movlw	50
  4447  001B5A  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4448  001B5C  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4449                           
  4450                           ;zigbee.c: 191: break;
  4451  001B60  D0AA               	goto	l449
  4452  001B62                     
  4453                           ;zigbee.c: 193: write_ZIGBEE_long(0x200, 0x42);
  4454  001B62  0E02               	movlw	2
  4455  001B64  0100               	movlb	0	; () banked
  4456  001B66  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4457  001B68  0E00               	movlw	0
  4458  001B6A  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4459  001B6C  0E42               	movlw	66
  4460  001B6E  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4461  001B70  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4462                           
  4463                           ;zigbee.c: 194: break;
  4464  001B74  D0A0               	goto	l449
  4465  001B76                     
  4466                           ;zigbee.c: 196: write_ZIGBEE_long(0x200, 0x52);
  4467  001B76  0E02               	movlw	2
  4468  001B78  0100               	movlb	0	; () banked
  4469  001B7A  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4470  001B7C  0E00               	movlw	0
  4471  001B7E  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4472  001B80  0E52               	movlw	82
  4473  001B82  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4474  001B84  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4475                           
  4476                           ;zigbee.c: 197: break;
  4477  001B88  D096               	goto	l449
  4478  001B8A                     
  4479                           ;zigbee.c: 199: write_ZIGBEE_long(0x200, 0x62);
  4480  001B8A  0E02               	movlw	2
  4481  001B8C  0100               	movlb	0	; () banked
  4482  001B8E  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4483  001B90  0E00               	movlw	0
  4484  001B92  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4485  001B94  0E62               	movlw	98
  4486  001B96  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4487  001B98  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4488                           
  4489                           ;zigbee.c: 200: break;
  4490  001B9C  D08C               	goto	l449
  4491  001B9E                     
  4492                           ;zigbee.c: 202: write_ZIGBEE_long(0x200, 0x72);
  4493  001B9E  0E02               	movlw	2
  4494  001BA0  0100               	movlb	0	; () banked
  4495  001BA2  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4496  001BA4  0E00               	movlw	0
  4497  001BA6  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4498  001BA8  0E72               	movlw	114
  4499  001BAA  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4500  001BAC  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4501                           
  4502                           ;zigbee.c: 203: break;
  4503  001BB0  D082               	goto	l449
  4504  001BB2                     
  4505                           ;zigbee.c: 205: write_ZIGBEE_long(0x200, 0x82);
  4506  001BB2  0E02               	movlw	2
  4507  001BB4  0100               	movlb	0	; () banked
  4508  001BB6  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4509  001BB8  0E00               	movlw	0
  4510  001BBA  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4511  001BBC  0E82               	movlw	130
  4512  001BBE  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4513  001BC0  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4514                           
  4515                           ;zigbee.c: 206: break;
  4516  001BC4  D078               	goto	l449
  4517  001BC6                     
  4518                           ;zigbee.c: 208: write_ZIGBEE_long(0x200, 0x92);
  4519  001BC6  0E02               	movlw	2
  4520  001BC8  0100               	movlb	0	; () banked
  4521  001BCA  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4522  001BCC  0E00               	movlw	0
  4523  001BCE  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4524  001BD0  0E92               	movlw	146
  4525  001BD2  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4526  001BD4  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4527                           
  4528                           ;zigbee.c: 209: break;
  4529  001BD8  D06E               	goto	l449
  4530  001BDA                     
  4531                           ;zigbee.c: 211: write_ZIGBEE_long(0x200, 0xA2);
  4532  001BDA  0E02               	movlw	2
  4533  001BDC  0100               	movlb	0	; () banked
  4534  001BDE  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4535  001BE0  0E00               	movlw	0
  4536  001BE2  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4537  001BE4  0EA2               	movlw	162
  4538  001BE6  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4539  001BE8  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4540                           
  4541                           ;zigbee.c: 212: break;
  4542  001BEC  D064               	goto	l449
  4543  001BEE                     
  4544                           ;zigbee.c: 214: write_ZIGBEE_long(0x200, 0xB2);
  4545  001BEE  0E02               	movlw	2
  4546  001BF0  0100               	movlb	0	; () banked
  4547  001BF2  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4548  001BF4  0E00               	movlw	0
  4549  001BF6  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4550  001BF8  0EB2               	movlw	178
  4551  001BFA  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4552  001BFC  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4553                           
  4554                           ;zigbee.c: 215: break;
  4555  001C00  D05A               	goto	l449
  4556  001C02                     
  4557                           ;zigbee.c: 217: write_ZIGBEE_long(0x200, 0xC2);
  4558  001C02  0E02               	movlw	2
  4559  001C04  0100               	movlb	0	; () banked
  4560  001C06  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4561  001C08  0E00               	movlw	0
  4562  001C0A  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4563  001C0C  0EC2               	movlw	194
  4564  001C0E  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4565  001C10  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4566                           
  4567                           ;zigbee.c: 218: break;
  4568  001C14  D050               	goto	l449
  4569  001C16                     
  4570                           ;zigbee.c: 220: write_ZIGBEE_long(0x200, 0xD2);
  4571  001C16  0E02               	movlw	2
  4572  001C18  0100               	movlb	0	; () banked
  4573  001C1A  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4574  001C1C  0E00               	movlw	0
  4575  001C1E  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4576  001C20  0ED2               	movlw	210
  4577  001C22  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4578  001C24  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4579                           
  4580                           ;zigbee.c: 221: break;
  4581  001C28  D046               	goto	l449
  4582  001C2A                     
  4583                           ;zigbee.c: 223: write_ZIGBEE_long(0x200, 0xE2);
  4584  001C2A  0E02               	movlw	2
  4585  001C2C  0100               	movlb	0	; () banked
  4586  001C2E  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4587  001C30  0E00               	movlw	0
  4588  001C32  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4589  001C34  0EE2               	movlw	226
  4590  001C36  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4591  001C38  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4592                           
  4593                           ;zigbee.c: 224: break;
  4594  001C3C  D03C               	goto	l449
  4595  001C3E                     
  4596                           ;zigbee.c: 226: write_ZIGBEE_long(0x200, 0xF2);
  4597  001C3E  0E02               	movlw	2
  4598  001C40  0100               	movlb	0	; () banked
  4599  001C42  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4600  001C44  0E00               	movlw	0
  4601  001C46  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  4602  001C48  0EF2               	movlw	242
  4603  001C4A  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4604  001C4C  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  4605                           
  4606                           ;zigbee.c: 228: }
  4607                           
  4608                           ;zigbee.c: 227: break;
  4609  001C50  D032               	goto	l449
  4610  001C52                     l447:
  4611  001C52  0100               	movlb	0	; () banked
  4612  001C54  51C6               	movf	set_channel@channel_number& (0+255),w,b
  4613                           
  4614                           ; Switch size 1, requested type "space"
  4615                           ; Number of cases is 16, Range of values is 11 to 26
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte           49    25 (average)
  4619                           ;	Chosen strategy is simple_byte
  4620  001C56  0A0B               	xorlw	11	; case 11
  4621  001C58  B4D8               	btfsc	status,2,c
  4622  001C5A  D75C               	goto	l448
  4623  001C5C  0A07               	xorlw	7	; case 12
  4624  001C5E  B4D8               	btfsc	status,2,c
  4625  001C60  D762               	goto	l450
  4626  001C62  0A01               	xorlw	1	; case 13
  4627  001C64  B4D8               	btfsc	status,2,c
  4628  001C66  D769               	goto	l451
  4629  001C68  0A03               	xorlw	3	; case 14
  4630  001C6A  B4D8               	btfsc	status,2,c
  4631  001C6C  D770               	goto	l452
  4632  001C6E  0A01               	xorlw	1	; case 15
  4633  001C70  B4D8               	btfsc	status,2,c
  4634  001C72  D777               	goto	l453
  4635  001C74  0A1F               	xorlw	31	; case 16
  4636  001C76  B4D8               	btfsc	status,2,c
  4637  001C78  D77E               	goto	l454
  4638  001C7A  0A01               	xorlw	1	; case 17
  4639  001C7C  B4D8               	btfsc	status,2,c
  4640  001C7E  D785               	goto	l455
  4641  001C80  0A03               	xorlw	3	; case 18
  4642  001C82  B4D8               	btfsc	status,2,c
  4643  001C84  D78C               	goto	l456
  4644  001C86  0A01               	xorlw	1	; case 19
  4645  001C88  B4D8               	btfsc	status,2,c
  4646  001C8A  D793               	goto	l457
  4647  001C8C  0A07               	xorlw	7	; case 20
  4648  001C8E  B4D8               	btfsc	status,2,c
  4649  001C90  D79A               	goto	l458
  4650  001C92  0A01               	xorlw	1	; case 21
  4651  001C94  B4D8               	btfsc	status,2,c
  4652  001C96  D7A1               	goto	l459
  4653  001C98  0A03               	xorlw	3	; case 22
  4654  001C9A  B4D8               	btfsc	status,2,c
  4655  001C9C  D7A8               	goto	l460
  4656  001C9E  0A01               	xorlw	1	; case 23
  4657  001CA0  B4D8               	btfsc	status,2,c
  4658  001CA2  D7AF               	goto	l461
  4659  001CA4  0A0F               	xorlw	15	; case 24
  4660  001CA6  B4D8               	btfsc	status,2,c
  4661  001CA8  D7B6               	goto	l462
  4662  001CAA  0A01               	xorlw	1	; case 25
  4663  001CAC  B4D8               	btfsc	status,2,c
  4664  001CAE  D7BD               	goto	l463
  4665  001CB0  0A03               	xorlw	3	; case 26
  4666  001CB2  B4D8               	btfsc	status,2,c
  4667  001CB4  D7C4               	goto	l464
  4668  001CB6                     l449:
  4669                           
  4670                           ;zigbee.c: 229: RF_reset();
  4671                           
  4672                           ; BSR set to: 0
  4673  001CB6  EC2D  F015         	call	_RF_reset	;wreg free
  4674  001CBA  0012               	return		;funcret
  4675  001CBC                     __end_of_set_channel:
  4676                           	opt stack 0
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           prodh	equ	0xFF4
  4682                           prodl	equ	0xFF3
  4683                           intcon	equ	0xFF2
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           indf1	equ	0xFE7
  4687                           postdec1	equ	0xFE5
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           indf2	equ	0xFDF
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695 ;; *************** function _RF_reset *****************
  4696 ;; Defined at:
  4697 ;;		line 52 in file "zigbee.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:   10
  4718 ;; This function calls:
  4719 ;;		_Delay_ms
  4720 ;;		_write_ZIGBEE_short
  4721 ;; This function is called by:
  4722 ;;		_init_ZIGBEE_nonbeacon
  4723 ;;		_set_channel
  4724 ;;		_main
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text19
  4729  002A5A                     __ptext19:
  4730                           	opt stack 0
  4731  002A5A                     _RF_reset:
  4732                           	opt stack 18
  4733                           
  4734                           ;zigbee.c: 53: write_ZIGBEE_short(0x36,0x04);
  4735                           
  4736                           ;incstack = 0
  4737  002A5A  0E04               	movlw	4
  4738  002A5C  0100               	movlb	0	; () banked
  4739  002A5E  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4740  002A60  0E36               	movlw	54
  4741  002A62  ECB4  F015         	call	_write_ZIGBEE_short
  4742                           
  4743                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,(!0x04));
  4744  002A66  0E00               	movlw	0
  4745  002A68  0100               	movlb	0	; () banked
  4746  002A6A  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4747  002A6C  0E36               	movlw	54
  4748  002A6E  ECB4  F015         	call	_write_ZIGBEE_short
  4749                           
  4750                           ;zigbee.c: 55: Delay_ms(20);
  4751  002A72  0E00               	movlw	0
  4752  002A74  0100               	movlb	0	; () banked
  4753  002A76  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  4754  002A78  0E14               	movlw	20
  4755  002A7A  6FBD               	movwf	Delay_ms@time& (0+255),b
  4756  002A7C  EC4A  F016         	call	_Delay_ms	;wreg free
  4757  002A80  0012               	return		;funcret
  4758  002A82                     __end_of_RF_reset:
  4759                           	opt stack 0
  4760                           tblptru	equ	0xFF8
  4761                           tblptrh	equ	0xFF7
  4762                           tblptrl	equ	0xFF6
  4763                           tablat	equ	0xFF5
  4764                           prodh	equ	0xFF4
  4765                           prodl	equ	0xFF3
  4766                           intcon	equ	0xFF2
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           indf1	equ	0xFE7
  4770                           postdec1	equ	0xFE5
  4771                           fsr1h	equ	0xFE2
  4772                           fsr1l	equ	0xFE1
  4773                           indf2	equ	0xFDF
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           
  4778 ;; *************** function _set_RSSI_mode *****************
  4779 ;; Defined at:
  4780 ;;		line 149 in file "zigbee.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  RSSI_mode       1    wreg     unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  RSSI_mode       1   25[BANK0 ] unsigned char 
  4785 ;;  temp            1   26[BANK0 ] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;Total ram usage:        2 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:   10
  4802 ;; This function calls:
  4803 ;;		_write_ZIGBEE_short
  4804 ;; This function is called by:
  4805 ;;		_init_ZIGBEE_nonbeacon
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text20
  4810  002796                     __ptext20:
  4811                           	opt stack 0
  4812  002796                     _set_RSSI_mode:
  4813                           	opt stack 19
  4814                           
  4815                           ;incstack = 0
  4816                           ;set_RSSI_mode@RSSI_mode stored from wreg
  4817  002796  0100               	movlb	0	; () banked
  4818  002798  6FC1               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  4819                           
  4820                           ;zigbee.c: 151: unsigned char temp = 0;
  4821  00279A  0E00               	movlw	0
  4822  00279C  0100               	movlb	0	; () banked
  4823  00279E  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4824                           
  4825                           ;zigbee.c: 152: switch(RSSI_mode)
  4826  0027A0  D012               	goto	l434
  4827  0027A2                     
  4828                           ; BSR set to: 0
  4829                           ;zigbee.c: 155: {
  4830                           ;zigbee.c: 156: temp=0;
  4831                           
  4832                           ; BSR set to: 0
  4833  0027A2  0E00               	movlw	0
  4834  0027A4  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;zigbee.c: 157: temp = temp | 0x80;
  4838  0027A6  51C2               	movf	set_RSSI_mode@temp& (0+255),w,b
  4839  0027A8  0980               	iorlw	128
  4840  0027AA  6FC2               	movwf	set_RSSI_mode@temp& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;zigbee.c: 158: write_ZIGBEE_short(0x3E, temp);
  4844  0027AC  C0C2  F0BF         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  4845  0027B0  0E3E               	movlw	62
  4846  0027B2  ECB4  F015         	call	_write_ZIGBEE_short
  4847                           
  4848                           ;zigbee.c: 159: }
  4849                           ;zigbee.c: 160: break;
  4850  0027B6  0012               	return	
  4851  0027B8                     
  4852                           ;zigbee.c: 163: write_ZIGBEE_short(0x3E, 0x40);
  4853  0027B8  0E40               	movlw	64
  4854  0027BA  0100               	movlb	0	; () banked
  4855  0027BC  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4856  0027BE  0E3E               	movlw	62
  4857  0027C0  ECB4  F015         	call	_write_ZIGBEE_short
  4858                           
  4859                           ;zigbee.c: 165: }
  4860                           
  4861                           ;zigbee.c: 164: break;
  4862  0027C4  0012               	return	
  4863  0027C6                     l434:
  4864  0027C6  0100               	movlb	0	; () banked
  4865  0027C8  51C1               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  4866                           
  4867                           ; Switch size 1, requested type "space"
  4868                           ; Number of cases is 2, Range of values is 1 to 2
  4869                           ; switch strategies available:
  4870                           ; Name         Instructions Cycles
  4871                           ; simple_byte            7     4 (average)
  4872                           ;	Chosen strategy is simple_byte
  4873  0027CA  0A01               	xorlw	1	; case 1
  4874  0027CC  B4D8               	btfsc	status,2,c
  4875  0027CE  D7E9               	goto	l435
  4876  0027D0  0A03               	xorlw	3	; case 2
  4877  0027D2  A4D8               	btfss	status,2,c
  4878  0027D4  0012               	return	
  4879  0027D6  D7F0               	goto	l437
  4880  0027D8                     __end_of_set_RSSI_mode:
  4881                           	opt stack 0
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           prodh	equ	0xFF4
  4887                           prodl	equ	0xFF3
  4888                           intcon	equ	0xFF2
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           indf1	equ	0xFE7
  4892                           postdec1	equ	0xFE5
  4893                           fsr1h	equ	0xFE2
  4894                           fsr1l	equ	0xFE1
  4895                           indf2	equ	0xFDF
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _set_CCA_mode *****************
  4901 ;; Defined at:
  4902 ;;		line 102 in file "zigbee.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  CCA_mode        1    wreg     unsigned char 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  CCA_mode        1   25[BANK0 ] unsigned char 
  4907 ;;  temp            1   26[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;Total ram usage:        2 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:   10
  4924 ;; This function calls:
  4925 ;;		_write_ZIGBEE_short
  4926 ;; This function is called by:
  4927 ;;		_init_ZIGBEE_nonbeacon
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text21
  4932  0022A8                     __ptext21:
  4933                           	opt stack 0
  4934  0022A8                     _set_CCA_mode:
  4935                           	opt stack 19
  4936                           
  4937                           ;incstack = 0
  4938                           ;set_CCA_mode@CCA_mode stored from wreg
  4939  0022A8  0100               	movlb	0	; () banked
  4940  0022AA  6FC1               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  4941                           
  4942                           ;zigbee.c: 104: unsigned char temp = 0;
  4943  0022AC  0E00               	movlw	0
  4944  0022AE  0100               	movlb	0	; () banked
  4945  0022B0  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4946                           
  4947                           ;zigbee.c: 105: switch(CCA_mode)
  4948  0022B2  D051               	goto	l426
  4949  0022B4                     
  4950                           ; BSR set to: 0
  4951                           ;zigbee.c: 108: {
  4952                           ;zigbee.c: 109: temp=0;
  4953                           
  4954                           ; BSR set to: 0
  4955  0022B4  0E00               	movlw	0
  4956  0022B6  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;zigbee.c: 110: temp = temp | 0x80;
  4960  0022B8  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  4961  0022BA  0980               	iorlw	128
  4962  0022BC  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;zigbee.c: 111: temp = temp & 0xDF;
  4966  0022BE  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  4967  0022C0  0BDF               	andlw	223
  4968  0022C2  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;zigbee.c: 112: write_ZIGBEE_short(0x3A, temp);
  4972  0022C4  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  4973  0022C8  0E3A               	movlw	58
  4974  0022CA  ECB4  F015         	call	_write_ZIGBEE_short
  4975                           
  4976                           ;zigbee.c: 113: write_ZIGBEE_short(0x3F, 0x60);
  4977  0022CE  0E60               	movlw	96
  4978  0022D0  0100               	movlb	0	; () banked
  4979  0022D2  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4980  0022D4  0E3F               	movlw	63
  4981  0022D6  ECB4  F015         	call	_write_ZIGBEE_short
  4982                           
  4983                           ;zigbee.c: 114: }
  4984                           ;zigbee.c: 115: break;
  4985  0022DA  0012               	return	
  4986  0022DC                     
  4987                           ;zigbee.c: 118: {
  4988                           ;zigbee.c: 119: temp=0;
  4989  0022DC  0E00               	movlw	0
  4990  0022DE  0100               	movlb	0	; () banked
  4991  0022E0  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;zigbee.c: 120: temp = temp | 0x40;
  4995  0022E2  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  4996  0022E4  0940               	iorlw	64
  4997  0022E6  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;zigbee.c: 121: temp = temp & 0x7F;
  5001  0022E8  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5002  0022EA  0B7F               	andlw	127
  5003  0022EC  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;zigbee.c: 122: write_ZIGBEE_short(0x3A, temp);
  5007  0022EE  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5008  0022F2  0E3A               	movlw	58
  5009  0022F4  ECB4  F015         	call	_write_ZIGBEE_short
  5010                           
  5011                           ;zigbee.c: 124: temp=0;
  5012  0022F8  0E00               	movlw	0
  5013  0022FA  0100               	movlb	0	; () banked
  5014  0022FC  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;zigbee.c: 125: temp = temp | 0x38;
  5018  0022FE  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5019  002300  0938               	iorlw	56
  5020  002302  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;zigbee.c: 126: temp = temp & 0xFB;
  5024  002304  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5025  002306  0BFB               	andlw	251
  5026  002308  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5027                           
  5028                           ;zigbee.c: 127: write_ZIGBEE_short(0x3A, temp);
  5029  00230A  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5030  00230E  0E3A               	movlw	58
  5031  002310  ECB4  F015         	call	_write_ZIGBEE_short
  5032                           
  5033                           ;zigbee.c: 128: }
  5034                           ;zigbee.c: 129: break;
  5035  002314  0012               	return	
  5036  002316                     
  5037                           ;zigbee.c: 132: {
  5038                           ;zigbee.c: 133: temp=0;
  5039  002316  0E00               	movlw	0
  5040  002318  0100               	movlb	0	; () banked
  5041  00231A  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;zigbee.c: 134: temp = temp | 0xC0;
  5045  00231C  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5046  00231E  09C0               	iorlw	192
  5047  002320  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;zigbee.c: 135: write_ZIGBEE_short(0x3A, temp);
  5051  002322  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5052  002326  0E3A               	movlw	58
  5053  002328  ECB4  F015         	call	_write_ZIGBEE_short
  5054                           
  5055                           ;zigbee.c: 137: temp=0;
  5056  00232C  0E00               	movlw	0
  5057  00232E  0100               	movlb	0	; () banked
  5058  002330  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;zigbee.c: 138: temp = temp | 0x38;
  5062  002332  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5063  002334  0938               	iorlw	56
  5064  002336  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;zigbee.c: 139: temp = temp & 0xFB;
  5068  002338  51C2               	movf	set_CCA_mode@temp& (0+255),w,b
  5069  00233A  0BFB               	andlw	251
  5070  00233C  6FC2               	movwf	set_CCA_mode@temp& (0+255),b
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;zigbee.c: 140: write_ZIGBEE_short(0x3A, temp);
  5074  00233E  C0C2  F0BF         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5075  002342  0E3A               	movlw	58
  5076  002344  ECB4  F015         	call	_write_ZIGBEE_short
  5077                           
  5078                           ;zigbee.c: 142: write_ZIGBEE_short(0x3F, 0x60);
  5079  002348  0E60               	movlw	96
  5080  00234A  0100               	movlb	0	; () banked
  5081  00234C  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5082  00234E  0E3F               	movlw	63
  5083  002350  ECB4  F015         	call	_write_ZIGBEE_short
  5084                           
  5085                           ;zigbee.c: 145: }
  5086                           
  5087                           ;zigbee.c: 143: }
  5088                           ;zigbee.c: 144: break;
  5089  002354  0012               	return	
  5090  002356                     l426:
  5091  002356  0100               	movlb	0	; () banked
  5092  002358  51C1               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  5093                           
  5094                           ; Switch size 1, requested type "space"
  5095                           ; Number of cases is 3, Range of values is 1 to 3
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte           10     6 (average)
  5099                           ;	Chosen strategy is simple_byte
  5100  00235A  0A01               	xorlw	1	; case 1
  5101  00235C  B4D8               	btfsc	status,2,c
  5102  00235E  D7AA               	goto	l427
  5103  002360  0A03               	xorlw	3	; case 2
  5104  002362  B4D8               	btfsc	status,2,c
  5105  002364  D7BB               	goto	l429
  5106  002366  0A01               	xorlw	1	; case 3
  5107  002368  A4D8               	btfss	status,2,c
  5108  00236A  0012               	return	
  5109  00236C  D7D4               	goto	l430
  5110  00236E                     __end_of_set_CCA_mode:
  5111                           	opt stack 0
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           prodh	equ	0xFF4
  5117                           prodl	equ	0xFF3
  5118                           intcon	equ	0xFF2
  5119                           postinc0	equ	0xFEE
  5120                           wreg	equ	0xFE8
  5121                           indf1	equ	0xFE7
  5122                           postdec1	equ	0xFE5
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           fsr2h	equ	0xFDA
  5127                           fsr2l	equ	0xFD9
  5128                           status	equ	0xFD8
  5129                           
  5130 ;; *************** function _pin_wake *****************
  5131 ;; Defined at:
  5132 ;;		line 231 in file "zigbee.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    9
  5153 ;; This function calls:
  5154 ;;		_Delay_ms
  5155 ;; This function is called by:
  5156 ;;		_init_ZIGBEE_nonbeacon
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text22
  5162  002D60                     __ptext22:
  5163                           	opt stack 0
  5164  002D60                     _pin_wake:
  5165                           	opt stack 21
  5166                           
  5167                           ;zigbee.c: 232: PORTFbits.RF2=1;
  5168                           
  5169                           ;incstack = 0
  5170  002D60  8485               	bsf	3973,2,c	;volatile
  5171                           
  5172                           ;zigbee.c: 233: Delay_ms(10);
  5173  002D62  0E00               	movlw	0
  5174  002D64  0100               	movlb	0	; () banked
  5175  002D66  6FBE               	movwf	(Delay_ms@time+1)& (0+255),b
  5176  002D68  0E0A               	movlw	10
  5177  002D6A  6FBD               	movwf	Delay_ms@time& (0+255),b
  5178  002D6C  EC4A  F016         	call	_Delay_ms	;wreg free
  5179  002D70  0012               	return		;funcret
  5180  002D72                     __end_of_pin_wake:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           indf1	equ	0xFE7
  5192                           postdec1	equ	0xFE5
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           indf2	equ	0xFDF
  5196                           fsr2h	equ	0xFDA
  5197                           fsr2l	equ	0xFD9
  5198                           status	equ	0xFD8
  5199                           
  5200 ;; *************** function _Delay_ms *****************
  5201 ;; Defined at:
  5202 ;;		line 475 in file "zigbee.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  time            2   21[BANK0 ] unsigned int 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  y               2   23[BANK0 ] unsigned int 
  5207 ;;  x               2    0        unsigned int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;Total ram usage:        4 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    8
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_pin_reset
  5228 ;;		_RF_reset
  5229 ;;		_pin_wake
  5230 ;;		_write_TX_normal_FIFO
  5231 ;;		_main
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text23
  5236  002C94                     __ptext23:
  5237                           	opt stack 0
  5238  002C94                     _Delay_ms:
  5239                           	opt stack 21
  5240                           
  5241                           ;zigbee.c: 476: unsigned int x,y=0;
  5242                           
  5243                           ;incstack = 0
  5244  002C94  0E00               	movlw	0
  5245  002C96  0100               	movlb	0	; () banked
  5246  002C98  6FC0               	movwf	(Delay_ms@y+1)& (0+255),b
  5247  002C9A  0E00               	movlw	0
  5248  002C9C  6FBF               	movwf	Delay_ms@y& (0+255),b
  5249  002C9E                     
  5250                           ; BSR set to: 0
  5251                           
  5252                           ; BSR set to: 0
  5253                           
  5254                           ; BSR set to: 0
  5255  002C9E  4BBD               	infsnz	Delay_ms@time& (0+255),f,b
  5256  002CA0  2BBE               	incf	(Delay_ms@time+1)& (0+255),f,b
  5257  002CA2  0E10               	movlw	16
  5258  002CA4  5DBD               	subwf	Delay_ms@time& (0+255),w,b
  5259  002CA6  0E27               	movlw	39
  5260  002CA8  59BE               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  5261  002CAA  B0D8               	btfsc	status,0,c
  5262  002CAC  0012               	return	
  5263  002CAE  D7F7               	goto	l548
  5264  002CB0                     __end_of_Delay_ms:
  5265                           	opt stack 0
  5266                           tblptru	equ	0xFF8
  5267                           tblptrh	equ	0xFF7
  5268                           tblptrl	equ	0xFF6
  5269                           tablat	equ	0xFF5
  5270                           prodh	equ	0xFF4
  5271                           prodl	equ	0xFF3
  5272                           intcon	equ	0xFF2
  5273                           postinc0	equ	0xFEE
  5274                           wreg	equ	0xFE8
  5275                           indf1	equ	0xFE7
  5276                           postdec1	equ	0xFE5
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           indf2	equ	0xFDF
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _init_ZIGBEE_basic *****************
  5285 ;; Defined at:
  5286 ;;		line 85 in file "zigbee.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:   11
  5307 ;; This function calls:
  5308 ;;		_enable_PLL
  5309 ;;		_write_ZIGBEE_long
  5310 ;;		_write_ZIGBEE_short
  5311 ;; This function is called by:
  5312 ;;		_init_ZIGBEE_nonbeacon
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text24
  5317  00241E                     __ptext24:
  5318                           	opt stack 0
  5319  00241E                     _init_ZIGBEE_basic:
  5320                           	opt stack 18
  5321                           
  5322                           ;zigbee.c: 86: write_ZIGBEE_short(0x18, 0x98);
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;incstack = 0
  5326  00241E  0E98               	movlw	152
  5327  002420  0100               	movlb	0	; () banked
  5328  002422  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5329  002424  0E18               	movlw	24
  5330  002426  ECB4  F015         	call	_write_ZIGBEE_short
  5331                           
  5332                           ;zigbee.c: 87: write_ZIGBEE_short(0x2E, 0x95);
  5333  00242A  0E95               	movlw	149
  5334  00242C  0100               	movlb	0	; () banked
  5335  00242E  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5336  002430  0E2E               	movlw	46
  5337  002432  ECB4  F015         	call	_write_ZIGBEE_short
  5338                           
  5339                           ;zigbee.c: 88: write_ZIGBEE_long(0x201, 0x01);
  5340  002436  0E02               	movlw	2
  5341  002438  0100               	movlb	0	; () banked
  5342  00243A  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5343  00243C  0E01               	movlw	1
  5344  00243E  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5345  002440  0E01               	movlw	1
  5346  002442  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5347  002444  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5348                           
  5349                           ;zigbee.c: 89: enable_PLL();
  5350  002448  EC93  F016         	call	_enable_PLL	;wreg free
  5351                           
  5352                           ;zigbee.c: 90: write_ZIGBEE_long(0x206, 0x90);
  5353  00244C  0E02               	movlw	2
  5354  00244E  0100               	movlb	0	; () banked
  5355  002450  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5356  002452  0E06               	movlw	6
  5357  002454  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5358  002456  0E90               	movlw	144
  5359  002458  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5360  00245A  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5361                           
  5362                           ;zigbee.c: 91: write_ZIGBEE_long(0x207, 0x80);
  5363  00245E  0E02               	movlw	2
  5364  002460  0100               	movlb	0	; () banked
  5365  002462  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5366  002464  0E07               	movlw	7
  5367  002466  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5368  002468  0E80               	movlw	128
  5369  00246A  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5370  00246C  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5371                           
  5372                           ;zigbee.c: 92: write_ZIGBEE_long(0x208, 0x10);
  5373  002470  0E02               	movlw	2
  5374  002472  0100               	movlb	0	; () banked
  5375  002474  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5376  002476  0E08               	movlw	8
  5377  002478  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5378  00247A  0E10               	movlw	16
  5379  00247C  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5380  00247E  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5381                           
  5382                           ;zigbee.c: 93: write_ZIGBEE_short(0x211,0X02);
  5383  002482  0E02               	movlw	2
  5384  002484  0100               	movlb	0	; () banked
  5385  002486  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5386  002488  0E11               	movlw	17
  5387  00248A  ECB4  F015         	call	_write_ZIGBEE_short
  5388                           
  5389                           ;zigbee.c: 94: write_ZIGBEE_long(0x220, 0x21);
  5390  00248E  0E02               	movlw	2
  5391  002490  0100               	movlb	0	; () banked
  5392  002492  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5393  002494  0E20               	movlw	32
  5394  002496  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5395  002498  0E21               	movlw	33
  5396  00249A  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5397  00249C  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5398                           
  5399                           ;zigbee.c: 95: write_ZIGBEE_long(0x22F, 0x0F);
  5400  0024A0  0E02               	movlw	2
  5401  0024A2  0100               	movlb	0	; () banked
  5402  0024A4  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5403  0024A6  0E2F               	movlw	47
  5404  0024A8  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5405  0024AA  0E0F               	movlw	15
  5406  0024AC  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5407  0024AE  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5408  0024B2  0012               	return		;funcret
  5409  0024B4                     __end_of_init_ZIGBEE_basic:
  5410                           	opt stack 0
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           prodh	equ	0xFF4
  5416                           prodl	equ	0xFF3
  5417                           intcon	equ	0xFF2
  5418                           postinc0	equ	0xFEE
  5419                           wreg	equ	0xFE8
  5420                           indf1	equ	0xFE7
  5421                           postdec1	equ	0xFE5
  5422                           fsr1h	equ	0xFE2
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _enable_PLL *****************
  5430 ;; Defined at:
  5431 ;;		line 99 in file "zigbee.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:   10
  5452 ;; This function calls:
  5453 ;;		_write_ZIGBEE_long
  5454 ;; This function is called by:
  5455 ;;		_init_ZIGBEE_basic
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text25
  5460  002D26                     __ptext25:
  5461                           	opt stack 0
  5462  002D26                     _enable_PLL:
  5463                           	opt stack 18
  5464                           
  5465                           ;zigbee.c: 100: write_ZIGBEE_long(0x202, 0x80);
  5466                           
  5467                           ;incstack = 0
  5468  002D26  0E02               	movlw	2
  5469  002D28  0100               	movlb	0	; () banked
  5470  002D2A  6FC0               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5471  002D2C  0E02               	movlw	2
  5472  002D2E  6FBF               	movwf	write_ZIGBEE_long@address& (0+255),b
  5473  002D30  0E80               	movlw	128
  5474  002D32  6FC1               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5475  002D34  EC12  F013         	call	_write_ZIGBEE_long	;wreg free
  5476  002D38  0012               	return		;funcret
  5477  002D3A                     __end_of_enable_PLL:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           postdec1	equ	0xFE5
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           indf2	equ	0xFDF
  5493                           fsr2h	equ	0xFDA
  5494                           fsr2l	equ	0xFD9
  5495                           status	equ	0xFD8
  5496                           
  5497 ;; *************** function _write_ZIGBEE_long *****************
  5498 ;; Defined at:
  5499 ;;		line 414 in file "zigbee.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  address         2   23[BANK0 ] unsigned int 
  5502 ;;  data_r          1   25[BANK0 ] unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  address_low     1   29[BANK0 ] unsigned char 
  5505 ;;  address_high    1   28[BANK0 ] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5515 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;Total ram usage:        7 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    9
  5522 ;; This function calls:
  5523 ;;		_SPI_Write
  5524 ;; This function is called by:
  5525 ;;		_init_ZIGBEE_basic
  5526 ;;		_enable_PLL
  5527 ;;		_set_channel
  5528 ;;		_set_TX_power
  5529 ;;		_write_TX_normal_FIFO
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text26
  5534  002624                     __ptext26:
  5535                           	opt stack 0
  5536  002624                     _write_ZIGBEE_long:
  5537                           	opt stack 20
  5538                           
  5539                           ;zigbee.c: 415: unsigned char address_high = 0, address_low = 0;
  5540                           
  5541                           ;incstack = 0
  5542  002624  0E00               	movlw	0
  5543  002626  0100               	movlb	0	; () banked
  5544  002628  6FC4               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5545  00262A  0E00               	movlw	0
  5546  00262C  6FC5               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;zigbee.c: 417: PORTCbits.RC0=0;
  5550  00262E  9082               	bcf	3970,0,c	;volatile
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;zigbee.c: 418: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  5554  002630  C0BF  F0C2         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  5555  002634  C0C0  F0C3         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  5556  002638  90D8               	bcf	status,0,c
  5557  00263A  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5558  00263C  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5559  00263E  90D8               	bcf	status,0,c
  5560  002640  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5561  002642  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5562  002644  90D8               	bcf	status,0,c
  5563  002646  33C3               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5564  002648  33C2               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5565  00264A  51C2               	movf	??_write_ZIGBEE_long& (0+255),w,b
  5566  00264C  0B7F               	andlw	127
  5567  00264E  0980               	iorlw	128
  5568  002650  6FC4               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;zigbee.c: 419: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  5572  002652  39BF               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  5573  002654  46E8               	rlncf	wreg,f,c
  5574  002656  0BE0               	andlw	224
  5575  002658  0BE0               	andlw	224
  5576  00265A  0910               	iorlw	16
  5577  00265C  6FC5               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;zigbee.c: 420: SPI_Write(address_high);
  5581  00265E  51C4               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  5582  002660  ECB9  F016         	call	_SPI_Write
  5583                           
  5584                           ;zigbee.c: 421: SPI_Write(address_low);
  5585  002664  0100               	movlb	0	; () banked
  5586  002666  51C5               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  5587  002668  ECB9  F016         	call	_SPI_Write
  5588                           
  5589                           ;zigbee.c: 422: SPI_Write(data_r);
  5590  00266C  0100               	movlb	0	; () banked
  5591  00266E  51C1               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  5592  002670  ECB9  F016         	call	_SPI_Write
  5593                           
  5594                           ;zigbee.c: 423: PORTCbits.RC0=1;
  5595  002674  8082               	bsf	3970,0,c	;volatile
  5596  002676  0012               	return		;funcret
  5597  002678                     __end_of_write_ZIGBEE_long:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postdec1	equ	0xFE5
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8
  5616                           
  5617 ;; *************** function _enable_interrupt *****************
  5618 ;; Defined at:
  5619 ;;		line 167 in file "zigbee.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:   10
  5640 ;; This function calls:
  5641 ;;		_write_ZIGBEE_short
  5642 ;; This function is called by:
  5643 ;;		_init_ZIGBEE_nonbeacon
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text27
  5648  002DC6                     __ptext27:
  5649                           	opt stack 0
  5650  002DC6                     _enable_interrupt:
  5651                           	opt stack 19
  5652                           
  5653                           ;zigbee.c: 168: write_ZIGBEE_short(0x32, 0xF7);
  5654                           
  5655                           ;incstack = 0
  5656  002DC6  0EF7               	movlw	247
  5657  002DC8  0100               	movlb	0	; () banked
  5658  002DCA  6FBF               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5659  002DCC  0E32               	movlw	50
  5660  002DCE  ECB4  F015         	call	_write_ZIGBEE_short
  5661  002DD2  0012               	return		;funcret
  5662  002DD4                     __end_of_enable_interrupt:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           postdec1	equ	0xFE5
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           fsr2h	equ	0xFDA
  5679                           fsr2l	equ	0xFD9
  5680                           status	equ	0xFD8
  5681                           
  5682 ;; *************** function _write_ZIGBEE_short *****************
  5683 ;; Defined at:
  5684 ;;		line 396 in file "zigbee.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  address         1    wreg     unsigned char 
  5687 ;;  data_r          1   23[BANK0 ] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  address         1   24[BANK0 ] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5699 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;Total ram usage:        2 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    9
  5706 ;; This function calls:
  5707 ;;		_SPI_Write
  5708 ;; This function is called by:
  5709 ;;		_RF_reset
  5710 ;;		_set_WAKE_from_pin
  5711 ;;		_set_long_address
  5712 ;;		_set_short_address
  5713 ;;		_set_PAN_ID
  5714 ;;		_init_ZIGBEE_basic
  5715 ;;		_set_CCA_mode
  5716 ;;		_set_RSSI_mode
  5717 ;;		_enable_interrupt
  5718 ;;		_nonbeacon_PAN_coordinator_device
  5719 ;;		_set_frame_format_filter
  5720 ;;		_set_reception_mode
  5721 ;;		_set_not_ACK
  5722 ;;		_set_not_encrypt
  5723 ;;		_start_transmit
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text28
  5728  002B68                     __ptext28:
  5729                           	opt stack 0
  5730  002B68                     _write_ZIGBEE_short:
  5731                           	opt stack 19
  5732                           
  5733                           ;incstack = 0
  5734                           ;write_ZIGBEE_short@address stored from wreg
  5735  002B68  0100               	movlb	0	; () banked
  5736  002B6A  6FC0               	movwf	write_ZIGBEE_short@address& (0+255),b
  5737                           
  5738                           ;zigbee.c: 397: PORTCbits.RC0=0;
  5739  002B6C  9082               	bcf	3970,0,c	;volatile
  5740                           
  5741                           ;zigbee.c: 398: address = ((address << 1) & 0b01111111) | 0x01;
  5742  002B6E  0100               	movlb	0	; () banked
  5743  002B70  51C0               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5744  002B72  25C0               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  5745  002B74  0B7F               	andlw	127
  5746  002B76  0901               	iorlw	1
  5747  002B78  6FC0               	movwf	write_ZIGBEE_short@address& (0+255),b
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;zigbee.c: 399: SPI_Write(address);
  5751  002B7A  51C0               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5752  002B7C  ECB9  F016         	call	_SPI_Write
  5753                           
  5754                           ;zigbee.c: 400: SPI_Write(data_r);
  5755  002B80  0100               	movlb	0	; () banked
  5756  002B82  51BF               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  5757  002B84  ECB9  F016         	call	_SPI_Write
  5758                           
  5759                           ;zigbee.c: 401: PORTCbits.RC0=1;
  5760  002B88  8082               	bsf	3970,0,c	;volatile
  5761  002B8A  0012               	return		;funcret
  5762  002B8C                     __end_of_write_ZIGBEE_short:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           intcon	equ	0xFF2
  5771                           postinc0	equ	0xFEE
  5772                           wreg	equ	0xFE8
  5773                           indf1	equ	0xFE7
  5774                           postdec1	equ	0xFE5
  5775                           fsr1h	equ	0xFE2
  5776                           fsr1l	equ	0xFE1
  5777                           indf2	equ	0xFDF
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _SPI_Write *****************
  5783 ;; Defined at:
  5784 ;;		line 457 in file "zigbee.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  command         1    wreg     unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  command         1   22[BANK0 ] unsigned char 
  5789 ;;  response        1   21[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        2 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    8
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_write_ZIGBEE_short
  5810 ;;		_read_ZIGBEE_short
  5811 ;;		_write_ZIGBEE_long
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text29
  5816  002D72                     __ptext29:
  5817                           	opt stack 0
  5818  002D72                     _SPI_Write:
  5819                           	opt stack 20
  5820                           
  5821                           ;incstack = 0
  5822                           ;SPI_Write@command stored from wreg
  5823  002D72  0100               	movlb	0	; () banked
  5824  002D74  6FBE               	movwf	SPI_Write@command& (0+255),b
  5825                           
  5826                           ;zigbee.c: 458: unsigned char response;
  5827                           ;zigbee.c: 459: SSP1BUF = command;
  5828  002D76  C0BE  FFC9         	movff	SPI_Write@command,4041	;volatile
  5829  002D7A  A0C7               	btfss	4039,0,c	;volatile
  5830  002D7C  D7FE               	goto	l530
  5831                           
  5832                           ;zigbee.c: 461: response = SSP1BUF;
  5833  002D7E  CFC9 F0BD          	movff	4041,SPI_Write@response	;volatile
  5834  002D82  0012               	return		;funcret
  5835  002D84                     __end_of_SPI_Write:
  5836                           	opt stack 0
  5837                           tblptru	equ	0xFF8
  5838                           tblptrh	equ	0xFF7
  5839                           tblptrl	equ	0xFF6
  5840                           tablat	equ	0xFF5
  5841                           prodh	equ	0xFF4
  5842                           prodl	equ	0xFF3
  5843                           intcon	equ	0xFF2
  5844                           postinc0	equ	0xFEE
  5845                           wreg	equ	0xFE8
  5846                           indf1	equ	0xFE7
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function ___lwtoft *****************
  5856 ;; Defined at:
  5857 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  c               2   29[BANK0 ] unsigned int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  3   29[BANK0 ] float 
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;Total ram usage:        3 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    9
  5878 ;; This function calls:
  5879 ;;		___ftpack
  5880 ;; This function is called by:
  5881 ;;		_main
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text30
  5886  002AD2                     __ptext30:
  5887                           	opt stack 0
  5888  002AD2                     ___lwtoft:
  5889                           	opt stack 21
  5890                           
  5891                           ;incstack = 0
  5892  002AD2  C0C5  F0BD         	movff	___lwtoft@c,___ftpack@arg
  5893  002AD6  C0C6  F0BE         	movff	___lwtoft@c+1,___ftpack@arg+1
  5894  002ADA  0100               	movlb	0	; () banked
  5895  002ADC  6BBF               	clrf	(___ftpack@arg+2)& (0+255),b
  5896  002ADE  0E8E               	movlw	142
  5897  002AE0  6FC0               	movwf	___ftpack@exp& (0+255),b
  5898  002AE2  0E00               	movlw	0
  5899  002AE4  6FC1               	movwf	___ftpack@sign& (0+255),b
  5900  002AE6  ECB7  F011         	call	___ftpack	;wreg free
  5901  002AEA  C0BD  F0C5         	movff	?___ftpack,?___lwtoft
  5902  002AEE  C0BE  F0C6         	movff	?___ftpack+1,?___lwtoft+1
  5903  002AF2  C0BF  F0C7         	movff	?___ftpack+2,?___lwtoft+2
  5904  002AF6  0012               	return	
  5905  002AF8                     __end_of___lwtoft:
  5906                           	opt stack 0
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           prodh	equ	0xFF4
  5912                           prodl	equ	0xFF3
  5913                           intcon	equ	0xFF2
  5914                           postinc0	equ	0xFEE
  5915                           wreg	equ	0xFE8
  5916                           indf1	equ	0xFE7
  5917                           postdec1	equ	0xFE5
  5918                           fsr1h	equ	0xFE2
  5919                           fsr1l	equ	0xFE1
  5920                           indf2	equ	0xFDF
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function ___fttol *****************
  5926 ;; Defined at:
  5927 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  f1              3   21[BANK1 ] float 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  lval            4   31[BANK1 ] unsigned long 
  5932 ;;  exp1            1   35[BANK1 ] unsigned char 
  5933 ;;  sign1           1   30[BANK1 ] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  4   21[BANK1 ] long 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5943 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;Total ram usage:       15 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    8
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_main
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text31
  5958  001E24                     __ptext31:
  5959                           	opt stack 0
  5960  001E24                     ___fttol:
  5961                           	opt stack 22
  5962                           
  5963                           ;incstack = 0
  5964  001E24  C142  F144         	movff	___fttol@f1+2,??___fttol
  5965  001E28  0101               	movlb	1	; () banked
  5966  001E2A  6B45               	clrf	(??___fttol+1)& (0+255),b
  5967  001E2C  6B46               	clrf	(??___fttol+2)& (0+255),b
  5968  001E2E  3541               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5969  001E30  3744               	rlcf	??___fttol& (0+255),f,b
  5970  001E32  E301               	bnc	u4851
  5971  001E34  8145               	bsf	(??___fttol+1)& (0+255),0,b
  5972  001E36                     u4851:
  5973  001E36  5144               	movf	??___fttol& (0+255),w,b
  5974  001E38  6F4E               	movwf	___fttol@exp1& (0+255),b
  5975  001E3A  514E               	movf	___fttol@exp1& (0+255),w,b
  5976  001E3C  A4D8               	btfss	status,2,c
  5977  001E3E  D009               	goto	l1239
  5978                           
  5979                           ; BSR set to: 1
  5980  001E40  0E00               	movlw	0
  5981  001E42  6F40               	movwf	?___fttol& (0+255),b
  5982  001E44  0E00               	movlw	0
  5983  001E46  6F41               	movwf	(?___fttol+1)& (0+255),b
  5984  001E48  0E00               	movlw	0
  5985  001E4A  6F42               	movwf	(?___fttol+2)& (0+255),b
  5986  001E4C  0E00               	movlw	0
  5987  001E4E  6F43               	movwf	(?___fttol+3)& (0+255),b
  5988                           
  5989                           ; BSR set to: 1
  5990  001E50  0012               	return	
  5991  001E52                     l1239:
  5992                           
  5993                           ; BSR set to: 1
  5994                           
  5995                           ; BSR set to: 1
  5996  001E52  0E17               	movlw	23
  5997  001E54  6F44               	movwf	??___fttol& (0+255),b
  5998  001E56  C140  F145         	movff	___fttol@f1,??___fttol+1
  5999  001E5A  C141  F146         	movff	___fttol@f1+1,??___fttol+2
  6000  001E5E  C142  F147         	movff	___fttol@f1+2,??___fttol+3
  6001  001E62  2944               	incf	??___fttol& (0+255),w,b
  6002  001E64  6F48               	movwf	(??___fttol+4)& (0+255),b
  6003  001E66  D004               	goto	u4870
  6004  001E68                     u4875:
  6005  001E68  90D8               	bcf	status,0,c
  6006  001E6A  3347               	rrcf	(??___fttol+3)& (0+255),f,b
  6007  001E6C  3346               	rrcf	(??___fttol+2)& (0+255),f,b
  6008  001E6E  3345               	rrcf	(??___fttol+1)& (0+255),f,b
  6009  001E70                     u4870:
  6010  001E70  2F48               	decfsz	(??___fttol+4)& (0+255),f,b
  6011  001E72  D7FA               	goto	u4875
  6012  001E74  0101               	movlb	1	; () banked
  6013  001E76  5145               	movf	(??___fttol+1)& (0+255),w,b
  6014  001E78  6F49               	movwf	___fttol@sign1& (0+255),b
  6015                           
  6016                           ; BSR set to: 1
  6017  001E7A  8F41               	bsf	(___fttol@f1+1)& (0+255),7,b
  6018                           
  6019                           ; BSR set to: 1
  6020  001E7C  0EFF               	movlw	255
  6021  001E7E  1740               	andwf	___fttol@f1& (0+255),f,b
  6022  001E80  0EFF               	movlw	255
  6023  001E82  1741               	andwf	(___fttol@f1+1)& (0+255),f,b
  6024  001E84  0E00               	movlw	0
  6025  001E86  1742               	andwf	(___fttol@f1+2)& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 1
  6028  001E88  5140               	movf	___fttol@f1& (0+255),w,b
  6029  001E8A  6F4A               	movwf	___fttol@lval& (0+255),b
  6030  001E8C  5141               	movf	(___fttol@f1+1)& (0+255),w,b
  6031  001E8E  6F4B               	movwf	(___fttol@lval+1)& (0+255),b
  6032  001E90  5142               	movf	(___fttol@f1+2)& (0+255),w,b
  6033  001E92  6F4C               	movwf	(___fttol@lval+2)& (0+255),b
  6034  001E94  6B4D               	clrf	(___fttol@lval+3)& (0+255),b
  6035                           
  6036                           ; BSR set to: 1
  6037  001E96  0E8E               	movlw	142
  6038  001E98  5F4E               	subwf	___fttol@exp1& (0+255),f,b
  6039                           
  6040                           ; BSR set to: 1
  6041  001E9A  AF4E               	btfss	___fttol@exp1& (0+255),7,b
  6042  001E9C  D016               	goto	l1241
  6043                           
  6044                           ; BSR set to: 1
  6045  001E9E  514E               	movf	___fttol@exp1& (0+255),w,b
  6046  001EA0  0A80               	xorlw	128
  6047  001EA2  0F8F               	addlw	143
  6048  001EA4  B0D8               	btfsc	status,0,c
  6049  001EA6  D009               	goto	l1242
  6050                           
  6051                           ; BSR set to: 1
  6052  001EA8  0E00               	movlw	0
  6053  001EAA  6F40               	movwf	?___fttol& (0+255),b
  6054  001EAC  0E00               	movlw	0
  6055  001EAE  6F41               	movwf	(?___fttol+1)& (0+255),b
  6056  001EB0  0E00               	movlw	0
  6057  001EB2  6F42               	movwf	(?___fttol+2)& (0+255),b
  6058  001EB4  0E00               	movlw	0
  6059  001EB6  6F43               	movwf	(?___fttol+3)& (0+255),b
  6060                           
  6061                           ; BSR set to: 1
  6062  001EB8  0012               	return	
  6063  001EBA                     l1242:
  6064                           
  6065                           ; BSR set to: 1
  6066                           
  6067                           ; BSR set to: 1
  6068                           
  6069                           ; BSR set to: 1
  6070  001EBA  90D8               	bcf	status,0,c
  6071  001EBC  334D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6072  001EBE  334C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6073  001EC0  334B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6074  001EC2  334A               	rrcf	___fttol@lval& (0+255),f,b
  6075                           
  6076                           ; BSR set to: 1
  6077  001EC4  3F4E               	incfsz	___fttol@exp1& (0+255),f,b
  6078  001EC6  D7F9               	goto	l1242
  6079                           
  6080                           ; BSR set to: 1
  6081  001EC8  D015               	goto	u4910
  6082  001ECA                     l1241:
  6083                           
  6084                           ; BSR set to: 1
  6085                           
  6086                           ; BSR set to: 1
  6087  001ECA  0E17               	movlw	23
  6088  001ECC  654E               	cpfsgt	___fttol@exp1& (0+255),b
  6089  001ECE  D00F               	goto	l1247
  6090                           
  6091                           ; BSR set to: 1
  6092  001ED0  0E00               	movlw	0
  6093  001ED2  6F40               	movwf	?___fttol& (0+255),b
  6094  001ED4  0E00               	movlw	0
  6095  001ED6  6F41               	movwf	(?___fttol+1)& (0+255),b
  6096  001ED8  0E00               	movlw	0
  6097  001EDA  6F42               	movwf	(?___fttol+2)& (0+255),b
  6098  001EDC  0E00               	movlw	0
  6099  001EDE  6F43               	movwf	(?___fttol+3)& (0+255),b
  6100                           
  6101                           ; BSR set to: 1
  6102  001EE0  0012               	return	
  6103  001EE2                     
  6104                           ; BSR set to: 1
  6105                           
  6106                           ; BSR set to: 1
  6107  001EE2  90D8               	bcf	status,0,c
  6108  001EE4  374A               	rlcf	___fttol@lval& (0+255),f,b
  6109  001EE6  374B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6110  001EE8  374C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6111  001EEA  374D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6112  001EEC  074E               	decf	___fttol@exp1& (0+255),f,b
  6113  001EEE                     l1247:
  6114                           
  6115                           ; BSR set to: 1
  6116                           
  6117                           ; BSR set to: 1
  6118  001EEE  514E               	movf	___fttol@exp1& (0+255),w,b
  6119  001EF0  A4D8               	btfss	status,2,c
  6120  001EF2  D7F7               	goto	l1248
  6121  001EF4                     u4910:
  6122                           
  6123                           ; BSR set to: 1
  6124                           
  6125                           ; BSR set to: 1
  6126                           
  6127                           ; BSR set to: 1
  6128  001EF4  5149               	movf	___fttol@sign1& (0+255),w,b
  6129  001EF6  B4D8               	btfsc	status,2,c
  6130  001EF8  D008               	goto	l1250
  6131                           
  6132                           ; BSR set to: 1
  6133  001EFA  1F4D               	comf	(___fttol@lval+3)& (0+255),f,b
  6134  001EFC  1F4C               	comf	(___fttol@lval+2)& (0+255),f,b
  6135  001EFE  1F4B               	comf	(___fttol@lval+1)& (0+255),f,b
  6136  001F00  6D4A               	negf	___fttol@lval& (0+255),b
  6137  001F02  0E00               	movlw	0
  6138  001F04  234B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6139  001F06  234C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6140  001F08  234D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6141  001F0A                     l1250:
  6142                           
  6143                           ; BSR set to: 1
  6144                           
  6145                           ; BSR set to: 1
  6146  001F0A  C14A  F140         	movff	___fttol@lval,?___fttol
  6147  001F0E  C14B  F141         	movff	___fttol@lval+1,?___fttol+1
  6148  001F12  C14C  F142         	movff	___fttol@lval+2,?___fttol+2
  6149  001F16  C14D  F143         	movff	___fttol@lval+3,?___fttol+3
  6150  001F1A  0012               	return	
  6151  001F1C                     __end_of___fttol:
  6152                           	opt stack 0
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           intcon	equ	0xFF2
  6160                           postinc0	equ	0xFEE
  6161                           wreg	equ	0xFE8
  6162                           indf1	equ	0xFE7
  6163                           postdec1	equ	0xFE5
  6164                           fsr1h	equ	0xFE2
  6165                           fsr1l	equ	0xFE1
  6166                           indf2	equ	0xFDF
  6167                           fsr2h	equ	0xFDA
  6168                           fsr2l	equ	0xFD9
  6169                           status	equ	0xFD8
  6170                           
  6171 ;; *************** function ___ftneg *****************
  6172 ;; Defined at:
  6173 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  f1              3   47[BANK0 ] float 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  3   47[BANK0 ] float 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        3 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    8
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_main
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text32
  6202  002AF8                     __ptext32:
  6203                           	opt stack 0
  6204  002AF8                     ___ftneg:
  6205                           	opt stack 22
  6206                           
  6207                           ; BSR set to: 1
  6208                           ;incstack = 0
  6209  002AF8  0100               	movlb	0	; () banked
  6210  002AFA  51D7               	movf	___ftneg@f1& (0+255),w,b
  6211  002AFC  11D8               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6212  002AFE  11D9               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6213  002B00  B4D8               	btfsc	status,2,c
  6214  002B02  D006               	goto	l1229
  6215                           
  6216                           ; BSR set to: 0
  6217  002B04  0E00               	movlw	0
  6218  002B06  1BD7               	xorwf	___ftneg@f1& (0+255),f,b
  6219  002B08  0E00               	movlw	0
  6220  002B0A  1BD8               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6221  002B0C  0E80               	movlw	128
  6222  002B0E  1BD9               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6223  002B10                     l1229:
  6224                           
  6225                           ; BSR set to: 0
  6226  002B10  C0D7  F0D7         	movff	___ftneg@f1,?___ftneg
  6227  002B14  C0D8  F0D8         	movff	___ftneg@f1+1,?___ftneg+1
  6228  002B18  C0D9  F0D9         	movff	___ftneg@f1+2,?___ftneg+2
  6229                           
  6230                           ; BSR set to: 0
  6231  002B1C  0012               	return		;funcret
  6232  002B1E                     __end_of___ftneg:
  6233                           	opt stack 0
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           intcon	equ	0xFF2
  6241                           postinc0	equ	0xFEE
  6242                           wreg	equ	0xFE8
  6243                           indf1	equ	0xFE7
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           indf2	equ	0xFDF
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function ___ftmul *****************
  6253 ;; Defined at:
  6254 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  f1              3   32[BANK0 ] float 
  6257 ;;  f2              3   35[BANK0 ] float 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
  6260 ;;  sign            1   46[BANK0 ] unsigned char 
  6261 ;;  cntr            1   45[BANK0 ] unsigned char 
  6262 ;;  exp             1   41[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  3   32[BANK0 ] float 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;Total ram usage:       15 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    9
  6279 ;; This function calls:
  6280 ;;		___ftpack
  6281 ;; This function is called by:
  6282 ;;		_main
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text33
  6287  001F1C                     __ptext33:
  6288                           	opt stack 0
  6289  001F1C                     ___ftmul:
  6290                           	opt stack 21
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;incstack = 0
  6294  001F1C  C0CA  F0CE         	movff	___ftmul@f1+2,??___ftmul
  6295  001F20  0100               	movlb	0	; () banked
  6296  001F22  6BCF               	clrf	(??___ftmul+1)& (0+255),b
  6297  001F24  6BD0               	clrf	(??___ftmul+2)& (0+255),b
  6298  001F26  35C9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6299  001F28  37CE               	rlcf	??___ftmul& (0+255),f,b
  6300  001F2A  E301               	bnc	u3531
  6301  001F2C  81CF               	bsf	(??___ftmul+1)& (0+255),0,b
  6302  001F2E                     u3531:
  6303  001F2E  51CE               	movf	??___ftmul& (0+255),w,b
  6304  001F30  6FD1               	movwf	___ftmul@exp& (0+255),b
  6305  001F32  51D1               	movf	___ftmul@exp& (0+255),w,b
  6306  001F34  A4D8               	btfss	status,2,c
  6307  001F36  D007               	goto	l1218
  6308                           
  6309                           ; BSR set to: 0
  6310  001F38  0E00               	movlw	0
  6311  001F3A  6FC8               	movwf	?___ftmul& (0+255),b
  6312  001F3C  0E00               	movlw	0
  6313  001F3E  6FC9               	movwf	(?___ftmul+1)& (0+255),b
  6314  001F40  0E00               	movlw	0
  6315  001F42  6FCA               	movwf	(?___ftmul+2)& (0+255),b
  6316                           
  6317                           ; BSR set to: 0
  6318  001F44  0012               	return	
  6319  001F46                     l1218:
  6320                           
  6321                           ; BSR set to: 0
  6322                           
  6323                           ; BSR set to: 0
  6324  001F46  C0CD  F0CE         	movff	___ftmul@f2+2,??___ftmul
  6325  001F4A  6BCF               	clrf	(??___ftmul+1)& (0+255),b
  6326  001F4C  6BD0               	clrf	(??___ftmul+2)& (0+255),b
  6327  001F4E  35CC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6328  001F50  37CE               	rlcf	??___ftmul& (0+255),f,b
  6329  001F52  E301               	bnc	u3551
  6330  001F54  81CF               	bsf	(??___ftmul+1)& (0+255),0,b
  6331  001F56                     u3551:
  6332  001F56  51CE               	movf	??___ftmul& (0+255),w,b
  6333  001F58  6FD6               	movwf	___ftmul@sign& (0+255),b
  6334  001F5A  51D6               	movf	___ftmul@sign& (0+255),w,b
  6335  001F5C  A4D8               	btfss	status,2,c
  6336  001F5E  D007               	goto	l1220
  6337                           
  6338                           ; BSR set to: 0
  6339  001F60  0E00               	movlw	0
  6340  001F62  6FC8               	movwf	?___ftmul& (0+255),b
  6341  001F64  0E00               	movlw	0
  6342  001F66  6FC9               	movwf	(?___ftmul+1)& (0+255),b
  6343  001F68  0E00               	movlw	0
  6344  001F6A  6FCA               	movwf	(?___ftmul+2)& (0+255),b
  6345                           
  6346                           ; BSR set to: 0
  6347  001F6C  0012               	return	
  6348  001F6E                     l1220:
  6349                           
  6350                           ; BSR set to: 0
  6351                           
  6352                           ; BSR set to: 0
  6353  001F6E  51D6               	movf	___ftmul@sign& (0+255),w,b
  6354  001F70  0F7B               	addlw	123
  6355  001F72  27D1               	addwf	___ftmul@exp& (0+255),f,b
  6356                           
  6357                           ; BSR set to: 0
  6358  001F74  C0CA  F0D6         	movff	___ftmul@f1+2,___ftmul@sign
  6359  001F78  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6360  001F7A  1BD6               	xorwf	___ftmul@sign& (0+255),f,b
  6361  001F7C  0E80               	movlw	128
  6362  001F7E  17D6               	andwf	___ftmul@sign& (0+255),f,b
  6363                           
  6364                           ; BSR set to: 0
  6365  001F80  8FC9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6366                           
  6367                           ; BSR set to: 0
  6368  001F82  8FCC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6369                           
  6370                           ; BSR set to: 0
  6371  001F84  0EFF               	movlw	255
  6372  001F86  17CB               	andwf	___ftmul@f2& (0+255),f,b
  6373  001F88  0EFF               	movlw	255
  6374  001F8A  17CC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6375  001F8C  0E00               	movlw	0
  6376  001F8E  17CD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6377                           
  6378                           ; BSR set to: 0
  6379  001F90  0E00               	movlw	0
  6380  001F92  6FD2               	movwf	___ftmul@f3_as_product& (0+255),b
  6381  001F94  0E00               	movlw	0
  6382  001F96  6FD3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6383  001F98  0E00               	movlw	0
  6384  001F9A  6FD4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6385                           
  6386                           ; BSR set to: 0
  6387  001F9C  0E07               	movlw	7
  6388  001F9E  6FD5               	movwf	___ftmul@cntr& (0+255),b
  6389  001FA0                     
  6390                           ; BSR set to: 0
  6391                           
  6392                           ; BSR set to: 0
  6393  001FA0  A1C8               	btfss	___ftmul@f1& (0+255),0,b
  6394  001FA2  D006               	goto	l1222
  6395                           
  6396                           ; BSR set to: 0
  6397  001FA4  51CB               	movf	___ftmul@f2& (0+255),w,b
  6398  001FA6  27D2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6399  001FA8  51CC               	movf	(___ftmul@f2+1)& (0+255),w,b
  6400  001FAA  23D3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6401  001FAC  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6402  001FAE  23D4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6403  001FB0                     l1222:
  6404                           
  6405                           ; BSR set to: 0
  6406                           
  6407                           ; BSR set to: 0
  6408  001FB0  90D8               	bcf	status,0,c
  6409  001FB2  33CA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6410  001FB4  33C9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6411  001FB6  33C8               	rrcf	___ftmul@f1& (0+255),f,b
  6412  001FB8  90D8               	bcf	status,0,c
  6413  001FBA  37CB               	rlcf	___ftmul@f2& (0+255),f,b
  6414  001FBC  37CC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6415  001FBE  37CD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  001FC0  2FD5               	decfsz	___ftmul@cntr& (0+255),f,b
  6419  001FC2  D7EE               	goto	l1221
  6420                           
  6421                           ; BSR set to: 0
  6422                           
  6423                           ; BSR set to: 0
  6424  001FC4  0E09               	movlw	9
  6425  001FC6  6FD5               	movwf	___ftmul@cntr& (0+255),b
  6426  001FC8                     
  6427                           ; BSR set to: 0
  6428                           
  6429                           ; BSR set to: 0
  6430  001FC8  A1C8               	btfss	___ftmul@f1& (0+255),0,b
  6431  001FCA  D006               	goto	l1225
  6432                           
  6433                           ; BSR set to: 0
  6434  001FCC  51CB               	movf	___ftmul@f2& (0+255),w,b
  6435  001FCE  27D2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6436  001FD0  51CC               	movf	(___ftmul@f2+1)& (0+255),w,b
  6437  001FD2  23D3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6438  001FD4  51CD               	movf	(___ftmul@f2+2)& (0+255),w,b
  6439  001FD6  23D4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6440  001FD8                     l1225:
  6441                           
  6442                           ; BSR set to: 0
  6443                           
  6444                           ; BSR set to: 0
  6445  001FD8  90D8               	bcf	status,0,c
  6446  001FDA  33CA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6447  001FDC  33C9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6448  001FDE  33C8               	rrcf	___ftmul@f1& (0+255),f,b
  6449  001FE0  90D8               	bcf	status,0,c
  6450  001FE2  33D4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6451  001FE4  33D3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6452  001FE6  33D2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6453                           
  6454                           ; BSR set to: 0
  6455  001FE8  2FD5               	decfsz	___ftmul@cntr& (0+255),f,b
  6456  001FEA  D7EE               	goto	l1224
  6457                           
  6458                           ; BSR set to: 0
  6459                           
  6460                           ; BSR set to: 0
  6461  001FEC  C0D2  F0BD         	movff	___ftmul@f3_as_product,___ftpack@arg
  6462  001FF0  C0D3  F0BE         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6463  001FF4  C0D4  F0BF         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6464  001FF8  C0D1  F0C0         	movff	___ftmul@exp,___ftpack@exp
  6465  001FFC  C0D6  F0C1         	movff	___ftmul@sign,___ftpack@sign
  6466  002000  ECB7  F011         	call	___ftpack	;wreg free
  6467  002004  C0BD  F0C8         	movff	?___ftpack,?___ftmul
  6468  002008  C0BE  F0C9         	movff	?___ftpack+1,?___ftmul+1
  6469  00200C  C0BF  F0CA         	movff	?___ftpack+2,?___ftmul+2
  6470  002010  0012               	return	
  6471  002012                     __end_of___ftmul:
  6472                           	opt stack 0
  6473                           tblptru	equ	0xFF8
  6474                           tblptrh	equ	0xFF7
  6475                           tblptrl	equ	0xFF6
  6476                           tablat	equ	0xFF5
  6477                           prodh	equ	0xFF4
  6478                           prodl	equ	0xFF3
  6479                           intcon	equ	0xFF2
  6480                           postinc0	equ	0xFEE
  6481                           wreg	equ	0xFE8
  6482                           indf1	equ	0xFE7
  6483                           postdec1	equ	0xFE5
  6484                           fsr1h	equ	0xFE2
  6485                           fsr1l	equ	0xFE1
  6486                           indf2	equ	0xFDF
  6487                           fsr2h	equ	0xFDA
  6488                           fsr2l	equ	0xFD9
  6489                           status	equ	0xFD8
  6490                           
  6491 ;; *************** function ___ftdiv *****************
  6492 ;; Defined at:
  6493 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  f1              3    6[BANK1 ] float 
  6496 ;;  f2              3    9[BANK1 ] float 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  f3              3   16[BANK1 ] float 
  6499 ;;  sign            1   20[BANK1 ] unsigned char 
  6500 ;;  exp             1   19[BANK1 ] unsigned char 
  6501 ;;  cntr            1   15[BANK1 ] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  3    6[BANK1 ] float 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6511 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;Total ram usage:       15 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    9
  6518 ;; This function calls:
  6519 ;;		___ftpack
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text34
  6526  002012                     __ptext34:
  6527                           	opt stack 0
  6528  002012                     ___ftdiv:
  6529                           	opt stack 21
  6530                           
  6531                           ;incstack = 0
  6532  002012  C133  F137         	movff	___ftdiv@f1+2,??___ftdiv
  6533  002016  0101               	movlb	1	; () banked
  6534  002018  6B38               	clrf	(??___ftdiv+1)& (0+255),b
  6535  00201A  6B39               	clrf	(??___ftdiv+2)& (0+255),b
  6536  00201C  3532               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  6537  00201E  3737               	rlcf	??___ftdiv& (0+255),f,b
  6538  002020  E301               	bnc	u3481
  6539  002022  8138               	bsf	(??___ftdiv+1)& (0+255),0,b
  6540  002024                     u3481:
  6541  002024  5137               	movf	??___ftdiv& (0+255),w,b
  6542  002026  6F3E               	movwf	___ftdiv@exp& (0+255),b
  6543  002028  513E               	movf	___ftdiv@exp& (0+255),w,b
  6544  00202A  A4D8               	btfss	status,2,c
  6545  00202C  D007               	goto	l1203
  6546                           
  6547                           ; BSR set to: 1
  6548  00202E  0E00               	movlw	0
  6549  002030  6F31               	movwf	?___ftdiv& (0+255),b
  6550  002032  0E00               	movlw	0
  6551  002034  6F32               	movwf	(?___ftdiv+1)& (0+255),b
  6552  002036  0E00               	movlw	0
  6553  002038  6F33               	movwf	(?___ftdiv+2)& (0+255),b
  6554                           
  6555                           ; BSR set to: 1
  6556  00203A  0012               	return	
  6557  00203C                     l1203:
  6558                           
  6559                           ; BSR set to: 1
  6560                           
  6561                           ; BSR set to: 1
  6562  00203C  C136  F137         	movff	___ftdiv@f2+2,??___ftdiv
  6563  002040  6B38               	clrf	(??___ftdiv+1)& (0+255),b
  6564  002042  6B39               	clrf	(??___ftdiv+2)& (0+255),b
  6565  002044  3535               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  6566  002046  3737               	rlcf	??___ftdiv& (0+255),f,b
  6567  002048  E301               	bnc	u3501
  6568  00204A  8138               	bsf	(??___ftdiv+1)& (0+255),0,b
  6569  00204C                     u3501:
  6570  00204C  5137               	movf	??___ftdiv& (0+255),w,b
  6571  00204E  6F3F               	movwf	___ftdiv@sign& (0+255),b
  6572  002050  513F               	movf	___ftdiv@sign& (0+255),w,b
  6573  002052  A4D8               	btfss	status,2,c
  6574  002054  D007               	goto	l1205
  6575                           
  6576                           ; BSR set to: 1
  6577  002056  0E00               	movlw	0
  6578  002058  6F31               	movwf	?___ftdiv& (0+255),b
  6579  00205A  0E00               	movlw	0
  6580  00205C  6F32               	movwf	(?___ftdiv+1)& (0+255),b
  6581  00205E  0E00               	movlw	0
  6582  002060  6F33               	movwf	(?___ftdiv+2)& (0+255),b
  6583                           
  6584                           ; BSR set to: 1
  6585  002062  0012               	return	
  6586  002064                     l1205:
  6587                           
  6588                           ; BSR set to: 1
  6589                           
  6590                           ; BSR set to: 1
  6591  002064  0E00               	movlw	0
  6592  002066  6F3B               	movwf	___ftdiv@f3& (0+255),b
  6593  002068  0E00               	movlw	0
  6594  00206A  6F3C               	movwf	(___ftdiv@f3+1)& (0+255),b
  6595  00206C  0E00               	movlw	0
  6596  00206E  6F3D               	movwf	(___ftdiv@f3+2)& (0+255),b
  6597                           
  6598                           ; BSR set to: 1
  6599  002070  513F               	movf	___ftdiv@sign& (0+255),w,b
  6600  002072  0F89               	addlw	137
  6601  002074  5F3E               	subwf	___ftdiv@exp& (0+255),f,b
  6602                           
  6603                           ; BSR set to: 1
  6604  002076  C133  F13F         	movff	___ftdiv@f1+2,___ftdiv@sign
  6605                           
  6606                           ; BSR set to: 1
  6607  00207A  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6608  00207C  1B3F               	xorwf	___ftdiv@sign& (0+255),f,b
  6609                           
  6610                           ; BSR set to: 1
  6611  00207E  0E80               	movlw	128
  6612  002080  173F               	andwf	___ftdiv@sign& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 1
  6615  002082  8F32               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  6616                           
  6617                           ; BSR set to: 1
  6618  002084  0EFF               	movlw	255
  6619  002086  1731               	andwf	___ftdiv@f1& (0+255),f,b
  6620  002088  0EFF               	movlw	255
  6621  00208A  1732               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  6622  00208C  0E00               	movlw	0
  6623  00208E  1733               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  6624                           
  6625                           ; BSR set to: 1
  6626  002090  8F35               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  6627                           
  6628                           ; BSR set to: 1
  6629  002092  0EFF               	movlw	255
  6630  002094  1734               	andwf	___ftdiv@f2& (0+255),f,b
  6631  002096  0EFF               	movlw	255
  6632  002098  1735               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  6633  00209A  0E00               	movlw	0
  6634  00209C  1736               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  6635                           
  6636                           ; BSR set to: 1
  6637  00209E  0E18               	movlw	24
  6638  0020A0  6F3A               	movwf	___ftdiv@cntr& (0+255),b
  6639  0020A2                     
  6640                           ; BSR set to: 1
  6641                           
  6642                           ; BSR set to: 1
  6643  0020A2  90D8               	bcf	status,0,c
  6644  0020A4  373B               	rlcf	___ftdiv@f3& (0+255),f,b
  6645  0020A6  373C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6646  0020A8  373D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6647                           
  6648                           ; BSR set to: 1
  6649  0020AA  5134               	movf	___ftdiv@f2& (0+255),w,b
  6650  0020AC  5D31               	subwf	___ftdiv@f1& (0+255),w,b
  6651  0020AE  5135               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6652  0020B0  5932               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6653  0020B2  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6654  0020B4  5933               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6655  0020B6  A0D8               	btfss	status,0,c
  6656  0020B8  D007               	goto	l1207
  6657                           
  6658                           ; BSR set to: 1
  6659  0020BA  5134               	movf	___ftdiv@f2& (0+255),w,b
  6660  0020BC  5F31               	subwf	___ftdiv@f1& (0+255),f,b
  6661  0020BE  5135               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6662  0020C0  5B32               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6663  0020C2  5136               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6664  0020C4  5B33               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6665                           
  6666                           ; BSR set to: 1
  6667  0020C6  813B               	bsf	___ftdiv@f3& (0+255),0,b
  6668  0020C8                     l1207:
  6669                           
  6670                           ; BSR set to: 1
  6671  0020C8  90D8               	bcf	status,0,c
  6672  0020CA  3731               	rlcf	___ftdiv@f1& (0+255),f,b
  6673  0020CC  3732               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6674  0020CE  3733               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6675                           
  6676                           ; BSR set to: 1
  6677  0020D0  2F3A               	decfsz	___ftdiv@cntr& (0+255),f,b
  6678  0020D2  D7E7               	goto	l1206
  6679                           
  6680                           ; BSR set to: 1
  6681                           
  6682                           ; BSR set to: 1
  6683  0020D4  C13B  F0BD         	movff	___ftdiv@f3,___ftpack@arg
  6684  0020D8  C13C  F0BE         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6685  0020DC  C13D  F0BF         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6686  0020E0  C13E  F0C0         	movff	___ftdiv@exp,___ftpack@exp
  6687  0020E4  C13F  F0C1         	movff	___ftdiv@sign,___ftpack@sign
  6688  0020E8  ECB7  F011         	call	___ftpack	;wreg free
  6689  0020EC  C0BD  F131         	movff	?___ftpack,?___ftdiv
  6690  0020F0  C0BE  F132         	movff	?___ftpack+1,?___ftdiv+1
  6691  0020F4  C0BF  F133         	movff	?___ftpack+2,?___ftdiv+2
  6692  0020F8  0012               	return	
  6693  0020FA                     __end_of___ftdiv:
  6694                           	opt stack 0
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           intcon	equ	0xFF2
  6702                           postinc0	equ	0xFEE
  6703                           wreg	equ	0xFE8
  6704                           indf1	equ	0xFE7
  6705                           postdec1	equ	0xFE5
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           fsr2h	equ	0xFDA
  6710                           fsr2l	equ	0xFD9
  6711                           status	equ	0xFD8
  6712                           
  6713 ;; *************** function ___ftadd *****************
  6714 ;; Defined at:
  6715 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  f1              3   50[BANK0 ] float 
  6718 ;;  f2              3   53[BANK0 ] float 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  exp1            1    5[BANK1 ] unsigned char 
  6721 ;;  exp2            1    4[BANK1 ] unsigned char 
  6722 ;;  sign            1    3[BANK1 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  3   50[BANK0 ] float 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6732 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;Total ram usage:       12 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    9
  6739 ;; This function calls:
  6740 ;;		___ftpack
  6741 ;; This function is called by:
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text35
  6747  00191A                     __ptext35:
  6748                           	opt stack 0
  6749  00191A                     ___ftadd:
  6750                           	opt stack 21
  6751                           
  6752                           ;incstack = 0
  6753  00191A  C0DC  F12B         	movff	___ftadd@f1+2,??___ftadd
  6754  00191E  0101               	movlb	1	; () banked
  6755  001920  6B2C               	clrf	(??___ftadd+1)& (0+255),b
  6756  001922  6B2D               	clrf	(??___ftadd+2)& (0+255),b
  6757  001924  0100               	movlb	0	; () banked
  6758  001926  35DB               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6759  001928  0101               	movlb	1	; () banked
  6760  00192A  372B               	rlcf	??___ftadd& (0+255),f,b
  6761  00192C  E301               	bnc	u3271
  6762  00192E  812C               	bsf	(??___ftadd+1)& (0+255),0,b
  6763  001930                     u3271:
  6764  001930  512B               	movf	??___ftadd& (0+255),w,b
  6765  001932  6F30               	movwf	___ftadd@exp1& (0+255),b
  6766  001934  C0DF  F12B         	movff	___ftadd@f2+2,??___ftadd
  6767  001938  6B2C               	clrf	(??___ftadd+1)& (0+255),b
  6768  00193A  6B2D               	clrf	(??___ftadd+2)& (0+255),b
  6769  00193C  0100               	movlb	0	; () banked
  6770  00193E  35DE               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6771  001940  0101               	movlb	1	; () banked
  6772  001942  372B               	rlcf	??___ftadd& (0+255),f,b
  6773  001944  E301               	bnc	u3281
  6774  001946  812C               	bsf	(??___ftadd+1)& (0+255),0,b
  6775  001948                     u3281:
  6776  001948  512B               	movf	??___ftadd& (0+255),w,b
  6777  00194A  6F2F               	movwf	___ftadd@exp2& (0+255),b
  6778                           
  6779                           ; BSR set to: 1
  6780  00194C  5130               	movf	___ftadd@exp1& (0+255),w,b
  6781  00194E  B4D8               	btfsc	status,2,c
  6782  001950  D00B               	goto	u3310
  6783                           
  6784                           ; BSR set to: 1
  6785  001952  512F               	movf	___ftadd@exp2& (0+255),w,b
  6786  001954  5D30               	subwf	___ftadd@exp1& (0+255),w,b
  6787  001956  B0D8               	btfsc	status,0,c
  6788  001958  D00E               	goto	l1170
  6789                           
  6790                           ; BSR set to: 1
  6791  00195A  5130               	movf	___ftadd@exp1& (0+255),w,b
  6792  00195C  0800               	sublw	0
  6793  00195E  252F               	addwf	___ftadd@exp2& (0+255),w,b
  6794  001960  6F2B               	movwf	??___ftadd& (0+255),b
  6795  001962  0E18               	movlw	24
  6796  001964  652B               	cpfsgt	??___ftadd& (0+255),b
  6797  001966  D007               	goto	l1170
  6798  001968                     u3310:
  6799                           
  6800                           ; BSR set to: 1
  6801  001968  C0DD  F0DA         	movff	___ftadd@f2,?___ftadd
  6802  00196C  C0DE  F0DB         	movff	___ftadd@f2+1,?___ftadd+1
  6803  001970  C0DF  F0DC         	movff	___ftadd@f2+2,?___ftadd+2
  6804  001974  0012               	return	
  6805  001976                     l1170:
  6806                           
  6807                           ; BSR set to: 1
  6808                           
  6809                           ; BSR set to: 1
  6810  001976  512F               	movf	___ftadd@exp2& (0+255),w,b
  6811  001978  B4D8               	btfsc	status,2,c
  6812  00197A  D00B               	goto	u3340
  6813                           
  6814                           ; BSR set to: 1
  6815  00197C  5130               	movf	___ftadd@exp1& (0+255),w,b
  6816  00197E  5D2F               	subwf	___ftadd@exp2& (0+255),w,b
  6817  001980  B0D8               	btfsc	status,0,c
  6818  001982  D00E               	goto	l1174
  6819                           
  6820                           ; BSR set to: 1
  6821  001984  512F               	movf	___ftadd@exp2& (0+255),w,b
  6822  001986  0800               	sublw	0
  6823  001988  2530               	addwf	___ftadd@exp1& (0+255),w,b
  6824  00198A  6F2B               	movwf	??___ftadd& (0+255),b
  6825  00198C  0E18               	movlw	24
  6826  00198E  652B               	cpfsgt	??___ftadd& (0+255),b
  6827  001990  D007               	goto	l1174
  6828  001992                     u3340:
  6829                           
  6830                           ; BSR set to: 1
  6831  001992  C0DA  F0DA         	movff	___ftadd@f1,?___ftadd
  6832  001996  C0DB  F0DB         	movff	___ftadd@f1+1,?___ftadd+1
  6833  00199A  C0DC  F0DC         	movff	___ftadd@f1+2,?___ftadd+2
  6834  00199E  0012               	return	
  6835  0019A0                     l1174:
  6836                           
  6837                           ; BSR set to: 1
  6838                           
  6839                           ; BSR set to: 1
  6840  0019A0  0E06               	movlw	6
  6841  0019A2  6F2E               	movwf	___ftadd@sign& (0+255),b
  6842                           
  6843                           ; BSR set to: 1
  6844  0019A4  0100               	movlb	0	; () banked
  6845  0019A6  AFDC               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6846  0019A8  D002               	goto	l1177
  6847                           
  6848                           ; BSR set to: 0
  6849  0019AA  0101               	movlb	1	; () banked
  6850  0019AC  8F2E               	bsf	___ftadd@sign& (0+255),7,b
  6851  0019AE                     l1177:
  6852                           
  6853                           ; BSR set to: 1
  6854  0019AE  0100               	movlb	0	; () banked
  6855  0019B0  AFDF               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6856  0019B2  D002               	goto	l1178
  6857                           
  6858                           ; BSR set to: 0
  6859  0019B4  0101               	movlb	1	; () banked
  6860  0019B6  8D2E               	bsf	___ftadd@sign& (0+255),6,b
  6861  0019B8                     l1178:
  6862  0019B8  0100               	movlb	0	; () banked
  6863  0019BA  8FDB               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6864                           
  6865                           ; BSR set to: 0
  6866  0019BC  0EFF               	movlw	255
  6867  0019BE  17DA               	andwf	___ftadd@f1& (0+255),f,b
  6868  0019C0  0EFF               	movlw	255
  6869  0019C2  17DB               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6870  0019C4  0E00               	movlw	0
  6871  0019C6  17DC               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6872  0019C8  8FDE               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6873                           
  6874                           ; BSR set to: 0
  6875  0019CA  0EFF               	movlw	255
  6876  0019CC  17DD               	andwf	___ftadd@f2& (0+255),f,b
  6877  0019CE  0EFF               	movlw	255
  6878  0019D0  17DE               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6879  0019D2  0E00               	movlw	0
  6880  0019D4  17DF               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6881                           
  6882                           ; BSR set to: 0
  6883  0019D6  0101               	movlb	1	; () banked
  6884  0019D8  512F               	movf	___ftadd@exp2& (0+255),w,b
  6885  0019DA  5D30               	subwf	___ftadd@exp1& (0+255),w,b
  6886  0019DC  B0D8               	btfsc	status,0,c
  6887  0019DE  D01F               	goto	l1179
  6888  0019E0                     u3370:
  6889                           
  6890                           ; BSR set to: 1
  6891                           
  6892                           ; BSR set to: 1
  6893  0019E0  0100               	movlb	0	; () banked
  6894  0019E2  90D8               	bcf	status,0,c
  6895  0019E4  37DD               	rlcf	___ftadd@f2& (0+255),f,b
  6896  0019E6  37DE               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6897  0019E8  37DF               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6898  0019EA  0101               	movlb	1	; () banked
  6899  0019EC  072F               	decf	___ftadd@exp2& (0+255),f,b
  6900                           
  6901                           ; BSR set to: 1
  6902  0019EE  5130               	movf	___ftadd@exp1& (0+255),w,b
  6903  0019F0  192F               	xorwf	___ftadd@exp2& (0+255),w,b
  6904  0019F2  B4D8               	btfsc	status,2,c
  6905  0019F4  D00F               	goto	l1184
  6906                           
  6907                           ; BSR set to: 1
  6908  0019F6  072E               	decf	___ftadd@sign& (0+255),f,b
  6909  0019F8  C12E  F12B         	movff	___ftadd@sign,??___ftadd
  6910  0019FC  0E07               	movlw	7
  6911  0019FE  172B               	andwf	??___ftadd& (0+255),f,b
  6912  001A00  B4D8               	btfsc	status,2,c
  6913  001A02  D008               	goto	l1184
  6914  001A04  D7ED               	goto	u3370
  6915  001A06                     
  6916                           ; BSR set to: 1
  6917                           
  6918                           ; BSR set to: 1
  6919  001A06  0100               	movlb	0	; () banked
  6920  001A08  90D8               	bcf	status,0,c
  6921  001A0A  33DC               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6922  001A0C  33DB               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6923  001A0E  33DA               	rrcf	___ftadd@f1& (0+255),f,b
  6924  001A10  0101               	movlb	1	; () banked
  6925  001A12  2B30               	incf	___ftadd@exp1& (0+255),f,b
  6926  001A14                     l1184:
  6927                           
  6928                           ; BSR set to: 1
  6929                           
  6930                           ; BSR set to: 1
  6931  001A14  512F               	movf	___ftadd@exp2& (0+255),w,b
  6932  001A16  1930               	xorwf	___ftadd@exp1& (0+255),w,b
  6933  001A18  B4D8               	btfsc	status,2,c
  6934  001A1A  D023               	goto	u3440
  6935  001A1C  D7F4               	goto	l1185
  6936  001A1E                     l1179:
  6937                           
  6938                           ; BSR set to: 1
  6939                           
  6940                           ; BSR set to: 1
  6941  001A1E  5130               	movf	___ftadd@exp1& (0+255),w,b
  6942  001A20  5D2F               	subwf	___ftadd@exp2& (0+255),w,b
  6943  001A22  B0D8               	btfsc	status,0,c
  6944  001A24  D01E               	goto	u3440
  6945  001A26                     u3410:
  6946                           
  6947                           ; BSR set to: 1
  6948                           
  6949                           ; BSR set to: 1
  6950  001A26  0100               	movlb	0	; () banked
  6951  001A28  90D8               	bcf	status,0,c
  6952  001A2A  37DA               	rlcf	___ftadd@f1& (0+255),f,b
  6953  001A2C  37DB               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6954  001A2E  37DC               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6955  001A30  0101               	movlb	1	; () banked
  6956  001A32  0730               	decf	___ftadd@exp1& (0+255),f,b
  6957                           
  6958                           ; BSR set to: 1
  6959  001A34  5130               	movf	___ftadd@exp1& (0+255),w,b
  6960  001A36  192F               	xorwf	___ftadd@exp2& (0+255),w,b
  6961  001A38  B4D8               	btfsc	status,2,c
  6962  001A3A  D00F               	goto	l1193
  6963                           
  6964                           ; BSR set to: 1
  6965  001A3C  072E               	decf	___ftadd@sign& (0+255),f,b
  6966  001A3E  C12E  F12B         	movff	___ftadd@sign,??___ftadd
  6967  001A42  0E07               	movlw	7
  6968  001A44  172B               	andwf	??___ftadd& (0+255),f,b
  6969  001A46  B4D8               	btfsc	status,2,c
  6970  001A48  D008               	goto	l1193
  6971  001A4A  D7ED               	goto	u3410
  6972  001A4C                     
  6973                           ; BSR set to: 1
  6974                           
  6975                           ; BSR set to: 1
  6976  001A4C  0100               	movlb	0	; () banked
  6977  001A4E  90D8               	bcf	status,0,c
  6978  001A50  33DF               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6979  001A52  33DE               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6980  001A54  33DD               	rrcf	___ftadd@f2& (0+255),f,b
  6981  001A56  0101               	movlb	1	; () banked
  6982  001A58  2B2F               	incf	___ftadd@exp2& (0+255),f,b
  6983  001A5A                     l1193:
  6984                           
  6985                           ; BSR set to: 1
  6986                           
  6987                           ; BSR set to: 1
  6988  001A5A  512F               	movf	___ftadd@exp2& (0+255),w,b
  6989  001A5C  1930               	xorwf	___ftadd@exp1& (0+255),w,b
  6990  001A5E  A4D8               	btfss	status,2,c
  6991  001A60  D7F5               	goto	l1194
  6992  001A62                     u3440:
  6993                           
  6994                           ; BSR set to: 1
  6995                           
  6996                           ; BSR set to: 1
  6997                           
  6998                           ; BSR set to: 1
  6999  001A62  AF2E               	btfss	___ftadd@sign& (0+255),7,b
  7000  001A64  D00D               	goto	l1196
  7001                           
  7002                           ; BSR set to: 1
  7003  001A66  0EFF               	movlw	255
  7004  001A68  0100               	movlb	0	; () banked
  7005  001A6A  1BDA               	xorwf	___ftadd@f1& (0+255),f,b
  7006  001A6C  0EFF               	movlw	255
  7007  001A6E  1BDB               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7008  001A70  0EFF               	movlw	255
  7009  001A72  1BDC               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7010  001A74  0E01               	movlw	1
  7011  001A76  27DA               	addwf	___ftadd@f1& (0+255),f,b
  7012  001A78  0E00               	movlw	0
  7013  001A7A  23DB               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7014  001A7C  0E00               	movlw	0
  7015  001A7E  23DC               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7016  001A80                     l1196:
  7017  001A80  0101               	movlb	1	; () banked
  7018  001A82  AD2E               	btfss	___ftadd@sign& (0+255),6,b
  7019  001A84  D00D               	goto	l1197
  7020                           
  7021                           ; BSR set to: 1
  7022  001A86  0EFF               	movlw	255
  7023  001A88  0100               	movlb	0	; () banked
  7024  001A8A  1BDD               	xorwf	___ftadd@f2& (0+255),f,b
  7025  001A8C  0EFF               	movlw	255
  7026  001A8E  1BDE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7027  001A90  0EFF               	movlw	255
  7028  001A92  1BDF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7029  001A94  0E01               	movlw	1
  7030  001A96  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7031  001A98  0E00               	movlw	0
  7032  001A9A  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7033  001A9C  0E00               	movlw	0
  7034  001A9E  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7035  001AA0                     l1197:
  7036                           
  7037                           ; BSR set to: 0
  7038  001AA0  0E00               	movlw	0
  7039  001AA2  0101               	movlb	1	; () banked
  7040  001AA4  6F2E               	movwf	___ftadd@sign& (0+255),b
  7041                           
  7042                           ; BSR set to: 1
  7043  001AA6  0100               	movlb	0	; () banked
  7044  001AA8  51DA               	movf	___ftadd@f1& (0+255),w,b
  7045  001AAA  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7046  001AAC  51DB               	movf	(___ftadd@f1+1)& (0+255),w,b
  7047  001AAE  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7048  001AB0  51DC               	movf	(___ftadd@f1+2)& (0+255),w,b
  7049  001AB2  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7050                           
  7051                           ; BSR set to: 0
  7052  001AB4  AFDF               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7053  001AB6  D00F               	goto	l1198
  7054                           
  7055                           ; BSR set to: 0
  7056  001AB8  0EFF               	movlw	255
  7057  001ABA  1BDD               	xorwf	___ftadd@f2& (0+255),f,b
  7058  001ABC  0EFF               	movlw	255
  7059  001ABE  1BDE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7060  001AC0  0EFF               	movlw	255
  7061  001AC2  1BDF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7062  001AC4  0E01               	movlw	1
  7063  001AC6  27DD               	addwf	___ftadd@f2& (0+255),f,b
  7064  001AC8  0E00               	movlw	0
  7065  001ACA  23DE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7066  001ACC  0E00               	movlw	0
  7067  001ACE  23DF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7068                           
  7069                           ; BSR set to: 0
  7070  001AD0  0E01               	movlw	1
  7071  001AD2  0101               	movlb	1	; () banked
  7072  001AD4  6F2E               	movwf	___ftadd@sign& (0+255),b
  7073  001AD6                     l1198:
  7074                           
  7075                           ; BSR set to: 1
  7076  001AD6  C0DD  F0BD         	movff	___ftadd@f2,___ftpack@arg
  7077  001ADA  C0DE  F0BE         	movff	___ftadd@f2+1,___ftpack@arg+1
  7078  001ADE  C0DF  F0BF         	movff	___ftadd@f2+2,___ftpack@arg+2
  7079  001AE2  C130  F0C0         	movff	___ftadd@exp1,___ftpack@exp
  7080  001AE6  C12E  F0C1         	movff	___ftadd@sign,___ftpack@sign
  7081  001AEA  ECB7  F011         	call	___ftpack	;wreg free
  7082  001AEE  C0BD  F0DA         	movff	?___ftpack,?___ftadd
  7083  001AF2  C0BE  F0DB         	movff	?___ftpack+1,?___ftadd+1
  7084  001AF6  C0BF  F0DC         	movff	?___ftpack+2,?___ftadd+2
  7085  001AFA  0012               	return	
  7086  001AFC                     __end_of___ftadd:
  7087                           	opt stack 0
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           postinc0	equ	0xFEE
  7096                           wreg	equ	0xFE8
  7097                           indf1	equ	0xFE7
  7098                           postdec1	equ	0xFE5
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           indf2	equ	0xFDF
  7102                           fsr2h	equ	0xFDA
  7103                           fsr2l	equ	0xFD9
  7104                           status	equ	0xFD8
  7105                           
  7106 ;; *************** function ___ftpack *****************
  7107 ;; Defined at:
  7108 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  arg             3   21[BANK0 ] unsigned um
  7111 ;;  exp             1   24[BANK0 ] unsigned char 
  7112 ;;  sign            1   25[BANK0 ] unsigned char 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;		None
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  3   21[BANK0 ] float 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7124 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;Total ram usage:        8 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    8
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		___ftadd
  7135 ;;		___ftdiv
  7136 ;;		___ftmul
  7137 ;;		___lwtoft
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text36
  7142  00236E                     __ptext36:
  7143                           	opt stack 0
  7144  00236E                     ___ftpack:
  7145                           	opt stack 21
  7146                           
  7147                           ;incstack = 0
  7148  00236E  0100               	movlb	0	; () banked
  7149  002370  51C0               	movf	___ftpack@exp& (0+255),w,b
  7150  002372  B4D8               	btfsc	status,2,c
  7151  002374  D005               	goto	u2960
  7152                           
  7153                           ; BSR set to: 0
  7154  002376  51BD               	movf	___ftpack@arg& (0+255),w,b
  7155  002378  11BE               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7156  00237A  11BF               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7157  00237C  A4D8               	btfss	status,2,c
  7158  00237E  D00C               	goto	l1139
  7159  002380                     u2960:
  7160                           
  7161                           ; BSR set to: 0
  7162                           
  7163                           ; BSR set to: 0
  7164  002380  0E00               	movlw	0
  7165  002382  6FBD               	movwf	?___ftpack& (0+255),b
  7166  002384  0E00               	movlw	0
  7167  002386  6FBE               	movwf	(?___ftpack+1)& (0+255),b
  7168  002388  0E00               	movlw	0
  7169  00238A  6FBF               	movwf	(?___ftpack+2)& (0+255),b
  7170                           
  7171                           ; BSR set to: 0
  7172  00238C  0012               	return	
  7173  00238E                     
  7174                           ; BSR set to: 0
  7175                           
  7176                           ; BSR set to: 0
  7177  00238E  2BC0               	incf	___ftpack@exp& (0+255),f,b
  7178  002390  90D8               	bcf	status,0,c
  7179  002392  33BF               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7180  002394  33BE               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7181  002396  33BD               	rrcf	___ftpack@arg& (0+255),f,b
  7182  002398                     l1139:
  7183                           
  7184                           ; BSR set to: 0
  7185                           
  7186                           ; BSR set to: 0
  7187  002398  0E00               	movlw	0
  7188  00239A  15BD               	andwf	___ftpack@arg& (0+255),w,b
  7189  00239C  6FC2               	movwf	??___ftpack& (0+255),b
  7190  00239E  0E00               	movlw	0
  7191  0023A0  15BE               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7192  0023A2  6FC3               	movwf	(??___ftpack+1)& (0+255),b
  7193  0023A4  0EFE               	movlw	254
  7194  0023A6  15BF               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7195  0023A8  6FC4               	movwf	(??___ftpack+2)& (0+255),b
  7196  0023AA  51C2               	movf	??___ftpack& (0+255),w,b
  7197  0023AC  11C3               	iorwf	(??___ftpack+1)& (0+255),w,b
  7198  0023AE  11C4               	iorwf	(??___ftpack+2)& (0+255),w,b
  7199  0023B0  B4D8               	btfsc	status,2,c
  7200  0023B2  D00C               	goto	l1142
  7201  0023B4  D7EC               	goto	l1140
  7202  0023B6                     
  7203                           ; BSR set to: 0
  7204                           
  7205                           ; BSR set to: 0
  7206  0023B6  2BC0               	incf	___ftpack@exp& (0+255),f,b
  7207                           
  7208                           ; BSR set to: 0
  7209  0023B8  0E01               	movlw	1
  7210  0023BA  27BD               	addwf	___ftpack@arg& (0+255),f,b
  7211  0023BC  0E00               	movlw	0
  7212  0023BE  23BE               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  7213  0023C0  0E00               	movlw	0
  7214  0023C2  23BF               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  7215  0023C4  90D8               	bcf	status,0,c
  7216  0023C6  33BF               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7217  0023C8  33BE               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7218  0023CA  33BD               	rrcf	___ftpack@arg& (0+255),f,b
  7219  0023CC                     l1142:
  7220                           
  7221                           ; BSR set to: 0
  7222                           
  7223                           ; BSR set to: 0
  7224  0023CC  0E00               	movlw	0
  7225  0023CE  15BD               	andwf	___ftpack@arg& (0+255),w,b
  7226  0023D0  6FC2               	movwf	??___ftpack& (0+255),b
  7227  0023D2  0E00               	movlw	0
  7228  0023D4  15BE               	andwf	(___ftpack@arg+1)& (0+255),w,b
  7229  0023D6  6FC3               	movwf	(??___ftpack+1)& (0+255),b
  7230  0023D8  0EFF               	movlw	255
  7231  0023DA  15BF               	andwf	(___ftpack@arg+2)& (0+255),w,b
  7232  0023DC  6FC4               	movwf	(??___ftpack+2)& (0+255),b
  7233  0023DE  51C2               	movf	??___ftpack& (0+255),w,b
  7234  0023E0  11C3               	iorwf	(??___ftpack+1)& (0+255),w,b
  7235  0023E2  11C4               	iorwf	(??___ftpack+2)& (0+255),w,b
  7236  0023E4  B4D8               	btfsc	status,2,c
  7237  0023E6  D006               	goto	l1145
  7238  0023E8  D7E6               	goto	l1143
  7239  0023EA                     
  7240                           ; BSR set to: 0
  7241                           
  7242                           ; BSR set to: 0
  7243  0023EA  07C0               	decf	___ftpack@exp& (0+255),f,b
  7244  0023EC  90D8               	bcf	status,0,c
  7245  0023EE  37BD               	rlcf	___ftpack@arg& (0+255),f,b
  7246  0023F0  37BE               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  7247  0023F2  37BF               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  7248  0023F4                     l1145:
  7249                           
  7250                           ; BSR set to: 0
  7251                           
  7252                           ; BSR set to: 0
  7253  0023F4  BFBE               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  7254  0023F6  D003               	goto	u3000
  7255                           
  7256                           ; BSR set to: 0
  7257  0023F8  0E02               	movlw	2
  7258  0023FA  61C0               	cpfslt	___ftpack@exp& (0+255),b
  7259  0023FC  D7F6               	goto	l1146
  7260  0023FE                     u3000:
  7261                           
  7262                           ; BSR set to: 0
  7263                           
  7264                           ; BSR set to: 0
  7265  0023FE  A1C0               	btfss	___ftpack@exp& (0+255),0,b
  7266                           
  7267                           ; BSR set to: 0
  7268  002400  9FBE               	bcf	(___ftpack@arg+1)& (0+255),7,b
  7269                           
  7270                           ; BSR set to: 0
  7271                           
  7272                           ; BSR set to: 0
  7273  002402  90D8               	bcf	status,0,c
  7274  002404  33C0               	rrcf	___ftpack@exp& (0+255),f,b
  7275  002406  51C0               	movf	___ftpack@exp& (0+255),w,b
  7276  002408  13BF               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  7277                           
  7278                           ; BSR set to: 0
  7279  00240A  51C1               	movf	___ftpack@sign& (0+255),w,b
  7280  00240C  A4D8               	btfss	status,2,c
  7281                           
  7282                           ; BSR set to: 0
  7283  00240E  8FBF               	bsf	(___ftpack@arg+2)& (0+255),7,b
  7284                           
  7285                           ; BSR set to: 0
  7286                           
  7287                           ; BSR set to: 0
  7288  002410  C0BD  F0BD         	movff	___ftpack@arg,?___ftpack
  7289  002414  C0BE  F0BE         	movff	___ftpack@arg+1,?___ftpack+1
  7290  002418  C0BF  F0BF         	movff	___ftpack@arg+2,?___ftpack+2
  7291  00241C  0012               	return	
  7292  00241E                     __end_of___ftpack:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           indf1	equ	0xFE7
  7304                           postdec1	equ	0xFE5
  7305                           fsr1h	equ	0xFE2
  7306                           fsr1l	equ	0xFE1
  7307                           indf2	equ	0xFDF
  7308                           fsr2h	equ	0xFDA
  7309                           fsr2l	equ	0xFD9
  7310                           status	equ	0xFD8
  7311                           
  7312 ;; *************** function ___aldiv *****************
  7313 ;; Defined at:
  7314 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  dividend        4   21[BANK0 ] long 
  7317 ;;  divisor         4   25[BANK0 ] long 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  quotient        4   31[BANK0 ] long 
  7320 ;;  sign            1   30[BANK0 ] unsigned char 
  7321 ;;  counter         1   29[BANK0 ] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  4   21[BANK0 ] long 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:       14 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    8
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text37
  7346  0021DA                     __ptext37:
  7347                           	opt stack 0
  7348  0021DA                     ___aldiv:
  7349                           	opt stack 22
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;incstack = 0
  7353  0021DA  0E00               	movlw	0
  7354  0021DC  0100               	movlb	0	; () banked
  7355  0021DE  6FC6               	movwf	___aldiv@sign& (0+255),b
  7356                           
  7357                           ; BSR set to: 0
  7358  0021E0  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7359  0021E2  D00A               	goto	l980
  7360                           
  7361                           ; BSR set to: 0
  7362  0021E4  1FC4               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7363  0021E6  1FC3               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7364  0021E8  1FC2               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7365  0021EA  6DC1               	negf	___aldiv@divisor& (0+255),b
  7366  0021EC  0E00               	movlw	0
  7367  0021EE  23C2               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7368  0021F0  23C3               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7369  0021F2  23C4               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7370                           
  7371                           ; BSR set to: 0
  7372  0021F4  0E01               	movlw	1
  7373  0021F6  6FC6               	movwf	___aldiv@sign& (0+255),b
  7374  0021F8                     l980:
  7375                           
  7376                           ; BSR set to: 0
  7377                           
  7378                           ; BSR set to: 0
  7379  0021F8  AFC0               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7380  0021FA  D00A               	goto	l981
  7381                           
  7382                           ; BSR set to: 0
  7383  0021FC  1FC0               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7384  0021FE  1FBF               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7385  002200  1FBE               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7386  002202  6DBD               	negf	___aldiv@dividend& (0+255),b
  7387  002204  0E00               	movlw	0
  7388  002206  23BE               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7389  002208  23BF               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7390  00220A  23C0               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  00220C  0E01               	movlw	1
  7394  00220E  1BC6               	xorwf	___aldiv@sign& (0+255),f,b
  7395  002210                     l981:
  7396                           
  7397                           ; BSR set to: 0
  7398                           
  7399                           ; BSR set to: 0
  7400  002210  0E00               	movlw	0
  7401  002212  6FC7               	movwf	___aldiv@quotient& (0+255),b
  7402  002214  0E00               	movlw	0
  7403  002216  6FC8               	movwf	(___aldiv@quotient+1)& (0+255),b
  7404  002218  0E00               	movlw	0
  7405  00221A  6FC9               	movwf	(___aldiv@quotient+2)& (0+255),b
  7406  00221C  0E00               	movlw	0
  7407  00221E  6FCA               	movwf	(___aldiv@quotient+3)& (0+255),b
  7408                           
  7409                           ; BSR set to: 0
  7410  002220  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7411  002222  11C2               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7412  002224  11C3               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7413  002226  11C4               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7414  002228  B4D8               	btfsc	status,2,c
  7415  00222A  D02A               	goto	l988
  7416                           
  7417                           ; BSR set to: 0
  7418  00222C  0E01               	movlw	1
  7419  00222E  6FC5               	movwf	___aldiv@counter& (0+255),b
  7420  002230  D006               	goto	l983
  7421  002232                     
  7422                           ; BSR set to: 0
  7423                           
  7424                           ; BSR set to: 0
  7425  002232  90D8               	bcf	status,0,c
  7426  002234  37C1               	rlcf	___aldiv@divisor& (0+255),f,b
  7427  002236  37C2               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7428  002238  37C3               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7429  00223A  37C4               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7430  00223C  2BC5               	incf	___aldiv@counter& (0+255),f,b
  7431  00223E                     l983:
  7432                           
  7433                           ; BSR set to: 0
  7434                           
  7435                           ; BSR set to: 0
  7436  00223E  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7437  002240  D7F8               	goto	l984
  7438  002242                     u3240:
  7439                           
  7440                           ; BSR set to: 0
  7441                           
  7442                           ; BSR set to: 0
  7443                           
  7444                           ; BSR set to: 0
  7445  002242  90D8               	bcf	status,0,c
  7446  002244  37C7               	rlcf	___aldiv@quotient& (0+255),f,b
  7447  002246  37C8               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7448  002248  37C9               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7449  00224A  37CA               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7450                           
  7451                           ; BSR set to: 0
  7452  00224C  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7453  00224E  5DBD               	subwf	___aldiv@dividend& (0+255),w,b
  7454  002250  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7455  002252  59BE               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7456  002254  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7457  002256  59BF               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7458  002258  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7459  00225A  59C0               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7460  00225C  A0D8               	btfss	status,0,c
  7461  00225E  D009               	goto	l987
  7462                           
  7463                           ; BSR set to: 0
  7464  002260  51C1               	movf	___aldiv@divisor& (0+255),w,b
  7465  002262  5FBD               	subwf	___aldiv@dividend& (0+255),f,b
  7466  002264  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7467  002266  5BBE               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7468  002268  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7469  00226A  5BBF               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7470  00226C  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7471  00226E  5BC0               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7472                           
  7473                           ; BSR set to: 0
  7474  002270  81C7               	bsf	___aldiv@quotient& (0+255),0,b
  7475  002272                     l987:
  7476                           
  7477                           ; BSR set to: 0
  7478                           
  7479                           ; BSR set to: 0
  7480  002272  90D8               	bcf	status,0,c
  7481  002274  33C4               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7482  002276  33C3               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7483  002278  33C2               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7484  00227A  33C1               	rrcf	___aldiv@divisor& (0+255),f,b
  7485                           
  7486                           ; BSR set to: 0
  7487  00227C  2FC5               	decfsz	___aldiv@counter& (0+255),f,b
  7488  00227E  D7E1               	goto	u3240
  7489  002280                     l988:
  7490                           
  7491                           ; BSR set to: 0
  7492                           
  7493                           ; BSR set to: 0
  7494                           
  7495                           ; BSR set to: 0
  7496  002280  51C6               	movf	___aldiv@sign& (0+255),w,b
  7497  002282  B4D8               	btfsc	status,2,c
  7498  002284  D008               	goto	l989
  7499                           
  7500                           ; BSR set to: 0
  7501  002286  1FCA               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7502  002288  1FC9               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7503  00228A  1FC8               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7504  00228C  6DC7               	negf	___aldiv@quotient& (0+255),b
  7505  00228E  0E00               	movlw	0
  7506  002290  23C8               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7507  002292  23C9               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7508  002294  23CA               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7509  002296                     l989:
  7510                           
  7511                           ; BSR set to: 0
  7512                           
  7513                           ; BSR set to: 0
  7514  002296  C0C7  F0BD         	movff	___aldiv@quotient,?___aldiv
  7515  00229A  C0C8  F0BE         	movff	___aldiv@quotient+1,?___aldiv+1
  7516  00229E  C0C9  F0BF         	movff	___aldiv@quotient+2,?___aldiv+2
  7517  0022A2  C0CA  F0C0         	movff	___aldiv@quotient+3,?___aldiv+3
  7518  0022A6  0012               	return	
  7519  0022A8                     __end_of___aldiv:
  7520                           	opt stack 0
  7521                           tblptru	equ	0xFF8
  7522                           tblptrh	equ	0xFF7
  7523                           tblptrl	equ	0xFF6
  7524                           tablat	equ	0xFF5
  7525                           prodh	equ	0xFF4
  7526                           prodl	equ	0xFF3
  7527                           intcon	equ	0xFF2
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           indf1	equ	0xFE7
  7531                           postdec1	equ	0xFE5
  7532                           fsr1h	equ	0xFE2
  7533                           fsr1l	equ	0xFE1
  7534                           indf2	equ	0xFDF
  7535                           fsr2h	equ	0xFDA
  7536                           fsr2l	equ	0xFD9
  7537                           status	equ	0xFD8
  7538                           
  7539 ;; *************** function _Write_b_eep *****************
  7540 ;; Defined at:
  7541 ;;		line 527 in file "zigbee.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  badd            2   21[BANK0 ] unsigned int 
  7544 ;;  data            1   23[BANK0 ] unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  GIE_BIT_VAL     1   24[BANK0 ] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7556 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;Total ram usage:        4 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    8
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_main
  7567 ;;		_Store_ID
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text38
  7572  002898                     __ptext38:
  7573                           	opt stack 0
  7574  002898                     _Write_b_eep:
  7575                           	opt stack 22
  7576                           
  7577                           ;zigbee.c: 528: char GIE_BIT_VAL = 0;
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;incstack = 0
  7581  002898  0E00               	movlw	0
  7582  00289A  0100               	movlb	0	; () banked
  7583  00289C  6FC0               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;zigbee.c: 529: EEADR = (badd & 0x0FF);
  7587  00289E  C0BD  FF62         	movff	Write_b_eep@badd,3938	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;zigbee.c: 530: EEDATA = data;
  7591  0028A2  C0BF  FF61         	movff	Write_b_eep@data,3937	;volatile
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;zigbee.c: 531: EECON1bits.EEPGD = 0;
  7595  0028A6  9E7F               	bcf	3967,7,c	;volsfr
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;zigbee.c: 532: EECON1bits.CFGS = 0;
  7599  0028A8  9C7F               	bcf	3967,6,c	;volsfr
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;zigbee.c: 533: EECON1bits.WREN = 1;
  7603  0028AA  847F               	bsf	3967,2,c	;volsfr
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;zigbee.c: 534: GIE_BIT_VAL = INTCONbits.GIE;
  7607  0028AC  0E00               	movlw	0
  7608  0028AE  BEF2               	btfsc	intcon,7,c	;volatile
  7609  0028B0  0E01               	movlw	1
  7610  0028B2  6FC0               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;zigbee.c: 535: INTCONbits.GIE = 0;
  7614  0028B4  9EF2               	bcf	intcon,7,c	;volatile
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;zigbee.c: 536: EECON2 = 0x55;
  7618  0028B6  0E55               	movlw	85
  7619  0028B8  6E7E               	movwf	3966,c	;volsfr
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;zigbee.c: 537: EECON2 = 0xAA;
  7623  0028BA  0EAA               	movlw	170
  7624  0028BC  6E7E               	movwf	3966,c	;volsfr
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;zigbee.c: 538: EECON1bits.WR = 1;
  7628  0028BE  827F               	bsf	3967,1,c	;volsfr
  7629  0028C0                     
  7630                           ; BSR set to: 0
  7631  0028C0  B27F               	btfsc	3967,1,c	;volsfr
  7632  0028C2  D7FE               	goto	l587
  7633                           
  7634                           ;zigbee.c: 540: INTCONbits.GIE = GIE_BIT_VAL;
  7635  0028C4  0100               	movlb	0	; () banked
  7636  0028C6  B1C0               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  7637  0028C8  D002               	bra	u3155
  7638  0028CA  9EF2               	bcf	intcon,7,c	;volatile
  7639  0028CC  D001               	bra	u3156
  7640  0028CE                     u3155:
  7641  0028CE  8EF2               	bsf	intcon,7,c	;volatile
  7642  0028D0                     u3156:
  7643                           
  7644                           ;zigbee.c: 541: EECON1bits.WREN = 0;
  7645  0028D0  947F               	bcf	3967,2,c	;volsfr
  7646  0028D2  0012               	return		;funcret
  7647  0028D4                     __end_of_Write_b_eep:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           intcon	equ	0xFF2
  7656                           postinc0	equ	0xFEE
  7657                           wreg	equ	0xFE8
  7658                           indf1	equ	0xFE7
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           indf2	equ	0xFDF
  7663                           fsr2h	equ	0xFDA
  7664                           fsr2l	equ	0xFD9
  7665                           status	equ	0xFD8
  7666                           
  7667 ;; *************** function _SYSTEM_Initialize *****************
  7668 ;; Defined at:
  7669 ;;		line 128 in file "mcc_generated_files/mcc.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;		None
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;Total ram usage:        0 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:   10
  7690 ;; This function calls:
  7691 ;;		_ADC_Initialize
  7692 ;;		_EXT_INT_Initialize
  7693 ;;		_INTERRUPT_Initialize
  7694 ;;		_OSCILLATOR_Initialize
  7695 ;;		_PIN_MANAGER_Initialize
  7696 ;;		_TMR0_Initialize
  7697 ;; This function is called by:
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text39
  7703  002CB0                     __ptext39:
  7704                           	opt stack 0
  7705  002CB0                     _SYSTEM_Initialize:
  7706                           	opt stack 20
  7707                           
  7708                           ;mcc.c: 130: INTERRUPT_Initialize();
  7709                           
  7710                           ;incstack = 0
  7711  002CB0  EC02  F017         	call	_INTERRUPT_Initialize	;wreg free
  7712                           
  7713                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  7714  002CB4  ECEC  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  7715                           
  7716                           ;mcc.c: 132: OSCILLATOR_Initialize();
  7717  002CB8  EC9D  F016         	call	_OSCILLATOR_Initialize	;wreg free
  7718                           
  7719                           ;mcc.c: 133: EXT_INT_Initialize();
  7720  002CBC  EC65  F016         	call	_EXT_INT_Initialize	;wreg free
  7721                           
  7722                           ;mcc.c: 134: ADC_Initialize();
  7723  002CC0  EC88  F016         	call	_ADC_Initialize	;wreg free
  7724                           
  7725                           ;mcc.c: 135: TMR0_Initialize();
  7726  002CC4  EC41  F015         	call	_TMR0_Initialize	;wreg free
  7727  002CC8  0012               	return		;funcret
  7728  002CCA                     __end_of_SYSTEM_Initialize:
  7729                           	opt stack 0
  7730                           tblptru	equ	0xFF8
  7731                           tblptrh	equ	0xFF7
  7732                           tblptrl	equ	0xFF6
  7733                           tablat	equ	0xFF5
  7734                           prodh	equ	0xFF4
  7735                           prodl	equ	0xFF3
  7736                           intcon	equ	0xFF2
  7737                           postinc0	equ	0xFEE
  7738                           wreg	equ	0xFE8
  7739                           indf1	equ	0xFE7
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           indf2	equ	0xFDF
  7744                           fsr2h	equ	0xFDA
  7745                           fsr2l	equ	0xFD9
  7746                           status	equ	0xFD8
  7747                           
  7748 ;; *************** function _TMR0_Initialize *****************
  7749 ;; Defined at:
  7750 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    9
  7771 ;; This function calls:
  7772 ;;		_TMR0_SetInterruptHandler
  7773 ;; This function is called by:
  7774 ;;		_SYSTEM_Initialize
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text40
  7779  002A82                     __ptext40:
  7780                           	opt stack 0
  7781  002A82                     _TMR0_Initialize:
  7782                           	opt stack 20
  7783                           
  7784                           ;tmr0.c: 71: TMR0H = 0x00;
  7785                           
  7786                           ;incstack = 0
  7787  002A82  0E00               	movlw	0
  7788  002A84  6ED7               	movwf	4055,c	;volatile
  7789                           
  7790                           ;tmr0.c: 74: TMR0L = 0xF6;
  7791  002A86  0EF6               	movlw	246
  7792  002A88  6ED6               	movwf	4054,c	;volatile
  7793                           
  7794                           ;tmr0.c: 78: timer0ReloadVal = 246;
  7795  002A8A  0EF6               	movlw	246
  7796  002A8C  0100               	movlb	0	; () banked
  7797  002A8E  6F9F               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  7801  002A90  94F2               	bcf	intcon,2,c	;volatile
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  7805  002A92  8AF2               	bsf	intcon,5,c	;volatile
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  7809  002A94  0E0A               	movlw	low _TMR0_DefaultInterruptHandler
  7810  002A96  6FBD               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  7811  002A98  0E2E               	movlw	high _TMR0_DefaultInterruptHandler
  7812  002A9A  6FBE               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7813  002A9C  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  7814  002A9E  6FBF               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7815  002AA0  ECEA  F016         	call	_TMR0_SetInterruptHandler	;wreg free
  7816                           
  7817                           ;tmr0.c: 90: T0CON = 0xD7;
  7818  002AA4  0ED7               	movlw	215
  7819  002AA6  6ED5               	movwf	4053,c	;volatile
  7820  002AA8  0012               	return		;funcret
  7821  002AAA                     __end_of_TMR0_Initialize:
  7822                           	opt stack 0
  7823                           tblptru	equ	0xFF8
  7824                           tblptrh	equ	0xFF7
  7825                           tblptrl	equ	0xFF6
  7826                           tablat	equ	0xFF5
  7827                           prodh	equ	0xFF4
  7828                           prodl	equ	0xFF3
  7829                           intcon	equ	0xFF2
  7830                           postinc0	equ	0xFEE
  7831                           wreg	equ	0xFE8
  7832                           indf1	equ	0xFE7
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           indf2	equ	0xFDF
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _TMR0_SetInterruptHandler *****************
  7842 ;; Defined at:
  7843 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  InterruptHan    3   21[BANK0 ] PTR FTN()void 
  7846 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      void 
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7858 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;Total ram usage:        3 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; Hardware stack levels required when called:    8
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_TMR0_Initialize
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text41
  7873  002DD4                     __ptext41:
  7874                           	opt stack 0
  7875  002DD4                     _TMR0_SetInterruptHandler:
  7876                           	opt stack 20
  7877                           
  7878                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
  7879                           
  7880                           ;incstack = 0
  7881  002DD4  C0BD  F073         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7882  002DD8  C0BE  F074         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7883  002DDC  C0BF  F075         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  7884  002DE0  0012               	return		;funcret
  7885  002DE2                     __end_of_TMR0_SetInterruptHandler:
  7886                           	opt stack 0
  7887                           tblptru	equ	0xFF8
  7888                           tblptrh	equ	0xFF7
  7889                           tblptrl	equ	0xFF6
  7890                           tablat	equ	0xFF5
  7891                           prodh	equ	0xFF4
  7892                           prodl	equ	0xFF3
  7893                           intcon	equ	0xFF2
  7894                           postinc0	equ	0xFEE
  7895                           wreg	equ	0xFE8
  7896                           indf1	equ	0xFE7
  7897                           postdec1	equ	0xFE5
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           indf2	equ	0xFDF
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function _PIN_MANAGER_Initialize *****************
  7906 ;; Defined at:
  7907 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;		None
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7925 ;;Total ram usage:        0 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    8
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_SYSTEM_Initialize
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text42
  7936  0027D8                     __ptext42:
  7937                           	opt stack 0
  7938  0027D8                     _PIN_MANAGER_Initialize:
  7939                           	opt stack 21
  7940                           
  7941                           ;pin_manager.c: 57: LATE = 0x00;
  7942                           
  7943                           ;incstack = 0
  7944  0027D8  0E00               	movlw	0
  7945  0027DA  6E8D               	movwf	3981,c	;volatile
  7946                           
  7947                           ;pin_manager.c: 58: LATD = 0x00;
  7948  0027DC  0E00               	movlw	0
  7949  0027DE  6E8C               	movwf	3980,c	;volatile
  7950                           
  7951                           ;pin_manager.c: 59: LATA = 0x0F;
  7952  0027E0  0E0F               	movlw	15
  7953  0027E2  6E89               	movwf	3977,c	;volatile
  7954                           
  7955                           ;pin_manager.c: 60: LATF = 0x0A;
  7956  0027E4  0E0A               	movlw	10
  7957  0027E6  6E8E               	movwf	3982,c	;volatile
  7958                           
  7959                           ;pin_manager.c: 61: LATB = 0x00;
  7960  0027E8  0E00               	movlw	0
  7961  0027EA  6E8A               	movwf	3978,c	;volatile
  7962                           
  7963                           ;pin_manager.c: 62: LATG = 0x00;
  7964  0027EC  0E00               	movlw	0
  7965  0027EE  6E8F               	movwf	3983,c	;volatile
  7966                           
  7967                           ;pin_manager.c: 63: LATC = 0x03;
  7968  0027F0  0E03               	movlw	3
  7969  0027F2  6E8B               	movwf	3979,c	;volatile
  7970                           
  7971                           ;pin_manager.c: 68: TRISE = 0xFF;
  7972  0027F4  6896               	setf	3990,c	;volatile
  7973                           
  7974                           ;pin_manager.c: 69: TRISF = 0xFA;
  7975  0027F6  0EFA               	movlw	250
  7976  0027F8  6E97               	movwf	3991,c	;volatile
  7977                           
  7978                           ;pin_manager.c: 70: TRISA = 0xC0;
  7979  0027FA  0EC0               	movlw	192
  7980  0027FC  6E92               	movwf	3986,c	;volatile
  7981                           
  7982                           ;pin_manager.c: 71: TRISG = 0x1F;
  7983  0027FE  0E1F               	movlw	31
  7984  002800  6E98               	movwf	3992,c	;volatile
  7985                           
  7986                           ;pin_manager.c: 72: TRISB = 0xFF;
  7987  002802  6893               	setf	3987,c	;volatile
  7988                           
  7989                           ;pin_manager.c: 73: TRISC = 0xFC;
  7990  002804  0EFC               	movlw	252
  7991  002806  6E94               	movwf	3988,c	;volatile
  7992                           
  7993                           ;pin_manager.c: 74: TRISD = 0xFF;
  7994  002808  6895               	setf	3989,c	;volatile
  7995                           
  7996                           ;pin_manager.c: 79: ANCON0 = 0x60;
  7997  00280A  0E60               	movlw	96
  7998  00280C  010F               	movlb	15	; () banked
  7999  00280E  6F25               	movwf	37,b	;volatile
  8000                           
  8001                           ;pin_manager.c: 80: ANCON1 = 0x0E;
  8002  002810  0E0E               	movlw	14
  8003  002812  6F24               	movwf	36,b	;volatile
  8004                           
  8005                           ;pin_manager.c: 81: ANCON2 = 0x0F;
  8006  002814  0E0F               	movlw	15
  8007  002816  6F23               	movwf	35,b	;volatile
  8008                           
  8009                           ; BSR set to: 15
  8010  002818  0012               	return		;funcret
  8011  00281A                     __end_of_PIN_MANAGER_Initialize:
  8012                           	opt stack 0
  8013                           tblptru	equ	0xFF8
  8014                           tblptrh	equ	0xFF7
  8015                           tblptrl	equ	0xFF6
  8016                           tablat	equ	0xFF5
  8017                           prodh	equ	0xFF4
  8018                           prodl	equ	0xFF3
  8019                           intcon	equ	0xFF2
  8020                           postinc0	equ	0xFEE
  8021                           wreg	equ	0xFE8
  8022                           indf1	equ	0xFE7
  8023                           postdec1	equ	0xFE5
  8024                           fsr1h	equ	0xFE2
  8025                           fsr1l	equ	0xFE1
  8026                           indf2	equ	0xFDF
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _OSCILLATOR_Initialize *****************
  8032 ;; Defined at:
  8033 ;;		line 138 in file "mcc_generated_files/mcc.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    8
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_SYSTEM_Initialize
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text43
  8062  002D3A                     __ptext43:
  8063                           	opt stack 0
  8064  002D3A                     _OSCILLATOR_Initialize:
  8065                           	opt stack 21
  8066                           
  8067                           ;mcc.c: 141: OSCCON = 0x60;
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;incstack = 0
  8071  002D3A  0E60               	movlw	96
  8072  002D3C  6ED3               	movwf	4051,c	;volatile
  8073                           
  8074                           ;mcc.c: 143: OSCCON2 = 0x00;
  8075  002D3E  0E00               	movlw	0
  8076  002D40  6E64               	movwf	3940,c	;volatile
  8077                           
  8078                           ;mcc.c: 145: OSCTUNE = 0x00;
  8079  002D42  0E00               	movlw	0
  8080  002D44  6E9B               	movwf	3995,c	;volatile
  8081                           
  8082                           ;mcc.c: 147: REFOCON = 0x00;
  8083  002D46  0E00               	movlw	0
  8084  002D48  010F               	movlb	15	; () banked
  8085  002D4A  6F2A               	movwf	42,b	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088  002D4C  0012               	return		;funcret
  8089  002D4E                     __end_of_OSCILLATOR_Initialize:
  8090                           	opt stack 0
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           prodh	equ	0xFF4
  8096                           prodl	equ	0xFF3
  8097                           intcon	equ	0xFF2
  8098                           postinc0	equ	0xFEE
  8099                           wreg	equ	0xFE8
  8100                           indf1	equ	0xFE7
  8101                           postdec1	equ	0xFE5
  8102                           fsr1h	equ	0xFE2
  8103                           fsr1l	equ	0xFE1
  8104                           indf2	equ	0xFDF
  8105                           fsr2h	equ	0xFDA
  8106                           fsr2l	equ	0xFD9
  8107                           status	equ	0xFD8
  8108                           
  8109 ;; *************** function _INTERRUPT_Initialize *****************
  8110 ;; Defined at:
  8111 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;		None
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		None
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;Total ram usage:        0 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    8
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_SYSTEM_Initialize
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text44
  8140  002E04                     __ptext44:
  8141                           	opt stack 0
  8142  002E04                     _INTERRUPT_Initialize:
  8143                           	opt stack 21
  8144                           
  8145                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  8146                           
  8147                           ; BSR set to: 15
  8148                           ;incstack = 0
  8149  002E04  8ED0               	bsf	4048,7,c	;volatile
  8150                           
  8151                           ;interrupt_manager.c: 62: INTCON2bits.TMR0IP = 0;
  8152  002E06  94F1               	bcf	intcon2,2,c	;volatile
  8153  002E08  0012               	return		;funcret
  8154  002E0A                     __end_of_INTERRUPT_Initialize:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           intcon	equ	0xFF2
  8163                           intcon2	equ	0xFF1
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           indf1	equ	0xFE7
  8167                           postdec1	equ	0xFE5
  8168                           fsr1h	equ	0xFE2
  8169                           fsr1l	equ	0xFE1
  8170                           indf2	equ	0xFDF
  8171                           fsr2h	equ	0xFDA
  8172                           fsr2l	equ	0xFD9
  8173                           status	equ	0xFD8
  8174                           
  8175 ;; *************** function _EXT_INT_Initialize *****************
  8176 ;; Defined at:
  8177 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    9
  8198 ;; This function calls:
  8199 ;;		_INT0_SetInterruptHandler
  8200 ;; This function is called by:
  8201 ;;		_SYSTEM_Initialize
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text45
  8206  002CCA                     __ptext45:
  8207                           	opt stack 0
  8208  002CCA                     _EXT_INT_Initialize:
  8209                           	opt stack 20
  8210                           
  8211                           ;ext_int.c: 64: (INTCONbits.INT0IF = 0);
  8212                           
  8213                           ;incstack = 0
  8214  002CCA  92F2               	bcf	intcon,1,c	;volatile
  8215                           
  8216                           ;ext_int.c: 65: (INTCON2bits.INTEDG0 = 0);
  8217  002CCC  9CF1               	bcf	intcon2,6,c	;volatile
  8218                           
  8219                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  8220  002CCE  0E0C               	movlw	low _INT0_DefaultInterruptHandler
  8221  002CD0  0100               	movlb	0	; () banked
  8222  002CD2  6FBD               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  8223  002CD4  0E2E               	movlw	high _INT0_DefaultInterruptHandler
  8224  002CD6  6FBE               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8225  002CD8  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  8226  002CDA  6FBF               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8227  002CDC  ECF1  F016         	call	_INT0_SetInterruptHandler	;wreg free
  8228                           
  8229                           ;ext_int.c: 68: (INTCONbits.INT0IE = 1);
  8230  002CE0  88F2               	bsf	intcon,4,c	;volatile
  8231  002CE2  0012               	return		;funcret
  8232  002CE4                     __end_of_EXT_INT_Initialize:
  8233                           	opt stack 0
  8234                           tblptru	equ	0xFF8
  8235                           tblptrh	equ	0xFF7
  8236                           tblptrl	equ	0xFF6
  8237                           tablat	equ	0xFF5
  8238                           prodh	equ	0xFF4
  8239                           prodl	equ	0xFF3
  8240                           intcon	equ	0xFF2
  8241                           intcon2	equ	0xFF1
  8242                           postinc0	equ	0xFEE
  8243                           wreg	equ	0xFE8
  8244                           indf1	equ	0xFE7
  8245                           postdec1	equ	0xFE5
  8246                           fsr1h	equ	0xFE2
  8247                           fsr1l	equ	0xFE1
  8248                           indf2	equ	0xFDF
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function _INT0_SetInterruptHandler *****************
  8254 ;; Defined at:
  8255 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  InterruptHan    3   21[BANK0 ] PTR FTN()void 
  8258 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8270 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;Total ram usage:        3 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    8
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_EXT_INT_Initialize
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text46
  8285  002DE2                     __ptext46:
  8286                           	opt stack 0
  8287  002DE2                     _INT0_SetInterruptHandler:
  8288                           	opt stack 20
  8289                           
  8290                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
  8291                           
  8292                           ;incstack = 0
  8293  002DE2  C0BD  F076         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8294  002DE6  C0BE  F077         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8295  002DEA  C0BF  F078         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  8296  002DEE  0012               	return		;funcret
  8297  002DF0                     __end_of_INT0_SetInterruptHandler:
  8298                           	opt stack 0
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           intcon	equ	0xFF2
  8306                           intcon2	equ	0xFF1
  8307                           postinc0	equ	0xFEE
  8308                           wreg	equ	0xFE8
  8309                           indf1	equ	0xFE7
  8310                           postdec1	equ	0xFE5
  8311                           fsr1h	equ	0xFE2
  8312                           fsr1l	equ	0xFE1
  8313                           indf2	equ	0xFDF
  8314                           fsr2h	equ	0xFDA
  8315                           fsr2l	equ	0xFD9
  8316                           status	equ	0xFD8
  8317                           
  8318 ;; *************** function _ADC_Initialize *****************
  8319 ;; Defined at:
  8320 ;;		line 60 in file "mcc_generated_files/adc.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    8
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_SYSTEM_Initialize
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text47
  8349  002D10                     __ptext47:
  8350                           	opt stack 0
  8351  002D10                     _ADC_Initialize:
  8352                           	opt stack 21
  8353                           
  8354                           ;adc.c: 65: ADCON0 = 0x19;
  8355                           
  8356                           ;incstack = 0
  8357  002D10  0E19               	movlw	25
  8358  002D12  6EC2               	movwf	4034,c	;volatile
  8359                           
  8360                           ;adc.c: 68: ADCON1 = 0x00;
  8361  002D14  0E00               	movlw	0
  8362  002D16  6EC1               	movwf	4033,c	;volatile
  8363                           
  8364                           ;adc.c: 71: ADCON2 = 0xA5;
  8365  002D18  0EA5               	movlw	165
  8366  002D1A  6EC0               	movwf	4032,c	;volatile
  8367                           
  8368                           ;adc.c: 74: ADRESH = 0x00;
  8369  002D1C  0E00               	movlw	0
  8370  002D1E  6EC4               	movwf	4036,c	;volatile
  8371                           
  8372                           ;adc.c: 77: ADRESL = 0x00;
  8373  002D20  0E00               	movlw	0
  8374  002D22  6EC3               	movwf	4035,c	;volatile
  8375  002D24  0012               	return		;funcret
  8376  002D26                     __end_of_ADC_Initialize:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397 ;; *************** function _Read_b_eep *****************
  8398 ;; Defined at:
  8399 ;;		line 544 in file "zigbee.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  badd            2   21[BANK0 ] unsigned int 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      unsigned char 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;Total ram usage:        2 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    8
  8420 ;; This function calls:
  8421 ;;		Nothing
  8422 ;; This function is called by:
  8423 ;;		_main
  8424 ;;		_Store_ID
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text48
  8429  002D84                     __ptext48:
  8430                           	opt stack 0
  8431  002D84                     _Read_b_eep:
  8432                           	opt stack 22
  8433                           
  8434                           ;zigbee.c: 546: EEADR = (badd & 0x0FF);
  8435                           
  8436                           ;incstack = 0
  8437  002D84  C0BD  FF62         	movff	Read_b_eep@badd,3938	;volatile
  8438                           
  8439                           ;zigbee.c: 547: EECON1bits.CFGS = 0;
  8440  002D88  9C7F               	bcf	3967,6,c	;volsfr
  8441                           
  8442                           ;zigbee.c: 548: EECON1bits.EEPGD = 0;
  8443  002D8A  9E7F               	bcf	3967,7,c	;volsfr
  8444                           
  8445                           ;zigbee.c: 549: EECON1bits.RD = 1;
  8446  002D8C  807F               	bsf	3967,0,c	;volsfr
  8447                           
  8448                           ;zigbee.c: 550: __nop();
  8449  002D8E  F000               	nop	
  8450                           
  8451                           ;zigbee.c: 551: __nop();
  8452  002D90  F000               	nop	
  8453                           
  8454                           ;zigbee.c: 552: return (EEDATA);
  8455  002D92  5061               	movf	3937,w,c	;volatile
  8456  002D94  0012               	return	
  8457  002D96                     __end_of_Read_b_eep:
  8458                           	opt stack 0
  8459                           tblptru	equ	0xFF8
  8460                           tblptrh	equ	0xFF7
  8461                           tblptrl	equ	0xFF6
  8462                           tablat	equ	0xFF5
  8463                           prodh	equ	0xFF4
  8464                           prodl	equ	0xFF3
  8465                           intcon	equ	0xFF2
  8466                           intcon2	equ	0xFF1
  8467                           postinc0	equ	0xFEE
  8468                           wreg	equ	0xFE8
  8469                           indf1	equ	0xFE7
  8470                           postdec1	equ	0xFE5
  8471                           fsr1h	equ	0xFE2
  8472                           fsr1l	equ	0xFE1
  8473                           indf2	equ	0xFDF
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function _InitSPI *****************
  8479 ;; Defined at:
  8480 ;;		line 441 in file "zigbee.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, status,2, status,0, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    9
  8501 ;; This function calls:
  8502 ;;		_delay
  8503 ;; This function is called by:
  8504 ;;		_main
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text49
  8509  002B8C                     __ptext49:
  8510                           	opt stack 0
  8511  002B8C                     _InitSPI:
  8512                           	opt stack 21
  8513                           
  8514                           ;zigbee.c: 442: SSP1CON1bits.SSPM0 = 0;
  8515                           
  8516                           ;incstack = 0
  8517  002B8C  90C6               	bcf	4038,0,c	;volatile
  8518                           
  8519                           ;zigbee.c: 443: SSP1CON1bits.SSPM1 = 0;
  8520  002B8E  92C6               	bcf	4038,1,c	;volatile
  8521                           
  8522                           ;zigbee.c: 444: SSP1CON1bits.SSPM2 = 0;
  8523  002B90  94C6               	bcf	4038,2,c	;volatile
  8524                           
  8525                           ;zigbee.c: 445: SSP1CON1bits.SSPM3 = 0;
  8526  002B92  96C6               	bcf	4038,3,c	;volatile
  8527                           
  8528                           ;zigbee.c: 447: TRISCbits.TRISC5 = 0;
  8529  002B94  9A94               	bcf	3988,5,c	;volatile
  8530                           
  8531                           ;zigbee.c: 448: TRISCbits.TRISC3 = 0;
  8532  002B96  9694               	bcf	3988,3,c	;volatile
  8533                           
  8534                           ;zigbee.c: 449: SSP1CON1bits.SSPEN = 1;
  8535  002B98  8AC6               	bsf	4038,5,c	;volatile
  8536                           
  8537                           ;zigbee.c: 452: SSP1STATbits.SMP = 1;
  8538  002B9A  8EC7               	bsf	4039,7,c	;volatile
  8539                           
  8540                           ;zigbee.c: 453: SSP1CON1bits.CKP = 0;
  8541  002B9C  98C6               	bcf	4038,4,c	;volatile
  8542                           
  8543                           ;zigbee.c: 454: SSP1STATbits.CKE = 1;
  8544  002B9E  8CC7               	bsf	4039,6,c	;volatile
  8545                           
  8546                           ;zigbee.c: 455: delay(10);
  8547  002BA0  0E00               	movlw	0
  8548  002BA2  0100               	movlb	0	; () banked
  8549  002BA4  6FBE               	movwf	(delay@dly+1)& (0+255),b
  8550  002BA6  0E0A               	movlw	10
  8551  002BA8  6FBD               	movwf	delay@dly& (0+255),b
  8552  002BAA  EC1E  F016         	call	_delay	;wreg free
  8553  002BAE  0012               	return		;funcret
  8554  002BB0                     __end_of_InitSPI:
  8555                           	opt stack 0
  8556                           tblptru	equ	0xFF8
  8557                           tblptrh	equ	0xFF7
  8558                           tblptrl	equ	0xFF6
  8559                           tablat	equ	0xFF5
  8560                           prodh	equ	0xFF4
  8561                           prodl	equ	0xFF3
  8562                           intcon	equ	0xFF2
  8563                           intcon2	equ	0xFF1
  8564                           postinc0	equ	0xFEE
  8565                           wreg	equ	0xFE8
  8566                           indf1	equ	0xFE7
  8567                           postdec1	equ	0xFE5
  8568                           fsr1h	equ	0xFE2
  8569                           fsr1l	equ	0xFE1
  8570                           indf2	equ	0xFDF
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function _delay *****************
  8576 ;; Defined at:
  8577 ;;		line 471 in file "zigbee.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  dly             2   21[BANK0 ] unsigned int 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  l               2   23[BANK0 ] unsigned int 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;Total ram usage:        4 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    8
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_InitSPI
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text50
  8606  002C3C                     __ptext50:
  8607                           	opt stack 0
  8608  002C3C                     _delay:
  8609                           	opt stack 21
  8610                           
  8611                           ;zigbee.c: 472: unsigned int l;
  8612                           ;zigbee.c: 473: for(l=0;l<dly;l++);
  8613                           
  8614                           ;incstack = 0
  8615  002C3C  0E00               	movlw	0
  8616  002C3E  0100               	movlb	0	; () banked
  8617  002C40  6FC0               	movwf	(delay@l+1)& (0+255),b
  8618  002C42  0E00               	movlw	0
  8619  002C44  6FBF               	movwf	delay@l& (0+255),b
  8620  002C46  D002               	goto	l541
  8621  002C48                     
  8622                           ; BSR set to: 0
  8623                           
  8624                           ; BSR set to: 0
  8625  002C48  4BBF               	infsnz	delay@l& (0+255),f,b
  8626  002C4A  2BC0               	incf	(delay@l+1)& (0+255),f,b
  8627  002C4C                     l541:
  8628                           
  8629                           ; BSR set to: 0
  8630                           
  8631                           ; BSR set to: 0
  8632  002C4C  51BD               	movf	delay@dly& (0+255),w,b
  8633  002C4E  5DBF               	subwf	delay@l& (0+255),w,b
  8634  002C50  51BE               	movf	(delay@dly+1)& (0+255),w,b
  8635  002C52  59C0               	subwfb	(delay@l+1)& (0+255),w,b
  8636  002C54  B0D8               	btfsc	status,0,c
  8637  002C56  0012               	return	
  8638  002C58  D7F7               	goto	l542
  8639  002C5A                     __end_of_delay:
  8640                           	opt stack 0
  8641                           tblptru	equ	0xFF8
  8642                           tblptrh	equ	0xFF7
  8643                           tblptrl	equ	0xFF6
  8644                           tablat	equ	0xFF5
  8645                           prodh	equ	0xFF4
  8646                           prodl	equ	0xFF3
  8647                           intcon	equ	0xFF2
  8648                           intcon2	equ	0xFF1
  8649                           postinc0	equ	0xFEE
  8650                           wreg	equ	0xFE8
  8651                           indf1	equ	0xFE7
  8652                           postdec1	equ	0xFE5
  8653                           fsr1h	equ	0xFE2
  8654                           fsr1l	equ	0xFE1
  8655                           indf2	equ	0xFDF
  8656                           fsr2h	equ	0xFDA
  8657                           fsr2l	equ	0xFD9
  8658                           status	equ	0xFD8
  8659                           
  8660 ;; *************** function _Clear_Zigbee_Store_Buffer *****************
  8661 ;; Defined at:
  8662 ;;		line 332 in file "07_May_Motion+LDR_Main.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;		None
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  d               1   21[BANK0 ] unsigned char 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;Total ram usage:        1 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    8
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_main
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text51
  8691  002B1E                     __ptext51:
  8692                           	opt stack 0
  8693  002B1E                     _Clear_Zigbee_Store_Buffer:
  8694                           	opt stack 22
  8695                           
  8696                           ;07_May_Motion+LDR_Main.c: 333: unsigned char d;
  8697                           ;07_May_Motion+LDR_Main.c: 334: for(d=0;d<=5;d++){
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;incstack = 0
  8701  002B1E  0E00               	movlw	0
  8702  002B20  0100               	movlb	0	; () banked
  8703  002B22  6FBD               	movwf	Clear_Zigbee_Store_Buffer@d& (0+255),b
  8704  002B24                     l4698:
  8705                           
  8706                           ; BSR set to: 0
  8707  002B24  0E05               	movlw	5
  8708  002B26  65BD               	cpfsgt	Clear_Zigbee_Store_Buffer@d& (0+255),b
  8709  002B28  D001               	goto	l922
  8710  002B2A  0012               	return	
  8711  002B2C                     l922:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;07_May_Motion+LDR_Main.c: 335: ZigBee_Receive_Buffer[d] = 0x00;
  8715                           
  8716                           ; BSR set to: 0
  8717  002B2C  51BD               	movf	Clear_Zigbee_Store_Buffer@d& (0+255),w,b
  8718  002B2E  0D01               	mullw	1
  8719  002B30  0E60               	movlw	low _ZigBee_Receive_Buffer
  8720  002B32  24F3               	addwf	prodl,w,c
  8721  002B34  6ED9               	movwf	fsr2l,c
  8722  002B36  0E00               	movlw	high _ZigBee_Receive_Buffer
  8723  002B38  20F4               	addwfc	prodh,w,c
  8724  002B3A  6EDA               	movwf	fsr2h,c
  8725  002B3C  0E00               	movlw	0
  8726  002B3E  6EDF               	movwf	indf2,c
  8727                           
  8728                           ; BSR set to: 0
  8729  002B40  2BBD               	incf	Clear_Zigbee_Store_Buffer@d& (0+255),f,b
  8730  002B42  D7F0               	goto	l4698
  8731  002B44                     __end_of_Clear_Zigbee_Store_Buffer:
  8732                           	opt stack 0
  8733                           tblptru	equ	0xFF8
  8734                           tblptrh	equ	0xFF7
  8735                           tblptrl	equ	0xFF6
  8736                           tablat	equ	0xFF5
  8737                           prodh	equ	0xFF4
  8738                           prodl	equ	0xFF3
  8739                           intcon	equ	0xFF2
  8740                           intcon2	equ	0xFF1
  8741                           postinc0	equ	0xFEE
  8742                           wreg	equ	0xFE8
  8743                           indf1	equ	0xFE7
  8744                           postdec1	equ	0xFE5
  8745                           fsr1h	equ	0xFE2
  8746                           fsr1l	equ	0xFE1
  8747                           indf2	equ	0xFDF
  8748                           fsr2h	equ	0xFDA
  8749                           fsr2l	equ	0xFD9
  8750                           status	equ	0xFD8
  8751                           
  8752 ;; *************** function _Clear_Data *****************
  8753 ;; Defined at:
  8754 ;;		line 4 in file "zigbee.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  n               2   21[BANK0 ] unsigned int 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;Total ram usage:        2 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    8
  8775 ;; This function calls:
  8776 ;;		Nothing
  8777 ;; This function is called by:
  8778 ;;		_main
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text52
  8783  0028D4                     __ptext52:
  8784                           	opt stack 0
  8785  0028D4                     _Clear_Data:
  8786                           	opt stack 22
  8787                           
  8788                           ;zigbee.c: 5: unsigned int n=0;
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;incstack = 0
  8792  0028D4  0E00               	movlw	0
  8793  0028D6  0100               	movlb	0	; () banked
  8794  0028D8  6FBE               	movwf	(Clear_Data@n+1)& (0+255),b
  8795  0028DA  0E00               	movlw	0
  8796  0028DC  6FBD               	movwf	Clear_Data@n& (0+255),b
  8797                           
  8798                           ;zigbee.c: 6: for(n=0;n<=5;n++){
  8799  0028DE  0E00               	movlw	0
  8800  0028E0  6FBE               	movwf	(Clear_Data@n+1)& (0+255),b
  8801  0028E2  0E00               	movlw	0
  8802  0028E4  6FBD               	movwf	Clear_Data@n& (0+255),b
  8803  0028E6                     l4478:
  8804                           
  8805                           ; BSR set to: 0
  8806  0028E6  51BE               	movf	(Clear_Data@n+1)& (0+255),w,b
  8807  0028E8  E10F               	bnz	l387
  8808  0028EA  0E06               	movlw	6
  8809  0028EC  5DBD               	subwf	Clear_Data@n& (0+255),w,b
  8810  0028EE  B0D8               	btfsc	status,0,c
  8811  0028F0  0012               	return	
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;zigbee.c: 7: DATA_RX[n]=0;
  8815                           
  8816                           ; BSR set to: 0
  8817                           
  8818                           ; BSR set to: 0
  8819  0028F2  0EA0               	movlw	low _DATA_RX
  8820  0028F4  25BD               	addwf	Clear_Data@n& (0+255),w,b
  8821  0028F6  6ED9               	movwf	fsr2l,c
  8822  0028F8  0E00               	movlw	high _DATA_RX
  8823  0028FA  21BE               	addwfc	(Clear_Data@n+1)& (0+255),w,b
  8824  0028FC  6EDA               	movwf	fsr2h,c
  8825  0028FE  0E00               	movlw	0
  8826  002900  6EDF               	movwf	indf2,c
  8827                           
  8828                           ; BSR set to: 0
  8829  002902  4BBD               	infsnz	Clear_Data@n& (0+255),f,b
  8830  002904  2BBE               	incf	(Clear_Data@n+1)& (0+255),f,b
  8831  002906  D7EF               	goto	l4478
  8832  002908                     l387:
  8833                           
  8834                           ; BSR set to: 0
  8835  002908  0012               	return		;funcret
  8836  00290A                     __end_of_Clear_Data:
  8837                           	opt stack 0
  8838                           tblptru	equ	0xFF8
  8839                           tblptrh	equ	0xFF7
  8840                           tblptrl	equ	0xFF6
  8841                           tablat	equ	0xFF5
  8842                           prodh	equ	0xFF4
  8843                           prodl	equ	0xFF3
  8844                           intcon	equ	0xFF2
  8845                           intcon2	equ	0xFF1
  8846                           postinc0	equ	0xFEE
  8847                           wreg	equ	0xFE8
  8848                           indf1	equ	0xFE7
  8849                           postdec1	equ	0xFE5
  8850                           fsr1h	equ	0xFE2
  8851                           fsr1l	equ	0xFE1
  8852                           indf2	equ	0xFDF
  8853                           fsr2h	equ	0xFDA
  8854                           fsr2l	equ	0xFD9
  8855                           status	equ	0xFD8
  8856                           
  8857 ;; *************** function _ADC_GetConversion *****************
  8858 ;; Defined at:
  8859 ;;		line 106 in file "mcc_generated_files/adc.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  channel         1    wreg     enum E7387
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  channel         1   25[BANK0 ] enum E7387
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  2   21[BANK0 ] unsigned int 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;Total ram usage:        5 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    8
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_main
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text53
  8888  00290A                     __ptext53:
  8889                           	opt stack 0
  8890  00290A                     _ADC_GetConversion:
  8891                           	opt stack 22
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;incstack = 0
  8895                           ;ADC_GetConversion@channel stored from wreg
  8896  00290A  0100               	movlb	0	; () banked
  8897  00290C  6FC1               	movwf	ADC_GetConversion@channel& (0+255),b
  8898                           
  8899                           ;adc.c: 109: ADCON0bits.CHS = channel;
  8900  00290E  C0C1  F0BF         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8901  002912  0100               	movlb	0	; () banked
  8902  002914  47BF               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8903  002916  47BF               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8904  002918  50C2               	movf	4034,w,c	;volatile
  8905  00291A  19BF               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8906  00291C  0B83               	andlw	-125
  8907  00291E  19BF               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8908  002920  6EC2               	movwf	4034,c	;volatile
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;adc.c: 112: ADCON0bits.ADON = 1;
  8912  002922  80C2               	bsf	4034,0,c	;volatile
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;adc.c: 116: ADCON0bits.GO_nDONE = 1;
  8916  002924  82C2               	bsf	4034,1,c	;volatile
  8917  002926                     
  8918                           ; BSR set to: 0
  8919                           ;adc.c: 120: {
  8920  002926  B2C2               	btfsc	4034,1,c	;volatile
  8921  002928  D7FE               	goto	l101
  8922                           
  8923                           ;adc.c: 121: }
  8924                           ;adc.c: 124: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8925  00292A  50C4               	movf	4036,w,c	;volatile
  8926  00292C  0100               	movlb	0	; () banked
  8927  00292E  6FC0               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  8928  002930  6BBF               	clrf	??_ADC_GetConversion& (0+255),b
  8929  002932  50C3               	movf	4035,w,c	;volatile
  8930  002934  25BF               	addwf	??_ADC_GetConversion& (0+255),w,b
  8931  002936  6FBD               	movwf	?_ADC_GetConversion& (0+255),b
  8932  002938  0E00               	movlw	0
  8933  00293A  21C0               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  8934  00293C  6FBE               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  8935  00293E  0012               	return	
  8936  002940                     __end_of_ADC_GetConversion:
  8937                           	opt stack 0
  8938                           tblptru	equ	0xFF8
  8939                           tblptrh	equ	0xFF7
  8940                           tblptrl	equ	0xFF6
  8941                           tablat	equ	0xFF5
  8942                           prodh	equ	0xFF4
  8943                           prodl	equ	0xFF3
  8944                           intcon	equ	0xFF2
  8945                           intcon2	equ	0xFF1
  8946                           postinc0	equ	0xFEE
  8947                           wreg	equ	0xFE8
  8948                           indf1	equ	0xFE7
  8949                           postdec1	equ	0xFE5
  8950                           fsr1h	equ	0xFE2
  8951                           fsr1l	equ	0xFE1
  8952                           indf2	equ	0xFDF
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           
  8957 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  8958 ;; Defined at:
  8959 ;;		line 63 in file "07_May_Motion+LDR_Main.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;		None
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;		None
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      void 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;Total ram usage:       21 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    7
  8980 ;; This function calls:
  8981 ;;		_ScanInput
  8982 ;;		_TMR0_ISR
  8983 ;; This function is called by:
  8984 ;;		Interrupt level 1
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	intcodelo
  8989  000018                     __pintcodelo:
  8990                           	opt stack 0
  8991  000018                     _INTERRUPT_InterruptManagerLow:
  8992                           	opt stack 18
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;incstack = 0
  8996  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8997  00001A  CFD8 F0A8          	movff	status,??_INTERRUPT_InterruptManagerLow
  8998  00001E  CFE8 F0A9          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  8999  000022  CFE0 F0AA          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  9000  000026  CFFA F0AB          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  9001  00002A  CFFB F0AC          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  9002  00002E  CFE9 F0AD          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  9003  000032  CFEA F0AE          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  9004  000036  CFE1 F0AF          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  9005  00003A  CFE2 F0B0          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  9006  00003E  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  9007  000042  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  9008  000046  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  9009  00004A  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  9010  00004E  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  9011  000052  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  9012  000056  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  9013  00005A  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  9014  00005E  C04A  F0B9         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  9015  000062  C04B  F0BA         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  9016  000066  C04C  F0BB         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  9017  00006A  C04D  F0BC         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  9018                           
  9019                           ;07_May_Motion+LDR_Main.c: 66: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9020  00006E  BAF2               	btfsc	intcon,5,c	;volatile
  9021  000070  A4F2               	btfss	intcon,2,c	;volatile
  9022  000072  D02B               	goto	i1l855
  9023                           
  9024                           ;07_May_Motion+LDR_Main.c: 67: {
  9025                           ;07_May_Motion+LDR_Main.c: 68: tick++;
  9026  000074  2A03               	incf	_tick,f,c
  9027                           
  9028                           ;07_May_Motion+LDR_Main.c: 69: Time_start++;
  9029  000076  0100               	movlb	0	; () banked
  9030  000078  4B7D               	infsnz	_Time_start& (0+255),f,b
  9031  00007A  2B7E               	incf	(_Time_start+1)& (0+255),f,b
  9032                           
  9033                           ;07_May_Motion+LDR_Main.c: 70: Relay_On_Time++;
  9034  00007C  4B7B               	infsnz	_Relay_On_Time& (0+255),f,b
  9035  00007E  2B7C               	incf	(_Relay_On_Time+1)& (0+255),f,b
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;07_May_Motion+LDR_Main.c: 71: if(Relay_On_Time>=5000){
  9039  000080  0E88               	movlw	136
  9040  000082  5D7B               	subwf	_Relay_On_Time& (0+255),w,b
  9041  000084  0E13               	movlw	19
  9042  000086  597C               	subwfb	(_Relay_On_Time+1)& (0+255),w,b
  9043  000088  A0D8               	btfss	status,0,c
  9044  00008A  D006               	goto	i1l856
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;07_May_Motion+LDR_Main.c: 72: F_Relay_Time=1;
  9048  00008C  0E01               	movlw	1
  9049  00008E  6F92               	movwf	_F_Relay_Time& (0+255),b
  9050                           
  9051                           ;07_May_Motion+LDR_Main.c: 73: Relay_On_Time=0;
  9052  000090  0E00               	movlw	0
  9053  000092  6F7C               	movwf	(_Relay_On_Time+1)& (0+255),b
  9054  000094  0E00               	movlw	0
  9055  000096  6F7B               	movwf	_Relay_On_Time& (0+255),b
  9056  000098                     i1l856:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;07_May_Motion+LDR_Main.c: 74: }
  9060                           ;07_May_Motion+LDR_Main.c: 75: if( tick > 30 ){
  9061                           
  9062                           ; BSR set to: 0
  9063  000098  0E1E               	movlw	30
  9064  00009A  6403               	cpfsgt	_tick,c
  9065  00009C  D004               	goto	i1l857
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;07_May_Motion+LDR_Main.c: 76: ScanInput();
  9069  00009E  EC02  F015         	call	_ScanInput	;wreg free
  9070                           
  9071                           ;07_May_Motion+LDR_Main.c: 77: tick = 0;
  9072  0000A2  0E00               	movlw	0
  9073  0000A4  6E03               	movwf	_tick,c
  9074  0000A6                     i1l857:
  9075                           
  9076                           ;07_May_Motion+LDR_Main.c: 78: }
  9077                           ;07_May_Motion+LDR_Main.c: 79: if(F_BUZZER==1){
  9078  0000A6  0100               	movlb	0	; () banked
  9079  0000A8  0598               	decf	_F_BUZZER& (0+255),w,b
  9080  0000AA  A4D8               	btfss	status,2,c
  9081  0000AC  D00B               	goto	i1l859
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;07_May_Motion+LDR_Main.c: 80: tick2++;
  9085  0000AE  2A02               	incf	_tick2,f,c
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;07_May_Motion+LDR_Main.c: 81: PORTAbits.RA4=1;
  9089  0000B0  8880               	bsf	3968,4,c	;volatile
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;07_May_Motion+LDR_Main.c: 82: if(tick2>200){
  9093  0000B2  0EC8               	movlw	200
  9094  0000B4  6402               	cpfsgt	_tick2,c
  9095  0000B6  D006               	goto	i1l859
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;07_May_Motion+LDR_Main.c: 83: tick2=0;
  9099  0000B8  0E00               	movlw	0
  9100  0000BA  6E02               	movwf	_tick2,c
  9101                           
  9102                           ;07_May_Motion+LDR_Main.c: 84: F_BUZZER=0;
  9103  0000BC  0E00               	movlw	0
  9104  0000BE  6F98               	movwf	_F_BUZZER& (0+255),b
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;07_May_Motion+LDR_Main.c: 85: PORTAbits.RA4=0;
  9108  0000C0  9880               	bcf	3968,4,c	;volatile
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;07_May_Motion+LDR_Main.c: 86: __nop();
  9112  0000C2  F000               	nop	
  9113  0000C4                     i1l859:
  9114                           
  9115                           ;07_May_Motion+LDR_Main.c: 87: }
  9116                           ;07_May_Motion+LDR_Main.c: 88: }
  9117                           ;07_May_Motion+LDR_Main.c: 89: TMR0_ISR();
  9118  0000C4  EC55  F015         	call	_TMR0_ISR	;wreg free
  9119                           
  9120                           ;07_May_Motion+LDR_Main.c: 90: }
  9121  0000C8  D001               	goto	i1l860
  9122  0000CA                     i1l855:
  9123                           
  9124                           ;07_May_Motion+LDR_Main.c: 91: else
  9125                           ;07_May_Motion+LDR_Main.c: 92: {
  9126                           ;07_May_Motion+LDR_Main.c: 93: __nop();
  9127  0000CA  F000               	nop	
  9128  0000CC                     i1l860:
  9129  0000CC  C0BC  F04D         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
  9130  0000D0  C0BB  F04C         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
  9131  0000D4  C0BA  F04B         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
  9132  0000D8  C0B9  F04A         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
  9133  0000DC  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
  9134  0000E0  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
  9135  0000E4  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
  9136  0000E8  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
  9137  0000EC  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
  9138  0000F0  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
  9139  0000F4  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
  9140  0000F8  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
  9141  0000FC  C0B0  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
  9142  000100  C0AF  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
  9143  000104  C0AE  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
  9144  000108  C0AD  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
  9145  00010C  C0AC  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  9146  000110  C0AB  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  9147  000114  C0AA  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  9148  000118  C0A9  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  9149  00011C  C0A8  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  9150  000120  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9151  000122  0010               	retfie	
  9152  000124                     __end_of_INTERRUPT_InterruptManagerLow:
  9153                           	opt stack 0
  9154                           pclatu	equ	0xFFB
  9155                           pclath	equ	0xFFA
  9156                           tblptru	equ	0xFF8
  9157                           tblptrh	equ	0xFF7
  9158                           tblptrl	equ	0xFF6
  9159                           tablat	equ	0xFF5
  9160                           prodh	equ	0xFF4
  9161                           prodl	equ	0xFF3
  9162                           intcon	equ	0xFF2
  9163                           intcon2	equ	0xFF1
  9164                           postinc0	equ	0xFEE
  9165                           fsr0h	equ	0xFEA
  9166                           fsr0l	equ	0xFE9
  9167                           wreg	equ	0xFE8
  9168                           indf1	equ	0xFE7
  9169                           postdec1	equ	0xFE5
  9170                           fsr1h	equ	0xFE2
  9171                           fsr1l	equ	0xFE1
  9172                           bsr	equ	0xFE0
  9173                           indf2	equ	0xFDF
  9174                           fsr2h	equ	0xFDA
  9175                           fsr2l	equ	0xFD9
  9176                           status	equ	0xFD8
  9177                           
  9178 ;; *************** function _TMR0_ISR *****************
  9179 ;; Defined at:
  9180 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;		None
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  1    wreg      void 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;Total ram usage:        0 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    6
  9201 ;; This function calls:
  9202 ;;		_TMR0_CallBack
  9203 ;; This function is called by:
  9204 ;;		_INTERRUPT_InterruptManagerLow
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text55
  9209  002AAA                     __ptext55:
  9210                           	opt stack 0
  9211  002AAA                     _TMR0_ISR:
  9212                           	opt stack 18
  9213                           
  9214                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
  9215                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  9216                           
  9217                           ;incstack = 0
  9218  002AAA  94F2               	bcf	intcon,2,c	;volatile
  9219                           
  9220                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  9221  002AAC  C09F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  9222                           
  9223                           ;tmr0.c: 139: if (++CountCallBack >= 2)
  9224  002AB0  0100               	movlb	0	; () banked
  9225  002AB2  4B8B               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  9226  002AB4  2B8C               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9227  002AB6  518C               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9228  002AB8  E104               	bnz	i1u484_20
  9229  002ABA  0E02               	movlw	2
  9230  002ABC  5D8B               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  9231  002ABE  A0D8               	btfss	status,0,c
  9232  002AC0  0012               	return	
  9233  002AC2                     i1u484_20:
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;tmr0.c: 140: {
  9237                           ;tmr0.c: 142: TMR0_CallBack();
  9238  002AC2  ECD8  F015         	call	_TMR0_CallBack	;wreg free
  9239                           
  9240                           ;tmr0.c: 145: CountCallBack = 0;
  9241  002AC6  0E00               	movlw	0
  9242  002AC8  0100               	movlb	0	; () banked
  9243  002ACA  6F8C               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  9244  002ACC  0E00               	movlw	0
  9245  002ACE  6F8B               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  9246  002AD0  0012               	return	
  9247  002AD2                     __end_of_TMR0_ISR:
  9248                           	opt stack 0
  9249                           pclatu	equ	0xFFB
  9250                           pclath	equ	0xFFA
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           intcon	equ	0xFF2
  9258                           intcon2	equ	0xFF1
  9259                           postinc0	equ	0xFEE
  9260                           fsr0h	equ	0xFEA
  9261                           fsr0l	equ	0xFE9
  9262                           wreg	equ	0xFE8
  9263                           indf1	equ	0xFE7
  9264                           postdec1	equ	0xFE5
  9265                           fsr1h	equ	0xFE2
  9266                           fsr1l	equ	0xFE1
  9267                           bsr	equ	0xFE0
  9268                           indf2	equ	0xFDF
  9269                           fsr2h	equ	0xFDA
  9270                           fsr2l	equ	0xFD9
  9271                           status	equ	0xFD8
  9272                           
  9273 ;; *************** function _TMR0_CallBack *****************
  9274 ;; Defined at:
  9275 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    5
  9296 ;; This function calls:
  9297 ;;		Absolute function
  9298 ;;		_TMR0_DefaultInterruptHandler
  9299 ;; This function is called by:
  9300 ;;		_TMR0_ISR
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text56
  9305  002BB0                     __ptext56:
  9306                           	opt stack 0
  9307  002BB0                     _TMR0_CallBack:
  9308                           	opt stack 18
  9309                           
  9310                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;incstack = 0
  9314  002BB0  0100               	movlb	0	; () banked
  9315  002BB2  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9316  002BB4  1174               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9317  002BB6  1175               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9318  002BB8  B4D8               	btfsc	status,2,c
  9319  002BBA  0012               	return	
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;tmr0.c: 156: {
  9323                           ;tmr0.c: 157: TMR0_InterruptHandler();
  9324  002BBC  D801               	call	i1u483_28
  9325  002BBE  0012               	return	
  9326  002BC0                     i1u483_28:
  9327  002BC0  0005               	push	
  9328  002BC2  6EFA               	movwf	pclath,c
  9329  002BC4  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9330  002BC6  6EFD               	movwf	tosl,c
  9331  002BC8  5174               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9332  002BCA  6EFE               	movwf	tosh,c
  9333  002BCC  5175               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9334  002BCE  6EFF               	movwf	tosu,c
  9335  002BD0  50FA               	movf	pclath,w,c
  9336  002BD2  0012               	return		;indir
  9337  002BD4                     __end_of_TMR0_CallBack:
  9338                           	opt stack 0
  9339                           tosu	equ	0xFFF
  9340                           tosh	equ	0xFFE
  9341                           tosl	equ	0xFFD
  9342                           pclatu	equ	0xFFB
  9343                           pclath	equ	0xFFA
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon	equ	0xFF2
  9351                           intcon2	equ	0xFF1
  9352                           postinc0	equ	0xFEE
  9353                           fsr0h	equ	0xFEA
  9354                           fsr0l	equ	0xFE9
  9355                           wreg	equ	0xFE8
  9356                           indf1	equ	0xFE7
  9357                           postdec1	equ	0xFE5
  9358                           fsr1h	equ	0xFE2
  9359                           fsr1l	equ	0xFE1
  9360                           bsr	equ	0xFE0
  9361                           indf2	equ	0xFDF
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9367 ;; Defined at:
  9368 ;;		line 165 in file "mcc_generated_files/tmr0.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		None
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    4
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_TMR0_Initialize
  9393 ;;		_TMR0_CallBack
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text57
  9398  002E0A                     __ptext57:
  9399                           	opt stack 0
  9400  002E0A                     _TMR0_DefaultInterruptHandler:
  9401                           	opt stack 18
  9402                           
  9403                           ;incstack = 0
  9404  002E0A  0012               	return		;funcret
  9405  002E0C                     __end_of_TMR0_DefaultInterruptHandler:
  9406                           	opt stack 0
  9407                           tosu	equ	0xFFF
  9408                           tosh	equ	0xFFE
  9409                           tosl	equ	0xFFD
  9410                           pclatu	equ	0xFFB
  9411                           pclath	equ	0xFFA
  9412                           tblptru	equ	0xFF8
  9413                           tblptrh	equ	0xFF7
  9414                           tblptrl	equ	0xFF6
  9415                           tablat	equ	0xFF5
  9416                           prodh	equ	0xFF4
  9417                           prodl	equ	0xFF3
  9418                           intcon	equ	0xFF2
  9419                           intcon2	equ	0xFF1
  9420                           postinc0	equ	0xFEE
  9421                           fsr0h	equ	0xFEA
  9422                           fsr0l	equ	0xFE9
  9423                           wreg	equ	0xFE8
  9424                           indf1	equ	0xFE7
  9425                           postdec1	equ	0xFE5
  9426                           fsr1h	equ	0xFE2
  9427                           fsr1l	equ	0xFE1
  9428                           bsr	equ	0xFE0
  9429                           indf2	equ	0xFDF
  9430                           fsr2h	equ	0xFDA
  9431                           fsr2l	equ	0xFD9
  9432                           status	equ	0xFD8
  9433                           
  9434 ;; *************** function _ScanInput *****************
  9435 ;; Defined at:
  9436 ;;		line 307 in file "07_May_Motion+LDR_Main.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:    4
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_INTERRUPT_InterruptManagerLow
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text58
  9465  002A04                     __ptext58:
  9466                           	opt stack 0
  9467  002A04                     _ScanInput:
  9468                           	opt stack 20
  9469                           
  9470                           ;07_May_Motion+LDR_Main.c: 309: portread = PORTE;
  9471                           
  9472                           ;incstack = 0
  9473  002A04  CF84 F004          	movff	3972,_portread	;volatile
  9474                           
  9475                           ;07_May_Motion+LDR_Main.c: 311: if((portread & 0x04)!=0){
  9476  002A08  A404               	btfss	_portread,2,c
  9477  002A0A  D006               	goto	i1l910
  9478                           
  9479                           ;07_May_Motion+LDR_Main.c: 312: T_Calling=0;
  9480  002A0C  0E00               	movlw	0
  9481  002A0E  6E01               	movwf	_T_Calling,c
  9482                           
  9483                           ;07_May_Motion+LDR_Main.c: 313: F_Calling=0;
  9484  002A10  0E00               	movlw	0
  9485  002A12  0100               	movlb	0	; () banked
  9486  002A14  6F93               	movwf	_F_Calling& (0+255),b
  9487                           
  9488                           ;07_May_Motion+LDR_Main.c: 314: }
  9489  002A16  D005               	goto	i1l912
  9490  002A18                     i1l910:
  9491                           
  9492                           ;07_May_Motion+LDR_Main.c: 315: else if(F_Calling!= 2){
  9493                           
  9494                           ; BSR set to: 0
  9495  002A18  0E02               	movlw	2
  9496  002A1A  0100               	movlb	0	; () banked
  9497  002A1C  1993               	xorwf	_F_Calling& (0+255),w,b
  9498  002A1E  A4D8               	btfss	status,2,c
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;07_May_Motion+LDR_Main.c: 316: T_Calling++;
  9502  002A20  2A01               	incf	_T_Calling,f,c
  9503  002A22                     i1l912:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;07_May_Motion+LDR_Main.c: 317: }
  9507                           ;07_May_Motion+LDR_Main.c: 319: if(T_Calling > 30){
  9508                           
  9509                           ; BSR set to: 0
  9510                           
  9511                           ; BSR set to: 0
  9512  002A22  0E1E               	movlw	30
  9513  002A24  6401               	cpfsgt	_T_Calling,c
  9514  002A26  0012               	return	
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;07_May_Motion+LDR_Main.c: 320: F_Calling = 1;
  9518  002A28  0E01               	movlw	1
  9519  002A2A  6F93               	movwf	_F_Calling& (0+255),b
  9520                           
  9521                           ;07_May_Motion+LDR_Main.c: 321: T_Calling = 0;
  9522  002A2C  0E00               	movlw	0
  9523  002A2E  6E01               	movwf	_T_Calling,c
  9524  002A30  0012               	return	
  9525  002A32                     __end_of_ScanInput:
  9526                           	opt stack 0
  9527                           tosu	equ	0xFFF
  9528                           tosh	equ	0xFFE
  9529                           tosl	equ	0xFFD
  9530                           pclatu	equ	0xFFB
  9531                           pclath	equ	0xFFA
  9532                           tblptru	equ	0xFF8
  9533                           tblptrh	equ	0xFF7
  9534                           tblptrl	equ	0xFF6
  9535                           tablat	equ	0xFF5
  9536                           prodh	equ	0xFF4
  9537                           prodl	equ	0xFF3
  9538                           intcon	equ	0xFF2
  9539                           intcon2	equ	0xFF1
  9540                           postinc0	equ	0xFEE
  9541                           fsr0h	equ	0xFEA
  9542                           fsr0l	equ	0xFE9
  9543                           wreg	equ	0xFE8
  9544                           indf1	equ	0xFE7
  9545                           postdec1	equ	0xFE5
  9546                           fsr1h	equ	0xFE2
  9547                           fsr1l	equ	0xFE1
  9548                           bsr	equ	0xFE0
  9549                           indf2	equ	0xFDF
  9550                           fsr2h	equ	0xFDA
  9551                           fsr2l	equ	0xFD9
  9552                           status	equ	0xFD8
  9553                           
  9554 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  9555 ;; Defined at:
  9556 ;;		line 39 in file "07_May_Motion+LDR_Main.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;		None
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;		None
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;Total ram usage:       20 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    3
  9577 ;; This function calls:
  9578 ;;		_INT0_ISR
  9579 ;;		_Zigbee_data_Store_Buffer
  9580 ;;		_read_RX_FIFO
  9581 ;;		i2_Xor_check
  9582 ;;		i2_read_ZIGBEE_short
  9583 ;; This function is called by:
  9584 ;;		Interrupt level 2
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	intcode
  9589  000008                     __pintcode:
  9590                           	opt stack 0
  9591  000008                     _INTERRUPT_InterruptManagerHigh:
  9592                           	opt stack 18
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;incstack = 0
  9596  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9597  00000A  EF7D  F010         	goto	int_func
  9598                           tosu	equ	0xFFF
  9599                           tosh	equ	0xFFE
  9600                           tosl	equ	0xFFD
  9601                           pclatu	equ	0xFFB
  9602                           pclath	equ	0xFFA
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon	equ	0xFF2
  9610                           intcon2	equ	0xFF1
  9611                           postinc0	equ	0xFEE
  9612                           fsr0h	equ	0xFEA
  9613                           fsr0l	equ	0xFE9
  9614                           wreg	equ	0xFE8
  9615                           indf1	equ	0xFE7
  9616                           postdec1	equ	0xFE5
  9617                           fsr1h	equ	0xFE2
  9618                           fsr1l	equ	0xFE1
  9619                           bsr	equ	0xFE0
  9620                           indf2	equ	0xFDF
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625                           	psect	intcode_body
  9626  0020FA                     __pintcode_body:
  9627                           	opt stack 18
  9628  0020FA                     int_func:
  9629                           	opt stack 18
  9630  0020FA  CFFA F038          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
  9631  0020FE  CFFB F039          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
  9632  002102  CFE9 F03A          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
  9633  002106  CFEA F03B          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
  9634  00210A  CFE1 F03C          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
  9635  00210E  CFE2 F03D          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
  9636  002112  CFD9 F03E          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
  9637  002116  CFDA F03F          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
  9638  00211A  CFF3 F040          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
  9639  00211E  CFF4 F041          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
  9640  002122  CFF6 F042          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
  9641  002126  CFF7 F043          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
  9642  00212A  CFF8 F044          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
  9643  00212E  CFF5 F045          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
  9644  002132  C04A  F046         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
  9645  002136  C04B  F047         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
  9646  00213A  C04C  F048         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
  9647  00213E  C04D  F049         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
  9648                           
  9649                           ;07_May_Motion+LDR_Main.c: 42: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  9650  002142  B8F2               	btfsc	intcon,4,c	;volatile
  9651  002144  A2F2               	btfss	intcon,1,c	;volatile
  9652  002146  D022               	goto	i2l847
  9653                           
  9654                           ;07_May_Motion+LDR_Main.c: 43: {
  9655                           ;07_May_Motion+LDR_Main.c: 44: INTTRUPT=read_ZIGBEE_short(0X31);
  9656  002148  0E31               	movlw	49
  9657  00214A  EC0D  F016         	call	i2_read_ZIGBEE_short
  9658  00214E  6E25               	movwf	_INTTRUPT,c
  9659                           
  9660                           ;07_May_Motion+LDR_Main.c: 46: if((INTTRUPT & 0x08)==0x08)
  9661  002150  A625               	btfss	_INTTRUPT,3,c
  9662  002152  D019               	goto	i2l848
  9663                           
  9664                           ;07_May_Motion+LDR_Main.c: 47: {
  9665                           ;07_May_Motion+LDR_Main.c: 48: INTCONbits.GIE=0;
  9666  002154  9EF2               	bcf	intcon,7,c	;volatile
  9667                           
  9668                           ;07_May_Motion+LDR_Main.c: 49: read_RX_FIFO();
  9669  002156  EC4C  F00B         	call	_read_RX_FIFO	;wreg free
  9670                           
  9671                           ;07_May_Motion+LDR_Main.c: 50: INTCONbits.GIE=1;
  9672  00215A  8EF2               	bsf	intcon,7,c	;volatile
  9673                           
  9674                           ;07_May_Motion+LDR_Main.c: 51: CRC=Xor_check(DATA_RX,3);
  9675  00215C  0EA0               	movlw	low _DATA_RX
  9676  00215E  6E26               	movwf	i2Xor_check@data_value,c
  9677  002160  0E00               	movlw	high _DATA_RX
  9678  002162  6E27               	movwf	i2Xor_check@data_value+1,c
  9679  002164  0E03               	movlw	3
  9680  002166  6E28               	movwf	i2Xor_check@length,c
  9681  002168  EC0D  F014         	call	i2_Xor_check	;wreg free
  9682  00216C  C026  F083         	movff	?i2_Xor_check,_CRC
  9683  002170  C027  F084         	movff	?i2_Xor_check+1,_CRC+1
  9684                           
  9685                           ;07_May_Motion+LDR_Main.c: 52: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]);
  9686  002174  0100               	movlb	0	; () banked
  9687  002176  51A4               	movf	(_DATA_RX+4)& (0+255),w,b
  9688  002178  6E36               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
  9689  00217A  51A3               	movf	(_DATA_RX+3)& (0+255),w,b
  9690  00217C  6F87               	movwf	_Rv_CRC& (0+255),b
  9691  00217E  C036  F088         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;07_May_Motion+LDR_Main.c: 53: Zigbee_data_Store_Buffer();
  9695  002182  ECBA  F014         	call	_Zigbee_data_Store_Buffer	;wreg free
  9696  002186                     i2l848:
  9697                           
  9698                           ;07_May_Motion+LDR_Main.c: 54: }
  9699                           ;07_May_Motion+LDR_Main.c: 55: INT0_ISR();
  9700  002186  ECFE  F016         	call	_INT0_ISR	;wreg free
  9701                           
  9702                           ;07_May_Motion+LDR_Main.c: 56: }
  9703  00218A  D001               	goto	i2l849
  9704  00218C                     i2l847:
  9705                           
  9706                           ;07_May_Motion+LDR_Main.c: 57: else
  9707                           ;07_May_Motion+LDR_Main.c: 58: {
  9708                           ;07_May_Motion+LDR_Main.c: 59: __nop();
  9709  00218C  F000               	nop	
  9710  00218E                     i2l849:
  9711  00218E  C049  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
  9712  002192  C048  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
  9713  002196  C047  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
  9714  00219A  C046  F04A         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
  9715  00219E  C045  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
  9716  0021A2  C044  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
  9717  0021A6  C043  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
  9718  0021AA  C042  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
  9719  0021AE  C041  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
  9720  0021B2  C040  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
  9721  0021B6  C03F  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
  9722  0021BA  C03E  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
  9723  0021BE  C03D  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
  9724  0021C2  C03C  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
  9725  0021C6  C03B  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
  9726  0021CA  C03A  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
  9727  0021CE  C039  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
  9728  0021D2  C038  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
  9729  0021D6  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9730  0021D8  0011               	retfie		f
  9731  0021DA                     __end_of_INTERRUPT_InterruptManagerHigh:
  9732                           	opt stack 0
  9733                           tosu	equ	0xFFF
  9734                           tosh	equ	0xFFE
  9735                           tosl	equ	0xFFD
  9736                           pclatu	equ	0xFFB
  9737                           pclath	equ	0xFFA
  9738                           tblptru	equ	0xFF8
  9739                           tblptrh	equ	0xFF7
  9740                           tblptrl	equ	0xFF6
  9741                           tablat	equ	0xFF5
  9742                           prodh	equ	0xFF4
  9743                           prodl	equ	0xFF3
  9744                           intcon	equ	0xFF2
  9745                           intcon2	equ	0xFF1
  9746                           postinc0	equ	0xFEE
  9747                           fsr0h	equ	0xFEA
  9748                           fsr0l	equ	0xFE9
  9749                           wreg	equ	0xFE8
  9750                           indf1	equ	0xFE7
  9751                           postdec1	equ	0xFE5
  9752                           fsr1h	equ	0xFE2
  9753                           fsr1l	equ	0xFE1
  9754                           bsr	equ	0xFE0
  9755                           indf2	equ	0xFDF
  9756                           fsr2h	equ	0xFDA
  9757                           fsr2l	equ	0xFD9
  9758                           status	equ	0xFD8
  9759                           
  9760 ;; *************** function i2_read_ZIGBEE_short *****************
  9761 ;; Defined at:
  9762 ;;		line 403 in file "zigbee.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  address         1    wreg     unsigned char 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  address         1    2[COMRAM] unsigned char 
  9767 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      unsigned char 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    1
  9784 ;; This function calls:
  9785 ;;		i2_SPI_Read
  9786 ;;		i2_SPI_Write
  9787 ;; This function is called by:
  9788 ;;		_INTERRUPT_InterruptManagerHigh
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text60
  9793  002C1A                     __ptext60:
  9794                           	opt stack 0
  9795  002C1A                     i2_read_ZIGBEE_short:
  9796                           	opt stack 19
  9797                           
  9798                           ;incstack = 0
  9799                           ;i2read_ZIGBEE_short@address stored from wreg
  9800  002C1A  6E28               	movwf	i2read_ZIGBEE_short@address,c
  9801                           
  9802                           ;zigbee.c: 404: unsigned char data_r = 0;
  9803  002C1C  0E00               	movlw	0
  9804  002C1E  6E29               	movwf	i2read_ZIGBEE_short@data_r,c
  9805                           
  9806                           ;zigbee.c: 406: PORTCbits.RC0=0;
  9807  002C20  9082               	bcf	3970,0,c	;volatile
  9808                           
  9809                           ;zigbee.c: 407: address = (address << 1) & 0b01111110;
  9810  002C22  5028               	movf	i2read_ZIGBEE_short@address,w,c
  9811  002C24  2428               	addwf	i2read_ZIGBEE_short@address,w,c
  9812  002C26  0B7E               	andlw	126
  9813  002C28  6E28               	movwf	i2read_ZIGBEE_short@address,c
  9814                           
  9815                           ;zigbee.c: 408: SPI_Write(address);
  9816  002C2A  5028               	movf	i2read_ZIGBEE_short@address,w,c
  9817  002C2C  ECD3  F016         	call	i2_SPI_Write
  9818                           
  9819                           ;zigbee.c: 409: data_r = SPI_Read();
  9820  002C30  ECDB  F016         	call	i2_SPI_Read	;wreg free
  9821  002C34  6E29               	movwf	i2read_ZIGBEE_short@data_r,c
  9822                           
  9823                           ;zigbee.c: 410: PORTCbits.RC0=1;
  9824  002C36  8082               	bsf	3970,0,c	;volatile
  9825                           
  9826                           ;zigbee.c: 412: return data_r;
  9827  002C38  5029               	movf	i2read_ZIGBEE_short@data_r,w,c
  9828  002C3A  0012               	return	
  9829  002C3C                     __end_ofi2_read_ZIGBEE_short:
  9830                           	opt stack 0
  9831                           tosu	equ	0xFFF
  9832                           tosh	equ	0xFFE
  9833                           tosl	equ	0xFFD
  9834                           pclatu	equ	0xFFB
  9835                           pclath	equ	0xFFA
  9836                           tblptru	equ	0xFF8
  9837                           tblptrh	equ	0xFF7
  9838                           tblptrl	equ	0xFF6
  9839                           tablat	equ	0xFF5
  9840                           prodh	equ	0xFF4
  9841                           prodl	equ	0xFF3
  9842                           intcon	equ	0xFF2
  9843                           intcon2	equ	0xFF1
  9844                           postinc0	equ	0xFEE
  9845                           fsr0h	equ	0xFEA
  9846                           fsr0l	equ	0xFE9
  9847                           wreg	equ	0xFE8
  9848                           indf1	equ	0xFE7
  9849                           postdec1	equ	0xFE5
  9850                           fsr1h	equ	0xFE2
  9851                           fsr1l	equ	0xFE1
  9852                           bsr	equ	0xFE0
  9853                           indf2	equ	0xFDF
  9854                           fsr2h	equ	0xFDA
  9855                           fsr2l	equ	0xFD9
  9856                           status	equ	0xFD8
  9857                           
  9858 ;; *************** function i2_Xor_check *****************
  9859 ;; Defined at:
  9860 ;;		line 501 in file "zigbee.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  data_value      2    0[COMRAM] PTR unsigned char 
  9863 ;;		 -> DATA_TX(3), DATA_RX(5), 
  9864 ;;  length          1    2[COMRAM] unsigned char 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  Xor_check       2    6[COMRAM] unsigned short 
  9867 ;;  Xor_check       2    4[COMRAM] unsigned short 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  2    0[COMRAM] unsigned short 
  9870 ;; Registers used:
  9871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9877 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;Total ram usage:        8 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_INTERRUPT_InterruptManagerHigh
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text61
  9891  00281A                     __ptext61:
  9892                           	opt stack 0
  9893  00281A                     i2_Xor_check:
  9894                           	opt stack 20
  9895                           
  9896                           ;zigbee.c: 503: unsigned short xor_value = 0x8d0d;
  9897                           
  9898                           ;incstack = 0
  9899  00281A  0E8D               	movlw	141
  9900  00281C  6E2B               	movwf	i2Xor_check@xor_value+1,c
  9901  00281E  0E0D               	movlw	13
  9902  002820  6E2A               	movwf	i2Xor_check@xor_value,c
  9903                           
  9904                           ;zigbee.c: 504: unsigned short xor=0x00;
  9905  002822  0E00               	movlw	0
  9906  002824  6E2D               	movwf	i2Xor_check@xor+1,c
  9907  002826  0E00               	movlw	0
  9908  002828  6E2C               	movwf	i2Xor_check@xor,c
  9909                           
  9910                           ;zigbee.c: 505: while(length --)
  9911  00282A  D00A               	goto	i2l575
  9912  00282C                     
  9913                           ;zigbee.c: 506: {
  9914                           ;zigbee.c: 507: xor_value ^= *data_value++;
  9915  00282C  C026  FFD9         	movff	i2Xor_check@data_value,fsr2l
  9916  002830  C027  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
  9917  002834  50DF               	movf	indf2,w,c
  9918  002836  6E29               	movwf	??i2_Xor_check& (0+255),c
  9919  002838  5029               	movf	??i2_Xor_check,w,c
  9920  00283A  1A2A               	xorwf	i2Xor_check@xor_value,f,c
  9921  00283C  4A26               	infsnz	i2Xor_check@data_value,f,c
  9922  00283E  2A27               	incf	i2Xor_check@data_value+1,f,c
  9923  002840                     i2l575:
  9924  002840  0628               	decf	i2Xor_check@length,f,c
  9925  002842  2828               	incf	i2Xor_check@length,w,c
  9926  002844  A4D8               	btfss	status,2,c
  9927  002846  D7F2               	goto	i2l576
  9928                           
  9929                           ;zigbee.c: 508: }
  9930                           ;zigbee.c: 509: xor=xor_value;
  9931  002848  C02A  F02C         	movff	i2Xor_check@xor_value,i2Xor_check@xor
  9932  00284C  C02B  F02D         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
  9933                           
  9934                           ;zigbee.c: 510: return(xor);
  9935  002850  C02C  F026         	movff	i2Xor_check@xor,?i2_Xor_check
  9936  002854  C02D  F027         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
  9937  002858  0012               	return		;funcret
  9938  00285A                     __end_ofi2_Xor_check:
  9939                           	opt stack 0
  9940                           tosu	equ	0xFFF
  9941                           tosh	equ	0xFFE
  9942                           tosl	equ	0xFFD
  9943                           pclatu	equ	0xFFB
  9944                           pclath	equ	0xFFA
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           intcon2	equ	0xFF1
  9953                           postinc0	equ	0xFEE
  9954                           fsr0h	equ	0xFEA
  9955                           fsr0l	equ	0xFE9
  9956                           wreg	equ	0xFE8
  9957                           indf1	equ	0xFE7
  9958                           postdec1	equ	0xFE5
  9959                           fsr1h	equ	0xFE2
  9960                           fsr1l	equ	0xFE1
  9961                           bsr	equ	0xFE0
  9962                           indf2	equ	0xFDF
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _read_RX_FIFO *****************
  9968 ;; Defined at:
  9969 ;;		line 10 in file "zigbee.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;  i               1   15[COMRAM] unsigned char 
  9974 ;;  temp            1   14[COMRAM] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      void 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;Total ram usage:        7 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    2
  9991 ;; This function calls:
  9992 ;;		_read_ZIGBEE_long
  9993 ;;		i2_write_ZIGBEE_short
  9994 ;; This function is called by:
  9995 ;;		_INTERRUPT_InterruptManagerHigh
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text62
 10000  001698                     __ptext62:
 10001                           	opt stack 0
 10002  001698                     _read_RX_FIFO:
 10003                           	opt stack 18
 10004                           
 10005                           ;zigbee.c: 12: unsigned char temp = 0;
 10006                           
 10007                           ;incstack = 0
 10008  001698  0E00               	movlw	0
 10009  00169A  6E34               	movwf	read_RX_FIFO@temp,c
 10010                           
 10011                           ;zigbee.c: 13: unsigned char i = 0;
 10012  00169C  0E00               	movlw	0
 10013  00169E  6E35               	movwf	read_RX_FIFO@i,c
 10014                           
 10015                           ;zigbee.c: 15: temp=0;
 10016  0016A0  0E00               	movlw	0
 10017  0016A2  6E34               	movwf	read_RX_FIFO@temp,c
 10018                           
 10019                           ;zigbee.c: 16: temp = temp | 0x04;
 10020  0016A4  5034               	movf	read_RX_FIFO@temp,w,c
 10021  0016A6  0904               	iorlw	4
 10022  0016A8  6E34               	movwf	read_RX_FIFO@temp,c
 10023                           
 10024                           ;zigbee.c: 17: write_ZIGBEE_short(0x39, temp);
 10025  0016AA  C034  F028         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10026  0016AE  0E39               	movlw	57
 10027  0016B0  EC2D  F016         	call	i2_write_ZIGBEE_short
 10028                           
 10029                           ;zigbee.c: 19: LENGTH=read_ZIGBEE_long(0x300);
 10030  0016B4  0E03               	movlw	3
 10031  0016B6  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10032  0016B8  0E00               	movlw	0
 10033  0016BA  6E28               	movwf	read_ZIGBEE_long@address,c
 10034  0016BC  EC3C  F013         	call	_read_ZIGBEE_long	;wreg free
 10035  0016C0  6E24               	movwf	_LENGTH,c
 10036                           
 10037                           ;zigbee.c: 20: __nop();
 10038  0016C2  F000               	nop	
 10039                           
 10040                           ;zigbee.c: 21: for(i=0; i<128; i++)
 10041  0016C4  0E00               	movlw	0
 10042  0016C6  6E35               	movwf	read_RX_FIFO@i,c
 10043  0016C8  0E7F               	movlw	127
 10044  0016CA  6435               	cpfsgt	read_RX_FIFO@i,c
 10045  0016CC  D001               	goto	i2l390
 10046  0016CE  D06A               	goto	i2u175_40
 10047  0016D0                     i2l390:
 10048                           
 10049                           ;zigbee.c: 22: {
 10050                           ;zigbee.c: 23: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10051  0016D0  0E0E               	movlw	low _DATA_LENGHT
 10052  0016D2  6EF6               	movwf	tblptrl,c
 10053  0016D4                     	if	1	;There is more than 1 active tblptr byte
 10054  0016D4  0E10               	movlw	high _DATA_LENGHT
 10055  0016D6  6EF7               	movwf	tblptrh,c
 10056  0016D8                     	endif
 10057  0016D8                     	if	1	;There are 3 active tblptr bytes
 10058  0016D8  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10059  0016DA  6EF8               	movwf	tblptru,c
 10060  0016DC                     	endif
 10061  0016DC  0008               	tblrd		*
 10062  0016DE  50F5               	movf	tablat,w,c
 10063  0016E0  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10064  0016E2  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10065  0016E4  0E0D               	movlw	low _HEADER_LENGHT
 10066  0016E6  6EF6               	movwf	tblptrl,c
 10067  0016E8                     	if	1	;There is more than 1 active tblptr byte
 10068  0016E8  0E10               	movlw	high _HEADER_LENGHT
 10069  0016EA  6EF7               	movwf	tblptrh,c
 10070  0016EC                     	endif
 10071  0016EC                     	if	1	;There are 3 active tblptr bytes
 10072  0016EC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10073  0016EE  6EF8               	movwf	tblptru,c
 10074  0016F0                     	endif
 10075  0016F0  0008               	tblrd		*
 10076  0016F2  50F5               	movf	tablat,w,c
 10077  0016F4  262F               	addwf	??_read_RX_FIFO,f,c
 10078  0016F6  0E00               	movlw	0
 10079  0016F8  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10080  0016FA  0E05               	movlw	5
 10081  0016FC  262F               	addwf	??_read_RX_FIFO,f,c
 10082  0016FE  0E00               	movlw	0
 10083  001700  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10084  001702  5035               	movf	read_RX_FIFO@i,w,c
 10085  001704  6E31               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10086  001706  6A32               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10087  001708  502F               	movf	??_read_RX_FIFO,w,c
 10088  00170A  5C31               	subwf	??_read_RX_FIFO+2,w,c
 10089  00170C  5032               	movf	??_read_RX_FIFO+3,w,c
 10090  00170E  0A80               	xorlw	128
 10091  001710  6E33               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10092  001712  5030               	movf	??_read_RX_FIFO+1,w,c
 10093  001714  0A80               	xorlw	128
 10094  001716  5833               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10095  001718  B0D8               	btfsc	status,0,c
 10096  00171A  D012               	goto	i2l392
 10097                           
 10098                           ;zigbee.c: 24: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 10099  00171C  5035               	movf	read_RX_FIFO@i,w,c
 10100  00171E  0D01               	mullw	1
 10101  001720  0E00               	movlw	low _data_RX_FIFO
 10102  001722  24F3               	addwf	prodl,w,c
 10103  001724  6ED9               	movwf	fsr2l,c
 10104  001726  0E01               	movlw	high _data_RX_FIFO
 10105  001728  20F4               	addwfc	prodh,w,c
 10106  00172A  6EDA               	movwf	fsr2h,c
 10107  00172C  5035               	movf	read_RX_FIFO@i,w,c
 10108  00172E  0100               	movlb	0	; () banked
 10109  001730  25E4               	addwf	_address_RX_FIFO& (0+255),w,b
 10110  001732  6E28               	movwf	read_ZIGBEE_long@address,c
 10111  001734  0E00               	movlw	0
 10112  001736  21E5               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10113  001738  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10114  00173A  EC3C  F013         	call	_read_ZIGBEE_long	;wreg free
 10115  00173E  6EDF               	movwf	indf2,c
 10116  001740                     i2l392:
 10117                           
 10118                           ;zigbee.c: 25: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10119  001740  0E0E               	movlw	low _DATA_LENGHT
 10120  001742  6EF6               	movwf	tblptrl,c
 10121  001744                     	if	1	;There is more than 1 active tblptr byte
 10122  001744  0E10               	movlw	high _DATA_LENGHT
 10123  001746  6EF7               	movwf	tblptrh,c
 10124  001748                     	endif
 10125  001748                     	if	1	;There are 3 active tblptr bytes
 10126  001748  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10127  00174A  6EF8               	movwf	tblptru,c
 10128  00174C                     	endif
 10129  00174C  0008               	tblrd		*
 10130  00174E  50F5               	movf	tablat,w,c
 10131  001750  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10132  001752  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10133  001754  0E0D               	movlw	low _HEADER_LENGHT
 10134  001756  6EF6               	movwf	tblptrl,c
 10135  001758                     	if	1	;There is more than 1 active tblptr byte
 10136  001758  0E10               	movlw	high _HEADER_LENGHT
 10137  00175A  6EF7               	movwf	tblptrh,c
 10138  00175C                     	endif
 10139  00175C                     	if	1	;There are 3 active tblptr bytes
 10140  00175C  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10141  00175E  6EF8               	movwf	tblptru,c
 10142  001760                     	endif
 10143  001760  0008               	tblrd		*
 10144  001762  50F5               	movf	tablat,w,c
 10145  001764  262F               	addwf	??_read_RX_FIFO,f,c
 10146  001766  0E00               	movlw	0
 10147  001768  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10148  00176A  0E05               	movlw	5
 10149  00176C  262F               	addwf	??_read_RX_FIFO,f,c
 10150  00176E  0E00               	movlw	0
 10151  001770  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10152  001772  5035               	movf	read_RX_FIFO@i,w,c
 10153  001774  6E31               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10154  001776  6A32               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10155  001778  502F               	movf	??_read_RX_FIFO,w,c
 10156  00177A  5C31               	subwf	??_read_RX_FIFO+2,w,c
 10157  00177C  5032               	movf	??_read_RX_FIFO+3,w,c
 10158  00177E  0A80               	xorlw	128
 10159  001780  6E33               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10160  001782  5030               	movf	??_read_RX_FIFO+1,w,c
 10161  001784  0A80               	xorlw	128
 10162  001786  5833               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10163  001788  A0D8               	btfss	status,0,c
 10164  00178A  D00A               	goto	i2l393
 10165                           
 10166                           ;zigbee.c: 26: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 10167  00178C  5035               	movf	read_RX_FIFO@i,w,c
 10168  00178E  0100               	movlb	0	; () banked
 10169  001790  25E4               	addwf	_address_RX_FIFO& (0+255),w,b
 10170  001792  6E28               	movwf	read_ZIGBEE_long@address,c
 10171  001794  0E00               	movlw	0
 10172  001796  21E5               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10173  001798  6E29               	movwf	read_ZIGBEE_long@address+1,c
 10174  00179A  EC3C  F013         	call	_read_ZIGBEE_long	;wreg free
 10175  00179E  6E1F               	movwf	_lost_data,c
 10176  0017A0                     i2l393:
 10177  0017A0  2A35               	incf	read_RX_FIFO@i,f,c
 10178  0017A2  D792               	goto	L7
 10179  0017A4                     i2u175_40:
 10180                           
 10181                           ;zigbee.c: 27: }
 10182                           ;zigbee.c: 29: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 10183  0017A4  0E0D               	movlw	low _HEADER_LENGHT
 10184  0017A6  6EF6               	movwf	tblptrl,c
 10185  0017A8                     	if	1	;There is more than 1 active tblptr byte
 10186  0017A8  0E10               	movlw	high _HEADER_LENGHT
 10187  0017AA  6EF7               	movwf	tblptrh,c
 10188  0017AC                     	endif
 10189  0017AC                     	if	1	;There are 3 active tblptr bytes
 10190  0017AC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10191  0017AE  6EF8               	movwf	tblptru,c
 10192  0017B0                     	endif
 10193  0017B0  0008               	tblrd		*
 10194  0017B2  50F5               	movf	tablat,w,c
 10195  0017B4  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10196  0017B6  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10197  0017B8  0E01               	movlw	1
 10198  0017BA  262F               	addwf	??_read_RX_FIFO,f,c
 10199  0017BC  0E00               	movlw	0
 10200  0017BE  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10201  0017C0  0E00               	movlw	low _data_RX_FIFO
 10202  0017C2  242F               	addwf	??_read_RX_FIFO,w,c
 10203  0017C4  6ED9               	movwf	fsr2l,c
 10204  0017C6  0E01               	movlw	high _data_RX_FIFO
 10205  0017C8  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10206  0017CA  6EDA               	movwf	fsr2h,c
 10207  0017CC  50DF               	movf	indf2,w,c
 10208  0017CE  0100               	movlb	0	; () banked
 10209  0017D0  6FA0               	movwf	_DATA_RX& (0+255),b
 10210                           
 10211                           ;zigbee.c: 30: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 10212  0017D2  0E0D               	movlw	low _HEADER_LENGHT
 10213  0017D4  6EF6               	movwf	tblptrl,c
 10214  0017D6                     	if	1	;There is more than 1 active tblptr byte
 10215  0017D6  0E10               	movlw	high _HEADER_LENGHT
 10216  0017D8  6EF7               	movwf	tblptrh,c
 10217  0017DA                     	endif
 10218  0017DA                     	if	1	;There are 3 active tblptr bytes
 10219  0017DA  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10220  0017DC  6EF8               	movwf	tblptru,c
 10221  0017DE                     	endif
 10222  0017DE  0008               	tblrd		*
 10223  0017E0  50F5               	movf	tablat,w,c
 10224  0017E2  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10225  0017E4  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10226  0017E6  0E02               	movlw	2
 10227  0017E8  262F               	addwf	??_read_RX_FIFO,f,c
 10228  0017EA  0E00               	movlw	0
 10229  0017EC  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10230  0017EE  0E00               	movlw	low _data_RX_FIFO
 10231  0017F0  242F               	addwf	??_read_RX_FIFO,w,c
 10232  0017F2  6ED9               	movwf	fsr2l,c
 10233  0017F4  0E01               	movlw	high _data_RX_FIFO
 10234  0017F6  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10235  0017F8  6EDA               	movwf	fsr2h,c
 10236  0017FA  50DF               	movf	indf2,w,c
 10237  0017FC  6FA1               	movwf	(_DATA_RX+1)& (0+255),b
 10238                           
 10239                           ;zigbee.c: 31: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 10240  0017FE  0E0D               	movlw	low _HEADER_LENGHT
 10241  001800  6EF6               	movwf	tblptrl,c
 10242  001802                     	if	1	;There is more than 1 active tblptr byte
 10243  001802  0E10               	movlw	high _HEADER_LENGHT
 10244  001804  6EF7               	movwf	tblptrh,c
 10245  001806                     	endif
 10246  001806                     	if	1	;There are 3 active tblptr bytes
 10247  001806  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10248  001808  6EF8               	movwf	tblptru,c
 10249  00180A                     	endif
 10250  00180A  0008               	tblrd		*
 10251  00180C  50F5               	movf	tablat,w,c
 10252  00180E  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10253  001810  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10254  001812  0E03               	movlw	3
 10255  001814  262F               	addwf	??_read_RX_FIFO,f,c
 10256  001816  0E00               	movlw	0
 10257  001818  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10258  00181A  0E00               	movlw	low _data_RX_FIFO
 10259  00181C  242F               	addwf	??_read_RX_FIFO,w,c
 10260  00181E  6ED9               	movwf	fsr2l,c
 10261  001820  0E01               	movlw	high _data_RX_FIFO
 10262  001822  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10263  001824  6EDA               	movwf	fsr2h,c
 10264  001826  50DF               	movf	indf2,w,c
 10265  001828  6FA2               	movwf	(_DATA_RX+2)& (0+255),b
 10266                           
 10267                           ;zigbee.c: 33: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 10268  00182A  0E0D               	movlw	low _HEADER_LENGHT
 10269  00182C  6EF6               	movwf	tblptrl,c
 10270  00182E                     	if	1	;There is more than 1 active tblptr byte
 10271  00182E  0E10               	movlw	high _HEADER_LENGHT
 10272  001830  6EF7               	movwf	tblptrh,c
 10273  001832                     	endif
 10274  001832                     	if	1	;There are 3 active tblptr bytes
 10275  001832  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10276  001834  6EF8               	movwf	tblptru,c
 10277  001836                     	endif
 10278  001836  0008               	tblrd		*
 10279  001838  50F5               	movf	tablat,w,c
 10280  00183A  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10281  00183C  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10282  00183E  0E04               	movlw	4
 10283  001840  262F               	addwf	??_read_RX_FIFO,f,c
 10284  001842  0E00               	movlw	0
 10285  001844  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10286  001846  0E00               	movlw	low _data_RX_FIFO
 10287  001848  242F               	addwf	??_read_RX_FIFO,w,c
 10288  00184A  6ED9               	movwf	fsr2l,c
 10289  00184C  0E01               	movlw	high _data_RX_FIFO
 10290  00184E  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10291  001850  6EDA               	movwf	fsr2h,c
 10292  001852  50DF               	movf	indf2,w,c
 10293  001854  6FA3               	movwf	(_DATA_RX+3)& (0+255),b
 10294                           
 10295                           ;zigbee.c: 34: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 10296  001856  0E0D               	movlw	low _HEADER_LENGHT
 10297  001858  6EF6               	movwf	tblptrl,c
 10298  00185A                     	if	1	;There is more than 1 active tblptr byte
 10299  00185A  0E10               	movlw	high _HEADER_LENGHT
 10300  00185C  6EF7               	movwf	tblptrh,c
 10301  00185E                     	endif
 10302  00185E                     	if	1	;There are 3 active tblptr bytes
 10303  00185E  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10304  001860  6EF8               	movwf	tblptru,c
 10305  001862                     	endif
 10306  001862  0008               	tblrd		*
 10307  001864  50F5               	movf	tablat,w,c
 10308  001866  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10309  001868  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10310  00186A  0E05               	movlw	5
 10311  00186C  262F               	addwf	??_read_RX_FIFO,f,c
 10312  00186E  0E00               	movlw	0
 10313  001870  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10314  001872  0E00               	movlw	low _data_RX_FIFO
 10315  001874  242F               	addwf	??_read_RX_FIFO,w,c
 10316  001876  6ED9               	movwf	fsr2l,c
 10317  001878  0E01               	movlw	high _data_RX_FIFO
 10318  00187A  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10319  00187C  6EDA               	movwf	fsr2h,c
 10320  00187E  50DF               	movf	indf2,w,c
 10321  001880  6FA4               	movwf	(_DATA_RX+4)& (0+255),b
 10322                           
 10323                           ;zigbee.c: 38: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 10324  001882  0E0D               	movlw	low _HEADER_LENGHT
 10325  001884  6EF6               	movwf	tblptrl,c
 10326  001886                     	if	1	;There is more than 1 active tblptr byte
 10327  001886  0E10               	movlw	high _HEADER_LENGHT
 10328  001888  6EF7               	movwf	tblptrh,c
 10329  00188A                     	endif
 10330  00188A                     	if	1	;There are 3 active tblptr bytes
 10331  00188A  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10332  00188C  6EF8               	movwf	tblptru,c
 10333  00188E                     	endif
 10334  00188E  0008               	tblrd		*
 10335  001890  50F5               	movf	tablat,w,c
 10336  001892  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10337  001894  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10338  001896  0E0E               	movlw	low _DATA_LENGHT
 10339  001898  6EF6               	movwf	tblptrl,c
 10340  00189A                     	if	1	;There is more than 1 active tblptr byte
 10341  00189A  0E10               	movlw	high _DATA_LENGHT
 10342  00189C  6EF7               	movwf	tblptrh,c
 10343  00189E                     	endif
 10344  00189E                     	if	1	;There are 3 active tblptr bytes
 10345  00189E  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10346  0018A0  6EF8               	movwf	tblptru,c
 10347  0018A2                     	endif
 10348  0018A2  0008               	tblrd		*
 10349  0018A4  50F5               	movf	tablat,w,c
 10350  0018A6  262F               	addwf	??_read_RX_FIFO,f,c
 10351  0018A8  0E00               	movlw	0
 10352  0018AA  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10353  0018AC  0E03               	movlw	3
 10354  0018AE  262F               	addwf	??_read_RX_FIFO,f,c
 10355  0018B0  0E00               	movlw	0
 10356  0018B2  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10357  0018B4  0E00               	movlw	low _data_RX_FIFO
 10358  0018B6  242F               	addwf	??_read_RX_FIFO,w,c
 10359  0018B8  6ED9               	movwf	fsr2l,c
 10360  0018BA  0E01               	movlw	high _data_RX_FIFO
 10361  0018BC  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10362  0018BE  6EDA               	movwf	fsr2h,c
 10363  0018C0  50DF               	movf	indf2,w,c
 10364  0018C2  6E21               	movwf	_LQI,c
 10365                           
 10366                           ;zigbee.c: 39: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 10367  0018C4  0E0D               	movlw	low _HEADER_LENGHT
 10368  0018C6  6EF6               	movwf	tblptrl,c
 10369  0018C8                     	if	1	;There is more than 1 active tblptr byte
 10370  0018C8  0E10               	movlw	high _HEADER_LENGHT
 10371  0018CA  6EF7               	movwf	tblptrh,c
 10372  0018CC                     	endif
 10373  0018CC                     	if	1	;There are 3 active tblptr bytes
 10374  0018CC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10375  0018CE  6EF8               	movwf	tblptru,c
 10376  0018D0                     	endif
 10377  0018D0  0008               	tblrd		*
 10378  0018D2  50F5               	movf	tablat,w,c
 10379  0018D4  6E2F               	movwf	??_read_RX_FIFO& (0+255),c
 10380  0018D6  6A30               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10381  0018D8  0E0E               	movlw	low _DATA_LENGHT
 10382  0018DA  6EF6               	movwf	tblptrl,c
 10383  0018DC                     	if	1	;There is more than 1 active tblptr byte
 10384  0018DC  0E10               	movlw	high _DATA_LENGHT
 10385  0018DE  6EF7               	movwf	tblptrh,c
 10386  0018E0                     	endif
 10387  0018E0                     	if	1	;There are 3 active tblptr bytes
 10388  0018E0  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10389  0018E2  6EF8               	movwf	tblptru,c
 10390  0018E4                     	endif
 10391  0018E4  0008               	tblrd		*
 10392  0018E6  50F5               	movf	tablat,w,c
 10393  0018E8  262F               	addwf	??_read_RX_FIFO,f,c
 10394  0018EA  0E00               	movlw	0
 10395  0018EC  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10396  0018EE  0E04               	movlw	4
 10397  0018F0  262F               	addwf	??_read_RX_FIFO,f,c
 10398  0018F2  0E00               	movlw	0
 10399  0018F4  2230               	addwfc	??_read_RX_FIFO+1,f,c
 10400  0018F6  0E00               	movlw	low _data_RX_FIFO
 10401  0018F8  242F               	addwf	??_read_RX_FIFO,w,c
 10402  0018FA  6ED9               	movwf	fsr2l,c
 10403  0018FC  0E01               	movlw	high _data_RX_FIFO
 10404  0018FE  2030               	addwfc	??_read_RX_FIFO+1,w,c
 10405  001900  6EDA               	movwf	fsr2h,c
 10406  001902  50DF               	movf	indf2,w,c
 10407  001904  6E20               	movwf	_RSSI2,c
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;zigbee.c: 41: temp=0;
 10411  001906  0E00               	movlw	0
 10412  001908  6E34               	movwf	read_RX_FIFO@temp,c
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;zigbee.c: 42: temp = temp & (!0x04);
 10416  00190A  0E00               	movlw	0
 10417  00190C  6E34               	movwf	read_RX_FIFO@temp,c
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;zigbee.c: 43: write_ZIGBEE_short(0x39, temp);
 10421  00190E  C034  F028         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10422  001912  0E39               	movlw	57
 10423  001914  EC2D  F016         	call	i2_write_ZIGBEE_short
 10424  001918  0012               	return		;funcret
 10425  00191A                     __end_of_read_RX_FIFO:
 10426                           	opt stack 0
 10427                           tosu	equ	0xFFF
 10428                           tosh	equ	0xFFE
 10429                           tosl	equ	0xFFD
 10430                           pclatu	equ	0xFFB
 10431                           pclath	equ	0xFFA
 10432                           tblptru	equ	0xFF8
 10433                           tblptrh	equ	0xFF7
 10434                           tblptrl	equ	0xFF6
 10435                           tablat	equ	0xFF5
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           intcon	equ	0xFF2
 10439                           intcon2	equ	0xFF1
 10440                           postinc0	equ	0xFEE
 10441                           fsr0h	equ	0xFEA
 10442                           fsr0l	equ	0xFE9
 10443                           wreg	equ	0xFE8
 10444                           indf1	equ	0xFE7
 10445                           postdec1	equ	0xFE5
 10446                           fsr1h	equ	0xFE2
 10447                           fsr1l	equ	0xFE1
 10448                           bsr	equ	0xFE0
 10449                           indf2	equ	0xFDF
 10450                           fsr2h	equ	0xFDA
 10451                           fsr2l	equ	0xFD9
 10452                           status	equ	0xFD8
 10453                           
 10454 ;; *************** function i2_write_ZIGBEE_short *****************
 10455 ;; Defined at:
 10456 ;;		line 396 in file "zigbee.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  address         1    wreg     unsigned char 
 10459 ;;  data_r          1    2[COMRAM] unsigned char 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  address         1    3[COMRAM] unsigned char 
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  1    wreg      void 
 10464 ;; Registers used:
 10465 ;;		wreg, status,2, status,0, cstack
 10466 ;; Tracked objects:
 10467 ;;		On entry : 0/0
 10468 ;;		On exit  : 0/0
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;Total ram usage:        2 bytes
 10476 ;; Hardware stack levels used:    1
 10477 ;; Hardware stack levels required when called:    1
 10478 ;; This function calls:
 10479 ;;		i2_SPI_Write
 10480 ;; This function is called by:
 10481 ;;		_read_RX_FIFO
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           	psect	text63
 10486  002C5A                     __ptext63:
 10487                           	opt stack 0
 10488  002C5A                     i2_write_ZIGBEE_short:
 10489                           	opt stack 18
 10490                           
 10491                           ;incstack = 0
 10492                           ;i2write_ZIGBEE_short@address stored from wreg
 10493  002C5A  6E29               	movwf	i2write_ZIGBEE_short@address,c
 10494                           
 10495                           ;zigbee.c: 397: PORTCbits.RC0=0;
 10496  002C5C  9082               	bcf	3970,0,c	;volatile
 10497                           
 10498                           ;zigbee.c: 398: address = ((address << 1) & 0b01111111) | 0x01;
 10499  002C5E  5029               	movf	i2write_ZIGBEE_short@address,w,c
 10500  002C60  2429               	addwf	i2write_ZIGBEE_short@address,w,c
 10501  002C62  0B7F               	andlw	127
 10502  002C64  0901               	iorlw	1
 10503  002C66  6E29               	movwf	i2write_ZIGBEE_short@address,c
 10504                           
 10505                           ;zigbee.c: 399: SPI_Write(address);
 10506  002C68  5029               	movf	i2write_ZIGBEE_short@address,w,c
 10507  002C6A  ECD3  F016         	call	i2_SPI_Write
 10508                           
 10509                           ;zigbee.c: 400: SPI_Write(data_r);
 10510  002C6E  5028               	movf	i2write_ZIGBEE_short@data_r,w,c
 10511  002C70  ECD3  F016         	call	i2_SPI_Write
 10512                           
 10513                           ;zigbee.c: 401: PORTCbits.RC0=1;
 10514  002C74  8082               	bsf	3970,0,c	;volatile
 10515  002C76  0012               	return		;funcret
 10516  002C78                     __end_ofi2_write_ZIGBEE_short:
 10517                           	opt stack 0
 10518                           tosu	equ	0xFFF
 10519                           tosh	equ	0xFFE
 10520                           tosl	equ	0xFFD
 10521                           pclatu	equ	0xFFB
 10522                           pclath	equ	0xFFA
 10523                           tblptru	equ	0xFF8
 10524                           tblptrh	equ	0xFF7
 10525                           tblptrl	equ	0xFF6
 10526                           tablat	equ	0xFF5
 10527                           prodh	equ	0xFF4
 10528                           prodl	equ	0xFF3
 10529                           intcon	equ	0xFF2
 10530                           intcon2	equ	0xFF1
 10531                           postinc0	equ	0xFEE
 10532                           fsr0h	equ	0xFEA
 10533                           fsr0l	equ	0xFE9
 10534                           wreg	equ	0xFE8
 10535                           indf1	equ	0xFE7
 10536                           postdec1	equ	0xFE5
 10537                           fsr1h	equ	0xFE2
 10538                           fsr1l	equ	0xFE1
 10539                           bsr	equ	0xFE0
 10540                           indf2	equ	0xFDF
 10541                           fsr2h	equ	0xFDA
 10542                           fsr2l	equ	0xFD9
 10543                           status	equ	0xFD8
 10544                           
 10545 ;; *************** function _read_ZIGBEE_long *****************
 10546 ;; Defined at:
 10547 ;;		line 425 in file "zigbee.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  address         2    2[COMRAM] unsigned int 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;  address_low     1    8[COMRAM] unsigned char 
 10552 ;;  address_high    1    7[COMRAM] unsigned char 
 10553 ;;  data_r          1    6[COMRAM] unsigned char 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      unsigned char 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10564 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;Total ram usage:        7 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    1
 10570 ;; This function calls:
 10571 ;;		i2_SPI_Read
 10572 ;;		i2_SPI_Write
 10573 ;; This function is called by:
 10574 ;;		_read_RX_FIFO
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text64
 10579  002678                     __ptext64:
 10580                           	opt stack 0
 10581  002678                     _read_ZIGBEE_long:
 10582                           	opt stack 18
 10583                           
 10584                           ;zigbee.c: 426: unsigned char data_r = 0;
 10585                           
 10586                           ;incstack = 0
 10587  002678  0E00               	movlw	0
 10588  00267A  6E2C               	movwf	read_ZIGBEE_long@data_r,c
 10589                           
 10590                           ;zigbee.c: 427: unsigned char address_high = 0, address_low = 0;
 10591  00267C  0E00               	movlw	0
 10592  00267E  6E2D               	movwf	read_ZIGBEE_long@address_high,c
 10593  002680  0E00               	movlw	0
 10594  002682  6E2E               	movwf	read_ZIGBEE_long@address_low,c
 10595                           
 10596                           ;zigbee.c: 430: PORTCbits.RC0=0;
 10597  002684  9082               	bcf	3970,0,c	;volatile
 10598                           
 10599                           ;zigbee.c: 431: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 10600  002686  C028  F02A         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 10601  00268A  C029  F02B         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 10602  00268E  90D8               	bcf	status,0,c
 10603  002690  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10604  002692  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10605  002694  90D8               	bcf	status,0,c
 10606  002696  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10607  002698  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10608  00269A  90D8               	bcf	status,0,c
 10609  00269C  322B               	rrcf	??_read_ZIGBEE_long+1,f,c
 10610  00269E  322A               	rrcf	??_read_ZIGBEE_long,f,c
 10611  0026A0  502A               	movf	??_read_ZIGBEE_long,w,c
 10612  0026A2  0B7F               	andlw	127
 10613  0026A4  0980               	iorlw	128
 10614  0026A6  6E2D               	movwf	read_ZIGBEE_long@address_high,c
 10615                           
 10616                           ;zigbee.c: 432: address_low = ((unsigned char)(address << 5) & 0b11100000);
 10617  0026A8  3828               	swapf	read_ZIGBEE_long@address,w,c
 10618  0026AA  46E8               	rlncf	wreg,f,c
 10619  0026AC  0BE0               	andlw	224
 10620  0026AE  0BE0               	andlw	224
 10621  0026B0  6E2E               	movwf	read_ZIGBEE_long@address_low,c
 10622                           
 10623                           ;zigbee.c: 433: SPI_Write(address_high);
 10624  0026B2  502D               	movf	read_ZIGBEE_long@address_high,w,c
 10625  0026B4  ECD3  F016         	call	i2_SPI_Write
 10626                           
 10627                           ;zigbee.c: 434: SPI_Write(address_low);
 10628  0026B8  502E               	movf	read_ZIGBEE_long@address_low,w,c
 10629  0026BA  ECD3  F016         	call	i2_SPI_Write
 10630                           
 10631                           ;zigbee.c: 435: data_r = SPI_Read();
 10632  0026BE  ECDB  F016         	call	i2_SPI_Read	;wreg free
 10633  0026C2  6E2C               	movwf	read_ZIGBEE_long@data_r,c
 10634                           
 10635                           ;zigbee.c: 436: PORTCbits.RC0=1;
 10636  0026C4  8082               	bsf	3970,0,c	;volatile
 10637                           
 10638                           ;zigbee.c: 437: return data_r;
 10639  0026C6  502C               	movf	read_ZIGBEE_long@data_r,w,c
 10640  0026C8  0012               	return	
 10641  0026CA                     __end_of_read_ZIGBEE_long:
 10642                           	opt stack 0
 10643                           tosu	equ	0xFFF
 10644                           tosh	equ	0xFFE
 10645                           tosl	equ	0xFFD
 10646                           pclatu	equ	0xFFB
 10647                           pclath	equ	0xFFA
 10648                           tblptru	equ	0xFF8
 10649                           tblptrh	equ	0xFF7
 10650                           tblptrl	equ	0xFF6
 10651                           tablat	equ	0xFF5
 10652                           prodh	equ	0xFF4
 10653                           prodl	equ	0xFF3
 10654                           intcon	equ	0xFF2
 10655                           intcon2	equ	0xFF1
 10656                           postinc0	equ	0xFEE
 10657                           fsr0h	equ	0xFEA
 10658                           fsr0l	equ	0xFE9
 10659                           wreg	equ	0xFE8
 10660                           indf1	equ	0xFE7
 10661                           postdec1	equ	0xFE5
 10662                           fsr1h	equ	0xFE2
 10663                           fsr1l	equ	0xFE1
 10664                           bsr	equ	0xFE0
 10665                           indf2	equ	0xFDF
 10666                           fsr2h	equ	0xFDA
 10667                           fsr2l	equ	0xFD9
 10668                           status	equ	0xFD8
 10669                           
 10670 ;; *************** function i2_SPI_Write *****************
 10671 ;; Defined at:
 10672 ;;		line 457 in file "zigbee.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  command         1    wreg     unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  command         1    1[COMRAM] unsigned char 
 10677 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 10678 ;; Return value:  Size  Location     Type
 10679 ;;                  1    wreg      void 
 10680 ;; Registers used:
 10681 ;;		wreg
 10682 ;; Tracked objects:
 10683 ;;		On entry : 0/0
 10684 ;;		On exit  : 0/0
 10685 ;;		Unchanged: 0/0
 10686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;Total ram usage:        2 bytes
 10692 ;; Hardware stack levels used:    1
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_read_ZIGBEE_long
 10697 ;;		i2_write_ZIGBEE_short
 10698 ;;		i2_read_ZIGBEE_short
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           	psect	text65
 10703  002DA6                     __ptext65:
 10704                           	opt stack 0
 10705  002DA6                     i2_SPI_Write:
 10706                           	opt stack 19
 10707                           
 10708                           ;incstack = 0
 10709                           ;i2SPI_Write@command stored from wreg
 10710  002DA6  6E27               	movwf	i2SPI_Write@command,c
 10711                           
 10712                           ;zigbee.c: 458: unsigned char response;
 10713                           ;zigbee.c: 459: SSP1BUF = command;
 10714  002DA8  C027  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 10715  002DAC  A0C7               	btfss	4039,0,c	;volatile
 10716  002DAE  D7FE               	goto	i2l530
 10717                           
 10718                           ;zigbee.c: 461: response = SSP1BUF;
 10719  002DB0  CFC9 F026          	movff	4041,i2SPI_Write@response	;volatile
 10720  002DB4  0012               	return		;funcret
 10721  002DB6                     __end_ofi2_SPI_Write:
 10722                           	opt stack 0
 10723                           tosu	equ	0xFFF
 10724                           tosh	equ	0xFFE
 10725                           tosl	equ	0xFFD
 10726                           pclatu	equ	0xFFB
 10727                           pclath	equ	0xFFA
 10728                           tblptru	equ	0xFF8
 10729                           tblptrh	equ	0xFF7
 10730                           tblptrl	equ	0xFF6
 10731                           tablat	equ	0xFF5
 10732                           prodh	equ	0xFF4
 10733                           prodl	equ	0xFF3
 10734                           intcon	equ	0xFF2
 10735                           intcon2	equ	0xFF1
 10736                           postinc0	equ	0xFEE
 10737                           fsr0h	equ	0xFEA
 10738                           fsr0l	equ	0xFE9
 10739                           wreg	equ	0xFE8
 10740                           indf1	equ	0xFE7
 10741                           postdec1	equ	0xFE5
 10742                           fsr1h	equ	0xFE2
 10743                           fsr1l	equ	0xFE1
 10744                           bsr	equ	0xFE0
 10745                           indf2	equ	0xFDF
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function i2_SPI_Read *****************
 10751 ;; Defined at:
 10752 ;;		line 463 in file "zigbee.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      unsigned char 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;Total ram usage:        1 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_read_ZIGBEE_long
 10776 ;;		i2_read_ZIGBEE_short
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text66
 10781  002DB6                     __ptext66:
 10782                           	opt stack 0
 10783  002DB6                     i2_SPI_Read:
 10784                           	opt stack 19
 10785                           
 10786                           ;zigbee.c: 464: unsigned char TempVar;
 10787                           ;zigbee.c: 465: SSP1BUF = 0xff;
 10788                           
 10789                           ;incstack = 0
 10790  002DB6  68C9               	setf	4041,c	;volatile
 10791  002DB8  A0C7               	btfss	4039,0,c	;volatile
 10792  002DBA  D7FE               	goto	i2l536
 10793                           
 10794                           ;zigbee.c: 467: TempVar = SSP1BUF;
 10795  002DBC  CFC9 F026          	movff	4041,i2SPI_Read@TempVar	;volatile
 10796                           
 10797                           ;zigbee.c: 468: PIR1bits.SSP1IF = 0;
 10798  002DC0  969E               	bcf	3998,3,c	;volatile
 10799                           
 10800                           ;zigbee.c: 469: return ( TempVar );
 10801  002DC2  5026               	movf	i2SPI_Read@TempVar,w,c
 10802  002DC4  0012               	return	
 10803  002DC6                     __end_ofi2_SPI_Read:
 10804                           	opt stack 0
 10805                           tosu	equ	0xFFF
 10806                           tosh	equ	0xFFE
 10807                           tosl	equ	0xFFD
 10808                           pclatu	equ	0xFFB
 10809                           pclath	equ	0xFFA
 10810                           tblptru	equ	0xFF8
 10811                           tblptrh	equ	0xFF7
 10812                           tblptrl	equ	0xFF6
 10813                           tablat	equ	0xFF5
 10814                           prodh	equ	0xFF4
 10815                           prodl	equ	0xFF3
 10816                           intcon	equ	0xFF2
 10817                           intcon2	equ	0xFF1
 10818                           postinc0	equ	0xFEE
 10819                           fsr0h	equ	0xFEA
 10820                           fsr0l	equ	0xFE9
 10821                           wreg	equ	0xFE8
 10822                           indf1	equ	0xFE7
 10823                           postdec1	equ	0xFE5
 10824                           fsr1h	equ	0xFE2
 10825                           fsr1l	equ	0xFE1
 10826                           bsr	equ	0xFE0
 10827                           indf2	equ	0xFDF
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           
 10832 ;; *************** function _Zigbee_data_Store_Buffer *****************
 10833 ;; Defined at:
 10834 ;;		line 324 in file "07_May_Motion+LDR_Main.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;		None
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  a               1    0[COMRAM] unsigned char 
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      void 
 10841 ;; Registers used:
 10842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;Total ram usage:        1 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		_INTERRUPT_InterruptManagerHigh
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text67
 10862  002974                     __ptext67:
 10863                           	opt stack 0
 10864  002974                     _Zigbee_data_Store_Buffer:
 10865                           	opt stack 20
 10866                           
 10867                           ;07_May_Motion+LDR_Main.c: 326: unsigned char a;
 10868                           ;07_May_Motion+LDR_Main.c: 327: for(a=0;a<=5;a++){
 10869                           
 10870                           ;incstack = 0
 10871  002974  0E00               	movlw	0
 10872  002976  6E26               	movwf	Zigbee_data_Store_Buffer@a,c
 10873  002978                     i2l3488:
 10874  002978  0E05               	movlw	5
 10875  00297A  6426               	cpfsgt	Zigbee_data_Store_Buffer@a,c
 10876  00297C  D001               	goto	i2l917
 10877  00297E  0012               	return	
 10878  002980                     i2l917:
 10879                           
 10880                           ;07_May_Motion+LDR_Main.c: 328: ZigBee_Receive_Buffer[a] = DATA_RX[a];
 10881  002980  5026               	movf	Zigbee_data_Store_Buffer@a,w,c
 10882  002982  0D01               	mullw	1
 10883  002984  0EA0               	movlw	low _DATA_RX
 10884  002986  24F3               	addwf	prodl,w,c
 10885  002988  6ED9               	movwf	fsr2l,c
 10886  00298A  0E00               	movlw	high _DATA_RX
 10887  00298C  20F4               	addwfc	prodh,w,c
 10888  00298E  6EDA               	movwf	fsr2h,c
 10889  002990  5026               	movf	Zigbee_data_Store_Buffer@a,w,c
 10890  002992  0D01               	mullw	1
 10891  002994  0E60               	movlw	low _ZigBee_Receive_Buffer
 10892  002996  24F3               	addwf	prodl,w,c
 10893  002998  6EE1               	movwf	fsr1l,c
 10894  00299A  0E00               	movlw	high _ZigBee_Receive_Buffer
 10895  00299C  20F4               	addwfc	prodh,w,c
 10896  00299E  6EE2               	movwf	fsr1h,c
 10897  0029A0  CFDF FFE7          	movff	indf2,indf1
 10898  0029A4  2A26               	incf	Zigbee_data_Store_Buffer@a,f,c
 10899  0029A6  D7E8               	goto	i2l3488
 10900  0029A8                     __end_of_Zigbee_data_Store_Buffer:
 10901                           	opt stack 0
 10902                           tosu	equ	0xFFF
 10903                           tosh	equ	0xFFE
 10904                           tosl	equ	0xFFD
 10905                           pclatu	equ	0xFFB
 10906                           pclath	equ	0xFFA
 10907                           tblptru	equ	0xFF8
 10908                           tblptrh	equ	0xFF7
 10909                           tblptrl	equ	0xFF6
 10910                           tablat	equ	0xFF5
 10911                           prodh	equ	0xFF4
 10912                           prodl	equ	0xFF3
 10913                           intcon	equ	0xFF2
 10914                           intcon2	equ	0xFF1
 10915                           postinc0	equ	0xFEE
 10916                           fsr0h	equ	0xFEA
 10917                           fsr0l	equ	0xFE9
 10918                           wreg	equ	0xFE8
 10919                           indf1	equ	0xFE7
 10920                           postdec1	equ	0xFE5
 10921                           fsr1h	equ	0xFE2
 10922                           fsr1l	equ	0xFE1
 10923                           bsr	equ	0xFE0
 10924                           indf2	equ	0xFDF
 10925                           fsr2h	equ	0xFDA
 10926                           fsr2l	equ	0xFD9
 10927                           status	equ	0xFD8
 10928                           
 10929 ;; *************** function _INT0_ISR *****************
 10930 ;; Defined at:
 10931 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;		None
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;Total ram usage:        0 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    2
 10952 ;; This function calls:
 10953 ;;		_INT0_CallBack
 10954 ;; This function is called by:
 10955 ;;		_INTERRUPT_InterruptManagerHigh
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           	psect	text68
 10960  002DFC                     __ptext68:
 10961                           	opt stack 0
 10962  002DFC                     _INT0_ISR:
 10963                           	opt stack 18
 10964                           
 10965                           ;ext_int.c: 34: (INTCONbits.INT0IF = 0);
 10966                           
 10967                           ;incstack = 0
 10968  002DFC  92F2               	bcf	intcon,1,c	;volatile
 10969                           
 10970                           ;ext_int.c: 37: INT0_CallBack();
 10971  002DFE  ECEA  F015         	call	_INT0_CallBack	;wreg free
 10972  002E02  0012               	return		;funcret
 10973  002E04                     __end_of_INT0_ISR:
 10974                           	opt stack 0
 10975                           tosu	equ	0xFFF
 10976                           tosh	equ	0xFFE
 10977                           tosl	equ	0xFFD
 10978                           pclatu	equ	0xFFB
 10979                           pclath	equ	0xFFA
 10980                           tblptru	equ	0xFF8
 10981                           tblptrh	equ	0xFF7
 10982                           tblptrl	equ	0xFF6
 10983                           tablat	equ	0xFF5
 10984                           prodh	equ	0xFF4
 10985                           prodl	equ	0xFF3
 10986                           intcon	equ	0xFF2
 10987                           intcon2	equ	0xFF1
 10988                           postinc0	equ	0xFEE
 10989                           fsr0h	equ	0xFEA
 10990                           fsr0l	equ	0xFE9
 10991                           wreg	equ	0xFE8
 10992                           indf1	equ	0xFE7
 10993                           postdec1	equ	0xFE5
 10994                           fsr1h	equ	0xFE2
 10995                           fsr1l	equ	0xFE1
 10996                           bsr	equ	0xFE0
 10997                           indf2	equ	0xFDF
 10998                           fsr2h	equ	0xFDA
 10999                           fsr2l	equ	0xFD9
 11000                           status	equ	0xFD8
 11001                           
 11002 ;; *************** function _INT0_CallBack *****************
 11003 ;; Defined at:
 11004 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;		None
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      void 
 11011 ;; Registers used:
 11012 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;Total ram usage:        0 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; Hardware stack levels required when called:    1
 11025 ;; This function calls:
 11026 ;;		Absolute function
 11027 ;;		_INT0_DefaultInterruptHandler
 11028 ;; This function is called by:
 11029 ;;		_INT0_ISR
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text69
 11034  002BD4                     __ptext69:
 11035                           	opt stack 0
 11036  002BD4                     _INT0_CallBack:
 11037                           	opt stack 18
 11038                           
 11039                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 11040                           
 11041                           ;incstack = 0
 11042  002BD4  0100               	movlb	0	; () banked
 11043  002BD6  5176               	movf	_INT0_InterruptHandler& (0+255),w,b
 11044  002BD8  1177               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11045  002BDA  1178               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11046  002BDC  B4D8               	btfsc	status,2,c
 11047  002BDE  0012               	return	
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;ext_int.c: 45: {
 11051                           ;ext_int.c: 46: INT0_InterruptHandler();
 11052  002BE0  D801               	call	i2u481_48
 11053  002BE2  0012               	return	
 11054  002BE4                     i2u481_48:
 11055  002BE4  0005               	push	
 11056  002BE6  6EFA               	movwf	pclath,c
 11057  002BE8  5176               	movf	_INT0_InterruptHandler& (0+255),w,b
 11058  002BEA  6EFD               	movwf	tosl,c
 11059  002BEC  5177               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11060  002BEE  6EFE               	movwf	tosh,c
 11061  002BF0  5178               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11062  002BF2  6EFF               	movwf	tosu,c
 11063  002BF4  50FA               	movf	pclath,w,c
 11064  002BF6  0012               	return		;indir
 11065  002BF8                     __end_of_INT0_CallBack:
 11066                           	opt stack 0
 11067                           tosu	equ	0xFFF
 11068                           tosh	equ	0xFFE
 11069                           tosl	equ	0xFFD
 11070                           pclatu	equ	0xFFB
 11071                           pclath	equ	0xFFA
 11072                           tblptru	equ	0xFF8
 11073                           tblptrh	equ	0xFF7
 11074                           tblptrl	equ	0xFF6
 11075                           tablat	equ	0xFF5
 11076                           prodh	equ	0xFF4
 11077                           prodl	equ	0xFF3
 11078                           intcon	equ	0xFF2
 11079                           intcon2	equ	0xFF1
 11080                           postinc0	equ	0xFEE
 11081                           fsr0h	equ	0xFEA
 11082                           fsr0l	equ	0xFE9
 11083                           wreg	equ	0xFE8
 11084                           indf1	equ	0xFE7
 11085                           postdec1	equ	0xFE5
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           bsr	equ	0xFE0
 11089                           indf2	equ	0xFDF
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _INT0_DefaultInterruptHandler *****************
 11095 ;; Defined at:
 11096 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;		None
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		None
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11114 ;;Total ram usage:        0 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; This function calls:
 11117 ;;		Nothing
 11118 ;; This function is called by:
 11119 ;;		_EXT_INT_Initialize
 11120 ;;		_INT0_CallBack
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text70
 11125  002E0C                     __ptext70:
 11126                           	opt stack 0
 11127  002E0C                     _INT0_DefaultInterruptHandler:
 11128                           	opt stack 18
 11129                           
 11130                           ;incstack = 0
 11131  002E0C  0012               	return		;funcret
 11132  002E0E                     __end_of_INT0_DefaultInterruptHandler:
 11133                           	opt stack 0
 11134                           tosu	equ	0xFFF
 11135                           tosh	equ	0xFFE
 11136                           tosl	equ	0xFFD
 11137                           pclatu	equ	0xFFB
 11138                           pclath	equ	0xFFA
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           intcon2	equ	0xFF1
 11147                           postinc0	equ	0xFEE
 11148                           fsr0h	equ	0xFEA
 11149                           fsr0l	equ	0xFE9
 11150                           wreg	equ	0xFE8
 11151                           indf1	equ	0xFE7
 11152                           postdec1	equ	0xFE5
 11153                           fsr1h	equ	0xFE2
 11154                           fsr1l	equ	0xFE1
 11155                           bsr	equ	0xFE0
 11156                           indf2	equ	0xFDF
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           tosu	equ	0xFFF
 11161                           tosh	equ	0xFFE
 11162                           tosl	equ	0xFFD
 11163                           pclatu	equ	0xFFB
 11164                           pclath	equ	0xFFA
 11165                           tblptru	equ	0xFF8
 11166                           tblptrh	equ	0xFF7
 11167                           tblptrl	equ	0xFF6
 11168                           tablat	equ	0xFF5
 11169                           prodh	equ	0xFF4
 11170                           prodl	equ	0xFF3
 11171                           intcon	equ	0xFF2
 11172                           intcon2	equ	0xFF1
 11173                           postinc0	equ	0xFEE
 11174                           fsr0h	equ	0xFEA
 11175                           fsr0l	equ	0xFE9
 11176                           wreg	equ	0xFE8
 11177                           indf1	equ	0xFE7
 11178                           postdec1	equ	0xFE5
 11179                           fsr1h	equ	0xFE2
 11180                           fsr1l	equ	0xFE1
 11181                           bsr	equ	0xFE0
 11182                           indf2	equ	0xFDF
 11183                           fsr2h	equ	0xFDA
 11184                           fsr2l	equ	0xFD9
 11185                           status	equ	0xFD8
 11186                           
 11187                           	psect	text71
 11188  000000                     __ptext71:
 11189                           	opt stack 0
 11190                           tosu	equ	0xFFF
 11191                           tosh	equ	0xFFE
 11192                           tosl	equ	0xFFD
 11193                           pclatu	equ	0xFFB
 11194                           pclath	equ	0xFFA
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           postinc0	equ	0xFEE
 11204                           fsr0h	equ	0xFEA
 11205                           fsr0l	equ	0xFE9
 11206                           wreg	equ	0xFE8
 11207                           indf1	equ	0xFE7
 11208                           postdec1	equ	0xFE5
 11209                           fsr1h	equ	0xFE2
 11210                           fsr1l	equ	0xFE1
 11211                           bsr	equ	0xFE0
 11212                           indf2	equ	0xFDF
 11213                           fsr2h	equ	0xFDA
 11214                           fsr2l	equ	0xFD9
 11215                           status	equ	0xFD8
 11216                           
 11217                           	psect	rparam
 11218  0000                     tosu	equ	0xFFF
 11219                           tosh	equ	0xFFE
 11220                           tosl	equ	0xFFD
 11221                           pclatu	equ	0xFFB
 11222                           pclath	equ	0xFFA
 11223                           tblptru	equ	0xFF8
 11224                           tblptrh	equ	0xFF7
 11225                           tblptrl	equ	0xFF6
 11226                           tablat	equ	0xFF5
 11227                           prodh	equ	0xFF4
 11228                           prodl	equ	0xFF3
 11229                           intcon	equ	0xFF2
 11230                           intcon2	equ	0xFF1
 11231                           postinc0	equ	0xFEE
 11232                           fsr0h	equ	0xFEA
 11233                           fsr0l	equ	0xFE9
 11234                           wreg	equ	0xFE8
 11235                           indf1	equ	0xFE7
 11236                           postdec1	equ	0xFE5
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           bsr	equ	0xFE0
 11240                           indf2	equ	0xFDF
 11241                           fsr2h	equ	0xFDA
 11242                           fsr2l	equ	0xFD9
 11243                           status	equ	0xFD8
 11244                           
 11245                           	psect	temp
 11246  00004A                     btemp:
 11247                           	opt stack 0
 11248  00004A                     	ds	1
 11249  0000                     int$flags	set	btemp
 11250  0000                     wtemp6	set	btemp+1
 11251                           tosu	equ	0xFFF
 11252                           tosh	equ	0xFFE
 11253                           tosl	equ	0xFFD
 11254                           pclatu	equ	0xFFB
 11255                           pclath	equ	0xFFA
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           intcon2	equ	0xFF1
 11264                           postinc0	equ	0xFEE
 11265                           fsr0h	equ	0xFEA
 11266                           fsr0l	equ	0xFE9
 11267                           wreg	equ	0xFE8
 11268                           indf1	equ	0xFE7
 11269                           postdec1	equ	0xFE5
 11270                           fsr1h	equ	0xFE2
 11271                           fsr1l	equ	0xFE1
 11272                           bsr	equ	0xFE0
 11273                           indf2	equ	0xFDF
 11274                           fsr2h	equ	0xFDA
 11275                           fsr2l	equ	0xFD9
 11276                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    14
    Data        27
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      73
    BANK0           160     56     139
    BANK1           256     39      98
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK1[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    _main->___ftadd
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftadd

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  125202
                                             36 BANK1      3     3      0
                  _ADC_GetConversion
                         _Clear_Data
          _Clear_Zigbee_Store_Buffer
                           _Delay_ms
                            _InitSPI
                           _RF_reset
                         _Read_b_eep
                  _SYSTEM_Initialize
                        _Write_b_eep
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
              _init_ZIGBEE_nonbeacon
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   18423
                                             30 BANK0      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                             23 BANK0      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                             21 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                             25 BANK0      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                             25 BANK0      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                             30 BANK0      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                             25 BANK0      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    2644
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                             25 BANK0      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   43083
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0   10831
                                             30 BANK0      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    6034
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                             25 BANK0      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    2644
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    2644
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                             23 BANK0      7     4      3
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                             23 BANK0      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3014
                                             29 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     829
                                             21 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     245
                                             47 BANK0      3     0      3
                            ___ftmul (ARG)
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4241
                                             32 BANK0     15     9      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3813
                                              6 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4758
                                             50 BANK0      6     0      6
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2893
                                             21 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     625
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep                                          4     1      3    1179
                                             21 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     242
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                             21 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     121
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                             21 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     571
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Clear_Zigbee_Store_Buffer                            1     1      0      99
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clear_Data                                           2     2      0     102
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0       0
                                              0 BANK0     21    21      0
                          _ScanInput
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ScanInput                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1110
                                             16 COMRAM    20    20      0
                           _INT0_ISR
           _Zigbee_data_Store_Buffer
                       _read_RX_FIFO
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _Zigbee_data_Store_Buffer                            1     1      0      90
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Clear_Data
   _Clear_Zigbee_Store_Buffer
   _Delay_ms
   _InitSPI
     _delay
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Write_b_eep
   ___aldiv
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
   ___lwtoft
     ___ftpack
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ScanInput
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _Zigbee_data_Store_Buffer
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     27      62       7       38.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      49       1       77.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      12        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 07 14:07:02 2018

                                        _T 0011                                          _d 0017  
                                        _i 0018                            SPI_Read@TempVar 00BD  
                                       _R3 1007                                         _ii 009B  
                                       bsr 000FE0                                __CFG_BORV$3 000000  
                            _ID_READ_Store 008E                            _timer0ReloadVal 009F  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                             __CFG_CP4$OFF 000000                  i2read_ZIGBEE_short@data_r 0029  
                             __CFG_CP5$OFF 000000                               ___ftadd@exp1 0130  
                             ___ftadd@exp2 012F                               __CFG_CP6$OFF 000000  
                             __CFG_CP7$OFF 000000                               ___ftadd@sign 012E  
                                      l101 2926                                        l430 2316  
                                      l406 2952                                        l530 2D7A  
                                      l426 2356                                        l434 27C6  
                                      l450 1B26                                        l427 22B4  
                                      l435 27A2                                        l451 1B3A  
                                      l460 1BEE                                        l452 1B4E  
                                      l541 2C4C                                        l429 22DC  
                                      l437 27B8                                        l461 1C02  
                                      l453 1B62                                        l509 26E6  
                                      l542 2C48                                        l462 1C16  
                                      l454 1B76                                        l447 1C52  
                                      l463 1C2A                                        l455 1B8A  
                                      l464 1C3E                                        l456 1B9E  
                                      l448 1B14                                        l536 2D50  
                                      l449 1CB6                                        l457 1BB2  
                                      l481 24D4                                        l458 1BC6  
                                      l474 2764                                        l482 24F0  
                                      l490 2566                                        l387 2908  
                                      l459 1BDA                                        l483 250C  
                                      l491 2582                                        l548 2C9E  
                                      l478 2528                                        l479 24C0  
                                      l487 259E                                        l575 273A  
                                      l495 1D3E                                        l903 1692  
                                      l488 2552                                        l576 2726  
                                      l922 2B2C                                        l587 28C0  
                                      l871 1130                                        l881 1272  
                                      l873 118E                                        l890 158A  
                                      l882 1290                                        l866 1116  
                                      l891 159E                                        l883 129E  
                                      l875 1240                                        l867 110A  
                                      l980 21F8                                        l892 15BA  
                                      l876 11FE                                        l981 2210  
                                      l893 15B2                                        l885 1532  
                                      l878 123C                                        l983 223E  
                                      l895 15CE                                        l879 1536  
                                      l887 131A                                        l984 2232  
                                      l897 15EE                                        l889 1576  
                                      l987 2272                                        l899 1642  
                                      _CRC 0083                                        l988 2280  
                                      l989 2296                               __CFG_CPB$OFF 000000  
                    i2Xor_check@data_value 0026                               __CFG_CPD$OFF 000000  
                                      _LQI 0021                           _set_long_address 2940  
               ??_INT0_SetInterruptHandler 00C0                                        _Vcc 1004  
                     __size_of_Write_b_eep 003C                                        prod 000FF3  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 2BD4                    __size_of_start_transmit 0048  
               i2read_ZIGBEE_short@address 0028                                i2_Xor_check 281A  
                             ___ftdiv@cntr 013A                read_ZIGBEE_long@address_low 002E  
                             ___ftdiv@sign 013F                      ?_write_TX_normal_FIFO 0026  
                                     l1203 203C                                       l1140 238E  
                                     l1220 1F6E                                       l1205 2064  
                                     l1221 1FA0                                       l1142 23CC  
                                     l1206 20A2                                       l1222 1FB0  
                                     l1143 23B6                                       l1207 20C8  
                                     l1224 1FC8                                       l1145 23F4  
                                     l1225 1FD8                                       l1241 1ECA  
                                     l1146 23EA                                       l1170 1976  
                                     l1218 1F46                                       l1250 1F0A  
                                     l1242 1EBA                                       l1139 2398  
                                     l1229 2B10                                       l1174 19A0  
                                     l1247 1EEE                                       l1239 1E52  
                                     l1184 1A14                                       l1248 1EE2  
                                     l1193 1A5A                                       l1185 1A06  
                                     l1177 19AE                                       l1194 1A4C  
                                     l1178 19B8                                       l1179 1A1E  
                                     l1196 1A80                                       l1197 1AA0  
                                     l1198 1AD6                                       l4500 294A  
                                     l4618 1D36                                       l6162 1662  
                                     l6154 1642                                       l4478 28E6  
                                     l4638 1D92                                       l4698 2B24  
                                     _DATA 0023                                       u3000 23FE  
                                     _LATA 000F89                                       u3110 1D68  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u3130 1E16                                       _LATF 000F8E  
                                     _LATG 000F8F                                       u3310 1968  
                                     u3240 2242                                       u3410 1A26  
                                     u3155 28CE                                       u3156 28D0  
                                     u3340 1992                                       u3501 204C  
                                     u5030 1106                                       u3271 1930  
                                     u3440 1A62                                       u5040 1112  
                                     u3281 1948                                       u3370 19E0  
                                     u3531 1F2E                                       u5061 119C  
                                     u2910 1B0E                                       u5310 160C  
                                     u3551 1F56                                       u5320 1620  
                                     u3481 2024                                       u2960 2380  
                                     u4910 1EF4                                       u4851 1E36  
                                     u4870 1E70                                       u4875 1E68  
                                     _Nilp 0008                                       _Tick 000D  
                                     _main 1010                               ___ftpack@arg 00BD  
                    write_TX_normal_FIFO@i 00CC                      write_TX_normal_FIFO@n 00CB  
                             ___ftpack@exp 00C0                                       _tick 0003  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004A                                 _Clear_Data 28D4  
                          _Previous_Status 008F                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0124  
                            __CFG_IESO$OFF 000000                              __CFG_FOSC$HS1 000000  
                       _set_reception_mode 2546                              __CFG_MCLRE$ON 000000  
                             ___ftmul@cntr 00D5                   ?_set_frame_format_filter 0026  
                             ___param_bank 000000                               ___ftmul@sign 00D6  
                        i2Xor_check@length 0028                            _set_not_encrypt 2CE4  
                    __end_of_set_RSSI_mode 27D8                            __end_of_InitSPI 2BB0  
                          set_not_ACK@temp 00C1                               ___fttol@exp1 014E  
                   set_RSSI_mode@RSSI_mode 00C1                               ___fttol@lval 014A  
                __size_of_enable_interrupt 000E                    __end_of_TMR0_Initialize 2AAA  
                         __end_of_INT0_ISR 2E04             ??_TMR0_DefaultInterruptHandler 00A8  
                            __CFG_RETEN$ON 000000             __size_of_OSCILLATOR_Initialize 0014  
                      ?_set_reception_mode 0026                     ?_init_ZIGBEE_nonbeacon 0026  
            __end_of_OSCILLATOR_Initialize 2D4E                                ?i2_SPI_Read 0026  
                          __end_of___aldiv 22A8                                      ?_main 0026  
                                    _CHECK 009C                                      _EEADR 000F62  
                          __end_of___ftadd 1AFC                            __end_of___ftdiv 20FA  
                          __end_of___ftneg 2B1E                  _Clear_Zigbee_Store_Buffer 2B1E  
                      _data_TX_normal_FIFO 0115                            __end_of___ftmul 2012  
                                    _T0CON 000FD5                            __end_of___fttol 1F1C  
                           __CFG_DEBUG$OFF 000000                                      _ERROR 0014  
                                    i1l910 2A18                                      i1l912 2A22  
                                    i2l530 2DAC                                      i1l860 00CC  
                                    i2l390 16D0                                      i1l855 00CA  
                                    i2l536 2DB8                                      i2l392 1740  
                                    i1l856 0098                                      i2l393 17A0  
                                    i1l857 00A6                                      i1l859 00C4  
                                    i2l575 2840                                      i2l576 282C  
                                    i2l917 2980                                      i2l847 218C  
                                    i2l848 2186                                      i2l849 218E  
                                    _F_MSG 0090                                      _VALUE 000A  
                      i2SPI_Write@response 0026                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _PORTD 000F83  
                                    _PORTE 000F84                                      _RSSI2 0020  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0026                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _TRISF 000F97                                      _TRISG 000F98  
                            _VoltageOutput 006D                 ??_Zigbee_data_Store_Buffer 0026  
                                    _TX_ID 000E          __size_of_TMR0_SetInterruptHandler 000E  
                                    _Delta 0066                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                ?_TMR0_SetInterruptHandler 00BD                              __CFG_WRT3$OFF 000000  
                            __CFG_WRT4$OFF 000000                             __CFG_EBRT0$OFF 000000  
                            __CFG_WRT5$OFF 000000                                      _Light 0127  
                           __CFG_EBRT1$OFF 000000                              __CFG_WRT6$OFF 000000  
                           __CFG_EBRT2$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBRT3$OFF 000000                             __CFG_EBRT4$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBRT5$OFF 000000  
                           __CFG_EBRT6$OFF 000000                             __CFG_EBRT7$OFF 000000  
                         __end_of_TMR0_ISR 2AD2                                      _Trick 000C  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                                    _Store 0016                              __CFG_WRTD$OFF 000000  
                           Read_b_eep@badd 00BD                             __CFG_EBRTB$OFF 000000  
                                    _ckeck 007F                                      _delay 2C3C  
                   Write_b_eep@GIE_BIT_VAL 00C0                                      _tick2 0002  
                            ___ftpack@sign 00C1                                      _value 000B  
                         __end_of_SPI_Read 2D60                                      pclath 000FFA  
                     ??_set_reception_mode 00C1                                      tablat 000FF5  
                         __end_of_RF_reset 2A82                                      status 000FD8  
                                    wtemp6 004B                         __size_of_SPI_Write 0012  
           ?_INTERRUPT_InterruptManagerLow 0026                           __end_of_Delay_ms 2CB0  
                 __end_of_read_ZIGBEE_long 26CA                            __initialization 25B6  
                             __end_of_main 1698                           read_RX_FIFO@temp 0034  
                               _Read_b_eep 2D84               __end_ofi2_write_ZIGBEE_short 2C78  
                           _ADDRESS_long_1 0152                             _ADDRESS_long_2 015A  
                                   ??_main 00E0                              ___fttol@sign1 0149  
                            ?_read_RX_FIFO 0026                              __activetblptr 000003  
                   ??_write_TX_normal_FIFO 00C6                                     ?_delay 00BD  
                             ?i2_SPI_Write 0026                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                               _Send_Frame 0097                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _EEDATA 000F61  
                                   _EECON2 000F7E                                     _ANCON0 000F25  
                                   _ANCON1 000F24                                     _ANCON2 000F23  
                         __end_of___ftpack 241E                                     _ALT_ON 0091  
                                   _LENGTH 0024   __end_of_nonbeacon_PAN_coordinator_device 2898  
__size_of_nonbeacon_PAN_coordinator_device 003E          ?_nonbeacon_PAN_coordinator_device 0026  
       ??_nonbeacon_PAN_coordinator_device 00C1           _nonbeacon_PAN_coordinator_device 285A  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   _ID_SET 009A                                     i2l3488 2978  
                         __end_of___lwtoft 2AF8                           SPI_Write@command 00BE  
                                   _OSCCON 000FD3                                     _AdcRef 100A  
                  __end_of_set_not_encrypt 2CFA                        __size_ofi2_SPI_Read 0010  
                              ?_Clear_Data 0026                               ?_set_channel 0026  
                         set_CCA_mode@temp 00C2                                  ??_InitSPI 00C1  
                                   _TX_CRC 0085                         __size_of_ScanInput 002E  
                                   _Count1 009E                                     _Count2 009D  
                                   _Rv_CRC 0087                             __CFG_XINST$OFF 000000  
                  write_ZIGBEE_long@data_r 00C1                               ?_set_not_ACK 0026  
                 set_short_address@address 00C1                                  ??___aldiv 00C5  
                                ??___ftadd 012B                             __CFG_STVREN$ON 000000  
                                   _data_r 0022                                  ??___ftdiv 0137  
                                ??___ftneg 00DA                                  ??___ftmul 00CE  
                                ??___fttol 0144                                 _Time_start 007D  
                         ?_TMR0_Initialize 0026                                     delay@l 00BF  
                                   clear_0 25FC                                     clear_1 2608  
                                   clear_2 2614                          _set_WAKE_from_pin 2C78  
                           ??_read_RX_FIFO 002F                            ??_INT0_CallBack 0026  
                         __end_of_pin_wake 2D72                      ___ftmul@f3_as_product 00D2  
                      Xor_check@data_value 00BD                         ?_set_WAKE_from_pin 0026  
                        __end_of_SPI_Write 2D84                         Xor_check@xor_value 00C1  
                             __mediumconst 0000                               _data_RX_FIFO 0100  
                           _start_transmit 26CA                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                Zigbee_data_Store_Buffer@a 0026                   ADC_GetConversion@channel 00C1  
                    __end_of_TMR0_CallBack 2BD4   TMR0_SetInterruptHandler@InterruptHandler 00BD  
 INT0_SetInterruptHandler@InterruptHandler 00BD                        ??_set_WAKE_from_pin 00C1  
                        _init_ZIGBEE_basic 241E              __size_of_INTERRUPT_Initialize 0006  
         ??_INTERRUPT_InterruptManagerHigh 0036            ?_INTERRUPT_InterruptManagerHigh 0026  
                        _SYSTEM_Initialize 2CB0                         ?_init_ZIGBEE_basic 0026  
                               __accesstop 0060                    __end_of__initialization 261A  
                            ?_set_CCA_mode 0026                                  ?_INT0_ISR 0026  
                               ___ftadd@f1 00DA                                 ___ftadd@f2 00DD  
                       __size_of_Xor_check 0042                                 _Store_DATA 0070  
             __size_ofi2_read_ZIGBEE_short 0022                         ?_SYSTEM_Initialize 0026  
                 __end_of_set_long_address 2974                              ___rparam_used 000001  
                               ___ftdiv@f1 0131                                 ___ftdiv@f2 0134  
                               ___ftdiv@f3 013B                                 ___ftneg@f1 00D7  
                               ___ftmul@f1 00C8                                 ___ftmul@f2 00CB  
                      ??_init_ZIGBEE_basic 00C6                                 ___fttol@f1 0140  
                           __pcstackCOMRAM 0026                               __pidataBANK0 2DF0  
                             __pidataBANK1 2D96       nonbeacon_PAN_coordinator_device@temp 00C1  
                      ??_SYSTEM_Initialize 00C0                                  ?_TMR0_ISR 0026  
                            __end_of_delay 2C5A                  __end_of_set_WAKE_from_pin 2C94  
                              ?_Read_b_eep 00BD                           _enable_interrupt 2DC6  
                               __end_of_R3 100A                                  ?_SPI_Read 0026  
                      __end_of_Resistance0 1004                                 ___lwtoft@c 00C5  
                   __end_of_start_transmit 2712                __size_of_EXT_INT_Initialize 001A  
                                ?_RF_reset 0026                      TMR0_ISR@CountCallBack 008B  
                      __size_of_Clear_Data 0036                          __end_of_ScanInput 2A32  
                                ?_Delay_ms 00BD                               Xor_check@xor 00C3  
                __end_of_init_ZIGBEE_basic 24B4                __size_of_write_ZIGBEE_short 0024  
                             ?i2_Xor_check 0026              write_ZIGBEE_long@address_high 00C4  
                 read_ZIGBEE_short@address 00C0                                    ??_delay 00BF  
                __end_of_SYSTEM_Initialize 2CCA         __size_of_Clear_Zigbee_Store_Buffer 0026  
                          _ADDRESS_short_1 00E2                            _ADDRESS_short_2 00E9  
                               __pbssBANK0 0060                                 __pbssBANK1 0100  
                           ??_set_CCA_mode 00C1                            __CFG_PLLCFG$OFF 000000  
                     i2_write_ZIGBEE_short 2C5A                      _INT0_InterruptHandler 0076  
                               ??_INT0_ISR 0026                           ?_set_not_encrypt 0026  
                            ?_set_TX_power 0026                    ??_init_ZIGBEE_nonbeacon 00C7  
         __end_of_TMR0_SetInterruptHandler 2DE2                                 ??_TMR0_ISR 00A8  
              i2write_ZIGBEE_short@address 0029                         __size_of_pin_reset 0022  
                               _enable_PLL 2D26                               ??i2_SPI_Read 0026  
                                ?___ftpack 00BD                                 ??_SPI_Read 00BD  
                            ??_Write_b_eep 00C0                                    _DATA_RX 00A0  
                                  _DATA_TX 00A5                    __size_of_ADC_Initialize 0016  
                                ?___lwtoft 00C5                          __end_of_Xor_check 2754  
                          ?_start_transmit 0026                                 ??_RF_reset 00C1  
                                  _ID_READ 0099           __size_of_set_frame_format_filter 0092  
                                  _REFOCON 000F2A                                 ??_Delay_ms 00BF  
                                  _OSCCON2 000F64                                    _F_ERROR 0013  
                                  _OSCTUNE 000F9B                                    _F_IdSet 0019  
                                  _SSP1BUF 000FC9                set_frame_format_filter@temp 00C2  
                                  _F_SetID 0010                                    _F_Input 001C  
               i2write_ZIGBEE_short@data_r 0028                                    _T_ERROR 0081  
                   set_reception_mode@temp 00C2                        __size_of_Read_b_eep 0012  
                     __size_ofi2_SPI_Write 0010                      ?i2_write_ZIGBEE_short 0028  
        __size_of_INT0_SetInterruptHandler 000E                                    _T_Input 001D  
                     __end_of_read_RX_FIFO 191A                  ?_INT0_SetInterruptHandler 00BD  
                                  _InitSPI 2B8C                              _Relay_On_Time 007B  
                       __end_ofi2_SPI_Read 2DC6                          SPI_Write@response 00BD  
                           ??_set_TX_power 00C6                            Xor_check@length 00BF  
                          __CFG_PWRTEN$OFF 000000                                  ?_pin_wake 0026  
                                  __Hparam 0000                              _HEADER_LENGHT 100D  
                        ?_read_ZIGBEE_long 0028                                    __Lparam 0000  
                     __size_of_set_channel 01C0                   write_ZIGBEE_long@address 00BF  
                              _Resistance0 1001                                    ___aldiv 21DA  
                       ??_read_ZIGBEE_long 002A                    read_ZIGBEE_long@address 0028  
                                  ___ftadd 191A                                    ___ftdiv 2012  
                                  ___ftneg 2AF8                 __size_of_set_WAKE_from_pin 001C  
                                  ___ftmul 1F1C                                    ___fttol 1E24  
                             __psmallconst 1000                                    _address 0009  
                     __size_of_set_not_ACK 0016                          set_long_address@i 00C3  
                                  __pcinit 25B6                                 ??___ftpack 00C2  
                                  __ramtop 1000                                    __ptext0 1010  
                                  __ptext1 1CBC                                    __ptext2 26CA  
                                  __ptext3 2A32                                    __ptext4 2D4E  
                                  __ptext5 2CE4                                    __ptext6 2CFA  
                                  __ptext7 2712                                    __ptext8 29A8  
                                  __ptext9 2546                                 ??___lwtoft 00C8  
                                _T0CONbits 000FD5                      _OSCILLATOR_Initialize 2D3A  
                         ___aldiv@dividend 00BD                   ??_PIN_MANAGER_Initialize 00BD  
                        __CFG_MSSPMSK$MSK7 000000                     _address_TX_normal_FIFO 0089  
               __size_of_init_ZIGBEE_basic 0096                        __end_of_Write_b_eep 28D4  
                               _set_PAN_ID 29D6                 __size_of_SYSTEM_Initialize 001A  
                           __pintcode_body 20FA                     __size_of_set_RSSI_mode 0042  
                     end_of_initialization 261A                          __end_of_pin_reset 2C1A  
              __size_of_set_reception_mode 0070                                  Delay_ms@y 00BF  
                          _address_RX_FIFO 00E4                                    int_func 20FA  
                             ??_Clear_Data 00BD                  set_channel@channel_number 00C6  
                        _write_ZIGBEE_long 2624          __size_of_Zigbee_data_Store_Buffer 0034  
                                _F_ID_SEND 0005                  ?_Zigbee_data_Store_Buffer 0026  
                               ??_pin_wake 00C1                                  _F_ID_Send 0007  
                       ?_write_ZIGBEE_long 00BF                           ___aldiv@quotient 00C7  
                                  postdec1 000FE5                        __end_of_DATA_LENGHT 100F  
                                  postinc0 000FEE                          _set_short_address 29A8  
                        set_TX_power@power 00C7                                ?_enable_PLL 0026  
                                _F_Calling 0093                         ?_set_short_address 00C1  
                      ??_write_ZIGBEE_long 00C2                       __end_of_set_CCA_mode 236E  
                 _TMR0_SetInterruptHandler 2DD4                                  _PORTAbits 000F80  
                                _PORTCbits 000F82                                  _PORTFbits 000F85  
                      i2_read_ZIGBEE_short 2C1A                        ??_set_short_address 00C3  
                       __end_of_Clear_Data 290A                                  _TRISCbits 000F94  
                                _SPI_Write 2D72                        set_not_encrypt@temp 00C1  
                   ??i2_write_ZIGBEE_short 0029                             i2Xor_check@xor 002C  
                 __end_of_enable_interrupt 2DD4              __size_of_write_TX_normal_FIFO 0168  
                     __size_ofi2_Xor_check 0040                      _ZigBee_Receive_Buffer 0060  
                __end_of_write_ZIGBEE_long 2678                   set_reception_mode@r_mode 00C1  
                              ___ftdiv@exp 013E                       ?i2_read_ZIGBEE_short 0026  
                                _T_ID_Send 000F                             __end_of_AdcRef 100D  
                        ?_set_long_address 00C1                          __size_of_INT0_ISR 0008  
                __end_of_set_short_address 29D6                         i2SPI_Write@command 0027  
                              ___ftmul@exp 00D1                         ??_set_long_address 00C3  
                                _Device_ID 001E                                  _T_Calling 0001  
             __end_of_INTERRUPT_Initialize 2E0A                              _set_RSSI_mode 2796  
                             ??_Read_b_eep 00BF       __end_of_INT0_DefaultInterruptHandler 2E0E  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 2E0C  
                        __size_of_TMR0_ISR 0028                             _ADC_Initialize 2D10  
                              _Write_b_eep 2898                     ?_OSCILLATOR_Initialize 0026  
                  _set_frame_format_filter 24B4                                  _Count_LED 0012  
                  set_long_address@address 00C1                          __size_of_SPI_Read 0012  
                    __end_of_INT0_CallBack 2BF8                        start_initialization 25B6  
                     __end_of_set_TX_power 2796                   __size_of_TMR0_Initialize 0028  
          __size_of_PIN_MANAGER_Initialize 0042                          __size_of_RF_reset 0028  
                              __end_of_Vcc 1007                                ?_set_PAN_ID 00C1  
                               ?_SPI_Write 0026                                  _ScanInput 2A04  
                        __size_of_Delay_ms 001C                      __size_of_read_RX_FIFO 0282  
                                _InputRead 001A                        __size_of_enable_PLL 0014  
                       __end_of_Read_b_eep 2D96                      ??i2_read_ZIGBEE_short 0028  
                              _DATA_LENGHT 100E                                  _Value_LDR 0079  
                           ?_set_RSSI_mode 0026            set_frame_format_filter@fff_mode 00C1  
                             Delay_ms@time 00BD                     __size_of_TMR0_CallBack 0024  
                         ??_start_transmit 00C1                     __end_of_ADC_Initialize 2D26  
           __size_of_init_ZIGBEE_nonbeacon 0024                                __pdataBANK0 00E0  
                              __pdataBANK1 0152              __end_of_init_ZIGBEE_nonbeacon 2B68  
                            _ResistanceLDR 006A                 __end_of_EXT_INT_Initialize 2CE4  
            ?_INT0_DefaultInterruptHandler 0026                               _read_RX_FIFO 1698  
                        __size_of___ftpack 00B0                 __end_of_write_ZIGBEE_short 2B8C  
                     i2Xor_check@xor_value 002A                                __pbssCOMRAM 0001  
         __end_of_INT0_SetInterruptHandler 2DF0                          __size_of___lwtoft 0026  
                            __pcstackBANK0 00A8                              __pcstackBANK1 012B  
                        set_RSSI_mode@temp 00C2                                  _Xor_check 2712  
                               ?_ScanInput 0026                   write_ZIGBEE_short@data_r 00BF  
               __size_of_write_ZIGBEE_long 0054               write_ZIGBEE_long@address_low 00C5  
                  read_ZIGBEE_short@data_r 00BF                                   ?_InitSPI 0026  
                    _TMR0_InterruptHandler 0073                                  _main$2278 014F  
                   _PIN_MANAGER_Initialize 27D8                 __size_of_set_short_address 002E  
                        __CFG_CCP2MX$PORTC 000000                                  __pintcode 0008  
                    __size_of_set_CCA_mode 00C6               read_ZIGBEE_long@address_high 002D  
                        __size_of_pin_wake 0012                                   ?___aldiv 00BD  
                                 ?___ftadd 00DA                 Clear_Zigbee_Store_Buffer@d 00BD  
                      __size_of_set_PAN_ID 002E                                   ?___ftdiv 0131  
                                 ?___ftneg 00D7                   __size_of_set_not_encrypt 0016  
                                 ?___ftmul 00C8                                   ?___fttol 0140  
                          ?_ADC_Initialize 0026                  ??_set_frame_format_filter 00C1  
                              __pintcodelo 0018                          i2SPI_Read@TempVar 0026  
                              __smallconst 1000                               _Send_Frame_2 0096  
                __size_of_read_ZIGBEE_long 0052           __end_of_Zigbee_data_Store_Buffer 29A8  
                             _F_LDR_STATUS 008D                                 ?_Xor_check 00BD  
                            ??i2_SPI_Write 0026                                ??_SPI_Write 00BD  
                   read_ZIGBEE_long@data_r 002C                             __size_of_delay 001E  
                            _TMR0_CallBack 2BB0                       _INTERRUPT_Initialize 2E04  
                          ___aldiv@divisor 00C1                          ??_TMR0_Initialize 00C0  
                          ___aldiv@counter 00C5                                   _INT0_ISR 2DFC  
                             _set_CCA_mode 22A8                              ??_set_channel 00C6  
               ?_Clear_Zigbee_Store_Buffer 0026                                  _pin_reset 2BF8  
                                 _PAN_ID_1 00E0                                   _PAN_ID_2 00E7  
                                 _INTTRUPT 0025                            ??_set_RSSI_mode 00C1  
                                _lost_data 001F                                   _F_BUZZER 0098  
                                 i1u483_28 2BC0                                   i1u484_20 2AC2  
               ??_TMR0_SetInterruptHandler 00C0                                   i2u175_40 17A4  
                                 _PIR1bits 000F9E                                   i2u481_48 2BE4  
                            ??_set_not_ACK 00C1                                   _RCONbits 000FD0  
                                _slave_add 0015                                   _TMR0_ISR 2AAA  
                             ??_enable_PLL 00C6                                   _F_Buzzer 0094  
                                 _SPI_Read 2D4E                      __size_of_set_TX_power 0042  
                               _ADCON0bits 000FC2                           __CFG_SOSCSEL$DIG 000000  
                          Write_b_eep@badd 00BD                                   _RF_reset 2A5A  
                          Write_b_eep@data 00BF                                   _T_BUZZER 0006  
           ??_INT0_DefaultInterruptHandler 0026                                   _Delay_ms 2C94  
                            read_RX_FIFO@i 0035                             ?_TMR0_CallBack 0026  
               __end_of_set_reception_mode 25B6                                ??_ScanInput 00A8  
                              _INTCON2bits 000FF1                                  copy_data0 25CA  
                                copy_data1 25EA                      ?_INTERRUPT_Initialize 0026  
                 _INT0_SetInterruptHandler 2DE2            __end_of_set_frame_format_filter 2546  
                        ?_enable_interrupt 0026                         __end_of_enable_PLL 2D3A  
                      __end_ofi2_SPI_Write 2DB6                         ??_enable_interrupt 00C1  
                        _read_ZIGBEE_short 2A32                                 _EECON1bits 000F7F  
                               ?_pin_reset 0026                                Clear_Data@n 00BD  
        __end_of_Clear_Zigbee_Store_Buffer 2B44                           __size_of_InitSPI 0024  
                                 __Hrparam 0000                         ?_read_ZIGBEE_short 0026  
                             _set_TX_power 2754                                   __Lrparam 0000  
                        _ADC_GetConversion 290A                         __CFG_BOREN$SBORDIS 000000  
                      __end_of_set_channel 1CBC               __end_of_write_TX_normal_FIFO 1E24  
                                 _Portread 001B                    ??_OSCILLATOR_Initialize 00BD  
                       ?_ADC_GetConversion 00BD                           __size_of___aldiv 00CE  
                         __size_of___ftadd 01E2                           __size_of___ftdiv 00E8  
                         __size_of___ftneg 0026                           __size_of___ftmul 00F6  
                         __size_of___fttol 00F8                        ??_read_ZIGBEE_short 00BF  
                                 ___ftpack 236E                               ?_Write_b_eep 00BD  
                      __end_of_set_not_ACK 2D10                                   ___lwtoft 2AD2  
                __size_of_set_long_address 0034                        ??_ADC_GetConversion 00BF  
                        ??_set_not_encrypt 00C1            ??_INTERRUPT_InterruptManagerLow 00A8  
                            ??i2_Xor_check 0029                               ??_set_PAN_ID 00C3  
                              ??_Xor_check 00C0                                   __ptext10 2940  
                                 __ptext11 24B4                                   __ptext20 2796  
                                 __ptext12 2C78                                   __ptext21 22A8  
                                 __ptext13 2754                                   __ptext30 2AD2  
                                 __ptext22 2D60                                   __ptext14 29D6  
                                 __ptext31 1E24                                   __ptext23 2C94  
                                 __ptext15 2BF8                                   __ptext40 2A82  
                                 __ptext32 2AF8                                   __ptext24 241E  
                                 __ptext16 285A                                   __ptext41 2DD4  
                                 __ptext33 1F1C                                   __ptext25 2D26  
                                 __ptext17 2B44                                   __ptext50 2C3C  
                                 __ptext42 27D8                                   __ptext34 2012  
                                 __ptext26 2624                                   __ptext18 1AFC  
                                 __ptext51 2B1E                                   __ptext43 2D3A  
                                 __ptext35 191A                                   __ptext27 2DC6  
                                 __ptext19 2A5A                                   __ptext60 2C1A  
                                 __ptext52 28D4                                   __ptext44 2E04  
                                 __ptext36 236E                                   __ptext28 2B68  
                                 __ptext61 281A                                   __ptext53 290A  
                                 __ptext45 2CCA                                   __ptext37 21DA  
                                 __ptext29 2D72                                   __ptext70 2E0C  
                                 __ptext62 1698                                   __ptext46 2DE2  
                                 __ptext38 2898                                   __ptext71 0000  
                                 __ptext63 2C5A                                   __ptext55 2AAA  
                                 __ptext47 2D10                                   __ptext39 2CB0  
                                 __ptext64 2678                                   __ptext56 2BB0  
                                 __ptext48 2D84                                   __ptext65 2DA6  
                                 __ptext57 2E0A                                   __ptext49 2B8C  
                                 __ptext66 2DB6                                   __ptext58 2A04  
                                 __ptext67 2974                                   __ptext68 2DFC  
                                 __ptext69 2BD4                               _SSP1CON1bits 000FC6  
                __end_of_read_ZIGBEE_short 2A5A                   _Zigbee_data_Store_Buffer 2974  
            __size_ofi2_write_ZIGBEE_short 001E                              __size_of_main 0688  
                                 delay@dly 00BD       __end_of_TMR0_DefaultInterruptHandler 2E0C  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 2E0A  
                __end_of_ADC_GetConversion 2940                                   _pin_wake 2D60  
                      __CFG_RTCOSC$SOSCREF 000000                                   int$flags 004A  
                                 _portread 0004                       set_CCA_mode@CCA_mode 00C1  
                       __end_of_set_PAN_ID 2A04                  write_ZIGBEE_short@address 00C0  
                             _SSP1STATbits 000FC7                        __CFG_INTOSCSEL$HIGH 000000  
                               _RECEIVE_OK 0095                           _read_ZIGBEE_long 2678  
                               _INTCONbits 000FF2                          set_PAN_ID@address 00C1  
                          ??_TMR0_CallBack 00A8                     ??_INTERRUPT_Initialize 00BD  
              __end_ofi2_read_ZIGBEE_short 2C3C                                i2_SPI_Write 2DA6  
                       _EXT_INT_Initialize 2CCA                                   intlevel1 0000  
                                 intlevel2 0000                         _write_ZIGBEE_short 2B68  
                      __end_ofi2_Xor_check 285A                    ?_PIN_MANAGER_Initialize 0026  
                      ?_EXT_INT_Initialize 0026                                _set_channel 1AFC  
                              ??_pin_reset 00C1                      __end_of_HEADER_LENGHT 100E  
                         ??_ADC_Initialize 00BD                     __size_of_INT0_CallBack 0024  
            ?_TMR0_DefaultInterruptHandler 0026                        ?_write_ZIGBEE_short 00BF  
                              _set_not_ACK 2CFA                         __CFG_WDTPS$1048576 000000  
                               i2_SPI_Read 2DB6     __end_of_INTERRUPT_InterruptManagerHigh 21DA  
  __size_of_INTERRUPT_InterruptManagerHigh 21D2             _INTERRUPT_InterruptManagerHigh 0008  
                    _init_ZIGBEE_nonbeacon 2B44                       ??_EXT_INT_Initialize 00C0  
                               _SEQ_NUMBER 00E6                            _TMR0_Initialize 2A82  
                             ___aldiv@sign 00C6                       ??_write_ZIGBEE_short 00C0  
                             _F_Relay_Time 0092      __end_of_INTERRUPT_InterruptManagerLow 0124  
   __size_of_INTERRUPT_InterruptManagerLow 010C              _INTERRUPT_InterruptManagerLow 0018  
                     _write_TX_normal_FIFO 1CBC             __end_of_PIN_MANAGER_Initialize 281A  
               __size_of_read_ZIGBEE_short 0028                        __CFG_BORPWR$ZPBORMV 000000  
              ??_Clear_Zigbee_Store_Buffer 00BD                 __size_of_ADC_GetConversion 0036  
