

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 07 18:28:09 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104  0000                     
   105                           ; Version 1.45
   106                           ; Generated 16/11/2017 GMT
   107                           ; 
   108                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC18F67K22 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     
   140                           	psect	idataBANK0
   141  0031D2                     __pidataBANK0:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _INPUT_DS
   145  0031D2  FF                 	db	255
   146  0031D3  FF                 	db	255
   147                           
   148                           ;initializer for _INPUT_PS
   149  0031D4  FF                 	db	255
   150  0031D5  FF                 	db	255
   151                           
   152                           ;initializer for _PAN_ID_1
   153  0031D6  03                 	db	3
   154  0031D7  03                 	db	3
   155                           
   156                           ;initializer for _ADDRESS_short_1
   157  0031D8  01                 	db	1
   158  0031D9  01                 	db	1
   159                           
   160                           ;initializer for _address_RX_FIFO
   161  0031DA  0300               	dw	768
   162                           
   163                           ;initializer for _SEQ_NUMBER
   164  0031DC  23                 	db	35
   165                           
   166                           ;initializer for _ADDRESS_long_2
   167  0031DD  02                 	db	2
   168  0031DE  02                 	db	2
   169  0031DF  02                 	db	2
   170  0031E0  02                 	db	2
   171  0031E1  02                 	db	2
   172  0031E2  02                 	db	2
   173  0031E3  02                 	db	2
   174  0031E4  02                 	db	2
   175                           
   176                           ;initializer for _PAN_ID_2
   177  0031E5  03                 	db	3
   178  0031E6  03                 	db	3
   179                           
   180                           ;initializer for _ADDRESS_short_2
   181  0031E7  02                 	db	2
   182  0031E8  02                 	db	2
   183                           
   184                           	psect	idataBANK1
   185  0032F4                     __pidataBANK1:
   186                           	opt stack 0
   187                           
   188                           ;initializer for _ADDRESS_long_1
   189  0032F4  01                 	db	1
   190  0032F5  01                 	db	1
   191  0032F6  01                 	db	1
   192  0032F7  01                 	db	1
   193  0032F8  01                 	db	1
   194  0032F9  01                 	db	1
   195  0032FA  01                 	db	1
   196  0032FB  01                 	db	1
   197                           
   198                           	psect	smallconst
   199  001000                     __psmallconst:
   200                           	opt stack 0
   201  001000  00                 	db	0
   202  001001                     _HEADER_LENGHT:
   203                           	opt stack 0
   204  001001  0B                 	db	11
   205  001002                     __end_of_HEADER_LENGHT:
   206                           	opt stack 0
   207  001002                     _DATA_LENGHT:
   208                           	opt stack 0
   209  001002  05                 	db	5
   210  001003                     __end_of_DATA_LENGHT:
   211                           	opt stack 0
   212  0000                     _ANCON2	set	3875
   213  0000                     _ANCON1	set	3876
   214  0000                     _ANCON0	set	3877
   215  0000                     _REFOCON	set	3882
   216  0000                     _PORTG	set	3974
   217  0000                     _PORTEbits	set	3972
   218  0000                     _PORTE	set	3972
   219  0000                     _PORTAbits	set	3968
   220  0000                     _EECON2	set	3966
   221  0000                     _EECON1bits	set	3967
   222  0000                     _EEDATA	set	3937
   223  0000                     _EEADR	set	3938
   224  0000                     _PIR1bits	set	3998
   225  0000                     _SSP1BUF	set	4041
   226  0000                     _SSP1STATbits	set	4039
   227  0000                     _TRISCbits	set	3988
   228  0000                     _SSP1CON1bits	set	4038
   229  0000                     _PORTFbits	set	3973
   230  0000                     _PORTCbits	set	3970
   231  0000                     _RCONbits	set	4048
   232  0000                     _INTCON2bits	set	4081
   233  0000                     _INTCON3bits	set	4080
   234  0000                     _TRISD	set	3989
   235  0000                     _TRISC	set	3988
   236  0000                     _TRISB	set	3987
   237  0000                     _TRISG	set	3992
   238  0000                     _TRISA	set	3986
   239  0000                     _TRISF	set	3991
   240  0000                     _TRISE	set	3990
   241  0000                     _LATC	set	3979
   242  0000                     _LATG	set	3983
   243  0000                     _LATB	set	3978
   244  0000                     _LATF	set	3982
   245  0000                     _LATA	set	3977
   246  0000                     _LATD	set	3980
   247  0000                     _LATE	set	3981
   248  0000                     _T0CONbits	set	4053
   249  0000                     _T0CON	set	4053
   250  0000                     _INTCONbits	set	4082
   251  0000                     _TMR0L	set	4054
   252  0000                     _TMR0H	set	4055
   253  0000                     _OSCTUNE	set	3995
   254  0000                     _OSCCON2	set	3940
   255  0000                     _OSCCON	set	4051
   256  001003                     STR_8:
   257  001003  54                 	db	84	;'T'
   258  001004  2E                 	db	46
   259  001005  4C                 	db	76	;'L'
   260  001006  74                 	db	116	;'t'
   261  001007  72                 	db	114	;'r'
   262  001008  3A                 	db	58	;':'
   263  001009  20                 	db	32
   264  00100A  20                 	db	32
   265  00100B  20                 	db	32
   266  00100C  20                 	db	32
   267  00100D  20                 	db	32
   268  00100E  20                 	db	32
   269  00100F  20                 	db	32
   270  001010  20                 	db	32
   271  001011  20                 	db	32
   272  001012  20                 	db	32
   273  001013  00                 	db	0
   274  001014                     STR_7:
   275  001014  46                 	db	70	;'F'
   276  001015  2E                 	db	46
   277  001016  52                 	db	82	;'R'
   278  001017  61                 	db	97	;'a'
   279  001018  74                 	db	116	;'t'
   280  001019  65                 	db	101	;'e'
   281  00101A  3A                 	db	58	;':'
   282  00101B  20                 	db	32
   283  00101C  20                 	db	32
   284  00101D  20                 	db	32
   285  00101E  20                 	db	32
   286  00101F  20                 	db	32
   287  001020  20                 	db	32
   288  001021  20                 	db	32
   289  001022  20                 	db	32
   290  001023  20                 	db	32
   291  001024  00                 	db	0
   292  001025                     STR_10:
   293  001025  20                 	db	32
   294  001026  20                 	db	32
   295  001027  20                 	db	32
   296  001028  20                 	db	32
   297  001029  20                 	db	32
   298  00102A  20                 	db	32
   299  00102B  30                 	db	48	;'0'
   300  00102C  30                 	db	48	;'0'
   301  00102D  30                 	db	48	;'0'
   302  00102E  20                 	db	32
   303  00102F  20                 	db	32
   304  001030  20                 	db	32
   305  001031  20                 	db	32
   306  001032  20                 	db	32
   307  001033  20                 	db	32
   308  001034  20                 	db	32
   309  001035  00                 	db	0
   310  001036                     STR_5:
   311  001036  20                 	db	32
   312  001037  20                 	db	32
   313  001038  20                 	db	32
   314  001039  20                 	db	32
   315  00103A  47                 	db	71	;'G'
   316  00103B  6F                 	db	111	;'o'
   317  00103C  20                 	db	32
   318  00103D  46                 	db	70	;'F'
   319  00103E  6F                 	db	111	;'o'
   320  00103F  72                 	db	114	;'r'
   321  001040  20                 	db	32
   322  001041  20                 	db	32
   323  001042  20                 	db	32
   324  001043  20                 	db	32
   325  001044  20                 	db	32
   326  001045  20                 	db	32
   327  001046  00                 	db	0
   328  001047                     STR_17:
   329  001047  44                 	db	68	;'D'
   330  001048  61                 	db	97	;'a'
   331  001049  74                 	db	116	;'t'
   332  00104A  61                 	db	97	;'a'
   333  00104B  20                 	db	32
   334  00104C  53                 	db	83	;'S'
   335  00104D  61                 	db	97	;'a'
   336  00104E  76                 	db	118	;'v'
   337  00104F  65                 	db	101	;'e'
   338  001050  64                 	db	100	;'d'
   339  001051  2E                 	db	46
   340  001052  2E                 	db	46
   341  001053  2E                 	db	46
   342  001054  20                 	db	32
   343  001055  20                 	db	32
   344  001056  20                 	db	32
   345  001057  00                 	db	0
   346  001058                     STR_11:
   347  001058  57                 	db	87	;'W'
   348  001059  61                 	db	97	;'a'
   349  00105A  6E                 	db	110	;'n'
   350  00105B  74                 	db	116	;'t'
   351  00105C  20                 	db	32
   352  00105D  74                 	db	116	;'t'
   353  00105E  6F                 	db	111	;'o'
   354  00105F  20                 	db	32
   355  001060  53                 	db	83	;'S'
   356  001061  41                 	db	65	;'A'
   357  001062  56                 	db	86	;'V'
   358  001063  45                 	db	69	;'E'
   359  001064  3F                 	db	63	;'?'
   360  001065  20                 	db	32
   361  001066  20                 	db	32
   362  001067  20                 	db	32
   363  001068  00                 	db	0
   364  001069                     STR_12:
   365  001069  20                 	db	32
   366  00106A  20                 	db	32
   367  00106B  3E                 	db	62	;'>'
   368  00106C  59                 	db	89	;'Y'
   369  00106D  65                 	db	101	;'e'
   370  00106E  73                 	db	115	;'s'
   371  00106F  20                 	db	32
   372  001070  20                 	db	32
   373  001071  20                 	db	32
   374  001072  20                 	db	32
   375  001073  20                 	db	32
   376  001074  4E                 	db	78	;'N'
   377  001075  6F                 	db	111	;'o'
   378  001076  20                 	db	32
   379  001077  20                 	db	32
   380  001078  20                 	db	32
   381  001079  00                 	db	0
   382  00107A                     STR_14:
   383  00107A  20                 	db	32
   384  00107B  20                 	db	32
   385  00107C  20                 	db	32
   386  00107D  59                 	db	89	;'Y'
   387  00107E  65                 	db	101	;'e'
   388  00107F  73                 	db	115	;'s'
   389  001080  20                 	db	32
   390  001081  20                 	db	32
   391  001082  20                 	db	32
   392  001083  20                 	db	32
   393  001084  3E                 	db	62	;'>'
   394  001085  4E                 	db	78	;'N'
   395  001086  6F                 	db	111	;'o'
   396  001087  20                 	db	32
   397  001088  20                 	db	32
   398  001089  20                 	db	32
   399  00108A  00                 	db	0
   400  00108B                     STR_1:
   401  00108B  20                 	db	32
   402  00108C  20                 	db	32
   403  00108D  20                 	db	32
   404  00108E  57                 	db	87	;'W'
   405  00108F  65                 	db	101	;'e'
   406  001090  6C                 	db	108	;'l'
   407  001091  43                 	db	67	;'C'
   408  001092  6F                 	db	111	;'o'
   409  001093  6D                 	db	109	;'m'
   410  001094  65                 	db	101	;'e'
   411  001095  20                 	db	32
   412  001096  54                 	db	84	;'T'
   413  001097  6F                 	db	111	;'o'
   414  001098  20                 	db	32
   415  001099  20                 	db	32
   416  00109A  20                 	db	32
   417  00109B  00                 	db	0
   418  00109C                     STR_3:
   419  00109C  20                 	db	32
   420  00109D  50                 	db	80	;'P'
   421  00109E  72                 	db	114	;'r'
   422  00109F  65                 	db	101	;'e'
   423  0010A0  73                 	db	115	;'s'
   424  0010A1  73                 	db	115	;'s'
   425  0010A2  20                 	db	32
   426  0010A3  53                 	db	83	;'S'
   427  0010A4  45                 	db	69	;'E'
   428  0010A5  54                 	db	84	;'T'
   429  0010A6  20                 	db	32
   430  0010A7  4B                 	db	75	;'K'
   431  0010A8  45                 	db	69	;'E'
   432  0010A9  59                 	db	89	;'Y'
   433  0010AA  20                 	db	32
   434  0010AB  20                 	db	32
   435  0010AC  00                 	db	0
   436  0010AD                     STR_9:
   437  0010AD  20                 	db	32
   438  0010AE  20                 	db	32
   439  0010AF  44                 	db	68	;'D'
   440  0010B0  65                 	db	101	;'e'
   441  0010B1  76                 	db	118	;'v'
   442  0010B2  69                 	db	105	;'i'
   443  0010B3  63                 	db	99	;'c'
   444  0010B4  65                 	db	101	;'e'
   445  0010B5  20                 	db	32
   446  0010B6  49                 	db	73	;'I'
   447  0010B7  64                 	db	100	;'d'
   448  0010B8  20                 	db	32
   449  0010B9  49                 	db	73	;'I'
   450  0010BA  73                 	db	115	;'s'
   451  0010BB  20                 	db	32
   452  0010BC  20                 	db	32
   453  0010BD  00                 	db	0
   454  0010BE                     STR_6:
   455  0010BE  20                 	db	32
   456  0010BF  20                 	db	32
   457  0010C0  53                 	db	83	;'S'
   458  0010C1  65                 	db	101	;'e'
   459  0010C2  74                 	db	116	;'t'
   460  0010C3  20                 	db	32
   461  0010C4  44                 	db	68	;'D'
   462  0010C5  65                 	db	101	;'e'
   463  0010C6  76                 	db	118	;'v'
   464  0010C7  69                 	db	105	;'i'
   465  0010C8  63                 	db	99	;'c'
   466  0010C9  65                 	db	101	;'e'
   467  0010CA  20                 	db	32
   468  0010CB  49                 	db	73	;'I'
   469  0010CC  44                 	db	68	;'D'
   470  0010CD  20                 	db	32
   471  0010CE  00                 	db	0
   472  0010CF                     STR_2:
   473  0010CF  2D                 	db	45
   474  0010D0  2D                 	db	45
   475  0010D1  3E                 	db	62	;'>'
   476  0010D2  53                 	db	83	;'S'
   477  0010D3  6D                 	db	109	;'m'
   478  0010D4  61                 	db	97	;'a'
   479  0010D5  72                 	db	114	;'r'
   480  0010D6  74                 	db	116	;'t'
   481  0010D7  20                 	db	32
   482  0010D8  43                 	db	67	;'C'
   483  0010D9  69                 	db	105	;'i'
   484  0010DA  74                 	db	116	;'t'
   485  0010DB  79                 	db	121	;'y'
   486  0010DC  3C                 	db	60	;'<'
   487  0010DD  2D                 	db	45
   488  0010DE  2D                 	db	45
   489  0010DF  00                 	db	0
   490  0010E0                     STR_4:
   491  0010E0  54                 	db	84	;'T'
   492  0010E1  6F                 	db	111	;'o'
   493  0010E2  20                 	db	32
   494  0010E3  53                 	db	83	;'S'
   495  0010E4  65                 	db	101	;'e'
   496  0010E5  74                 	db	116	;'t'
   497  0010E6  20                 	db	32
   498  0010E7  44                 	db	68	;'D'
   499  0010E8  45                 	db	69	;'E'
   500  0010E9  56                 	db	86	;'V'
   501  0010EA  49                 	db	73	;'I'
   502  0010EB  43                 	db	67	;'C'
   503  0010EC  45                 	db	69	;'E'
   504  0010ED  20                 	db	32
   505  0010EE  49                 	db	73	;'I'
   506  0010EF  44                 	db	68	;'D'
   507  0010F0  00                 	db	0
   508  0000                     
   509                           ; #config settings
   510  0010F1  00                 	db	0	; dummy byte at the end
   511  0000                     
   512                           	psect	cinit
   513  0028D8                     __pcinit:
   514                           	opt stack 0
   515  0028D8                     start_initialization:
   516                           	opt stack 0
   517  0028D8                     __initialization:
   518                           	opt stack 0
   519                           
   520                           ; Initialize objects allocated to BANK1 (8 bytes)
   521                           ; load TBLPTR registers with __pidataBANK1
   522  0028D8  0EF4               	movlw	low __pidataBANK1
   523  0028DA  6EF6               	movwf	tblptrl,c
   524  0028DC  0E32               	movlw	high __pidataBANK1
   525  0028DE  6EF7               	movwf	tblptrh,c
   526  0028E0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   527  0028E2  6EF8               	movwf	tblptru,c
   528  0028E4  EE01  F03A         	lfsr	0,__pdataBANK1
   529  0028E8  EE10 F008          	lfsr	1,8
   530  0028EC                     copy_data0:
   531  0028EC  0009               	tblrd		*+
   532  0028EE  CFF5 FFEE          	movff	tablat,postinc0
   533  0028F2  50E5               	movf	postdec1,w,c
   534  0028F4  50E1               	movf	fsr1l,w,c
   535  0028F6  E1FA               	bnz	copy_data0
   536                           
   537                           ; Initialize objects allocated to BANK0 (23 bytes)
   538                           ; load TBLPTR registers with __pidataBANK0
   539  0028F8  0ED2               	movlw	low __pidataBANK0
   540  0028FA  6EF6               	movwf	tblptrl,c
   541  0028FC  0E31               	movlw	high __pidataBANK0
   542  0028FE  6EF7               	movwf	tblptrh,c
   543  002900  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   544  002902  6EF8               	movwf	tblptru,c
   545  002904  EE00  F0E4         	lfsr	0,__pdataBANK0
   546  002908  EE10 F017          	lfsr	1,23
   547  00290C                     copy_data1:
   548  00290C  0009               	tblrd		*+
   549  00290E  CFF5 FFEE          	movff	tablat,postinc0
   550  002912  50E5               	movf	postdec1,w,c
   551  002914  50E1               	movf	fsr1l,w,c
   552  002916  E1FA               	bnz	copy_data1
   553                           
   554                           ; Clear objects allocated to BANK1 (39 bytes)
   555  002918  EE01  F000         	lfsr	0,__pbssBANK1
   556  00291C  0E27               	movlw	39
   557  00291E                     clear_0:
   558  00291E  6AEE               	clrf	postinc0,c
   559  002920  06E8               	decf	wreg,f,c
   560  002922  E1FD               	bnz	clear_0
   561                           
   562                           ; Clear objects allocated to BANK0 (91 bytes)
   563  002924  EE00  F060         	lfsr	0,__pbssBANK0
   564  002928  0E5B               	movlw	91
   565  00292A                     clear_1:
   566  00292A  6AEE               	clrf	postinc0,c
   567  00292C  06E8               	decf	wreg,f,c
   568  00292E  E1FD               	bnz	clear_1
   569                           
   570                           ; Clear objects allocated to COMRAM (38 bytes)
   571  002930  EE00  F001         	lfsr	0,__pbssCOMRAM
   572  002934  0E26               	movlw	38
   573  002936                     clear_2:
   574  002936  6AEE               	clrf	postinc0,c
   575  002938  06E8               	decf	wreg,f,c
   576  00293A  E1FD               	bnz	clear_2
   577  00293C                     end_of_initialization:
   578                           	opt stack 0
   579  00293C                     __end_of__initialization:
   580                           	opt stack 0
   581  00293C  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   582  00293E  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   583  002940  0100               	movlb	0
   584  002942  EF79  F008         	goto	_main	;jump to C main() function
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	bssCOMRAM
   595  000001                     __pbssCOMRAM:
   596                           	opt stack 0
   597  000001                     _F_Enter:
   598                           	opt stack 0
   599  000001                     	ds	1
   600  000002                     _F_TimerCounting:
   601                           	opt stack 0
   602  000002                     	ds	1
   603  000003                     _PORTGX:
   604                           	opt stack 0
   605  000003                     	ds	1
   606  000004                     _F_ID_Send:
   607                           	opt stack 0
   608  000004                     	ds	1
   609  000005                     _ID_READ:
   610                           	opt stack 0
   611  000005                     	ds	1
   612  000006                     _Nilp:
   613                           	opt stack 0
   614  000006                     	ds	1
   615  000007                     _address:
   616                           	opt stack 0
   617  000007                     	ds	1
   618  000008                     _VALUE:
   619                           	opt stack 0
   620  000008                     	ds	1
   621  000009                     _value:
   622                           	opt stack 0
   623  000009                     	ds	1
   624  00000A                     _Trick:
   625                           	opt stack 0
   626  00000A                     	ds	1
   627  00000B                     _Tick:
   628                           	opt stack 0
   629  00000B                     	ds	1
   630  00000C                     _TX_ID:
   631                           	opt stack 0
   632  00000C                     	ds	1
   633  00000D                     _T_ID_Send:
   634                           	opt stack 0
   635  00000D                     	ds	1
   636  00000E                     _ID_SET:
   637                           	opt stack 0
   638  00000E                     	ds	1
   639  00000F                     _F_SetID:
   640                           	opt stack 0
   641  00000F                     	ds	1
   642  000010                     _T:
   643                           	opt stack 0
   644  000010                     	ds	1
   645  000011                     _Count_LED:
   646                           	opt stack 0
   647  000011                     	ds	1
   648  000012                     _F_ERROR:
   649                           	opt stack 0
   650  000012                     	ds	1
   651  000013                     _ERROR:
   652                           	opt stack 0
   653  000013                     	ds	1
   654  000014                     _slave_add:
   655                           	opt stack 0
   656  000014                     	ds	1
   657  000015                     _Store:
   658                           	opt stack 0
   659  000015                     	ds	1
   660  000016                     _d:
   661                           	opt stack 0
   662  000016                     	ds	1
   663  000017                     _i:
   664                           	opt stack 0
   665  000017                     	ds	1
   666  000018                     _F_IdSet:
   667                           	opt stack 0
   668  000018                     	ds	1
   669  000019                     _InputRead:
   670                           	opt stack 0
   671  000019                     	ds	1
   672  00001A                     _Portread:
   673                           	opt stack 0
   674  00001A                     	ds	1
   675  00001B                     _F_Input:
   676                           	opt stack 0
   677  00001B                     	ds	1
   678  00001C                     _T_Input:
   679                           	opt stack 0
   680  00001C                     	ds	1
   681  00001D                     _Device_ID:
   682                           	opt stack 0
   683  00001D                     	ds	1
   684  00001E                     _lost_data:
   685                           	opt stack 0
   686  00001E                     	ds	1
   687  00001F                     _RSSI2:
   688                           	opt stack 0
   689  00001F                     	ds	1
   690  000020                     _LQI:
   691                           	opt stack 0
   692  000020                     	ds	1
   693  000021                     _data_r:
   694                           	opt stack 0
   695  000021                     	ds	1
   696  000022                     _DATA:
   697                           	opt stack 0
   698  000022                     	ds	1
   699  000023                     _LENGTH:
   700                           	opt stack 0
   701  000023                     	ds	1
   702  000024                     _Count2:
   703                           	opt stack 0
   704  000024                     	ds	1
   705  000025                     _Count1:
   706                           	opt stack 0
   707  000025                     	ds	1
   708  000026                     _INTTRUPT:
   709                           	opt stack 0
   710  000026                     	ds	1
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           
   720                           	psect	bssBANK0
   721  000060                     __pbssBANK0:
   722                           	opt stack 0
   723  000060                     _Store_DATA:
   724                           	opt stack 0
   725  000060                     	ds	4
   726  000064                     _flowLitres:
   727                           	opt stack 0
   728  000064                     	ds	3
   729  000067                     _totalLitres:
   730                           	opt stack 0
   731  000067                     	ds	3
   732  00006A                     _CheckPassword:
   733                           	opt stack 0
   734  00006A                     	ds	3
   735  00006D                     _INT0_InterruptHandler:
   736                           	opt stack 0
   737  00006D                     	ds	3
   738  000070                     _INT1_InterruptHandler:
   739                           	opt stack 0
   740  000070                     	ds	3
   741  000073                     _TMR0_InterruptHandler:
   742                           	opt stack 0
   743  000073                     	ds	3
   744  000076                     _Pulse:
   745                           	opt stack 0
   746  000076                     	ds	2
   747  000078                     _T_Ltr:
   748                           	opt stack 0
   749  000078                     	ds	2
   750  00007A                     _ltr:
   751                           	opt stack 0
   752  00007A                     	ds	2
   753  00007C                     _Time2:
   754                           	opt stack 0
   755  00007C                     	ds	2
   756  00007E                     _Time:
   757                           	opt stack 0
   758  00007E                     	ds	2
   759  000080                     _Flow_Rate:
   760                           	opt stack 0
   761  000080                     	ds	2
   762  000082                     _flow_frequency:
   763                           	opt stack 0
   764  000082                     	ds	2
   765  000084                     _Num:
   766                           	opt stack 0
   767  000084                     	ds	2
   768  000086                     _ENTERCOUNT:
   769                           	opt stack 0
   770  000086                     	ds	2
   771  000088                     _COUNT:
   772                           	opt stack 0
   773  000088                     	ds	2
   774  00008A                     _Decrement:
   775                           	opt stack 0
   776  00008A                     	ds	2
   777  00008C                     _Increment:
   778                           	opt stack 0
   779  00008C                     	ds	2
   780  00008E                     _ckeck:
   781                           	opt stack 0
   782  00008E                     	ds	2
   783  000090                     _T_ERROR:
   784                           	opt stack 0
   785  000090                     	ds	2
   786  000092                     _CRC:
   787                           	opt stack 0
   788  000092                     	ds	2
   789  000094                     _TX_CRC:
   790                           	opt stack 0
   791  000094                     	ds	2
   792  000096                     _Rv_CRC:
   793                           	opt stack 0
   794  000096                     	ds	2
   795  000098                     _address_TX_normal_FIFO:
   796                           	opt stack 0
   797  000098                     	ds	2
   798  00009A                     TMR0_ISR@CountCallBack:
   799                           	opt stack 0
   800  00009A                     	ds	2
   801  00009C                     _V_Temp:
   802                           	opt stack 0
   803  00009C                     	ds	1
   804  00009D                     _IdByte3:
   805                           	opt stack 0
   806  00009D                     	ds	1
   807  00009E                     _IdByte2:
   808                           	opt stack 0
   809  00009E                     	ds	1
   810  00009F                     _IdByte1:
   811                           	opt stack 0
   812  00009F                     	ds	1
   813  0000A0                     _addr:
   814                           	opt stack 0
   815  0000A0                     	ds	1
   816  0000A1                     _Digit:
   817                           	opt stack 0
   818  0000A1                     	ds	1
   819  0000A2                     _SendId:
   820                           	opt stack 0
   821  0000A2                     	ds	1
   822  0000A3                     _Module_ID:
   823                           	opt stack 0
   824  0000A3                     	ds	1
   825  0000A4                     _Enter:
   826                           	opt stack 0
   827  0000A4                     	ds	1
   828  0000A5                     _F_Success:
   829                           	opt stack 0
   830  0000A5                     	ds	1
   831  0000A6                     _ConfigModeEntered:
   832                           	opt stack 0
   833  0000A6                     	ds	1
   834  0000A7                     _flag:
   835                           	opt stack 0
   836  0000A7                     	ds	1
   837  0000A8                     _Send_Frame_2:
   838                           	opt stack 0
   839  0000A8                     	ds	1
   840  0000A9                     _Send_Frame:
   841                           	opt stack 0
   842  0000A9                     	ds	1
   843  0000AA                     _F_ID_SEND:
   844                           	opt stack 0
   845  0000AA                     	ds	1
   846  0000AB                     _T_BUZZER:
   847                           	opt stack 0
   848  0000AB                     	ds	1
   849  0000AC                     _F_BUZZER:
   850                           	opt stack 0
   851  0000AC                     	ds	1
   852  0000AD                     _ii:
   853                           	opt stack 0
   854  0000AD                     	ds	1
   855  0000AE                     _CHECK:
   856                           	opt stack 0
   857  0000AE                     	ds	1
   858  0000AF                     _timer0ReloadVal:
   859                           	opt stack 0
   860  0000AF                     	ds	1
   861  0000B0                     _DATA_RX:
   862                           	opt stack 0
   863  0000B0                     	ds	5
   864  0000B5                     _DeviceId_arr:
   865                           	opt stack 0
   866  0000B5                     	ds	3
   867  0000B8                     _DATA_TX:
   868                           	opt stack 0
   869  0000B8                     	ds	3
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           
   879                           	psect	dataBANK0
   880  0000E4                     __pdataBANK0:
   881                           	opt stack 0
   882  0000E4                     _INPUT_DS:
   883                           	opt stack 0
   884  0000E4                     	ds	2
   885  0000E6                     _INPUT_PS:
   886                           	opt stack 0
   887  0000E6                     	ds	2
   888  0000E8                     _PAN_ID_1:
   889                           	opt stack 0
   890  0000E8                     	ds	2
   891  0000EA                     _ADDRESS_short_1:
   892                           	opt stack 0
   893  0000EA                     	ds	2
   894  0000EC                     _address_RX_FIFO:
   895                           	opt stack 0
   896  0000EC                     	ds	2
   897  0000EE                     _SEQ_NUMBER:
   898                           	opt stack 0
   899  0000EE                     	ds	1
   900  0000EF                     _ADDRESS_long_2:
   901                           	opt stack 0
   902  0000EF                     	ds	8
   903  0000F7                     _PAN_ID_2:
   904                           	opt stack 0
   905  0000F7                     	ds	2
   906  0000F9                     _ADDRESS_short_2:
   907                           	opt stack 0
   908  0000F9                     	ds	2
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	bssBANK1
   919  000100                     __pbssBANK1:
   920                           	opt stack 0
   921  000100                     _data_RX_FIFO:
   922                           	opt stack 0
   923  000100                     	ds	21
   924  000115                     _data_TX_normal_FIFO:
   925                           	opt stack 0
   926  000115                     	ds	18
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1l	equ	0xFE1
   935                           
   936                           	psect	dataBANK1
   937  00013A                     __pdataBANK1:
   938                           	opt stack 0
   939  00013A                     _ADDRESS_long_1:
   940                           	opt stack 0
   941  00013A                     	ds	8
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           postdec1	equ	0xFE5
   949                           fsr1l	equ	0xFE1
   950                           
   951                           	psect	cstackBANK1
   952  000127                     __pcstackBANK1:
   953                           	opt stack 0
   954  000127                     ?_Xor_check:
   955                           	opt stack 0
   956  000127                     ?___awdiv:
   957                           	opt stack 0
   958  000127                     ?___awmod:
   959                           	opt stack 0
   960  000127                     ?___lwdiv:
   961                           	opt stack 0
   962  000127                     ?___lwmod:
   963                           	opt stack 0
   964  000127                     ?___fttol:
   965                           	opt stack 0
   966  000127                     SPI_Write@response:
   967                           	opt stack 0
   968  000127                     SPI_Read@TempVar:
   969                           	opt stack 0
   970  000127                     delay@dly:
   971                           	opt stack 0
   972  000127                     Delay_ms@time:
   973                           	opt stack 0
   974  000127                     Delayms@time:
   975                           	opt stack 0
   976  000127                     Delayms1@time:
   977                           	opt stack 0
   978  000127                     Xor_check@data_value:
   979                           	opt stack 0
   980  000127                     Write_b_eep2@badd:
   981                           	opt stack 0
   982  000127                     Read_b_eep2@badd:
   983                           	opt stack 0
   984  000127                     ___awdiv@dividend:
   985                           	opt stack 0
   986  000127                     ___awmod@dividend:
   987                           	opt stack 0
   988  000127                     ___lwdiv@dividend:
   989                           	opt stack 0
   990  000127                     ___lwmod@dividend:
   991                           	opt stack 0
   992  000127                     TMR0_SetInterruptHandler@InterruptHandler:
   993                           	opt stack 0
   994  000127                     INT1_SetInterruptHandler@InterruptHandler:
   995                           	opt stack 0
   996  000127                     INT0_SetInterruptHandler@InterruptHandler:
   997                           	opt stack 0
   998  000127                     ___fttol@f1:
   999                           	opt stack 0
  1000                           
  1001                           ; 3 bytes @ 0x0
  1002  000127                     	ds	1
  1003  000128                     SPI_Write@command:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x1
  1007  000128                     	ds	1
  1008  000129                     write_ZIGBEE_short@data_r:
  1009                           	opt stack 0
  1010  000129                     read_ZIGBEE_short@data_r:
  1011                           	opt stack 0
  1012  000129                     Xor_check@length:
  1013                           	opt stack 0
  1014  000129                     Write_b_eep2@data:
  1015                           	opt stack 0
  1016  000129                     write_ZIGBEE_long@address:
  1017                           	opt stack 0
  1018  000129                     delay@l:
  1019                           	opt stack 0
  1020  000129                     Delay_ms@y:
  1021                           	opt stack 0
  1022  000129                     Delayms@k:
  1023                           	opt stack 0
  1024  000129                     Delayms1@i:
  1025                           	opt stack 0
  1026  000129                     ___awdiv@divisor:
  1027                           	opt stack 0
  1028  000129                     ___awmod@divisor:
  1029                           	opt stack 0
  1030  000129                     ___lwdiv@divisor:
  1031                           	opt stack 0
  1032  000129                     ___lwmod@divisor:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x2
  1036  000129                     	ds	1
  1037  00012A                     ??_Xor_check:
  1038  00012A                     write_ZIGBEE_short@address:
  1039                           	opt stack 0
  1040  00012A                     read_ZIGBEE_short@address:
  1041                           	opt stack 0
  1042  00012A                     Write_b_eep2@GIE_BIT_VAL:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x3
  1046  00012A                     	ds	1
  1047  00012B                     ??___fttol:
  1048  00012B                     set_CCA_mode@CCA_mode:
  1049                           	opt stack 0
  1050  00012B                     set_RSSI_mode@RSSI_mode:
  1051                           	opt stack 0
  1052  00012B                     nonbeacon_PAN_coordinator_device@temp:
  1053                           	opt stack 0
  1054  00012B                     set_frame_format_filter@fff_mode:
  1055                           	opt stack 0
  1056  00012B                     set_reception_mode@r_mode:
  1057                           	opt stack 0
  1058  00012B                     set_not_ACK@temp:
  1059                           	opt stack 0
  1060  00012B                     set_not_encrypt@temp:
  1061                           	opt stack 0
  1062  00012B                     write_ZIGBEE_long@data_r:
  1063                           	opt stack 0
  1064  00012B                     ___awdiv@counter:
  1065                           	opt stack 0
  1066  00012B                     ___awmod@counter:
  1067                           	opt stack 0
  1068  00012B                     ___lwdiv@counter:
  1069                           	opt stack 0
  1070  00012B                     ___lwmod@counter:
  1071                           	opt stack 0
  1072  00012B                     set_long_address@address:
  1073                           	opt stack 0
  1074  00012B                     set_short_address@address:
  1075                           	opt stack 0
  1076  00012B                     set_PAN_ID@address:
  1077                           	opt stack 0
  1078  00012B                     Delayms@l:
  1079                           	opt stack 0
  1080  00012B                     Delayms1@j:
  1081                           	opt stack 0
  1082  00012B                     Xor_check@xor_value:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x4
  1086  00012B                     	ds	1
  1087  00012C                     ??_write_ZIGBEE_long:
  1088  00012C                     set_CCA_mode@temp:
  1089                           	opt stack 0
  1090  00012C                     set_RSSI_mode@temp:
  1091                           	opt stack 0
  1092  00012C                     set_frame_format_filter@temp:
  1093                           	opt stack 0
  1094  00012C                     set_reception_mode@temp:
  1095                           	opt stack 0
  1096  00012C                     ___awdiv@sign:
  1097                           	opt stack 0
  1098  00012C                     ___awmod@sign:
  1099                           	opt stack 0
  1100  00012C                     ___lwdiv@quotient:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x5
  1104  00012C                     	ds	1
  1105  00012D                     set_long_address@i:
  1106                           	opt stack 0
  1107  00012D                     LcdData@value:
  1108                           	opt stack 0
  1109  00012D                     LcdCmd@value:
  1110                           	opt stack 0
  1111  00012D                     Xor_check@xor:
  1112                           	opt stack 0
  1113  00012D                     ___awdiv@quotient:
  1114                           	opt stack 0
  1115                           
  1116                           ; 2 bytes @ 0x6
  1117  00012D                     	ds	1
  1118  00012E                     write_ZIGBEE_long@address_high:
  1119                           	opt stack 0
  1120  00012E                     LcdDisplay@string:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x7
  1124  00012E                     	ds	1
  1125  00012F                     write_ZIGBEE_long@address_low:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x8
  1129  00012F                     	ds	1
  1130  000130                     ??_set_TX_power:
  1131  000130                     ??_write_TX_normal_FIFO:
  1132  000130                     set_channel@channel_number:
  1133                           	opt stack 0
  1134  000130                     LcdDisplay@LINE:
  1135                           	opt stack 0
  1136  000130                     ___fttol@sign1:
  1137                           	opt stack 0
  1138                           
  1139                           ; 1 bytes @ 0x9
  1140  000130                     	ds	1
  1141  000131                     ??_Set_DeviceId:
  1142  000131                     set_TX_power@power:
  1143                           	opt stack 0
  1144  000131                     ___fttol@lval:
  1145                           	opt stack 0
  1146                           
  1147                           ; 4 bytes @ 0xA
  1148  000131                     	ds	2
  1149  000133                     Set_DeviceId@ID1:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0xC
  1153  000133                     	ds	2
  1154  000135                     write_TX_normal_FIFO@n:
  1155                           	opt stack 0
  1156  000135                     Set_DeviceId@fail:
  1157                           	opt stack 0
  1158  000135                     ___fttol@exp1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 1 bytes @ 0xE
  1162  000135                     	ds	1
  1163  000136                     write_TX_normal_FIFO@i:
  1164                           	opt stack 0
  1165  000136                     Set_DeviceId@j:
  1166                           	opt stack 0
  1167                           
  1168                           ; 1 bytes @ 0xF
  1169  000136                     	ds	1
  1170  000137                     Set_DeviceId@n:
  1171                           	opt stack 0
  1172                           
  1173                           ; 1 bytes @ 0x10
  1174  000137                     	ds	1
  1175  000138                     Set_DeviceId@i:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x11
  1179  000138                     	ds	1
  1180  000139                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x12
  1183  000139                     	ds	1
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	cstackBANK0
  1194  0000BB                     __pcstackBANK0:
  1195                           	opt stack 0
  1196  0000BB                     ?___wmul:
  1197                           	opt stack 0
  1198  0000BB                     ?___ftpack:
  1199                           	opt stack 0
  1200  0000BB                     ScanInput@portread:
  1201                           	opt stack 0
  1202  0000BB                     ___wmul@multiplier:
  1203                           	opt stack 0
  1204  0000BB                     ___ftpack@arg:
  1205                           	opt stack 0
  1206                           
  1207                           ; 3 bytes @ 0x0
  1208  0000BB                     	ds	1
  1209  0000BC                     ScanInput@temp:
  1210                           	opt stack 0
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213  0000BC                     	ds	1
  1214  0000BD                     ScanInput@x:
  1215                           	opt stack 0
  1216  0000BD                     ___wmul@multiplicand:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x2
  1220  0000BD                     	ds	1
  1221  0000BE                     ___ftpack@exp:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0x3
  1225  0000BE                     	ds	1
  1226  0000BF                     ___ftpack@sign:
  1227                           	opt stack 0
  1228  0000BF                     ___wmul@product:
  1229                           	opt stack 0
  1230                           
  1231                           ; 2 bytes @ 0x4
  1232  0000BF                     	ds	1
  1233  0000C0                     ??___ftpack:
  1234                           
  1235                           ; 1 bytes @ 0x5
  1236  0000C0                     	ds	1
  1237  0000C1                     ?i1___lwdiv:
  1238                           	opt stack 0
  1239  0000C1                     i1___lwdiv@dividend:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x6
  1243  0000C1                     	ds	2
  1244  0000C3                     ?___ftadd:
  1245                           	opt stack 0
  1246  0000C3                     i1___lwdiv@divisor:
  1247                           	opt stack 0
  1248  0000C3                     ___ftadd@f1:
  1249                           	opt stack 0
  1250                           
  1251                           ; 3 bytes @ 0x8
  1252  0000C3                     	ds	2
  1253  0000C5                     i1___lwdiv@counter:
  1254                           	opt stack 0
  1255                           
  1256                           ; 1 bytes @ 0xA
  1257  0000C5                     	ds	1
  1258  0000C6                     i1___lwdiv@quotient:
  1259                           	opt stack 0
  1260  0000C6                     ___ftadd@f2:
  1261                           	opt stack 0
  1262                           
  1263                           ; 3 bytes @ 0xB
  1264  0000C6                     	ds	2
  1265  0000C8                     ?___lwtoft:
  1266                           	opt stack 0
  1267  0000C8                     ___lwtoft@c:
  1268                           	opt stack 0
  1269                           
  1270                           ; 2 bytes @ 0xD
  1271  0000C8                     	ds	1
  1272  0000C9                     ??___ftadd:
  1273                           
  1274                           ; 1 bytes @ 0xE
  1275  0000C9                     	ds	2
  1276  0000CB                     
  1277                           ; 1 bytes @ 0x10
  1278  0000CB                     	ds	1
  1279  0000CC                     ___ftadd@sign:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x11
  1283  0000CC                     	ds	1
  1284  0000CD                     ___ftadd@exp2:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x12
  1288  0000CD                     	ds	1
  1289  0000CE                     ___ftadd@exp1:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0x13
  1293  0000CE                     	ds	1
  1294  0000CF                     ??_INTERRUPT_InterruptManagerLow:
  1295                           
  1296                           ; 1 bytes @ 0x14
  1297  0000CF                     	ds	21
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1l	equ	0xFE1
  1306                           
  1307                           	psect	cstackCOMRAM
  1308  000027                     __pcstackCOMRAM:
  1309                           	opt stack 0
  1310  000027                     ?i2_Xor_check:
  1311                           	opt stack 0
  1312  000027                     i2SPI_Write@response:
  1313                           	opt stack 0
  1314  000027                     i2SPI_Read@TempVar:
  1315                           	opt stack 0
  1316  000027                     i2Xor_check@data_value:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0x0
  1320  000027                     	ds	1
  1321  000028                     i2SPI_Write@command:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x1
  1325  000028                     	ds	1
  1326  000029                     i2write_ZIGBEE_short@data_r:
  1327                           	opt stack 0
  1328  000029                     i2read_ZIGBEE_short@address:
  1329                           	opt stack 0
  1330  000029                     i2Xor_check@length:
  1331                           	opt stack 0
  1332  000029                     read_ZIGBEE_long@address:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x2
  1336  000029                     	ds	1
  1337  00002A                     ??i2_Xor_check:
  1338  00002A                     i2write_ZIGBEE_short@address:
  1339                           	opt stack 0
  1340  00002A                     i2read_ZIGBEE_short@data_r:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x3
  1344  00002A                     	ds	1
  1345  00002B                     ??_read_ZIGBEE_long:
  1346  00002B                     i2Xor_check@xor_value:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x4
  1350  00002B                     	ds	2
  1351  00002D                     read_ZIGBEE_long@data_r:
  1352                           	opt stack 0
  1353  00002D                     i2Xor_check@xor:
  1354                           	opt stack 0
  1355                           
  1356                           ; 2 bytes @ 0x6
  1357  00002D                     	ds	1
  1358  00002E                     read_ZIGBEE_long@address_high:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x7
  1362  00002E                     	ds	1
  1363  00002F                     read_ZIGBEE_long@address_low:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x8
  1367  00002F                     	ds	1
  1368  000030                     ??_read_RX_FIFO:
  1369                           
  1370                           ; 1 bytes @ 0x9
  1371  000030                     	ds	5
  1372  000035                     read_RX_FIFO@temp:
  1373                           	opt stack 0
  1374                           
  1375                           ; 1 bytes @ 0xE
  1376  000035                     	ds	1
  1377  000036                     read_RX_FIFO@i:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0xF
  1381  000036                     	ds	1
  1382  000037                     ??_INTERRUPT_InterruptManagerHigh:
  1383                           
  1384                           ; 1 bytes @ 0x10
  1385  000037                     	ds	20
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           
  1395 ;;
  1396 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1397 ;;
  1398 ;; *************** function _main *****************
  1399 ;; Defined at:
  1400 ;;		line 190 in file "07_May_WaterMeter_Main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        1 bytes
  1419 ;; Hardware stack levels required when called:   13
  1420 ;; This function calls:
  1421 ;;		_Delay_ms
  1422 ;;		_Delayms
  1423 ;;		_InitSPI
  1424 ;;		_LcdCmd
  1425 ;;		_LcdData
  1426 ;;		_LcdDisplay
  1427 ;;		_LcdInit
  1428 ;;		_RF_reset
  1429 ;;		_Read_b_eep2
  1430 ;;		_SYSTEM_Initialize
  1431 ;;		_Set_DeviceId
  1432 ;;		_Write_b_eep2
  1433 ;;		___awdiv
  1434 ;;		___awmod
  1435 ;;		___fttol
  1436 ;;		___lwdiv
  1437 ;;		___lwmod
  1438 ;;		_init_ZIGBEE_nonbeacon
  1439 ;;		_lcd_clear
  1440 ;;		_lcd_off_cursor
  1441 ;;		_nonbeacon_PAN_coordinator_device
  1442 ;;		_pin_reset
  1443 ;;		_pin_wake
  1444 ;;		_set_PAN_ID
  1445 ;;		_set_TX_power
  1446 ;;		_set_WAKE_from_pin
  1447 ;;		_set_frame_format_filter
  1448 ;;		_set_long_address
  1449 ;;		_set_reception_mode
  1450 ;;		_set_short_address
  1451 ;;		_write_TX_normal_FIFO
  1452 ;; This function is called by:
  1453 ;;		Startup code after reset
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text0
  1458  0010F2                     __ptext0:
  1459                           	opt stack 0
  1460  0010F2                     _main:
  1461                           	opt stack 18
  1462                           
  1463                           ;07_May_WaterMeter_Main.c: 192: Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_ms(500);
      +                          Delay_ms(500);
  1464                           
  1465                           ;incstack = 0
  1466  0010F2  0E01               	movlw	1
  1467  0010F4  0101               	movlb	1	; () banked
  1468  0010F6  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1469  0010F8  0EF4               	movlw	244
  1470  0010FA  6F27               	movwf	Delay_ms@time& (0+255),b
  1471  0010FC  ECDB  F018         	call	_Delay_ms	;wreg free
  1472  001100  0E01               	movlw	1
  1473  001102  0101               	movlb	1	; () banked
  1474  001104  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1475  001106  0EF4               	movlw	244
  1476  001108  6F27               	movwf	Delay_ms@time& (0+255),b
  1477  00110A  ECDB  F018         	call	_Delay_ms	;wreg free
  1478  00110E  0E01               	movlw	1
  1479  001110  0101               	movlb	1	; () banked
  1480  001112  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1481  001114  0EF4               	movlw	244
  1482  001116  6F27               	movwf	Delay_ms@time& (0+255),b
  1483  001118  ECDB  F018         	call	_Delay_ms	;wreg free
  1484  00111C  0E01               	movlw	1
  1485  00111E  0101               	movlb	1	; () banked
  1486  001120  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1487  001122  0EF4               	movlw	244
  1488  001124  6F27               	movwf	Delay_ms@time& (0+255),b
  1489  001126  ECDB  F018         	call	_Delay_ms	;wreg free
  1490  00112A  0E01               	movlw	1
  1491  00112C  0101               	movlb	1	; () banked
  1492  00112E  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1493  001130  0EF4               	movlw	244
  1494  001132  6F27               	movwf	Delay_ms@time& (0+255),b
  1495  001134  ECDB  F018         	call	_Delay_ms	;wreg free
  1496                           
  1497                           ;07_May_WaterMeter_Main.c: 194: SYSTEM_Initialize();
  1498  001138  EC0B  F019         	call	_SYSTEM_Initialize	;wreg free
  1499                           
  1500                           ;07_May_WaterMeter_Main.c: 195: (INTCONbits.GIEH = 1);
  1501  00113C  8EF2               	bsf	intcon,7,c	;volatile
  1502                           
  1503                           ;07_May_WaterMeter_Main.c: 196: (INTCONbits.GIEL = 1);
  1504  00113E  8CF2               	bsf	intcon,6,c	;volatile
  1505                           
  1506                           ;07_May_WaterMeter_Main.c: 197: (INTCONbits.PEIE = 1);
  1507  001140  8CF2               	bsf	intcon,6,c	;volatile
  1508                           
  1509                           ;07_May_WaterMeter_Main.c: 198: Delay_ms(100);
  1510  001142  0E00               	movlw	0
  1511  001144  0101               	movlb	1	; () banked
  1512  001146  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1513  001148  0E64               	movlw	100
  1514  00114A  6F27               	movwf	Delay_ms@time& (0+255),b
  1515  00114C  ECDB  F018         	call	_Delay_ms	;wreg free
  1516                           
  1517                           ;07_May_WaterMeter_Main.c: 199: LcdInit();
  1518  001150  EC52  F015         	call	_LcdInit	;wreg free
  1519                           
  1520                           ;07_May_WaterMeter_Main.c: 200: Delay_ms(10);
  1521  001154  0E00               	movlw	0
  1522  001156  0101               	movlb	1	; () banked
  1523  001158  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1524  00115A  0E0A               	movlw	10
  1525  00115C  6F27               	movwf	Delay_ms@time& (0+255),b
  1526  00115E  ECDB  F018         	call	_Delay_ms	;wreg free
  1527                           
  1528                           ;07_May_WaterMeter_Main.c: 201: lcd_off_cursor();
  1529  001162  EC7E  F019         	call	_lcd_off_cursor	;wreg free
  1530                           
  1531                           ;07_May_WaterMeter_Main.c: 202: lcd_clear();
  1532  001166  EC82  F019         	call	_lcd_clear	;wreg free
  1533                           
  1534                           ;07_May_WaterMeter_Main.c: 203: LcdDisplay(0x80,"   WelCome To   ");
  1535  00116A  0E8B               	movlw	low STR_1
  1536  00116C  0101               	movlb	1	; () banked
  1537  00116E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1538  001170  0E10               	movlw	high STR_1
  1539  001172  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1540  001174  0E80               	movlw	128
  1541  001176  EC6F  F016         	call	_LcdDisplay
  1542                           
  1543                           ;07_May_WaterMeter_Main.c: 204: LcdDisplay(0xC0,"-->Smart City<--");
  1544  00117A  0ECF               	movlw	low STR_2
  1545  00117C  0101               	movlb	1	; () banked
  1546  00117E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1547  001180  0E10               	movlw	high STR_2
  1548  001182  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1549  001184  0EC0               	movlw	192
  1550  001186  EC6F  F016         	call	_LcdDisplay
  1551                           
  1552                           ;07_May_WaterMeter_Main.c: 205: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  1553  00118A  0E01               	movlw	1
  1554  00118C  0101               	movlb	1	; () banked
  1555  00118E  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1556  001190  0E2C               	movlw	44
  1557  001192  6F27               	movwf	Delayms@time& (0+255),b
  1558  001194  EC8F  F016         	call	_Delayms	;wreg free
  1559  001198  0E01               	movlw	1
  1560  00119A  0101               	movlb	1	; () banked
  1561  00119C  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1562  00119E  0E2C               	movlw	44
  1563  0011A0  6F27               	movwf	Delayms@time& (0+255),b
  1564  0011A2  EC8F  F016         	call	_Delayms	;wreg free
  1565  0011A6  0E01               	movlw	1
  1566  0011A8  0101               	movlb	1	; () banked
  1567  0011AA  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1568  0011AC  0E2C               	movlw	44
  1569  0011AE  6F27               	movwf	Delayms@time& (0+255),b
  1570  0011B0  EC8F  F016         	call	_Delayms	;wreg free
  1571  0011B4  0E01               	movlw	1
  1572  0011B6  0101               	movlb	1	; () banked
  1573  0011B8  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1574  0011BA  0E2C               	movlw	44
  1575  0011BC  6F27               	movwf	Delayms@time& (0+255),b
  1576  0011BE  EC8F  F016         	call	_Delayms	;wreg free
  1577                           
  1578                           ;07_May_WaterMeter_Main.c: 206: Delay_ms(10);
  1579  0011C2  0E00               	movlw	0
  1580  0011C4  0101               	movlb	1	; () banked
  1581  0011C6  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1582  0011C8  0E0A               	movlw	10
  1583  0011CA  6F27               	movwf	Delay_ms@time& (0+255),b
  1584  0011CC  ECDB  F018         	call	_Delay_ms	;wreg free
  1585                           
  1586                           ;07_May_WaterMeter_Main.c: 207: InitSPI();
  1587  0011D0  EC25  F018         	call	_InitSPI	;wreg free
  1588                           
  1589                           ;07_May_WaterMeter_Main.c: 208: Delay_ms(10);
  1590  0011D4  0E00               	movlw	0
  1591  0011D6  0101               	movlb	1	; () banked
  1592  0011D8  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1593  0011DA  0E0A               	movlw	10
  1594  0011DC  6F27               	movwf	Delay_ms@time& (0+255),b
  1595  0011DE  ECDB  F018         	call	_Delay_ms	;wreg free
  1596                           
  1597                           ;07_May_WaterMeter_Main.c: 209: pin_reset();
  1598  0011E2  EC6D  F018         	call	_pin_reset	;wreg free
  1599                           
  1600                           ;07_May_WaterMeter_Main.c: 210: RF_reset();
  1601  0011E6  ECB2  F017         	call	_RF_reset	;wreg free
  1602                           
  1603                           ;07_May_WaterMeter_Main.c: 211: set_WAKE_from_pin();
  1604  0011EA  ECCD  F018         	call	_set_WAKE_from_pin	;wreg free
  1605                           
  1606                           ;07_May_WaterMeter_Main.c: 213: set_long_address(ADDRESS_long_2);
  1607  0011EE  0EEF               	movlw	low _ADDRESS_long_2
  1608  0011F0  0101               	movlb	1	; () banked
  1609  0011F2  6F2B               	movwf	set_long_address@address& (0+255),b
  1610  0011F4  0E00               	movlw	high _ADDRESS_long_2
  1611  0011F6  6F2C               	movwf	(set_long_address@address+1)& (0+255),b
  1612  0011F8  EC28  F017         	call	_set_long_address	;wreg free
  1613                           
  1614                           ;07_May_WaterMeter_Main.c: 214: set_short_address(ADDRESS_short_2);
  1615  0011FC  0EF9               	movlw	low _ADDRESS_short_2
  1616  0011FE  0101               	movlb	1	; () banked
  1617  001200  6F2B               	movwf	set_short_address@address& (0+255),b
  1618  001202  0E00               	movlw	high _ADDRESS_short_2
  1619  001204  6F2C               	movwf	(set_short_address@address+1)& (0+255),b
  1620  001206  EC5B  F017         	call	_set_short_address	;wreg free
  1621                           
  1622                           ;07_May_WaterMeter_Main.c: 215: set_PAN_ID(PAN_ID_2);
  1623  00120A  0EF7               	movlw	low _PAN_ID_2
  1624  00120C  0101               	movlb	1	; () banked
  1625  00120E  6F2B               	movwf	set_PAN_ID@address& (0+255),b
  1626  001210  0E00               	movlw	high _PAN_ID_2
  1627  001212  6F2C               	movwf	(set_PAN_ID@address+1)& (0+255),b
  1628  001214  EC72  F017         	call	_set_PAN_ID	;wreg free
  1629                           
  1630                           ;07_May_WaterMeter_Main.c: 217: init_ZIGBEE_nonbeacon();
  1631  001218  EC01  F018         	call	_init_ZIGBEE_nonbeacon	;wreg free
  1632                           
  1633                           ;07_May_WaterMeter_Main.c: 219: nonbeacon_PAN_coordinator_device();
  1634  00121C  ECCF  F016         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  1635                           
  1636                           ;07_May_WaterMeter_Main.c: 220: set_TX_power(31);
  1637  001220  0E1F               	movlw	31
  1638  001222  EC2D  F016         	call	_set_TX_power
  1639                           
  1640                           ;07_May_WaterMeter_Main.c: 221: set_frame_format_filter(1);
  1641  001226  0E01               	movlw	1
  1642  001228  EC6F  F013         	call	_set_frame_format_filter
  1643                           
  1644                           ;07_May_WaterMeter_Main.c: 222: set_reception_mode(1);
  1645  00122C  0E01               	movlw	1
  1646  00122E  EC34  F014         	call	_set_reception_mode
  1647                           
  1648                           ;07_May_WaterMeter_Main.c: 223: pin_wake();
  1649  001232  EC33  F019         	call	_pin_wake	;wreg free
  1650                           
  1651                           ;07_May_WaterMeter_Main.c: 224: LcdDisplay(0x80," Press SET KEY  ");
  1652  001236  0E9C               	movlw	low STR_3
  1653  001238  0101               	movlb	1	; () banked
  1654  00123A  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1655  00123C  0E10               	movlw	high STR_3
  1656  00123E  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1657  001240  0E80               	movlw	128
  1658  001242  EC6F  F016         	call	_LcdDisplay
  1659                           
  1660                           ;07_May_WaterMeter_Main.c: 225: LcdDisplay(0xC0,"To Set DEVICE ID");
  1661  001246  0EE0               	movlw	low STR_4
  1662  001248  0101               	movlb	1	; () banked
  1663  00124A  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1664  00124C  0E10               	movlw	high STR_4
  1665  00124E  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1666  001250  0EC0               	movlw	192
  1667  001252  EC6F  F016         	call	_LcdDisplay
  1668                           
  1669                           ;07_May_WaterMeter_Main.c: 226: Delay_ms(500);
  1670  001256  0E01               	movlw	1
  1671  001258  0101               	movlb	1	; () banked
  1672  00125A  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1673  00125C  0EF4               	movlw	244
  1674  00125E  6F27               	movwf	Delay_ms@time& (0+255),b
  1675  001260  ECDB  F018         	call	_Delay_ms	;wreg free
  1676                           
  1677                           ;07_May_WaterMeter_Main.c: 227: lcd_clear();
  1678  001264  EC82  F019         	call	_lcd_clear	;wreg free
  1679                           
  1680                           ;07_May_WaterMeter_Main.c: 228: SendId=Read_b_eep2(0x02);
  1681  001268  0E00               	movlw	0
  1682  00126A  0101               	movlb	1	; () banked
  1683  00126C  6F28               	movwf	(Read_b_eep2@badd+1)& (0+255),b
  1684  00126E  0E02               	movlw	2
  1685  001270  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  1686  001272  EC45  F019         	call	_Read_b_eep2	;wreg free
  1687  001276  0100               	movlb	0	; () banked
  1688  001278  6FA2               	movwf	_SendId& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;07_May_WaterMeter_Main.c: 229: ltr=Read_b_eep2(0x05);
  1692  00127A  0E00               	movlw	0
  1693  00127C  0101               	movlb	1	; () banked
  1694  00127E  6F28               	movwf	(Read_b_eep2@badd+1)& (0+255),b
  1695  001280  0E05               	movlw	5
  1696  001282  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  1697  001284  EC45  F019         	call	_Read_b_eep2	;wreg free
  1698  001288  0101               	movlb	1	; () banked
  1699  00128A  6F39               	movwf	??_main& (0+255),b
  1700  00128C  5139               	movf	??_main& (0+255),w,b
  1701  00128E  0100               	movlb	0	; () banked
  1702  001290  6F7A               	movwf	_ltr& (0+255),b
  1703  001292  6B7B               	clrf	(_ltr+1)& (0+255),b
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;07_May_WaterMeter_Main.c: 230: if(SendId == 0xFF){
  1707  001294  29A2               	incf	_SendId& (0+255),w,b
  1708  001296  A4D8               	btfss	status,2,c
  1709  001298  D002               	goto	l893
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;07_May_WaterMeter_Main.c: 231: SendId=0;
  1713  00129A  0E00               	movlw	0
  1714  00129C  6FA2               	movwf	_SendId& (0+255),b
  1715  00129E                     l893:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;07_May_WaterMeter_Main.c: 234: F_Enter=1;
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;07_May_WaterMeter_Main.c: 232: }
  1722                           ;07_May_WaterMeter_Main.c: 233: do{
  1723  00129E  0E01               	movlw	1
  1724  0012A0  6E01               	movwf	_F_Enter,c
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;07_May_WaterMeter_Main.c: 235: LcdDisplay(0x80,"    Go For      ");
  1728  0012A2  0E36               	movlw	low STR_5
  1729  0012A4  0101               	movlb	1	; () banked
  1730  0012A6  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1731  0012A8  0E10               	movlw	high STR_5
  1732  0012AA  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1733  0012AC  0E80               	movlw	128
  1734  0012AE  EC6F  F016         	call	_LcdDisplay
  1735                           
  1736                           ;07_May_WaterMeter_Main.c: 236: LcdDisplay(0xC0,"  Set Device ID ");
  1737  0012B2  0EBE               	movlw	low STR_6
  1738  0012B4  0101               	movlb	1	; () banked
  1739  0012B6  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1740  0012B8  0E10               	movlw	high STR_6
  1741  0012BA  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1742  0012BC  0EC0               	movlw	192
  1743  0012BE  EC6F  F016         	call	_LcdDisplay
  1744                           
  1745                           ;07_May_WaterMeter_Main.c: 237: if(flag==1){
  1746  0012C2  0100               	movlb	0	; () banked
  1747  0012C4  05A7               	decf	_flag& (0+255),w,b
  1748  0012C6  A4D8               	btfss	status,2,c
  1749  0012C8  D007               	goto	l895
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;07_May_WaterMeter_Main.c: 238: F_Enter=0;
  1753  0012CA  0E00               	movlw	0
  1754  0012CC  6E01               	movwf	_F_Enter,c
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;07_May_WaterMeter_Main.c: 239: Set_DeviceId();
  1758  0012CE  EC71  F00B         	call	_Set_DeviceId	;wreg free
  1759                           
  1760                           ;07_May_WaterMeter_Main.c: 240: Enter=1;
  1761  0012D2  0E01               	movlw	1
  1762  0012D4  0100               	movlb	0	; () banked
  1763  0012D6  6FA4               	movwf	_Enter& (0+255),b
  1764  0012D8                     l895:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;07_May_WaterMeter_Main.c: 241: }
  1768                           ;07_May_WaterMeter_Main.c: 242: COUNT++;
  1769                           
  1770                           ; BSR set to: 0
  1771  0012D8  4B88               	infsnz	_COUNT& (0+255),f,b
  1772  0012DA  2B89               	incf	(_COUNT+1)& (0+255),f,b
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;07_May_WaterMeter_Main.c: 243: }while((COUNT<20)&&(Enter==0));
  1776  0012DC  5189               	movf	(_COUNT+1)& (0+255),w,b
  1777  0012DE  E107               	bnz	l5909
  1778  0012E0  0E14               	movlw	20
  1779  0012E2  5D88               	subwf	_COUNT& (0+255),w,b
  1780  0012E4  B0D8               	btfsc	status,0,c
  1781  0012E6  D003               	goto	u4870
  1782                           
  1783                           ; BSR set to: 0
  1784  0012E8  51A4               	movf	_Enter& (0+255),w,b
  1785  0012EA  B4D8               	btfsc	status,2,c
  1786  0012EC  D7D8               	goto	l893
  1787  0012EE                     u4870:
  1788  0012EE                     l5909:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;07_May_WaterMeter_Main.c: 244: F_TimerCounting=0;
  1792  0012EE  0E00               	movlw	0
  1793  0012F0  6E02               	movwf	_F_TimerCounting,c
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;07_May_WaterMeter_Main.c: 245: lcd_clear();
  1797  0012F2  EC82  F019         	call	_lcd_clear	;wreg free
  1798                           
  1799                           ;07_May_WaterMeter_Main.c: 246: F_Enter=0;
  1800  0012F6  0E00               	movlw	0
  1801  0012F8  6E01               	movwf	_F_Enter,c
  1802                           
  1803                           ;07_May_WaterMeter_Main.c: 247: Increment=0;
  1804  0012FA  0E00               	movlw	0
  1805  0012FC  0100               	movlb	0	; () banked
  1806  0012FE  6F8D               	movwf	(_Increment+1)& (0+255),b
  1807  001300  0E00               	movlw	0
  1808  001302  6F8C               	movwf	_Increment& (0+255),b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;07_May_WaterMeter_Main.c: 248: Decrement=0;
  1812  001304  0E00               	movlw	0
  1813  001306  6F8B               	movwf	(_Decrement+1)& (0+255),b
  1814  001308  0E00               	movlw	0
  1815  00130A  6F8A               	movwf	_Decrement& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;07_May_WaterMeter_Main.c: 249: Enter=0;
  1819  00130C  0E00               	movlw	0
  1820  00130E  6FA4               	movwf	_Enter& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;07_May_WaterMeter_Main.c: 250: LcdCmd(0x0C);
  1824  001310  0E0C               	movlw	12
  1825  001312  EC9F  F018         	call	_LcdCmd
  1826                           
  1827                           ;07_May_WaterMeter_Main.c: 251: F_TimerCounting=1;
  1828  001316  0E01               	movlw	1
  1829  001318  6E02               	movwf	_F_TimerCounting,c
  1830                           
  1831                           ;07_May_WaterMeter_Main.c: 252: LcdDisplay(0x80,"F.Rate:         ");
  1832  00131A  0E14               	movlw	low STR_7
  1833  00131C  0101               	movlb	1	; () banked
  1834  00131E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1835  001320  0E10               	movlw	high STR_7
  1836  001322  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1837  001324  0E80               	movlw	128
  1838  001326  EC6F  F016         	call	_LcdDisplay
  1839                           
  1840                           ;07_May_WaterMeter_Main.c: 253: LcdDisplay(0xC0,"T.Ltr:          ");
  1841  00132A  0E03               	movlw	low STR_8
  1842  00132C  0101               	movlb	1	; () banked
  1843  00132E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1844  001330  0E10               	movlw	high STR_8
  1845  001332  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1846  001334  0EC0               	movlw	192
  1847  001336  EC6F  F016         	call	_LcdDisplay
  1848  00133A                     
  1849                           ;07_May_WaterMeter_Main.c: 255: {
  1850                           ;07_May_WaterMeter_Main.c: 257: if((CRC==Rv_CRC) && (DATA_RX[0]=='!')){
  1851  00133A  0100               	movlb	0	; () banked
  1852  00133C  5196               	movf	_Rv_CRC& (0+255),w,b
  1853  00133E  1992               	xorwf	_CRC& (0+255),w,b
  1854  001340  E132               	bnz	l5953
  1855  001342  5197               	movf	(_Rv_CRC+1)& (0+255),w,b
  1856  001344  1993               	xorwf	(_CRC+1)& (0+255),w,b
  1857  001346  A4D8               	btfss	status,2,c
  1858  001348  D02E               	goto	l900
  1859                           
  1860                           ; BSR set to: 0
  1861  00134A  0E21               	movlw	33
  1862  00134C  19B0               	xorwf	_DATA_RX& (0+255),w,b
  1863  00134E  A4D8               	btfss	status,2,c
  1864  001350  D02A               	goto	l900
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;07_May_WaterMeter_Main.c: 258: DATA_RX[0]=0;
  1868  001352  0E00               	movlw	0
  1869  001354  6FB0               	movwf	_DATA_RX& (0+255),b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;07_May_WaterMeter_Main.c: 259: PORTAbits.RA1=0;
  1873  001356  9280               	bcf	3968,1,c	;volatile
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;07_May_WaterMeter_Main.c: 260: SendId=Read_b_eep2(0x02);
  1877  001358  0E00               	movlw	0
  1878  00135A  0101               	movlb	1	; () banked
  1879  00135C  6F28               	movwf	(Read_b_eep2@badd+1)& (0+255),b
  1880  00135E  0E02               	movlw	2
  1881  001360  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  1882  001362  EC45  F019         	call	_Read_b_eep2	;wreg free
  1883  001366  0100               	movlb	0	; () banked
  1884  001368  6FA2               	movwf	_SendId& (0+255),b
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;07_May_WaterMeter_Main.c: 261: data_TX_normal_FIFO[13]='!';
  1888  00136A  0E21               	movlw	33
  1889  00136C  0101               	movlb	1	; () banked
  1890  00136E  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  1891                           
  1892                           ; BSR set to: 1
  1893                           ;07_May_WaterMeter_Main.c: 262: data_TX_normal_FIFO[14]=ltr;
  1894  001370  C07A  F123         	movff	_ltr,_data_TX_normal_FIFO+14
  1895                           
  1896                           ; BSR set to: 1
  1897                           ;07_May_WaterMeter_Main.c: 263: data_TX_normal_FIFO[15]=SendId;
  1898  001374  C0A2  F124         	movff	_SendId,_data_TX_normal_FIFO+15
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;07_May_WaterMeter_Main.c: 264: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1902  001378  0E00               	movlw	0
  1903  00137A  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1904  00137C  0E64               	movlw	100
  1905  00137E  6F27               	movwf	Delay_ms@time& (0+255),b
  1906  001380  ECDB  F018         	call	_Delay_ms	;wreg free
  1907  001384  0E00               	movlw	0
  1908  001386  0101               	movlb	1	; () banked
  1909  001388  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1910  00138A  0E64               	movlw	100
  1911  00138C  6F27               	movwf	Delay_ms@time& (0+255),b
  1912  00138E  ECDB  F018         	call	_Delay_ms	;wreg free
  1913  001392  0E00               	movlw	0
  1914  001394  0101               	movlb	1	; () banked
  1915  001396  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1916  001398  0E64               	movlw	100
  1917  00139A  6F27               	movwf	Delay_ms@time& (0+255),b
  1918  00139C  ECDB  F018         	call	_Delay_ms	;wreg free
  1919                           
  1920                           ;07_May_WaterMeter_Main.c: 265: write_TX_normal_FIFO();
  1921  0013A0  ECC6  F010         	call	_write_TX_normal_FIFO	;wreg free
  1922                           
  1923                           ;07_May_WaterMeter_Main.c: 266: PORTAbits.RA1=1;
  1924  0013A4  8280               	bsf	3968,1,c	;volatile
  1925  0013A6                     l900:
  1926  0013A6                     l5953:
  1927                           
  1928                           ;07_May_WaterMeter_Main.c: 267: }
  1929                           ;07_May_WaterMeter_Main.c: 268: Num=Flow_Rate;
  1930  0013A6  C080  F084         	movff	_Flow_Rate,_Num
  1931  0013AA  C081  F085         	movff	_Flow_Rate+1,_Num+1
  1932                           
  1933                           ;07_May_WaterMeter_Main.c: 269: if(Num >=0 && Num < 10){
  1934  0013AE  0100               	movlb	0	; () banked
  1935  0013B0  5185               	movf	(_Num+1)& (0+255),w,b
  1936  0013B2  E119               	bnz	l5959
  1937  0013B4  0E0A               	movlw	10
  1938  0013B6  5D84               	subwf	_Num& (0+255),w,b
  1939  0013B8  B0D8               	btfsc	status,0,c
  1940  0013BA  D015               	goto	l901
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;07_May_WaterMeter_Main.c: 272: LcdCmd(0x8e);
  1944  0013BC  0E8E               	movlw	142
  1945  0013BE  EC9F  F018         	call	_LcdCmd
  1946                           
  1947                           ;07_May_WaterMeter_Main.c: 273: LcdData(Num+0x30);
  1948  0013C2  0100               	movlb	0	; () banked
  1949  0013C4  5184               	movf	_Num& (0+255),w,b
  1950  0013C6  0F30               	addlw	48
  1951  0013C8  EC8F  F018         	call	_LcdData
  1952                           
  1953                           ;07_May_WaterMeter_Main.c: 274: LcdCmd(0x8d);
  1954  0013CC  0E8D               	movlw	141
  1955  0013CE  EC9F  F018         	call	_LcdCmd
  1956                           
  1957                           ;07_May_WaterMeter_Main.c: 275: LcdData(0+0x30);
  1958  0013D2  0E30               	movlw	48
  1959  0013D4  EC8F  F018         	call	_LcdData
  1960                           
  1961                           ;07_May_WaterMeter_Main.c: 276: LcdCmd(0x8c);
  1962  0013D8  0E8C               	movlw	140
  1963  0013DA  EC9F  F018         	call	_LcdCmd
  1964                           
  1965                           ;07_May_WaterMeter_Main.c: 277: LcdData(0+0x30);
  1966  0013DE  0E30               	movlw	48
  1967  0013E0  EC8F  F018         	call	_LcdData
  1968                           
  1969                           ;07_May_WaterMeter_Main.c: 278: }
  1970  0013E4  D0A1               	goto	l905
  1971  0013E6                     l901:
  1972  0013E6                     l5959:
  1973                           
  1974                           ;07_May_WaterMeter_Main.c: 279: else if(Num >=10 && Num < 100){
  1975  0013E6  0100               	movlb	0	; () banked
  1976  0013E8  5185               	movf	(_Num+1)& (0+255),w,b
  1977  0013EA  E104               	bnz	u4910
  1978  0013EC  0E0A               	movlw	10
  1979  0013EE  5D84               	subwf	_Num& (0+255),w,b
  1980  0013F0  A0D8               	btfss	status,0,c
  1981  0013F2  D03B               	goto	l903
  1982  0013F4                     u4910:
  1983                           
  1984                           ; BSR set to: 0
  1985  0013F4  5185               	movf	(_Num+1)& (0+255),w,b
  1986  0013F6  E139               	bnz	l5965
  1987  0013F8  0E64               	movlw	100
  1988  0013FA  5D84               	subwf	_Num& (0+255),w,b
  1989  0013FC  B0D8               	btfsc	status,0,c
  1990  0013FE  D035               	goto	l903
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;07_May_WaterMeter_Main.c: 280: IdByte1=Num/10;
  1994  001400  C084  F127         	movff	_Num,___lwdiv@dividend
  1995  001404  C085  F128         	movff	_Num+1,___lwdiv@dividend+1
  1996  001408  0E00               	movlw	0
  1997  00140A  0101               	movlb	1	; () banked
  1998  00140C  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1999  00140E  0E0A               	movlw	10
  2000  001410  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2001  001412  ECFE  F014         	call	___lwdiv	;wreg free
  2002  001416  0101               	movlb	1	; () banked
  2003  001418  5127               	movf	?___lwdiv& (0+255),w,b
  2004  00141A  0100               	movlb	0	; () banked
  2005  00141C  6F9F               	movwf	_IdByte1& (0+255),b
  2006                           
  2007                           ;07_May_WaterMeter_Main.c: 281: IdByte2=Num%10;
  2008  00141E  C084  F127         	movff	_Num,___lwmod@dividend
  2009  001422  C085  F128         	movff	_Num+1,___lwmod@dividend+1
  2010  001426  0E00               	movlw	0
  2011  001428  0101               	movlb	1	; () banked
  2012  00142A  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2013  00142C  0E0A               	movlw	10
  2014  00142E  6F29               	movwf	___lwmod@divisor& (0+255),b
  2015  001430  ECC8  F015         	call	___lwmod	;wreg free
  2016  001434  0101               	movlb	1	; () banked
  2017  001436  5127               	movf	?___lwmod& (0+255),w,b
  2018  001438  0100               	movlb	0	; () banked
  2019  00143A  6F9E               	movwf	_IdByte2& (0+255),b
  2020                           
  2021                           ;07_May_WaterMeter_Main.c: 284: LcdCmd(0x8d);
  2022  00143C  0E8D               	movlw	141
  2023  00143E  EC9F  F018         	call	_LcdCmd
  2024                           
  2025                           ;07_May_WaterMeter_Main.c: 285: LcdData(IdByte1+0x30);
  2026  001442  0100               	movlb	0	; () banked
  2027  001444  519F               	movf	_IdByte1& (0+255),w,b
  2028  001446  0F30               	addlw	48
  2029  001448  EC8F  F018         	call	_LcdData
  2030                           
  2031                           ;07_May_WaterMeter_Main.c: 286: LcdCmd(0x8e);
  2032  00144C  0E8E               	movlw	142
  2033  00144E  EC9F  F018         	call	_LcdCmd
  2034                           
  2035                           ;07_May_WaterMeter_Main.c: 287: LcdData(IdByte2+0x30);
  2036  001452  0100               	movlb	0	; () banked
  2037  001454  519E               	movf	_IdByte2& (0+255),w,b
  2038  001456  0F30               	addlw	48
  2039  001458  EC8F  F018         	call	_LcdData
  2040                           
  2041                           ;07_May_WaterMeter_Main.c: 288: LcdCmd(0x8c);
  2042  00145C  0E8C               	movlw	140
  2043  00145E  EC9F  F018         	call	_LcdCmd
  2044                           
  2045                           ;07_May_WaterMeter_Main.c: 289: LcdData(0+0x30);
  2046  001462  0E30               	movlw	48
  2047  001464  EC8F  F018         	call	_LcdData
  2048                           
  2049                           ;07_May_WaterMeter_Main.c: 292: }
  2050  001468  D05F               	goto	l905
  2051  00146A                     l903:
  2052  00146A                     l5965:
  2053                           
  2054                           ;07_May_WaterMeter_Main.c: 293: else if(Num >=100 && Num < 1000){
  2055  00146A  0100               	movlb	0	; () banked
  2056  00146C  5185               	movf	(_Num+1)& (0+255),w,b
  2057  00146E  E104               	bnz	u4930
  2058  001470  0E64               	movlw	100
  2059  001472  5D84               	subwf	_Num& (0+255),w,b
  2060  001474  A0D8               	btfss	status,0,c
  2061  001476  D058               	goto	l905
  2062  001478                     u4930:
  2063                           
  2064                           ; BSR set to: 0
  2065  001478  0EE8               	movlw	232
  2066  00147A  5D84               	subwf	_Num& (0+255),w,b
  2067  00147C  0E03               	movlw	3
  2068  00147E  5985               	subwfb	(_Num+1)& (0+255),w,b
  2069  001480  B0D8               	btfsc	status,0,c
  2070  001482  D052               	goto	l905
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;07_May_WaterMeter_Main.c: 294: IdByte3=Num/100;
  2074  001484  C084  F127         	movff	_Num,___lwdiv@dividend
  2075  001488  C085  F128         	movff	_Num+1,___lwdiv@dividend+1
  2076  00148C  0E00               	movlw	0
  2077  00148E  0101               	movlb	1	; () banked
  2078  001490  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2079  001492  0E64               	movlw	100
  2080  001494  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2081  001496  ECFE  F014         	call	___lwdiv	;wreg free
  2082  00149A  0101               	movlb	1	; () banked
  2083  00149C  5127               	movf	?___lwdiv& (0+255),w,b
  2084  00149E  0100               	movlb	0	; () banked
  2085  0014A0  6F9D               	movwf	_IdByte3& (0+255),b
  2086                           
  2087                           ;07_May_WaterMeter_Main.c: 295: V_Temp=Num%100;
  2088  0014A2  C084  F127         	movff	_Num,___lwmod@dividend
  2089  0014A6  C085  F128         	movff	_Num+1,___lwmod@dividend+1
  2090  0014AA  0E00               	movlw	0
  2091  0014AC  0101               	movlb	1	; () banked
  2092  0014AE  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2093  0014B0  0E64               	movlw	100
  2094  0014B2  6F29               	movwf	___lwmod@divisor& (0+255),b
  2095  0014B4  ECC8  F015         	call	___lwmod	;wreg free
  2096  0014B8  0101               	movlb	1	; () banked
  2097  0014BA  5127               	movf	?___lwmod& (0+255),w,b
  2098  0014BC  0100               	movlb	0	; () banked
  2099  0014BE  6F9C               	movwf	_V_Temp& (0+255),b
  2100                           
  2101                           ;07_May_WaterMeter_Main.c: 296: IdByte1=V_Temp/10;
  2102  0014C0  C09C  F127         	movff	_V_Temp,___awdiv@dividend
  2103  0014C4  0101               	movlb	1	; () banked
  2104  0014C6  6B28               	clrf	(___awdiv@dividend+1)& (0+255),b
  2105  0014C8  0E00               	movlw	0
  2106  0014CA  6F2A               	movwf	(___awdiv@divisor+1)& (0+255),b
  2107  0014CC  0E0A               	movlw	10
  2108  0014CE  6F29               	movwf	___awdiv@divisor& (0+255),b
  2109  0014D0  ECB8  F013         	call	___awdiv	;wreg free
  2110  0014D4  0101               	movlb	1	; () banked
  2111  0014D6  5127               	movf	?___awdiv& (0+255),w,b
  2112  0014D8  0100               	movlb	0	; () banked
  2113  0014DA  6F9F               	movwf	_IdByte1& (0+255),b
  2114                           
  2115                           ;07_May_WaterMeter_Main.c: 297: IdByte2=V_Temp%10;
  2116  0014DC  C09C  F127         	movff	_V_Temp,___awmod@dividend
  2117  0014E0  0101               	movlb	1	; () banked
  2118  0014E2  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  2119  0014E4  0E00               	movlw	0
  2120  0014E6  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  2121  0014E8  0E0A               	movlw	10
  2122  0014EA  6F29               	movwf	___awmod@divisor& (0+255),b
  2123  0014EC  ECFB  F013         	call	___awmod	;wreg free
  2124  0014F0  0101               	movlb	1	; () banked
  2125  0014F2  5127               	movf	?___awmod& (0+255),w,b
  2126  0014F4  0100               	movlb	0	; () banked
  2127  0014F6  6F9E               	movwf	_IdByte2& (0+255),b
  2128                           
  2129                           ;07_May_WaterMeter_Main.c: 301: LcdCmd(0x8c);
  2130  0014F8  0E8C               	movlw	140
  2131  0014FA  EC9F  F018         	call	_LcdCmd
  2132                           
  2133                           ;07_May_WaterMeter_Main.c: 302: LcdData(IdByte3+0x30);
  2134  0014FE  0100               	movlb	0	; () banked
  2135  001500  519D               	movf	_IdByte3& (0+255),w,b
  2136  001502  0F30               	addlw	48
  2137  001504  EC8F  F018         	call	_LcdData
  2138                           
  2139                           ;07_May_WaterMeter_Main.c: 303: LcdCmd(0x8d);
  2140  001508  0E8D               	movlw	141
  2141  00150A  EC9F  F018         	call	_LcdCmd
  2142                           
  2143                           ;07_May_WaterMeter_Main.c: 304: LcdData(IdByte1+0x30);
  2144  00150E  0100               	movlb	0	; () banked
  2145  001510  519F               	movf	_IdByte1& (0+255),w,b
  2146  001512  0F30               	addlw	48
  2147  001514  EC8F  F018         	call	_LcdData
  2148                           
  2149                           ;07_May_WaterMeter_Main.c: 305: LcdCmd(0x8e);
  2150  001518  0E8E               	movlw	142
  2151  00151A  EC9F  F018         	call	_LcdCmd
  2152                           
  2153                           ;07_May_WaterMeter_Main.c: 306: LcdData(IdByte2+0x30);
  2154  00151E  0100               	movlb	0	; () banked
  2155  001520  519E               	movf	_IdByte2& (0+255),w,b
  2156  001522  0F30               	addlw	48
  2157  001524  EC8F  F018         	call	_LcdData
  2158  001528                     l905:
  2159                           
  2160                           ;07_May_WaterMeter_Main.c: 308: }
  2161                           ;07_May_WaterMeter_Main.c: 310: ltr=totalLitres;
  2162  001528  C067  F127         	movff	_totalLitres,___fttol@f1
  2163  00152C  C068  F128         	movff	_totalLitres+1,___fttol@f1+1
  2164  001530  C069  F129         	movff	_totalLitres+2,___fttol@f1+2
  2165  001534  EC80  F011         	call	___fttol	;wreg free
  2166  001538  C127  F07A         	movff	?___fttol,_ltr
  2167  00153C  C128  F07B         	movff	?___fttol+1,_ltr+1
  2168                           
  2169                           ;07_May_WaterMeter_Main.c: 311: Write_b_eep2(0x05,ltr);
  2170  001540  0E00               	movlw	0
  2171  001542  0101               	movlb	1	; () banked
  2172  001544  6F28               	movwf	(Write_b_eep2@badd+1)& (0+255),b
  2173  001546  0E05               	movlw	5
  2174  001548  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  2175  00154A  C07A  F129         	movff	_ltr,Write_b_eep2@data
  2176  00154E  ECEE  F016         	call	_Write_b_eep2	;wreg free
  2177                           
  2178                           ;07_May_WaterMeter_Main.c: 312: Write_b_eep2(0x05,ltr);
  2179  001552  0E00               	movlw	0
  2180  001554  0101               	movlb	1	; () banked
  2181  001556  6F28               	movwf	(Write_b_eep2@badd+1)& (0+255),b
  2182  001558  0E05               	movlw	5
  2183  00155A  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  2184  00155C  C07A  F129         	movff	_ltr,Write_b_eep2@data
  2185  001560  ECEE  F016         	call	_Write_b_eep2	;wreg free
  2186                           
  2187                           ;07_May_WaterMeter_Main.c: 313: if(ltr >=0 && ltr < 10){
  2188  001564  0100               	movlb	0	; () banked
  2189  001566  517B               	movf	(_ltr+1)& (0+255),w,b
  2190  001568  E119               	bnz	l5979
  2191  00156A  0E0A               	movlw	10
  2192  00156C  5D7A               	subwf	_ltr& (0+255),w,b
  2193  00156E  B0D8               	btfsc	status,0,c
  2194  001570  D015               	goto	l906
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;07_May_WaterMeter_Main.c: 316: LcdCmd(0xce);
  2198  001572  0ECE               	movlw	206
  2199  001574  EC9F  F018         	call	_LcdCmd
  2200                           
  2201                           ;07_May_WaterMeter_Main.c: 317: LcdData(ltr+0x30);
  2202  001578  0100               	movlb	0	; () banked
  2203  00157A  517A               	movf	_ltr& (0+255),w,b
  2204  00157C  0F30               	addlw	48
  2205  00157E  EC8F  F018         	call	_LcdData
  2206                           
  2207                           ;07_May_WaterMeter_Main.c: 318: LcdCmd(0xcd);
  2208  001582  0ECD               	movlw	205
  2209  001584  EC9F  F018         	call	_LcdCmd
  2210                           
  2211                           ;07_May_WaterMeter_Main.c: 319: LcdData(0+0x30);
  2212  001588  0E30               	movlw	48
  2213  00158A  EC8F  F018         	call	_LcdData
  2214                           
  2215                           ;07_May_WaterMeter_Main.c: 320: LcdCmd(0xcc);
  2216  00158E  0ECC               	movlw	204
  2217  001590  EC9F  F018         	call	_LcdCmd
  2218                           
  2219                           ;07_May_WaterMeter_Main.c: 321: LcdData(0+0x30);
  2220  001594  0E30               	movlw	48
  2221  001596  EC8F  F018         	call	_LcdData
  2222                           
  2223                           ;07_May_WaterMeter_Main.c: 322: }
  2224  00159A  D0A1               	goto	l910
  2225  00159C                     l906:
  2226  00159C                     l5979:
  2227                           
  2228                           ;07_May_WaterMeter_Main.c: 323: else if(ltr >=10 && ltr < 100){
  2229  00159C  0100               	movlb	0	; () banked
  2230  00159E  517B               	movf	(_ltr+1)& (0+255),w,b
  2231  0015A0  E104               	bnz	u4960
  2232  0015A2  0E0A               	movlw	10
  2233  0015A4  5D7A               	subwf	_ltr& (0+255),w,b
  2234  0015A6  A0D8               	btfss	status,0,c
  2235  0015A8  D03B               	goto	l908
  2236  0015AA                     u4960:
  2237                           
  2238                           ; BSR set to: 0
  2239  0015AA  517B               	movf	(_ltr+1)& (0+255),w,b
  2240  0015AC  E139               	bnz	l5985
  2241  0015AE  0E64               	movlw	100
  2242  0015B0  5D7A               	subwf	_ltr& (0+255),w,b
  2243  0015B2  B0D8               	btfsc	status,0,c
  2244  0015B4  D035               	goto	l908
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;07_May_WaterMeter_Main.c: 324: IdByte1=ltr/10;
  2248  0015B6  C07A  F127         	movff	_ltr,___lwdiv@dividend
  2249  0015BA  C07B  F128         	movff	_ltr+1,___lwdiv@dividend+1
  2250  0015BE  0E00               	movlw	0
  2251  0015C0  0101               	movlb	1	; () banked
  2252  0015C2  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2253  0015C4  0E0A               	movlw	10
  2254  0015C6  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2255  0015C8  ECFE  F014         	call	___lwdiv	;wreg free
  2256  0015CC  0101               	movlb	1	; () banked
  2257  0015CE  5127               	movf	?___lwdiv& (0+255),w,b
  2258  0015D0  0100               	movlb	0	; () banked
  2259  0015D2  6F9F               	movwf	_IdByte1& (0+255),b
  2260                           
  2261                           ;07_May_WaterMeter_Main.c: 325: IdByte2=ltr%10;
  2262  0015D4  C07A  F127         	movff	_ltr,___lwmod@dividend
  2263  0015D8  C07B  F128         	movff	_ltr+1,___lwmod@dividend+1
  2264  0015DC  0E00               	movlw	0
  2265  0015DE  0101               	movlb	1	; () banked
  2266  0015E0  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2267  0015E2  0E0A               	movlw	10
  2268  0015E4  6F29               	movwf	___lwmod@divisor& (0+255),b
  2269  0015E6  ECC8  F015         	call	___lwmod	;wreg free
  2270  0015EA  0101               	movlb	1	; () banked
  2271  0015EC  5127               	movf	?___lwmod& (0+255),w,b
  2272  0015EE  0100               	movlb	0	; () banked
  2273  0015F0  6F9E               	movwf	_IdByte2& (0+255),b
  2274                           
  2275                           ;07_May_WaterMeter_Main.c: 328: LcdCmd(0xcd);
  2276  0015F2  0ECD               	movlw	205
  2277  0015F4  EC9F  F018         	call	_LcdCmd
  2278                           
  2279                           ;07_May_WaterMeter_Main.c: 329: LcdData(IdByte1+0x30);
  2280  0015F8  0100               	movlb	0	; () banked
  2281  0015FA  519F               	movf	_IdByte1& (0+255),w,b
  2282  0015FC  0F30               	addlw	48
  2283  0015FE  EC8F  F018         	call	_LcdData
  2284                           
  2285                           ;07_May_WaterMeter_Main.c: 330: LcdCmd(0xce);
  2286  001602  0ECE               	movlw	206
  2287  001604  EC9F  F018         	call	_LcdCmd
  2288                           
  2289                           ;07_May_WaterMeter_Main.c: 331: LcdData(IdByte2+0x30);
  2290  001608  0100               	movlb	0	; () banked
  2291  00160A  519E               	movf	_IdByte2& (0+255),w,b
  2292  00160C  0F30               	addlw	48
  2293  00160E  EC8F  F018         	call	_LcdData
  2294                           
  2295                           ;07_May_WaterMeter_Main.c: 332: LcdCmd(0xcc);
  2296  001612  0ECC               	movlw	204
  2297  001614  EC9F  F018         	call	_LcdCmd
  2298                           
  2299                           ;07_May_WaterMeter_Main.c: 333: LcdData(0+0x30);
  2300  001618  0E30               	movlw	48
  2301  00161A  EC8F  F018         	call	_LcdData
  2302                           
  2303                           ;07_May_WaterMeter_Main.c: 336: }
  2304  00161E  D05F               	goto	l910
  2305  001620                     l908:
  2306  001620                     l5985:
  2307                           
  2308                           ;07_May_WaterMeter_Main.c: 337: else if(ltr >=100 && ltr < 1000){
  2309  001620  0100               	movlb	0	; () banked
  2310  001622  517B               	movf	(_ltr+1)& (0+255),w,b
  2311  001624  E104               	bnz	u4980
  2312  001626  0E64               	movlw	100
  2313  001628  5D7A               	subwf	_ltr& (0+255),w,b
  2314  00162A  A0D8               	btfss	status,0,c
  2315  00162C  D058               	goto	l910
  2316  00162E                     u4980:
  2317                           
  2318                           ; BSR set to: 0
  2319  00162E  0EE8               	movlw	232
  2320  001630  5D7A               	subwf	_ltr& (0+255),w,b
  2321  001632  0E03               	movlw	3
  2322  001634  597B               	subwfb	(_ltr+1)& (0+255),w,b
  2323  001636  B0D8               	btfsc	status,0,c
  2324  001638  D052               	goto	l910
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;07_May_WaterMeter_Main.c: 338: IdByte3=ltr/100;
  2328  00163A  C07A  F127         	movff	_ltr,___lwdiv@dividend
  2329  00163E  C07B  F128         	movff	_ltr+1,___lwdiv@dividend+1
  2330  001642  0E00               	movlw	0
  2331  001644  0101               	movlb	1	; () banked
  2332  001646  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2333  001648  0E64               	movlw	100
  2334  00164A  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2335  00164C  ECFE  F014         	call	___lwdiv	;wreg free
  2336  001650  0101               	movlb	1	; () banked
  2337  001652  5127               	movf	?___lwdiv& (0+255),w,b
  2338  001654  0100               	movlb	0	; () banked
  2339  001656  6F9D               	movwf	_IdByte3& (0+255),b
  2340                           
  2341                           ;07_May_WaterMeter_Main.c: 339: V_Temp=ltr%100;
  2342  001658  C07A  F127         	movff	_ltr,___lwmod@dividend
  2343  00165C  C07B  F128         	movff	_ltr+1,___lwmod@dividend+1
  2344  001660  0E00               	movlw	0
  2345  001662  0101               	movlb	1	; () banked
  2346  001664  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2347  001666  0E64               	movlw	100
  2348  001668  6F29               	movwf	___lwmod@divisor& (0+255),b
  2349  00166A  ECC8  F015         	call	___lwmod	;wreg free
  2350  00166E  0101               	movlb	1	; () banked
  2351  001670  5127               	movf	?___lwmod& (0+255),w,b
  2352  001672  0100               	movlb	0	; () banked
  2353  001674  6F9C               	movwf	_V_Temp& (0+255),b
  2354                           
  2355                           ;07_May_WaterMeter_Main.c: 340: IdByte1=V_Temp/10;
  2356  001676  C09C  F127         	movff	_V_Temp,___awdiv@dividend
  2357  00167A  0101               	movlb	1	; () banked
  2358  00167C  6B28               	clrf	(___awdiv@dividend+1)& (0+255),b
  2359  00167E  0E00               	movlw	0
  2360  001680  6F2A               	movwf	(___awdiv@divisor+1)& (0+255),b
  2361  001682  0E0A               	movlw	10
  2362  001684  6F29               	movwf	___awdiv@divisor& (0+255),b
  2363  001686  ECB8  F013         	call	___awdiv	;wreg free
  2364  00168A  0101               	movlb	1	; () banked
  2365  00168C  5127               	movf	?___awdiv& (0+255),w,b
  2366  00168E  0100               	movlb	0	; () banked
  2367  001690  6F9F               	movwf	_IdByte1& (0+255),b
  2368                           
  2369                           ;07_May_WaterMeter_Main.c: 341: IdByte2=V_Temp%10;
  2370  001692  C09C  F127         	movff	_V_Temp,___awmod@dividend
  2371  001696  0101               	movlb	1	; () banked
  2372  001698  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  2373  00169A  0E00               	movlw	0
  2374  00169C  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  2375  00169E  0E0A               	movlw	10
  2376  0016A0  6F29               	movwf	___awmod@divisor& (0+255),b
  2377  0016A2  ECFB  F013         	call	___awmod	;wreg free
  2378  0016A6  0101               	movlb	1	; () banked
  2379  0016A8  5127               	movf	?___awmod& (0+255),w,b
  2380  0016AA  0100               	movlb	0	; () banked
  2381  0016AC  6F9E               	movwf	_IdByte2& (0+255),b
  2382                           
  2383                           ;07_May_WaterMeter_Main.c: 345: LcdCmd(0xcc);
  2384  0016AE  0ECC               	movlw	204
  2385  0016B0  EC9F  F018         	call	_LcdCmd
  2386                           
  2387                           ;07_May_WaterMeter_Main.c: 346: LcdData(IdByte3+0x30);
  2388  0016B4  0100               	movlb	0	; () banked
  2389  0016B6  519D               	movf	_IdByte3& (0+255),w,b
  2390  0016B8  0F30               	addlw	48
  2391  0016BA  EC8F  F018         	call	_LcdData
  2392                           
  2393                           ;07_May_WaterMeter_Main.c: 347: LcdCmd(0xcd);
  2394  0016BE  0ECD               	movlw	205
  2395  0016C0  EC9F  F018         	call	_LcdCmd
  2396                           
  2397                           ;07_May_WaterMeter_Main.c: 348: LcdData(IdByte1+0x30);
  2398  0016C4  0100               	movlb	0	; () banked
  2399  0016C6  519F               	movf	_IdByte1& (0+255),w,b
  2400  0016C8  0F30               	addlw	48
  2401  0016CA  EC8F  F018         	call	_LcdData
  2402                           
  2403                           ;07_May_WaterMeter_Main.c: 349: LcdCmd(0xce);
  2404  0016CE  0ECE               	movlw	206
  2405  0016D0  EC9F  F018         	call	_LcdCmd
  2406                           
  2407                           ;07_May_WaterMeter_Main.c: 350: LcdData(IdByte2+0x30);
  2408  0016D4  0100               	movlb	0	; () banked
  2409  0016D6  519E               	movf	_IdByte2& (0+255),w,b
  2410  0016D8  0F30               	addlw	48
  2411  0016DA  EC8F  F018         	call	_LcdData
  2412  0016DE                     l910:
  2413                           
  2414                           ;07_May_WaterMeter_Main.c: 352: }
  2415                           ;07_May_WaterMeter_Main.c: 391: __nop();
  2416  0016DE  F000               	nop	
  2417  0016E0  D62C               	goto	l899
  2418  0016E2                     __end_of_main:
  2419                           	opt stack 0
  2420                           tblptru	equ	0xFF8
  2421                           tblptrh	equ	0xFF7
  2422                           tblptrl	equ	0xFF6
  2423                           tablat	equ	0xFF5
  2424                           intcon	equ	0xFF2
  2425                           postinc0	equ	0xFEE
  2426                           wreg	equ	0xFE8
  2427                           postdec1	equ	0xFE5
  2428                           fsr1l	equ	0xFE1
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _write_TX_normal_FIFO *****************
  2432 ;; Defined at:
  2433 ;;		line 335 in file "zigbee.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  i               1   15[BANK1 ] unsigned char 
  2438 ;;  n               1   14[BANK1 ] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;Total ram usage:        7 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:   11
  2455 ;; This function calls:
  2456 ;;		_Delay_ms
  2457 ;;		_Xor_check
  2458 ;;		_set_not_ACK
  2459 ;;		_set_not_encrypt
  2460 ;;		_start_transmit
  2461 ;;		_write_ZIGBEE_long
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text1
  2468  00218C                     __ptext1:
  2469                           	opt stack 0
  2470  00218C                     _write_TX_normal_FIFO:
  2471                           	opt stack 19
  2472                           
  2473                           ;zigbee.c: 336: unsigned char i = 0,n = 0;
  2474                           
  2475                           ;incstack = 0
  2476  00218C  0E00               	movlw	0
  2477  00218E  0101               	movlb	1	; () banked
  2478  002190  6F36               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2479  002192  0E00               	movlw	0
  2480  002194  6F35               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2481                           
  2482                           ; BSR set to: 1
  2483                           ;zigbee.c: 338: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  2484  002196  0E01               	movlw	low _HEADER_LENGHT
  2485  002198  6EF6               	movwf	tblptrl,c
  2486  00219A                     	if	1	;There is more than 1 active tblptr byte
  2487  00219A  0E10               	movlw	high _HEADER_LENGHT
  2488  00219C  6EF7               	movwf	tblptrh,c
  2489  00219E                     	endif
  2490  00219E                     	if	1	;There are 3 active tblptr bytes
  2491  00219E  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2492  0021A0  6EF8               	movwf	tblptru,c
  2493  0021A2                     	endif
  2494  0021A2  0008               	tblrd		*
  2495  0021A4  CFF5 F115          	movff	tablat,_data_TX_normal_FIFO
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;zigbee.c: 339: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  2499  0021A8  0E02               	movlw	low _DATA_LENGHT
  2500  0021AA  6EF6               	movwf	tblptrl,c
  2501  0021AC                     	if	1	;There is more than 1 active tblptr byte
  2502  0021AC  0E10               	movlw	high _DATA_LENGHT
  2503  0021AE  6EF7               	movwf	tblptrh,c
  2504  0021B0                     	endif
  2505  0021B0                     	if	1	;There are 3 active tblptr bytes
  2506  0021B0  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2507  0021B2  6EF8               	movwf	tblptru,c
  2508  0021B4                     	endif
  2509  0021B4  0008               	tblrd		*
  2510  0021B6  CFF5 F130          	movff	tablat,??_write_TX_normal_FIFO
  2511  0021BA  0E01               	movlw	low _HEADER_LENGHT
  2512  0021BC  6EF6               	movwf	tblptrl,c
  2513  0021BE                     	if	1	;There is more than 1 active tblptr byte
  2514  0021BE  0E10               	movlw	high _HEADER_LENGHT
  2515  0021C0  6EF7               	movwf	tblptrh,c
  2516  0021C2                     	endif
  2517  0021C2                     	if	1	;There are 3 active tblptr bytes
  2518  0021C2  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2519  0021C4  6EF8               	movwf	tblptru,c
  2520  0021C6                     	endif
  2521  0021C6  0008               	tblrd		*
  2522  0021C8  50F5               	movf	tablat,w,c
  2523  0021CA  2530               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  2524  0021CC  6F16               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;zigbee.c: 340: data_TX_normal_FIFO[2] = 0x01;
  2528  0021CE  0E01               	movlw	1
  2529  0021D0  6F17               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  2530                           
  2531                           ; BSR set to: 1
  2532                           ;zigbee.c: 341: data_TX_normal_FIFO[3] = 0x88;
  2533  0021D2  0E88               	movlw	136
  2534  0021D4  6F18               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;zigbee.c: 342: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  2538  0021D6  C0EE  F119         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  2539                           
  2540                           ; BSR set to: 1
  2541                           ;zigbee.c: 343: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  2542  0021DA  C0F8  F11A         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;zigbee.c: 344: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  2546  0021DE  C0F7  F11B         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;zigbee.c: 345: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  2550  0021E2  C0F9  F11C         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;zigbee.c: 346: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  2554  0021E6  C0FA  F11D         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  2555                           
  2556                           ; BSR set to: 1
  2557                           ;zigbee.c: 347: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  2558  0021EA  C0E8  F11E         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  2559                           
  2560                           ; BSR set to: 1
  2561                           ;zigbee.c: 348: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  2562  0021EE  C0E9  F11F         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;zigbee.c: 349: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  2566  0021F2  C0EA  F120         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;zigbee.c: 350: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  2570  0021F6  C0EB  F121         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  2571                           
  2572                           ; BSR set to: 1
  2573                           ;zigbee.c: 352: for(n=0,ii=13;n<3;n++,ii++){
  2574  0021FA  0E00               	movlw	0
  2575  0021FC  6F35               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2576                           
  2577                           ; BSR set to: 1
  2578  0021FE  0E0D               	movlw	13
  2579  002200  0100               	movlb	0	; () banked
  2580  002202  6FAD               	movwf	_ii& (0+255),b
  2581  002204                     l5227:
  2582                           
  2583                           ; BSR set to: 0
  2584  002204  0E02               	movlw	2
  2585  002206  0101               	movlb	1	; () banked
  2586  002208  6535               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  2587  00220A  D001               	goto	l479
  2588  00220C  D018               	goto	u3840
  2589  00220E                     l479:
  2590                           
  2591                           ; BSR set to: 1
  2592                           ;zigbee.c: 353: DATA_TX[n] = data_TX_normal_FIFO[ii];
  2593                           
  2594                           ; BSR set to: 1
  2595  00220E  0100               	movlb	0	; () banked
  2596  002210  51AD               	movf	_ii& (0+255),w,b
  2597  002212  0D01               	mullw	1
  2598  002214  0E15               	movlw	low _data_TX_normal_FIFO
  2599  002216  24F3               	addwf	prodl,w,c
  2600  002218  6ED9               	movwf	fsr2l,c
  2601  00221A  0E01               	movlw	high _data_TX_normal_FIFO
  2602  00221C  20F4               	addwfc	prodh,w,c
  2603  00221E  6EDA               	movwf	fsr2h,c
  2604  002220  0101               	movlb	1	; () banked
  2605  002222  5135               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  2606  002224  0D01               	mullw	1
  2607  002226  0EB8               	movlw	low _DATA_TX
  2608  002228  24F3               	addwf	prodl,w,c
  2609  00222A  6EE1               	movwf	fsr1l,c
  2610  00222C  0E00               	movlw	high _DATA_TX
  2611  00222E  20F4               	addwfc	prodh,w,c
  2612  002230  6EE2               	movwf	fsr1h,c
  2613  002232  CFDF FFE7          	movff	indf2,indf1
  2614                           
  2615                           ; BSR set to: 1
  2616  002236  2B35               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  2617                           
  2618                           ; BSR set to: 1
  2619  002238  0100               	movlb	0	; () banked
  2620  00223A  2BAD               	incf	_ii& (0+255),f,b
  2621  00223C  D7E3               	goto	l5227
  2622  00223E                     u3840:
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;zigbee.c: 354: }
  2626                           ;zigbee.c: 355: TX_CRC = Xor_check(DATA_TX,3);
  2627                           
  2628                           ; BSR set to: 1
  2629  00223E  0EB8               	movlw	low _DATA_TX
  2630  002240  6F27               	movwf	Xor_check@data_value& (0+255),b
  2631  002242  0E00               	movlw	high _DATA_TX
  2632  002244  6F28               	movwf	(Xor_check@data_value+1)& (0+255),b
  2633  002246  0E03               	movlw	3
  2634  002248  6F29               	movwf	Xor_check@length& (0+255),b
  2635  00224A  EC0C  F016         	call	_Xor_check	;wreg free
  2636  00224E  C127  F094         	movff	?_Xor_check,_TX_CRC
  2637  002252  C128  F095         	movff	?_Xor_check+1,_TX_CRC+1
  2638                           
  2639                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  2640  002256  C094  F125         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  2641                           
  2642                           ;zigbee.c: 357: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  2643  00225A  0100               	movlb	0	; () banked
  2644  00225C  5195               	movf	(_TX_CRC+1)& (0+255),w,b
  2645  00225E  0101               	movlb	1	; () banked
  2646  002260  6F26               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;zigbee.c: 360: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  2650  002262  0E00               	movlw	0
  2651  002264  6F36               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2652  002266                     l5247:
  2653                           
  2654                           ; BSR set to: 1
  2655  002266  0E01               	movlw	low _HEADER_LENGHT
  2656  002268  6EF6               	movwf	tblptrl,c
  2657  00226A                     	if	1	;There is more than 1 active tblptr byte
  2658  00226A  0E10               	movlw	high _HEADER_LENGHT
  2659  00226C  6EF7               	movwf	tblptrh,c
  2660  00226E                     	endif
  2661  00226E                     	if	1	;There are 3 active tblptr bytes
  2662  00226E  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2663  002270  6EF8               	movwf	tblptru,c
  2664  002272                     	endif
  2665  002272  0008               	tblrd		*
  2666  002274  50F5               	movf	tablat,w,c
  2667  002276  6F30               	movwf	??_write_TX_normal_FIFO& (0+255),b
  2668  002278  6B31               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  2669  00227A  0E02               	movlw	low _DATA_LENGHT
  2670  00227C  6EF6               	movwf	tblptrl,c
  2671  00227E                     	if	1	;There is more than 1 active tblptr byte
  2672  00227E  0E10               	movlw	high _DATA_LENGHT
  2673  002280  6EF7               	movwf	tblptrh,c
  2674  002282                     	endif
  2675  002282                     	if	1	;There are 3 active tblptr bytes
  2676  002282  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2677  002284  6EF8               	movwf	tblptru,c
  2678  002286                     	endif
  2679  002286  0008               	tblrd		*
  2680  002288  50F5               	movf	tablat,w,c
  2681  00228A  2730               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2682  00228C  0E00               	movlw	0
  2683  00228E  2331               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2684  002290  0E02               	movlw	2
  2685  002292  2730               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2686  002294  0E00               	movlw	0
  2687  002296  2331               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2688  002298  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2689  00229A  6F32               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  2690  00229C  6B33               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  2691  00229E  5130               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  2692  0022A0  5D32               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  2693  0022A2  5133               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  2694  0022A4  0A80               	xorlw	128
  2695  0022A6  6F34               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  2696  0022A8  5131               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  2697  0022AA  0A80               	xorlw	128
  2698  0022AC  5934               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  2699  0022AE  B0D8               	btfsc	status,0,c
  2700  0022B0  D020               	goto	u3860
  2701                           
  2702                           ; BSR set to: 1
  2703                           ;zigbee.c: 361: {
  2704                           ;zigbee.c: 362: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  2705                           
  2706                           ; BSR set to: 1
  2707                           
  2708                           ; BSR set to: 1
  2709  0022B2  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2710  0022B4  0100               	movlb	0	; () banked
  2711  0022B6  2598               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  2712  0022B8  0101               	movlb	1	; () banked
  2713  0022BA  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  2714  0022BC  0E00               	movlw	0
  2715  0022BE  0100               	movlb	0	; () banked
  2716  0022C0  2199               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  2717  0022C2  0101               	movlb	1	; () banked
  2718  0022C4  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  2719  0022C6  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2720  0022C8  0D01               	mullw	1
  2721  0022CA  0E15               	movlw	low _data_TX_normal_FIFO
  2722  0022CC  24F3               	addwf	prodl,w,c
  2723  0022CE  6ED9               	movwf	fsr2l,c
  2724  0022D0  0E01               	movlw	high _data_TX_normal_FIFO
  2725  0022D2  20F4               	addwfc	prodh,w,c
  2726  0022D4  6EDA               	movwf	fsr2h,c
  2727  0022D6  50DF               	movf	indf2,w,c
  2728  0022D8  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  2729  0022DA  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  2730                           
  2731                           ;zigbee.c: 363: Delay_ms(10);
  2732  0022DE  0E00               	movlw	0
  2733  0022E0  0101               	movlb	1	; () banked
  2734  0022E2  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  2735  0022E4  0E0A               	movlw	10
  2736  0022E6  6F27               	movwf	Delay_ms@time& (0+255),b
  2737  0022E8  ECDB  F018         	call	_Delay_ms	;wreg free
  2738  0022EC  0101               	movlb	1	; () banked
  2739  0022EE  2B36               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  2740  0022F0  D7BA               	goto	l5247
  2741  0022F2                     u3860:
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;zigbee.c: 364: }
  2745                           ;zigbee.c: 365: set_not_ACK();
  2746                           
  2747                           ; BSR set to: 1
  2748  0022F2  EC00  F019         	call	_set_not_ACK	;wreg free
  2749                           
  2750                           ;zigbee.c: 366: set_not_encrypt();
  2751  0022F6  ECF5  F018         	call	_set_not_encrypt	;wreg free
  2752                           
  2753                           ;zigbee.c: 367: start_transmit();
  2754  0022FA  ECA4  F015         	call	_start_transmit	;wreg free
  2755  0022FE  0012               	return		;funcret
  2756  002300                     __end_of_write_TX_normal_FIFO:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           indf1	equ	0xFE7
  2768                           postdec1	equ	0xFE5
  2769                           fsr1h	equ	0xFE2
  2770                           fsr1l	equ	0xFE1
  2771                           indf2	equ	0xFDF
  2772                           fsr2h	equ	0xFDA
  2773                           fsr2l	equ	0xFD9
  2774                           status	equ	0xFD8
  2775                           
  2776 ;; *************** function _start_transmit *****************
  2777 ;; Defined at:
  2778 ;;		line 383 in file "zigbee.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:   10
  2799 ;; This function calls:
  2800 ;;		_read_ZIGBEE_short
  2801 ;;		_write_ZIGBEE_short
  2802 ;; This function is called by:
  2803 ;;		_write_TX_normal_FIFO
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text2
  2808  002B48                     __ptext2:
  2809                           	opt stack 0
  2810  002B48                     _start_transmit:
  2811                           	opt stack 19
  2812                           
  2813                           ;zigbee.c: 385: CHECK=0;
  2814                           
  2815                           ;incstack = 0
  2816  002B48  0E00               	movlw	0
  2817  002B4A  0100               	movlb	0	; () banked
  2818  002B4C  6FAE               	movwf	_CHECK& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;zigbee.c: 386: CHECK = CHECK | 0x01;
  2822  002B4E  51AE               	movf	_CHECK& (0+255),w,b
  2823  002B50  0901               	iorlw	1
  2824  002B52  6FAE               	movwf	_CHECK& (0+255),b
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;zigbee.c: 387: write_ZIGBEE_short(0x1B,CHECK);
  2828  002B54  C0AE  F129         	movff	_CHECK,write_ZIGBEE_short@data_r
  2829  002B58  0E1B               	movlw	27
  2830  002B5A  EC13  F018         	call	_write_ZIGBEE_short
  2831                           
  2832                           ;zigbee.c: 389: CHECK=0;
  2833  002B5E  0E00               	movlw	0
  2834  002B60  0100               	movlb	0	; () banked
  2835  002B62  6FAE               	movwf	_CHECK& (0+255),b
  2836  002B64                     
  2837                           ; BSR set to: 0
  2838                           
  2839                           ; BSR set to: 0
  2840  002B64  0E31               	movlw	49
  2841  002B66  EC9E  F017         	call	_read_ZIGBEE_short
  2842  002B6A  06E8               	decf	wreg,f,c
  2843  002B6C  A4D8               	btfss	status,2,c
  2844  002B6E  D7FA               	goto	l493
  2845                           
  2846                           ;zigbee.c: 391: CHECK = read_ZIGBEE_short(0x31);
  2847  002B70  0E31               	movlw	49
  2848  002B72  EC9E  F017         	call	_read_ZIGBEE_short
  2849  002B76  0100               	movlb	0	; () banked
  2850  002B78  6FAE               	movwf	_CHECK& (0+255),b
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;zigbee.c: 392: __nop();
  2854  002B7A  F000               	nop	
  2855                           
  2856                           ;zigbee.c: 393: CHECK = 0;
  2857  002B7C  0E00               	movlw	0
  2858  002B7E  0100               	movlb	0	; () banked
  2859  002B80  6FAE               	movwf	_CHECK& (0+255),b
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;zigbee.c: 394: CHECK = read_ZIGBEE_short(0x24);
  2863  002B82  0E24               	movlw	36
  2864  002B84  EC9E  F017         	call	_read_ZIGBEE_short
  2865  002B88  0100               	movlb	0	; () banked
  2866  002B8A  6FAE               	movwf	_CHECK& (0+255),b
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;zigbee.c: 395: __nop();
  2870  002B8C  F000               	nop	
  2871  002B8E  0012               	return		;funcret
  2872  002B90                     __end_of_start_transmit:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           intcon	equ	0xFF2
  2881                           postinc0	equ	0xFEE
  2882                           wreg	equ	0xFE8
  2883                           indf1	equ	0xFE7
  2884                           postdec1	equ	0xFE5
  2885                           fsr1h	equ	0xFE2
  2886                           fsr1l	equ	0xFE1
  2887                           indf2	equ	0xFDF
  2888                           fsr2h	equ	0xFDA
  2889                           fsr2l	equ	0xFD9
  2890                           status	equ	0xFD8
  2891                           
  2892 ;; *************** function _read_ZIGBEE_short *****************
  2893 ;; Defined at:
  2894 ;;		line 404 in file "zigbee.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  address         1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  address         1    3[BANK1 ] unsigned char 
  2899 ;;  data_r          1    2[BANK1 ] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      unsigned char 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;Total ram usage:        2 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    9
  2916 ;; This function calls:
  2917 ;;		_SPI_Read
  2918 ;;		_SPI_Write
  2919 ;; This function is called by:
  2920 ;;		_start_transmit
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text3
  2925  002F3C                     __ptext3:
  2926                           	opt stack 0
  2927  002F3C                     _read_ZIGBEE_short:
  2928                           	opt stack 19
  2929                           
  2930                           ;incstack = 0
  2931                           ;read_ZIGBEE_short@address stored from wreg
  2932  002F3C  0101               	movlb	1	; () banked
  2933  002F3E  6F2A               	movwf	read_ZIGBEE_short@address& (0+255),b
  2934                           
  2935                           ;zigbee.c: 405: unsigned char data_r = 0;
  2936  002F40  0E00               	movlw	0
  2937  002F42  0101               	movlb	1	; () banked
  2938  002F44  6F29               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;zigbee.c: 407: PORTCbits.RC0=0;
  2942  002F46  9082               	bcf	3970,0,c	;volatile
  2943                           
  2944                           ; BSR set to: 1
  2945                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
  2946  002F48  512A               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2947  002F4A  252A               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  2948  002F4C  0B7E               	andlw	126
  2949  002F4E  6F2A               	movwf	read_ZIGBEE_short@address& (0+255),b
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;zigbee.c: 409: SPI_Write(address);
  2953  002F50  512A               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2954  002F52  EC3C  F019         	call	_SPI_Write
  2955                           
  2956                           ;zigbee.c: 410: data_r = SPI_Read();
  2957  002F56  EC2A  F019         	call	_SPI_Read	;wreg free
  2958  002F5A  0101               	movlb	1	; () banked
  2959  002F5C  6F29               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2960                           
  2961                           ; BSR set to: 1
  2962                           ;zigbee.c: 411: PORTCbits.RC0=1;
  2963  002F5E  8082               	bsf	3970,0,c	;volatile
  2964                           
  2965                           ; BSR set to: 1
  2966                           ;zigbee.c: 413: return data_r;
  2967  002F60  5129               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  2968  002F62  0012               	return	
  2969  002F64                     __end_of_read_ZIGBEE_short:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           indf1	equ	0xFE7
  2981                           postdec1	equ	0xFE5
  2982                           fsr1h	equ	0xFE2
  2983                           fsr1l	equ	0xFE1
  2984                           indf2	equ	0xFDF
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _SPI_Read *****************
  2990 ;; Defined at:
  2991 ;;		line 464 in file "zigbee.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  TempVar         1    0[BANK1 ] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    8
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_read_ZIGBEE_short
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text4
  3020  003254                     __ptext4:
  3021                           	opt stack 0
  3022  003254                     _SPI_Read:
  3023                           	opt stack 19
  3024                           
  3025                           ;zigbee.c: 465: unsigned char TempVar;
  3026                           ;zigbee.c: 466: SSP1BUF = 0xff;
  3027                           
  3028                           ; BSR set to: 1
  3029                           ;incstack = 0
  3030  003254  68C9               	setf	4041,c	;volatile
  3031  003256  A0C7               	btfss	4039,0,c	;volatile
  3032  003258  D7FE               	goto	l520
  3033                           
  3034                           ;zigbee.c: 468: TempVar = SSP1BUF;
  3035  00325A  CFC9 F127          	movff	4041,SPI_Read@TempVar	;volatile
  3036                           
  3037                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
  3038  00325E  969E               	bcf	3998,3,c	;volatile
  3039                           
  3040                           ;zigbee.c: 470: return ( TempVar );
  3041  003260  0101               	movlb	1	; () banked
  3042  003262  5127               	movf	SPI_Read@TempVar& (0+255),w,b
  3043  003264  0012               	return	
  3044  003266                     __end_of_SPI_Read:
  3045                           	opt stack 0
  3046                           tblptru	equ	0xFF8
  3047                           tblptrh	equ	0xFF7
  3048                           tblptrl	equ	0xFF6
  3049                           tablat	equ	0xFF5
  3050                           prodh	equ	0xFF4
  3051                           prodl	equ	0xFF3
  3052                           intcon	equ	0xFF2
  3053                           postinc0	equ	0xFEE
  3054                           wreg	equ	0xFE8
  3055                           indf1	equ	0xFE7
  3056                           postdec1	equ	0xFE5
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           indf2	equ	0xFDF
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           
  3064 ;; *************** function _set_not_encrypt *****************
  3065 ;; Defined at:
  3066 ;;		line 376 in file "zigbee.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  temp            1    4[BANK1 ] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;Total ram usage:        1 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:   10
  3087 ;; This function calls:
  3088 ;;		_write_ZIGBEE_short
  3089 ;; This function is called by:
  3090 ;;		_write_TX_normal_FIFO
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text5
  3095  0031EA                     __ptext5:
  3096                           	opt stack 0
  3097  0031EA                     _set_not_encrypt:
  3098                           	opt stack 19
  3099                           
  3100                           ;zigbee.c: 378: unsigned char temp = 0;
  3101                           
  3102                           ; BSR set to: 1
  3103                           ;incstack = 0
  3104  0031EA  0E00               	movlw	0
  3105  0031EC  0101               	movlb	1	; () banked
  3106  0031EE  6F2B               	movwf	set_not_encrypt@temp& (0+255),b
  3107                           
  3108                           ;zigbee.c: 379: temp = temp & (!0x02);
  3109  0031F0  0E00               	movlw	0
  3110  0031F2  6F2B               	movwf	set_not_encrypt@temp& (0+255),b
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;zigbee.c: 380: write_ZIGBEE_short(0x1B, temp);
  3114  0031F4  C12B  F129         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  3115  0031F8  0E1B               	movlw	27
  3116  0031FA  EC13  F018         	call	_write_ZIGBEE_short
  3117  0031FE  0012               	return		;funcret
  3118  003200                     __end_of_set_not_encrypt:
  3119                           	opt stack 0
  3120                           tblptru	equ	0xFF8
  3121                           tblptrh	equ	0xFF7
  3122                           tblptrl	equ	0xFF6
  3123                           tablat	equ	0xFF5
  3124                           prodh	equ	0xFF4
  3125                           prodl	equ	0xFF3
  3126                           intcon	equ	0xFF2
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           indf1	equ	0xFE7
  3130                           postdec1	equ	0xFE5
  3131                           fsr1h	equ	0xFE2
  3132                           fsr1l	equ	0xFE1
  3133                           indf2	equ	0xFDF
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _set_not_ACK *****************
  3139 ;; Defined at:
  3140 ;;		line 370 in file "zigbee.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  temp            1    4[BANK1 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;Total ram usage:        1 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:   10
  3161 ;; This function calls:
  3162 ;;		_write_ZIGBEE_short
  3163 ;; This function is called by:
  3164 ;;		_write_TX_normal_FIFO
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text6
  3169  003200                     __ptext6:
  3170                           	opt stack 0
  3171  003200                     _set_not_ACK:
  3172                           	opt stack 19
  3173                           
  3174                           ;zigbee.c: 372: unsigned char temp = 0;
  3175                           
  3176                           ;incstack = 0
  3177  003200  0E00               	movlw	0
  3178  003202  0101               	movlb	1	; () banked
  3179  003204  6F2B               	movwf	set_not_ACK@temp& (0+255),b
  3180                           
  3181                           ;zigbee.c: 373: temp = temp & (!0x04);
  3182  003206  0E00               	movlw	0
  3183  003208  6F2B               	movwf	set_not_ACK@temp& (0+255),b
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;zigbee.c: 374: write_ZIGBEE_short(0x1B, temp);
  3187  00320A  C12B  F129         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  3188  00320E  0E1B               	movlw	27
  3189  003210  EC13  F018         	call	_write_ZIGBEE_short
  3190  003214  0012               	return		;funcret
  3191  003216                     __end_of_set_not_ACK:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           postinc0	equ	0xFEE
  3201                           wreg	equ	0xFE8
  3202                           indf1	equ	0xFE7
  3203                           postdec1	equ	0xFE5
  3204                           fsr1h	equ	0xFE2
  3205                           fsr1l	equ	0xFE1
  3206                           indf2	equ	0xFDF
  3207                           fsr2h	equ	0xFDA
  3208                           fsr2l	equ	0xFD9
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function _Xor_check *****************
  3212 ;; Defined at:
  3213 ;;		line 504 in file "zigbee.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  data_value      2    0[BANK1 ] PTR unsigned char 
  3216 ;;		 -> DATA_TX(3), DATA_RX(5), 
  3217 ;;  length          1    2[BANK1 ] unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  xor             2    6[BANK1 ] unsigned short 
  3220 ;;  xor_value       2    4[BANK1 ] unsigned short 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2    0[BANK1 ] unsigned short 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        8 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    8
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_write_TX_normal_FIFO
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text7
  3245  002C18                     __ptext7:
  3246                           	opt stack 0
  3247  002C18                     _Xor_check:
  3248                           	opt stack 21
  3249                           
  3250                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
  3251                           
  3252                           ;incstack = 0
  3253  002C18  0E8D               	movlw	141
  3254  002C1A  0101               	movlb	1	; () banked
  3255  002C1C  6F2C               	movwf	(Xor_check@xor_value+1)& (0+255),b
  3256  002C1E  0E0D               	movlw	13
  3257  002C20  6F2B               	movwf	Xor_check@xor_value& (0+255),b
  3258                           
  3259                           ;zigbee.c: 507: unsigned short xor=0x00;
  3260  002C22  0E00               	movlw	0
  3261  002C24  6F2E               	movwf	(Xor_check@xor+1)& (0+255),b
  3262  002C26  0E00               	movlw	0
  3263  002C28  6F2D               	movwf	Xor_check@xor& (0+255),b
  3264                           
  3265                           ;zigbee.c: 508: while(length --)
  3266  002C2A  D00A               	goto	l559
  3267  002C2C                     
  3268                           ; BSR set to: 1
  3269                           ;zigbee.c: 509: {
  3270                           ;zigbee.c: 510: xor_value ^= *data_value++;
  3271                           
  3272                           ; BSR set to: 1
  3273  002C2C  C127  FFD9         	movff	Xor_check@data_value,fsr2l
  3274  002C30  C128  FFDA         	movff	Xor_check@data_value+1,fsr2h
  3275  002C34  50DF               	movf	indf2,w,c
  3276  002C36  6F2A               	movwf	??_Xor_check& (0+255),b
  3277  002C38  512A               	movf	??_Xor_check& (0+255),w,b
  3278  002C3A  1B2B               	xorwf	Xor_check@xor_value& (0+255),f,b
  3279                           
  3280                           ; BSR set to: 1
  3281  002C3C  4B27               	infsnz	Xor_check@data_value& (0+255),f,b
  3282  002C3E  2B28               	incf	(Xor_check@data_value+1)& (0+255),f,b
  3283  002C40                     l559:
  3284                           
  3285                           ; BSR set to: 1
  3286                           
  3287                           ; BSR set to: 1
  3288  002C40  0729               	decf	Xor_check@length& (0+255),f,b
  3289  002C42  2929               	incf	Xor_check@length& (0+255),w,b
  3290  002C44  A4D8               	btfss	status,2,c
  3291  002C46  D7F2               	goto	l560
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;zigbee.c: 511: }
  3295                           ;zigbee.c: 512: xor=xor_value;
  3296  002C48  C12B  F12D         	movff	Xor_check@xor_value,Xor_check@xor
  3297  002C4C  C12C  F12E         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  3298                           
  3299                           ;zigbee.c: 513: return(xor);
  3300  002C50  C12D  F127         	movff	Xor_check@xor,?_Xor_check
  3301  002C54  C12E  F128         	movff	Xor_check@xor+1,?_Xor_check+1
  3302                           
  3303                           ; BSR set to: 1
  3304  002C58  0012               	return		;funcret
  3305  002C5A                     __end_of_Xor_check:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           postinc0	equ	0xFEE
  3315                           wreg	equ	0xFE8
  3316                           indf1	equ	0xFE7
  3317                           postdec1	equ	0xFE5
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _set_short_address *****************
  3326 ;; Defined at:
  3327 ;;		line 68 in file "zigbee.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3330 ;;		 -> ADDRESS_short_2(2), 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3342 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;Total ram usage:        2 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:   10
  3349 ;; This function calls:
  3350 ;;		_write_ZIGBEE_short
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text8
  3357  002EB6                     __ptext8:
  3358                           	opt stack 0
  3359  002EB6                     _set_short_address:
  3360                           	opt stack 20
  3361                           
  3362                           ;zigbee.c: 69: write_ZIGBEE_short(0x03, address[0]);
  3363                           
  3364                           ; BSR set to: 1
  3365                           ;incstack = 0
  3366  002EB6  C12B  FFD9         	movff	set_short_address@address,fsr2l
  3367  002EBA  C12C  FFDA         	movff	set_short_address@address+1,fsr2h
  3368  002EBE  50DF               	movf	indf2,w,c
  3369  002EC0  0101               	movlb	1	; () banked
  3370  002EC2  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3371  002EC4  0E03               	movlw	3
  3372  002EC6  EC13  F018         	call	_write_ZIGBEE_short
  3373                           
  3374                           ;zigbee.c: 70: write_ZIGBEE_short(0x04, address[1]);
  3375  002ECA  0101               	movlb	1	; () banked
  3376  002ECC  EE20 F001          	lfsr	2,1
  3377  002ED0  512B               	movf	set_short_address@address& (0+255),w,b
  3378  002ED2  26D9               	addwf	fsr2l,f,c
  3379  002ED4  512C               	movf	(set_short_address@address+1)& (0+255),w,b
  3380  002ED6  22DA               	addwfc	fsr2h,f,c
  3381  002ED8  50DF               	movf	indf2,w,c
  3382  002EDA  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3383  002EDC  0E04               	movlw	4
  3384  002EDE  EC13  F018         	call	_write_ZIGBEE_short
  3385  002EE2  0012               	return		;funcret
  3386  002EE4                     __end_of_set_short_address:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _set_reception_mode *****************
  3407 ;; Defined at:
  3408 ;;		line 304 in file "zigbee.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  r_mode          1    wreg     unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  r_mode          1    4[BANK1 ] unsigned char 
  3413 ;;  temp            1    5[BANK1 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        2 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:   10
  3430 ;; This function calls:
  3431 ;;		_write_ZIGBEE_short
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text9
  3438  002868                     __ptext9:
  3439                           	opt stack 0
  3440  002868                     _set_reception_mode:
  3441                           	opt stack 20
  3442                           
  3443                           ;incstack = 0
  3444                           ;set_reception_mode@r_mode stored from wreg
  3445  002868  0101               	movlb	1	; () banked
  3446  00286A  6F2B               	movwf	set_reception_mode@r_mode& (0+255),b
  3447                           
  3448                           ;zigbee.c: 306: unsigned char temp=0;
  3449  00286C  0E00               	movlw	0
  3450  00286E  0101               	movlb	1	; () banked
  3451  002870  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3452                           
  3453                           ;zigbee.c: 307: switch(r_mode)
  3454  002872  D026               	goto	l471
  3455  002874                     
  3456                           ; BSR set to: 1
  3457                           ;zigbee.c: 310: {
  3458                           ;zigbee.c: 311: temp=0;
  3459                           
  3460                           ; BSR set to: 1
  3461  002874  0E00               	movlw	0
  3462  002876  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3463                           
  3464                           ;zigbee.c: 312: temp = temp & (!0x03);
  3465  002878  0E00               	movlw	0
  3466  00287A  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;zigbee.c: 313: write_ZIGBEE_short(0x00, temp);
  3470  00287C  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3471  002880  0E00               	movlw	0
  3472  002882  EC13  F018         	call	_write_ZIGBEE_short
  3473                           
  3474                           ;zigbee.c: 314: }
  3475                           ;zigbee.c: 315: break;
  3476  002886  0012               	return	
  3477  002888                     
  3478                           ;zigbee.c: 318: {
  3479                           ;zigbee.c: 319: temp=0;
  3480  002888  0E00               	movlw	0
  3481  00288A  0101               	movlb	1	; () banked
  3482  00288C  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3483                           
  3484                           ;zigbee.c: 320: temp = temp & (!0x01);
  3485  00288E  0E00               	movlw	0
  3486  002890  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;zigbee.c: 321: temp = temp | 0x02;
  3490  002892  512C               	movf	set_reception_mode@temp& (0+255),w,b
  3491  002894  0902               	iorlw	2
  3492  002896  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3493                           
  3494                           ; BSR set to: 1
  3495                           ;zigbee.c: 322: write_ZIGBEE_short(0x00, temp);
  3496  002898  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3497  00289C  0E00               	movlw	0
  3498  00289E  EC13  F018         	call	_write_ZIGBEE_short
  3499                           
  3500                           ;zigbee.c: 323: }
  3501                           ;zigbee.c: 324: break;
  3502  0028A2  0012               	return	
  3503  0028A4                     
  3504                           ;zigbee.c: 326: {
  3505                           ;zigbee.c: 327: temp=0;
  3506  0028A4  0E00               	movlw	0
  3507  0028A6  0101               	movlb	1	; () banked
  3508  0028A8  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3509                           
  3510                           ;zigbee.c: 328: temp = temp & (!0x02);
  3511  0028AA  0E00               	movlw	0
  3512  0028AC  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;zigbee.c: 329: temp = temp | 0x01;
  3516  0028AE  512C               	movf	set_reception_mode@temp& (0+255),w,b
  3517  0028B0  0901               	iorlw	1
  3518  0028B2  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;zigbee.c: 330: write_ZIGBEE_short(0x00, temp);
  3522  0028B4  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3523  0028B8  0E00               	movlw	0
  3524  0028BA  EC13  F018         	call	_write_ZIGBEE_short
  3525                           
  3526                           ;zigbee.c: 333: }
  3527                           
  3528                           ;zigbee.c: 331: }
  3529                           ;zigbee.c: 332: break;
  3530  0028BE  0012               	return	
  3531  0028C0                     l471:
  3532  0028C0  0101               	movlb	1	; () banked
  3533  0028C2  512B               	movf	set_reception_mode@r_mode& (0+255),w,b
  3534                           
  3535                           ; Switch size 1, requested type "space"
  3536                           ; Number of cases is 3, Range of values is 1 to 3
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte           10     6 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541  0028C4  0A01               	xorlw	1	; case 1
  3542  0028C6  B4D8               	btfsc	status,2,c
  3543  0028C8  D7D5               	goto	l472
  3544  0028CA  0A03               	xorlw	3	; case 2
  3545  0028CC  B4D8               	btfsc	status,2,c
  3546  0028CE  D7DC               	goto	l474
  3547  0028D0  0A01               	xorlw	1	; case 3
  3548  0028D2  A4D8               	btfss	status,2,c
  3549  0028D4  0012               	return	
  3550  0028D6  D7E6               	goto	l475
  3551  0028D8                     __end_of_set_reception_mode:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           wreg	equ	0xFE8
  3562                           indf1	equ	0xFE7
  3563                           postdec1	equ	0xFE5
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _set_long_address *****************
  3572 ;; Defined at:
  3573 ;;		line 63 in file "zigbee.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3576 ;;		 -> ADDRESS_long_2(8), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  i               1    6[BANK1 ] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3588 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        3 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:   10
  3595 ;; This function calls:
  3596 ;;		_write_ZIGBEE_short
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text10
  3603  002E50                     __ptext10:
  3604                           	opt stack 0
  3605  002E50                     _set_long_address:
  3606                           	opt stack 20
  3607                           
  3608                           ;zigbee.c: 64: unsigned char i = 0;
  3609                           
  3610                           ;incstack = 0
  3611  002E50  0E00               	movlw	0
  3612  002E52  0101               	movlb	1	; () banked
  3613  002E54  6F2D               	movwf	set_long_address@i& (0+255),b
  3614                           
  3615                           ;zigbee.c: 65: for(i = 0; i < 8; i++)
  3616  002E56  0E00               	movlw	0
  3617  002E58  6F2D               	movwf	set_long_address@i& (0+255),b
  3618  002E5A                     l5109:
  3619                           
  3620                           ; BSR set to: 1
  3621  002E5A  0E07               	movlw	7
  3622  002E5C  652D               	cpfsgt	set_long_address@i& (0+255),b
  3623  002E5E  D001               	goto	l390
  3624  002E60  0012               	return	
  3625  002E62                     l390:
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;zigbee.c: 66: write_ZIGBEE_short(0x05 + i, address[i]);
  3629                           
  3630                           ; BSR set to: 1
  3631  002E62  512D               	movf	set_long_address@i& (0+255),w,b
  3632  002E64  0D01               	mullw	1
  3633  002E66  50F3               	movf	prodl,w,c
  3634  002E68  252B               	addwf	set_long_address@address& (0+255),w,b
  3635  002E6A  6ED9               	movwf	fsr2l,c
  3636  002E6C  50F4               	movf	prodh,w,c
  3637  002E6E  212C               	addwfc	(set_long_address@address+1)& (0+255),w,b
  3638  002E70  6EDA               	movwf	fsr2h,c
  3639  002E72  50DF               	movf	indf2,w,c
  3640  002E74  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3641  002E76  512D               	movf	set_long_address@i& (0+255),w,b
  3642  002E78  0F05               	addlw	5
  3643  002E7A  EC13  F018         	call	_write_ZIGBEE_short
  3644  002E7E  0101               	movlb	1	; () banked
  3645  002E80  2B2D               	incf	set_long_address@i& (0+255),f,b
  3646  002E82  D7EB               	goto	l5109
  3647  002E84                     __end_of_set_long_address:
  3648                           	opt stack 0
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           intcon	equ	0xFF2
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           indf1	equ	0xFE7
  3659                           postdec1	equ	0xFE5
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           indf2	equ	0xFDF
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function _set_frame_format_filter *****************
  3668 ;; Defined at:
  3669 ;;		line 263 in file "zigbee.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  fff_mode        1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  fff_mode        1    4[BANK1 ] unsigned char 
  3674 ;;  temp            1    5[BANK1 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:   10
  3691 ;; This function calls:
  3692 ;;		_write_ZIGBEE_short
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text11
  3699  0026DE                     __ptext11:
  3700                           	opt stack 0
  3701  0026DE                     _set_frame_format_filter:
  3702                           	opt stack 20
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;incstack = 0
  3706                           ;set_frame_format_filter@fff_mode stored from wreg
  3707  0026DE  0101               	movlb	1	; () banked
  3708  0026E0  6F2B               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  3709                           
  3710                           ;zigbee.c: 265: unsigned char temp = 0;
  3711  0026E2  0E00               	movlw	0
  3712  0026E4  0101               	movlb	1	; () banked
  3713  0026E6  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3714                           
  3715                           ;zigbee.c: 266: switch(fff_mode)
  3716  0026E8  D034               	goto	l462
  3717  0026EA                     
  3718                           ; BSR set to: 1
  3719                           ;zigbee.c: 269: {
  3720                           ;zigbee.c: 270: temp=0;
  3721                           
  3722                           ; BSR set to: 1
  3723  0026EA  0E00               	movlw	0
  3724  0026EC  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3725                           
  3726                           ;zigbee.c: 271: temp = temp & (!0x0E);
  3727  0026EE  0E00               	movlw	0
  3728  0026F0  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;zigbee.c: 272: write_ZIGBEE_short(0x0D, temp);
  3732  0026F2  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3733  0026F6  0E0D               	movlw	13
  3734  0026F8  EC13  F018         	call	_write_ZIGBEE_short
  3735                           
  3736                           ;zigbee.c: 273: }
  3737                           ;zigbee.c: 274: break;
  3738  0026FC  0012               	return	
  3739  0026FE                     
  3740                           ;zigbee.c: 276: {
  3741                           ;zigbee.c: 277: temp=0;
  3742  0026FE  0E00               	movlw	0
  3743  002700  0101               	movlb	1	; () banked
  3744  002702  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3745                           
  3746                           ;zigbee.c: 278: temp = temp & (!0x06);
  3747  002704  0E00               	movlw	0
  3748  002706  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;zigbee.c: 279: temp = temp | 0x08;
  3752  002708  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3753  00270A  0908               	iorlw	8
  3754  00270C  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;zigbee.c: 280: write_ZIGBEE_short(0x0D, temp);
  3758  00270E  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3759  002712  0E0D               	movlw	13
  3760  002714  EC13  F018         	call	_write_ZIGBEE_short
  3761                           
  3762                           ;zigbee.c: 281: }
  3763                           ;zigbee.c: 282: break;
  3764  002718  0012               	return	
  3765  00271A                     
  3766                           ;zigbee.c: 284: {
  3767                           ;zigbee.c: 285: temp=0;
  3768  00271A  0E00               	movlw	0
  3769  00271C  0101               	movlb	1	; () banked
  3770  00271E  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3771                           
  3772                           ;zigbee.c: 286: temp = temp & (!0x0A);
  3773  002720  0E00               	movlw	0
  3774  002722  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;zigbee.c: 287: temp = temp | 0x04;
  3778  002724  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3779  002726  0904               	iorlw	4
  3780  002728  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;zigbee.c: 288: write_ZIGBEE_short(0x0D, temp);
  3784  00272A  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3785  00272E  0E0D               	movlw	13
  3786  002730  EC13  F018         	call	_write_ZIGBEE_short
  3787                           
  3788                           ;zigbee.c: 289: }
  3789                           ;zigbee.c: 290: break;
  3790  002734  0012               	return	
  3791  002736                     
  3792                           ;zigbee.c: 293: {
  3793                           ;zigbee.c: 294: temp=0;
  3794  002736  0E00               	movlw	0
  3795  002738  0101               	movlb	1	; () banked
  3796  00273A  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3797                           
  3798                           ;zigbee.c: 295: temp = temp & (!0x0C);
  3799  00273C  0E00               	movlw	0
  3800  00273E  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;zigbee.c: 296: temp = temp | 0x02;
  3804  002740  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3805  002742  0902               	iorlw	2
  3806  002744  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3807                           
  3808                           ; BSR set to: 1
  3809                           ;zigbee.c: 297: write_ZIGBEE_short(0x0D, temp);
  3810  002746  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3811  00274A  0E0D               	movlw	13
  3812  00274C  EC13  F018         	call	_write_ZIGBEE_short
  3813                           
  3814                           ;zigbee.c: 300: }
  3815                           
  3816                           ;zigbee.c: 298: }
  3817                           ;zigbee.c: 299: break;
  3818  002750  0012               	return	
  3819  002752                     l462:
  3820  002752  0101               	movlb	1	; () banked
  3821  002754  512B               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  3822                           
  3823                           ; Switch size 1, requested type "space"
  3824                           ; Number of cases is 4, Range of values is 1 to 4
  3825                           ; switch strategies available:
  3826                           ; Name         Instructions Cycles
  3827                           ; simple_byte           13     7 (average)
  3828                           ;	Chosen strategy is simple_byte
  3829  002756  0A01               	xorlw	1	; case 1
  3830  002758  B4D8               	btfsc	status,2,c
  3831  00275A  D7C7               	goto	l463
  3832  00275C  0A03               	xorlw	3	; case 2
  3833  00275E  B4D8               	btfsc	status,2,c
  3834  002760  D7CE               	goto	l465
  3835  002762  0A01               	xorlw	1	; case 3
  3836  002764  B4D8               	btfsc	status,2,c
  3837  002766  D7D9               	goto	l466
  3838  002768  0A07               	xorlw	7	; case 4
  3839  00276A  A4D8               	btfss	status,2,c
  3840  00276C  0012               	return	
  3841  00276E  D7E3               	goto	l467
  3842  002770                     __end_of_set_frame_format_filter:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           indf1	equ	0xFE7
  3854                           postdec1	equ	0xFE5
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           indf2	equ	0xFDF
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8
  3861                           
  3862 ;; *************** function _set_WAKE_from_pin *****************
  3863 ;; Defined at:
  3864 ;;		line 58 in file "zigbee.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:   10
  3885 ;; This function calls:
  3886 ;;		_write_ZIGBEE_short
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text12
  3893  00319A                     __ptext12:
  3894                           	opt stack 0
  3895  00319A                     _set_WAKE_from_pin:
  3896                           	opt stack 20
  3897                           
  3898                           ;zigbee.c: 59: PORTFbits.RF4=0;
  3899                           
  3900                           ;incstack = 0
  3901  00319A  9885               	bcf	3973,4,c	;volatile
  3902                           
  3903                           ;zigbee.c: 60: write_ZIGBEE_short(0x0D,0x60);
  3904  00319C  0E60               	movlw	96
  3905  00319E  0101               	movlb	1	; () banked
  3906  0031A0  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3907  0031A2  0E0D               	movlw	13
  3908  0031A4  EC13  F018         	call	_write_ZIGBEE_short
  3909                           
  3910                           ;zigbee.c: 61: write_ZIGBEE_short(0x22,0x80);
  3911  0031A8  0E80               	movlw	128
  3912  0031AA  0101               	movlb	1	; () banked
  3913  0031AC  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3914  0031AE  0E22               	movlw	34
  3915  0031B0  EC13  F018         	call	_write_ZIGBEE_short
  3916  0031B4  0012               	return		;funcret
  3917  0031B6                     __end_of_set_WAKE_from_pin:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           intcon	equ	0xFF2
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           indf1	equ	0xFE7
  3929                           postdec1	equ	0xFE5
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _set_TX_power *****************
  3938 ;; Defined at:
  3939 ;;		line 252 in file "zigbee.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  power           1    wreg     unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  power           1   10[BANK1 ] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:   10
  3960 ;; This function calls:
  3961 ;;		_write_ZIGBEE_long
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text13
  3968  002C5A                     __ptext13:
  3969                           	opt stack 0
  3970  002C5A                     _set_TX_power:
  3971                           	opt stack 20
  3972                           
  3973                           ;incstack = 0
  3974                           ;set_TX_power@power stored from wreg
  3975  002C5A  0101               	movlb	1	; () banked
  3976  002C5C  6F31               	movwf	set_TX_power@power& (0+255),b
  3977                           
  3978                           ;zigbee.c: 253: if((power < 0) || (power > 31))
  3979  002C5E  0E1F               	movlw	31
  3980  002C60  0101               	movlb	1	; () banked
  3981  002C62  6531               	cpfsgt	set_TX_power@power& (0+255),b
  3982  002C64  D002               	goto	l458
  3983                           
  3984                           ; BSR set to: 1
  3985                           ;zigbee.c: 254: power = 31;
  3986  002C66  0E1F               	movlw	31
  3987  002C68  6F31               	movwf	set_TX_power@power& (0+255),b
  3988  002C6A                     l458:
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;zigbee.c: 256: power = 31 - power;
  3992                           
  3993                           ; BSR set to: 1
  3994  002C6A  5131               	movf	set_TX_power@power& (0+255),w,b
  3995  002C6C  0800               	sublw	0
  3996  002C6E  0F1F               	addlw	31
  3997  002C70  6F31               	movwf	set_TX_power@power& (0+255),b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;zigbee.c: 257: power = ((power & 0b00011111) << 3) & 0b11111000;
  4001  002C72  C131  F130         	movff	set_TX_power@power,??_set_TX_power
  4002  002C76  0E1F               	movlw	31
  4003  002C78  1730               	andwf	??_set_TX_power& (0+255),f,b
  4004  002C7A  90D8               	bcf	status,0,c
  4005  002C7C  3730               	rlcf	??_set_TX_power& (0+255),f,b
  4006  002C7E  90D8               	bcf	status,0,c
  4007  002C80  3730               	rlcf	??_set_TX_power& (0+255),f,b
  4008  002C82  90D8               	bcf	status,0,c
  4009  002C84  3530               	rlcf	??_set_TX_power& (0+255),w,b
  4010  002C86  0BF8               	andlw	248
  4011  002C88  6F31               	movwf	set_TX_power@power& (0+255),b
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;zigbee.c: 258: write_ZIGBEE_long(0x203, power);
  4015  002C8A  0E02               	movlw	2
  4016  002C8C  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4017  002C8E  0E03               	movlw	3
  4018  002C90  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4019  002C92  C131  F12B         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  4020  002C96  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4021  002C9A  0012               	return		;funcret
  4022  002C9C                     __end_of_set_TX_power:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           indf1	equ	0xFE7
  4034                           postdec1	equ	0xFE5
  4035                           fsr1h	equ	0xFE2
  4036                           fsr1l	equ	0xFE1
  4037                           indf2	equ	0xFDF
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _set_PAN_ID *****************
  4043 ;; Defined at:
  4044 ;;		line 72 in file "zigbee.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  address         2    4[BANK1 ] PTR unsigned char 
  4047 ;;		 -> PAN_ID_2(2), 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:   10
  4066 ;; This function calls:
  4067 ;;		_write_ZIGBEE_short
  4068 ;; This function is called by:
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text14
  4074  002EE4                     __ptext14:
  4075                           	opt stack 0
  4076  002EE4                     _set_PAN_ID:
  4077                           	opt stack 20
  4078                           
  4079                           ;zigbee.c: 73: write_ZIGBEE_short(0x01, address[0]);
  4080                           
  4081                           ;incstack = 0
  4082  002EE4  C12B  FFD9         	movff	set_PAN_ID@address,fsr2l
  4083  002EE8  C12C  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  4084  002EEC  50DF               	movf	indf2,w,c
  4085  002EEE  0101               	movlb	1	; () banked
  4086  002EF0  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4087  002EF2  0E01               	movlw	1
  4088  002EF4  EC13  F018         	call	_write_ZIGBEE_short
  4089                           
  4090                           ;zigbee.c: 74: write_ZIGBEE_short(0x02, address[1]);
  4091  002EF8  0101               	movlb	1	; () banked
  4092  002EFA  EE20 F001          	lfsr	2,1
  4093  002EFE  512B               	movf	set_PAN_ID@address& (0+255),w,b
  4094  002F00  26D9               	addwf	fsr2l,f,c
  4095  002F02  512C               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  4096  002F04  22DA               	addwfc	fsr2h,f,c
  4097  002F06  50DF               	movf	indf2,w,c
  4098  002F08  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4099  002F0A  0E02               	movlw	2
  4100  002F0C  EC13  F018         	call	_write_ZIGBEE_short
  4101  002F10  0012               	return		;funcret
  4102  002F12                     __end_of_set_PAN_ID:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           intcon	equ	0xFF2
  4111                           postinc0	equ	0xFEE
  4112                           wreg	equ	0xFE8
  4113                           indf1	equ	0xFE7
  4114                           postdec1	equ	0xFE5
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _pin_reset *****************
  4123 ;; Defined at:
  4124 ;;		line 47 in file "zigbee.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    9
  4145 ;; This function calls:
  4146 ;;		_Delay_ms
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text15
  4153  0030DA                     __ptext15:
  4154                           	opt stack 0
  4155  0030DA                     _pin_reset:
  4156                           	opt stack 21
  4157                           
  4158                           ;zigbee.c: 48: PORTCbits.RC1=0;
  4159                           
  4160                           ;incstack = 0
  4161  0030DA  9282               	bcf	3970,1,c	;volatile
  4162                           
  4163                           ;zigbee.c: 49: Delay_ms(10);
  4164  0030DC  0E00               	movlw	0
  4165  0030DE  0101               	movlb	1	; () banked
  4166  0030E0  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4167  0030E2  0E0A               	movlw	10
  4168  0030E4  6F27               	movwf	Delay_ms@time& (0+255),b
  4169  0030E6  ECDB  F018         	call	_Delay_ms	;wreg free
  4170                           
  4171                           ;zigbee.c: 50: PORTCbits.RC1=1;
  4172  0030EA  8282               	bsf	3970,1,c	;volatile
  4173                           
  4174                           ;zigbee.c: 51: Delay_ms(10);
  4175  0030EC  0E00               	movlw	0
  4176  0030EE  0101               	movlb	1	; () banked
  4177  0030F0  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4178  0030F2  0E0A               	movlw	10
  4179  0030F4  6F27               	movwf	Delay_ms@time& (0+255),b
  4180  0030F6  ECDB  F018         	call	_Delay_ms	;wreg free
  4181  0030FA  0012               	return		;funcret
  4182  0030FC                     __end_of_pin_reset:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           indf1	equ	0xFE7
  4194                           postdec1	equ	0xFE5
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  4203 ;; Defined at:
  4204 ;;		line 236 in file "zigbee.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  temp            1    4[BANK1 ] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:        1 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:   10
  4225 ;; This function calls:
  4226 ;;		_write_ZIGBEE_short
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text16
  4233  002D9E                     __ptext16:
  4234                           	opt stack 0
  4235  002D9E                     _nonbeacon_PAN_coordinator_device:
  4236                           	opt stack 20
  4237                           
  4238                           ;zigbee.c: 237: unsigned char temp = 0;
  4239                           
  4240                           ;incstack = 0
  4241  002D9E  0E00               	movlw	0
  4242  002DA0  0101               	movlb	1	; () banked
  4243  002DA2  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4244                           
  4245                           ;zigbee.c: 239: temp=0;
  4246  002DA4  0E00               	movlw	0
  4247  002DA6  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4248                           
  4249                           ; BSR set to: 1
  4250                           ;zigbee.c: 240: temp = temp | 0x08;
  4251  002DA8  512B               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4252  002DAA  0908               	iorlw	8
  4253  002DAC  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;zigbee.c: 241: write_ZIGBEE_short(0x00, temp);
  4257  002DAE  C12B  F129         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4258  002DB2  0E00               	movlw	0
  4259  002DB4  EC13  F018         	call	_write_ZIGBEE_short
  4260                           
  4261                           ;zigbee.c: 243: temp=0;
  4262  002DB8  0E00               	movlw	0
  4263  002DBA  0101               	movlb	1	; () banked
  4264  002DBC  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4265                           
  4266                           ; BSR set to: 1
  4267                           ;zigbee.c: 244: temp = temp & 0xDF;
  4268  002DBE  512B               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4269  002DC0  0BDF               	andlw	223
  4270  002DC2  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4271                           
  4272                           ;zigbee.c: 245: write_ZIGBEE_short(0x11, temp);
  4273  002DC4  C12B  F129         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4274  002DC8  0E11               	movlw	17
  4275  002DCA  EC13  F018         	call	_write_ZIGBEE_short
  4276                           
  4277                           ;zigbee.c: 247: write_ZIGBEE_short(0x10, 0xFF);
  4278  002DCE  0EFF               	movlw	255
  4279  002DD0  0101               	movlb	1	; () banked
  4280  002DD2  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4281  002DD4  0E10               	movlw	16
  4282  002DD6  EC13  F018         	call	_write_ZIGBEE_short
  4283  002DDA  0012               	return		;funcret
  4284  002DDC                     __end_of_nonbeacon_PAN_coordinator_device:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           postinc0	equ	0xFEE
  4294                           wreg	equ	0xFE8
  4295                           indf1	equ	0xFE7
  4296                           postdec1	equ	0xFE5
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _lcd_off_cursor *****************
  4305 ;; Defined at:
  4306 ;;		line 409 in file "07_May_WaterMeter_Main.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   10
  4327 ;; This function calls:
  4328 ;;		_LcdCmd
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text17
  4335  0032FC                     __ptext17:
  4336                           	opt stack 0
  4337  0032FC                     _lcd_off_cursor:
  4338                           	opt stack 20
  4339                           
  4340                           ;07_May_WaterMeter_Main.c: 411: LcdCmd(0x0C);
  4341                           
  4342                           ;incstack = 0
  4343  0032FC  0E0C               	movlw	12
  4344  0032FE  EC9F  F018         	call	_LcdCmd
  4345  003302  0012               	return		;funcret
  4346  003304                     __end_of_lcd_off_cursor:
  4347                           	opt stack 0
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           prodh	equ	0xFF4
  4353                           prodl	equ	0xFF3
  4354                           intcon	equ	0xFF2
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           indf1	equ	0xFE7
  4358                           postdec1	equ	0xFE5
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  4367 ;; Defined at:
  4368 ;;		line 76 in file "zigbee.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:   12
  4389 ;; This function calls:
  4390 ;;		_RF_reset
  4391 ;;		_enable_interrupt
  4392 ;;		_init_ZIGBEE_basic
  4393 ;;		_pin_wake
  4394 ;;		_set_CCA_mode
  4395 ;;		_set_RSSI_mode
  4396 ;;		_set_channel
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text18
  4403  003002                     __ptext18:
  4404                           	opt stack 0
  4405  003002                     _init_ZIGBEE_nonbeacon:
  4406                           	opt stack 18
  4407                           
  4408                           ;zigbee.c: 77: init_ZIGBEE_basic();
  4409                           
  4410                           ;incstack = 0
  4411  003002  EC24  F013         	call	_init_ZIGBEE_basic	;wreg free
  4412                           
  4413                           ;zigbee.c: 78: set_CCA_mode(1);
  4414  003006  0E01               	movlw	1
  4415  003008  EC69  F012         	call	_set_CCA_mode
  4416                           
  4417                           ;zigbee.c: 79: set_RSSI_mode(2);
  4418  00300C  0E02               	movlw	2
  4419  00300E  EC4E  F016         	call	_set_RSSI_mode
  4420                           
  4421                           ;zigbee.c: 80: enable_interrupt();
  4422  003012  EC5E  F019         	call	_enable_interrupt	;wreg free
  4423                           
  4424                           ;zigbee.c: 81: set_channel(15);
  4425  003016  0E0F               	movlw	15
  4426  003018  EC0F  F00F         	call	_set_channel
  4427                           
  4428                           ;zigbee.c: 82: pin_wake();
  4429  00301C  EC33  F019         	call	_pin_wake	;wreg free
  4430                           
  4431                           ;zigbee.c: 83: RF_reset();
  4432  003020  ECB2  F017         	call	_RF_reset	;wreg free
  4433  003024  0012               	return		;funcret
  4434  003026                     __end_of_init_ZIGBEE_nonbeacon:
  4435                           	opt stack 0
  4436                           tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           prodh	equ	0xFF4
  4441                           prodl	equ	0xFF3
  4442                           intcon	equ	0xFF2
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           indf1	equ	0xFE7
  4446                           postdec1	equ	0xFE5
  4447                           fsr1h	equ	0xFE2
  4448                           fsr1l	equ	0xFE1
  4449                           indf2	equ	0xFDF
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _set_channel *****************
  4455 ;; Defined at:
  4456 ;;		line 172 in file "zigbee.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  channel_numb    1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  channel_numb    1    9[BANK1 ] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;Total ram usage:        1 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:   11
  4477 ;; This function calls:
  4478 ;;		_RF_reset
  4479 ;;		_write_ZIGBEE_long
  4480 ;; This function is called by:
  4481 ;;		_init_ZIGBEE_nonbeacon
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text19
  4486  001E1E                     __ptext19:
  4487                           	opt stack 0
  4488  001E1E                     _set_channel:
  4489                           	opt stack 18
  4490                           
  4491                           ;incstack = 0
  4492                           ;set_channel@channel_number stored from wreg
  4493  001E1E  0101               	movlb	1	; () banked
  4494  001E20  6F30               	movwf	set_channel@channel_number& (0+255),b
  4495                           
  4496                           ;zigbee.c: 174: if((channel_number > 26) || (channel_number < 11))
  4497  001E22  0E1B               	movlw	27
  4498  001E24  0101               	movlb	1	; () banked
  4499  001E26  6130               	cpfslt	set_channel@channel_number& (0+255),b
  4500  001E28  D003               	goto	u3540
  4501                           
  4502                           ; BSR set to: 1
  4503  001E2A  0E0B               	movlw	11
  4504  001E2C  6130               	cpfslt	set_channel@channel_number& (0+255),b
  4505  001E2E  D0A2               	goto	l431
  4506  001E30                     u3540:
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;zigbee.c: 175: channel_number = 11;
  4510                           
  4511                           ; BSR set to: 1
  4512  001E30  0E0B               	movlw	11
  4513  001E32  6F30               	movwf	set_channel@channel_number& (0+255),b
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;zigbee.c: 177: switch(channel_number)
  4517  001E34  D09F               	goto	l431
  4518  001E36                     
  4519                           ; BSR set to: 1
  4520                           ;zigbee.c: 180: write_ZIGBEE_long(0x200, 0x02);
  4521                           
  4522                           ; BSR set to: 1
  4523  001E36  0E02               	movlw	2
  4524  001E38  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4525  001E3A  0E00               	movlw	0
  4526  001E3C  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4527  001E3E  0E02               	movlw	2
  4528  001E40  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4529  001E42  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4530                           
  4531                           ;zigbee.c: 181: break;
  4532  001E46  D0C8               	goto	l433
  4533  001E48                     
  4534                           ;zigbee.c: 184: write_ZIGBEE_long(0x200, 0x12);
  4535  001E48  0E02               	movlw	2
  4536  001E4A  0101               	movlb	1	; () banked
  4537  001E4C  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4538  001E4E  0E00               	movlw	0
  4539  001E50  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4540  001E52  0E12               	movlw	18
  4541  001E54  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4542  001E56  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4543                           
  4544                           ;zigbee.c: 185: break;
  4545  001E5A  D0BE               	goto	l433
  4546  001E5C                     
  4547                           ;zigbee.c: 188: write_ZIGBEE_long(0x200, 0x22);
  4548  001E5C  0E02               	movlw	2
  4549  001E5E  0101               	movlb	1	; () banked
  4550  001E60  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4551  001E62  0E00               	movlw	0
  4552  001E64  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4553  001E66  0E22               	movlw	34
  4554  001E68  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4555  001E6A  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4556                           
  4557                           ;zigbee.c: 189: break;
  4558  001E6E  D0B4               	goto	l433
  4559  001E70                     
  4560                           ;zigbee.c: 191: write_ZIGBEE_long(0x200, 0x32);
  4561  001E70  0E02               	movlw	2
  4562  001E72  0101               	movlb	1	; () banked
  4563  001E74  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4564  001E76  0E00               	movlw	0
  4565  001E78  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4566  001E7A  0E32               	movlw	50
  4567  001E7C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4568  001E7E  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4569                           
  4570                           ;zigbee.c: 192: break;
  4571  001E82  D0AA               	goto	l433
  4572  001E84                     
  4573                           ;zigbee.c: 194: write_ZIGBEE_long(0x200, 0x42);
  4574  001E84  0E02               	movlw	2
  4575  001E86  0101               	movlb	1	; () banked
  4576  001E88  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4577  001E8A  0E00               	movlw	0
  4578  001E8C  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4579  001E8E  0E42               	movlw	66
  4580  001E90  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4581  001E92  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4582                           
  4583                           ;zigbee.c: 195: break;
  4584  001E96  D0A0               	goto	l433
  4585  001E98                     
  4586                           ;zigbee.c: 197: write_ZIGBEE_long(0x200, 0x52);
  4587  001E98  0E02               	movlw	2
  4588  001E9A  0101               	movlb	1	; () banked
  4589  001E9C  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4590  001E9E  0E00               	movlw	0
  4591  001EA0  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4592  001EA2  0E52               	movlw	82
  4593  001EA4  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4594  001EA6  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4595                           
  4596                           ;zigbee.c: 198: break;
  4597  001EAA  D096               	goto	l433
  4598  001EAC                     
  4599                           ;zigbee.c: 200: write_ZIGBEE_long(0x200, 0x62);
  4600  001EAC  0E02               	movlw	2
  4601  001EAE  0101               	movlb	1	; () banked
  4602  001EB0  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4603  001EB2  0E00               	movlw	0
  4604  001EB4  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4605  001EB6  0E62               	movlw	98
  4606  001EB8  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4607  001EBA  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4608                           
  4609                           ;zigbee.c: 201: break;
  4610  001EBE  D08C               	goto	l433
  4611  001EC0                     
  4612                           ;zigbee.c: 203: write_ZIGBEE_long(0x200, 0x72);
  4613  001EC0  0E02               	movlw	2
  4614  001EC2  0101               	movlb	1	; () banked
  4615  001EC4  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4616  001EC6  0E00               	movlw	0
  4617  001EC8  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4618  001ECA  0E72               	movlw	114
  4619  001ECC  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4620  001ECE  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4621                           
  4622                           ;zigbee.c: 204: break;
  4623  001ED2  D082               	goto	l433
  4624  001ED4                     
  4625                           ;zigbee.c: 206: write_ZIGBEE_long(0x200, 0x82);
  4626  001ED4  0E02               	movlw	2
  4627  001ED6  0101               	movlb	1	; () banked
  4628  001ED8  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4629  001EDA  0E00               	movlw	0
  4630  001EDC  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4631  001EDE  0E82               	movlw	130
  4632  001EE0  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4633  001EE2  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4634                           
  4635                           ;zigbee.c: 207: break;
  4636  001EE6  D078               	goto	l433
  4637  001EE8                     
  4638                           ;zigbee.c: 209: write_ZIGBEE_long(0x200, 0x92);
  4639  001EE8  0E02               	movlw	2
  4640  001EEA  0101               	movlb	1	; () banked
  4641  001EEC  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4642  001EEE  0E00               	movlw	0
  4643  001EF0  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4644  001EF2  0E92               	movlw	146
  4645  001EF4  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4646  001EF6  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4647                           
  4648                           ;zigbee.c: 210: break;
  4649  001EFA  D06E               	goto	l433
  4650  001EFC                     
  4651                           ;zigbee.c: 212: write_ZIGBEE_long(0x200, 0xA2);
  4652  001EFC  0E02               	movlw	2
  4653  001EFE  0101               	movlb	1	; () banked
  4654  001F00  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4655  001F02  0E00               	movlw	0
  4656  001F04  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4657  001F06  0EA2               	movlw	162
  4658  001F08  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4659  001F0A  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4660                           
  4661                           ;zigbee.c: 213: break;
  4662  001F0E  D064               	goto	l433
  4663  001F10                     
  4664                           ;zigbee.c: 215: write_ZIGBEE_long(0x200, 0xB2);
  4665  001F10  0E02               	movlw	2
  4666  001F12  0101               	movlb	1	; () banked
  4667  001F14  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4668  001F16  0E00               	movlw	0
  4669  001F18  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4670  001F1A  0EB2               	movlw	178
  4671  001F1C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4672  001F1E  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4673                           
  4674                           ;zigbee.c: 216: break;
  4675  001F22  D05A               	goto	l433
  4676  001F24                     
  4677                           ;zigbee.c: 218: write_ZIGBEE_long(0x200, 0xC2);
  4678  001F24  0E02               	movlw	2
  4679  001F26  0101               	movlb	1	; () banked
  4680  001F28  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4681  001F2A  0E00               	movlw	0
  4682  001F2C  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4683  001F2E  0EC2               	movlw	194
  4684  001F30  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4685  001F32  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4686                           
  4687                           ;zigbee.c: 219: break;
  4688  001F36  D050               	goto	l433
  4689  001F38                     
  4690                           ;zigbee.c: 221: write_ZIGBEE_long(0x200, 0xD2);
  4691  001F38  0E02               	movlw	2
  4692  001F3A  0101               	movlb	1	; () banked
  4693  001F3C  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4694  001F3E  0E00               	movlw	0
  4695  001F40  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4696  001F42  0ED2               	movlw	210
  4697  001F44  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4698  001F46  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4699                           
  4700                           ;zigbee.c: 222: break;
  4701  001F4A  D046               	goto	l433
  4702  001F4C                     
  4703                           ;zigbee.c: 224: write_ZIGBEE_long(0x200, 0xE2);
  4704  001F4C  0E02               	movlw	2
  4705  001F4E  0101               	movlb	1	; () banked
  4706  001F50  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4707  001F52  0E00               	movlw	0
  4708  001F54  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4709  001F56  0EE2               	movlw	226
  4710  001F58  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4711  001F5A  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4712                           
  4713                           ;zigbee.c: 225: break;
  4714  001F5E  D03C               	goto	l433
  4715  001F60                     
  4716                           ;zigbee.c: 227: write_ZIGBEE_long(0x200, 0xF2);
  4717  001F60  0E02               	movlw	2
  4718  001F62  0101               	movlb	1	; () banked
  4719  001F64  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4720  001F66  0E00               	movlw	0
  4721  001F68  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4722  001F6A  0EF2               	movlw	242
  4723  001F6C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4724  001F6E  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  4725                           
  4726                           ;zigbee.c: 229: }
  4727                           
  4728                           ;zigbee.c: 228: break;
  4729  001F72  D032               	goto	l433
  4730  001F74                     l431:
  4731  001F74  0101               	movlb	1	; () banked
  4732  001F76  5130               	movf	set_channel@channel_number& (0+255),w,b
  4733                           
  4734                           ; Switch size 1, requested type "space"
  4735                           ; Number of cases is 16, Range of values is 11 to 26
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte           49    25 (average)
  4739                           ;	Chosen strategy is simple_byte
  4740  001F78  0A0B               	xorlw	11	; case 11
  4741  001F7A  B4D8               	btfsc	status,2,c
  4742  001F7C  D75C               	goto	l432
  4743  001F7E  0A07               	xorlw	7	; case 12
  4744  001F80  B4D8               	btfsc	status,2,c
  4745  001F82  D762               	goto	l434
  4746  001F84  0A01               	xorlw	1	; case 13
  4747  001F86  B4D8               	btfsc	status,2,c
  4748  001F88  D769               	goto	l435
  4749  001F8A  0A03               	xorlw	3	; case 14
  4750  001F8C  B4D8               	btfsc	status,2,c
  4751  001F8E  D770               	goto	l436
  4752  001F90  0A01               	xorlw	1	; case 15
  4753  001F92  B4D8               	btfsc	status,2,c
  4754  001F94  D777               	goto	l437
  4755  001F96  0A1F               	xorlw	31	; case 16
  4756  001F98  B4D8               	btfsc	status,2,c
  4757  001F9A  D77E               	goto	l438
  4758  001F9C  0A01               	xorlw	1	; case 17
  4759  001F9E  B4D8               	btfsc	status,2,c
  4760  001FA0  D785               	goto	l439
  4761  001FA2  0A03               	xorlw	3	; case 18
  4762  001FA4  B4D8               	btfsc	status,2,c
  4763  001FA6  D78C               	goto	l440
  4764  001FA8  0A01               	xorlw	1	; case 19
  4765  001FAA  B4D8               	btfsc	status,2,c
  4766  001FAC  D793               	goto	l441
  4767  001FAE  0A07               	xorlw	7	; case 20
  4768  001FB0  B4D8               	btfsc	status,2,c
  4769  001FB2  D79A               	goto	l442
  4770  001FB4  0A01               	xorlw	1	; case 21
  4771  001FB6  B4D8               	btfsc	status,2,c
  4772  001FB8  D7A1               	goto	l443
  4773  001FBA  0A03               	xorlw	3	; case 22
  4774  001FBC  B4D8               	btfsc	status,2,c
  4775  001FBE  D7A8               	goto	l444
  4776  001FC0  0A01               	xorlw	1	; case 23
  4777  001FC2  B4D8               	btfsc	status,2,c
  4778  001FC4  D7AF               	goto	l445
  4779  001FC6  0A0F               	xorlw	15	; case 24
  4780  001FC8  B4D8               	btfsc	status,2,c
  4781  001FCA  D7B6               	goto	l446
  4782  001FCC  0A01               	xorlw	1	; case 25
  4783  001FCE  B4D8               	btfsc	status,2,c
  4784  001FD0  D7BD               	goto	l447
  4785  001FD2  0A03               	xorlw	3	; case 26
  4786  001FD4  B4D8               	btfsc	status,2,c
  4787  001FD6  D7C4               	goto	l448
  4788  001FD8                     l433:
  4789                           
  4790                           ;zigbee.c: 230: RF_reset();
  4791                           
  4792                           ; BSR set to: 1
  4793  001FD8  ECB2  F017         	call	_RF_reset	;wreg free
  4794  001FDC  0012               	return		;funcret
  4795  001FDE                     __end_of_set_channel:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           postdec1	equ	0xFE5
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           fsr2h	equ	0xFDA
  4812                           fsr2l	equ	0xFD9
  4813                           status	equ	0xFD8
  4814                           
  4815 ;; *************** function _RF_reset *****************
  4816 ;; Defined at:
  4817 ;;		line 53 in file "zigbee.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;Total ram usage:        0 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:   10
  4838 ;; This function calls:
  4839 ;;		_Delay_ms
  4840 ;;		_write_ZIGBEE_short
  4841 ;; This function is called by:
  4842 ;;		_init_ZIGBEE_nonbeacon
  4843 ;;		_set_channel
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text20
  4849  002F64                     __ptext20:
  4850                           	opt stack 0
  4851  002F64                     _RF_reset:
  4852                           	opt stack 18
  4853                           
  4854                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,0x04);
  4855                           
  4856                           ;incstack = 0
  4857  002F64  0E04               	movlw	4
  4858  002F66  0101               	movlb	1	; () banked
  4859  002F68  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4860  002F6A  0E36               	movlw	54
  4861  002F6C  EC13  F018         	call	_write_ZIGBEE_short
  4862                           
  4863                           ;zigbee.c: 55: write_ZIGBEE_short(0x36,(!0x04));
  4864  002F70  0E00               	movlw	0
  4865  002F72  0101               	movlb	1	; () banked
  4866  002F74  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4867  002F76  0E36               	movlw	54
  4868  002F78  EC13  F018         	call	_write_ZIGBEE_short
  4869                           
  4870                           ;zigbee.c: 56: Delay_ms(20);
  4871  002F7C  0E00               	movlw	0
  4872  002F7E  0101               	movlb	1	; () banked
  4873  002F80  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4874  002F82  0E14               	movlw	20
  4875  002F84  6F27               	movwf	Delay_ms@time& (0+255),b
  4876  002F86  ECDB  F018         	call	_Delay_ms	;wreg free
  4877  002F8A  0012               	return		;funcret
  4878  002F8C                     __end_of_RF_reset:
  4879                           	opt stack 0
  4880                           tblptru	equ	0xFF8
  4881                           tblptrh	equ	0xFF7
  4882                           tblptrl	equ	0xFF6
  4883                           tablat	equ	0xFF5
  4884                           prodh	equ	0xFF4
  4885                           prodl	equ	0xFF3
  4886                           intcon	equ	0xFF2
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           indf1	equ	0xFE7
  4890                           postdec1	equ	0xFE5
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           indf2	equ	0xFDF
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _set_RSSI_mode *****************
  4899 ;; Defined at:
  4900 ;;		line 150 in file "zigbee.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  RSSI_mode       1    wreg     unsigned char 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  RSSI_mode       1    4[BANK1 ] unsigned char 
  4905 ;;  temp            1    5[BANK1 ] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;Total ram usage:        2 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:   10
  4922 ;; This function calls:
  4923 ;;		_write_ZIGBEE_short
  4924 ;; This function is called by:
  4925 ;;		_init_ZIGBEE_nonbeacon
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text21
  4930  002C9C                     __ptext21:
  4931                           	opt stack 0
  4932  002C9C                     _set_RSSI_mode:
  4933                           	opt stack 19
  4934                           
  4935                           ;incstack = 0
  4936                           ;set_RSSI_mode@RSSI_mode stored from wreg
  4937  002C9C  0101               	movlb	1	; () banked
  4938  002C9E  6F2B               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  4939                           
  4940                           ;zigbee.c: 152: unsigned char temp = 0;
  4941  002CA0  0E00               	movlw	0
  4942  002CA2  0101               	movlb	1	; () banked
  4943  002CA4  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4944                           
  4945                           ;zigbee.c: 153: switch(RSSI_mode)
  4946  002CA6  D012               	goto	l418
  4947  002CA8                     
  4948                           ; BSR set to: 1
  4949                           ;zigbee.c: 156: {
  4950                           ;zigbee.c: 157: temp=0;
  4951                           
  4952                           ; BSR set to: 1
  4953  002CA8  0E00               	movlw	0
  4954  002CAA  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4955                           
  4956                           ; BSR set to: 1
  4957                           ;zigbee.c: 158: temp = temp | 0x80;
  4958  002CAC  512C               	movf	set_RSSI_mode@temp& (0+255),w,b
  4959  002CAE  0980               	iorlw	128
  4960  002CB0  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4961                           
  4962                           ; BSR set to: 1
  4963                           ;zigbee.c: 159: write_ZIGBEE_short(0x3E, temp);
  4964  002CB2  C12C  F129         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  4965  002CB6  0E3E               	movlw	62
  4966  002CB8  EC13  F018         	call	_write_ZIGBEE_short
  4967                           
  4968                           ;zigbee.c: 160: }
  4969                           ;zigbee.c: 161: break;
  4970  002CBC  0012               	return	
  4971  002CBE                     
  4972                           ;zigbee.c: 164: write_ZIGBEE_short(0x3E, 0x40);
  4973  002CBE  0E40               	movlw	64
  4974  002CC0  0101               	movlb	1	; () banked
  4975  002CC2  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4976  002CC4  0E3E               	movlw	62
  4977  002CC6  EC13  F018         	call	_write_ZIGBEE_short
  4978                           
  4979                           ;zigbee.c: 166: }
  4980                           
  4981                           ;zigbee.c: 165: break;
  4982  002CCA  0012               	return	
  4983  002CCC                     l418:
  4984  002CCC  0101               	movlb	1	; () banked
  4985  002CCE  512B               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  4986                           
  4987                           ; Switch size 1, requested type "space"
  4988                           ; Number of cases is 2, Range of values is 1 to 2
  4989                           ; switch strategies available:
  4990                           ; Name         Instructions Cycles
  4991                           ; simple_byte            7     4 (average)
  4992                           ;	Chosen strategy is simple_byte
  4993  002CD0  0A01               	xorlw	1	; case 1
  4994  002CD2  B4D8               	btfsc	status,2,c
  4995  002CD4  D7E9               	goto	l419
  4996  002CD6  0A03               	xorlw	3	; case 2
  4997  002CD8  A4D8               	btfss	status,2,c
  4998  002CDA  0012               	return	
  4999  002CDC  D7F0               	goto	l421
  5000  002CDE                     __end_of_set_RSSI_mode:
  5001                           	opt stack 0
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           indf1	equ	0xFE7
  5012                           postdec1	equ	0xFE5
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           indf2	equ	0xFDF
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _set_CCA_mode *****************
  5021 ;; Defined at:
  5022 ;;		line 103 in file "zigbee.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  CCA_mode        1    wreg     unsigned char 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  CCA_mode        1    4[BANK1 ] unsigned char 
  5027 ;;  temp            1    5[BANK1 ] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:        2 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:   10
  5044 ;; This function calls:
  5045 ;;		_write_ZIGBEE_short
  5046 ;; This function is called by:
  5047 ;;		_init_ZIGBEE_nonbeacon
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text22
  5052  0024D2                     __ptext22:
  5053                           	opt stack 0
  5054  0024D2                     _set_CCA_mode:
  5055                           	opt stack 19
  5056                           
  5057                           ;incstack = 0
  5058                           ;set_CCA_mode@CCA_mode stored from wreg
  5059  0024D2  0101               	movlb	1	; () banked
  5060  0024D4  6F2B               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  5061                           
  5062                           ;zigbee.c: 105: unsigned char temp = 0;
  5063  0024D6  0E00               	movlw	0
  5064  0024D8  0101               	movlb	1	; () banked
  5065  0024DA  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5066                           
  5067                           ;zigbee.c: 106: switch(CCA_mode)
  5068  0024DC  D051               	goto	l410
  5069  0024DE                     
  5070                           ; BSR set to: 1
  5071                           ;zigbee.c: 109: {
  5072                           ;zigbee.c: 110: temp=0;
  5073                           
  5074                           ; BSR set to: 1
  5075  0024DE  0E00               	movlw	0
  5076  0024E0  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5077                           
  5078                           ; BSR set to: 1
  5079                           ;zigbee.c: 111: temp = temp | 0x80;
  5080  0024E2  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5081  0024E4  0980               	iorlw	128
  5082  0024E6  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5083                           
  5084                           ; BSR set to: 1
  5085                           ;zigbee.c: 112: temp = temp & 0xDF;
  5086  0024E8  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5087  0024EA  0BDF               	andlw	223
  5088  0024EC  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5089                           
  5090                           ; BSR set to: 1
  5091                           ;zigbee.c: 113: write_ZIGBEE_short(0x3A, temp);
  5092  0024EE  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5093  0024F2  0E3A               	movlw	58
  5094  0024F4  EC13  F018         	call	_write_ZIGBEE_short
  5095                           
  5096                           ;zigbee.c: 114: write_ZIGBEE_short(0x3F, 0x60);
  5097  0024F8  0E60               	movlw	96
  5098  0024FA  0101               	movlb	1	; () banked
  5099  0024FC  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5100  0024FE  0E3F               	movlw	63
  5101  002500  EC13  F018         	call	_write_ZIGBEE_short
  5102                           
  5103                           ;zigbee.c: 115: }
  5104                           ;zigbee.c: 116: break;
  5105  002504  0012               	return	
  5106  002506                     
  5107                           ;zigbee.c: 119: {
  5108                           ;zigbee.c: 120: temp=0;
  5109  002506  0E00               	movlw	0
  5110  002508  0101               	movlb	1	; () banked
  5111  00250A  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5112                           
  5113                           ; BSR set to: 1
  5114                           ;zigbee.c: 121: temp = temp | 0x40;
  5115  00250C  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5116  00250E  0940               	iorlw	64
  5117  002510  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5118                           
  5119                           ; BSR set to: 1
  5120                           ;zigbee.c: 122: temp = temp & 0x7F;
  5121  002512  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5122  002514  0B7F               	andlw	127
  5123  002516  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5124                           
  5125                           ; BSR set to: 1
  5126                           ;zigbee.c: 123: write_ZIGBEE_short(0x3A, temp);
  5127  002518  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5128  00251C  0E3A               	movlw	58
  5129  00251E  EC13  F018         	call	_write_ZIGBEE_short
  5130                           
  5131                           ;zigbee.c: 125: temp=0;
  5132  002522  0E00               	movlw	0
  5133  002524  0101               	movlb	1	; () banked
  5134  002526  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5135                           
  5136                           ; BSR set to: 1
  5137                           ;zigbee.c: 126: temp = temp | 0x38;
  5138  002528  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5139  00252A  0938               	iorlw	56
  5140  00252C  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5141                           
  5142                           ; BSR set to: 1
  5143                           ;zigbee.c: 127: temp = temp & 0xFB;
  5144  00252E  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5145  002530  0BFB               	andlw	251
  5146  002532  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5147                           
  5148                           ;zigbee.c: 128: write_ZIGBEE_short(0x3A, temp);
  5149  002534  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5150  002538  0E3A               	movlw	58
  5151  00253A  EC13  F018         	call	_write_ZIGBEE_short
  5152                           
  5153                           ;zigbee.c: 129: }
  5154                           ;zigbee.c: 130: break;
  5155  00253E  0012               	return	
  5156  002540                     
  5157                           ;zigbee.c: 133: {
  5158                           ;zigbee.c: 134: temp=0;
  5159  002540  0E00               	movlw	0
  5160  002542  0101               	movlb	1	; () banked
  5161  002544  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5162                           
  5163                           ; BSR set to: 1
  5164                           ;zigbee.c: 135: temp = temp | 0xC0;
  5165  002546  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5166  002548  09C0               	iorlw	192
  5167  00254A  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5168                           
  5169                           ; BSR set to: 1
  5170                           ;zigbee.c: 136: write_ZIGBEE_short(0x3A, temp);
  5171  00254C  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5172  002550  0E3A               	movlw	58
  5173  002552  EC13  F018         	call	_write_ZIGBEE_short
  5174                           
  5175                           ;zigbee.c: 138: temp=0;
  5176  002556  0E00               	movlw	0
  5177  002558  0101               	movlb	1	; () banked
  5178  00255A  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;zigbee.c: 139: temp = temp | 0x38;
  5182  00255C  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5183  00255E  0938               	iorlw	56
  5184  002560  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5185                           
  5186                           ; BSR set to: 1
  5187                           ;zigbee.c: 140: temp = temp & 0xFB;
  5188  002562  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5189  002564  0BFB               	andlw	251
  5190  002566  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5191                           
  5192                           ; BSR set to: 1
  5193                           ;zigbee.c: 141: write_ZIGBEE_short(0x3A, temp);
  5194  002568  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5195  00256C  0E3A               	movlw	58
  5196  00256E  EC13  F018         	call	_write_ZIGBEE_short
  5197                           
  5198                           ;zigbee.c: 143: write_ZIGBEE_short(0x3F, 0x60);
  5199  002572  0E60               	movlw	96
  5200  002574  0101               	movlb	1	; () banked
  5201  002576  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5202  002578  0E3F               	movlw	63
  5203  00257A  EC13  F018         	call	_write_ZIGBEE_short
  5204                           
  5205                           ;zigbee.c: 146: }
  5206                           
  5207                           ;zigbee.c: 144: }
  5208                           ;zigbee.c: 145: break;
  5209  00257E  0012               	return	
  5210  002580                     l410:
  5211  002580  0101               	movlb	1	; () banked
  5212  002582  512B               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  5213                           
  5214                           ; Switch size 1, requested type "space"
  5215                           ; Number of cases is 3, Range of values is 1 to 3
  5216                           ; switch strategies available:
  5217                           ; Name         Instructions Cycles
  5218                           ; simple_byte           10     6 (average)
  5219                           ;	Chosen strategy is simple_byte
  5220  002584  0A01               	xorlw	1	; case 1
  5221  002586  B4D8               	btfsc	status,2,c
  5222  002588  D7AA               	goto	l411
  5223  00258A  0A03               	xorlw	3	; case 2
  5224  00258C  B4D8               	btfsc	status,2,c
  5225  00258E  D7BB               	goto	l413
  5226  002590  0A01               	xorlw	1	; case 3
  5227  002592  A4D8               	btfss	status,2,c
  5228  002594  0012               	return	
  5229  002596  D7D4               	goto	l414
  5230  002598                     __end_of_set_CCA_mode:
  5231                           	opt stack 0
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           intcon	equ	0xFF2
  5239                           postinc0	equ	0xFEE
  5240                           wreg	equ	0xFE8
  5241                           indf1	equ	0xFE7
  5242                           postdec1	equ	0xFE5
  5243                           fsr1h	equ	0xFE2
  5244                           fsr1l	equ	0xFE1
  5245                           indf2	equ	0xFDF
  5246                           fsr2h	equ	0xFDA
  5247                           fsr2l	equ	0xFD9
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _pin_wake *****************
  5251 ;; Defined at:
  5252 ;;		line 232 in file "zigbee.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    9
  5273 ;; This function calls:
  5274 ;;		_Delay_ms
  5275 ;; This function is called by:
  5276 ;;		_init_ZIGBEE_nonbeacon
  5277 ;;		_main
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text23
  5282  003266                     __ptext23:
  5283                           	opt stack 0
  5284  003266                     _pin_wake:
  5285                           	opt stack 21
  5286                           
  5287                           ;zigbee.c: 233: PORTFbits.RF4=1;
  5288                           
  5289                           ;incstack = 0
  5290  003266  8885               	bsf	3973,4,c	;volatile
  5291                           
  5292                           ;zigbee.c: 234: Delay_ms(10);
  5293  003268  0E00               	movlw	0
  5294  00326A  0101               	movlb	1	; () banked
  5295  00326C  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  5296  00326E  0E0A               	movlw	10
  5297  003270  6F27               	movwf	Delay_ms@time& (0+255),b
  5298  003272  ECDB  F018         	call	_Delay_ms	;wreg free
  5299  003276  0012               	return		;funcret
  5300  003278                     __end_of_pin_wake:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           indf1	equ	0xFE7
  5312                           postdec1	equ	0xFE5
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function _Delay_ms *****************
  5321 ;; Defined at:
  5322 ;;		line 476 in file "zigbee.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  time            2    0[BANK1 ] unsigned int 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  y               2    2[BANK1 ] unsigned int 
  5327 ;;  x               2    0        unsigned int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5337 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;Total ram usage:        4 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    8
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_pin_reset
  5348 ;;		_RF_reset
  5349 ;;		_pin_wake
  5350 ;;		_write_TX_normal_FIFO
  5351 ;;		_main
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text24
  5356  0031B6                     __ptext24:
  5357                           	opt stack 0
  5358  0031B6                     _Delay_ms:
  5359                           	opt stack 21
  5360                           
  5361                           ;zigbee.c: 477: unsigned int x,y=0;
  5362                           
  5363                           ;incstack = 0
  5364  0031B6  0E00               	movlw	0
  5365  0031B8  0101               	movlb	1	; () banked
  5366  0031BA  6F2A               	movwf	(Delay_ms@y+1)& (0+255),b
  5367  0031BC  0E00               	movlw	0
  5368  0031BE  6F29               	movwf	Delay_ms@y& (0+255),b
  5369  0031C0                     
  5370                           ; BSR set to: 1
  5371                           
  5372                           ; BSR set to: 1
  5373                           
  5374                           ; BSR set to: 1
  5375  0031C0  4B27               	infsnz	Delay_ms@time& (0+255),f,b
  5376  0031C2  2B28               	incf	(Delay_ms@time+1)& (0+255),f,b
  5377  0031C4  0E10               	movlw	16
  5378  0031C6  5D27               	subwf	Delay_ms@time& (0+255),w,b
  5379  0031C8  0E27               	movlw	39
  5380  0031CA  5928               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  5381  0031CC  B0D8               	btfsc	status,0,c
  5382  0031CE  0012               	return	
  5383  0031D0  D7F7               	goto	l532
  5384  0031D2                     __end_of_Delay_ms:
  5385                           	opt stack 0
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           prodh	equ	0xFF4
  5391                           prodl	equ	0xFF3
  5392                           intcon	equ	0xFF2
  5393                           postinc0	equ	0xFEE
  5394                           wreg	equ	0xFE8
  5395                           indf1	equ	0xFE7
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function _init_ZIGBEE_basic *****************
  5405 ;; Defined at:
  5406 ;;		line 86 in file "zigbee.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:   11
  5427 ;; This function calls:
  5428 ;;		_enable_PLL
  5429 ;;		_write_ZIGBEE_long
  5430 ;;		_write_ZIGBEE_short
  5431 ;; This function is called by:
  5432 ;;		_init_ZIGBEE_nonbeacon
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text25
  5437  002648                     __ptext25:
  5438                           	opt stack 0
  5439  002648                     _init_ZIGBEE_basic:
  5440                           	opt stack 18
  5441                           
  5442                           ;zigbee.c: 87: write_ZIGBEE_short(0x18, 0x98);
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;incstack = 0
  5446  002648  0E98               	movlw	152
  5447  00264A  0101               	movlb	1	; () banked
  5448  00264C  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5449  00264E  0E18               	movlw	24
  5450  002650  EC13  F018         	call	_write_ZIGBEE_short
  5451                           
  5452                           ;zigbee.c: 88: write_ZIGBEE_short(0x2E, 0x95);
  5453  002654  0E95               	movlw	149
  5454  002656  0101               	movlb	1	; () banked
  5455  002658  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5456  00265A  0E2E               	movlw	46
  5457  00265C  EC13  F018         	call	_write_ZIGBEE_short
  5458                           
  5459                           ;zigbee.c: 89: write_ZIGBEE_long(0x201, 0x01);
  5460  002660  0E02               	movlw	2
  5461  002662  0101               	movlb	1	; () banked
  5462  002664  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5463  002666  0E01               	movlw	1
  5464  002668  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5465  00266A  0E01               	movlw	1
  5466  00266C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5467  00266E  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5468                           
  5469                           ;zigbee.c: 90: enable_PLL();
  5470  002672  EC16  F019         	call	_enable_PLL	;wreg free
  5471                           
  5472                           ;zigbee.c: 91: write_ZIGBEE_long(0x206, 0x90);
  5473  002676  0E02               	movlw	2
  5474  002678  0101               	movlb	1	; () banked
  5475  00267A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5476  00267C  0E06               	movlw	6
  5477  00267E  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5478  002680  0E90               	movlw	144
  5479  002682  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5480  002684  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5481                           
  5482                           ;zigbee.c: 92: write_ZIGBEE_long(0x207, 0x80);
  5483  002688  0E02               	movlw	2
  5484  00268A  0101               	movlb	1	; () banked
  5485  00268C  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5486  00268E  0E07               	movlw	7
  5487  002690  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5488  002692  0E80               	movlw	128
  5489  002694  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5490  002696  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5491                           
  5492                           ;zigbee.c: 93: write_ZIGBEE_long(0x208, 0x10);
  5493  00269A  0E02               	movlw	2
  5494  00269C  0101               	movlb	1	; () banked
  5495  00269E  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5496  0026A0  0E08               	movlw	8
  5497  0026A2  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5498  0026A4  0E10               	movlw	16
  5499  0026A6  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5500  0026A8  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5501                           
  5502                           ;zigbee.c: 94: write_ZIGBEE_short(0x211,0X02);
  5503  0026AC  0E02               	movlw	2
  5504  0026AE  0101               	movlb	1	; () banked
  5505  0026B0  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5506  0026B2  0E11               	movlw	17
  5507  0026B4  EC13  F018         	call	_write_ZIGBEE_short
  5508                           
  5509                           ;zigbee.c: 95: write_ZIGBEE_long(0x220, 0x21);
  5510  0026B8  0E02               	movlw	2
  5511  0026BA  0101               	movlb	1	; () banked
  5512  0026BC  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5513  0026BE  0E20               	movlw	32
  5514  0026C0  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5515  0026C2  0E21               	movlw	33
  5516  0026C4  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5517  0026C6  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5518                           
  5519                           ;zigbee.c: 96: write_ZIGBEE_long(0x22F, 0x0F);
  5520  0026CA  0E02               	movlw	2
  5521  0026CC  0101               	movlb	1	; () banked
  5522  0026CE  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5523  0026D0  0E2F               	movlw	47
  5524  0026D2  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5525  0026D4  0E0F               	movlw	15
  5526  0026D6  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5527  0026D8  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5528  0026DC  0012               	return		;funcret
  5529  0026DE                     __end_of_init_ZIGBEE_basic:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           prodh	equ	0xFF4
  5536                           prodl	equ	0xFF3
  5537                           intcon	equ	0xFF2
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           indf1	equ	0xFE7
  5541                           postdec1	equ	0xFE5
  5542                           fsr1h	equ	0xFE2
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           fsr2h	equ	0xFDA
  5546                           fsr2l	equ	0xFD9
  5547                           status	equ	0xFD8
  5548                           
  5549 ;; *************** function _enable_PLL *****************
  5550 ;; Defined at:
  5551 ;;		line 100 in file "zigbee.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:   10
  5572 ;; This function calls:
  5573 ;;		_write_ZIGBEE_long
  5574 ;; This function is called by:
  5575 ;;		_init_ZIGBEE_basic
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text26
  5580  00322C                     __ptext26:
  5581                           	opt stack 0
  5582  00322C                     _enable_PLL:
  5583                           	opt stack 18
  5584                           
  5585                           ;zigbee.c: 101: write_ZIGBEE_long(0x202, 0x80);
  5586                           
  5587                           ;incstack = 0
  5588  00322C  0E02               	movlw	2
  5589  00322E  0101               	movlb	1	; () banked
  5590  003230  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5591  003232  0E02               	movlw	2
  5592  003234  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5593  003236  0E80               	movlw	128
  5594  003238  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5595  00323A  ECD4  F014         	call	_write_ZIGBEE_long	;wreg free
  5596  00323E  0012               	return		;funcret
  5597  003240                     __end_of_enable_PLL:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postdec1	equ	0xFE5
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8
  5616                           
  5617 ;; *************** function _write_ZIGBEE_long *****************
  5618 ;; Defined at:
  5619 ;;		line 415 in file "zigbee.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  address         2    2[BANK1 ] unsigned int 
  5622 ;;  data_r          1    4[BANK1 ] unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  address_low     1    8[BANK1 ] unsigned char 
  5625 ;;  address_high    1    7[BANK1 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5635 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;Total ram usage:        7 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    9
  5642 ;; This function calls:
  5643 ;;		_SPI_Write
  5644 ;; This function is called by:
  5645 ;;		_init_ZIGBEE_basic
  5646 ;;		_enable_PLL
  5647 ;;		_set_channel
  5648 ;;		_set_TX_power
  5649 ;;		_write_TX_normal_FIFO
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text27
  5654  0029A8                     __ptext27:
  5655                           	opt stack 0
  5656  0029A8                     _write_ZIGBEE_long:
  5657                           	opt stack 20
  5658                           
  5659                           ;zigbee.c: 416: unsigned char address_high = 0, address_low = 0;
  5660                           
  5661                           ;incstack = 0
  5662  0029A8  0E00               	movlw	0
  5663  0029AA  0101               	movlb	1	; () banked
  5664  0029AC  6F2E               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5665  0029AE  0E00               	movlw	0
  5666  0029B0  6F2F               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5667                           
  5668                           ; BSR set to: 1
  5669                           ;zigbee.c: 418: PORTCbits.RC0=0;
  5670  0029B2  9082               	bcf	3970,0,c	;volatile
  5671                           
  5672                           ; BSR set to: 1
  5673                           ;zigbee.c: 419: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  5674  0029B4  C129  F12C         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  5675  0029B8  C12A  F12D         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  5676  0029BC  90D8               	bcf	status,0,c
  5677  0029BE  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5678  0029C0  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5679  0029C2  90D8               	bcf	status,0,c
  5680  0029C4  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5681  0029C6  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5682  0029C8  90D8               	bcf	status,0,c
  5683  0029CA  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5684  0029CC  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5685  0029CE  512C               	movf	??_write_ZIGBEE_long& (0+255),w,b
  5686  0029D0  0B7F               	andlw	127
  5687  0029D2  0980               	iorlw	128
  5688  0029D4  6F2E               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;zigbee.c: 420: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  5692  0029D6  3929               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  5693  0029D8  46E8               	rlncf	wreg,f,c
  5694  0029DA  0BE0               	andlw	224
  5695  0029DC  0BE0               	andlw	224
  5696  0029DE  0910               	iorlw	16
  5697  0029E0  6F2F               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5698                           
  5699                           ; BSR set to: 1
  5700                           ;zigbee.c: 421: SPI_Write(address_high);
  5701  0029E2  512E               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  5702  0029E4  EC3C  F019         	call	_SPI_Write
  5703                           
  5704                           ;zigbee.c: 422: SPI_Write(address_low);
  5705  0029E8  0101               	movlb	1	; () banked
  5706  0029EA  512F               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  5707  0029EC  EC3C  F019         	call	_SPI_Write
  5708                           
  5709                           ;zigbee.c: 423: SPI_Write(data_r);
  5710  0029F0  0101               	movlb	1	; () banked
  5711  0029F2  512B               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  5712  0029F4  EC3C  F019         	call	_SPI_Write
  5713                           
  5714                           ;zigbee.c: 424: PORTCbits.RC0=1;
  5715  0029F8  8082               	bsf	3970,0,c	;volatile
  5716  0029FA  0012               	return		;funcret
  5717  0029FC                     __end_of_write_ZIGBEE_long:
  5718                           	opt stack 0
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           postinc0	equ	0xFEE
  5727                           wreg	equ	0xFE8
  5728                           indf1	equ	0xFE7
  5729                           postdec1	equ	0xFE5
  5730                           fsr1h	equ	0xFE2
  5731                           fsr1l	equ	0xFE1
  5732                           indf2	equ	0xFDF
  5733                           fsr2h	equ	0xFDA
  5734                           fsr2l	equ	0xFD9
  5735                           status	equ	0xFD8
  5736                           
  5737 ;; *************** function _enable_interrupt *****************
  5738 ;; Defined at:
  5739 ;;		line 168 in file "zigbee.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      void 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;Total ram usage:        0 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:   10
  5760 ;; This function calls:
  5761 ;;		_write_ZIGBEE_short
  5762 ;; This function is called by:
  5763 ;;		_init_ZIGBEE_nonbeacon
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text28
  5768  0032BC                     __ptext28:
  5769                           	opt stack 0
  5770  0032BC                     _enable_interrupt:
  5771                           	opt stack 19
  5772                           
  5773                           ;zigbee.c: 169: write_ZIGBEE_short(0x32, 0xF7);
  5774                           
  5775                           ;incstack = 0
  5776  0032BC  0EF7               	movlw	247
  5777  0032BE  0101               	movlb	1	; () banked
  5778  0032C0  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5779  0032C2  0E32               	movlw	50
  5780  0032C4  EC13  F018         	call	_write_ZIGBEE_short
  5781  0032C8  0012               	return		;funcret
  5782  0032CA                     __end_of_enable_interrupt:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           postinc0	equ	0xFEE
  5792                           wreg	equ	0xFE8
  5793                           indf1	equ	0xFE7
  5794                           postdec1	equ	0xFE5
  5795                           fsr1h	equ	0xFE2
  5796                           fsr1l	equ	0xFE1
  5797                           indf2	equ	0xFDF
  5798                           fsr2h	equ	0xFDA
  5799                           fsr2l	equ	0xFD9
  5800                           status	equ	0xFD8
  5801                           
  5802 ;; *************** function _write_ZIGBEE_short *****************
  5803 ;; Defined at:
  5804 ;;		line 397 in file "zigbee.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  address         1    wreg     unsigned char 
  5807 ;;  data_r          1    2[BANK1 ] unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  address         1    3[BANK1 ] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:        2 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    9
  5826 ;; This function calls:
  5827 ;;		_SPI_Write
  5828 ;; This function is called by:
  5829 ;;		_RF_reset
  5830 ;;		_set_WAKE_from_pin
  5831 ;;		_set_long_address
  5832 ;;		_set_short_address
  5833 ;;		_set_PAN_ID
  5834 ;;		_init_ZIGBEE_basic
  5835 ;;		_set_CCA_mode
  5836 ;;		_set_RSSI_mode
  5837 ;;		_enable_interrupt
  5838 ;;		_nonbeacon_PAN_coordinator_device
  5839 ;;		_set_frame_format_filter
  5840 ;;		_set_reception_mode
  5841 ;;		_set_not_ACK
  5842 ;;		_set_not_encrypt
  5843 ;;		_start_transmit
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text29
  5848  003026                     __ptext29:
  5849                           	opt stack 0
  5850  003026                     _write_ZIGBEE_short:
  5851                           	opt stack 19
  5852                           
  5853                           ;incstack = 0
  5854                           ;write_ZIGBEE_short@address stored from wreg
  5855  003026  0101               	movlb	1	; () banked
  5856  003028  6F2A               	movwf	write_ZIGBEE_short@address& (0+255),b
  5857                           
  5858                           ;zigbee.c: 398: PORTCbits.RC0=0;
  5859  00302A  9082               	bcf	3970,0,c	;volatile
  5860                           
  5861                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
  5862  00302C  0101               	movlb	1	; () banked
  5863  00302E  512A               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5864  003030  252A               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  5865  003032  0B7F               	andlw	127
  5866  003034  0901               	iorlw	1
  5867  003036  6F2A               	movwf	write_ZIGBEE_short@address& (0+255),b
  5868                           
  5869                           ; BSR set to: 1
  5870                           ;zigbee.c: 400: SPI_Write(address);
  5871  003038  512A               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5872  00303A  EC3C  F019         	call	_SPI_Write
  5873                           
  5874                           ;zigbee.c: 401: SPI_Write(data_r);
  5875  00303E  0101               	movlb	1	; () banked
  5876  003040  5129               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  5877  003042  EC3C  F019         	call	_SPI_Write
  5878                           
  5879                           ;zigbee.c: 402: PORTCbits.RC0=1;
  5880  003046  8082               	bsf	3970,0,c	;volatile
  5881  003048  0012               	return		;funcret
  5882  00304A                     __end_of_write_ZIGBEE_short:
  5883                           	opt stack 0
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           prodh	equ	0xFF4
  5889                           prodl	equ	0xFF3
  5890                           intcon	equ	0xFF2
  5891                           postinc0	equ	0xFEE
  5892                           wreg	equ	0xFE8
  5893                           indf1	equ	0xFE7
  5894                           postdec1	equ	0xFE5
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _SPI_Write *****************
  5903 ;; Defined at:
  5904 ;;		line 458 in file "zigbee.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  command         1    wreg     unsigned char 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  command         1    1[BANK1 ] unsigned char 
  5909 ;;  response        1    0[BANK1 ] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;Total ram usage:        2 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    8
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_write_ZIGBEE_short
  5930 ;;		_read_ZIGBEE_short
  5931 ;;		_write_ZIGBEE_long
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text30
  5936  003278                     __ptext30:
  5937                           	opt stack 0
  5938  003278                     _SPI_Write:
  5939                           	opt stack 20
  5940                           
  5941                           ;incstack = 0
  5942                           ;SPI_Write@command stored from wreg
  5943  003278  0101               	movlb	1	; () banked
  5944  00327A  6F28               	movwf	SPI_Write@command& (0+255),b
  5945                           
  5946                           ;zigbee.c: 459: unsigned char response;
  5947                           ;zigbee.c: 460: SSP1BUF = command;
  5948  00327C  C128  FFC9         	movff	SPI_Write@command,4041	;volatile
  5949  003280  A0C7               	btfss	4039,0,c	;volatile
  5950  003282  D7FE               	goto	l514
  5951                           
  5952                           ;zigbee.c: 462: response = SSP1BUF;
  5953  003284  CFC9 F127          	movff	4041,SPI_Write@response	;volatile
  5954  003288  0012               	return		;funcret
  5955  00328A                     __end_of_SPI_Write:
  5956                           	opt stack 0
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           intcon	equ	0xFF2
  5964                           postinc0	equ	0xFEE
  5965                           wreg	equ	0xFE8
  5966                           indf1	equ	0xFE7
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function ___lwmod *****************
  5976 ;; Defined at:
  5977 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  dividend        2    0[BANK1 ] unsigned int 
  5980 ;;  divisor         2    2[BANK1 ] unsigned int 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  counter         1    4[BANK1 ] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  2    0[BANK1 ] unsigned int 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5992 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;Total ram usage:        5 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    8
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_main
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text31
  6007  002B90                     __ptext31:
  6008                           	opt stack 0
  6009  002B90                     ___lwmod:
  6010                           	opt stack 22
  6011                           
  6012                           ;incstack = 0
  6013  002B90  0101               	movlb	1	; () banked
  6014  002B92  5129               	movf	___lwmod@divisor& (0+255),w,b
  6015  002B94  112A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6016  002B96  B4D8               	btfsc	status,2,c
  6017  002B98  D018               	goto	l1438
  6018                           
  6019                           ; BSR set to: 1
  6020  002B9A  0E01               	movlw	1
  6021  002B9C  6F2B               	movwf	___lwmod@counter& (0+255),b
  6022  002B9E  D004               	goto	l1433
  6023  002BA0                     
  6024                           ; BSR set to: 1
  6025                           
  6026                           ; BSR set to: 1
  6027  002BA0  90D8               	bcf	status,0,c
  6028  002BA2  3729               	rlcf	___lwmod@divisor& (0+255),f,b
  6029  002BA4  372A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6030  002BA6  2B2B               	incf	___lwmod@counter& (0+255),f,b
  6031  002BA8                     l1433:
  6032                           
  6033                           ; BSR set to: 1
  6034                           
  6035                           ; BSR set to: 1
  6036  002BA8  AF2A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6037  002BAA  D7FA               	goto	l1434
  6038  002BAC                     u4610:
  6039                           
  6040                           ; BSR set to: 1
  6041                           
  6042                           ; BSR set to: 1
  6043                           
  6044                           ; BSR set to: 1
  6045  002BAC  5129               	movf	___lwmod@divisor& (0+255),w,b
  6046  002BAE  5D27               	subwf	___lwmod@dividend& (0+255),w,b
  6047  002BB0  512A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6048  002BB2  5928               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6049  002BB4  A0D8               	btfss	status,0,c
  6050  002BB6  D004               	goto	l1437
  6051                           
  6052                           ; BSR set to: 1
  6053  002BB8  5129               	movf	___lwmod@divisor& (0+255),w,b
  6054  002BBA  5F27               	subwf	___lwmod@dividend& (0+255),f,b
  6055  002BBC  512A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6056  002BBE  5B28               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6057  002BC0                     l1437:
  6058                           
  6059                           ; BSR set to: 1
  6060                           
  6061                           ; BSR set to: 1
  6062  002BC0  90D8               	bcf	status,0,c
  6063  002BC2  332A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6064  002BC4  3329               	rrcf	___lwmod@divisor& (0+255),f,b
  6065                           
  6066                           ; BSR set to: 1
  6067  002BC6  2F2B               	decfsz	___lwmod@counter& (0+255),f,b
  6068  002BC8  D7F1               	goto	u4610
  6069  002BCA                     l1438:
  6070                           
  6071                           ; BSR set to: 1
  6072                           
  6073                           ; BSR set to: 1
  6074  002BCA  C127  F127         	movff	___lwmod@dividend,?___lwmod
  6075  002BCE  C128  F128         	movff	___lwmod@dividend+1,?___lwmod+1
  6076                           
  6077                           ; BSR set to: 1
  6078  002BD2  0012               	return		;funcret
  6079  002BD4                     __end_of___lwmod:
  6080                           	opt stack 0
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           intcon	equ	0xFF2
  6088                           postinc0	equ	0xFEE
  6089                           wreg	equ	0xFE8
  6090                           indf1	equ	0xFE7
  6091                           postdec1	equ	0xFE5
  6092                           fsr1h	equ	0xFE2
  6093                           fsr1l	equ	0xFE1
  6094                           indf2	equ	0xFDF
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function ___lwdiv *****************
  6100 ;; Defined at:
  6101 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  dividend        2    0[BANK1 ] unsigned int 
  6104 ;;  divisor         2    2[BANK1 ] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  quotient        2    5[BANK1 ] unsigned int 
  6107 ;;  counter         1    4[BANK1 ] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2    0[BANK1 ] unsigned int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6117 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;Total ram usage:        7 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    8
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text32
  6132  0029FC                     __ptext32:
  6133                           	opt stack 0
  6134  0029FC                     ___lwdiv:
  6135                           	opt stack 22
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;incstack = 0
  6139  0029FC  0E00               	movlw	0
  6140  0029FE  0101               	movlb	1	; () banked
  6141  002A00  6F2D               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6142  002A02  0E00               	movlw	0
  6143  002A04  6F2C               	movwf	___lwdiv@quotient& (0+255),b
  6144                           
  6145                           ; BSR set to: 1
  6146  002A06  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6147  002A08  112A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6148  002A0A  B4D8               	btfsc	status,2,c
  6149  002A0C  D01C               	goto	l1428
  6150                           
  6151                           ; BSR set to: 1
  6152  002A0E  0E01               	movlw	1
  6153  002A10  6F2B               	movwf	___lwdiv@counter& (0+255),b
  6154  002A12  D004               	goto	l1423
  6155  002A14                     
  6156                           ; BSR set to: 1
  6157                           
  6158                           ; BSR set to: 1
  6159  002A14  90D8               	bcf	status,0,c
  6160  002A16  3729               	rlcf	___lwdiv@divisor& (0+255),f,b
  6161  002A18  372A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6162  002A1A  2B2B               	incf	___lwdiv@counter& (0+255),f,b
  6163  002A1C                     l1423:
  6164                           
  6165                           ; BSR set to: 1
  6166                           
  6167                           ; BSR set to: 1
  6168  002A1C  AF2A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6169  002A1E  D7FA               	goto	l1424
  6170  002A20                     u4580:
  6171                           
  6172                           ; BSR set to: 1
  6173                           
  6174                           ; BSR set to: 1
  6175                           
  6176                           ; BSR set to: 1
  6177  002A20  90D8               	bcf	status,0,c
  6178  002A22  372C               	rlcf	___lwdiv@quotient& (0+255),f,b
  6179  002A24  372D               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6180                           
  6181                           ; BSR set to: 1
  6182  002A26  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6183  002A28  5D27               	subwf	___lwdiv@dividend& (0+255),w,b
  6184  002A2A  512A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6185  002A2C  5928               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6186  002A2E  A0D8               	btfss	status,0,c
  6187  002A30  D005               	goto	l1427
  6188                           
  6189                           ; BSR set to: 1
  6190  002A32  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6191  002A34  5F27               	subwf	___lwdiv@dividend& (0+255),f,b
  6192  002A36  512A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6193  002A38  5B28               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6194                           
  6195                           ; BSR set to: 1
  6196  002A3A  812C               	bsf	___lwdiv@quotient& (0+255),0,b
  6197  002A3C                     l1427:
  6198                           
  6199                           ; BSR set to: 1
  6200                           
  6201                           ; BSR set to: 1
  6202  002A3C  90D8               	bcf	status,0,c
  6203  002A3E  332A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6204  002A40  3329               	rrcf	___lwdiv@divisor& (0+255),f,b
  6205                           
  6206                           ; BSR set to: 1
  6207  002A42  2F2B               	decfsz	___lwdiv@counter& (0+255),f,b
  6208  002A44  D7ED               	goto	u4580
  6209  002A46                     l1428:
  6210                           
  6211                           ; BSR set to: 1
  6212                           
  6213                           ; BSR set to: 1
  6214  002A46  C12C  F127         	movff	___lwdiv@quotient,?___lwdiv
  6215  002A4A  C12D  F128         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6216                           
  6217                           ; BSR set to: 1
  6218  002A4E  0012               	return		;funcret
  6219  002A50                     __end_of___lwdiv:
  6220                           	opt stack 0
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodh	equ	0xFF4
  6226                           prodl	equ	0xFF3
  6227                           intcon	equ	0xFF2
  6228                           postinc0	equ	0xFEE
  6229                           wreg	equ	0xFE8
  6230                           indf1	equ	0xFE7
  6231                           postdec1	equ	0xFE5
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           indf2	equ	0xFDF
  6235                           fsr2h	equ	0xFDA
  6236                           fsr2l	equ	0xFD9
  6237                           status	equ	0xFD8
  6238                           
  6239 ;; *************** function ___fttol *****************
  6240 ;; Defined at:
  6241 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  f1              3    0[BANK1 ] float 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  lval            4   10[BANK1 ] unsigned long 
  6246 ;;  exp1            1   14[BANK1 ] unsigned char 
  6247 ;;  sign1           1    9[BANK1 ] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  4    0[BANK1 ] long 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6257 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;Total ram usage:       15 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    8
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text33
  6272  002300                     __ptext33:
  6273                           	opt stack 0
  6274  002300                     ___fttol:
  6275                           	opt stack 22
  6276                           
  6277                           ; BSR set to: 1
  6278                           ;incstack = 0
  6279  002300  C129  F12B         	movff	___fttol@f1+2,??___fttol
  6280  002304  0101               	movlb	1	; () banked
  6281  002306  6B2C               	clrf	(??___fttol+1)& (0+255),b
  6282  002308  6B2D               	clrf	(??___fttol+2)& (0+255),b
  6283  00230A  3528               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6284  00230C  372B               	rlcf	??___fttol& (0+255),f,b
  6285  00230E  E301               	bnc	u4491
  6286  002310  812C               	bsf	(??___fttol+1)& (0+255),0,b
  6287  002312                     u4491:
  6288  002312  512B               	movf	??___fttol& (0+255),w,b
  6289  002314  6F35               	movwf	___fttol@exp1& (0+255),b
  6290  002316  5135               	movf	___fttol@exp1& (0+255),w,b
  6291  002318  A4D8               	btfss	status,2,c
  6292  00231A  D009               	goto	l1334
  6293                           
  6294                           ; BSR set to: 1
  6295  00231C  0E00               	movlw	0
  6296  00231E  6F27               	movwf	?___fttol& (0+255),b
  6297  002320  0E00               	movlw	0
  6298  002322  6F28               	movwf	(?___fttol+1)& (0+255),b
  6299  002324  0E00               	movlw	0
  6300  002326  6F29               	movwf	(?___fttol+2)& (0+255),b
  6301  002328  0E00               	movlw	0
  6302  00232A  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6303                           
  6304                           ; BSR set to: 1
  6305  00232C  0012               	return	
  6306  00232E                     l1334:
  6307                           
  6308                           ; BSR set to: 1
  6309                           
  6310                           ; BSR set to: 1
  6311  00232E  0E17               	movlw	23
  6312  002330  6F2B               	movwf	??___fttol& (0+255),b
  6313  002332  C127  F12C         	movff	___fttol@f1,??___fttol+1
  6314  002336  C128  F12D         	movff	___fttol@f1+1,??___fttol+2
  6315  00233A  C129  F12E         	movff	___fttol@f1+2,??___fttol+3
  6316  00233E  292B               	incf	??___fttol& (0+255),w,b
  6317  002340  6F2F               	movwf	(??___fttol+4)& (0+255),b
  6318  002342  D004               	goto	u4510
  6319  002344                     u4515:
  6320  002344  90D8               	bcf	status,0,c
  6321  002346  332E               	rrcf	(??___fttol+3)& (0+255),f,b
  6322  002348  332D               	rrcf	(??___fttol+2)& (0+255),f,b
  6323  00234A  332C               	rrcf	(??___fttol+1)& (0+255),f,b
  6324  00234C                     u4510:
  6325  00234C  2F2F               	decfsz	(??___fttol+4)& (0+255),f,b
  6326  00234E  D7FA               	goto	u4515
  6327  002350  0101               	movlb	1	; () banked
  6328  002352  512C               	movf	(??___fttol+1)& (0+255),w,b
  6329  002354  6F30               	movwf	___fttol@sign1& (0+255),b
  6330                           
  6331                           ; BSR set to: 1
  6332  002356  8F28               	bsf	(___fttol@f1+1)& (0+255),7,b
  6333                           
  6334                           ; BSR set to: 1
  6335  002358  0EFF               	movlw	255
  6336  00235A  1727               	andwf	___fttol@f1& (0+255),f,b
  6337  00235C  0EFF               	movlw	255
  6338  00235E  1728               	andwf	(___fttol@f1+1)& (0+255),f,b
  6339  002360  0E00               	movlw	0
  6340  002362  1729               	andwf	(___fttol@f1+2)& (0+255),f,b
  6341                           
  6342                           ; BSR set to: 1
  6343  002364  5127               	movf	___fttol@f1& (0+255),w,b
  6344  002366  6F31               	movwf	___fttol@lval& (0+255),b
  6345  002368  5128               	movf	(___fttol@f1+1)& (0+255),w,b
  6346  00236A  6F32               	movwf	(___fttol@lval+1)& (0+255),b
  6347  00236C  5129               	movf	(___fttol@f1+2)& (0+255),w,b
  6348  00236E  6F33               	movwf	(___fttol@lval+2)& (0+255),b
  6349  002370  6B34               	clrf	(___fttol@lval+3)& (0+255),b
  6350                           
  6351                           ; BSR set to: 1
  6352  002372  0E8E               	movlw	142
  6353  002374  5F35               	subwf	___fttol@exp1& (0+255),f,b
  6354                           
  6355                           ; BSR set to: 1
  6356  002376  AF35               	btfss	___fttol@exp1& (0+255),7,b
  6357  002378  D016               	goto	l1336
  6358                           
  6359                           ; BSR set to: 1
  6360  00237A  5135               	movf	___fttol@exp1& (0+255),w,b
  6361  00237C  0A80               	xorlw	128
  6362  00237E  0F8F               	addlw	143
  6363  002380  B0D8               	btfsc	status,0,c
  6364  002382  D009               	goto	l1337
  6365                           
  6366                           ; BSR set to: 1
  6367  002384  0E00               	movlw	0
  6368  002386  6F27               	movwf	?___fttol& (0+255),b
  6369  002388  0E00               	movlw	0
  6370  00238A  6F28               	movwf	(?___fttol+1)& (0+255),b
  6371  00238C  0E00               	movlw	0
  6372  00238E  6F29               	movwf	(?___fttol+2)& (0+255),b
  6373  002390  0E00               	movlw	0
  6374  002392  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6375                           
  6376                           ; BSR set to: 1
  6377  002394  0012               	return	
  6378  002396                     l1337:
  6379                           
  6380                           ; BSR set to: 1
  6381                           
  6382                           ; BSR set to: 1
  6383                           
  6384                           ; BSR set to: 1
  6385  002396  90D8               	bcf	status,0,c
  6386  002398  3334               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6387  00239A  3333               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6388  00239C  3332               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6389  00239E  3331               	rrcf	___fttol@lval& (0+255),f,b
  6390                           
  6391                           ; BSR set to: 1
  6392  0023A0  3F35               	incfsz	___fttol@exp1& (0+255),f,b
  6393  0023A2  D7F9               	goto	l1337
  6394                           
  6395                           ; BSR set to: 1
  6396  0023A4  D015               	goto	u4550
  6397  0023A6                     l1336:
  6398                           
  6399                           ; BSR set to: 1
  6400                           
  6401                           ; BSR set to: 1
  6402  0023A6  0E17               	movlw	23
  6403  0023A8  6535               	cpfsgt	___fttol@exp1& (0+255),b
  6404  0023AA  D00F               	goto	l1342
  6405                           
  6406                           ; BSR set to: 1
  6407  0023AC  0E00               	movlw	0
  6408  0023AE  6F27               	movwf	?___fttol& (0+255),b
  6409  0023B0  0E00               	movlw	0
  6410  0023B2  6F28               	movwf	(?___fttol+1)& (0+255),b
  6411  0023B4  0E00               	movlw	0
  6412  0023B6  6F29               	movwf	(?___fttol+2)& (0+255),b
  6413  0023B8  0E00               	movlw	0
  6414  0023BA  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6415                           
  6416                           ; BSR set to: 1
  6417  0023BC  0012               	return	
  6418  0023BE                     
  6419                           ; BSR set to: 1
  6420                           
  6421                           ; BSR set to: 1
  6422  0023BE  90D8               	bcf	status,0,c
  6423  0023C0  3731               	rlcf	___fttol@lval& (0+255),f,b
  6424  0023C2  3732               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6425  0023C4  3733               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6426  0023C6  3734               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6427  0023C8  0735               	decf	___fttol@exp1& (0+255),f,b
  6428  0023CA                     l1342:
  6429                           
  6430                           ; BSR set to: 1
  6431                           
  6432                           ; BSR set to: 1
  6433  0023CA  5135               	movf	___fttol@exp1& (0+255),w,b
  6434  0023CC  A4D8               	btfss	status,2,c
  6435  0023CE  D7F7               	goto	l1343
  6436  0023D0                     u4550:
  6437                           
  6438                           ; BSR set to: 1
  6439                           
  6440                           ; BSR set to: 1
  6441                           
  6442                           ; BSR set to: 1
  6443  0023D0  5130               	movf	___fttol@sign1& (0+255),w,b
  6444  0023D2  B4D8               	btfsc	status,2,c
  6445  0023D4  D008               	goto	l1345
  6446                           
  6447                           ; BSR set to: 1
  6448  0023D6  1F34               	comf	(___fttol@lval+3)& (0+255),f,b
  6449  0023D8  1F33               	comf	(___fttol@lval+2)& (0+255),f,b
  6450  0023DA  1F32               	comf	(___fttol@lval+1)& (0+255),f,b
  6451  0023DC  6D31               	negf	___fttol@lval& (0+255),b
  6452  0023DE  0E00               	movlw	0
  6453  0023E0  2332               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6454  0023E2  2333               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6455  0023E4  2334               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6456  0023E6                     l1345:
  6457                           
  6458                           ; BSR set to: 1
  6459                           
  6460                           ; BSR set to: 1
  6461  0023E6  C131  F127         	movff	___fttol@lval,?___fttol
  6462  0023EA  C132  F128         	movff	___fttol@lval+1,?___fttol+1
  6463  0023EE  C133  F129         	movff	___fttol@lval+2,?___fttol+2
  6464  0023F2  C134  F12A         	movff	___fttol@lval+3,?___fttol+3
  6465  0023F6  0012               	return	
  6466  0023F8                     __end_of___fttol:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           postdec1	equ	0xFE5
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486 ;; *************** function ___awdiv *****************
  6487 ;; Defined at:
  6488 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  dividend        2    0[BANK1 ] int 
  6491 ;;  divisor         2    2[BANK1 ] int 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  quotient        2    6[BANK1 ] int 
  6494 ;;  sign            1    5[BANK1 ] unsigned char 
  6495 ;;  counter         1    4[BANK1 ] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  2    0[BANK1 ] int 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        8 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    8
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_main
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text34
  6520  002770                     __ptext34:
  6521                           	opt stack 0
  6522  002770                     ___awdiv:
  6523                           	opt stack 22
  6524                           
  6525                           ; BSR set to: 1
  6526                           ;incstack = 0
  6527  002770  0E00               	movlw	0
  6528  002772  0101               	movlb	1	; () banked
  6529  002774  6F2C               	movwf	___awdiv@sign& (0+255),b
  6530                           
  6531                           ; BSR set to: 1
  6532  002776  AF2A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6533  002778  D006               	goto	l1187
  6534                           
  6535                           ; BSR set to: 1
  6536  00277A  6D29               	negf	___awdiv@divisor& (0+255),b
  6537  00277C  1F2A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6538  00277E  B0D8               	btfsc	status,0,c
  6539  002780  2B2A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6540                           
  6541                           ; BSR set to: 1
  6542  002782  0E01               	movlw	1
  6543  002784  6F2C               	movwf	___awdiv@sign& (0+255),b
  6544  002786                     l1187:
  6545                           
  6546                           ; BSR set to: 1
  6547                           
  6548                           ; BSR set to: 1
  6549  002786  AF28               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6550  002788  D006               	goto	l1188
  6551                           
  6552                           ; BSR set to: 1
  6553  00278A  6D27               	negf	___awdiv@dividend& (0+255),b
  6554  00278C  1F28               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6555  00278E  B0D8               	btfsc	status,0,c
  6556  002790  2B28               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6557                           
  6558                           ; BSR set to: 1
  6559  002792  0E01               	movlw	1
  6560  002794  1B2C               	xorwf	___awdiv@sign& (0+255),f,b
  6561  002796                     l1188:
  6562                           
  6563                           ; BSR set to: 1
  6564                           
  6565                           ; BSR set to: 1
  6566  002796  0E00               	movlw	0
  6567  002798  6F2E               	movwf	(___awdiv@quotient+1)& (0+255),b
  6568  00279A  0E00               	movlw	0
  6569  00279C  6F2D               	movwf	___awdiv@quotient& (0+255),b
  6570                           
  6571                           ; BSR set to: 1
  6572  00279E  5129               	movf	___awdiv@divisor& (0+255),w,b
  6573  0027A0  112A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6574  0027A2  B4D8               	btfsc	status,2,c
  6575  0027A4  D01C               	goto	l1195
  6576                           
  6577                           ; BSR set to: 1
  6578  0027A6  0E01               	movlw	1
  6579  0027A8  6F2B               	movwf	___awdiv@counter& (0+255),b
  6580  0027AA  D004               	goto	l1190
  6581  0027AC                     
  6582                           ; BSR set to: 1
  6583                           
  6584                           ; BSR set to: 1
  6585  0027AC  90D8               	bcf	status,0,c
  6586  0027AE  3729               	rlcf	___awdiv@divisor& (0+255),f,b
  6587  0027B0  372A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6588  0027B2  2B2B               	incf	___awdiv@counter& (0+255),f,b
  6589  0027B4                     l1190:
  6590                           
  6591                           ; BSR set to: 1
  6592                           
  6593                           ; BSR set to: 1
  6594  0027B4  AF2A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6595  0027B6  D7FA               	goto	l1191
  6596  0027B8                     u4460:
  6597                           
  6598                           ; BSR set to: 1
  6599                           
  6600                           ; BSR set to: 1
  6601                           
  6602                           ; BSR set to: 1
  6603  0027B8  90D8               	bcf	status,0,c
  6604  0027BA  372D               	rlcf	___awdiv@quotient& (0+255),f,b
  6605  0027BC  372E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6606                           
  6607                           ; BSR set to: 1
  6608  0027BE  5129               	movf	___awdiv@divisor& (0+255),w,b
  6609  0027C0  5D27               	subwf	___awdiv@dividend& (0+255),w,b
  6610  0027C2  512A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6611  0027C4  5928               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6612  0027C6  A0D8               	btfss	status,0,c
  6613  0027C8  D005               	goto	l1194
  6614                           
  6615                           ; BSR set to: 1
  6616  0027CA  5129               	movf	___awdiv@divisor& (0+255),w,b
  6617  0027CC  5F27               	subwf	___awdiv@dividend& (0+255),f,b
  6618  0027CE  512A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6619  0027D0  5B28               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6620                           
  6621                           ; BSR set to: 1
  6622  0027D2  812D               	bsf	___awdiv@quotient& (0+255),0,b
  6623  0027D4                     l1194:
  6624                           
  6625                           ; BSR set to: 1
  6626                           
  6627                           ; BSR set to: 1
  6628  0027D4  90D8               	bcf	status,0,c
  6629  0027D6  332A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6630  0027D8  3329               	rrcf	___awdiv@divisor& (0+255),f,b
  6631                           
  6632                           ; BSR set to: 1
  6633  0027DA  2F2B               	decfsz	___awdiv@counter& (0+255),f,b
  6634  0027DC  D7ED               	goto	u4460
  6635  0027DE                     l1195:
  6636                           
  6637                           ; BSR set to: 1
  6638                           
  6639                           ; BSR set to: 1
  6640                           
  6641                           ; BSR set to: 1
  6642  0027DE  512C               	movf	___awdiv@sign& (0+255),w,b
  6643  0027E0  B4D8               	btfsc	status,2,c
  6644  0027E2  D004               	goto	l1196
  6645                           
  6646                           ; BSR set to: 1
  6647  0027E4  6D2D               	negf	___awdiv@quotient& (0+255),b
  6648  0027E6  1F2E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6649  0027E8  B0D8               	btfsc	status,0,c
  6650  0027EA  2B2E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6651  0027EC                     l1196:
  6652                           
  6653                           ; BSR set to: 1
  6654                           
  6655                           ; BSR set to: 1
  6656  0027EC  C12D  F127         	movff	___awdiv@quotient,?___awdiv
  6657  0027F0  C12E  F128         	movff	___awdiv@quotient+1,?___awdiv+1
  6658  0027F4  0012               	return	
  6659  0027F6                     __end_of___awdiv:
  6660                           	opt stack 0
  6661                           tblptru	equ	0xFF8
  6662                           tblptrh	equ	0xFF7
  6663                           tblptrl	equ	0xFF6
  6664                           tablat	equ	0xFF5
  6665                           prodh	equ	0xFF4
  6666                           prodl	equ	0xFF3
  6667                           intcon	equ	0xFF2
  6668                           postinc0	equ	0xFEE
  6669                           wreg	equ	0xFE8
  6670                           indf1	equ	0xFE7
  6671                           postdec1	equ	0xFE5
  6672                           fsr1h	equ	0xFE2
  6673                           fsr1l	equ	0xFE1
  6674                           indf2	equ	0xFDF
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           
  6679 ;; *************** function _Set_DeviceId *****************
  6680 ;; Defined at:
  6681 ;;		line 534 in file "07_May_WaterMeter_Main.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  ID1             2   12[BANK1 ] unsigned int 
  6686 ;;  i               1   17[BANK1 ] unsigned char 
  6687 ;;  n               1   16[BANK1 ] unsigned char 
  6688 ;;  j               1   15[BANK1 ] unsigned char 
  6689 ;;  fail            1   14[BANK1 ] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;Total ram usage:        8 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   11
  6706 ;; This function calls:
  6707 ;;		_Busy_eep2
  6708 ;;		_Delayms1
  6709 ;;		_LcdCmd
  6710 ;;		_LcdData
  6711 ;;		_LcdDisplay
  6712 ;;		_Read_b_eep2
  6713 ;;		_Write_b_eep2
  6714 ;;		___awmod
  6715 ;;		_lcd_clear
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text35
  6722  0016E2                     __ptext35:
  6723                           	opt stack 0
  6724  0016E2                     _Set_DeviceId:
  6725                           	opt stack 19
  6726                           
  6727                           ;07_May_WaterMeter_Main.c: 535: char i=0,j=0;
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;incstack = 0
  6731  0016E2  0E00               	movlw	0
  6732  0016E4  0101               	movlb	1	; () banked
  6733  0016E6  6F38               	movwf	Set_DeviceId@i& (0+255),b
  6734  0016E8  0E00               	movlw	0
  6735  0016EA  6F36               	movwf	Set_DeviceId@j& (0+255),b
  6736                           
  6737                           ;07_May_WaterMeter_Main.c: 536: unsigned char n=1,fail=0;
  6738  0016EC  0E01               	movlw	1
  6739  0016EE  6F37               	movwf	Set_DeviceId@n& (0+255),b
  6740  0016F0  0E00               	movlw	0
  6741  0016F2  6F35               	movwf	Set_DeviceId@fail& (0+255),b
  6742                           
  6743                           ;07_May_WaterMeter_Main.c: 537: unsigned int ID1=0;
  6744  0016F4  0E00               	movlw	0
  6745  0016F6  6F34               	movwf	(Set_DeviceId@ID1+1)& (0+255),b
  6746  0016F8  0E00               	movlw	0
  6747  0016FA  6F33               	movwf	Set_DeviceId@ID1& (0+255),b
  6748                           
  6749                           ; BSR set to: 1
  6750                           ;07_May_WaterMeter_Main.c: 539: lcd_clear();
  6751  0016FC  EC82  F019         	call	_lcd_clear	;wreg free
  6752                           
  6753                           ;07_May_WaterMeter_Main.c: 540: LcdDisplay(0x80,"  Device Id Is  ");
  6754  001700  0EAD               	movlw	low STR_9
  6755  001702  0101               	movlb	1	; () banked
  6756  001704  6F2E               	movwf	LcdDisplay@string& (0+255),b
  6757  001706  0E10               	movlw	high STR_9
  6758  001708  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  6759  00170A  0E80               	movlw	128
  6760  00170C  EC6F  F016         	call	_LcdDisplay
  6761                           
  6762                           ;07_May_WaterMeter_Main.c: 541: LcdDisplay(0xC0,"      000       ");
  6763  001710  0E25               	movlw	low STR_10
  6764  001712  0101               	movlb	1	; () banked
  6765  001714  6F2E               	movwf	LcdDisplay@string& (0+255),b
  6766  001716  0E10               	movlw	high STR_10
  6767  001718  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  6768  00171A  0EC0               	movlw	192
  6769  00171C  EC6F  F016         	call	_LcdDisplay
  6770                           
  6771                           ;07_May_WaterMeter_Main.c: 542: LcdCmd(0xC0+6);
  6772  001720  0EC6               	movlw	198
  6773  001722  EC9F  F018         	call	_LcdCmd
  6774                           
  6775                           ;07_May_WaterMeter_Main.c: 543: LcdCmd(0x0E);
  6776  001726  0E0E               	movlw	14
  6777  001728  EC9F  F018         	call	_LcdCmd
  6778  00172C  A003               	btfss	_PORTGX,0,c
  6779  00172E  D7FE               	goto	l956
  6780                           
  6781                           ;07_May_WaterMeter_Main.c: 545: Delayms1(30);
  6782  001730  0E00               	movlw	0
  6783  001732  0101               	movlb	1	; () banked
  6784  001734  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6785  001736  0E1E               	movlw	30
  6786  001738  6F27               	movwf	Delayms1@time& (0+255),b
  6787  00173A  EC0C  F017         	call	_Delayms1	;wreg free
  6788                           
  6789                           ;07_May_WaterMeter_Main.c: 547: Increment=0;
  6790  00173E  0E00               	movlw	0
  6791  001740  0100               	movlb	0	; () banked
  6792  001742  6F8D               	movwf	(_Increment+1)& (0+255),b
  6793  001744  0E00               	movlw	0
  6794  001746  6F8C               	movwf	_Increment& (0+255),b
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;07_May_WaterMeter_Main.c: 548: Decrement=0;
  6798  001748  0E00               	movlw	0
  6799  00174A  6F8B               	movwf	(_Decrement+1)& (0+255),b
  6800  00174C  0E00               	movlw	0
  6801  00174E  6F8A               	movwf	_Decrement& (0+255),b
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;07_May_WaterMeter_Main.c: 549: Enter=0;
  6805  001750  0E00               	movlw	0
  6806  001752  6FA4               	movwf	_Enter& (0+255),b
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;07_May_WaterMeter_Main.c: 550: F_TimerCounting=1;
  6810  001754  0E01               	movlw	1
  6811  001756  6E02               	movwf	_F_TimerCounting,c
  6812  001758                     
  6813                           ; BSR set to: 0
  6814                           ;07_May_WaterMeter_Main.c: 552: if(Increment>=20){
  6815                           
  6816                           ; BSR set to: 0
  6817  001758  518D               	movf	(_Increment+1)& (0+255),w,b
  6818  00175A  E104               	bnz	u3880
  6819  00175C  0E14               	movlw	20
  6820  00175E  5D8C               	subwf	_Increment& (0+255),w,b
  6821  001760  A0D8               	btfss	status,0,c
  6822  001762  D034               	goto	l959
  6823  001764                     u3880:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;07_May_WaterMeter_Main.c: 553: LcdCmd(0xC0 + 6 + i);
  6827  001764  0101               	movlb	1	; () banked
  6828  001766  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6829  001768  0FC6               	addlw	198
  6830  00176A  EC9F  F018         	call	_LcdCmd
  6831                           
  6832                           ;07_May_WaterMeter_Main.c: 554: j++;
  6833  00176E  0101               	movlb	1	; () banked
  6834  001770  2B36               	incf	Set_DeviceId@j& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;07_May_WaterMeter_Main.c: 555: if(j>9)
  6838  001772  0E09               	movlw	9
  6839  001774  6536               	cpfsgt	Set_DeviceId@j& (0+255),b
  6840  001776  D002               	goto	l960
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;07_May_WaterMeter_Main.c: 556: j=0;
  6844  001778  0E00               	movlw	0
  6845  00177A  6F36               	movwf	Set_DeviceId@j& (0+255),b
  6846  00177C                     l960:
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;07_May_WaterMeter_Main.c: 557: LcdCmd(0x0C);
  6850                           
  6851                           ; BSR set to: 1
  6852  00177C  0E0C               	movlw	12
  6853  00177E  EC9F  F018         	call	_LcdCmd
  6854                           
  6855                           ;07_May_WaterMeter_Main.c: 558: LcdData(j%10 + 48);
  6856  001782  C136  F127         	movff	Set_DeviceId@j,___awmod@dividend
  6857  001786  0101               	movlb	1	; () banked
  6858  001788  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  6859  00178A  0E00               	movlw	0
  6860  00178C  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  6861  00178E  0E0A               	movlw	10
  6862  001790  6F29               	movwf	___awmod@divisor& (0+255),b
  6863  001792  ECFB  F013         	call	___awmod	;wreg free
  6864  001796  0101               	movlb	1	; () banked
  6865  001798  5127               	movf	?___awmod& (0+255),w,b
  6866  00179A  0F30               	addlw	48
  6867  00179C  EC8F  F018         	call	_LcdData
  6868                           
  6869                           ;07_May_WaterMeter_Main.c: 559: LcdCmd(0xC0 + 6 + i);
  6870  0017A0  0101               	movlb	1	; () banked
  6871  0017A2  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6872  0017A4  0FC6               	addlw	198
  6873  0017A6  EC9F  F018         	call	_LcdCmd
  6874                           
  6875                           ;07_May_WaterMeter_Main.c: 560: LcdCmd(0x0E);
  6876  0017AA  0E0E               	movlw	14
  6877  0017AC  EC9F  F018         	call	_LcdCmd
  6878  0017B0  A203               	btfss	_PORTGX,1,c
  6879  0017B2  D7FE               	goto	l962
  6880                           
  6881                           ;07_May_WaterMeter_Main.c: 562: Delayms1(30);
  6882  0017B4  0E00               	movlw	0
  6883  0017B6  0101               	movlb	1	; () banked
  6884  0017B8  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6885  0017BA  0E1E               	movlw	30
  6886  0017BC  6F27               	movwf	Delayms1@time& (0+255),b
  6887  0017BE  EC0C  F017         	call	_Delayms1	;wreg free
  6888                           
  6889                           ;07_May_WaterMeter_Main.c: 563: Increment=0;
  6890  0017C2  0E00               	movlw	0
  6891  0017C4  0100               	movlb	0	; () banked
  6892  0017C6  6F8D               	movwf	(_Increment+1)& (0+255),b
  6893  0017C8  0E00               	movlw	0
  6894  0017CA  6F8C               	movwf	_Increment& (0+255),b
  6895  0017CC                     l959:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;07_May_WaterMeter_Main.c: 564: }
  6899                           ;07_May_WaterMeter_Main.c: 565: if(Decrement>=20){
  6900                           
  6901                           ; BSR set to: 0
  6902  0017CC  518B               	movf	(_Decrement+1)& (0+255),w,b
  6903  0017CE  E104               	bnz	u3910
  6904  0017D0  0E14               	movlw	20
  6905  0017D2  5D8A               	subwf	_Decrement& (0+255),w,b
  6906  0017D4  A0D8               	btfss	status,0,c
  6907  0017D6  D02F               	goto	l964
  6908  0017D8                     u3910:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;07_May_WaterMeter_Main.c: 566: LcdCmd(0xC0 + 6 + i);
  6912  0017D8  0101               	movlb	1	; () banked
  6913  0017DA  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6914  0017DC  0FC6               	addlw	198
  6915  0017DE  EC9F  F018         	call	_LcdCmd
  6916                           
  6917                           ;07_May_WaterMeter_Main.c: 567: j--;
  6918  0017E2  0101               	movlb	1	; () banked
  6919  0017E4  0736               	decf	Set_DeviceId@j& (0+255),f,b
  6920                           
  6921                           ; BSR set to: 1
  6922                           ;07_May_WaterMeter_Main.c: 570: LcdCmd(0x0C);
  6923                           
  6924                           ; BSR set to: 1
  6925                           
  6926                           ; BSR set to: 1
  6927                           ;07_May_WaterMeter_Main.c: 569: j=9;
  6928                           
  6929                           ;07_May_WaterMeter_Main.c: 568: if(j<0)
  6930  0017E6  0E0C               	movlw	12
  6931  0017E8  EC9F  F018         	call	_LcdCmd
  6932                           
  6933                           ;07_May_WaterMeter_Main.c: 571: LcdData(j%10 + 48);
  6934  0017EC  C136  F127         	movff	Set_DeviceId@j,___awmod@dividend
  6935  0017F0  0101               	movlb	1	; () banked
  6936  0017F2  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  6937  0017F4  0E00               	movlw	0
  6938  0017F6  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  6939  0017F8  0E0A               	movlw	10
  6940  0017FA  6F29               	movwf	___awmod@divisor& (0+255),b
  6941  0017FC  ECFB  F013         	call	___awmod	;wreg free
  6942  001800  0101               	movlb	1	; () banked
  6943  001802  5127               	movf	?___awmod& (0+255),w,b
  6944  001804  0F30               	addlw	48
  6945  001806  EC8F  F018         	call	_LcdData
  6946                           
  6947                           ;07_May_WaterMeter_Main.c: 572: LcdCmd(0xC0 + 6 + i);
  6948  00180A  0101               	movlb	1	; () banked
  6949  00180C  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6950  00180E  0FC6               	addlw	198
  6951  001810  EC9F  F018         	call	_LcdCmd
  6952                           
  6953                           ;07_May_WaterMeter_Main.c: 573: LcdCmd(0x0E);
  6954  001814  0E0E               	movlw	14
  6955  001816  EC9F  F018         	call	_LcdCmd
  6956  00181A  A403               	btfss	_PORTGX,2,c
  6957  00181C  D7FE               	goto	l967
  6958                           
  6959                           ;07_May_WaterMeter_Main.c: 575: Delayms1(30);
  6960  00181E  0E00               	movlw	0
  6961  001820  0101               	movlb	1	; () banked
  6962  001822  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6963  001824  0E1E               	movlw	30
  6964  001826  6F27               	movwf	Delayms1@time& (0+255),b
  6965  001828  EC0C  F017         	call	_Delayms1	;wreg free
  6966                           
  6967                           ;07_May_WaterMeter_Main.c: 576: Decrement=0;
  6968  00182C  0E00               	movlw	0
  6969  00182E  0100               	movlb	0	; () banked
  6970  001830  6F8B               	movwf	(_Decrement+1)& (0+255),b
  6971  001832  0E00               	movlw	0
  6972  001834  6F8A               	movwf	_Decrement& (0+255),b
  6973  001836                     l964:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;07_May_WaterMeter_Main.c: 577: }
  6977                           ;07_May_WaterMeter_Main.c: 578: if(Enter >= 20){
  6978                           
  6979                           ; BSR set to: 0
  6980  001836  0E13               	movlw	19
  6981  001838  65A4               	cpfsgt	_Enter& (0+255),b
  6982  00183A  D191               	goto	l1013
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;07_May_WaterMeter_Main.c: 579: DeviceId_arr[i]=j;
  6986  00183C  0101               	movlb	1	; () banked
  6987  00183E  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6988  001840  0D01               	mullw	1
  6989  001842  0EB5               	movlw	low _DeviceId_arr
  6990  001844  24F3               	addwf	prodl,w,c
  6991  001846  6ED9               	movwf	fsr2l,c
  6992  001848  0E00               	movlw	high _DeviceId_arr
  6993  00184A  20F4               	addwfc	prodh,w,c
  6994  00184C  6EDA               	movwf	fsr2h,c
  6995  00184E  C136  FFDF         	movff	Set_DeviceId@j,indf2
  6996                           
  6997                           ; BSR set to: 1
  6998                           ;07_May_WaterMeter_Main.c: 580: i++;
  6999  001852  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  7000                           
  7001                           ; BSR set to: 1
  7002                           ;07_May_WaterMeter_Main.c: 581: LcdCmd(0xC0 + 6 + i);
  7003  001854  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7004  001856  0FC6               	addlw	198
  7005  001858  EC9F  F018         	call	_LcdCmd
  7006                           
  7007                           ;07_May_WaterMeter_Main.c: 582: LcdCmd(0x0C);
  7008  00185C  0E0C               	movlw	12
  7009  00185E  EC9F  F018         	call	_LcdCmd
  7010                           
  7011                           ;07_May_WaterMeter_Main.c: 583: j=0;
  7012  001862  0E00               	movlw	0
  7013  001864  0101               	movlb	1	; () banked
  7014  001866  6F36               	movwf	Set_DeviceId@j& (0+255),b
  7015  001868                     
  7016                           ; BSR set to: 1
  7017  001868  A003               	btfss	_PORTGX,0,c
  7018  00186A  D7FE               	goto	l971
  7019                           
  7020                           ;07_May_WaterMeter_Main.c: 585: Delayms1(30);
  7021  00186C  0E00               	movlw	0
  7022  00186E  0101               	movlb	1	; () banked
  7023  001870  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7024  001872  0E1E               	movlw	30
  7025  001874  6F27               	movwf	Delayms1@time& (0+255),b
  7026  001876  EC0C  F017         	call	_Delayms1	;wreg free
  7027                           
  7028                           ;07_May_WaterMeter_Main.c: 586: Enter=0;
  7029  00187A  0E00               	movlw	0
  7030  00187C  0100               	movlb	0	; () banked
  7031  00187E  6FA4               	movwf	_Enter& (0+255),b
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;07_May_WaterMeter_Main.c: 587: if(i>2){
  7035  001880  0E02               	movlw	2
  7036  001882  0101               	movlb	1	; () banked
  7037  001884  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7038  001886  D16B               	goto	l1013
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;07_May_WaterMeter_Main.c: 588: i=0;
  7042  001888  0E00               	movlw	0
  7043  00188A  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;07_May_WaterMeter_Main.c: 589: LcdDisplay(0x80,"Want to SAVE?   ");
  7047  00188C  0E58               	movlw	low STR_11
  7048  00188E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7049  001890  0E10               	movlw	high STR_11
  7050  001892  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7051  001894  0E80               	movlw	128
  7052  001896  EC6F  F016         	call	_LcdDisplay
  7053                           
  7054                           ;07_May_WaterMeter_Main.c: 590: LcdDisplay(0xC0,"  >Yes     No   ");
  7055  00189A  0E69               	movlw	low STR_12
  7056  00189C  0101               	movlb	1	; () banked
  7057  00189E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7058  0018A0  0E10               	movlw	high STR_12
  7059  0018A2  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7060  0018A4  0EC0               	movlw	192
  7061  0018A6  EC6F  F016         	call	_LcdDisplay
  7062                           
  7063                           ;07_May_WaterMeter_Main.c: 592: Increment=0;
  7064  0018AA  0E00               	movlw	0
  7065  0018AC  0100               	movlb	0	; () banked
  7066  0018AE  6F8D               	movwf	(_Increment+1)& (0+255),b
  7067  0018B0  0E00               	movlw	0
  7068  0018B2  6F8C               	movwf	_Increment& (0+255),b
  7069                           
  7070                           ;07_May_WaterMeter_Main.c: 593: Decrement=0;
  7071  0018B4  0E00               	movlw	0
  7072  0018B6  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7073  0018B8  0E00               	movlw	0
  7074  0018BA  6F8A               	movwf	_Decrement& (0+255),b
  7075                           
  7076                           ;07_May_WaterMeter_Main.c: 594: Enter=0;
  7077  0018BC  0E00               	movlw	0
  7078  0018BE  6FA4               	movwf	_Enter& (0+255),b
  7079                           
  7080                           ;07_May_WaterMeter_Main.c: 595: F_TimerCounting=1;
  7081  0018C0  0E01               	movlw	1
  7082  0018C2  6E02               	movwf	_F_TimerCounting,c
  7083  0018C4                     
  7084                           ;07_May_WaterMeter_Main.c: 597: if(Increment>=20){
  7085                           
  7086                           ; BSR set to: 0
  7087  0018C4  0100               	movlb	0	; () banked
  7088  0018C6  518D               	movf	(_Increment+1)& (0+255),w,b
  7089  0018C8  E104               	bnz	u3960
  7090  0018CA  0E14               	movlw	20
  7091  0018CC  5D8C               	subwf	_Increment& (0+255),w,b
  7092  0018CE  A0D8               	btfss	status,0,c
  7093  0018D0  D032               	goto	l975
  7094  0018D2                     u3960:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;07_May_WaterMeter_Main.c: 598: n++;
  7098  0018D2  0101               	movlb	1	; () banked
  7099  0018D4  2B37               	incf	Set_DeviceId@n& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 1
  7102                           ;07_May_WaterMeter_Main.c: 599: __nop();__nop();__nop();__nop();
  7103  0018D6  F000               	nop	
  7104  0018D8  F000               	nop	
  7105  0018DA  F000               	nop	
  7106  0018DC  F000               	nop	
  7107                           
  7108                           ;07_May_WaterMeter_Main.c: 600: if(n>2)
  7109  0018DE  0E02               	movlw	2
  7110  0018E0  0101               	movlb	1	; () banked
  7111  0018E2  6537               	cpfsgt	Set_DeviceId@n& (0+255),b
  7112  0018E4  D002               	goto	l976
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;07_May_WaterMeter_Main.c: 601: n=1;
  7116  0018E6  0E01               	movlw	1
  7117  0018E8  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7118  0018EA                     l976:
  7119                           
  7120                           ; BSR set to: 1
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;07_May_WaterMeter_Main.c: 602: while(PORTGX.tbits.tb1==0);
  7124  0018EA  A203               	btfss	_PORTGX,1,c
  7125  0018EC  D7FE               	goto	l976
  7126                           
  7127                           ;07_May_WaterMeter_Main.c: 603: Delayms1(30);
  7128  0018EE  0E00               	movlw	0
  7129  0018F0  0101               	movlb	1	; () banked
  7130  0018F2  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7131  0018F4  0E1E               	movlw	30
  7132  0018F6  6F27               	movwf	Delayms1@time& (0+255),b
  7133  0018F8  EC0C  F017         	call	_Delayms1	;wreg free
  7134                           
  7135                           ;07_May_WaterMeter_Main.c: 604: if(n==1){
  7136  0018FC  0101               	movlb	1	; () banked
  7137  0018FE  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7138  001900  A4D8               	btfss	status,2,c
  7139  001902  D008               	goto	l980
  7140                           
  7141                           ; BSR set to: 1
  7142                           ;07_May_WaterMeter_Main.c: 606: LcdDisplay(0xC0,"  >Yes     No   ");
  7143  001904  0E69               	movlw	low STR_12
  7144  001906  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7145  001908  0E10               	movlw	high STR_12
  7146  00190A  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7147  00190C  0EC0               	movlw	192
  7148  00190E  EC6F  F016         	call	_LcdDisplay
  7149                           
  7150                           ;07_May_WaterMeter_Main.c: 607: }
  7151  001912  D00C               	goto	l982
  7152  001914                     l980:
  7153                           
  7154                           ;07_May_WaterMeter_Main.c: 608: else if(n==2){
  7155  001914  0E02               	movlw	2
  7156  001916  0101               	movlb	1	; () banked
  7157  001918  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7158  00191A  A4D8               	btfss	status,2,c
  7159  00191C  D007               	goto	l982
  7160                           
  7161                           ; BSR set to: 1
  7162                           ;07_May_WaterMeter_Main.c: 610: LcdDisplay(0xC0,"   Yes    >No   ");
  7163  00191E  0E7A               	movlw	low STR_14
  7164  001920  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7165  001922  0E10               	movlw	high STR_14
  7166  001924  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7167  001926  0EC0               	movlw	192
  7168  001928  EC6F  F016         	call	_LcdDisplay
  7169  00192C                     l982:
  7170                           
  7171                           ;07_May_WaterMeter_Main.c: 611: }
  7172                           ;07_May_WaterMeter_Main.c: 612: Increment=0;
  7173  00192C  0E00               	movlw	0
  7174  00192E  0100               	movlb	0	; () banked
  7175  001930  6F8D               	movwf	(_Increment+1)& (0+255),b
  7176  001932  0E00               	movlw	0
  7177  001934  6F8C               	movwf	_Increment& (0+255),b
  7178  001936                     l975:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;07_May_WaterMeter_Main.c: 613: }
  7182                           ;07_May_WaterMeter_Main.c: 614: if(Decrement >= 20){
  7183                           
  7184                           ; BSR set to: 0
  7185  001936  518B               	movf	(_Decrement+1)& (0+255),w,b
  7186  001938  E104               	bnz	u4010
  7187  00193A  0E14               	movlw	20
  7188  00193C  5D8A               	subwf	_Decrement& (0+255),w,b
  7189  00193E  A0D8               	btfss	status,0,c
  7190  001940  D032               	goto	l983
  7191  001942                     u4010:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;07_May_WaterMeter_Main.c: 615: n--;
  7195  001942  0101               	movlb	1	; () banked
  7196  001944  0737               	decf	Set_DeviceId@n& (0+255),f,b
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;07_May_WaterMeter_Main.c: 616: __nop();__nop();__nop();__nop();
  7200  001946  F000               	nop	
  7201  001948  F000               	nop	
  7202  00194A  F000               	nop	
  7203  00194C  F000               	nop	
  7204                           
  7205                           ;07_May_WaterMeter_Main.c: 617: if(n<1)
  7206  00194E  0101               	movlb	1	; () banked
  7207  001950  5137               	movf	Set_DeviceId@n& (0+255),w,b
  7208  001952  A4D8               	btfss	status,2,c
  7209  001954  D002               	goto	l984
  7210                           
  7211                           ; BSR set to: 1
  7212                           ;07_May_WaterMeter_Main.c: 618: n=2;
  7213  001956  0E02               	movlw	2
  7214  001958  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7215  00195A                     l984:
  7216                           
  7217                           ; BSR set to: 1
  7218                           
  7219                           ; BSR set to: 1
  7220                           ;07_May_WaterMeter_Main.c: 619: while(PORTGX.tbits.tb2==0);
  7221  00195A  A403               	btfss	_PORTGX,2,c
  7222  00195C  D7FE               	goto	l984
  7223                           
  7224                           ;07_May_WaterMeter_Main.c: 620: Delayms1(30);
  7225  00195E  0E00               	movlw	0
  7226  001960  0101               	movlb	1	; () banked
  7227  001962  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7228  001964  0E1E               	movlw	30
  7229  001966  6F27               	movwf	Delayms1@time& (0+255),b
  7230  001968  EC0C  F017         	call	_Delayms1	;wreg free
  7231                           
  7232                           ;07_May_WaterMeter_Main.c: 621: if(n==1){
  7233  00196C  0101               	movlb	1	; () banked
  7234  00196E  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7235  001970  A4D8               	btfss	status,2,c
  7236  001972  D008               	goto	l988
  7237                           
  7238                           ; BSR set to: 1
  7239                           ;07_May_WaterMeter_Main.c: 623: LcdDisplay(0xC0,"  >Yes     No   ");
  7240  001974  0E69               	movlw	low STR_12
  7241  001976  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7242  001978  0E10               	movlw	high STR_12
  7243  00197A  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7244  00197C  0EC0               	movlw	192
  7245  00197E  EC6F  F016         	call	_LcdDisplay
  7246                           
  7247                           ;07_May_WaterMeter_Main.c: 624: }
  7248  001982  D00C               	goto	l990
  7249  001984                     l988:
  7250                           
  7251                           ;07_May_WaterMeter_Main.c: 625: else if(n==2){
  7252  001984  0E02               	movlw	2
  7253  001986  0101               	movlb	1	; () banked
  7254  001988  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7255  00198A  A4D8               	btfss	status,2,c
  7256  00198C  D007               	goto	l990
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;07_May_WaterMeter_Main.c: 627: LcdDisplay(0xC0,"   Yes    >No   ");
  7260  00198E  0E7A               	movlw	low STR_14
  7261  001990  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7262  001992  0E10               	movlw	high STR_14
  7263  001994  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7264  001996  0EC0               	movlw	192
  7265  001998  EC6F  F016         	call	_LcdDisplay
  7266  00199C                     l990:
  7267                           
  7268                           ;07_May_WaterMeter_Main.c: 628: }
  7269                           ;07_May_WaterMeter_Main.c: 629: Decrement=0;
  7270  00199C  0E00               	movlw	0
  7271  00199E  0100               	movlb	0	; () banked
  7272  0019A0  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7273  0019A2  0E00               	movlw	0
  7274  0019A4  6F8A               	movwf	_Decrement& (0+255),b
  7275  0019A6                     l983:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;07_May_WaterMeter_Main.c: 630: }
  7279                           ;07_May_WaterMeter_Main.c: 631: if(Enter >= 20){
  7280                           
  7281                           ; BSR set to: 0
  7282  0019A6  0E13               	movlw	19
  7283  0019A8  65A4               	cpfsgt	_Enter& (0+255),b
  7284  0019AA  D78C               	goto	l974
  7285  0019AC                     u4060:
  7286                           
  7287                           ; BSR set to: 0
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;07_May_WaterMeter_Main.c: 632: while(PORTGX.tbits.tb0==0);
  7291  0019AC  A003               	btfss	_PORTGX,0,c
  7292  0019AE  D7FE               	goto	u4060
  7293                           
  7294                           ;07_May_WaterMeter_Main.c: 633: Delayms1(30);
  7295  0019B0  0E00               	movlw	0
  7296  0019B2  0101               	movlb	1	; () banked
  7297  0019B4  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7298  0019B6  0E1E               	movlw	30
  7299  0019B8  6F27               	movwf	Delayms1@time& (0+255),b
  7300  0019BA  EC0C  F017         	call	_Delayms1	;wreg free
  7301                           
  7302                           ;07_May_WaterMeter_Main.c: 634: if(n==1){
  7303  0019BE  0101               	movlb	1	; () banked
  7304  0019C0  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7305  0019C2  A4D8               	btfss	status,2,c
  7306  0019C4  D09F               	goto	l995
  7307  0019C6                     u4080:
  7308                           
  7309                           ; BSR set to: 1
  7310                           ;07_May_WaterMeter_Main.c: 636: for(i=0;i<3;i++){
  7311                           
  7312                           ; BSR set to: 1
  7313                           
  7314                           ;07_May_WaterMeter_Main.c: 635: write_weight:
  7315  0019C6  0E00               	movlw	0
  7316  0019C8  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7317  0019CA                     l5437:
  7318                           
  7319                           ; BSR set to: 1
  7320  0019CA  0E02               	movlw	2
  7321  0019CC  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7322  0019CE  D001               	goto	l997
  7323  0019D0  D04C               	goto	u4130
  7324  0019D2                     l997:
  7325                           
  7326                           ; BSR set to: 1
  7327                           ;07_May_WaterMeter_Main.c: 637: if(i==0)
  7328                           
  7329                           ; BSR set to: 1
  7330  0019D2  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7331  0019D4  A4D8               	btfss	status,2,c
  7332  0019D6  D00D               	goto	l999
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;07_May_WaterMeter_Main.c: 638: ID1=100 * DeviceId_arr[i];
  7336  0019D8  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7337  0019DA  0D01               	mullw	1
  7338  0019DC  0EB5               	movlw	low _DeviceId_arr
  7339  0019DE  24F3               	addwf	prodl,w,c
  7340  0019E0  6ED9               	movwf	fsr2l,c
  7341  0019E2  0E00               	movlw	high _DeviceId_arr
  7342  0019E4  20F4               	addwfc	prodh,w,c
  7343  0019E6  6EDA               	movwf	fsr2h,c
  7344  0019E8  50DF               	movf	indf2,w,c
  7345  0019EA  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7346  0019EC  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7347  0019EE  0D64               	mullw	100
  7348  0019F0  D00F               	goto	L1
  7349  0019F2                     l999:
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;07_May_WaterMeter_Main.c: 639: else if(i==1)
  7353                           
  7354                           ; BSR set to: 1
  7355  0019F2  0538               	decf	Set_DeviceId@i& (0+255),w,b
  7356  0019F4  A4D8               	btfss	status,2,c
  7357  0019F6  D011               	goto	l1001
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;07_May_WaterMeter_Main.c: 640: ID1=10 * DeviceId_arr[i];
  7361  0019F8  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7362  0019FA  0D01               	mullw	1
  7363  0019FC  0EB5               	movlw	low _DeviceId_arr
  7364  0019FE  24F3               	addwf	prodl,w,c
  7365  001A00  6ED9               	movwf	fsr2l,c
  7366  001A02  0E00               	movlw	high _DeviceId_arr
  7367  001A04  20F4               	addwfc	prodh,w,c
  7368  001A06  6EDA               	movwf	fsr2h,c
  7369  001A08  50DF               	movf	indf2,w,c
  7370  001A0A  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7371  001A0C  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7372  001A0E  0D0A               	mullw	10
  7373  001A10                     L1:
  7374  001A10  CFF3 F133          	movff	prodl,Set_DeviceId@ID1
  7375  001A14  CFF4 F134          	movff	prodh,Set_DeviceId@ID1+1
  7376  001A18  D011               	goto	l1003
  7377  001A1A                     l1001:
  7378                           
  7379                           ; BSR set to: 1
  7380                           ;07_May_WaterMeter_Main.c: 641: else if(i==2)
  7381                           
  7382                           ; BSR set to: 1
  7383  001A1A  0E02               	movlw	2
  7384  001A1C  1938               	xorwf	Set_DeviceId@i& (0+255),w,b
  7385  001A1E  A4D8               	btfss	status,2,c
  7386  001A20  D00D               	goto	l1003
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;07_May_WaterMeter_Main.c: 642: ID1=DeviceId_arr[i];
  7390  001A22  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7391  001A24  0D01               	mullw	1
  7392  001A26  0EB5               	movlw	low _DeviceId_arr
  7393  001A28  24F3               	addwf	prodl,w,c
  7394  001A2A  6ED9               	movwf	fsr2l,c
  7395  001A2C  0E00               	movlw	high _DeviceId_arr
  7396  001A2E  20F4               	addwfc	prodh,w,c
  7397  001A30  6EDA               	movwf	fsr2h,c
  7398  001A32  50DF               	movf	indf2,w,c
  7399  001A34  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7400  001A36  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7401  001A38  6F33               	movwf	Set_DeviceId@ID1& (0+255),b
  7402  001A3A  6B34               	clrf	(Set_DeviceId@ID1+1)& (0+255),b
  7403  001A3C                     l1003:
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;07_May_WaterMeter_Main.c: 644: Write_b_eep2(0x0064 + i,DeviceId_arr[i]);
  7407                           
  7408                           ; BSR set to: 1
  7409                           
  7410                           ; BSR set to: 1
  7411                           
  7412                           ; BSR set to: 1
  7413  001A3C  0E64               	movlw	100
  7414  001A3E  2538               	addwf	Set_DeviceId@i& (0+255),w,b
  7415  001A40  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  7416  001A42  6B28               	clrf	(Write_b_eep2@badd+1)& (0+255),b
  7417  001A44  0E00               	movlw	0
  7418  001A46  2328               	addwfc	(Write_b_eep2@badd+1)& (0+255),f,b
  7419  001A48  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7420  001A4A  0D01               	mullw	1
  7421  001A4C  0EB5               	movlw	low _DeviceId_arr
  7422  001A4E  24F3               	addwf	prodl,w,c
  7423  001A50  6ED9               	movwf	fsr2l,c
  7424  001A52  0E00               	movlw	high _DeviceId_arr
  7425  001A54  20F4               	addwfc	prodh,w,c
  7426  001A56  6EDA               	movwf	fsr2h,c
  7427  001A58  50DF               	movf	indf2,w,c
  7428  001A5A  6F29               	movwf	Write_b_eep2@data& (0+255),b
  7429  001A5C  ECEE  F016         	call	_Write_b_eep2	;wreg free
  7430                           
  7431                           ;07_May_WaterMeter_Main.c: 645: Busy_eep2();
  7432  001A60  EC92  F019         	call	_Busy_eep2	;wreg free
  7433  001A64  0101               	movlb	1	; () banked
  7434  001A66  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  7435  001A68  D7B0               	goto	l5437
  7436  001A6A                     u4130:
  7437                           
  7438                           ; BSR set to: 1
  7439                           ;07_May_WaterMeter_Main.c: 646: }
  7440                           ;07_May_WaterMeter_Main.c: 647: for(i=0;i<3;i++){
  7441                           
  7442                           ; BSR set to: 1
  7443  001A6A  0E00               	movlw	0
  7444  001A6C  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7445  001A6E                     l5461:
  7446                           
  7447                           ; BSR set to: 1
  7448  001A6E  0E02               	movlw	2
  7449  001A70  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7450  001A72  D001               	goto	l1004
  7451  001A74  D041               	goto	u4180
  7452  001A76                     l1004:
  7453                           
  7454                           ; BSR set to: 1
  7455                           ;07_May_WaterMeter_Main.c: 648: if((Read_b_eep2(0x0064 + i)) == (DeviceId_arr[i])){
  7456                           
  7457                           ; BSR set to: 1
  7458  001A76  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7459  001A78  0D01               	mullw	1
  7460  001A7A  0EB5               	movlw	low _DeviceId_arr
  7461  001A7C  24F3               	addwf	prodl,w,c
  7462  001A7E  6ED9               	movwf	fsr2l,c
  7463  001A80  0E00               	movlw	high _DeviceId_arr
  7464  001A82  20F4               	addwfc	prodh,w,c
  7465  001A84  6EDA               	movwf	fsr2h,c
  7466  001A86  0E64               	movlw	100
  7467  001A88  2538               	addwf	Set_DeviceId@i& (0+255),w,b
  7468  001A8A  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  7469  001A8C  6B28               	clrf	(Read_b_eep2@badd+1)& (0+255),b
  7470  001A8E  0E00               	movlw	0
  7471  001A90  2328               	addwfc	(Read_b_eep2@badd+1)& (0+255),f,b
  7472  001A92  EC45  F019         	call	_Read_b_eep2	;wreg free
  7473  001A96  0101               	movlb	1	; () banked
  7474  001A98  6F32               	movwf	(??_Set_DeviceId+1)& (0+255),b
  7475  001A9A  50DE               	movf	postinc2,w,c
  7476  001A9C  1932               	xorwf	(??_Set_DeviceId+1)& (0+255),w,b
  7477  001A9E  A4D8               	btfss	status,2,c
  7478  001AA0  D022               	goto	l1006
  7479                           
  7480                           ; BSR set to: 1
  7481                           ;07_May_WaterMeter_Main.c: 649: if(i==2){
  7482  001AA2  0E02               	movlw	2
  7483  001AA4  1938               	xorwf	Set_DeviceId@i& (0+255),w,b
  7484  001AA6  A4D8               	btfss	status,2,c
  7485  001AA8  D024               	goto	l1009
  7486                           
  7487                           ; BSR set to: 1
  7488                           ;07_May_WaterMeter_Main.c: 650: F_TimerCounting=0;
  7489  001AAA  0E00               	movlw	0
  7490  001AAC  6E02               	movwf	_F_TimerCounting,c
  7491                           
  7492                           ;07_May_WaterMeter_Main.c: 651: F_Success = 1;
  7493  001AAE  0E01               	movlw	1
  7494  001AB0  0100               	movlb	0	; () banked
  7495  001AB2  6FA5               	movwf	_F_Success& (0+255),b
  7496                           
  7497                           ;07_May_WaterMeter_Main.c: 652: i=0;
  7498  001AB4  0E00               	movlw	0
  7499  001AB6  0101               	movlb	1	; () banked
  7500  001AB8  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7501                           
  7502                           ;07_May_WaterMeter_Main.c: 653: j=0;
  7503  001ABA  0E00               	movlw	0
  7504  001ABC  6F36               	movwf	Set_DeviceId@j& (0+255),b
  7505                           
  7506                           ; BSR set to: 1
  7507                           ;07_May_WaterMeter_Main.c: 654: lcd_clear();
  7508  001ABE  EC82  F019         	call	_lcd_clear	;wreg free
  7509                           
  7510                           ;07_May_WaterMeter_Main.c: 655: LcdDisplay(0x80,"Data Saved...   ");
  7511  001AC2  0E47               	movlw	low STR_17
  7512  001AC4  0101               	movlb	1	; () banked
  7513  001AC6  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7514  001AC8  0E10               	movlw	high STR_17
  7515  001ACA  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7516  001ACC  0E80               	movlw	128
  7517  001ACE  EC6F  F016         	call	_LcdDisplay
  7518                           
  7519                           ;07_May_WaterMeter_Main.c: 656: Delayms1(500);
  7520  001AD2  0E01               	movlw	1
  7521  001AD4  0101               	movlb	1	; () banked
  7522  001AD6  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7523  001AD8  0EF4               	movlw	244
  7524  001ADA  6F27               	movwf	Delayms1@time& (0+255),b
  7525  001ADC  EC0C  F017         	call	_Delayms1	;wreg free
  7526                           
  7527                           ;07_May_WaterMeter_Main.c: 657: lcd_clear();
  7528  001AE0  EC82  F019         	call	_lcd_clear	;wreg free
  7529                           
  7530                           ;07_May_WaterMeter_Main.c: 658: break;
  7531  001AE4  D009               	goto	u4180
  7532  001AE6                     l1006:
  7533                           
  7534                           ;07_May_WaterMeter_Main.c: 662: else{
  7535                           ;07_May_WaterMeter_Main.c: 663: fail++;
  7536  001AE6  0101               	movlb	1	; () banked
  7537  001AE8  2B35               	incf	Set_DeviceId@fail& (0+255),f,b
  7538                           
  7539                           ; BSR set to: 1
  7540                           ;07_May_WaterMeter_Main.c: 664: if(fail > 2){
  7541  001AEA  0E02               	movlw	2
  7542  001AEC  6535               	cpfsgt	Set_DeviceId@fail& (0+255),b
  7543  001AEE  D76B               	goto	u4080
  7544  001AF0  D00E               	goto	u4200
  7545  001AF2                     l1009:
  7546                           
  7547                           ; BSR set to: 1
  7548                           
  7549                           ; BSR set to: 1
  7550  001AF2  0101               	movlb	1	; () banked
  7551  001AF4  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  7552  001AF6  D7BB               	goto	l5461
  7553  001AF8                     u4180:
  7554                           
  7555                           ;07_May_WaterMeter_Main.c: 668: }
  7556                           ;07_May_WaterMeter_Main.c: 669: }
  7557                           ;07_May_WaterMeter_Main.c: 670: if(F_Success == 1)
  7558                           
  7559                           ; BSR set to: 1
  7560  001AF8  0100               	movlb	0	; () banked
  7561  001AFA  05A5               	decf	_F_Success& (0+255),w,b
  7562  001AFC  B4D8               	btfsc	status,2,c
  7563  001AFE  D02F               	goto	l1013
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;07_May_WaterMeter_Main.c: 672: Enter=0;
  7567                           
  7568                           ; BSR set to: 0
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;07_May_WaterMeter_Main.c: 671: break;
  7572  001B00  0E00               	movlw	0
  7573  001B02  6FA4               	movwf	_Enter& (0+255),b
  7574  001B04                     l995:
  7575                           
  7576                           ;07_May_WaterMeter_Main.c: 673: }
  7577                           ;07_May_WaterMeter_Main.c: 674: if(n==2){
  7578                           
  7579                           ; BSR set to: 0
  7580  001B04  0E02               	movlw	2
  7581  001B06  0101               	movlb	1	; () banked
  7582  001B08  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7583  001B0A  A4D8               	btfss	status,2,c
  7584  001B0C  D6DB               	goto	l974
  7585  001B0E                     u4200:
  7586                           
  7587                           ; BSR set to: 1
  7588                           ;07_May_WaterMeter_Main.c: 676: lcd_clear();
  7589                           
  7590                           ; BSR set to: 1
  7591                           
  7592                           ;07_May_WaterMeter_Main.c: 675: no:
  7593  001B0E  EC82  F019         	call	_lcd_clear	;wreg free
  7594                           
  7595                           ;07_May_WaterMeter_Main.c: 677: LcdDisplay(0x80,"  Device Id Is  ");
  7596  001B12  0EAD               	movlw	low STR_9
  7597  001B14  0101               	movlb	1	; () banked
  7598  001B16  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7599  001B18  0E10               	movlw	high STR_9
  7600  001B1A  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7601  001B1C  0E80               	movlw	128
  7602  001B1E  EC6F  F016         	call	_LcdDisplay
  7603                           
  7604                           ;07_May_WaterMeter_Main.c: 678: LcdDisplay(0xC0,"      000       ");
  7605  001B22  0E25               	movlw	low STR_10
  7606  001B24  0101               	movlb	1	; () banked
  7607  001B26  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7608  001B28  0E10               	movlw	high STR_10
  7609  001B2A  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7610  001B2C  0EC0               	movlw	192
  7611  001B2E  EC6F  F016         	call	_LcdDisplay
  7612                           
  7613                           ;07_May_WaterMeter_Main.c: 679: LcdCmd(0xC0+6);
  7614  001B32  0EC6               	movlw	198
  7615  001B34  EC9F  F018         	call	_LcdCmd
  7616                           
  7617                           ;07_May_WaterMeter_Main.c: 680: LcdCmd(0x0E);
  7618  001B38  0E0E               	movlw	14
  7619  001B3A  EC9F  F018         	call	_LcdCmd
  7620                           
  7621                           ;07_May_WaterMeter_Main.c: 681: n=0;
  7622  001B3E  0E00               	movlw	0
  7623  001B40  0101               	movlb	1	; () banked
  7624  001B42  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7625                           
  7626                           ; BSR set to: 1
  7627                           ;07_May_WaterMeter_Main.c: 682: Increment=0;
  7628  001B44  0E00               	movlw	0
  7629  001B46  0100               	movlb	0	; () banked
  7630  001B48  6F8D               	movwf	(_Increment+1)& (0+255),b
  7631  001B4A  0E00               	movlw	0
  7632  001B4C  6F8C               	movwf	_Increment& (0+255),b
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;07_May_WaterMeter_Main.c: 683: Decrement=0;
  7636  001B4E  0E00               	movlw	0
  7637  001B50  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7638  001B52  0E00               	movlw	0
  7639  001B54  6F8A               	movwf	_Decrement& (0+255),b
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;07_May_WaterMeter_Main.c: 684: Enter=0;
  7643  001B56  0E00               	movlw	0
  7644  001B58  6FA4               	movwf	_Enter& (0+255),b
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;07_May_WaterMeter_Main.c: 685: F_TimerCounting=1;
  7648  001B5A  0E01               	movlw	1
  7649  001B5C  6E02               	movwf	_F_TimerCounting,c
  7650  001B5E                     l1013:
  7651                           
  7652                           ;07_May_WaterMeter_Main.c: 687: }
  7653                           ;07_May_WaterMeter_Main.c: 688: }
  7654                           ;07_May_WaterMeter_Main.c: 689: }
  7655                           ;07_May_WaterMeter_Main.c: 690: }
  7656                           ;07_May_WaterMeter_Main.c: 691: }
  7657                           ;07_May_WaterMeter_Main.c: 692: if(F_Success == 1){
  7658                           
  7659                           ; BSR set to: 0
  7660                           
  7661                           ; BSR set to: 0
  7662                           
  7663                           ; BSR set to: 0
  7664  001B5E  0100               	movlb	0	; () banked
  7665  001B60  05A5               	decf	_F_Success& (0+255),w,b
  7666  001B62  A4D8               	btfss	status,2,c
  7667  001B64  D5F9               	goto	l958
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;07_May_WaterMeter_Main.c: 693: Module_ID=((DeviceId_arr[0]*100) + (DeviceId_arr[1]*10) 
      +                          + (DeviceId_arr[2]));
  7671  001B66  51B6               	movf	(_DeviceId_arr+1)& (0+255),w,b
  7672  001B68  0D0A               	mullw	10
  7673  001B6A  CFF3 F131          	movff	prodl,??_Set_DeviceId
  7674  001B6E  51B5               	movf	_DeviceId_arr& (0+255),w,b
  7675  001B70  0D64               	mullw	100
  7676  001B72  50F3               	movf	prodl,w,c
  7677  001B74  0101               	movlb	1	; () banked
  7678  001B76  2531               	addwf	??_Set_DeviceId& (0+255),w,b
  7679  001B78  0100               	movlb	0	; () banked
  7680  001B7A  25B7               	addwf	(_DeviceId_arr+2)& (0+255),w,b
  7681  001B7C  6FA3               	movwf	_Module_ID& (0+255),b
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;07_May_WaterMeter_Main.c: 694: Write_b_eep2(0x02,Module_ID);
  7685  001B7E  0E00               	movlw	0
  7686  001B80  0101               	movlb	1	; () banked
  7687  001B82  6F28               	movwf	(Write_b_eep2@badd+1)& (0+255),b
  7688  001B84  0E02               	movlw	2
  7689  001B86  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  7690  001B88  C0A3  F129         	movff	_Module_ID,Write_b_eep2@data
  7691  001B8C  ECEE  F016         	call	_Write_b_eep2	;wreg free
  7692                           
  7693                           ;07_May_WaterMeter_Main.c: 695: F_Success=0;
  7694  001B90  0E00               	movlw	0
  7695  001B92  0100               	movlb	0	; () banked
  7696  001B94  6FA5               	movwf	_F_Success& (0+255),b
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;07_May_WaterMeter_Main.c: 696: F_TimerCounting=1;
  7700  001B96  0E01               	movlw	1
  7701  001B98  6E02               	movwf	_F_TimerCounting,c
  7702                           
  7703                           ;07_May_WaterMeter_Main.c: 697: break;
  7704  001B9A  0012               	return	
  7705  001B9C                     __end_of_Set_DeviceId:
  7706                           	opt stack 0
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           intcon	equ	0xFF2
  7714                           postinc0	equ	0xFEE
  7715                           wreg	equ	0xFE8
  7716                           indf1	equ	0xFE7
  7717                           postdec1	equ	0xFE5
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           fsr2h	equ	0xFDA
  7723                           fsr2l	equ	0xFD9
  7724                           status	equ	0xFD8
  7725                           
  7726 ;; *************** function _lcd_clear *****************
  7727 ;; Defined at:
  7728 ;;		line 437 in file "07_May_WaterMeter_Main.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;Total ram usage:        0 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:   10
  7749 ;; This function calls:
  7750 ;;		_LcdCmd
  7751 ;; This function is called by:
  7752 ;;		_main
  7753 ;;		_Set_DeviceId
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text36
  7758  003304                     __ptext36:
  7759                           	opt stack 0
  7760  003304                     _lcd_clear:
  7761                           	opt stack 20
  7762                           
  7763                           ;07_May_WaterMeter_Main.c: 439: LcdCmd(0x01);
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;incstack = 0
  7767  003304  0E01               	movlw	1
  7768  003306  EC9F  F018         	call	_LcdCmd
  7769  00330A  0012               	return		;funcret
  7770  00330C                     __end_of_lcd_clear:
  7771                           	opt stack 0
  7772                           tblptru	equ	0xFF8
  7773                           tblptrh	equ	0xFF7
  7774                           tblptrl	equ	0xFF6
  7775                           tablat	equ	0xFF5
  7776                           prodh	equ	0xFF4
  7777                           prodl	equ	0xFF3
  7778                           intcon	equ	0xFF2
  7779                           postinc0	equ	0xFEE
  7780                           wreg	equ	0xFE8
  7781                           indf1	equ	0xFE7
  7782                           postdec1	equ	0xFE5
  7783                           fsr1h	equ	0xFE2
  7784                           fsr1l	equ	0xFE1
  7785                           indf2	equ	0xFDF
  7786                           postinc2	equ	0xFDE
  7787                           fsr2h	equ	0xFDA
  7788                           fsr2l	equ	0xFD9
  7789                           status	equ	0xFD8
  7790                           
  7791 ;; *************** function ___awmod *****************
  7792 ;; Defined at:
  7793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  dividend        2    0[BANK1 ] int 
  7796 ;;  divisor         2    2[BANK1 ] int 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  sign            1    5[BANK1 ] unsigned char 
  7799 ;;  counter         1    4[BANK1 ] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  2    0[BANK1 ] int 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7809 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;Total ram usage:        6 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    8
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;;		_Set_DeviceId
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text37
  7825  0027F6                     __ptext37:
  7826                           	opt stack 0
  7827  0027F6                     ___awmod:
  7828                           	opt stack 22
  7829                           
  7830                           ;incstack = 0
  7831  0027F6  0E00               	movlw	0
  7832  0027F8  0101               	movlb	1	; () banked
  7833  0027FA  6F2C               	movwf	___awmod@sign& (0+255),b
  7834                           
  7835                           ; BSR set to: 1
  7836  0027FC  AF28               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7837  0027FE  D006               	goto	l1200
  7838                           
  7839                           ; BSR set to: 1
  7840  002800  6D27               	negf	___awmod@dividend& (0+255),b
  7841  002802  1F28               	comf	(___awmod@dividend+1)& (0+255),f,b
  7842  002804  B0D8               	btfsc	status,0,c
  7843  002806  2B28               	incf	(___awmod@dividend+1)& (0+255),f,b
  7844                           
  7845                           ; BSR set to: 1
  7846  002808  0E01               	movlw	1
  7847  00280A  6F2C               	movwf	___awmod@sign& (0+255),b
  7848  00280C                     l1200:
  7849                           
  7850                           ; BSR set to: 1
  7851                           
  7852                           ; BSR set to: 1
  7853  00280C  AF2A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7854  00280E  D004               	goto	l1201
  7855                           
  7856                           ; BSR set to: 1
  7857  002810  6D29               	negf	___awmod@divisor& (0+255),b
  7858  002812  1F2A               	comf	(___awmod@divisor+1)& (0+255),f,b
  7859  002814  B0D8               	btfsc	status,0,c
  7860  002816  2B2A               	incf	(___awmod@divisor+1)& (0+255),f,b
  7861  002818                     l1201:
  7862                           
  7863                           ; BSR set to: 1
  7864                           
  7865                           ; BSR set to: 1
  7866  002818  5129               	movf	___awmod@divisor& (0+255),w,b
  7867  00281A  112A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7868  00281C  B4D8               	btfsc	status,2,c
  7869  00281E  D018               	goto	l1208
  7870                           
  7871                           ; BSR set to: 1
  7872  002820  0E01               	movlw	1
  7873  002822  6F2B               	movwf	___awmod@counter& (0+255),b
  7874  002824  D004               	goto	l1203
  7875  002826                     
  7876                           ; BSR set to: 1
  7877                           
  7878                           ; BSR set to: 1
  7879  002826  90D8               	bcf	status,0,c
  7880  002828  3729               	rlcf	___awmod@divisor& (0+255),f,b
  7881  00282A  372A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7882  00282C  2B2B               	incf	___awmod@counter& (0+255),f,b
  7883  00282E                     l1203:
  7884                           
  7885                           ; BSR set to: 1
  7886                           
  7887                           ; BSR set to: 1
  7888  00282E  AF2A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7889  002830  D7FA               	goto	l1204
  7890  002832                     u3760:
  7891                           
  7892                           ; BSR set to: 1
  7893                           
  7894                           ; BSR set to: 1
  7895                           
  7896                           ; BSR set to: 1
  7897  002832  5129               	movf	___awmod@divisor& (0+255),w,b
  7898  002834  5D27               	subwf	___awmod@dividend& (0+255),w,b
  7899  002836  512A               	movf	(___awmod@divisor+1)& (0+255),w,b
  7900  002838  5928               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7901  00283A  A0D8               	btfss	status,0,c
  7902  00283C  D004               	goto	l1207
  7903                           
  7904                           ; BSR set to: 1
  7905  00283E  5129               	movf	___awmod@divisor& (0+255),w,b
  7906  002840  5F27               	subwf	___awmod@dividend& (0+255),f,b
  7907  002842  512A               	movf	(___awmod@divisor+1)& (0+255),w,b
  7908  002844  5B28               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7909  002846                     l1207:
  7910                           
  7911                           ; BSR set to: 1
  7912                           
  7913                           ; BSR set to: 1
  7914  002846  90D8               	bcf	status,0,c
  7915  002848  332A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7916  00284A  3329               	rrcf	___awmod@divisor& (0+255),f,b
  7917                           
  7918                           ; BSR set to: 1
  7919  00284C  2F2B               	decfsz	___awmod@counter& (0+255),f,b
  7920  00284E  D7F1               	goto	u3760
  7921  002850                     l1208:
  7922                           
  7923                           ; BSR set to: 1
  7924                           
  7925                           ; BSR set to: 1
  7926                           
  7927                           ; BSR set to: 1
  7928  002850  512C               	movf	___awmod@sign& (0+255),w,b
  7929  002852  B4D8               	btfsc	status,2,c
  7930  002854  D004               	goto	l1209
  7931                           
  7932                           ; BSR set to: 1
  7933  002856  6D27               	negf	___awmod@dividend& (0+255),b
  7934  002858  1F28               	comf	(___awmod@dividend+1)& (0+255),f,b
  7935  00285A  B0D8               	btfsc	status,0,c
  7936  00285C  2B28               	incf	(___awmod@dividend+1)& (0+255),f,b
  7937  00285E                     l1209:
  7938                           
  7939                           ; BSR set to: 1
  7940                           
  7941                           ; BSR set to: 1
  7942  00285E  C127  F127         	movff	___awmod@dividend,?___awmod
  7943  002862  C128  F128         	movff	___awmod@dividend+1,?___awmod+1
  7944  002866  0012               	return	
  7945  002868                     __end_of___awmod:
  7946                           	opt stack 0
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           postinc0	equ	0xFEE
  7955                           wreg	equ	0xFE8
  7956                           indf1	equ	0xFE7
  7957                           postdec1	equ	0xFE5
  7958                           fsr1h	equ	0xFE2
  7959                           fsr1l	equ	0xFE1
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function _Write_b_eep2 *****************
  7967 ;; Defined at:
  7968 ;;		line 530 in file "zigbee.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  badd            2    0[BANK1 ] unsigned int 
  7971 ;;  data            1    2[BANK1 ] unsigned char 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  GIE_BIT_VAL     1    3[BANK1 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7983 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;Total ram usage:        4 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    8
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_main
  7994 ;;		_Set_DeviceId
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text38
  7999  002DDC                     __ptext38:
  8000                           	opt stack 0
  8001  002DDC                     _Write_b_eep2:
  8002                           	opt stack 22
  8003                           
  8004                           ;zigbee.c: 531: char GIE_BIT_VAL = 0;
  8005                           
  8006                           ; BSR set to: 1
  8007                           ;incstack = 0
  8008  002DDC  0E00               	movlw	0
  8009  002DDE  0101               	movlb	1	; () banked
  8010  002DE0  6F2A               	movwf	Write_b_eep2@GIE_BIT_VAL& (0+255),b
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;zigbee.c: 532: EEADR = (badd & 0x0FF);
  8014  002DE2  C127  FF62         	movff	Write_b_eep2@badd,3938	;volatile
  8015                           
  8016                           ; BSR set to: 1
  8017                           ;zigbee.c: 533: EEDATA = data;
  8018  002DE6  C129  FF61         	movff	Write_b_eep2@data,3937	;volatile
  8019                           
  8020                           ; BSR set to: 1
  8021                           ;zigbee.c: 534: EECON1bits.EEPGD = 0;
  8022  002DEA  9E7F               	bcf	3967,7,c	;volsfr
  8023                           
  8024                           ; BSR set to: 1
  8025                           ;zigbee.c: 535: EECON1bits.CFGS = 0;
  8026  002DEC  9C7F               	bcf	3967,6,c	;volsfr
  8027                           
  8028                           ; BSR set to: 1
  8029                           ;zigbee.c: 536: EECON1bits.WREN = 1;
  8030  002DEE  847F               	bsf	3967,2,c	;volsfr
  8031                           
  8032                           ; BSR set to: 1
  8033                           ;zigbee.c: 537: GIE_BIT_VAL = INTCONbits.GIE;
  8034  002DF0  0E00               	movlw	0
  8035  002DF2  BEF2               	btfsc	intcon,7,c	;volatile
  8036  002DF4  0E01               	movlw	1
  8037  002DF6  6F2A               	movwf	Write_b_eep2@GIE_BIT_VAL& (0+255),b
  8038                           
  8039                           ; BSR set to: 1
  8040                           ;zigbee.c: 538: INTCONbits.GIE = 0;
  8041  002DF8  9EF2               	bcf	intcon,7,c	;volatile
  8042                           
  8043                           ; BSR set to: 1
  8044                           ;zigbee.c: 539: EECON2 = 0x55;
  8045  002DFA  0E55               	movlw	85
  8046  002DFC  6E7E               	movwf	3966,c	;volsfr
  8047                           
  8048                           ; BSR set to: 1
  8049                           ;zigbee.c: 540: EECON2 = 0xAA;
  8050  002DFE  0EAA               	movlw	170
  8051  002E00  6E7E               	movwf	3966,c	;volsfr
  8052                           
  8053                           ; BSR set to: 1
  8054                           ;zigbee.c: 541: EECON1bits.WR = 1;
  8055  002E02  827F               	bsf	3967,1,c	;volsfr
  8056  002E04                     
  8057                           ; BSR set to: 1
  8058  002E04  B27F               	btfsc	3967,1,c	;volsfr
  8059  002E06  D7FE               	goto	l571
  8060                           
  8061                           ;zigbee.c: 543: INTCONbits.GIE = GIE_BIT_VAL;
  8062  002E08  0101               	movlb	1	; () banked
  8063  002E0A  B12A               	btfsc	Write_b_eep2@GIE_BIT_VAL& (0+255),0,b
  8064  002E0C  D002               	bra	u3625
  8065  002E0E  9EF2               	bcf	intcon,7,c	;volatile
  8066  002E10  D001               	bra	u3626
  8067  002E12                     u3625:
  8068  002E12  8EF2               	bsf	intcon,7,c	;volatile
  8069  002E14                     u3626:
  8070                           
  8071                           ;zigbee.c: 544: EECON1bits.WREN = 0;
  8072  002E14  947F               	bcf	3967,2,c	;volsfr
  8073  002E16  0012               	return		;funcret
  8074  002E18                     __end_of_Write_b_eep2:
  8075                           	opt stack 0
  8076                           tblptru	equ	0xFF8
  8077                           tblptrh	equ	0xFF7
  8078                           tblptrl	equ	0xFF6
  8079                           tablat	equ	0xFF5
  8080                           prodh	equ	0xFF4
  8081                           prodl	equ	0xFF3
  8082                           intcon	equ	0xFF2
  8083                           postinc0	equ	0xFEE
  8084                           wreg	equ	0xFE8
  8085                           indf1	equ	0xFE7
  8086                           postdec1	equ	0xFE5
  8087                           fsr1h	equ	0xFE2
  8088                           fsr1l	equ	0xFE1
  8089                           indf2	equ	0xFDF
  8090                           postinc2	equ	0xFDE
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8
  8094                           
  8095 ;; *************** function _Read_b_eep2 *****************
  8096 ;; Defined at:
  8097 ;;		line 547 in file "zigbee.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  badd            2    0[BANK1 ] unsigned int 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      unsigned char 
  8104 ;; Registers used:
  8105 ;;		wreg, status,2
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8111 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;Total ram usage:        2 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    8
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_main
  8122 ;;		_Set_DeviceId
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text39
  8127  00328A                     __ptext39:
  8128                           	opt stack 0
  8129  00328A                     _Read_b_eep2:
  8130                           	opt stack 21
  8131                           
  8132                           ;zigbee.c: 549: EEADR = (badd & 0x0FF);
  8133                           
  8134                           ;incstack = 0
  8135  00328A  C127  FF62         	movff	Read_b_eep2@badd,3938	;volatile
  8136                           
  8137                           ;zigbee.c: 550: EECON1bits.CFGS = 0;
  8138  00328E  9C7F               	bcf	3967,6,c	;volsfr
  8139                           
  8140                           ;zigbee.c: 551: EECON1bits.EEPGD = 0;
  8141  003290  9E7F               	bcf	3967,7,c	;volsfr
  8142                           
  8143                           ;zigbee.c: 552: EECON1bits.RD = 1;
  8144  003292  807F               	bsf	3967,0,c	;volsfr
  8145                           
  8146                           ;zigbee.c: 553: __nop();
  8147  003294  F000               	nop	
  8148                           
  8149                           ;zigbee.c: 554: __nop();
  8150  003296  F000               	nop	
  8151                           
  8152                           ;zigbee.c: 555: return (EEDATA);
  8153  003298  5061               	movf	3937,w,c	;volatile
  8154  00329A  0012               	return	
  8155  00329C                     __end_of_Read_b_eep2:
  8156                           	opt stack 0
  8157                           tblptru	equ	0xFF8
  8158                           tblptrh	equ	0xFF7
  8159                           tblptrl	equ	0xFF6
  8160                           tablat	equ	0xFF5
  8161                           prodh	equ	0xFF4
  8162                           prodl	equ	0xFF3
  8163                           intcon	equ	0xFF2
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           indf1	equ	0xFE7
  8167                           postdec1	equ	0xFE5
  8168                           fsr1h	equ	0xFE2
  8169                           fsr1l	equ	0xFE1
  8170                           indf2	equ	0xFDF
  8171                           postinc2	equ	0xFDE
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function _LcdDisplay *****************
  8177 ;; Defined at:
  8178 ;;		line 470 in file "07_May_WaterMeter_Main.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  LINE            1    wreg     unsigned char 
  8181 ;;  string          2    7[BANK1 ] PTR const unsigned char 
  8182 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(17), 
  8183 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  8184 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
  8185 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  8186 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  LINE            1    9[BANK1 ] unsigned char 
  8189 ;;  data            1    0        unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8199 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;Total ram usage:        3 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:   10
  8206 ;; This function calls:
  8207 ;;		_LcdCmd
  8208 ;;		_LcdData
  8209 ;; This function is called by:
  8210 ;;		_main
  8211 ;;		_Set_DeviceId
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text40
  8216  002CDE                     __ptext40:
  8217                           	opt stack 0
  8218  002CDE                     _LcdDisplay:
  8219                           	opt stack 19
  8220                           
  8221                           ;incstack = 0
  8222                           ;LcdDisplay@LINE stored from wreg
  8223  002CDE  0101               	movlb	1	; () banked
  8224  002CE0  6F30               	movwf	LcdDisplay@LINE& (0+255),b
  8225                           
  8226                           ;07_May_WaterMeter_Main.c: 472: unsigned char data;
  8227                           ;07_May_WaterMeter_Main.c: 473: LcdCmd(LINE);
  8228  002CE2  0101               	movlb	1	; () banked
  8229  002CE4  5130               	movf	LcdDisplay@LINE& (0+255),w,b
  8230  002CE6  EC9F  F018         	call	_LcdCmd
  8231                           
  8232                           ;07_May_WaterMeter_Main.c: 475: while(*string != '\0')
  8233  002CEA  D00D               	goto	l946
  8234  002CEC                     
  8235                           ;07_May_WaterMeter_Main.c: 476: {
  8236                           ;07_May_WaterMeter_Main.c: 477: LcdData(*string);
  8237  002CEC  C12E  FFF6         	movff	LcdDisplay@string,tblptrl
  8238  002CF0  C12F  FFF7         	movff	LcdDisplay@string+1,tblptrh
  8239  002CF4                     	if	0	;tblptru may be non-zero
  8240  002CF4                     	endif
  8241  002CF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8242  002CF4  0E00               	movlw	low (__mediumconst shr (0+16))
  8243  002CF6  6EF8               	movwf	tblptru,c
  8244  002CF8                     	endif
  8245  002CF8  0008               	tblrd		*
  8246  002CFA  50F5               	movf	tablat,w,c
  8247  002CFC  EC8F  F018         	call	_LcdData
  8248                           
  8249                           ;07_May_WaterMeter_Main.c: 478: string++;
  8250  002D00  0101               	movlb	1	; () banked
  8251  002D02  4B2E               	infsnz	LcdDisplay@string& (0+255),f,b
  8252  002D04  2B2F               	incf	(LcdDisplay@string+1)& (0+255),f,b
  8253  002D06                     l946:
  8254                           
  8255                           ; BSR set to: 1
  8256  002D06  C12E  FFF6         	movff	LcdDisplay@string,tblptrl
  8257  002D0A  C12F  FFF7         	movff	LcdDisplay@string+1,tblptrh
  8258  002D0E                     	if	0	;tblptru may be non-zero
  8259  002D0E                     	endif
  8260  002D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8261  002D0E  0E00               	movlw	low (__mediumconst shr (0+16))
  8262  002D10  6EF8               	movwf	tblptru,c
  8263  002D12                     	endif
  8264  002D12  0008               	tblrd		*
  8265  002D14  50F5               	movf	tablat,w,c
  8266  002D16  0900               	iorlw	0
  8267  002D18  B4D8               	btfsc	status,2,c
  8268  002D1A  0012               	return	
  8269  002D1C  D7E7               	goto	l947
  8270  002D1E                     __end_of_LcdDisplay:
  8271                           	opt stack 0
  8272                           tblptru	equ	0xFF8
  8273                           tblptrh	equ	0xFF7
  8274                           tblptrl	equ	0xFF6
  8275                           tablat	equ	0xFF5
  8276                           prodh	equ	0xFF4
  8277                           prodl	equ	0xFF3
  8278                           intcon	equ	0xFF2
  8279                           postinc0	equ	0xFEE
  8280                           wreg	equ	0xFE8
  8281                           indf1	equ	0xFE7
  8282                           postdec1	equ	0xFE5
  8283                           fsr1h	equ	0xFE2
  8284                           fsr1l	equ	0xFE1
  8285                           indf2	equ	0xFDF
  8286                           postinc2	equ	0xFDE
  8287                           fsr2h	equ	0xFDA
  8288                           fsr2l	equ	0xFD9
  8289                           status	equ	0xFD8
  8290                           
  8291 ;; *************** function _LcdData *****************
  8292 ;; Defined at:
  8293 ;;		line 418 in file "07_May_WaterMeter_Main.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  value           1    wreg     unsigned char 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  value           1    6[BANK1 ] unsigned char 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, status,2, status,0, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    9
  8314 ;; This function calls:
  8315 ;;		_Delayms
  8316 ;; This function is called by:
  8317 ;;		_main
  8318 ;;		_LcdDisplay
  8319 ;;		_Set_DeviceId
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text41
  8324  00311E                     __ptext41:
  8325                           	opt stack 0
  8326  00311E                     _LcdData:
  8327                           	opt stack 19
  8328                           
  8329                           ;incstack = 0
  8330                           ;LcdData@value stored from wreg
  8331  00311E  0101               	movlb	1	; () banked
  8332  003120  6F2D               	movwf	LcdData@value& (0+255),b
  8333                           
  8334                           ;07_May_WaterMeter_Main.c: 420: PORTE=value;
  8335  003122  C12D  FF84         	movff	LcdData@value,3972	;volatile
  8336                           
  8337                           ;07_May_WaterMeter_Main.c: 421: PORTFbits.RF1=1;
  8338  003126  8285               	bsf	3973,1,c	;volatile
  8339                           
  8340                           ;07_May_WaterMeter_Main.c: 422: __nop();
  8341  003128  F000               	nop	
  8342                           
  8343                           ;07_May_WaterMeter_Main.c: 423: PORTFbits.RF3=1;
  8344  00312A  8685               	bsf	3973,3,c	;volatile
  8345                           
  8346                           ;07_May_WaterMeter_Main.c: 424: Delayms(5);
  8347  00312C  0E00               	movlw	0
  8348  00312E  0101               	movlb	1	; () banked
  8349  003130  6F28               	movwf	(Delayms@time+1)& (0+255),b
  8350  003132  0E05               	movlw	5
  8351  003134  6F27               	movwf	Delayms@time& (0+255),b
  8352  003136  EC8F  F016         	call	_Delayms	;wreg free
  8353                           
  8354                           ;07_May_WaterMeter_Main.c: 425: PORTFbits.RF3=0;
  8355  00313A  9685               	bcf	3973,3,c	;volatile
  8356  00313C  0012               	return		;funcret
  8357  00313E                     __end_of_LcdData:
  8358                           	opt stack 0
  8359                           tblptru	equ	0xFF8
  8360                           tblptrh	equ	0xFF7
  8361                           tblptrl	equ	0xFF6
  8362                           tablat	equ	0xFF5
  8363                           prodh	equ	0xFF4
  8364                           prodl	equ	0xFF3
  8365                           intcon	equ	0xFF2
  8366                           postinc0	equ	0xFEE
  8367                           wreg	equ	0xFE8
  8368                           indf1	equ	0xFE7
  8369                           postdec1	equ	0xFE5
  8370                           fsr1h	equ	0xFE2
  8371                           fsr1l	equ	0xFE1
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function _Delayms1 *****************
  8379 ;; Defined at:
  8380 ;;		line 498 in file "zigbee.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  time            2    0[BANK1 ] unsigned int 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  j               2    4[BANK1 ] unsigned int 
  8385 ;;  i               2    2[BANK1 ] unsigned int 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8395 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;Total ram usage:        6 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    8
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_Set_DeviceId
  8406 ;;		_Delaysec
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text42
  8411  002E18                     __ptext42:
  8412                           	opt stack 0
  8413  002E18                     _Delayms1:
  8414                           	opt stack 21
  8415                           
  8416                           ;zigbee.c: 500: unsigned int i,j;
  8417                           ;zigbee.c: 501: for(i=0;i<time;i++)
  8418                           
  8419                           ;incstack = 0
  8420  002E18  0E00               	movlw	0
  8421  002E1A  0101               	movlb	1	; () banked
  8422  002E1C  6F2A               	movwf	(Delayms1@i+1)& (0+255),b
  8423  002E1E  0E00               	movlw	0
  8424  002E20  6F29               	movwf	Delayms1@i& (0+255),b
  8425  002E22  D00F               	goto	l551
  8426  002E24                     
  8427                           ; BSR set to: 1
  8428                           ;zigbee.c: 502: for(j=0;j<=500;j++);
  8429                           
  8430                           ; BSR set to: 1
  8431  002E24  0E00               	movlw	0
  8432  002E26  6F2C               	movwf	(Delayms1@j+1)& (0+255),b
  8433  002E28  0E00               	movlw	0
  8434  002E2A  6F2B               	movwf	Delayms1@j& (0+255),b
  8435  002E2C                     l4947:
  8436                           
  8437                           ; BSR set to: 1
  8438  002E2C  0EF5               	movlw	245
  8439  002E2E  5D2B               	subwf	Delayms1@j& (0+255),w,b
  8440  002E30  0E01               	movlw	1
  8441  002E32  592C               	subwfb	(Delayms1@j+1)& (0+255),w,b
  8442  002E34  B0D8               	btfsc	status,0,c
  8443  002E36  D003               	goto	u3590
  8444                           
  8445                           ; BSR set to: 1
  8446                           
  8447                           ; BSR set to: 1
  8448                           
  8449                           ; BSR set to: 1
  8450  002E38  4B2B               	infsnz	Delayms1@j& (0+255),f,b
  8451  002E3A  2B2C               	incf	(Delayms1@j+1)& (0+255),f,b
  8452  002E3C  D7F7               	goto	l4947
  8453  002E3E                     u3590:
  8454                           
  8455                           ; BSR set to: 1
  8456                           
  8457                           ; BSR set to: 1
  8458  002E3E  4B29               	infsnz	Delayms1@i& (0+255),f,b
  8459  002E40  2B2A               	incf	(Delayms1@i+1)& (0+255),f,b
  8460  002E42                     l551:
  8461                           
  8462                           ; BSR set to: 1
  8463                           
  8464                           ; BSR set to: 1
  8465  002E42  5127               	movf	Delayms1@time& (0+255),w,b
  8466  002E44  5D29               	subwf	Delayms1@i& (0+255),w,b
  8467  002E46  5128               	movf	(Delayms1@time+1)& (0+255),w,b
  8468  002E48  592A               	subwfb	(Delayms1@i+1)& (0+255),w,b
  8469  002E4A  B0D8               	btfsc	status,0,c
  8470  002E4C  0012               	return	
  8471  002E4E  D7EA               	goto	l552
  8472  002E50                     __end_of_Delayms1:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           indf1	equ	0xFE7
  8484                           postdec1	equ	0xFE5
  8485                           fsr1h	equ	0xFE2
  8486                           fsr1l	equ	0xFE1
  8487                           indf2	equ	0xFDF
  8488                           postinc2	equ	0xFDE
  8489                           fsr2h	equ	0xFDA
  8490                           fsr2l	equ	0xFD9
  8491                           status	equ	0xFD8
  8492                           
  8493 ;; *************** function _Busy_eep2 *****************
  8494 ;; Defined at:
  8495 ;;		line 557 in file "zigbee.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		None
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    8
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_Set_DeviceId
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text43
  8524  003324                     __ptext43:
  8525                           	opt stack 0
  8526  003324                     _Busy_eep2:
  8527                           	opt stack 21
  8528                           
  8529                           ;zigbee.c: 559: while(EECON1bits.WR);
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;incstack = 0
  8533  003324  B27F               	btfsc	3967,1,c	;volsfr
  8534  003326  D7FE               	goto	_Busy_eep2
  8535  003328  0012               	return	
  8536  00332A                     __end_of_Busy_eep2:
  8537                           	opt stack 0
  8538                           tblptru	equ	0xFF8
  8539                           tblptrh	equ	0xFF7
  8540                           tblptrl	equ	0xFF6
  8541                           tablat	equ	0xFF5
  8542                           prodh	equ	0xFF4
  8543                           prodl	equ	0xFF3
  8544                           intcon	equ	0xFF2
  8545                           postinc0	equ	0xFEE
  8546                           wreg	equ	0xFE8
  8547                           indf1	equ	0xFE7
  8548                           postdec1	equ	0xFE5
  8549                           fsr1h	equ	0xFE2
  8550                           fsr1l	equ	0xFE1
  8551                           indf2	equ	0xFDF
  8552                           postinc2	equ	0xFDE
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function _SYSTEM_Initialize *****************
  8558 ;; Defined at:
  8559 ;;		line 128 in file "mcc_generated_files/mcc.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:   10
  8580 ;; This function calls:
  8581 ;;		_EXT_INT_Initialize
  8582 ;;		_INTERRUPT_Initialize
  8583 ;;		_OSCILLATOR_Initialize
  8584 ;;		_PIN_MANAGER_Initialize
  8585 ;;		_TMR0_Initialize
  8586 ;; This function is called by:
  8587 ;;		_main
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text44
  8592  003216                     __ptext44:
  8593                           	opt stack 0
  8594  003216                     _SYSTEM_Initialize:
  8595                           	opt stack 20
  8596                           
  8597                           ;mcc.c: 130: INTERRUPT_Initialize();
  8598                           
  8599                           ;incstack = 0
  8600  003216  EC86  F019         	call	_INTERRUPT_Initialize	;wreg free
  8601                           
  8602                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  8603  00321A  ECEA  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  8604                           
  8605                           ;mcc.c: 132: OSCILLATOR_Initialize();
  8606  00321E  EC20  F019         	call	_OSCILLATOR_Initialize	;wreg free
  8607                           
  8608                           ;mcc.c: 133: EXT_INT_Initialize();
  8609  003222  EC42  F017         	call	_EXT_INT_Initialize	;wreg free
  8610                           
  8611                           ;mcc.c: 134: TMR0_Initialize();
  8612  003226  EC89  F017         	call	_TMR0_Initialize	;wreg free
  8613  00322A  0012               	return		;funcret
  8614  00322C                     __end_of_SYSTEM_Initialize:
  8615                           	opt stack 0
  8616                           tblptru	equ	0xFF8
  8617                           tblptrh	equ	0xFF7
  8618                           tblptrl	equ	0xFF6
  8619                           tablat	equ	0xFF5
  8620                           prodh	equ	0xFF4
  8621                           prodl	equ	0xFF3
  8622                           intcon	equ	0xFF2
  8623                           postinc0	equ	0xFEE
  8624                           wreg	equ	0xFE8
  8625                           indf1	equ	0xFE7
  8626                           postdec1	equ	0xFE5
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           fsr2h	equ	0xFDA
  8632                           fsr2l	equ	0xFD9
  8633                           status	equ	0xFD8
  8634                           
  8635 ;; *************** function _TMR0_Initialize *****************
  8636 ;; Defined at:
  8637 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      void 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    9
  8658 ;; This function calls:
  8659 ;;		_TMR0_SetInterruptHandler
  8660 ;; This function is called by:
  8661 ;;		_SYSTEM_Initialize
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text45
  8666  002F12                     __ptext45:
  8667                           	opt stack 0
  8668  002F12                     _TMR0_Initialize:
  8669                           	opt stack 20
  8670                           
  8671                           ;tmr0.c: 71: TMR0H = 0x00;
  8672                           
  8673                           ;incstack = 0
  8674  002F12  0E00               	movlw	0
  8675  002F14  6ED7               	movwf	4055,c	;volatile
  8676                           
  8677                           ;tmr0.c: 74: TMR0L = 0x02;
  8678  002F16  0E02               	movlw	2
  8679  002F18  6ED6               	movwf	4054,c	;volatile
  8680                           
  8681                           ;tmr0.c: 78: timer0ReloadVal = 2;
  8682  002F1A  0E02               	movlw	2
  8683  002F1C  0100               	movlb	0	; () banked
  8684  002F1E  6FAF               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  8688  002F20  94F2               	bcf	intcon,2,c	;volatile
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  8692  002F22  8AF2               	bsf	intcon,5,c	;volatile
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8696  002F24  0E2A               	movlw	low _TMR0_DefaultInterruptHandler
  8697  002F26  0101               	movlb	1	; () banked
  8698  002F28  6F27               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8699  002F2A  0E33               	movlw	high _TMR0_DefaultInterruptHandler
  8700  002F2C  6F28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8701  002F2E  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  8702  002F30  6F29               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8703  002F32  EC65  F019         	call	_TMR0_SetInterruptHandler	;wreg free
  8704                           
  8705                           ;tmr0.c: 90: T0CON = 0xD7;
  8706  002F36  0ED7               	movlw	215
  8707  002F38  6ED5               	movwf	4053,c	;volatile
  8708  002F3A  0012               	return		;funcret
  8709  002F3C                     __end_of_TMR0_Initialize:
  8710                           	opt stack 0
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           postinc0	equ	0xFEE
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postdec1	equ	0xFE5
  8722                           fsr1h	equ	0xFE2
  8723                           fsr1l	equ	0xFE1
  8724                           indf2	equ	0xFDF
  8725                           postinc2	equ	0xFDE
  8726                           fsr2h	equ	0xFDA
  8727                           fsr2l	equ	0xFD9
  8728                           status	equ	0xFD8
  8729                           
  8730 ;; *************** function _TMR0_SetInterruptHandler *****************
  8731 ;; Defined at:
  8732 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  8735 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg, status,2, status,0
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8747 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;Total ram usage:        3 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:    8
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_TMR0_Initialize
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text46
  8762  0032CA                     __ptext46:
  8763                           	opt stack 0
  8764  0032CA                     _TMR0_SetInterruptHandler:
  8765                           	opt stack 20
  8766                           
  8767                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
  8768                           
  8769                           ;incstack = 0
  8770  0032CA  C127  F073         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8771  0032CE  C128  F074         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8772  0032D2  C129  F075         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  8773  0032D6  0012               	return		;funcret
  8774  0032D8                     __end_of_TMR0_SetInterruptHandler:
  8775                           	opt stack 0
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           postinc0	equ	0xFEE
  8784                           wreg	equ	0xFE8
  8785                           indf1	equ	0xFE7
  8786                           postdec1	equ	0xFE5
  8787                           fsr1h	equ	0xFE2
  8788                           fsr1l	equ	0xFE1
  8789                           indf2	equ	0xFDF
  8790                           postinc2	equ	0xFDE
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _PIN_MANAGER_Initialize *****************
  8796 ;; Defined at:
  8797 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    8
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_SYSTEM_Initialize
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text47
  8826  002BD4                     __ptext47:
  8827                           	opt stack 0
  8828  002BD4                     _PIN_MANAGER_Initialize:
  8829                           	opt stack 21
  8830                           
  8831                           ;pin_manager.c: 57: LATE = 0x00;
  8832                           
  8833                           ;incstack = 0
  8834  002BD4  0E00               	movlw	0
  8835  002BD6  6E8D               	movwf	3981,c	;volatile
  8836                           
  8837                           ;pin_manager.c: 58: LATD = 0x00;
  8838  002BD8  0E00               	movlw	0
  8839  002BDA  6E8C               	movwf	3980,c	;volatile
  8840                           
  8841                           ;pin_manager.c: 59: LATA = 0x0F;
  8842  002BDC  0E0F               	movlw	15
  8843  002BDE  6E89               	movwf	3977,c	;volatile
  8844                           
  8845                           ;pin_manager.c: 60: LATF = 0x10;
  8846  002BE0  0E10               	movlw	16
  8847  002BE2  6E8E               	movwf	3982,c	;volatile
  8848                           
  8849                           ;pin_manager.c: 61: LATB = 0x00;
  8850  002BE4  0E00               	movlw	0
  8851  002BE6  6E8A               	movwf	3978,c	;volatile
  8852                           
  8853                           ;pin_manager.c: 62: LATG = 0x07;
  8854  002BE8  0E07               	movlw	7
  8855  002BEA  6E8F               	movwf	3983,c	;volatile
  8856                           
  8857                           ;pin_manager.c: 63: LATC = 0x03;
  8858  002BEC  0E03               	movlw	3
  8859  002BEE  6E8B               	movwf	3979,c	;volatile
  8860                           
  8861                           ;pin_manager.c: 68: TRISE = 0x00;
  8862  002BF0  0E00               	movlw	0
  8863  002BF2  6E96               	movwf	3990,c	;volatile
  8864                           
  8865                           ;pin_manager.c: 69: TRISF = 0xE0;
  8866  002BF4  0EE0               	movlw	224
  8867  002BF6  6E97               	movwf	3991,c	;volatile
  8868                           
  8869                           ;pin_manager.c: 70: TRISA = 0xC0;
  8870  002BF8  0EC0               	movlw	192
  8871  002BFA  6E92               	movwf	3986,c	;volatile
  8872                           
  8873                           ;pin_manager.c: 71: TRISG = 0x1F;
  8874  002BFC  0E1F               	movlw	31
  8875  002BFE  6E98               	movwf	3992,c	;volatile
  8876                           
  8877                           ;pin_manager.c: 72: TRISB = 0xFF;
  8878  002C00  6893               	setf	3987,c	;volatile
  8879                           
  8880                           ;pin_manager.c: 73: TRISC = 0xFC;
  8881  002C02  0EFC               	movlw	252
  8882  002C04  6E94               	movwf	3988,c	;volatile
  8883                           
  8884                           ;pin_manager.c: 74: TRISD = 0xFF;
  8885  002C06  6895               	setf	3989,c	;volatile
  8886                           
  8887                           ;pin_manager.c: 79: ANCON0 = 0x20;
  8888  002C08  0E20               	movlw	32
  8889  002C0A  010F               	movlb	15	; () banked
  8890  002C0C  6F25               	movwf	37,b	;volatile
  8891                           
  8892                           ;pin_manager.c: 80: ANCON1 = 0x0C;
  8893  002C0E  0E0C               	movlw	12
  8894  002C10  6F24               	movwf	36,b	;volatile
  8895                           
  8896                           ;pin_manager.c: 81: ANCON2 = 0x03;
  8897  002C12  0E03               	movlw	3
  8898  002C14  6F23               	movwf	35,b	;volatile
  8899                           
  8900                           ; BSR set to: 15
  8901  002C16  0012               	return		;funcret
  8902  002C18                     __end_of_PIN_MANAGER_Initialize:
  8903                           	opt stack 0
  8904                           tblptru	equ	0xFF8
  8905                           tblptrh	equ	0xFF7
  8906                           tblptrl	equ	0xFF6
  8907                           tablat	equ	0xFF5
  8908                           prodh	equ	0xFF4
  8909                           prodl	equ	0xFF3
  8910                           intcon	equ	0xFF2
  8911                           postinc0	equ	0xFEE
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           postdec1	equ	0xFE5
  8915                           fsr1h	equ	0xFE2
  8916                           fsr1l	equ	0xFE1
  8917                           indf2	equ	0xFDF
  8918                           postinc2	equ	0xFDE
  8919                           fsr2h	equ	0xFDA
  8920                           fsr2l	equ	0xFD9
  8921                           status	equ	0xFD8
  8922                           
  8923 ;; *************** function _OSCILLATOR_Initialize *****************
  8924 ;; Defined at:
  8925 ;;		line 137 in file "mcc_generated_files/mcc.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    8
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_SYSTEM_Initialize
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text48
  8954  003240                     __ptext48:
  8955                           	opt stack 0
  8956  003240                     _OSCILLATOR_Initialize:
  8957                           	opt stack 21
  8958                           
  8959                           ;mcc.c: 140: OSCCON = 0x60;
  8960                           
  8961                           ; BSR set to: 15
  8962                           ;incstack = 0
  8963  003240  0E60               	movlw	96
  8964  003242  6ED3               	movwf	4051,c	;volatile
  8965                           
  8966                           ;mcc.c: 142: OSCCON2 = 0x00;
  8967  003244  0E00               	movlw	0
  8968  003246  6E64               	movwf	3940,c	;volatile
  8969                           
  8970                           ;mcc.c: 144: OSCTUNE = 0x00;
  8971  003248  0E00               	movlw	0
  8972  00324A  6E9B               	movwf	3995,c	;volatile
  8973                           
  8974                           ;mcc.c: 146: REFOCON = 0x00;
  8975  00324C  0E00               	movlw	0
  8976  00324E  010F               	movlb	15	; () banked
  8977  003250  6F2A               	movwf	42,b	;volatile
  8978                           
  8979                           ; BSR set to: 15
  8980  003252  0012               	return		;funcret
  8981  003254                     __end_of_OSCILLATOR_Initialize:
  8982                           	opt stack 0
  8983                           tblptru	equ	0xFF8
  8984                           tblptrh	equ	0xFF7
  8985                           tblptrl	equ	0xFF6
  8986                           tablat	equ	0xFF5
  8987                           prodh	equ	0xFF4
  8988                           prodl	equ	0xFF3
  8989                           intcon	equ	0xFF2
  8990                           postinc0	equ	0xFEE
  8991                           wreg	equ	0xFE8
  8992                           indf1	equ	0xFE7
  8993                           postdec1	equ	0xFE5
  8994                           fsr1h	equ	0xFE2
  8995                           fsr1l	equ	0xFE1
  8996                           indf2	equ	0xFDF
  8997                           postinc2	equ	0xFDE
  8998                           fsr2h	equ	0xFDA
  8999                           fsr2l	equ	0xFD9
  9000                           status	equ	0xFD8
  9001                           
  9002 ;; *************** function _INTERRUPT_Initialize *****************
  9003 ;; Defined at:
  9004 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		None
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;Total ram usage:        0 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    8
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_SYSTEM_Initialize
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text49
  9033  00330C                     __ptext49:
  9034                           	opt stack 0
  9035  00330C                     _INTERRUPT_Initialize:
  9036                           	opt stack 21
  9037                           
  9038                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  9039                           
  9040                           ; BSR set to: 15
  9041                           ;incstack = 0
  9042  00330C  8ED0               	bsf	4048,7,c	;volatile
  9043                           
  9044                           ;interrupt_manager.c: 62: INTCON3bits.INT1IP = 0;
  9045  00330E  9CF0               	bcf	intcon3,6,c	;volatile
  9046                           
  9047                           ;interrupt_manager.c: 65: INTCON2bits.TMR0IP = 0;
  9048  003310  94F1               	bcf	intcon2,2,c	;volatile
  9049  003312  0012               	return		;funcret
  9050  003314                     __end_of_INTERRUPT_Initialize:
  9051                           	opt stack 0
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           intcon2	equ	0xFF1
  9060                           intcon3	equ	0xFF0
  9061                           postinc0	equ	0xFEE
  9062                           wreg	equ	0xFE8
  9063                           indf1	equ	0xFE7
  9064                           postdec1	equ	0xFE5
  9065                           fsr1h	equ	0xFE2
  9066                           fsr1l	equ	0xFE1
  9067                           indf2	equ	0xFDF
  9068                           postinc2	equ	0xFDE
  9069                           fsr2h	equ	0xFDA
  9070                           fsr2l	equ	0xFD9
  9071                           status	equ	0xFD8
  9072                           
  9073 ;; *************** function _EXT_INT_Initialize *****************
  9074 ;; Defined at:
  9075 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;Total ram usage:        0 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    9
  9096 ;; This function calls:
  9097 ;;		_INT0_SetInterruptHandler
  9098 ;;		_INT1_SetInterruptHandler
  9099 ;; This function is called by:
  9100 ;;		_SYSTEM_Initialize
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text50
  9105  002E84                     __ptext50:
  9106                           	opt stack 0
  9107  002E84                     _EXT_INT_Initialize:
  9108                           	opt stack 20
  9109                           
  9110                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  9111                           
  9112                           ;incstack = 0
  9113  002E84  90F0               	bcf	intcon3,0,c	;volatile
  9114                           
  9115                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  9116  002E86  8AF1               	bsf	intcon2,5,c	;volatile
  9117                           
  9118                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  9119  002E88  0E2C               	movlw	low _INT1_DefaultInterruptHandler
  9120  002E8A  0101               	movlb	1	; () banked
  9121  002E8C  6F27               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9122  002E8E  0E33               	movlw	high _INT1_DefaultInterruptHandler
  9123  002E90  6F28               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9124  002E92  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  9125  002E94  6F29               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9126  002E96  EC6C  F019         	call	_INT1_SetInterruptHandler	;wreg free
  9127                           
  9128                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  9129  002E9A  86F0               	bsf	intcon3,3,c	;volatile
  9130                           
  9131                           ;ext_int.c: 100: (INTCONbits.INT0IF = 0);
  9132  002E9C  92F2               	bcf	intcon,1,c	;volatile
  9133                           
  9134                           ;ext_int.c: 101: (INTCON2bits.INTEDG0 = 0);
  9135  002E9E  9CF1               	bcf	intcon2,6,c	;volatile
  9136                           
  9137                           ;ext_int.c: 103: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  9138  002EA0  0E2E               	movlw	low _INT0_DefaultInterruptHandler
  9139  002EA2  0101               	movlb	1	; () banked
  9140  002EA4  6F27               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  9141  002EA6  0E33               	movlw	high _INT0_DefaultInterruptHandler
  9142  002EA8  6F28               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9143  002EAA  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  9144  002EAC  6F29               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9145  002EAE  EC73  F019         	call	_INT0_SetInterruptHandler	;wreg free
  9146                           
  9147                           ;ext_int.c: 104: (INTCONbits.INT0IE = 1);
  9148  002EB2  88F2               	bsf	intcon,4,c	;volatile
  9149  002EB4  0012               	return		;funcret
  9150  002EB6                     __end_of_EXT_INT_Initialize:
  9151                           	opt stack 0
  9152                           tblptru	equ	0xFF8
  9153                           tblptrh	equ	0xFF7
  9154                           tblptrl	equ	0xFF6
  9155                           tablat	equ	0xFF5
  9156                           prodh	equ	0xFF4
  9157                           prodl	equ	0xFF3
  9158                           intcon	equ	0xFF2
  9159                           intcon2	equ	0xFF1
  9160                           intcon3	equ	0xFF0
  9161                           postinc0	equ	0xFEE
  9162                           wreg	equ	0xFE8
  9163                           indf1	equ	0xFE7
  9164                           postdec1	equ	0xFE5
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function _INT1_SetInterruptHandler *****************
  9174 ;; Defined at:
  9175 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  9178 ;;		 -> INT1_DefaultInterruptHandler(1), 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9190 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;Total ram usage:        3 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    8
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_EXT_INT_Initialize
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text51
  9205  0032D8                     __ptext51:
  9206                           	opt stack 0
  9207  0032D8                     _INT1_SetInterruptHandler:
  9208                           	opt stack 20
  9209                           
  9210                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  9211                           
  9212                           ;incstack = 0
  9213  0032D8  C127  F070         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  9214  0032DC  C128  F071         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  9215  0032E0  C129  F072         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  9216  0032E4  0012               	return		;funcret
  9217  0032E6                     __end_of_INT1_SetInterruptHandler:
  9218                           	opt stack 0
  9219                           tblptru	equ	0xFF8
  9220                           tblptrh	equ	0xFF7
  9221                           tblptrl	equ	0xFF6
  9222                           tablat	equ	0xFF5
  9223                           prodh	equ	0xFF4
  9224                           prodl	equ	0xFF3
  9225                           intcon	equ	0xFF2
  9226                           intcon2	equ	0xFF1
  9227                           intcon3	equ	0xFF0
  9228                           postinc0	equ	0xFEE
  9229                           wreg	equ	0xFE8
  9230                           indf1	equ	0xFE7
  9231                           postdec1	equ	0xFE5
  9232                           fsr1h	equ	0xFE2
  9233                           fsr1l	equ	0xFE1
  9234                           indf2	equ	0xFDF
  9235                           postinc2	equ	0xFDE
  9236                           fsr2h	equ	0xFDA
  9237                           fsr2l	equ	0xFD9
  9238                           status	equ	0xFD8
  9239                           
  9240 ;; *************** function _INT0_SetInterruptHandler *****************
  9241 ;; Defined at:
  9242 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  9245 ;;		 -> INT0_DefaultInterruptHandler(1), 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;		None
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1    wreg      void 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9257 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;Total ram usage:        3 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    8
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_EXT_INT_Initialize
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text52
  9272  0032E6                     __ptext52:
  9273                           	opt stack 0
  9274  0032E6                     _INT0_SetInterruptHandler:
  9275                           	opt stack 20
  9276                           
  9277                           ;ext_int.c: 78: INT0_InterruptHandler = InterruptHandler;
  9278                           
  9279                           ;incstack = 0
  9280  0032E6  C127  F06D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  9281  0032EA  C128  F06E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  9282  0032EE  C129  F06F         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  9283  0032F2  0012               	return		;funcret
  9284  0032F4                     __end_of_INT0_SetInterruptHandler:
  9285                           	opt stack 0
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           intcon2	equ	0xFF1
  9294                           intcon3	equ	0xFF0
  9295                           postinc0	equ	0xFEE
  9296                           wreg	equ	0xFE8
  9297                           indf1	equ	0xFE7
  9298                           postdec1	equ	0xFE5
  9299                           fsr1h	equ	0xFE2
  9300                           fsr1l	equ	0xFE1
  9301                           indf2	equ	0xFDF
  9302                           postinc2	equ	0xFDE
  9303                           fsr2h	equ	0xFDA
  9304                           fsr2l	equ	0xFD9
  9305                           status	equ	0xFD8
  9306                           
  9307 ;; *************** function _LcdInit *****************
  9308 ;; Defined at:
  9309 ;;		line 442 in file "07_May_WaterMeter_Main.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;		None
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  1    wreg      void 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, cstack
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;Total ram usage:        0 bytes
  9328 ;; Hardware stack levels used:    1
  9329 ;; Hardware stack levels required when called:   10
  9330 ;; This function calls:
  9331 ;;		_Delayms
  9332 ;;		_LcdCmd
  9333 ;; This function is called by:
  9334 ;;		_main
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text53
  9339  002AA4                     __ptext53:
  9340                           	opt stack 0
  9341  002AA4                     _LcdInit:
  9342                           	opt stack 20
  9343                           
  9344                           ;07_May_WaterMeter_Main.c: 444: LcdCmd(0x38);
  9345                           
  9346                           ;incstack = 0
  9347  002AA4  0E38               	movlw	56
  9348  002AA6  EC9F  F018         	call	_LcdCmd
  9349                           
  9350                           ;07_May_WaterMeter_Main.c: 445: Delayms(10);
  9351  002AAA  0E00               	movlw	0
  9352  002AAC  0101               	movlb	1	; () banked
  9353  002AAE  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9354  002AB0  0E0A               	movlw	10
  9355  002AB2  6F27               	movwf	Delayms@time& (0+255),b
  9356  002AB4  EC8F  F016         	call	_Delayms	;wreg free
  9357                           
  9358                           ;07_May_WaterMeter_Main.c: 446: LcdCmd(0x0E);
  9359  002AB8  0E0E               	movlw	14
  9360  002ABA  EC9F  F018         	call	_LcdCmd
  9361                           
  9362                           ;07_May_WaterMeter_Main.c: 447: Delayms(10);
  9363  002ABE  0E00               	movlw	0
  9364  002AC0  0101               	movlb	1	; () banked
  9365  002AC2  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9366  002AC4  0E0A               	movlw	10
  9367  002AC6  6F27               	movwf	Delayms@time& (0+255),b
  9368  002AC8  EC8F  F016         	call	_Delayms	;wreg free
  9369                           
  9370                           ;07_May_WaterMeter_Main.c: 448: LcdCmd(0x01);
  9371  002ACC  0E01               	movlw	1
  9372  002ACE  EC9F  F018         	call	_LcdCmd
  9373                           
  9374                           ;07_May_WaterMeter_Main.c: 449: Delayms(10);
  9375  002AD2  0E00               	movlw	0
  9376  002AD4  0101               	movlb	1	; () banked
  9377  002AD6  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9378  002AD8  0E0A               	movlw	10
  9379  002ADA  6F27               	movwf	Delayms@time& (0+255),b
  9380  002ADC  EC8F  F016         	call	_Delayms	;wreg free
  9381                           
  9382                           ;07_May_WaterMeter_Main.c: 450: LcdCmd(0x80);
  9383  002AE0  0E80               	movlw	128
  9384  002AE2  EC9F  F018         	call	_LcdCmd
  9385                           
  9386                           ;07_May_WaterMeter_Main.c: 451: Delayms(10);
  9387  002AE6  0E00               	movlw	0
  9388  002AE8  0101               	movlb	1	; () banked
  9389  002AEA  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9390  002AEC  0E0A               	movlw	10
  9391  002AEE  6F27               	movwf	Delayms@time& (0+255),b
  9392  002AF0  EC8F  F016         	call	_Delayms	;wreg free
  9393  002AF4  0012               	return		;funcret
  9394  002AF6                     __end_of_LcdInit:
  9395                           	opt stack 0
  9396                           tblptru	equ	0xFF8
  9397                           tblptrh	equ	0xFF7
  9398                           tblptrl	equ	0xFF6
  9399                           tablat	equ	0xFF5
  9400                           prodh	equ	0xFF4
  9401                           prodl	equ	0xFF3
  9402                           intcon	equ	0xFF2
  9403                           intcon2	equ	0xFF1
  9404                           intcon3	equ	0xFF0
  9405                           postinc0	equ	0xFEE
  9406                           wreg	equ	0xFE8
  9407                           indf1	equ	0xFE7
  9408                           postdec1	equ	0xFE5
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function _LcdCmd *****************
  9418 ;; Defined at:
  9419 ;;		line 427 in file "07_May_WaterMeter_Main.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  value           1    wreg     unsigned char 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  value           1    6[BANK1 ] unsigned char 
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		wreg, status,2, status,0, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;Total ram usage:        1 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:    9
  9440 ;; This function calls:
  9441 ;;		_Delayms
  9442 ;; This function is called by:
  9443 ;;		_main
  9444 ;;		_lcd_off_cursor
  9445 ;;		_lcd_clear
  9446 ;;		_LcdInit
  9447 ;;		_LcdDisplay
  9448 ;;		_Set_DeviceId
  9449 ;;		_scroll
  9450 ;;		_stop_scroll
  9451 ;;		_lcd_on_cursor
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text54
  9456  00313E                     __ptext54:
  9457                           	opt stack 0
  9458  00313E                     _LcdCmd:
  9459                           	opt stack 20
  9460                           
  9461                           ;incstack = 0
  9462                           ;LcdCmd@value stored from wreg
  9463  00313E  0101               	movlb	1	; () banked
  9464  003140  6F2D               	movwf	LcdCmd@value& (0+255),b
  9465                           
  9466                           ;07_May_WaterMeter_Main.c: 429: PORTE=value;
  9467  003142  C12D  FF84         	movff	LcdCmd@value,3972	;volatile
  9468                           
  9469                           ;07_May_WaterMeter_Main.c: 430: PORTFbits.RF1=0;
  9470  003146  9285               	bcf	3973,1,c	;volatile
  9471                           
  9472                           ;07_May_WaterMeter_Main.c: 431: __nop();
  9473  003148  F000               	nop	
  9474                           
  9475                           ;07_May_WaterMeter_Main.c: 432: PORTFbits.RF3=1;
  9476  00314A  8685               	bsf	3973,3,c	;volatile
  9477                           
  9478                           ;07_May_WaterMeter_Main.c: 433: Delayms(5);
  9479  00314C  0E00               	movlw	0
  9480  00314E  0101               	movlb	1	; () banked
  9481  003150  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9482  003152  0E05               	movlw	5
  9483  003154  6F27               	movwf	Delayms@time& (0+255),b
  9484  003156  EC8F  F016         	call	_Delayms	;wreg free
  9485                           
  9486                           ;07_May_WaterMeter_Main.c: 434: PORTFbits.RF3=0;
  9487  00315A  9685               	bcf	3973,3,c	;volatile
  9488  00315C  0012               	return		;funcret
  9489  00315E                     __end_of_LcdCmd:
  9490                           	opt stack 0
  9491                           tblptru	equ	0xFF8
  9492                           tblptrh	equ	0xFF7
  9493                           tblptrl	equ	0xFF6
  9494                           tablat	equ	0xFF5
  9495                           prodh	equ	0xFF4
  9496                           prodl	equ	0xFF3
  9497                           intcon	equ	0xFF2
  9498                           intcon2	equ	0xFF1
  9499                           intcon3	equ	0xFF0
  9500                           postinc0	equ	0xFEE
  9501                           wreg	equ	0xFE8
  9502                           indf1	equ	0xFE7
  9503                           postdec1	equ	0xFE5
  9504                           fsr1h	equ	0xFE2
  9505                           fsr1l	equ	0xFE1
  9506                           indf2	equ	0xFDF
  9507                           postinc2	equ	0xFDE
  9508                           fsr2h	equ	0xFDA
  9509                           fsr2l	equ	0xFD9
  9510                           status	equ	0xFD8
  9511                           
  9512 ;; *************** function _Delayms *****************
  9513 ;; Defined at:
  9514 ;;		line 480 in file "zigbee.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  time            2    0[BANK1 ] unsigned int 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  l               2    4[BANK1 ] int 
  9519 ;;  k               2    2[BANK1 ] int 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9529 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;Total ram usage:        6 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    8
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;;		_LcdData
  9541 ;;		_LcdCmd
  9542 ;;		_LcdInit
  9543 ;;		_stop_scroll
  9544 ;;		_LcdReady
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text55
  9549  002D1E                     __ptext55:
  9550                           	opt stack 0
  9551  002D1E                     _Delayms:
  9552                           	opt stack 20
  9553                           
  9554                           ;zigbee.c: 482: int k,l;
  9555                           ;zigbee.c: 483: for(k=0;k<time;k++)
  9556                           
  9557                           ;incstack = 0
  9558  002D1E  0E00               	movlw	0
  9559  002D20  0101               	movlb	1	; () banked
  9560  002D22  6F2A               	movwf	(Delayms@k+1)& (0+255),b
  9561  002D24  0E00               	movlw	0
  9562  002D26  6F29               	movwf	Delayms@k& (0+255),b
  9563  002D28  D011               	goto	l537
  9564  002D2A                     
  9565                           ; BSR set to: 1
  9566                           ;zigbee.c: 484: for(l=0;l<=500;l++);
  9567                           
  9568                           ; BSR set to: 1
  9569  002D2A  0E00               	movlw	0
  9570  002D2C  6F2C               	movwf	(Delayms@l+1)& (0+255),b
  9571  002D2E  0E00               	movlw	0
  9572  002D30  6F2B               	movwf	Delayms@l& (0+255),b
  9573  002D32                     l4683:
  9574                           
  9575                           ; BSR set to: 1
  9576  002D32  BF2C               	btfsc	(Delayms@l+1)& (0+255),7,b
  9577  002D34  D006               	goto	l539
  9578  002D36  0EF5               	movlw	245
  9579  002D38  5D2B               	subwf	Delayms@l& (0+255),w,b
  9580  002D3A  0E01               	movlw	1
  9581  002D3C  592C               	subwfb	(Delayms@l+1)& (0+255),w,b
  9582  002D3E  B0D8               	btfsc	status,0,c
  9583  002D40  D003               	goto	u3450
  9584  002D42                     l539:
  9585                           
  9586                           ; BSR set to: 1
  9587                           
  9588                           ; BSR set to: 1
  9589  002D42  4B2B               	infsnz	Delayms@l& (0+255),f,b
  9590  002D44  2B2C               	incf	(Delayms@l+1)& (0+255),f,b
  9591  002D46  D7F5               	goto	l4683
  9592  002D48                     u3450:
  9593                           
  9594                           ; BSR set to: 1
  9595                           
  9596                           ; BSR set to: 1
  9597  002D48  4B29               	infsnz	Delayms@k& (0+255),f,b
  9598  002D4A  2B2A               	incf	(Delayms@k+1)& (0+255),f,b
  9599  002D4C                     l537:
  9600                           
  9601                           ; BSR set to: 1
  9602                           
  9603                           ; BSR set to: 1
  9604  002D4C  5127               	movf	Delayms@time& (0+255),w,b
  9605  002D4E  5D29               	subwf	Delayms@k& (0+255),w,b
  9606  002D50  5128               	movf	(Delayms@time+1)& (0+255),w,b
  9607  002D52  592A               	subwfb	(Delayms@k+1)& (0+255),w,b
  9608  002D54  A0D8               	btfss	status,0,c
  9609  002D56  D7E9               	goto	l538
  9610                           
  9611                           ; BSR set to: 1
  9612                           ;zigbee.c: 485: __nop();
  9613  002D58  F000               	nop	
  9614                           
  9615                           ;zigbee.c: 486: __nop();
  9616  002D5A  F000               	nop	
  9617  002D5C  0012               	return		;funcret
  9618  002D5E                     __end_of_Delayms:
  9619                           	opt stack 0
  9620                           tblptru	equ	0xFF8
  9621                           tblptrh	equ	0xFF7
  9622                           tblptrl	equ	0xFF6
  9623                           tablat	equ	0xFF5
  9624                           prodh	equ	0xFF4
  9625                           prodl	equ	0xFF3
  9626                           intcon	equ	0xFF2
  9627                           intcon2	equ	0xFF1
  9628                           intcon3	equ	0xFF0
  9629                           postinc0	equ	0xFEE
  9630                           wreg	equ	0xFE8
  9631                           indf1	equ	0xFE7
  9632                           postdec1	equ	0xFE5
  9633                           fsr1h	equ	0xFE2
  9634                           fsr1l	equ	0xFE1
  9635                           indf2	equ	0xFDF
  9636                           postinc2	equ	0xFDE
  9637                           fsr2h	equ	0xFDA
  9638                           fsr2l	equ	0xFD9
  9639                           status	equ	0xFD8
  9640                           
  9641 ;; *************** function _InitSPI *****************
  9642 ;; Defined at:
  9643 ;;		line 442 in file "zigbee.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;Total ram usage:        0 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    9
  9664 ;; This function calls:
  9665 ;;		_delay
  9666 ;; This function is called by:
  9667 ;;		_main
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text56
  9672  00304A                     __ptext56:
  9673                           	opt stack 0
  9674  00304A                     _InitSPI:
  9675                           	opt stack 21
  9676                           
  9677                           ;zigbee.c: 443: SSP1CON1bits.SSPM0 = 0;
  9678                           
  9679                           ;incstack = 0
  9680  00304A  90C6               	bcf	4038,0,c	;volatile
  9681                           
  9682                           ;zigbee.c: 444: SSP1CON1bits.SSPM1 = 0;
  9683  00304C  92C6               	bcf	4038,1,c	;volatile
  9684                           
  9685                           ;zigbee.c: 445: SSP1CON1bits.SSPM2 = 0;
  9686  00304E  94C6               	bcf	4038,2,c	;volatile
  9687                           
  9688                           ;zigbee.c: 446: SSP1CON1bits.SSPM3 = 0;
  9689  003050  96C6               	bcf	4038,3,c	;volatile
  9690                           
  9691                           ;zigbee.c: 448: TRISCbits.TRISC5 = 0;
  9692  003052  9A94               	bcf	3988,5,c	;volatile
  9693                           
  9694                           ;zigbee.c: 449: TRISCbits.TRISC3 = 0;
  9695  003054  9694               	bcf	3988,3,c	;volatile
  9696                           
  9697                           ;zigbee.c: 450: SSP1CON1bits.SSPEN = 1;
  9698  003056  8AC6               	bsf	4038,5,c	;volatile
  9699                           
  9700                           ;zigbee.c: 453: SSP1STATbits.SMP = 1;
  9701  003058  8EC7               	bsf	4039,7,c	;volatile
  9702                           
  9703                           ;zigbee.c: 454: SSP1CON1bits.CKP = 0;
  9704  00305A  98C6               	bcf	4038,4,c	;volatile
  9705                           
  9706                           ;zigbee.c: 455: SSP1STATbits.CKE = 1;
  9707  00305C  8CC7               	bsf	4039,6,c	;volatile
  9708                           
  9709                           ;zigbee.c: 456: delay(10);
  9710  00305E  0E00               	movlw	0
  9711  003060  0101               	movlb	1	; () banked
  9712  003062  6F28               	movwf	(delay@dly+1)& (0+255),b
  9713  003064  0E0A               	movlw	10
  9714  003066  6F27               	movwf	delay@dly& (0+255),b
  9715  003068  ECAF  F018         	call	_delay	;wreg free
  9716  00306C  0012               	return		;funcret
  9717  00306E                     __end_of_InitSPI:
  9718                           	opt stack 0
  9719                           tblptru	equ	0xFF8
  9720                           tblptrh	equ	0xFF7
  9721                           tblptrl	equ	0xFF6
  9722                           tablat	equ	0xFF5
  9723                           prodh	equ	0xFF4
  9724                           prodl	equ	0xFF3
  9725                           intcon	equ	0xFF2
  9726                           intcon2	equ	0xFF1
  9727                           intcon3	equ	0xFF0
  9728                           postinc0	equ	0xFEE
  9729                           wreg	equ	0xFE8
  9730                           indf1	equ	0xFE7
  9731                           postdec1	equ	0xFE5
  9732                           fsr1h	equ	0xFE2
  9733                           fsr1l	equ	0xFE1
  9734                           indf2	equ	0xFDF
  9735                           postinc2	equ	0xFDE
  9736                           fsr2h	equ	0xFDA
  9737                           fsr2l	equ	0xFD9
  9738                           status	equ	0xFD8
  9739                           
  9740 ;; *************** function _delay *****************
  9741 ;; Defined at:
  9742 ;;		line 472 in file "zigbee.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  dly             2    0[BANK1 ] unsigned int 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  l               2    2[BANK1 ] unsigned int 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9756 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9759 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;Total ram usage:        4 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    8
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_InitSPI
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text57
  9771  00315E                     __ptext57:
  9772                           	opt stack 0
  9773  00315E                     _delay:
  9774                           	opt stack 21
  9775                           
  9776                           ;zigbee.c: 473: unsigned int l;
  9777                           ;zigbee.c: 474: for(l=0;l<dly;l++);
  9778                           
  9779                           ;incstack = 0
  9780  00315E  0E00               	movlw	0
  9781  003160  0101               	movlb	1	; () banked
  9782  003162  6F2A               	movwf	(delay@l+1)& (0+255),b
  9783  003164  0E00               	movlw	0
  9784  003166  6F29               	movwf	delay@l& (0+255),b
  9785  003168  D002               	goto	l525
  9786  00316A                     
  9787                           ; BSR set to: 1
  9788                           
  9789                           ; BSR set to: 1
  9790  00316A  4B29               	infsnz	delay@l& (0+255),f,b
  9791  00316C  2B2A               	incf	(delay@l+1)& (0+255),f,b
  9792  00316E                     l525:
  9793                           
  9794                           ; BSR set to: 1
  9795                           
  9796                           ; BSR set to: 1
  9797  00316E  5127               	movf	delay@dly& (0+255),w,b
  9798  003170  5D29               	subwf	delay@l& (0+255),w,b
  9799  003172  5128               	movf	(delay@dly+1)& (0+255),w,b
  9800  003174  592A               	subwfb	(delay@l+1)& (0+255),w,b
  9801  003176  B0D8               	btfsc	status,0,c
  9802  003178  0012               	return	
  9803  00317A  D7F7               	goto	l526
  9804  00317C                     __end_of_delay:
  9805                           	opt stack 0
  9806                           tblptru	equ	0xFF8
  9807                           tblptrh	equ	0xFF7
  9808                           tblptrl	equ	0xFF6
  9809                           tablat	equ	0xFF5
  9810                           prodh	equ	0xFF4
  9811                           prodl	equ	0xFF3
  9812                           intcon	equ	0xFF2
  9813                           intcon2	equ	0xFF1
  9814                           intcon3	equ	0xFF0
  9815                           postinc0	equ	0xFEE
  9816                           wreg	equ	0xFE8
  9817                           indf1	equ	0xFE7
  9818                           postdec1	equ	0xFE5
  9819                           fsr1h	equ	0xFE2
  9820                           fsr1l	equ	0xFE1
  9821                           indf2	equ	0xFDF
  9822                           postinc2	equ	0xFDE
  9823                           fsr2h	equ	0xFDA
  9824                           fsr2l	equ	0xFD9
  9825                           status	equ	0xFD8
  9826                           
  9827 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  9828 ;; Defined at:
  9829 ;;		line 137 in file "07_May_WaterMeter_Main.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;Total ram usage:       21 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    7
  9850 ;; This function calls:
  9851 ;;		_INT1_ISR
  9852 ;;		_ScanInput
  9853 ;;		_TMR0_ISR
  9854 ;;		___ftadd
  9855 ;;		___lwtoft
  9856 ;;		___wmul
  9857 ;;		i1___lwdiv
  9858 ;; This function is called by:
  9859 ;;		Interrupt level 1
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	intcodelo
  9864  000018                     __pintcodelo:
  9865                           	opt stack 0
  9866  000018                     _INTERRUPT_InterruptManagerLow:
  9867                           	opt stack 18
  9868                           
  9869                           ; BSR set to: 1
  9870                           ;incstack = 0
  9871  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9872  00001A  CFD8 F0CF          	movff	status,??_INTERRUPT_InterruptManagerLow
  9873  00001E  CFE8 F0D0          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  9874  000022  CFE0 F0D1          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  9875  000026  CFFA F0D2          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  9876  00002A  CFFB F0D3          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  9877  00002E  CFE9 F0D4          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  9878  000032  CFEA F0D5          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  9879  000036  CFE1 F0D6          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  9880  00003A  CFE2 F0D7          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  9881  00003E  CFD9 F0D8          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  9882  000042  CFDA F0D9          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  9883  000046  CFF3 F0DA          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  9884  00004A  CFF4 F0DB          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  9885  00004E  CFF6 F0DC          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  9886  000052  CFF7 F0DD          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  9887  000056  CFF8 F0DE          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  9888  00005A  CFF5 F0DF          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  9889  00005E  C04B  F0E0         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  9890  000062  C04C  F0E1         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  9891  000066  C04D  F0E2         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  9892  00006A  C04E  F0E3         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  9893                           
  9894                           ;07_May_WaterMeter_Main.c: 140: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  9895  00006E  B6F0               	btfsc	intcon3,3,c	;volatile
  9896  000070  A0F0               	btfss	intcon3,0,c	;volatile
  9897  000072  D005               	goto	i1l875
  9898                           
  9899                           ;07_May_WaterMeter_Main.c: 141: {
  9900                           ;07_May_WaterMeter_Main.c: 142: flow_frequency++;
  9901  000074  0100               	movlb	0	; () banked
  9902  000076  4B82               	infsnz	_flow_frequency& (0+255),f,b
  9903  000078  2B83               	incf	(_flow_frequency+1)& (0+255),f,b
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;07_May_WaterMeter_Main.c: 144: INT1_ISR();
  9907  00007A  EC8A  F019         	call	_INT1_ISR	;wreg free
  9908  00007E                     i1l875:
  9909                           
  9910                           ;07_May_WaterMeter_Main.c: 145: }
  9911                           ;07_May_WaterMeter_Main.c: 146: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9912  00007E  BAF2               	btfsc	intcon,5,c	;volatile
  9913  000080  A4F2               	btfss	intcon,2,c	;volatile
  9914  000082  D08B               	goto	i1l876
  9915                           
  9916                           ;07_May_WaterMeter_Main.c: 147: {
  9917                           ;07_May_WaterMeter_Main.c: 148: Time++;
  9918  000084  0100               	movlb	0	; () banked
  9919  000086  4B7E               	infsnz	_Time& (0+255),f,b
  9920  000088  2B7F               	incf	(_Time+1)& (0+255),f,b
  9921                           
  9922                           ;07_May_WaterMeter_Main.c: 149: Time2++;
  9923  00008A  4B7C               	infsnz	_Time2& (0+255),f,b
  9924  00008C  2B7D               	incf	(_Time2+1)& (0+255),f,b
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;07_May_WaterMeter_Main.c: 150: if(Time>20){
  9928  00008E  517F               	movf	(_Time+1)& (0+255),w,b
  9929  000090  E104               	bnz	i1u563_20
  9930  000092  0E15               	movlw	21
  9931  000094  5D7E               	subwf	_Time& (0+255),w,b
  9932  000096  A0D8               	btfss	status,0,c
  9933  000098  D022               	goto	i1l877
  9934  00009A                     i1u563_20:
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;07_May_WaterMeter_Main.c: 151: Time=0;
  9938  00009A  0E00               	movlw	0
  9939  00009C  6F7F               	movwf	(_Time+1)& (0+255),b
  9940  00009E  0E00               	movlw	0
  9941  0000A0  6F7E               	movwf	_Time& (0+255),b
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;07_May_WaterMeter_Main.c: 152: Flow_Rate=(flow_frequency * 60 / 7);
  9945  0000A2  C082  F0BB         	movff	_flow_frequency,___wmul@multiplier
  9946  0000A6  C083  F0BC         	movff	_flow_frequency+1,___wmul@multiplier+1
  9947  0000AA  0E00               	movlw	0
  9948  0000AC  6FBE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9949  0000AE  0E3C               	movlw	60
  9950  0000B0  6FBD               	movwf	___wmul@multiplicand& (0+255),b
  9951  0000B2  ECC6  F017         	call	___wmul	;wreg free
  9952  0000B6  C0BB  F0C1         	movff	?___wmul,i1___lwdiv@dividend
  9953  0000BA  C0BC  F0C2         	movff	?___wmul+1,i1___lwdiv@dividend+1
  9954  0000BE  0E00               	movlw	0
  9955  0000C0  0100               	movlb	0	; () banked
  9956  0000C2  6FC4               	movwf	(i1___lwdiv@divisor+1)& (0+255),b
  9957  0000C4  0E07               	movlw	7
  9958  0000C6  6FC3               	movwf	i1___lwdiv@divisor& (0+255),b
  9959  0000C8  EC28  F015         	call	i1___lwdiv	;wreg free
  9960  0000CC  C0C1  F080         	movff	?i1___lwdiv,_Flow_Rate
  9961  0000D0  C0C2  F081         	movff	?i1___lwdiv+1,_Flow_Rate+1
  9962                           
  9963                           ;07_May_WaterMeter_Main.c: 153: flow_frequency=0;
  9964  0000D4  0E00               	movlw	0
  9965  0000D6  0100               	movlb	0	; () banked
  9966  0000D8  6F83               	movwf	(_flow_frequency+1)& (0+255),b
  9967  0000DA  0E00               	movlw	0
  9968  0000DC  6F82               	movwf	_flow_frequency& (0+255),b
  9969  0000DE                     i1l877:
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;07_May_WaterMeter_Main.c: 154: }
  9973                           ;07_May_WaterMeter_Main.c: 155: if(Time2>500){
  9974                           
  9975                           ; BSR set to: 0
  9976  0000DE  0EF5               	movlw	245
  9977  0000E0  5D7C               	subwf	_Time2& (0+255),w,b
  9978  0000E2  0E01               	movlw	1
  9979  0000E4  597D               	subwfb	(_Time2+1)& (0+255),w,b
  9980  0000E6  A0D8               	btfss	status,0,c
  9981  0000E8  D02E               	goto	i1l878
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;07_May_WaterMeter_Main.c: 156: Time2=0;
  9985  0000EA  0E00               	movlw	0
  9986  0000EC  6F7D               	movwf	(_Time2+1)& (0+255),b
  9987  0000EE  0E00               	movlw	0
  9988  0000F0  6F7C               	movwf	_Time2& (0+255),b
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;07_May_WaterMeter_Main.c: 157: flowLitres=Flow_Rate/60;
  9992  0000F2  0E00               	movlw	0
  9993  0000F4  6FC4               	movwf	(i1___lwdiv@divisor+1)& (0+255),b
  9994  0000F6  0E3C               	movlw	60
  9995  0000F8  6FC3               	movwf	i1___lwdiv@divisor& (0+255),b
  9996  0000FA  C080  F0C1         	movff	_Flow_Rate,i1___lwdiv@dividend
  9997  0000FE  C081  F0C2         	movff	_Flow_Rate+1,i1___lwdiv@dividend+1
  9998  000102  EC28  F015         	call	i1___lwdiv	;wreg free
  9999  000106  C0C1  F0C8         	movff	?i1___lwdiv,___lwtoft@c
 10000  00010A  C0C2  F0C9         	movff	?i1___lwdiv+1,___lwtoft@c+1
 10001  00010E  ECEE  F017         	call	___lwtoft	;wreg free
 10002  000112  C0C8  F064         	movff	?___lwtoft,_flowLitres
 10003  000116  C0C9  F065         	movff	?___lwtoft+1,_flowLitres+1
 10004  00011A  C0CA  F066         	movff	?___lwtoft+2,_flowLitres+2
 10005                           
 10006                           ;07_May_WaterMeter_Main.c: 158: totalLitres += flowLitres;
 10007  00011E  C067  F0C3         	movff	_totalLitres,___ftadd@f1
 10008  000122  C068  F0C4         	movff	_totalLitres+1,___ftadd@f1+1
 10009  000126  C069  F0C5         	movff	_totalLitres+2,___ftadd@f1+2
 10010  00012A  C064  F0C6         	movff	_flowLitres,___ftadd@f2
 10011  00012E  C065  F0C7         	movff	_flowLitres+1,___ftadd@f2+1
 10012  000132  C066  F0C8         	movff	_flowLitres+2,___ftadd@f2+2
 10013  000136  ECEF  F00F         	call	___ftadd	;wreg free
 10014  00013A  C0C3  F067         	movff	?___ftadd,_totalLitres
 10015  00013E  C0C4  F068         	movff	?___ftadd+1,_totalLitres+1
 10016  000142  C0C5  F069         	movff	?___ftadd+2,_totalLitres+2
 10017  000146                     i1l878:
 10018                           
 10019                           ;07_May_WaterMeter_Main.c: 160: }
 10020                           ;07_May_WaterMeter_Main.c: 162: __nop();
 10021  000146  F000               	nop	
 10022                           
 10023                           ;07_May_WaterMeter_Main.c: 166: ScanInput();
 10024  000148  ECA3  F014         	call	_ScanInput	;wreg free
 10025                           
 10026                           ;07_May_WaterMeter_Main.c: 167: if(F_TimerCounting==1)
 10027  00014C  0402               	decf	_F_TimerCounting,w,c
 10028  00014E  A4D8               	btfss	status,2,c
 10029  000150  D013               	goto	i1l879
 10030                           
 10031                           ;07_May_WaterMeter_Main.c: 168: {
 10032                           ;07_May_WaterMeter_Main.c: 169: if(PORTGX.tbits.tb1==0)
 10033  000152  B203               	btfsc	_PORTGX,1,c
 10034  000154  D004               	goto	i1l880
 10035                           
 10036                           ;07_May_WaterMeter_Main.c: 170: Increment++;
 10037  000156  0100               	movlb	0	; () banked
 10038  000158  4B8C               	infsnz	_Increment& (0+255),f,b
 10039  00015A  2B8D               	incf	(_Increment+1)& (0+255),f,b
 10040  00015C  D01C               	goto	i1l887
 10041  00015E                     i1l880:
 10042                           
 10043                           ;07_May_WaterMeter_Main.c: 171: else if(PORTGX.tbits.tb2==0)
 10044  00015E  B403               	btfsc	_PORTGX,2,c
 10045  000160  D004               	goto	i1l882
 10046                           
 10047                           ;07_May_WaterMeter_Main.c: 172: Decrement++;
 10048  000162  0100               	movlb	0	; () banked
 10049  000164  4B8A               	infsnz	_Decrement& (0+255),f,b
 10050  000166  2B8B               	incf	(_Decrement+1)& (0+255),f,b
 10051  000168  D016               	goto	i1l887
 10052  00016A                     i1l882:
 10053                           
 10054                           ;07_May_WaterMeter_Main.c: 173: else if((F_Enter==0) && (PORTGX.tbits.tb0==0))
 10055                           
 10056                           ; BSR set to: 0
 10057  00016A  5001               	movf	_F_Enter,w,c
 10058  00016C  B4D8               	btfsc	status,2,c
 10059  00016E  B003               	btfsc	_PORTGX,0,c
 10060  000170  D012               	goto	i1l887
 10061                           
 10062                           ;07_May_WaterMeter_Main.c: 174: Enter++;
 10063  000172  0100               	movlb	0	; () banked
 10064  000174  2BA4               	incf	_Enter& (0+255),f,b
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;07_May_WaterMeter_Main.c: 175: }
 10068                           
 10069                           ; BSR set to: 0
 10070                           
 10071                           ; BSR set to: 0
 10072  000176  D00F               	goto	i1l887
 10073  000178                     i1l879:
 10074                           
 10075                           ;07_May_WaterMeter_Main.c: 177: else if((F_Enter==1)&&(PORTGX.tbits.tb0==0))
 10076                           
 10077                           ; BSR set to: 0
 10078  000178  0401               	decf	_F_Enter,w,c
 10079  00017A  B4D8               	btfsc	status,2,c
 10080  00017C  B003               	btfsc	_PORTGX,0,c
 10081  00017E  D00B               	goto	i1l887
 10082                           
 10083                           ;07_May_WaterMeter_Main.c: 178: {
 10084                           ;07_May_WaterMeter_Main.c: 179: ENTERCOUNT++;
 10085  000180  0100               	movlb	0	; () banked
 10086  000182  4B86               	infsnz	_ENTERCOUNT& (0+255),f,b
 10087  000184  2B87               	incf	(_ENTERCOUNT+1)& (0+255),f,b
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;07_May_WaterMeter_Main.c: 180: if (ENTERCOUNT >= 100)
 10091  000186  5187               	movf	(_ENTERCOUNT+1)& (0+255),w,b
 10092  000188  E104               	bnz	i1u572_20
 10093  00018A  0E64               	movlw	100
 10094  00018C  5D86               	subwf	_ENTERCOUNT& (0+255),w,b
 10095  00018E  A0D8               	btfss	status,0,c
 10096  000190  D002               	goto	i1l887
 10097  000192                     i1u572_20:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;07_May_WaterMeter_Main.c: 181: {
 10101                           ;07_May_WaterMeter_Main.c: 182: flag=1;
 10102  000192  0E01               	movlw	1
 10103  000194  6FA7               	movwf	_flag& (0+255),b
 10104  000196                     i1l887:
 10105                           
 10106                           ;07_May_WaterMeter_Main.c: 183: }
 10107                           ;07_May_WaterMeter_Main.c: 184: }
 10108                           ;07_May_WaterMeter_Main.c: 185: TMR0_ISR();
 10109                           
 10110                           ; BSR set to: 0
 10111                           
 10112                           ; BSR set to: 0
 10113                           
 10114                           ; BSR set to: 0
 10115  000196  ECDA  F017         	call	_TMR0_ISR	;wreg free
 10116  00019A                     i1l876:
 10117  00019A  C0E3  F04E         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 10118  00019E  C0E2  F04D         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 10119  0001A2  C0E1  F04C         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 10120  0001A6  C0E0  F04B         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 10121  0001AA  C0DF  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 10122  0001AE  C0DE  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 10123  0001B2  C0DD  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 10124  0001B6  C0DC  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 10125  0001BA  C0DB  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 10126  0001BE  C0DA  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 10127  0001C2  C0D9  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 10128  0001C6  C0D8  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 10129  0001CA  C0D7  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 10130  0001CE  C0D6  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 10131  0001D2  C0D5  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 10132  0001D6  C0D4  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 10133  0001DA  C0D3  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 10134  0001DE  C0D2  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 10135  0001E2  C0D1  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 10136  0001E6  C0D0  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 10137  0001EA  C0CF  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 10138  0001EE  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10139  0001F0  0010               	retfie	
 10140  0001F2                     __end_of_INTERRUPT_InterruptManagerLow:
 10141                           	opt stack 0
 10142                           pclatu	equ	0xFFB
 10143                           pclath	equ	0xFFA
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           intcon	equ	0xFF2
 10151                           intcon2	equ	0xFF1
 10152                           intcon3	equ	0xFF0
 10153                           postinc0	equ	0xFEE
 10154                           fsr0h	equ	0xFEA
 10155                           fsr0l	equ	0xFE9
 10156                           wreg	equ	0xFE8
 10157                           indf1	equ	0xFE7
 10158                           postdec1	equ	0xFE5
 10159                           fsr1h	equ	0xFE2
 10160                           fsr1l	equ	0xFE1
 10161                           bsr	equ	0xFE0
 10162                           indf2	equ	0xFDF
 10163                           postinc2	equ	0xFDE
 10164                           fsr2h	equ	0xFDA
 10165                           fsr2l	equ	0xFD9
 10166                           status	equ	0xFD8
 10167                           
 10168 ;; *************** function i1___lwdiv *****************
 10169 ;; Defined at:
 10170 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  dividend        2    6[BANK0 ] unsigned int 
 10173 ;;  divisor         2    8[BANK0 ] unsigned int 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  __lwdiv         2   11[BANK0 ] unsigned int 
 10176 ;;  __lwdiv         1   10[BANK0 ] unsigned char 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  2    6[BANK0 ] unsigned int 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;Total ram usage:        7 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    4
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_INTERRUPT_InterruptManagerLow
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text59
 10201  002A50                     __ptext59:
 10202                           	opt stack 0
 10203  002A50                     i1___lwdiv:
 10204                           	opt stack 20
 10205                           
 10206                           ;incstack = 0
 10207  002A50  0E00               	movlw	0
 10208  002A52  0100               	movlb	0	; () banked
 10209  002A54  6FC7               	movwf	(i1___lwdiv@quotient+1)& (0+255),b
 10210  002A56  0E00               	movlw	0
 10211  002A58  6FC6               	movwf	i1___lwdiv@quotient& (0+255),b
 10212                           
 10213                           ; BSR set to: 0
 10214  002A5A  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10215  002A5C  11C4               	iorwf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10216  002A5E  B4D8               	btfsc	status,2,c
 10217  002A60  D01C               	goto	i1l1428
 10218                           
 10219                           ; BSR set to: 0
 10220  002A62  0E01               	movlw	1
 10221  002A64  6FC5               	movwf	i1___lwdiv@counter& (0+255),b
 10222  002A66  D004               	goto	i1l1423
 10223  002A68                     
 10224                           ; BSR set to: 0
 10225                           
 10226                           ; BSR set to: 0
 10227  002A68  90D8               	bcf	status,0,c
 10228  002A6A  37C3               	rlcf	i1___lwdiv@divisor& (0+255),f,b
 10229  002A6C  37C4               	rlcf	(i1___lwdiv@divisor+1)& (0+255),f,b
 10230  002A6E  2BC5               	incf	i1___lwdiv@counter& (0+255),f,b
 10231  002A70                     i1l1423:
 10232                           
 10233                           ; BSR set to: 0
 10234                           
 10235                           ; BSR set to: 0
 10236  002A70  AFC4               	btfss	(i1___lwdiv@divisor+1)& (0+255),7,b
 10237  002A72  D7FA               	goto	i1l1424
 10238  002A74                     i1u464_20:
 10239                           
 10240                           ; BSR set to: 0
 10241                           
 10242                           ; BSR set to: 0
 10243                           
 10244                           ; BSR set to: 0
 10245  002A74  90D8               	bcf	status,0,c
 10246  002A76  37C6               	rlcf	i1___lwdiv@quotient& (0+255),f,b
 10247  002A78  37C7               	rlcf	(i1___lwdiv@quotient+1)& (0+255),f,b
 10248                           
 10249                           ; BSR set to: 0
 10250  002A7A  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10251  002A7C  5DC1               	subwf	i1___lwdiv@dividend& (0+255),w,b
 10252  002A7E  51C4               	movf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10253  002A80  59C2               	subwfb	(i1___lwdiv@dividend+1)& (0+255),w,b
 10254  002A82  A0D8               	btfss	status,0,c
 10255  002A84  D005               	goto	i1l1427
 10256                           
 10257                           ; BSR set to: 0
 10258  002A86  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10259  002A88  5FC1               	subwf	i1___lwdiv@dividend& (0+255),f,b
 10260  002A8A  51C4               	movf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10261  002A8C  5BC2               	subwfb	(i1___lwdiv@dividend+1)& (0+255),f,b
 10262                           
 10263                           ; BSR set to: 0
 10264  002A8E  81C6               	bsf	i1___lwdiv@quotient& (0+255),0,b
 10265  002A90                     i1l1427:
 10266                           
 10267                           ; BSR set to: 0
 10268                           
 10269                           ; BSR set to: 0
 10270  002A90  90D8               	bcf	status,0,c
 10271  002A92  33C4               	rrcf	(i1___lwdiv@divisor+1)& (0+255),f,b
 10272  002A94  33C3               	rrcf	i1___lwdiv@divisor& (0+255),f,b
 10273                           
 10274                           ; BSR set to: 0
 10275  002A96  2FC5               	decfsz	i1___lwdiv@counter& (0+255),f,b
 10276  002A98  D7ED               	goto	i1u464_20
 10277  002A9A                     i1l1428:
 10278                           
 10279                           ; BSR set to: 0
 10280                           
 10281                           ; BSR set to: 0
 10282  002A9A  C0C6  F0C1         	movff	i1___lwdiv@quotient,?i1___lwdiv
 10283  002A9E  C0C7  F0C2         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 10284                           
 10285                           ; BSR set to: 0
 10286  002AA2  0012               	return		;funcret
 10287  002AA4                     __end_ofi1___lwdiv:
 10288                           	opt stack 0
 10289                           pclatu	equ	0xFFB
 10290                           pclath	equ	0xFFA
 10291                           tblptru	equ	0xFF8
 10292                           tblptrh	equ	0xFF7
 10293                           tblptrl	equ	0xFF6
 10294                           tablat	equ	0xFF5
 10295                           prodh	equ	0xFF4
 10296                           prodl	equ	0xFF3
 10297                           intcon	equ	0xFF2
 10298                           intcon2	equ	0xFF1
 10299                           intcon3	equ	0xFF0
 10300                           postinc0	equ	0xFEE
 10301                           fsr0h	equ	0xFEA
 10302                           fsr0l	equ	0xFE9
 10303                           wreg	equ	0xFE8
 10304                           indf1	equ	0xFE7
 10305                           postdec1	equ	0xFE5
 10306                           fsr1h	equ	0xFE2
 10307                           fsr1l	equ	0xFE1
 10308                           bsr	equ	0xFE0
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function ___wmul *****************
 10316 ;; Defined at:
 10317 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10320 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  product         2    4[BANK0 ] unsigned int 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  2    0[BANK0 ] unsigned int 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0, prodl, prodh
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;Total ram usage:        6 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    4
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_INTERRUPT_InterruptManagerLow
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text60
 10347  002F8C                     __ptext60:
 10348                           	opt stack 0
 10349  002F8C                     ___wmul:
 10350                           	opt stack 20
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;incstack = 0
 10354  002F8C  0100               	movlb	0	; () banked
 10355  002F8E  51BB               	movf	___wmul@multiplier& (0+255),w,b
 10356  002F90  03BD               	mulwf	___wmul@multiplicand& (0+255),b
 10357  002F92  CFF3 F0BF          	movff	prodl,___wmul@product
 10358  002F96  CFF4 F0C0          	movff	prodh,___wmul@product+1
 10359  002F9A  51BB               	movf	___wmul@multiplier& (0+255),w,b
 10360  002F9C  03BE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10361  002F9E  50F3               	movf	prodl,w,c
 10362  002FA0  27C0               	addwf	(___wmul@product+1)& (0+255),f,b
 10363  002FA2  51BC               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10364  002FA4  03BD               	mulwf	___wmul@multiplicand& (0+255),b
 10365  002FA6  50F3               	movf	prodl,w,c
 10366  002FA8  27C0               	addwf	(___wmul@product+1)& (0+255),f,b
 10367                           
 10368                           ; BSR set to: 0
 10369  002FAA  C0BF  F0BB         	movff	___wmul@product,?___wmul
 10370  002FAE  C0C0  F0BC         	movff	___wmul@product+1,?___wmul+1
 10371  002FB2  0012               	return	
 10372  002FB4                     __end_of___wmul:
 10373                           	opt stack 0
 10374                           pclatu	equ	0xFFB
 10375                           pclath	equ	0xFFA
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           intcon2	equ	0xFF1
 10384                           intcon3	equ	0xFF0
 10385                           postinc0	equ	0xFEE
 10386                           fsr0h	equ	0xFEA
 10387                           fsr0l	equ	0xFE9
 10388                           wreg	equ	0xFE8
 10389                           indf1	equ	0xFE7
 10390                           postdec1	equ	0xFE5
 10391                           fsr1h	equ	0xFE2
 10392                           fsr1l	equ	0xFE1
 10393                           bsr	equ	0xFE0
 10394                           indf2	equ	0xFDF
 10395                           postinc2	equ	0xFDE
 10396                           fsr2h	equ	0xFDA
 10397                           fsr2l	equ	0xFD9
 10398                           status	equ	0xFD8
 10399                           
 10400 ;; *************** function ___lwtoft *****************
 10401 ;; Defined at:
 10402 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  c               2   13[BANK0 ] unsigned int 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  3   13[BANK0 ] float 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0, cstack
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10416 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;Total ram usage:        3 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; Hardware stack levels required when called:    5
 10423 ;; This function calls:
 10424 ;;		___ftpack
 10425 ;; This function is called by:
 10426 ;;		_INTERRUPT_InterruptManagerLow
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text61
 10431  002FDC                     __ptext61:
 10432                           	opt stack 0
 10433  002FDC                     ___lwtoft:
 10434                           	opt stack 19
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;incstack = 0
 10438  002FDC  C0C8  F0BB         	movff	___lwtoft@c,___ftpack@arg
 10439  002FE0  C0C9  F0BC         	movff	___lwtoft@c+1,___ftpack@arg+1
 10440  002FE4  0100               	movlb	0	; () banked
 10441  002FE6  6BBD               	clrf	(___ftpack@arg+2)& (0+255),b
 10442  002FE8  0E8E               	movlw	142
 10443  002FEA  6FBE               	movwf	___ftpack@exp& (0+255),b
 10444  002FEC  0E00               	movlw	0
 10445  002FEE  6FBF               	movwf	___ftpack@sign& (0+255),b
 10446  002FF0  ECCC  F012         	call	___ftpack	;wreg free
 10447  002FF4  C0BB  F0C8         	movff	?___ftpack,?___lwtoft
 10448  002FF8  C0BC  F0C9         	movff	?___ftpack+1,?___lwtoft+1
 10449  002FFC  C0BD  F0CA         	movff	?___ftpack+2,?___lwtoft+2
 10450  003000  0012               	return	
 10451  003002                     __end_of___lwtoft:
 10452                           	opt stack 0
 10453                           pclatu	equ	0xFFB
 10454                           pclath	equ	0xFFA
 10455                           tblptru	equ	0xFF8
 10456                           tblptrh	equ	0xFF7
 10457                           tblptrl	equ	0xFF6
 10458                           tablat	equ	0xFF5
 10459                           prodh	equ	0xFF4
 10460                           prodl	equ	0xFF3
 10461                           intcon	equ	0xFF2
 10462                           intcon2	equ	0xFF1
 10463                           intcon3	equ	0xFF0
 10464                           postinc0	equ	0xFEE
 10465                           fsr0h	equ	0xFEA
 10466                           fsr0l	equ	0xFE9
 10467                           wreg	equ	0xFE8
 10468                           indf1	equ	0xFE7
 10469                           postdec1	equ	0xFE5
 10470                           fsr1h	equ	0xFE2
 10471                           fsr1l	equ	0xFE1
 10472                           bsr	equ	0xFE0
 10473                           indf2	equ	0xFDF
 10474                           postinc2	equ	0xFDE
 10475                           fsr2h	equ	0xFDA
 10476                           fsr2l	equ	0xFD9
 10477                           status	equ	0xFD8
 10478                           
 10479 ;; *************** function ___ftadd *****************
 10480 ;; Defined at:
 10481 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  f1              3    8[BANK0 ] float 
 10484 ;;  f2              3   11[BANK0 ] float 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  exp1            1   19[BANK0 ] unsigned char 
 10487 ;;  exp2            1   18[BANK0 ] unsigned char 
 10488 ;;  sign            1   17[BANK0 ] unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  3    8[BANK0 ] float 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10498 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;Total ram usage:       12 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    5
 10505 ;; This function calls:
 10506 ;;		___ftpack
 10507 ;; This function is called by:
 10508 ;;		_INTERRUPT_InterruptManagerLow
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text62
 10513  001FDE                     __ptext62:
 10514                           	opt stack 0
 10515  001FDE                     ___ftadd:
 10516                           	opt stack 19
 10517                           
 10518                           ;incstack = 0
 10519  001FDE  C0C5  F0C9         	movff	___ftadd@f1+2,??___ftadd
 10520  001FE2  0100               	movlb	0	; () banked
 10521  001FE4  6BCA               	clrf	(??___ftadd+1)& (0+255),b
 10522  001FE6  6BCB               	clrf	(??___ftadd+2)& (0+255),b
 10523  001FE8  35C4               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10524  001FEA  37C9               	rlcf	??___ftadd& (0+255),f,b
 10525  001FEC  E301               	bnc	u422_21
 10526  001FEE  81CA               	bsf	(??___ftadd+1)& (0+255),0,b
 10527  001FF0                     u422_21:
 10528  001FF0  51C9               	movf	??___ftadd& (0+255),w,b
 10529  001FF2  6FCE               	movwf	___ftadd@exp1& (0+255),b
 10530  001FF4  C0C8  F0C9         	movff	___ftadd@f2+2,??___ftadd
 10531  001FF8  6BCA               	clrf	(??___ftadd+1)& (0+255),b
 10532  001FFA  6BCB               	clrf	(??___ftadd+2)& (0+255),b
 10533  001FFC  35C7               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10534  001FFE  37C9               	rlcf	??___ftadd& (0+255),f,b
 10535  002000  E301               	bnc	u423_21
 10536  002002  81CA               	bsf	(??___ftadd+1)& (0+255),0,b
 10537  002004                     u423_21:
 10538  002004  51C9               	movf	??___ftadd& (0+255),w,b
 10539  002006  6FCD               	movwf	___ftadd@exp2& (0+255),b
 10540                           
 10541                           ; BSR set to: 0
 10542  002008  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10543  00200A  B4D8               	btfsc	status,2,c
 10544  00200C  D00B               	goto	i1u426_20
 10545                           
 10546                           ; BSR set to: 0
 10547  00200E  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10548  002010  5DCE               	subwf	___ftadd@exp1& (0+255),w,b
 10549  002012  B0D8               	btfsc	status,0,c
 10550  002014  D00E               	goto	i1l1265
 10551                           
 10552                           ; BSR set to: 0
 10553  002016  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10554  002018  0800               	sublw	0
 10555  00201A  25CD               	addwf	___ftadd@exp2& (0+255),w,b
 10556  00201C  6FC9               	movwf	??___ftadd& (0+255),b
 10557  00201E  0E18               	movlw	24
 10558  002020  65C9               	cpfsgt	??___ftadd& (0+255),b
 10559  002022  D007               	goto	i1l1265
 10560  002024                     i1u426_20:
 10561                           
 10562                           ; BSR set to: 0
 10563  002024  C0C6  F0C3         	movff	___ftadd@f2,?___ftadd
 10564  002028  C0C7  F0C4         	movff	___ftadd@f2+1,?___ftadd+1
 10565  00202C  C0C8  F0C5         	movff	___ftadd@f2+2,?___ftadd+2
 10566  002030  0012               	return	
 10567  002032                     i1l1265:
 10568                           
 10569                           ; BSR set to: 0
 10570                           
 10571                           ; BSR set to: 0
 10572  002032  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10573  002034  B4D8               	btfsc	status,2,c
 10574  002036  D00B               	goto	i1u429_20
 10575                           
 10576                           ; BSR set to: 0
 10577  002038  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10578  00203A  5DCD               	subwf	___ftadd@exp2& (0+255),w,b
 10579  00203C  B0D8               	btfsc	status,0,c
 10580  00203E  D00E               	goto	i1l1269
 10581                           
 10582                           ; BSR set to: 0
 10583  002040  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10584  002042  0800               	sublw	0
 10585  002044  25CE               	addwf	___ftadd@exp1& (0+255),w,b
 10586  002046  6FC9               	movwf	??___ftadd& (0+255),b
 10587  002048  0E18               	movlw	24
 10588  00204A  65C9               	cpfsgt	??___ftadd& (0+255),b
 10589  00204C  D007               	goto	i1l1269
 10590  00204E                     i1u429_20:
 10591                           
 10592                           ; BSR set to: 0
 10593  00204E  C0C3  F0C3         	movff	___ftadd@f1,?___ftadd
 10594  002052  C0C4  F0C4         	movff	___ftadd@f1+1,?___ftadd+1
 10595  002056  C0C5  F0C5         	movff	___ftadd@f1+2,?___ftadd+2
 10596  00205A  0012               	return	
 10597  00205C                     i1l1269:
 10598                           
 10599                           ; BSR set to: 0
 10600                           
 10601                           ; BSR set to: 0
 10602  00205C  0E06               	movlw	6
 10603  00205E  6FCC               	movwf	___ftadd@sign& (0+255),b
 10604                           
 10605                           ; BSR set to: 0
 10606  002060  BFC5               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 10607                           
 10608                           ; BSR set to: 0
 10609  002062  8FCC               	bsf	___ftadd@sign& (0+255),7,b
 10610                           
 10611                           ; BSR set to: 0
 10612                           
 10613                           ; BSR set to: 0
 10614  002064  BFC8               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 10615                           
 10616                           ; BSR set to: 0
 10617  002066  8DCC               	bsf	___ftadd@sign& (0+255),6,b
 10618                           
 10619                           ; BSR set to: 0
 10620  002068  8FC4               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10621                           
 10622                           ; BSR set to: 0
 10623  00206A  0EFF               	movlw	255
 10624  00206C  17C3               	andwf	___ftadd@f1& (0+255),f,b
 10625  00206E  0EFF               	movlw	255
 10626  002070  17C4               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10627  002072  0E00               	movlw	0
 10628  002074  17C5               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10629  002076  8FC7               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10630                           
 10631                           ; BSR set to: 0
 10632  002078  0EFF               	movlw	255
 10633  00207A  17C6               	andwf	___ftadd@f2& (0+255),f,b
 10634  00207C  0EFF               	movlw	255
 10635  00207E  17C7               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10636  002080  0E00               	movlw	0
 10637  002082  17C8               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10638                           
 10639                           ; BSR set to: 0
 10640  002084  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10641  002086  5DCE               	subwf	___ftadd@exp1& (0+255),w,b
 10642  002088  B0D8               	btfsc	status,0,c
 10643  00208A  D01B               	goto	i1l1274
 10644  00208C                     i1u432_20:
 10645                           
 10646                           ; BSR set to: 0
 10647                           
 10648                           ; BSR set to: 0
 10649  00208C  90D8               	bcf	status,0,c
 10650  00208E  37C6               	rlcf	___ftadd@f2& (0+255),f,b
 10651  002090  37C7               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10652  002092  37C8               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10653  002094  07CD               	decf	___ftadd@exp2& (0+255),f,b
 10654                           
 10655                           ; BSR set to: 0
 10656  002096  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10657  002098  19CD               	xorwf	___ftadd@exp2& (0+255),w,b
 10658  00209A  B4D8               	btfsc	status,2,c
 10659  00209C  D00D               	goto	i1l1279
 10660                           
 10661                           ; BSR set to: 0
 10662  00209E  07CC               	decf	___ftadd@sign& (0+255),f,b
 10663  0020A0  C0CC  F0C9         	movff	___ftadd@sign,??___ftadd
 10664  0020A4  0E07               	movlw	7
 10665  0020A6  17C9               	andwf	??___ftadd& (0+255),f,b
 10666  0020A8  B4D8               	btfsc	status,2,c
 10667  0020AA  D006               	goto	i1l1279
 10668  0020AC  D7EF               	goto	i1u432_20
 10669  0020AE                     
 10670                           ; BSR set to: 0
 10671                           
 10672                           ; BSR set to: 0
 10673  0020AE  90D8               	bcf	status,0,c
 10674  0020B0  33C5               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10675  0020B2  33C4               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10676  0020B4  33C3               	rrcf	___ftadd@f1& (0+255),f,b
 10677  0020B6  2BCE               	incf	___ftadd@exp1& (0+255),f,b
 10678  0020B8                     i1l1279:
 10679                           
 10680                           ; BSR set to: 0
 10681                           
 10682                           ; BSR set to: 0
 10683  0020B8  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10684  0020BA  19CE               	xorwf	___ftadd@exp1& (0+255),w,b
 10685  0020BC  B4D8               	btfsc	status,2,c
 10686  0020BE  D01F               	goto	i1u439_20
 10687  0020C0  D7F6               	goto	i1l1280
 10688  0020C2                     i1l1274:
 10689                           
 10690                           ; BSR set to: 0
 10691                           
 10692                           ; BSR set to: 0
 10693  0020C2  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10694  0020C4  5DCD               	subwf	___ftadd@exp2& (0+255),w,b
 10695  0020C6  B0D8               	btfsc	status,0,c
 10696  0020C8  D01A               	goto	i1u439_20
 10697  0020CA                     i1u436_20:
 10698                           
 10699                           ; BSR set to: 0
 10700                           
 10701                           ; BSR set to: 0
 10702  0020CA  90D8               	bcf	status,0,c
 10703  0020CC  37C3               	rlcf	___ftadd@f1& (0+255),f,b
 10704  0020CE  37C4               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10705  0020D0  37C5               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10706  0020D2  07CE               	decf	___ftadd@exp1& (0+255),f,b
 10707                           
 10708                           ; BSR set to: 0
 10709  0020D4  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10710  0020D6  19CD               	xorwf	___ftadd@exp2& (0+255),w,b
 10711  0020D8  B4D8               	btfsc	status,2,c
 10712  0020DA  D00D               	goto	i1l1288
 10713                           
 10714                           ; BSR set to: 0
 10715  0020DC  07CC               	decf	___ftadd@sign& (0+255),f,b
 10716  0020DE  C0CC  F0C9         	movff	___ftadd@sign,??___ftadd
 10717  0020E2  0E07               	movlw	7
 10718  0020E4  17C9               	andwf	??___ftadd& (0+255),f,b
 10719  0020E6  B4D8               	btfsc	status,2,c
 10720  0020E8  D006               	goto	i1l1288
 10721  0020EA  D7EF               	goto	i1u436_20
 10722  0020EC                     
 10723                           ; BSR set to: 0
 10724                           
 10725                           ; BSR set to: 0
 10726  0020EC  90D8               	bcf	status,0,c
 10727  0020EE  33C8               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10728  0020F0  33C7               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10729  0020F2  33C6               	rrcf	___ftadd@f2& (0+255),f,b
 10730  0020F4  2BCD               	incf	___ftadd@exp2& (0+255),f,b
 10731  0020F6                     i1l1288:
 10732                           
 10733                           ; BSR set to: 0
 10734                           
 10735                           ; BSR set to: 0
 10736  0020F6  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10737  0020F8  19CE               	xorwf	___ftadd@exp1& (0+255),w,b
 10738  0020FA  A4D8               	btfss	status,2,c
 10739  0020FC  D7F7               	goto	i1l1289
 10740  0020FE                     i1u439_20:
 10741                           
 10742                           ; BSR set to: 0
 10743                           
 10744                           ; BSR set to: 0
 10745                           
 10746                           ; BSR set to: 0
 10747  0020FE  AFCC               	btfss	___ftadd@sign& (0+255),7,b
 10748  002100  D00C               	goto	i1l1291
 10749                           
 10750                           ; BSR set to: 0
 10751  002102  0EFF               	movlw	255
 10752  002104  1BC3               	xorwf	___ftadd@f1& (0+255),f,b
 10753  002106  0EFF               	movlw	255
 10754  002108  1BC4               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10755  00210A  0EFF               	movlw	255
 10756  00210C  1BC5               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10757  00210E  0E01               	movlw	1
 10758  002110  27C3               	addwf	___ftadd@f1& (0+255),f,b
 10759  002112  0E00               	movlw	0
 10760  002114  23C4               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10761  002116  0E00               	movlw	0
 10762  002118  23C5               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10763  00211A                     i1l1291:
 10764                           
 10765                           ; BSR set to: 0
 10766  00211A  ADCC               	btfss	___ftadd@sign& (0+255),6,b
 10767  00211C  D00C               	goto	i1l1292
 10768                           
 10769                           ; BSR set to: 0
 10770  00211E  0EFF               	movlw	255
 10771  002120  1BC6               	xorwf	___ftadd@f2& (0+255),f,b
 10772  002122  0EFF               	movlw	255
 10773  002124  1BC7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10774  002126  0EFF               	movlw	255
 10775  002128  1BC8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10776  00212A  0E01               	movlw	1
 10777  00212C  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10778  00212E  0E00               	movlw	0
 10779  002130  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10780  002132  0E00               	movlw	0
 10781  002134  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10782  002136                     i1l1292:
 10783                           
 10784                           ; BSR set to: 0
 10785                           
 10786                           ; BSR set to: 0
 10787  002136  0E00               	movlw	0
 10788  002138  6FCC               	movwf	___ftadd@sign& (0+255),b
 10789                           
 10790                           ; BSR set to: 0
 10791  00213A  51C3               	movf	___ftadd@f1& (0+255),w,b
 10792  00213C  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10793  00213E  51C4               	movf	(___ftadd@f1+1)& (0+255),w,b
 10794  002140  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10795  002142  51C5               	movf	(___ftadd@f1+2)& (0+255),w,b
 10796  002144  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10797                           
 10798                           ; BSR set to: 0
 10799  002146  AFC8               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10800  002148  D00E               	goto	i1l1293
 10801                           
 10802                           ; BSR set to: 0
 10803  00214A  0EFF               	movlw	255
 10804  00214C  1BC6               	xorwf	___ftadd@f2& (0+255),f,b
 10805  00214E  0EFF               	movlw	255
 10806  002150  1BC7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10807  002152  0EFF               	movlw	255
 10808  002154  1BC8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10809  002156  0E01               	movlw	1
 10810  002158  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10811  00215A  0E00               	movlw	0
 10812  00215C  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10813  00215E  0E00               	movlw	0
 10814  002160  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10815                           
 10816                           ; BSR set to: 0
 10817  002162  0E01               	movlw	1
 10818  002164  6FCC               	movwf	___ftadd@sign& (0+255),b
 10819  002166                     i1l1293:
 10820                           
 10821                           ; BSR set to: 0
 10822                           
 10823                           ; BSR set to: 0
 10824  002166  C0C6  F0BB         	movff	___ftadd@f2,___ftpack@arg
 10825  00216A  C0C7  F0BC         	movff	___ftadd@f2+1,___ftpack@arg+1
 10826  00216E  C0C8  F0BD         	movff	___ftadd@f2+2,___ftpack@arg+2
 10827  002172  C0CE  F0BE         	movff	___ftadd@exp1,___ftpack@exp
 10828  002176  C0CC  F0BF         	movff	___ftadd@sign,___ftpack@sign
 10829  00217A  ECCC  F012         	call	___ftpack	;wreg free
 10830  00217E  C0BB  F0C3         	movff	?___ftpack,?___ftadd
 10831  002182  C0BC  F0C4         	movff	?___ftpack+1,?___ftadd+1
 10832  002186  C0BD  F0C5         	movff	?___ftpack+2,?___ftadd+2
 10833  00218A  0012               	return	
 10834  00218C                     __end_of___ftadd:
 10835                           	opt stack 0
 10836                           pclatu	equ	0xFFB
 10837                           pclath	equ	0xFFA
 10838                           tblptru	equ	0xFF8
 10839                           tblptrh	equ	0xFF7
 10840                           tblptrl	equ	0xFF6
 10841                           tablat	equ	0xFF5
 10842                           prodh	equ	0xFF4
 10843                           prodl	equ	0xFF3
 10844                           intcon	equ	0xFF2
 10845                           intcon2	equ	0xFF1
 10846                           intcon3	equ	0xFF0
 10847                           postinc0	equ	0xFEE
 10848                           fsr0h	equ	0xFEA
 10849                           fsr0l	equ	0xFE9
 10850                           wreg	equ	0xFE8
 10851                           indf1	equ	0xFE7
 10852                           postdec1	equ	0xFE5
 10853                           fsr1h	equ	0xFE2
 10854                           fsr1l	equ	0xFE1
 10855                           bsr	equ	0xFE0
 10856                           indf2	equ	0xFDF
 10857                           postinc2	equ	0xFDE
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function ___ftpack *****************
 10863 ;; Defined at:
 10864 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  arg             3    0[BANK0 ] unsigned um
 10867 ;;  exp             1    3[BANK0 ] unsigned char 
 10868 ;;  sign            1    4[BANK0 ] unsigned char 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;		None
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  3    0[BANK0 ] float 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10880 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10884 ;;Total ram usage:        8 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:    4
 10887 ;; This function calls:
 10888 ;;		Nothing
 10889 ;; This function is called by:
 10890 ;;		___ftadd
 10891 ;;		___lwtoft
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text63
 10896  002598                     __ptext63:
 10897                           	opt stack 0
 10898  002598                     ___ftpack:
 10899                           	opt stack 19
 10900                           
 10901                           ;incstack = 0
 10902  002598  0100               	movlb	0	; () banked
 10903  00259A  51BE               	movf	___ftpack@exp& (0+255),w,b
 10904  00259C  B4D8               	btfsc	status,2,c
 10905  00259E  D005               	goto	i1u366_20
 10906                           
 10907                           ; BSR set to: 0
 10908  0025A0  51BB               	movf	___ftpack@arg& (0+255),w,b
 10909  0025A2  11BC               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10910  0025A4  11BD               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10911  0025A6  A4D8               	btfss	status,2,c
 10912  0025A8  D00C               	goto	i1l1234
 10913  0025AA                     i1u366_20:
 10914                           
 10915                           ; BSR set to: 0
 10916                           
 10917                           ; BSR set to: 0
 10918  0025AA  0E00               	movlw	0
 10919  0025AC  6FBB               	movwf	?___ftpack& (0+255),b
 10920  0025AE  0E00               	movlw	0
 10921  0025B0  6FBC               	movwf	(?___ftpack+1)& (0+255),b
 10922  0025B2  0E00               	movlw	0
 10923  0025B4  6FBD               	movwf	(?___ftpack+2)& (0+255),b
 10924                           
 10925                           ; BSR set to: 0
 10926  0025B6  0012               	return	
 10927  0025B8                     
 10928                           ; BSR set to: 0
 10929                           
 10930                           ; BSR set to: 0
 10931  0025B8  2BBE               	incf	___ftpack@exp& (0+255),f,b
 10932  0025BA  90D8               	bcf	status,0,c
 10933  0025BC  33BD               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10934  0025BE  33BC               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10935  0025C0  33BB               	rrcf	___ftpack@arg& (0+255),f,b
 10936  0025C2                     i1l1234:
 10937                           
 10938                           ; BSR set to: 0
 10939                           
 10940                           ; BSR set to: 0
 10941  0025C2  0E00               	movlw	0
 10942  0025C4  15BB               	andwf	___ftpack@arg& (0+255),w,b
 10943  0025C6  6FC0               	movwf	??___ftpack& (0+255),b
 10944  0025C8  0E00               	movlw	0
 10945  0025CA  15BC               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10946  0025CC  6FC1               	movwf	(??___ftpack+1)& (0+255),b
 10947  0025CE  0EFE               	movlw	254
 10948  0025D0  15BD               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10949  0025D2  6FC2               	movwf	(??___ftpack+2)& (0+255),b
 10950  0025D4  51C0               	movf	??___ftpack& (0+255),w,b
 10951  0025D6  11C1               	iorwf	(??___ftpack+1)& (0+255),w,b
 10952  0025D8  11C2               	iorwf	(??___ftpack+2)& (0+255),w,b
 10953  0025DA  B4D8               	btfsc	status,2,c
 10954  0025DC  D00C               	goto	i1l1237
 10955  0025DE  D7EC               	goto	i1l1235
 10956  0025E0                     
 10957                           ; BSR set to: 0
 10958                           
 10959                           ; BSR set to: 0
 10960  0025E0  2BBE               	incf	___ftpack@exp& (0+255),f,b
 10961                           
 10962                           ; BSR set to: 0
 10963  0025E2  0E01               	movlw	1
 10964  0025E4  27BB               	addwf	___ftpack@arg& (0+255),f,b
 10965  0025E6  0E00               	movlw	0
 10966  0025E8  23BC               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10967  0025EA  0E00               	movlw	0
 10968  0025EC  23BD               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10969  0025EE  90D8               	bcf	status,0,c
 10970  0025F0  33BD               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10971  0025F2  33BC               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10972  0025F4  33BB               	rrcf	___ftpack@arg& (0+255),f,b
 10973  0025F6                     i1l1237:
 10974                           
 10975                           ; BSR set to: 0
 10976                           
 10977                           ; BSR set to: 0
 10978  0025F6  0E00               	movlw	0
 10979  0025F8  15BB               	andwf	___ftpack@arg& (0+255),w,b
 10980  0025FA  6FC0               	movwf	??___ftpack& (0+255),b
 10981  0025FC  0E00               	movlw	0
 10982  0025FE  15BC               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10983  002600  6FC1               	movwf	(??___ftpack+1)& (0+255),b
 10984  002602  0EFF               	movlw	255
 10985  002604  15BD               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10986  002606  6FC2               	movwf	(??___ftpack+2)& (0+255),b
 10987  002608  51C0               	movf	??___ftpack& (0+255),w,b
 10988  00260A  11C1               	iorwf	(??___ftpack+1)& (0+255),w,b
 10989  00260C  11C2               	iorwf	(??___ftpack+2)& (0+255),w,b
 10990  00260E  B4D8               	btfsc	status,2,c
 10991  002610  D006               	goto	i1l1240
 10992  002612  D7E6               	goto	i1l1238
 10993  002614                     
 10994                           ; BSR set to: 0
 10995                           
 10996                           ; BSR set to: 0
 10997  002614  07BE               	decf	___ftpack@exp& (0+255),f,b
 10998  002616  90D8               	bcf	status,0,c
 10999  002618  37BB               	rlcf	___ftpack@arg& (0+255),f,b
 11000  00261A  37BC               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11001  00261C  37BD               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11002  00261E                     i1l1240:
 11003                           
 11004                           ; BSR set to: 0
 11005                           
 11006                           ; BSR set to: 0
 11007  00261E  BFBC               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11008  002620  D003               	goto	i1u370_20
 11009                           
 11010                           ; BSR set to: 0
 11011  002622  0E02               	movlw	2
 11012  002624  61BE               	cpfslt	___ftpack@exp& (0+255),b
 11013  002626  D7F6               	goto	i1l1241
 11014  002628                     i1u370_20:
 11015                           
 11016                           ; BSR set to: 0
 11017                           
 11018                           ; BSR set to: 0
 11019  002628  A1BE               	btfss	___ftpack@exp& (0+255),0,b
 11020                           
 11021                           ; BSR set to: 0
 11022  00262A  9FBC               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11023                           
 11024                           ; BSR set to: 0
 11025                           
 11026                           ; BSR set to: 0
 11027  00262C  90D8               	bcf	status,0,c
 11028  00262E  33BE               	rrcf	___ftpack@exp& (0+255),f,b
 11029  002630  51BE               	movf	___ftpack@exp& (0+255),w,b
 11030  002632  13BD               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11031                           
 11032                           ; BSR set to: 0
 11033  002634  51BF               	movf	___ftpack@sign& (0+255),w,b
 11034  002636  A4D8               	btfss	status,2,c
 11035                           
 11036                           ; BSR set to: 0
 11037  002638  8FBD               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11038                           
 11039                           ; BSR set to: 0
 11040                           
 11041                           ; BSR set to: 0
 11042  00263A  C0BB  F0BB         	movff	___ftpack@arg,?___ftpack
 11043  00263E  C0BC  F0BC         	movff	___ftpack@arg+1,?___ftpack+1
 11044  002642  C0BD  F0BD         	movff	___ftpack@arg+2,?___ftpack+2
 11045  002646  0012               	return	
 11046  002648                     __end_of___ftpack:
 11047                           	opt stack 0
 11048                           pclatu	equ	0xFFB
 11049                           pclath	equ	0xFFA
 11050                           tblptru	equ	0xFF8
 11051                           tblptrh	equ	0xFF7
 11052                           tblptrl	equ	0xFF6
 11053                           tablat	equ	0xFF5
 11054                           prodh	equ	0xFF4
 11055                           prodl	equ	0xFF3
 11056                           intcon	equ	0xFF2
 11057                           intcon2	equ	0xFF1
 11058                           intcon3	equ	0xFF0
 11059                           postinc0	equ	0xFEE
 11060                           fsr0h	equ	0xFEA
 11061                           fsr0l	equ	0xFE9
 11062                           wreg	equ	0xFE8
 11063                           indf1	equ	0xFE7
 11064                           postdec1	equ	0xFE5
 11065                           fsr1h	equ	0xFE2
 11066                           fsr1l	equ	0xFE1
 11067                           bsr	equ	0xFE0
 11068                           indf2	equ	0xFDF
 11069                           postinc2	equ	0xFDE
 11070                           fsr2h	equ	0xFDA
 11071                           fsr2l	equ	0xFD9
 11072                           status	equ	0xFD8
 11073                           
 11074 ;; *************** function _TMR0_ISR *****************
 11075 ;; Defined at:
 11076 ;;		line 128 in file "mcc_generated_files/tmr0.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;		None
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;		None
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  1    wreg      void 
 11083 ;; Registers used:
 11084 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;Total ram usage:        0 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    6
 11097 ;; This function calls:
 11098 ;;		_TMR0_CallBack
 11099 ;; This function is called by:
 11100 ;;		_INTERRUPT_InterruptManagerLow
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text64
 11105  002FB4                     __ptext64:
 11106                           	opt stack 0
 11107  002FB4                     _TMR0_ISR:
 11108                           	opt stack 18
 11109                           
 11110                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
 11111                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 11112                           
 11113                           ; BSR set to: 0
 11114                           ;incstack = 0
 11115  002FB4  94F2               	bcf	intcon,2,c	;volatile
 11116                           
 11117                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
 11118  002FB6  C0AF  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 11119                           
 11120                           ;tmr0.c: 139: if (++CountCallBack >= 152)
 11121  002FBA  0100               	movlb	0	; () banked
 11122  002FBC  4B9A               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 11123  002FBE  2B9B               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11124  002FC0  519B               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11125  002FC2  E104               	bnz	i1u555_20
 11126  002FC4  0E98               	movlw	152
 11127  002FC6  5D9A               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 11128  002FC8  A0D8               	btfss	status,0,c
 11129  002FCA  0012               	return	
 11130  002FCC                     i1u555_20:
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;tmr0.c: 140: {
 11134                           ;tmr0.c: 142: TMR0_CallBack();
 11135  002FCC  EC37  F018         	call	_TMR0_CallBack	;wreg free
 11136                           
 11137                           ;tmr0.c: 145: CountCallBack = 0;
 11138  002FD0  0E00               	movlw	0
 11139  002FD2  0100               	movlb	0	; () banked
 11140  002FD4  6F9B               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 11141  002FD6  0E00               	movlw	0
 11142  002FD8  6F9A               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 11143  002FDA  0012               	return	
 11144  002FDC                     __end_of_TMR0_ISR:
 11145                           	opt stack 0
 11146                           pclatu	equ	0xFFB
 11147                           pclath	equ	0xFFA
 11148                           tblptru	equ	0xFF8
 11149                           tblptrh	equ	0xFF7
 11150                           tblptrl	equ	0xFF6
 11151                           tablat	equ	0xFF5
 11152                           prodh	equ	0xFF4
 11153                           prodl	equ	0xFF3
 11154                           intcon	equ	0xFF2
 11155                           intcon2	equ	0xFF1
 11156                           intcon3	equ	0xFF0
 11157                           postinc0	equ	0xFEE
 11158                           fsr0h	equ	0xFEA
 11159                           fsr0l	equ	0xFE9
 11160                           wreg	equ	0xFE8
 11161                           indf1	equ	0xFE7
 11162                           postdec1	equ	0xFE5
 11163                           fsr1h	equ	0xFE2
 11164                           fsr1l	equ	0xFE1
 11165                           bsr	equ	0xFE0
 11166                           indf2	equ	0xFDF
 11167                           postinc2	equ	0xFDE
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function _TMR0_CallBack *****************
 11173 ;; Defined at:
 11174 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;		None
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;Total ram usage:        0 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    5
 11195 ;; This function calls:
 11196 ;;		Absolute function
 11197 ;;		_TMR0_DefaultInterruptHandler
 11198 ;; This function is called by:
 11199 ;;		_TMR0_ISR
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text65
 11204  00306E                     __ptext65:
 11205                           	opt stack 0
 11206  00306E                     _TMR0_CallBack:
 11207                           	opt stack 18
 11208                           
 11209                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;incstack = 0
 11213  00306E  0100               	movlb	0	; () banked
 11214  003070  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11215  003072  1174               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11216  003074  1175               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11217  003076  B4D8               	btfsc	status,2,c
 11218  003078  0012               	return	
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;tmr0.c: 156: {
 11222                           ;tmr0.c: 157: TMR0_InterruptHandler();
 11223  00307A  D801               	call	i1u550_28
 11224  00307C  0012               	return	
 11225  00307E                     i1u550_28:
 11226  00307E  0005               	push	
 11227  003080  6EFA               	movwf	pclath,c
 11228  003082  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11229  003084  6EFD               	movwf	tosl,c
 11230  003086  5174               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11231  003088  6EFE               	movwf	tosh,c
 11232  00308A  5175               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11233  00308C  6EFF               	movwf	tosu,c
 11234  00308E  50FA               	movf	pclath,w,c
 11235  003090  0012               	return		;indir
 11236  003092                     __end_of_TMR0_CallBack:
 11237                           	opt stack 0
 11238                           tosu	equ	0xFFF
 11239                           tosh	equ	0xFFE
 11240                           tosl	equ	0xFFD
 11241                           pclatu	equ	0xFFB
 11242                           pclath	equ	0xFFA
 11243                           tblptru	equ	0xFF8
 11244                           tblptrh	equ	0xFF7
 11245                           tblptrl	equ	0xFF6
 11246                           tablat	equ	0xFF5
 11247                           prodh	equ	0xFF4
 11248                           prodl	equ	0xFF3
 11249                           intcon	equ	0xFF2
 11250                           intcon2	equ	0xFF1
 11251                           intcon3	equ	0xFF0
 11252                           postinc0	equ	0xFEE
 11253                           fsr0h	equ	0xFEA
 11254                           fsr0l	equ	0xFE9
 11255                           wreg	equ	0xFE8
 11256                           indf1	equ	0xFE7
 11257                           postdec1	equ	0xFE5
 11258                           fsr1h	equ	0xFE2
 11259                           fsr1l	equ	0xFE1
 11260                           bsr	equ	0xFE0
 11261                           indf2	equ	0xFDF
 11262                           postinc2	equ	0xFDE
 11263                           fsr2h	equ	0xFDA
 11264                           fsr2l	equ	0xFD9
 11265                           status	equ	0xFD8
 11266                           
 11267 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11268 ;; Defined at:
 11269 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;		None
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;		None
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  1    wreg      void 
 11276 ;; Registers used:
 11277 ;;		None
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;Total ram usage:        0 bytes
 11288 ;; Hardware stack levels used:    1
 11289 ;; Hardware stack levels required when called:    4
 11290 ;; This function calls:
 11291 ;;		Nothing
 11292 ;; This function is called by:
 11293 ;;		_TMR0_Initialize
 11294 ;;		_TMR0_CallBack
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text66
 11299  00332A                     __ptext66:
 11300                           	opt stack 0
 11301  00332A                     _TMR0_DefaultInterruptHandler:
 11302                           	opt stack 18
 11303                           
 11304                           ;incstack = 0
 11305  00332A  0012               	return		;funcret
 11306  00332C                     __end_of_TMR0_DefaultInterruptHandler:
 11307                           	opt stack 0
 11308                           tosu	equ	0xFFF
 11309                           tosh	equ	0xFFE
 11310                           tosl	equ	0xFFD
 11311                           pclatu	equ	0xFFB
 11312                           pclath	equ	0xFFA
 11313                           tblptru	equ	0xFF8
 11314                           tblptrh	equ	0xFF7
 11315                           tblptrl	equ	0xFF6
 11316                           tablat	equ	0xFF5
 11317                           prodh	equ	0xFF4
 11318                           prodl	equ	0xFF3
 11319                           intcon	equ	0xFF2
 11320                           intcon2	equ	0xFF1
 11321                           intcon3	equ	0xFF0
 11322                           postinc0	equ	0xFEE
 11323                           fsr0h	equ	0xFEA
 11324                           fsr0l	equ	0xFE9
 11325                           wreg	equ	0xFE8
 11326                           indf1	equ	0xFE7
 11327                           postdec1	equ	0xFE5
 11328                           fsr1h	equ	0xFE2
 11329                           fsr1l	equ	0xFE1
 11330                           bsr	equ	0xFE0
 11331                           indf2	equ	0xFDF
 11332                           postinc2	equ	0xFDE
 11333                           fsr2h	equ	0xFDA
 11334                           fsr2l	equ	0xFD9
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function _ScanInput *****************
 11338 ;; Defined at:
 11339 ;;		line 481 in file "07_May_WaterMeter_Main.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  x               1    2[BANK0 ] unsigned char 
 11344 ;;  temp            1    1[BANK0 ] unsigned char 
 11345 ;;  portread        1    0[BANK0 ] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;Total ram usage:        3 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    4
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_INTERRUPT_InterruptManagerLow
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text67
 11370  002946                     __ptext67:
 11371                           	opt stack 0
 11372  002946                     _ScanInput:
 11373                           	opt stack 20
 11374                           
 11375                           ;07_May_WaterMeter_Main.c: 482: unsigned char portread = PORTG;
 11376                           
 11377                           ;incstack = 0
 11378  002946  CF86 F0BB          	movff	3974,ScanInput@portread	;volatile
 11379                           
 11380                           ;07_May_WaterMeter_Main.c: 525: unsigned char temp,x;
 11381                           ;07_May_WaterMeter_Main.c: 527: x=0;
 11382  00294A  0E00               	movlw	0
 11383  00294C  0100               	movlb	0	; () banked
 11384  00294E  6FBD               	movwf	ScanInput@x& (0+255),b
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;07_May_WaterMeter_Main.c: 528: temp=PORTG ;
 11388  002950  CF86 F0BC          	movff	3974,ScanInput@temp	;volatile
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;07_May_WaterMeter_Main.c: 529: INPUT_DS[x]=temp|INPUT_PS[x];
 11392  002954  51BD               	movf	ScanInput@x& (0+255),w,b
 11393  002956  0D01               	mullw	1
 11394  002958  0EE4               	movlw	low _INPUT_DS
 11395  00295A  24F3               	addwf	prodl,w,c
 11396  00295C  6ED9               	movwf	fsr2l,c
 11397  00295E  0E00               	movlw	high _INPUT_DS
 11398  002960  20F4               	addwfc	prodh,w,c
 11399  002962  6EDA               	movwf	fsr2h,c
 11400  002964  51BD               	movf	ScanInput@x& (0+255),w,b
 11401  002966  0D01               	mullw	1
 11402  002968  0EE6               	movlw	low _INPUT_PS
 11403  00296A  24F3               	addwf	prodl,w,c
 11404  00296C  6EE1               	movwf	fsr1l,c
 11405  00296E  0E00               	movlw	high _INPUT_PS
 11406  002970  20F4               	addwfc	prodh,w,c
 11407  002972  6EE2               	movwf	fsr1h,c
 11408  002974  50E7               	movf	indf1,w,c
 11409  002976  11BC               	iorwf	ScanInput@temp& (0+255),w,b
 11410  002978  6EDF               	movwf	indf2,c
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;07_May_WaterMeter_Main.c: 530: INPUT_PS[x]=temp;
 11414  00297A  51BD               	movf	ScanInput@x& (0+255),w,b
 11415  00297C  0D01               	mullw	1
 11416  00297E  0EE6               	movlw	low _INPUT_PS
 11417  002980  24F3               	addwf	prodl,w,c
 11418  002982  6ED9               	movwf	fsr2l,c
 11419  002984  0E00               	movlw	high _INPUT_PS
 11420  002986  20F4               	addwfc	prodh,w,c
 11421  002988  6EDA               	movwf	fsr2h,c
 11422  00298A  C0BC  FFDF         	movff	ScanInput@temp,indf2
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;07_May_WaterMeter_Main.c: 531: PORTGX.T_BYTE=INPUT_DS[x];
 11426  00298E  51BD               	movf	ScanInput@x& (0+255),w,b
 11427  002990  0D01               	mullw	1
 11428  002992  0EE4               	movlw	low _INPUT_DS
 11429  002994  24F3               	addwf	prodl,w,c
 11430  002996  6ED9               	movwf	fsr2l,c
 11431  002998  0E00               	movlw	high _INPUT_DS
 11432  00299A  20F4               	addwfc	prodh,w,c
 11433  00299C  6EDA               	movwf	fsr2h,c
 11434  00299E  50DF               	movf	indf2,w,c
 11435  0029A0  6E03               	movwf	_PORTGX,c
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;07_May_WaterMeter_Main.c: 532: x=x+1;
 11439  0029A2  29BD               	incf	ScanInput@x& (0+255),w,b
 11440  0029A4  6FBD               	movwf	ScanInput@x& (0+255),b
 11441                           
 11442                           ; BSR set to: 0
 11443  0029A6  0012               	return		;funcret
 11444  0029A8                     __end_of_ScanInput:
 11445                           	opt stack 0
 11446                           tosu	equ	0xFFF
 11447                           tosh	equ	0xFFE
 11448                           tosl	equ	0xFFD
 11449                           pclatu	equ	0xFFB
 11450                           pclath	equ	0xFFA
 11451                           tblptru	equ	0xFF8
 11452                           tblptrh	equ	0xFF7
 11453                           tblptrl	equ	0xFF6
 11454                           tablat	equ	0xFF5
 11455                           prodh	equ	0xFF4
 11456                           prodl	equ	0xFF3
 11457                           intcon	equ	0xFF2
 11458                           intcon2	equ	0xFF1
 11459                           intcon3	equ	0xFF0
 11460                           postinc0	equ	0xFEE
 11461                           fsr0h	equ	0xFEA
 11462                           fsr0l	equ	0xFE9
 11463                           wreg	equ	0xFE8
 11464                           indf1	equ	0xFE7
 11465                           postdec1	equ	0xFE5
 11466                           fsr1h	equ	0xFE2
 11467                           fsr1l	equ	0xFE1
 11468                           bsr	equ	0xFE0
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           fsr2h	equ	0xFDA
 11472                           fsr2l	equ	0xFD9
 11473                           status	equ	0xFD8
 11474                           
 11475 ;; *************** function _INT1_ISR *****************
 11476 ;; Defined at:
 11477 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;		None
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  1    wreg      void 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;Total ram usage:        0 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    6
 11498 ;; This function calls:
 11499 ;;		_INT1_CallBack
 11500 ;; This function is called by:
 11501 ;;		_INTERRUPT_InterruptManagerLow
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text68
 11506  003314                     __ptext68:
 11507                           	opt stack 0
 11508  003314                     _INT1_ISR:
 11509                           	opt stack 18
 11510                           
 11511                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;incstack = 0
 11515  003314  90F0               	bcf	intcon3,0,c	;volatile
 11516                           
 11517                           ;ext_int.c: 38: INT1_CallBack();
 11518  003316  EC49  F018         	call	_INT1_CallBack	;wreg free
 11519  00331A  0012               	return		;funcret
 11520  00331C                     __end_of_INT1_ISR:
 11521                           	opt stack 0
 11522                           tosu	equ	0xFFF
 11523                           tosh	equ	0xFFE
 11524                           tosl	equ	0xFFD
 11525                           pclatu	equ	0xFFB
 11526                           pclath	equ	0xFFA
 11527                           tblptru	equ	0xFF8
 11528                           tblptrh	equ	0xFF7
 11529                           tblptrl	equ	0xFF6
 11530                           tablat	equ	0xFF5
 11531                           prodh	equ	0xFF4
 11532                           prodl	equ	0xFF3
 11533                           intcon	equ	0xFF2
 11534                           intcon2	equ	0xFF1
 11535                           intcon3	equ	0xFF0
 11536                           postinc0	equ	0xFEE
 11537                           fsr0h	equ	0xFEA
 11538                           fsr0l	equ	0xFE9
 11539                           wreg	equ	0xFE8
 11540                           indf1	equ	0xFE7
 11541                           postdec1	equ	0xFE5
 11542                           fsr1h	equ	0xFE2
 11543                           fsr1l	equ	0xFE1
 11544                           bsr	equ	0xFE0
 11545                           indf2	equ	0xFDF
 11546                           postinc2	equ	0xFDE
 11547                           fsr2h	equ	0xFDA
 11548                           fsr2l	equ	0xFD9
 11549                           status	equ	0xFD8
 11550                           
 11551 ;; *************** function _INT1_CallBack *****************
 11552 ;; Defined at:
 11553 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;		None
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      void 
 11560 ;; Registers used:
 11561 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11571 ;;Total ram usage:        0 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:    5
 11574 ;; This function calls:
 11575 ;;		Absolute function
 11576 ;;		_INT1_DefaultInterruptHandler
 11577 ;; This function is called by:
 11578 ;;		_INT1_ISR
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text69
 11583  003092                     __ptext69:
 11584                           	opt stack 0
 11585  003092                     _INT1_CallBack:
 11586                           	opt stack 18
 11587                           
 11588                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 11589                           
 11590                           ;incstack = 0
 11591  003092  0100               	movlb	0	; () banked
 11592  003094  5170               	movf	_INT1_InterruptHandler& (0+255),w,b
 11593  003096  1171               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 11594  003098  1172               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 11595  00309A  B4D8               	btfsc	status,2,c
 11596  00309C  0012               	return	
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;ext_int.c: 46: {
 11600                           ;ext_int.c: 47: INT1_InterruptHandler();
 11601  00309E  D801               	call	i1u552_28
 11602  0030A0  0012               	return	
 11603  0030A2                     i1u552_28:
 11604  0030A2  0005               	push	
 11605  0030A4  6EFA               	movwf	pclath,c
 11606  0030A6  5170               	movf	_INT1_InterruptHandler& (0+255),w,b
 11607  0030A8  6EFD               	movwf	tosl,c
 11608  0030AA  5171               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 11609  0030AC  6EFE               	movwf	tosh,c
 11610  0030AE  5172               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 11611  0030B0  6EFF               	movwf	tosu,c
 11612  0030B2  50FA               	movf	pclath,w,c
 11613  0030B4  0012               	return		;indir
 11614  0030B6                     __end_of_INT1_CallBack:
 11615                           	opt stack 0
 11616                           tosu	equ	0xFFF
 11617                           tosh	equ	0xFFE
 11618                           tosl	equ	0xFFD
 11619                           pclatu	equ	0xFFB
 11620                           pclath	equ	0xFFA
 11621                           tblptru	equ	0xFF8
 11622                           tblptrh	equ	0xFF7
 11623                           tblptrl	equ	0xFF6
 11624                           tablat	equ	0xFF5
 11625                           prodh	equ	0xFF4
 11626                           prodl	equ	0xFF3
 11627                           intcon	equ	0xFF2
 11628                           intcon2	equ	0xFF1
 11629                           intcon3	equ	0xFF0
 11630                           postinc0	equ	0xFEE
 11631                           fsr0h	equ	0xFEA
 11632                           fsr0l	equ	0xFE9
 11633                           wreg	equ	0xFE8
 11634                           indf1	equ	0xFE7
 11635                           postdec1	equ	0xFE5
 11636                           fsr1h	equ	0xFE2
 11637                           fsr1l	equ	0xFE1
 11638                           bsr	equ	0xFE0
 11639                           indf2	equ	0xFDF
 11640                           postinc2	equ	0xFDE
 11641                           fsr2h	equ	0xFDA
 11642                           fsr2l	equ	0xFD9
 11643                           status	equ	0xFD8
 11644                           
 11645 ;; *************** function _INT1_DefaultInterruptHandler *****************
 11646 ;; Defined at:
 11647 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;		None
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1    wreg      void 
 11654 ;; Registers used:
 11655 ;;		None
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    4
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_EXT_INT_Initialize
 11672 ;;		_INT1_CallBack
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	text70
 11677  00332C                     __ptext70:
 11678                           	opt stack 0
 11679  00332C                     _INT1_DefaultInterruptHandler:
 11680                           	opt stack 18
 11681                           
 11682                           ;incstack = 0
 11683  00332C  0012               	return		;funcret
 11684  00332E                     __end_of_INT1_DefaultInterruptHandler:
 11685                           	opt stack 0
 11686                           tosu	equ	0xFFF
 11687                           tosh	equ	0xFFE
 11688                           tosl	equ	0xFFD
 11689                           pclatu	equ	0xFFB
 11690                           pclath	equ	0xFFA
 11691                           tblptru	equ	0xFF8
 11692                           tblptrh	equ	0xFF7
 11693                           tblptrl	equ	0xFF6
 11694                           tablat	equ	0xFF5
 11695                           prodh	equ	0xFF4
 11696                           prodl	equ	0xFF3
 11697                           intcon	equ	0xFF2
 11698                           intcon2	equ	0xFF1
 11699                           intcon3	equ	0xFF0
 11700                           postinc0	equ	0xFEE
 11701                           fsr0h	equ	0xFEA
 11702                           fsr0l	equ	0xFE9
 11703                           wreg	equ	0xFE8
 11704                           indf1	equ	0xFE7
 11705                           postdec1	equ	0xFE5
 11706                           fsr1h	equ	0xFE2
 11707                           fsr1l	equ	0xFE1
 11708                           bsr	equ	0xFE0
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           fsr2h	equ	0xFDA
 11712                           fsr2l	equ	0xFD9
 11713                           status	equ	0xFD8
 11714                           
 11715 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 11716 ;; Defined at:
 11717 ;;		line 114 in file "07_May_WaterMeter_Main.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;		None
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;		None
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;Total ram usage:       20 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    3
 11738 ;; This function calls:
 11739 ;;		_INT0_ISR
 11740 ;;		_read_RX_FIFO
 11741 ;;		i2_Xor_check
 11742 ;;		i2_read_ZIGBEE_short
 11743 ;; This function is called by:
 11744 ;;		Interrupt level 2
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           	psect	intcode
 11749  000008                     __pintcode:
 11750                           	opt stack 0
 11751  000008                     _INTERRUPT_InterruptManagerHigh:
 11752                           	opt stack 18
 11753                           
 11754                           ;incstack = 0
 11755  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11756  00000A  EFFC  F011         	goto	int_func
 11757                           tosu	equ	0xFFF
 11758                           tosh	equ	0xFFE
 11759                           tosl	equ	0xFFD
 11760                           pclatu	equ	0xFFB
 11761                           pclath	equ	0xFFA
 11762                           tblptru	equ	0xFF8
 11763                           tblptrh	equ	0xFF7
 11764                           tblptrl	equ	0xFF6
 11765                           tablat	equ	0xFF5
 11766                           prodh	equ	0xFF4
 11767                           prodl	equ	0xFF3
 11768                           intcon	equ	0xFF2
 11769                           intcon2	equ	0xFF1
 11770                           intcon3	equ	0xFF0
 11771                           postinc0	equ	0xFEE
 11772                           fsr0h	equ	0xFEA
 11773                           fsr0l	equ	0xFE9
 11774                           wreg	equ	0xFE8
 11775                           indf1	equ	0xFE7
 11776                           postdec1	equ	0xFE5
 11777                           fsr1h	equ	0xFE2
 11778                           fsr1l	equ	0xFE1
 11779                           bsr	equ	0xFE0
 11780                           indf2	equ	0xFDF
 11781                           postinc2	equ	0xFDE
 11782                           fsr2h	equ	0xFDA
 11783                           fsr2l	equ	0xFD9
 11784                           status	equ	0xFD8
 11785                           
 11786                           	psect	intcode_body
 11787  0023F8                     __pintcode_body:
 11788                           	opt stack 18
 11789  0023F8                     int_func:
 11790                           	opt stack 18
 11791  0023F8  CFFA F039          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
 11792  0023FC  CFFB F03A          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
 11793  002400  CFE9 F03B          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
 11794  002404  CFEA F03C          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
 11795  002408  CFE1 F03D          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
 11796  00240C  CFE2 F03E          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
 11797  002410  CFD9 F03F          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
 11798  002414  CFDA F040          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
 11799  002418  CFF3 F041          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
 11800  00241C  CFF4 F042          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
 11801  002420  CFF6 F043          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
 11802  002424  CFF7 F044          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
 11803  002428  CFF8 F045          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
 11804  00242C  CFF5 F046          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
 11805  002430  C04B  F047         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
 11806  002434  C04C  F048         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
 11807  002438  C04D  F049         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
 11808  00243C  C04E  F04A         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
 11809                           
 11810                           ;07_May_WaterMeter_Main.c: 117: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 11811  002440  B8F2               	btfsc	intcon,4,c	;volatile
 11812  002442  A2F2               	btfss	intcon,1,c	;volatile
 11813  002444  D020               	goto	i2l867
 11814                           
 11815                           ;07_May_WaterMeter_Main.c: 118: {
 11816                           ;07_May_WaterMeter_Main.c: 119: INTTRUPT=read_ZIGBEE_short(0X31);
 11817  002446  0E31               	movlw	49
 11818  002448  EC7E  F018         	call	i2_read_ZIGBEE_short
 11819  00244C  6E26               	movwf	_INTTRUPT,c
 11820                           
 11821                           ;07_May_WaterMeter_Main.c: 121: if((INTTRUPT & 0x08)==0x08){
 11822  00244E  A626               	btfss	_INTTRUPT,3,c
 11823  002450  D018               	goto	i2l868
 11824                           
 11825                           ;07_May_WaterMeter_Main.c: 122: INTCONbits.GIE=0;
 11826  002452  9EF2               	bcf	intcon,7,c	;volatile
 11827                           
 11828                           ;07_May_WaterMeter_Main.c: 123: read_RX_FIFO();
 11829  002454  ECCE  F00D         	call	_read_RX_FIFO	;wreg free
 11830                           
 11831                           ;07_May_WaterMeter_Main.c: 124: INTCONbits.GIE=1;
 11832  002458  8EF2               	bsf	intcon,7,c	;volatile
 11833                           
 11834                           ;07_May_WaterMeter_Main.c: 125: CRC=Xor_check(DATA_RX,3);
 11835  00245A  0EB0               	movlw	low _DATA_RX
 11836  00245C  6E27               	movwf	i2Xor_check@data_value,c
 11837  00245E  0E00               	movlw	high _DATA_RX
 11838  002460  6E28               	movwf	i2Xor_check@data_value+1,c
 11839  002462  0E03               	movlw	3
 11840  002464  6E29               	movwf	i2Xor_check@length,c
 11841  002466  ECAF  F016         	call	i2_Xor_check	;wreg free
 11842  00246A  C027  F092         	movff	?i2_Xor_check,_CRC
 11843  00246E  C028  F093         	movff	?i2_Xor_check+1,_CRC+1
 11844                           
 11845                           ;07_May_WaterMeter_Main.c: 126: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]);
 11846  002472  0100               	movlb	0	; () banked
 11847  002474  51B4               	movf	(_DATA_RX+4)& (0+255),w,b
 11848  002476  6E37               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
 11849  002478  51B3               	movf	(_DATA_RX+3)& (0+255),w,b
 11850  00247A  6F96               	movwf	_Rv_CRC& (0+255),b
 11851  00247C  C037  F097         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;07_May_WaterMeter_Main.c: 127: __nop();
 11855  002480  F000               	nop	
 11856  002482                     i2l868:
 11857                           
 11858                           ;07_May_WaterMeter_Main.c: 128: }
 11859                           ;07_May_WaterMeter_Main.c: 129: INT0_ISR();
 11860  002482  EC8E  F019         	call	_INT0_ISR	;wreg free
 11861  002486                     i2l867:
 11862                           
 11863                           ;07_May_WaterMeter_Main.c: 131: else
 11864                           ;07_May_WaterMeter_Main.c: 132: {
 11865  002486  C04A  F04E         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
 11866  00248A  C049  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
 11867  00248E  C048  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
 11868  002492  C047  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
 11869  002496  C046  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
 11870  00249A  C045  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
 11871  00249E  C044  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
 11872  0024A2  C043  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
 11873  0024A6  C042  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
 11874  0024AA  C041  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
 11875  0024AE  C040  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
 11876  0024B2  C03F  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
 11877  0024B6  C03E  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
 11878  0024BA  C03D  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
 11879  0024BE  C03C  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
 11880  0024C2  C03B  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
 11881  0024C6  C03A  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
 11882  0024CA  C039  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
 11883  0024CE  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11884  0024D0  0011               	retfie		f
 11885  0024D2                     __end_of_INTERRUPT_InterruptManagerHigh:
 11886                           	opt stack 0
 11887                           tosu	equ	0xFFF
 11888                           tosh	equ	0xFFE
 11889                           tosl	equ	0xFFD
 11890                           pclatu	equ	0xFFB
 11891                           pclath	equ	0xFFA
 11892                           tblptru	equ	0xFF8
 11893                           tblptrh	equ	0xFF7
 11894                           tblptrl	equ	0xFF6
 11895                           tablat	equ	0xFF5
 11896                           prodh	equ	0xFF4
 11897                           prodl	equ	0xFF3
 11898                           intcon	equ	0xFF2
 11899                           intcon2	equ	0xFF1
 11900                           intcon3	equ	0xFF0
 11901                           postinc0	equ	0xFEE
 11902                           fsr0h	equ	0xFEA
 11903                           fsr0l	equ	0xFE9
 11904                           wreg	equ	0xFE8
 11905                           indf1	equ	0xFE7
 11906                           postdec1	equ	0xFE5
 11907                           fsr1h	equ	0xFE2
 11908                           fsr1l	equ	0xFE1
 11909                           bsr	equ	0xFE0
 11910                           indf2	equ	0xFDF
 11911                           postinc2	equ	0xFDE
 11912                           fsr2h	equ	0xFDA
 11913                           fsr2l	equ	0xFD9
 11914                           status	equ	0xFD8
 11915                           
 11916 ;; *************** function i2_read_ZIGBEE_short *****************
 11917 ;; Defined at:
 11918 ;;		line 404 in file "zigbee.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  address         1    wreg     unsigned char 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  address         1    2[COMRAM] unsigned char 
 11923 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      unsigned char 
 11926 ;; Registers used:
 11927 ;;		wreg, status,2, status,0, cstack
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;Total ram usage:        2 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:    1
 11940 ;; This function calls:
 11941 ;;		i2_SPI_Read
 11942 ;;		i2_SPI_Write
 11943 ;; This function is called by:
 11944 ;;		_INTERRUPT_InterruptManagerHigh
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           	psect	text72
 11949  0030FC                     __ptext72:
 11950                           	opt stack 0
 11951  0030FC                     i2_read_ZIGBEE_short:
 11952                           	opt stack 19
 11953                           
 11954                           ;incstack = 0
 11955                           ;i2read_ZIGBEE_short@address stored from wreg
 11956  0030FC  6E29               	movwf	i2read_ZIGBEE_short@address,c
 11957                           
 11958                           ;zigbee.c: 405: unsigned char data_r = 0;
 11959  0030FE  0E00               	movlw	0
 11960  003100  6E2A               	movwf	i2read_ZIGBEE_short@data_r,c
 11961                           
 11962                           ;zigbee.c: 407: PORTCbits.RC0=0;
 11963  003102  9082               	bcf	3970,0,c	;volatile
 11964                           
 11965                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
 11966  003104  5029               	movf	i2read_ZIGBEE_short@address,w,c
 11967  003106  2429               	addwf	i2read_ZIGBEE_short@address,w,c
 11968  003108  0B7E               	andlw	126
 11969  00310A  6E29               	movwf	i2read_ZIGBEE_short@address,c
 11970                           
 11971                           ;zigbee.c: 409: SPI_Write(address);
 11972  00310C  5029               	movf	i2read_ZIGBEE_short@address,w,c
 11973  00310E  EC4E  F019         	call	i2_SPI_Write
 11974                           
 11975                           ;zigbee.c: 410: data_r = SPI_Read();
 11976  003112  EC56  F019         	call	i2_SPI_Read	;wreg free
 11977  003116  6E2A               	movwf	i2read_ZIGBEE_short@data_r,c
 11978                           
 11979                           ;zigbee.c: 411: PORTCbits.RC0=1;
 11980  003118  8082               	bsf	3970,0,c	;volatile
 11981                           
 11982                           ;zigbee.c: 413: return data_r;
 11983  00311A  502A               	movf	i2read_ZIGBEE_short@data_r,w,c
 11984  00311C  0012               	return	
 11985  00311E                     __end_ofi2_read_ZIGBEE_short:
 11986                           	opt stack 0
 11987                           tosu	equ	0xFFF
 11988                           tosh	equ	0xFFE
 11989                           tosl	equ	0xFFD
 11990                           pclatu	equ	0xFFB
 11991                           pclath	equ	0xFFA
 11992                           tblptru	equ	0xFF8
 11993                           tblptrh	equ	0xFF7
 11994                           tblptrl	equ	0xFF6
 11995                           tablat	equ	0xFF5
 11996                           prodh	equ	0xFF4
 11997                           prodl	equ	0xFF3
 11998                           intcon	equ	0xFF2
 11999                           intcon2	equ	0xFF1
 12000                           intcon3	equ	0xFF0
 12001                           postinc0	equ	0xFEE
 12002                           fsr0h	equ	0xFEA
 12003                           fsr0l	equ	0xFE9
 12004                           wreg	equ	0xFE8
 12005                           indf1	equ	0xFE7
 12006                           postdec1	equ	0xFE5
 12007                           fsr1h	equ	0xFE2
 12008                           fsr1l	equ	0xFE1
 12009                           bsr	equ	0xFE0
 12010                           indf2	equ	0xFDF
 12011                           postinc2	equ	0xFDE
 12012                           fsr2h	equ	0xFDA
 12013                           fsr2l	equ	0xFD9
 12014                           status	equ	0xFD8
 12015                           
 12016 ;; *************** function i2_Xor_check *****************
 12017 ;; Defined at:
 12018 ;;		line 504 in file "zigbee.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  data_value      2    0[COMRAM] PTR unsigned char 
 12021 ;;		 -> DATA_TX(3), DATA_RX(5), 
 12022 ;;  length          1    2[COMRAM] unsigned char 
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;  Xor_check       2    6[COMRAM] unsigned short 
 12025 ;;  Xor_check       2    4[COMRAM] unsigned short 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  2    0[COMRAM] unsigned short 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        8 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; This function calls:
 12042 ;;		Nothing
 12043 ;; This function is called by:
 12044 ;;		_INTERRUPT_InterruptManagerHigh
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text73
 12049  002D5E                     __ptext73:
 12050                           	opt stack 0
 12051  002D5E                     i2_Xor_check:
 12052                           	opt stack 20
 12053                           
 12054                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
 12055                           
 12056                           ;incstack = 0
 12057  002D5E  0E8D               	movlw	141
 12058  002D60  6E2C               	movwf	i2Xor_check@xor_value+1,c
 12059  002D62  0E0D               	movlw	13
 12060  002D64  6E2B               	movwf	i2Xor_check@xor_value,c
 12061                           
 12062                           ;zigbee.c: 507: unsigned short xor=0x00;
 12063  002D66  0E00               	movlw	0
 12064  002D68  6E2E               	movwf	i2Xor_check@xor+1,c
 12065  002D6A  0E00               	movlw	0
 12066  002D6C  6E2D               	movwf	i2Xor_check@xor,c
 12067                           
 12068                           ;zigbee.c: 508: while(length --)
 12069  002D6E  D00A               	goto	i2l559
 12070  002D70                     
 12071                           ;zigbee.c: 509: {
 12072                           ;zigbee.c: 510: xor_value ^= *data_value++;
 12073  002D70  C027  FFD9         	movff	i2Xor_check@data_value,fsr2l
 12074  002D74  C028  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
 12075  002D78  50DF               	movf	indf2,w,c
 12076  002D7A  6E2A               	movwf	??i2_Xor_check& (0+255),c
 12077  002D7C  502A               	movf	??i2_Xor_check,w,c
 12078  002D7E  1A2B               	xorwf	i2Xor_check@xor_value,f,c
 12079  002D80  4A27               	infsnz	i2Xor_check@data_value,f,c
 12080  002D82  2A28               	incf	i2Xor_check@data_value+1,f,c
 12081  002D84                     i2l559:
 12082  002D84  0629               	decf	i2Xor_check@length,f,c
 12083  002D86  2829               	incf	i2Xor_check@length,w,c
 12084  002D88  A4D8               	btfss	status,2,c
 12085  002D8A  D7F2               	goto	i2l560
 12086                           
 12087                           ;zigbee.c: 511: }
 12088                           ;zigbee.c: 512: xor=xor_value;
 12089  002D8C  C02B  F02D         	movff	i2Xor_check@xor_value,i2Xor_check@xor
 12090  002D90  C02C  F02E         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
 12091                           
 12092                           ;zigbee.c: 513: return(xor);
 12093  002D94  C02D  F027         	movff	i2Xor_check@xor,?i2_Xor_check
 12094  002D98  C02E  F028         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
 12095  002D9C  0012               	return		;funcret
 12096  002D9E                     __end_ofi2_Xor_check:
 12097                           	opt stack 0
 12098                           tosu	equ	0xFFF
 12099                           tosh	equ	0xFFE
 12100                           tosl	equ	0xFFD
 12101                           pclatu	equ	0xFFB
 12102                           pclath	equ	0xFFA
 12103                           tblptru	equ	0xFF8
 12104                           tblptrh	equ	0xFF7
 12105                           tblptrl	equ	0xFF6
 12106                           tablat	equ	0xFF5
 12107                           prodh	equ	0xFF4
 12108                           prodl	equ	0xFF3
 12109                           intcon	equ	0xFF2
 12110                           intcon2	equ	0xFF1
 12111                           intcon3	equ	0xFF0
 12112                           postinc0	equ	0xFEE
 12113                           fsr0h	equ	0xFEA
 12114                           fsr0l	equ	0xFE9
 12115                           wreg	equ	0xFE8
 12116                           indf1	equ	0xFE7
 12117                           postdec1	equ	0xFE5
 12118                           fsr1h	equ	0xFE2
 12119                           fsr1l	equ	0xFE1
 12120                           bsr	equ	0xFE0
 12121                           indf2	equ	0xFDF
 12122                           postinc2	equ	0xFDE
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127 ;; *************** function _read_RX_FIFO *****************
 12128 ;; Defined at:
 12129 ;;		line 11 in file "zigbee.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;		None
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  i               1   15[COMRAM] unsigned char 
 12134 ;;  temp            1   14[COMRAM] unsigned char 
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;Total ram usage:        7 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:    2
 12151 ;; This function calls:
 12152 ;;		_read_ZIGBEE_long
 12153 ;;		i2_write_ZIGBEE_short
 12154 ;; This function is called by:
 12155 ;;		_INTERRUPT_InterruptManagerHigh
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text74
 12160  001B9C                     __ptext74:
 12161                           	opt stack 0
 12162  001B9C                     _read_RX_FIFO:
 12163                           	opt stack 18
 12164                           
 12165                           ;zigbee.c: 13: unsigned char temp = 0;
 12166                           
 12167                           ;incstack = 0
 12168  001B9C  0E00               	movlw	0
 12169  001B9E  6E35               	movwf	read_RX_FIFO@temp,c
 12170                           
 12171                           ;zigbee.c: 14: unsigned char i = 0;
 12172  001BA0  0E00               	movlw	0
 12173  001BA2  6E36               	movwf	read_RX_FIFO@i,c
 12174                           
 12175                           ;zigbee.c: 16: temp=0;
 12176  001BA4  0E00               	movlw	0
 12177  001BA6  6E35               	movwf	read_RX_FIFO@temp,c
 12178                           
 12179                           ;zigbee.c: 17: temp = temp | 0x04;
 12180  001BA8  5035               	movf	read_RX_FIFO@temp,w,c
 12181  001BAA  0904               	iorlw	4
 12182  001BAC  6E35               	movwf	read_RX_FIFO@temp,c
 12183                           
 12184                           ;zigbee.c: 18: write_ZIGBEE_short(0x39, temp);
 12185  001BAE  C035  F029         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 12186  001BB2  0E39               	movlw	57
 12187  001BB4  ECBE  F018         	call	i2_write_ZIGBEE_short
 12188                           
 12189                           ;zigbee.c: 20: LENGTH=read_ZIGBEE_long(0x300);
 12190  001BB8  0E03               	movlw	3
 12191  001BBA  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12192  001BBC  0E00               	movlw	0
 12193  001BBE  6E29               	movwf	read_ZIGBEE_long@address,c
 12194  001BC0  EC7B  F015         	call	_read_ZIGBEE_long	;wreg free
 12195  001BC4  6E23               	movwf	_LENGTH,c
 12196                           
 12197                           ;zigbee.c: 21: __nop();
 12198  001BC6  F000               	nop	
 12199                           
 12200                           ;zigbee.c: 22: for(i=0; i<128; i++)
 12201  001BC8  0E00               	movlw	0
 12202  001BCA  6E36               	movwf	read_RX_FIFO@i,c
 12203  001BCC  0E7F               	movlw	127
 12204  001BCE  6436               	cpfsgt	read_RX_FIFO@i,c
 12205  001BD0  D001               	goto	i2l374
 12206  001BD2  D06A               	goto	i2u215_40
 12207  001BD4                     i2l374:
 12208                           
 12209                           ;zigbee.c: 23: {
 12210                           ;zigbee.c: 24: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 12211  001BD4  0E02               	movlw	low _DATA_LENGHT
 12212  001BD6  6EF6               	movwf	tblptrl,c
 12213  001BD8                     	if	1	;There is more than 1 active tblptr byte
 12214  001BD8  0E10               	movlw	high _DATA_LENGHT
 12215  001BDA  6EF7               	movwf	tblptrh,c
 12216  001BDC                     	endif
 12217  001BDC                     	if	1	;There are 3 active tblptr bytes
 12218  001BDC  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12219  001BDE  6EF8               	movwf	tblptru,c
 12220  001BE0                     	endif
 12221  001BE0  0008               	tblrd		*
 12222  001BE2  50F5               	movf	tablat,w,c
 12223  001BE4  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12224  001BE6  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12225  001BE8  0E01               	movlw	low _HEADER_LENGHT
 12226  001BEA  6EF6               	movwf	tblptrl,c
 12227  001BEC                     	if	1	;There is more than 1 active tblptr byte
 12228  001BEC  0E10               	movlw	high _HEADER_LENGHT
 12229  001BEE  6EF7               	movwf	tblptrh,c
 12230  001BF0                     	endif
 12231  001BF0                     	if	1	;There are 3 active tblptr bytes
 12232  001BF0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12233  001BF2  6EF8               	movwf	tblptru,c
 12234  001BF4                     	endif
 12235  001BF4  0008               	tblrd		*
 12236  001BF6  50F5               	movf	tablat,w,c
 12237  001BF8  2630               	addwf	??_read_RX_FIFO,f,c
 12238  001BFA  0E00               	movlw	0
 12239  001BFC  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12240  001BFE  0E05               	movlw	5
 12241  001C00  2630               	addwf	??_read_RX_FIFO,f,c
 12242  001C02  0E00               	movlw	0
 12243  001C04  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12244  001C06  5036               	movf	read_RX_FIFO@i,w,c
 12245  001C08  6E32               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 12246  001C0A  6A33               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 12247  001C0C  5030               	movf	??_read_RX_FIFO,w,c
 12248  001C0E  5C32               	subwf	??_read_RX_FIFO+2,w,c
 12249  001C10  5033               	movf	??_read_RX_FIFO+3,w,c
 12250  001C12  0A80               	xorlw	128
 12251  001C14  6E34               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 12252  001C16  5031               	movf	??_read_RX_FIFO+1,w,c
 12253  001C18  0A80               	xorlw	128
 12254  001C1A  5834               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 12255  001C1C  B0D8               	btfsc	status,0,c
 12256  001C1E  D012               	goto	i2l376
 12257                           
 12258                           ;zigbee.c: 25: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 12259  001C20  5036               	movf	read_RX_FIFO@i,w,c
 12260  001C22  0D01               	mullw	1
 12261  001C24  0E00               	movlw	low _data_RX_FIFO
 12262  001C26  24F3               	addwf	prodl,w,c
 12263  001C28  6ED9               	movwf	fsr2l,c
 12264  001C2A  0E01               	movlw	high _data_RX_FIFO
 12265  001C2C  20F4               	addwfc	prodh,w,c
 12266  001C2E  6EDA               	movwf	fsr2h,c
 12267  001C30  5036               	movf	read_RX_FIFO@i,w,c
 12268  001C32  0100               	movlb	0	; () banked
 12269  001C34  25EC               	addwf	_address_RX_FIFO& (0+255),w,b
 12270  001C36  6E29               	movwf	read_ZIGBEE_long@address,c
 12271  001C38  0E00               	movlw	0
 12272  001C3A  21ED               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 12273  001C3C  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12274  001C3E  EC7B  F015         	call	_read_ZIGBEE_long	;wreg free
 12275  001C42  6EDF               	movwf	indf2,c
 12276  001C44                     i2l376:
 12277                           
 12278                           ;zigbee.c: 26: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 12279  001C44  0E02               	movlw	low _DATA_LENGHT
 12280  001C46  6EF6               	movwf	tblptrl,c
 12281  001C48                     	if	1	;There is more than 1 active tblptr byte
 12282  001C48  0E10               	movlw	high _DATA_LENGHT
 12283  001C4A  6EF7               	movwf	tblptrh,c
 12284  001C4C                     	endif
 12285  001C4C                     	if	1	;There are 3 active tblptr bytes
 12286  001C4C  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12287  001C4E  6EF8               	movwf	tblptru,c
 12288  001C50                     	endif
 12289  001C50  0008               	tblrd		*
 12290  001C52  50F5               	movf	tablat,w,c
 12291  001C54  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12292  001C56  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12293  001C58  0E01               	movlw	low _HEADER_LENGHT
 12294  001C5A  6EF6               	movwf	tblptrl,c
 12295  001C5C                     	if	1	;There is more than 1 active tblptr byte
 12296  001C5C  0E10               	movlw	high _HEADER_LENGHT
 12297  001C5E  6EF7               	movwf	tblptrh,c
 12298  001C60                     	endif
 12299  001C60                     	if	1	;There are 3 active tblptr bytes
 12300  001C60  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12301  001C62  6EF8               	movwf	tblptru,c
 12302  001C64                     	endif
 12303  001C64  0008               	tblrd		*
 12304  001C66  50F5               	movf	tablat,w,c
 12305  001C68  2630               	addwf	??_read_RX_FIFO,f,c
 12306  001C6A  0E00               	movlw	0
 12307  001C6C  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12308  001C6E  0E05               	movlw	5
 12309  001C70  2630               	addwf	??_read_RX_FIFO,f,c
 12310  001C72  0E00               	movlw	0
 12311  001C74  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12312  001C76  5036               	movf	read_RX_FIFO@i,w,c
 12313  001C78  6E32               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 12314  001C7A  6A33               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 12315  001C7C  5030               	movf	??_read_RX_FIFO,w,c
 12316  001C7E  5C32               	subwf	??_read_RX_FIFO+2,w,c
 12317  001C80  5033               	movf	??_read_RX_FIFO+3,w,c
 12318  001C82  0A80               	xorlw	128
 12319  001C84  6E34               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 12320  001C86  5031               	movf	??_read_RX_FIFO+1,w,c
 12321  001C88  0A80               	xorlw	128
 12322  001C8A  5834               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 12323  001C8C  A0D8               	btfss	status,0,c
 12324  001C8E  D00A               	goto	i2l377
 12325                           
 12326                           ;zigbee.c: 27: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 12327  001C90  5036               	movf	read_RX_FIFO@i,w,c
 12328  001C92  0100               	movlb	0	; () banked
 12329  001C94  25EC               	addwf	_address_RX_FIFO& (0+255),w,b
 12330  001C96  6E29               	movwf	read_ZIGBEE_long@address,c
 12331  001C98  0E00               	movlw	0
 12332  001C9A  21ED               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 12333  001C9C  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12334  001C9E  EC7B  F015         	call	_read_ZIGBEE_long	;wreg free
 12335  001CA2  6E1E               	movwf	_lost_data,c
 12336  001CA4                     i2l377:
 12337  001CA4  2A36               	incf	read_RX_FIFO@i,f,c
 12338  001CA6  D792               	goto	L2
 12339  001CA8                     i2u215_40:
 12340                           
 12341                           ;zigbee.c: 28: }
 12342                           ;zigbee.c: 30: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 12343  001CA8  0E01               	movlw	low _HEADER_LENGHT
 12344  001CAA  6EF6               	movwf	tblptrl,c
 12345  001CAC                     	if	1	;There is more than 1 active tblptr byte
 12346  001CAC  0E10               	movlw	high _HEADER_LENGHT
 12347  001CAE  6EF7               	movwf	tblptrh,c
 12348  001CB0                     	endif
 12349  001CB0                     	if	1	;There are 3 active tblptr bytes
 12350  001CB0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12351  001CB2  6EF8               	movwf	tblptru,c
 12352  001CB4                     	endif
 12353  001CB4  0008               	tblrd		*
 12354  001CB6  50F5               	movf	tablat,w,c
 12355  001CB8  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12356  001CBA  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12357  001CBC  0E01               	movlw	1
 12358  001CBE  2630               	addwf	??_read_RX_FIFO,f,c
 12359  001CC0  0E00               	movlw	0
 12360  001CC2  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12361  001CC4  0E00               	movlw	low _data_RX_FIFO
 12362  001CC6  2430               	addwf	??_read_RX_FIFO,w,c
 12363  001CC8  6ED9               	movwf	fsr2l,c
 12364  001CCA  0E01               	movlw	high _data_RX_FIFO
 12365  001CCC  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12366  001CCE  6EDA               	movwf	fsr2h,c
 12367  001CD0  50DF               	movf	indf2,w,c
 12368  001CD2  0100               	movlb	0	; () banked
 12369  001CD4  6FB0               	movwf	_DATA_RX& (0+255),b
 12370                           
 12371                           ;zigbee.c: 31: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 12372  001CD6  0E01               	movlw	low _HEADER_LENGHT
 12373  001CD8  6EF6               	movwf	tblptrl,c
 12374  001CDA                     	if	1	;There is more than 1 active tblptr byte
 12375  001CDA  0E10               	movlw	high _HEADER_LENGHT
 12376  001CDC  6EF7               	movwf	tblptrh,c
 12377  001CDE                     	endif
 12378  001CDE                     	if	1	;There are 3 active tblptr bytes
 12379  001CDE  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12380  001CE0  6EF8               	movwf	tblptru,c
 12381  001CE2                     	endif
 12382  001CE2  0008               	tblrd		*
 12383  001CE4  50F5               	movf	tablat,w,c
 12384  001CE6  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12385  001CE8  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12386  001CEA  0E02               	movlw	2
 12387  001CEC  2630               	addwf	??_read_RX_FIFO,f,c
 12388  001CEE  0E00               	movlw	0
 12389  001CF0  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12390  001CF2  0E00               	movlw	low _data_RX_FIFO
 12391  001CF4  2430               	addwf	??_read_RX_FIFO,w,c
 12392  001CF6  6ED9               	movwf	fsr2l,c
 12393  001CF8  0E01               	movlw	high _data_RX_FIFO
 12394  001CFA  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12395  001CFC  6EDA               	movwf	fsr2h,c
 12396  001CFE  50DF               	movf	indf2,w,c
 12397  001D00  6FB1               	movwf	(_DATA_RX+1)& (0+255),b
 12398                           
 12399                           ;zigbee.c: 32: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 12400  001D02  0E01               	movlw	low _HEADER_LENGHT
 12401  001D04  6EF6               	movwf	tblptrl,c
 12402  001D06                     	if	1	;There is more than 1 active tblptr byte
 12403  001D06  0E10               	movlw	high _HEADER_LENGHT
 12404  001D08  6EF7               	movwf	tblptrh,c
 12405  001D0A                     	endif
 12406  001D0A                     	if	1	;There are 3 active tblptr bytes
 12407  001D0A  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12408  001D0C  6EF8               	movwf	tblptru,c
 12409  001D0E                     	endif
 12410  001D0E  0008               	tblrd		*
 12411  001D10  50F5               	movf	tablat,w,c
 12412  001D12  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12413  001D14  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12414  001D16  0E03               	movlw	3
 12415  001D18  2630               	addwf	??_read_RX_FIFO,f,c
 12416  001D1A  0E00               	movlw	0
 12417  001D1C  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12418  001D1E  0E00               	movlw	low _data_RX_FIFO
 12419  001D20  2430               	addwf	??_read_RX_FIFO,w,c
 12420  001D22  6ED9               	movwf	fsr2l,c
 12421  001D24  0E01               	movlw	high _data_RX_FIFO
 12422  001D26  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12423  001D28  6EDA               	movwf	fsr2h,c
 12424  001D2A  50DF               	movf	indf2,w,c
 12425  001D2C  6FB2               	movwf	(_DATA_RX+2)& (0+255),b
 12426                           
 12427                           ;zigbee.c: 34: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 12428  001D2E  0E01               	movlw	low _HEADER_LENGHT
 12429  001D30  6EF6               	movwf	tblptrl,c
 12430  001D32                     	if	1	;There is more than 1 active tblptr byte
 12431  001D32  0E10               	movlw	high _HEADER_LENGHT
 12432  001D34  6EF7               	movwf	tblptrh,c
 12433  001D36                     	endif
 12434  001D36                     	if	1	;There are 3 active tblptr bytes
 12435  001D36  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12436  001D38  6EF8               	movwf	tblptru,c
 12437  001D3A                     	endif
 12438  001D3A  0008               	tblrd		*
 12439  001D3C  50F5               	movf	tablat,w,c
 12440  001D3E  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12441  001D40  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12442  001D42  0E04               	movlw	4
 12443  001D44  2630               	addwf	??_read_RX_FIFO,f,c
 12444  001D46  0E00               	movlw	0
 12445  001D48  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12446  001D4A  0E00               	movlw	low _data_RX_FIFO
 12447  001D4C  2430               	addwf	??_read_RX_FIFO,w,c
 12448  001D4E  6ED9               	movwf	fsr2l,c
 12449  001D50  0E01               	movlw	high _data_RX_FIFO
 12450  001D52  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12451  001D54  6EDA               	movwf	fsr2h,c
 12452  001D56  50DF               	movf	indf2,w,c
 12453  001D58  6FB3               	movwf	(_DATA_RX+3)& (0+255),b
 12454                           
 12455                           ;zigbee.c: 35: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 12456  001D5A  0E01               	movlw	low _HEADER_LENGHT
 12457  001D5C  6EF6               	movwf	tblptrl,c
 12458  001D5E                     	if	1	;There is more than 1 active tblptr byte
 12459  001D5E  0E10               	movlw	high _HEADER_LENGHT
 12460  001D60  6EF7               	movwf	tblptrh,c
 12461  001D62                     	endif
 12462  001D62                     	if	1	;There are 3 active tblptr bytes
 12463  001D62  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12464  001D64  6EF8               	movwf	tblptru,c
 12465  001D66                     	endif
 12466  001D66  0008               	tblrd		*
 12467  001D68  50F5               	movf	tablat,w,c
 12468  001D6A  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12469  001D6C  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12470  001D6E  0E05               	movlw	5
 12471  001D70  2630               	addwf	??_read_RX_FIFO,f,c
 12472  001D72  0E00               	movlw	0
 12473  001D74  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12474  001D76  0E00               	movlw	low _data_RX_FIFO
 12475  001D78  2430               	addwf	??_read_RX_FIFO,w,c
 12476  001D7A  6ED9               	movwf	fsr2l,c
 12477  001D7C  0E01               	movlw	high _data_RX_FIFO
 12478  001D7E  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12479  001D80  6EDA               	movwf	fsr2h,c
 12480  001D82  50DF               	movf	indf2,w,c
 12481  001D84  6FB4               	movwf	(_DATA_RX+4)& (0+255),b
 12482                           
 12483                           ;zigbee.c: 39: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 12484  001D86  0E01               	movlw	low _HEADER_LENGHT
 12485  001D88  6EF6               	movwf	tblptrl,c
 12486  001D8A                     	if	1	;There is more than 1 active tblptr byte
 12487  001D8A  0E10               	movlw	high _HEADER_LENGHT
 12488  001D8C  6EF7               	movwf	tblptrh,c
 12489  001D8E                     	endif
 12490  001D8E                     	if	1	;There are 3 active tblptr bytes
 12491  001D8E  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12492  001D90  6EF8               	movwf	tblptru,c
 12493  001D92                     	endif
 12494  001D92  0008               	tblrd		*
 12495  001D94  50F5               	movf	tablat,w,c
 12496  001D96  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12497  001D98  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12498  001D9A  0E02               	movlw	low _DATA_LENGHT
 12499  001D9C  6EF6               	movwf	tblptrl,c
 12500  001D9E                     	if	1	;There is more than 1 active tblptr byte
 12501  001D9E  0E10               	movlw	high _DATA_LENGHT
 12502  001DA0  6EF7               	movwf	tblptrh,c
 12503  001DA2                     	endif
 12504  001DA2                     	if	1	;There are 3 active tblptr bytes
 12505  001DA2  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12506  001DA4  6EF8               	movwf	tblptru,c
 12507  001DA6                     	endif
 12508  001DA6  0008               	tblrd		*
 12509  001DA8  50F5               	movf	tablat,w,c
 12510  001DAA  2630               	addwf	??_read_RX_FIFO,f,c
 12511  001DAC  0E00               	movlw	0
 12512  001DAE  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12513  001DB0  0E03               	movlw	3
 12514  001DB2  2630               	addwf	??_read_RX_FIFO,f,c
 12515  001DB4  0E00               	movlw	0
 12516  001DB6  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12517  001DB8  0E00               	movlw	low _data_RX_FIFO
 12518  001DBA  2430               	addwf	??_read_RX_FIFO,w,c
 12519  001DBC  6ED9               	movwf	fsr2l,c
 12520  001DBE  0E01               	movlw	high _data_RX_FIFO
 12521  001DC0  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12522  001DC2  6EDA               	movwf	fsr2h,c
 12523  001DC4  50DF               	movf	indf2,w,c
 12524  001DC6  6E20               	movwf	_LQI,c
 12525                           
 12526                           ;zigbee.c: 40: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 12527  001DC8  0E01               	movlw	low _HEADER_LENGHT
 12528  001DCA  6EF6               	movwf	tblptrl,c
 12529  001DCC                     	if	1	;There is more than 1 active tblptr byte
 12530  001DCC  0E10               	movlw	high _HEADER_LENGHT
 12531  001DCE  6EF7               	movwf	tblptrh,c
 12532  001DD0                     	endif
 12533  001DD0                     	if	1	;There are 3 active tblptr bytes
 12534  001DD0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12535  001DD2  6EF8               	movwf	tblptru,c
 12536  001DD4                     	endif
 12537  001DD4  0008               	tblrd		*
 12538  001DD6  50F5               	movf	tablat,w,c
 12539  001DD8  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12540  001DDA  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12541  001DDC  0E02               	movlw	low _DATA_LENGHT
 12542  001DDE  6EF6               	movwf	tblptrl,c
 12543  001DE0                     	if	1	;There is more than 1 active tblptr byte
 12544  001DE0  0E10               	movlw	high _DATA_LENGHT
 12545  001DE2  6EF7               	movwf	tblptrh,c
 12546  001DE4                     	endif
 12547  001DE4                     	if	1	;There are 3 active tblptr bytes
 12548  001DE4  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12549  001DE6  6EF8               	movwf	tblptru,c
 12550  001DE8                     	endif
 12551  001DE8  0008               	tblrd		*
 12552  001DEA  50F5               	movf	tablat,w,c
 12553  001DEC  2630               	addwf	??_read_RX_FIFO,f,c
 12554  001DEE  0E00               	movlw	0
 12555  001DF0  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12556  001DF2  0E04               	movlw	4
 12557  001DF4  2630               	addwf	??_read_RX_FIFO,f,c
 12558  001DF6  0E00               	movlw	0
 12559  001DF8  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12560  001DFA  0E00               	movlw	low _data_RX_FIFO
 12561  001DFC  2430               	addwf	??_read_RX_FIFO,w,c
 12562  001DFE  6ED9               	movwf	fsr2l,c
 12563  001E00  0E01               	movlw	high _data_RX_FIFO
 12564  001E02  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12565  001E04  6EDA               	movwf	fsr2h,c
 12566  001E06  50DF               	movf	indf2,w,c
 12567  001E08  6E1F               	movwf	_RSSI2,c
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;zigbee.c: 42: temp=0;
 12571  001E0A  0E00               	movlw	0
 12572  001E0C  6E35               	movwf	read_RX_FIFO@temp,c
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;zigbee.c: 43: temp = temp & (!0x04);
 12576  001E0E  0E00               	movlw	0
 12577  001E10  6E35               	movwf	read_RX_FIFO@temp,c
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;zigbee.c: 44: write_ZIGBEE_short(0x39, temp);
 12581  001E12  C035  F029         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 12582  001E16  0E39               	movlw	57
 12583  001E18  ECBE  F018         	call	i2_write_ZIGBEE_short
 12584  001E1C  0012               	return		;funcret
 12585  001E1E                     __end_of_read_RX_FIFO:
 12586                           	opt stack 0
 12587                           tosu	equ	0xFFF
 12588                           tosh	equ	0xFFE
 12589                           tosl	equ	0xFFD
 12590                           pclatu	equ	0xFFB
 12591                           pclath	equ	0xFFA
 12592                           tblptru	equ	0xFF8
 12593                           tblptrh	equ	0xFF7
 12594                           tblptrl	equ	0xFF6
 12595                           tablat	equ	0xFF5
 12596                           prodh	equ	0xFF4
 12597                           prodl	equ	0xFF3
 12598                           intcon	equ	0xFF2
 12599                           intcon2	equ	0xFF1
 12600                           intcon3	equ	0xFF0
 12601                           postinc0	equ	0xFEE
 12602                           fsr0h	equ	0xFEA
 12603                           fsr0l	equ	0xFE9
 12604                           wreg	equ	0xFE8
 12605                           indf1	equ	0xFE7
 12606                           postdec1	equ	0xFE5
 12607                           fsr1h	equ	0xFE2
 12608                           fsr1l	equ	0xFE1
 12609                           bsr	equ	0xFE0
 12610                           indf2	equ	0xFDF
 12611                           postinc2	equ	0xFDE
 12612                           fsr2h	equ	0xFDA
 12613                           fsr2l	equ	0xFD9
 12614                           status	equ	0xFD8
 12615                           
 12616 ;; *************** function i2_write_ZIGBEE_short *****************
 12617 ;; Defined at:
 12618 ;;		line 397 in file "zigbee.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;  address         1    wreg     unsigned char 
 12621 ;;  data_r          1    2[COMRAM] unsigned char 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;  address         1    3[COMRAM] unsigned char 
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  1    wreg      void 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2, status,0, cstack
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12637 ;;Total ram usage:        2 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    1
 12640 ;; This function calls:
 12641 ;;		i2_SPI_Write
 12642 ;; This function is called by:
 12643 ;;		_read_RX_FIFO
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text75
 12648  00317C                     __ptext75:
 12649                           	opt stack 0
 12650  00317C                     i2_write_ZIGBEE_short:
 12651                           	opt stack 18
 12652                           
 12653                           ;incstack = 0
 12654                           ;i2write_ZIGBEE_short@address stored from wreg
 12655  00317C  6E2A               	movwf	i2write_ZIGBEE_short@address,c
 12656                           
 12657                           ;zigbee.c: 398: PORTCbits.RC0=0;
 12658  00317E  9082               	bcf	3970,0,c	;volatile
 12659                           
 12660                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
 12661  003180  502A               	movf	i2write_ZIGBEE_short@address,w,c
 12662  003182  242A               	addwf	i2write_ZIGBEE_short@address,w,c
 12663  003184  0B7F               	andlw	127
 12664  003186  0901               	iorlw	1
 12665  003188  6E2A               	movwf	i2write_ZIGBEE_short@address,c
 12666                           
 12667                           ;zigbee.c: 400: SPI_Write(address);
 12668  00318A  502A               	movf	i2write_ZIGBEE_short@address,w,c
 12669  00318C  EC4E  F019         	call	i2_SPI_Write
 12670                           
 12671                           ;zigbee.c: 401: SPI_Write(data_r);
 12672  003190  5029               	movf	i2write_ZIGBEE_short@data_r,w,c
 12673  003192  EC4E  F019         	call	i2_SPI_Write
 12674                           
 12675                           ;zigbee.c: 402: PORTCbits.RC0=1;
 12676  003196  8082               	bsf	3970,0,c	;volatile
 12677  003198  0012               	return		;funcret
 12678  00319A                     __end_ofi2_write_ZIGBEE_short:
 12679                           	opt stack 0
 12680                           tosu	equ	0xFFF
 12681                           tosh	equ	0xFFE
 12682                           tosl	equ	0xFFD
 12683                           pclatu	equ	0xFFB
 12684                           pclath	equ	0xFFA
 12685                           tblptru	equ	0xFF8
 12686                           tblptrh	equ	0xFF7
 12687                           tblptrl	equ	0xFF6
 12688                           tablat	equ	0xFF5
 12689                           prodh	equ	0xFF4
 12690                           prodl	equ	0xFF3
 12691                           intcon	equ	0xFF2
 12692                           intcon2	equ	0xFF1
 12693                           intcon3	equ	0xFF0
 12694                           postinc0	equ	0xFEE
 12695                           fsr0h	equ	0xFEA
 12696                           fsr0l	equ	0xFE9
 12697                           wreg	equ	0xFE8
 12698                           indf1	equ	0xFE7
 12699                           postdec1	equ	0xFE5
 12700                           fsr1h	equ	0xFE2
 12701                           fsr1l	equ	0xFE1
 12702                           bsr	equ	0xFE0
 12703                           indf2	equ	0xFDF
 12704                           postinc2	equ	0xFDE
 12705                           fsr2h	equ	0xFDA
 12706                           fsr2l	equ	0xFD9
 12707                           status	equ	0xFD8
 12708                           
 12709 ;; *************** function _read_ZIGBEE_long *****************
 12710 ;; Defined at:
 12711 ;;		line 426 in file "zigbee.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  address         2    2[COMRAM] unsigned int 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;  address_low     1    8[COMRAM] unsigned char 
 12716 ;;  address_high    1    7[COMRAM] unsigned char 
 12717 ;;  data_r          1    6[COMRAM] unsigned char 
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      unsigned char 
 12720 ;; Registers used:
 12721 ;;		wreg, status,2, status,0, cstack
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12728 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;Total ram usage:        7 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:    1
 12734 ;; This function calls:
 12735 ;;		i2_SPI_Read
 12736 ;;		i2_SPI_Write
 12737 ;; This function is called by:
 12738 ;;		_read_RX_FIFO
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text76
 12743  002AF6                     __ptext76:
 12744                           	opt stack 0
 12745  002AF6                     _read_ZIGBEE_long:
 12746                           	opt stack 18
 12747                           
 12748                           ;zigbee.c: 427: unsigned char data_r = 0;
 12749                           
 12750                           ;incstack = 0
 12751  002AF6  0E00               	movlw	0
 12752  002AF8  6E2D               	movwf	read_ZIGBEE_long@data_r,c
 12753                           
 12754                           ;zigbee.c: 428: unsigned char address_high = 0, address_low = 0;
 12755  002AFA  0E00               	movlw	0
 12756  002AFC  6E2E               	movwf	read_ZIGBEE_long@address_high,c
 12757  002AFE  0E00               	movlw	0
 12758  002B00  6E2F               	movwf	read_ZIGBEE_long@address_low,c
 12759                           
 12760                           ;zigbee.c: 431: PORTCbits.RC0=0;
 12761  002B02  9082               	bcf	3970,0,c	;volatile
 12762                           
 12763                           ;zigbee.c: 432: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 12764  002B04  C029  F02B         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 12765  002B08  C02A  F02C         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 12766  002B0C  90D8               	bcf	status,0,c
 12767  002B0E  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12768  002B10  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12769  002B12  90D8               	bcf	status,0,c
 12770  002B14  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12771  002B16  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12772  002B18  90D8               	bcf	status,0,c
 12773  002B1A  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12774  002B1C  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12775  002B1E  502B               	movf	??_read_ZIGBEE_long,w,c
 12776  002B20  0B7F               	andlw	127
 12777  002B22  0980               	iorlw	128
 12778  002B24  6E2E               	movwf	read_ZIGBEE_long@address_high,c
 12779                           
 12780                           ;zigbee.c: 433: address_low = ((unsigned char)(address << 5) & 0b11100000);
 12781  002B26  3829               	swapf	read_ZIGBEE_long@address,w,c
 12782  002B28  46E8               	rlncf	wreg,f,c
 12783  002B2A  0BE0               	andlw	224
 12784  002B2C  0BE0               	andlw	224
 12785  002B2E  6E2F               	movwf	read_ZIGBEE_long@address_low,c
 12786                           
 12787                           ;zigbee.c: 434: SPI_Write(address_high);
 12788  002B30  502E               	movf	read_ZIGBEE_long@address_high,w,c
 12789  002B32  EC4E  F019         	call	i2_SPI_Write
 12790                           
 12791                           ;zigbee.c: 435: SPI_Write(address_low);
 12792  002B36  502F               	movf	read_ZIGBEE_long@address_low,w,c
 12793  002B38  EC4E  F019         	call	i2_SPI_Write
 12794                           
 12795                           ;zigbee.c: 436: data_r = SPI_Read();
 12796  002B3C  EC56  F019         	call	i2_SPI_Read	;wreg free
 12797  002B40  6E2D               	movwf	read_ZIGBEE_long@data_r,c
 12798                           
 12799                           ;zigbee.c: 437: PORTCbits.RC0=1;
 12800  002B42  8082               	bsf	3970,0,c	;volatile
 12801                           
 12802                           ;zigbee.c: 438: return data_r;
 12803  002B44  502D               	movf	read_ZIGBEE_long@data_r,w,c
 12804  002B46  0012               	return	
 12805  002B48                     __end_of_read_ZIGBEE_long:
 12806                           	opt stack 0
 12807                           tosu	equ	0xFFF
 12808                           tosh	equ	0xFFE
 12809                           tosl	equ	0xFFD
 12810                           pclatu	equ	0xFFB
 12811                           pclath	equ	0xFFA
 12812                           tblptru	equ	0xFF8
 12813                           tblptrh	equ	0xFF7
 12814                           tblptrl	equ	0xFF6
 12815                           tablat	equ	0xFF5
 12816                           prodh	equ	0xFF4
 12817                           prodl	equ	0xFF3
 12818                           intcon	equ	0xFF2
 12819                           intcon2	equ	0xFF1
 12820                           intcon3	equ	0xFF0
 12821                           postinc0	equ	0xFEE
 12822                           fsr0h	equ	0xFEA
 12823                           fsr0l	equ	0xFE9
 12824                           wreg	equ	0xFE8
 12825                           indf1	equ	0xFE7
 12826                           postdec1	equ	0xFE5
 12827                           fsr1h	equ	0xFE2
 12828                           fsr1l	equ	0xFE1
 12829                           bsr	equ	0xFE0
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           fsr2h	equ	0xFDA
 12833                           fsr2l	equ	0xFD9
 12834                           status	equ	0xFD8
 12835                           
 12836 ;; *************** function i2_SPI_Write *****************
 12837 ;; Defined at:
 12838 ;;		line 458 in file "zigbee.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;  command         1    wreg     unsigned char 
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;  command         1    1[COMRAM] unsigned char 
 12843 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  1    wreg      void 
 12846 ;; Registers used:
 12847 ;;		wreg
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;Total ram usage:        2 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; This function calls:
 12860 ;;		Nothing
 12861 ;; This function is called by:
 12862 ;;		_read_ZIGBEE_long
 12863 ;;		i2_write_ZIGBEE_short
 12864 ;;		i2_read_ZIGBEE_short
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text77
 12869  00329C                     __ptext77:
 12870                           	opt stack 0
 12871  00329C                     i2_SPI_Write:
 12872                           	opt stack 19
 12873                           
 12874                           ;incstack = 0
 12875                           ;i2SPI_Write@command stored from wreg
 12876  00329C  6E28               	movwf	i2SPI_Write@command,c
 12877                           
 12878                           ;zigbee.c: 459: unsigned char response;
 12879                           ;zigbee.c: 460: SSP1BUF = command;
 12880  00329E  C028  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 12881  0032A2  A0C7               	btfss	4039,0,c	;volatile
 12882  0032A4  D7FE               	goto	i2l514
 12883                           
 12884                           ;zigbee.c: 462: response = SSP1BUF;
 12885  0032A6  CFC9 F027          	movff	4041,i2SPI_Write@response	;volatile
 12886  0032AA  0012               	return		;funcret
 12887  0032AC                     __end_ofi2_SPI_Write:
 12888                           	opt stack 0
 12889                           tosu	equ	0xFFF
 12890                           tosh	equ	0xFFE
 12891                           tosl	equ	0xFFD
 12892                           pclatu	equ	0xFFB
 12893                           pclath	equ	0xFFA
 12894                           tblptru	equ	0xFF8
 12895                           tblptrh	equ	0xFF7
 12896                           tblptrl	equ	0xFF6
 12897                           tablat	equ	0xFF5
 12898                           prodh	equ	0xFF4
 12899                           prodl	equ	0xFF3
 12900                           intcon	equ	0xFF2
 12901                           intcon2	equ	0xFF1
 12902                           intcon3	equ	0xFF0
 12903                           postinc0	equ	0xFEE
 12904                           fsr0h	equ	0xFEA
 12905                           fsr0l	equ	0xFE9
 12906                           wreg	equ	0xFE8
 12907                           indf1	equ	0xFE7
 12908                           postdec1	equ	0xFE5
 12909                           fsr1h	equ	0xFE2
 12910                           fsr1l	equ	0xFE1
 12911                           bsr	equ	0xFE0
 12912                           indf2	equ	0xFDF
 12913                           postinc2	equ	0xFDE
 12914                           fsr2h	equ	0xFDA
 12915                           fsr2l	equ	0xFD9
 12916                           status	equ	0xFD8
 12917                           
 12918 ;; *************** function i2_SPI_Read *****************
 12919 ;; Defined at:
 12920 ;;		line 464 in file "zigbee.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      unsigned char 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;Total ram usage:        1 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_read_ZIGBEE_long
 12944 ;;		i2_read_ZIGBEE_short
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text78
 12949  0032AC                     __ptext78:
 12950                           	opt stack 0
 12951  0032AC                     i2_SPI_Read:
 12952                           	opt stack 19
 12953                           
 12954                           ;zigbee.c: 465: unsigned char TempVar;
 12955                           ;zigbee.c: 466: SSP1BUF = 0xff;
 12956                           
 12957                           ;incstack = 0
 12958  0032AC  68C9               	setf	4041,c	;volatile
 12959  0032AE  A0C7               	btfss	4039,0,c	;volatile
 12960  0032B0  D7FE               	goto	i2l520
 12961                           
 12962                           ;zigbee.c: 468: TempVar = SSP1BUF;
 12963  0032B2  CFC9 F027          	movff	4041,i2SPI_Read@TempVar	;volatile
 12964                           
 12965                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
 12966  0032B6  969E               	bcf	3998,3,c	;volatile
 12967                           
 12968                           ;zigbee.c: 470: return ( TempVar );
 12969  0032B8  5027               	movf	i2SPI_Read@TempVar,w,c
 12970  0032BA  0012               	return	
 12971  0032BC                     __end_ofi2_SPI_Read:
 12972                           	opt stack 0
 12973                           tosu	equ	0xFFF
 12974                           tosh	equ	0xFFE
 12975                           tosl	equ	0xFFD
 12976                           pclatu	equ	0xFFB
 12977                           pclath	equ	0xFFA
 12978                           tblptru	equ	0xFF8
 12979                           tblptrh	equ	0xFF7
 12980                           tblptrl	equ	0xFF6
 12981                           tablat	equ	0xFF5
 12982                           prodh	equ	0xFF4
 12983                           prodl	equ	0xFF3
 12984                           intcon	equ	0xFF2
 12985                           intcon2	equ	0xFF1
 12986                           intcon3	equ	0xFF0
 12987                           postinc0	equ	0xFEE
 12988                           fsr0h	equ	0xFEA
 12989                           fsr0l	equ	0xFE9
 12990                           wreg	equ	0xFE8
 12991                           indf1	equ	0xFE7
 12992                           postdec1	equ	0xFE5
 12993                           fsr1h	equ	0xFE2
 12994                           fsr1l	equ	0xFE1
 12995                           bsr	equ	0xFE0
 12996                           indf2	equ	0xFDF
 12997                           postinc2	equ	0xFDE
 12998                           fsr2h	equ	0xFDA
 12999                           fsr2l	equ	0xFD9
 13000                           status	equ	0xFD8
 13001                           
 13002 ;; *************** function _INT0_ISR *****************
 13003 ;; Defined at:
 13004 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13005 ;; Parameters:    Size  Location     Type
 13006 ;;		None
 13007 ;; Auto vars:     Size  Location     Type
 13008 ;;		None
 13009 ;; Return value:  Size  Location     Type
 13010 ;;                  1    wreg      void 
 13011 ;; Registers used:
 13012 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13013 ;; Tracked objects:
 13014 ;;		On entry : 0/0
 13015 ;;		On exit  : 0/0
 13016 ;;		Unchanged: 0/0
 13017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13022 ;;Total ram usage:        0 bytes
 13023 ;; Hardware stack levels used:    1
 13024 ;; Hardware stack levels required when called:    2
 13025 ;; This function calls:
 13026 ;;		_INT0_CallBack
 13027 ;; This function is called by:
 13028 ;;		_INTERRUPT_InterruptManagerHigh
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           	psect	text79
 13033  00331C                     __ptext79:
 13034                           	opt stack 0
 13035  00331C                     _INT0_ISR:
 13036                           	opt stack 18
 13037                           
 13038                           ;ext_int.c: 61: (INTCONbits.INT0IF = 0);
 13039                           
 13040                           ;incstack = 0
 13041  00331C  92F2               	bcf	intcon,1,c	;volatile
 13042                           
 13043                           ;ext_int.c: 64: INT0_CallBack();
 13044  00331E  EC5B  F018         	call	_INT0_CallBack	;wreg free
 13045  003322  0012               	return		;funcret
 13046  003324                     __end_of_INT0_ISR:
 13047                           	opt stack 0
 13048                           tosu	equ	0xFFF
 13049                           tosh	equ	0xFFE
 13050                           tosl	equ	0xFFD
 13051                           pclatu	equ	0xFFB
 13052                           pclath	equ	0xFFA
 13053                           tblptru	equ	0xFF8
 13054                           tblptrh	equ	0xFF7
 13055                           tblptrl	equ	0xFF6
 13056                           tablat	equ	0xFF5
 13057                           prodh	equ	0xFF4
 13058                           prodl	equ	0xFF3
 13059                           intcon	equ	0xFF2
 13060                           intcon2	equ	0xFF1
 13061                           intcon3	equ	0xFF0
 13062                           postinc0	equ	0xFEE
 13063                           fsr0h	equ	0xFEA
 13064                           fsr0l	equ	0xFE9
 13065                           wreg	equ	0xFE8
 13066                           indf1	equ	0xFE7
 13067                           postdec1	equ	0xFE5
 13068                           fsr1h	equ	0xFE2
 13069                           fsr1l	equ	0xFE1
 13070                           bsr	equ	0xFE0
 13071                           indf2	equ	0xFDF
 13072                           postinc2	equ	0xFDE
 13073                           fsr2h	equ	0xFDA
 13074                           fsr2l	equ	0xFD9
 13075                           status	equ	0xFD8
 13076                           
 13077 ;; *************** function _INT0_CallBack *****************
 13078 ;; Defined at:
 13079 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;		None
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      void 
 13086 ;; Registers used:
 13087 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;Total ram usage:        0 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    1
 13100 ;; This function calls:
 13101 ;;		Absolute function
 13102 ;;		_INT0_DefaultInterruptHandler
 13103 ;; This function is called by:
 13104 ;;		_INT0_ISR
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           	psect	text80
 13109  0030B6                     __ptext80:
 13110                           	opt stack 0
 13111  0030B6                     _INT0_CallBack:
 13112                           	opt stack 18
 13113                           
 13114                           ;ext_int.c: 71: if(INT0_InterruptHandler)
 13115                           
 13116                           ;incstack = 0
 13117  0030B6  0100               	movlb	0	; () banked
 13118  0030B8  516D               	movf	_INT0_InterruptHandler& (0+255),w,b
 13119  0030BA  116E               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13120  0030BC  116F               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 13121  0030BE  B4D8               	btfsc	status,2,c
 13122  0030C0  0012               	return	
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;ext_int.c: 72: {
 13126                           ;ext_int.c: 73: INT0_InterruptHandler();
 13127  0030C2  D801               	call	i2u554_48
 13128  0030C4  0012               	return	
 13129  0030C6                     i2u554_48:
 13130  0030C6  0005               	push	
 13131  0030C8  6EFA               	movwf	pclath,c
 13132  0030CA  516D               	movf	_INT0_InterruptHandler& (0+255),w,b
 13133  0030CC  6EFD               	movwf	tosl,c
 13134  0030CE  516E               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13135  0030D0  6EFE               	movwf	tosh,c
 13136  0030D2  516F               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 13137  0030D4  6EFF               	movwf	tosu,c
 13138  0030D6  50FA               	movf	pclath,w,c
 13139  0030D8  0012               	return		;indir
 13140  0030DA                     __end_of_INT0_CallBack:
 13141                           	opt stack 0
 13142                           tosu	equ	0xFFF
 13143                           tosh	equ	0xFFE
 13144                           tosl	equ	0xFFD
 13145                           pclatu	equ	0xFFB
 13146                           pclath	equ	0xFFA
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           intcon2	equ	0xFF1
 13155                           intcon3	equ	0xFF0
 13156                           postinc0	equ	0xFEE
 13157                           fsr0h	equ	0xFEA
 13158                           fsr0l	equ	0xFE9
 13159                           wreg	equ	0xFE8
 13160                           indf1	equ	0xFE7
 13161                           postdec1	equ	0xFE5
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           bsr	equ	0xFE0
 13165                           indf2	equ	0xFDF
 13166                           postinc2	equ	0xFDE
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13172 ;; Defined at:
 13173 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		None
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_EXT_INT_Initialize
 13197 ;;		_INT0_CallBack
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           	psect	text81
 13202  00332E                     __ptext81:
 13203                           	opt stack 0
 13204  00332E                     _INT0_DefaultInterruptHandler:
 13205                           	opt stack 18
 13206                           
 13207                           ;incstack = 0
 13208  00332E  0012               	return		;funcret
 13209  003330                     __end_of_INT0_DefaultInterruptHandler:
 13210                           	opt stack 0
 13211                           tosu	equ	0xFFF
 13212                           tosh	equ	0xFFE
 13213                           tosl	equ	0xFFD
 13214                           pclatu	equ	0xFFB
 13215                           pclath	equ	0xFFA
 13216                           tblptru	equ	0xFF8
 13217                           tblptrh	equ	0xFF7
 13218                           tblptrl	equ	0xFF6
 13219                           tablat	equ	0xFF5
 13220                           prodh	equ	0xFF4
 13221                           prodl	equ	0xFF3
 13222                           intcon	equ	0xFF2
 13223                           intcon2	equ	0xFF1
 13224                           intcon3	equ	0xFF0
 13225                           postinc0	equ	0xFEE
 13226                           fsr0h	equ	0xFEA
 13227                           fsr0l	equ	0xFE9
 13228                           wreg	equ	0xFE8
 13229                           indf1	equ	0xFE7
 13230                           postdec1	equ	0xFE5
 13231                           fsr1h	equ	0xFE2
 13232                           fsr1l	equ	0xFE1
 13233                           bsr	equ	0xFE0
 13234                           indf2	equ	0xFDF
 13235                           postinc2	equ	0xFDE
 13236                           fsr2h	equ	0xFDA
 13237                           fsr2l	equ	0xFD9
 13238                           status	equ	0xFD8
 13239                           tosu	equ	0xFFF
 13240                           tosh	equ	0xFFE
 13241                           tosl	equ	0xFFD
 13242                           pclatu	equ	0xFFB
 13243                           pclath	equ	0xFFA
 13244                           tblptru	equ	0xFF8
 13245                           tblptrh	equ	0xFF7
 13246                           tblptrl	equ	0xFF6
 13247                           tablat	equ	0xFF5
 13248                           prodh	equ	0xFF4
 13249                           prodl	equ	0xFF3
 13250                           intcon	equ	0xFF2
 13251                           intcon2	equ	0xFF1
 13252                           intcon3	equ	0xFF0
 13253                           postinc0	equ	0xFEE
 13254                           fsr0h	equ	0xFEA
 13255                           fsr0l	equ	0xFE9
 13256                           wreg	equ	0xFE8
 13257                           indf1	equ	0xFE7
 13258                           postdec1	equ	0xFE5
 13259                           fsr1h	equ	0xFE2
 13260                           fsr1l	equ	0xFE1
 13261                           bsr	equ	0xFE0
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           fsr2h	equ	0xFDA
 13265                           fsr2l	equ	0xFD9
 13266                           status	equ	0xFD8
 13267                           
 13268                           	psect	text82
 13269  000000                     __ptext82:
 13270                           	opt stack 0
 13271                           tosu	equ	0xFFF
 13272                           tosh	equ	0xFFE
 13273                           tosl	equ	0xFFD
 13274                           pclatu	equ	0xFFB
 13275                           pclath	equ	0xFFA
 13276                           tblptru	equ	0xFF8
 13277                           tblptrh	equ	0xFF7
 13278                           tblptrl	equ	0xFF6
 13279                           tablat	equ	0xFF5
 13280                           prodh	equ	0xFF4
 13281                           prodl	equ	0xFF3
 13282                           intcon	equ	0xFF2
 13283                           intcon2	equ	0xFF1
 13284                           intcon3	equ	0xFF0
 13285                           postinc0	equ	0xFEE
 13286                           fsr0h	equ	0xFEA
 13287                           fsr0l	equ	0xFE9
 13288                           wreg	equ	0xFE8
 13289                           indf1	equ	0xFE7
 13290                           postdec1	equ	0xFE5
 13291                           fsr1h	equ	0xFE2
 13292                           fsr1l	equ	0xFE1
 13293                           bsr	equ	0xFE0
 13294                           indf2	equ	0xFDF
 13295                           postinc2	equ	0xFDE
 13296                           fsr2h	equ	0xFDA
 13297                           fsr2l	equ	0xFD9
 13298                           status	equ	0xFD8
 13299                           
 13300                           	psect	rparam
 13301  0000                     tosu	equ	0xFFF
 13302                           tosh	equ	0xFFE
 13303                           tosl	equ	0xFFD
 13304                           pclatu	equ	0xFFB
 13305                           pclath	equ	0xFFA
 13306                           tblptru	equ	0xFF8
 13307                           tblptrh	equ	0xFF7
 13308                           tblptrl	equ	0xFF6
 13309                           tablat	equ	0xFF5
 13310                           prodh	equ	0xFF4
 13311                           prodl	equ	0xFF3
 13312                           intcon	equ	0xFF2
 13313                           intcon2	equ	0xFF1
 13314                           intcon3	equ	0xFF0
 13315                           postinc0	equ	0xFEE
 13316                           fsr0h	equ	0xFEA
 13317                           fsr0l	equ	0xFE9
 13318                           wreg	equ	0xFE8
 13319                           indf1	equ	0xFE7
 13320                           postdec1	equ	0xFE5
 13321                           fsr1h	equ	0xFE2
 13322                           fsr1l	equ	0xFE1
 13323                           bsr	equ	0xFE0
 13324                           indf2	equ	0xFDF
 13325                           postinc2	equ	0xFDE
 13326                           fsr2h	equ	0xFDA
 13327                           fsr2l	equ	0xFD9
 13328                           status	equ	0xFD8
 13329                           
 13330                           	psect	temp
 13331  00004B                     btemp:
 13332                           	opt stack 0
 13333  00004B                     	ds	1
 13334  0000                     int$flags	set	btemp
 13335  0000                     wtemp6	set	btemp+1
 13336                           tosu	equ	0xFFF
 13337                           tosh	equ	0xFFE
 13338                           tosl	equ	0xFFD
 13339                           pclatu	equ	0xFFB
 13340                           pclath	equ	0xFFA
 13341                           tblptru	equ	0xFF8
 13342                           tblptrh	equ	0xFF7
 13343                           tblptrl	equ	0xFF6
 13344                           tablat	equ	0xFF5
 13345                           prodh	equ	0xFF4
 13346                           prodl	equ	0xFF3
 13347                           intcon	equ	0xFF2
 13348                           intcon2	equ	0xFF1
 13349                           intcon3	equ	0xFF0
 13350                           postinc0	equ	0xFEE
 13351                           fsr0h	equ	0xFEA
 13352                           fsr0l	equ	0xFE9
 13353                           wreg	equ	0xFE8
 13354                           indf1	equ	0xFE7
 13355                           postdec1	equ	0xFE5
 13356                           fsr1h	equ	0xFE2
 13357                           fsr1l	equ	0xFE1
 13358                           bsr	equ	0xFE0
 13359                           indf2	equ	0xFDF
 13360                           postinc2	equ	0xFDE
 13361                           fsr2h	equ	0xFDA
 13362                           fsr2l	equ	0xFD9
 13363                           status	equ	0xFD8


Data Sizes:
    Strings     238
    Constant    2
    Data        31
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160     41     155
    BANK1           256     19      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    LcdDisplay@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK0[8]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _INTERRUPT_InterruptManagerLow->___ftadd
    i1___lwdiv->___wmul
    ___lwtoft->i1___lwdiv
    ___ftadd->___ftpack

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Set_DeviceId
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _lcd_off_cursor->_LcdCmd
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    _Set_DeviceId->_LcdDisplay
    _lcd_clear->_LcdCmd
    _LcdDisplay->_LcdCmd
    _LcdDisplay->_LcdData
    _LcdData->_Delayms
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _LcdInit->_LcdCmd
    _LcdCmd->_Delayms
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  129346
                                             18 BANK1      1     1      0
                           _Delay_ms
                            _Delayms
                            _InitSPI
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                            _LcdInit
                           _RF_reset
                        _Read_b_eep2
                  _SYSTEM_Initialize
                       _Set_DeviceId
                       _Write_b_eep2
                            ___awdiv
                            ___awmod
                            ___fttol
                            ___lwdiv
                            ___lwmod
              _init_ZIGBEE_nonbeacon
                          _lcd_clear
                     _lcd_off_cursor
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   17433
                                              9 BANK1      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                              2 BANK1      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                              0 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                              4 BANK1      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                              9 BANK1      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    1654
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _lcd_off_cursor                                       0     0      0    1247
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   40113
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0    9841
                                              9 BANK1      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    5044
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    1654
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1654
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                              2 BANK1      7     4      3
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                              2 BANK1      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     952
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1181
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     461
                                              0 BANK1     15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     805
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Set_DeviceId                                         8     8      0   12786
                                             10 BANK1      8     8      0
                          _Busy_eep2
                           _Delayms1
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                        _Read_b_eep2
                       _Write_b_eep2
                            ___awmod
                          _lcd_clear
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0    1247
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1153
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep2                                         4     1      3     819
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep2                                          2     0      2     391
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LcdDisplay                                           4     2      2    4300
                                              7 BANK1      3     1      2
                             _LcdCmd
                            _LcdData
 ---------------------------------------------------------------------------------
 (3) _LcdData                                              1     1      0    1247
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (2) _Delayms1                                             6     4      2    1216
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Busy_eep2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     242
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0    2463
                            _Delayms
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               1     1      0    1247
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _Delayms                                              6     4      2    1216
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0    8374
                                             20 BANK0     21    21      0
                           _INT1_ISR
                          _ScanInput
                           _TMR0_ISR
                            ___ftadd
                           ___lwtoft
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            7     3      4     381
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             3     0      3    2894
                                             13 BANK0      3     0      3
                           ___ftpack
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    4458
                                              8 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2773
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ScanInput                                            3     3      0     229
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1020
                                             16 COMRAM    20    20      0
                           _INT0_ISR
                       _read_RX_FIFO
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Delayms
   _InitSPI
     _delay
   _LcdCmd
     _Delayms
   _LcdData
     _Delayms
   _LcdDisplay
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
   _LcdInit
     _Delayms
     _LcdCmd
       _Delayms
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep2
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Set_DeviceId
     _Busy_eep2
     _Delayms1
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
     _LcdDisplay
       _LcdCmd
         _Delayms
       _LcdData
         _Delayms
     _Read_b_eep2
     _Write_b_eep2
     ___awmod
     _lcd_clear
       _LcdCmd
         _Delayms
   _Write_b_eep2
   ___awdiv
   ___awmod
   ___fttol
   ___lwdiv
   ___lwmod
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _lcd_clear
     _LcdCmd
       _Delayms
   _lcd_off_cursor
     _LcdCmd
       _Delayms
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _ScanInput
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   ___ftadd
     ___ftpack
   ___lwtoft
     ___ftpack
     i1___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      42       7       25.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      12        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 07 18:28:09 2018

                                        _T 0010                                          _d 0016  
                                        _i 0017                            SPI_Read@TempVar 0127  
                             ___awdiv@sign 012C                                         _ii 00AD  
                                       bsr 000FE0                        ___wmul@multiplicand 00BD  
                              __CFG_BORV$3 000000                            _timer0ReloadVal 00AF  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                             __CFG_CP4$OFF 000000                  i2read_ZIGBEE_short@data_r 002A  
                             __CFG_CP5$OFF 000000                               ___ftadd@exp1 00CE  
                             ___ftadd@exp2 00CD                               __CFG_CP6$OFF 000000  
                             __CFG_CP7$OFF 000000                               ___ftadd@sign 00CC  
                                      l410 2580                                        l411 24DE  
                                      l413 2506                                        l421 2CBE  
                                      l414 2540                                        l431 1F74  
                                      l440 1EC0                                        l432 1E36  
                                      l520 3256                                        l433 1FD8  
                                      l441 1ED4                                        l514 3280  
                                      l418 2CCC                                        l442 1EE8  
                                      l434 1E48                                        l419 2CA8  
                                      l443 1EFC                                        l435 1E5C  
                                      l532 31C0                                        l444 1F10  
                                      l436 1E70                                        l525 316E  
                                      l445 1F24                                        l437 1E84  
                                      l526 316A                                        l446 1F38  
                                      l438 1E98                                        l462 2752  
                                      l390 2E62                                        l551 2E42  
                                      l447 1F4C                                        l439 1EAC  
                                      l463 26EA                                        l471 28C0  
                                      l552 2E24                                        l448 1F60  
                                      l472 2874                                        l560 2C2C  
                                      l537 2D4C                                        l465 26FE  
                                      l538 2D2A                                        l458 2C6A  
                                      l466 271A                                        l474 2888  
                                      l539 2D42                                        l571 2E04  
                                      l467 2736                                        l475 28A4  
                                      l900 13A6                                        l493 2B64  
                                      l901 13E6                                        l910 16DE  
                                      l559 2C40                                        l479 220E  
                                      l903 146A                                        l905 1528  
                                      l906 159C                                        l908 1620  
                                      l960 177C                                        l946 2D06  
                                      l962 17B0                                        l947 2CEC  
                                      l971 1868                                        l980 1914  
                                      l964 1836                                        l956 172C  
                                      l893 129E                                        l990 199C  
                                      l982 192C                                        l974 18C4  
                                      l958 1758                                        l983 19A6  
                                      l975 1936                                        l967 181A  
                                      l959 17CC                                        l895 12D8  
                                      l984 195A                                        l976 18EA  
                                      l995 1B04                                        l899 133A  
                                      _CRC 0092                                        l988 1984  
                                      l997 19D2                                        l999 19F2  
                             __CFG_CPB$OFF 000000                      i2Xor_check@data_value 0027  
                             __CFG_CPD$OFF 000000                                        _LQI 0020  
                         _set_long_address 2E50                 ??_INT0_SetInterruptHandler 012A  
                                      _Num 0084                                        _ltr 007A  
                              _totalLitres 0067                               ___awmod@sign 012C  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 30B6  
                  __size_of_start_transmit 0048                 i2read_ZIGBEE_short@address 0029  
                              i2_Xor_check 2D5E                              _INT1_CallBack 3092  
              read_ZIGBEE_long@address_low 002F                                       l1001 1A1A  
                                     l1003 1A3C                                       l1004 1A76  
                                     l1013 1B5E                                       l1006 1AE6  
                                     l1200 280C                                       l1201 2818  
                                     l1009 1AF2                      ?_write_TX_normal_FIFO 0027  
                                     l1203 282E                                       l1204 2826  
                                     l1207 2846                                       l1208 2850  
                                     l1209 285E                                       l1190 27B4  
                                     l1342 23CA                                       l1334 232E  
                                     l1191 27AC                                       l1343 23BE  
                                     l1423 2A1C                                       l1336 23A6  
                                     l1424 2A14                                       l1345 23E6  
                                     l1337 2396                                       l1433 2BA8  
                                     l1194 27D4                                       l1434 2BA0  
                                     l1195 27DE                                       l1187 2786  
                                     l1427 2A3C                                       l1196 27EC  
                                     l1188 2796                                       l1428 2A46  
                                     l1437 2BC0                                       l1438 2BCA  
                                     l5109 2E5A                                       l5227 2204  
                                     l5247 2266                                       l5461 1A6E  
                                     l5437 19CA                                       l4683 2D32  
                                     l4947 2E2C                                       l5909 12EE  
                                     l5953 13A6                                       l5965 146A  
                                     l5959 13E6                                       l5985 1620  
                                     l5979 159C                                       _DATA 0022  
                                     STR_1 108B                                       STR_2 10CF  
                                     STR_3 109C                                       STR_4 10E0  
                                     STR_5 1036                                       STR_6 10BE  
                                     STR_7 1014                                       STR_8 1003  
                                     STR_9 10AD                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u4010 1942                                       _LATF 000F8E  
                                     _LATG 000F8F                                       u4200 1B0E  
                                     u4130 1A6A                                       u4060 19AC  
                                     u4080 19C6                                       u3450 2D48  
                                     u4180 1AF8                                       u3540 1E30  
                                     u4510 234C                                       u3625 2E12  
                                     u3626 2E14                                       u4610 2BAC  
                                     u4515 2344                                       u4460 27B8  
                                     u3590 2E3E                                       u3910 17D8  
                                     u4550 23D0                                       u3760 2832  
                                     u3840 223E                                       u4491 2312  
                                     u4580 2A20                                       u3860 22F2  
                                     u4910 13F4                                       u3960 18D2  
                                     u3880 1764                                       u4930 1478  
                                     u4870 12EE                                       u4960 15AA  
                                     u4980 162E                                       _Nilp 0006  
                                     _Tick 000B                                       _Time 007E  
                                     _addr 00A0                                       _flag 00A7  
                                     _main 10F2                               ___ftpack@arg 00BB  
                    write_TX_normal_FIFO@i 0136                      write_TX_normal_FIFO@n 0135  
                             ___ftpack@exp 00BE                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 004B  
                    __size_of_Write_b_eep2 003C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 01F2  
                            __CFG_IESO$OFF 000000                              __CFG_FOSC$HS1 000000  
                          __end_of_LcdData 313E                            __end_of_Delayms 2D5E  
                          __end_of_LcdInit 2AF6                         _set_reception_mode 2868  
                            __CFG_MCLRE$ON 000000                   ?_set_frame_format_filter 0027  
                             ___param_bank 000000                                 _LcdDisplay 2CDE  
                        i2Xor_check@length 0029                            _set_not_encrypt 31EA  
                    __end_of_set_RSSI_mode 2CDE                            __end_of_InitSPI 306E  
                          set_not_ACK@temp 012B                               ___fttol@exp1 0135  
                   set_RSSI_mode@RSSI_mode 012B                               ___fttol@lval 0131  
                __size_of_enable_interrupt 000E                    __end_of_TMR0_Initialize 2F3C  
                            Set_DeviceId@i 0138                              Set_DeviceId@j 0136  
                            Set_DeviceId@n 0137                           __end_of_INT0_ISR 3324  
                         __end_of_INT1_ISR 331C                                 ScanInput@x 00BD  
           ??_TMR0_DefaultInterruptHandler 00BB                              __CFG_RETEN$ON 000000  
           __size_of_OSCILLATOR_Initialize 0014                        ?_set_reception_mode 0027  
                   ?_init_ZIGBEE_nonbeacon 0027                              ??_Read_b_eep2 0129  
            __end_of_OSCILLATOR_Initialize 3254                                ?i2_SPI_Read 0027  
                                    ?_main 0027                            __end_of___awdiv 27F6  
                                    _CHECK 00AE                                      _EEADR 000F62  
                          __end_of___ftadd 218C                                      STR_10 1025  
                                    STR_11 1058                                      STR_12 1069  
                                    STR_13 1069                                      STR_14 107A  
                                    STR_15 1069                                      STR_16 107A  
                                    STR_17 1047                                      STR_18 10AD  
                                    STR_19 1025                            __end_of___awmod 2868  
                          _F_TimerCounting 0002                        _data_TX_normal_FIFO 0115  
                                    _T0CON 000FD5                            ___awdiv@divisor 0129  
                          __end_of___fttol 23F8                                      _COUNT 0088  
                           __CFG_DEBUG$OFF 000000                            __end_of___lwdiv 2A50  
                                    _ERROR 0013                            __end_of___lwmod 2BD4  
                                    i2l520 32AE                                      i2l514 32A2  
                                    i2l374 1BD4                                      i2l376 1C44  
                                    i2l560 2D70                                      i1l880 015E  
                                    i2l377 1CA4                                      i1l882 016A  
                                    i1l875 007E                                      i1l876 019A  
                                    i1l877 00DE                                      i1l878 0146  
                                    i2l559 2D84                                      i1l887 0196  
                                    i1l879 0178                                      i2l867 2486  
                                    i2l868 2482                            ___awdiv@counter 012B  
                                    _VALUE 0008                        i2SPI_Write@response 0027  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _PORTE 000F84                                      _PORTG 000F86  
                                    _RSSI2 001F                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0027  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                                      _TRISF 000F97  
                                    _TRISG 000F98                                      _TX_ID 000C  
        __size_of_TMR0_SetInterruptHandler 000E                                      _Digit 00A1  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                  ?_TMR0_SetInterruptHandler 0127  
                                    _T_Ltr 0078                              __CFG_WRT3$OFF 000000  
                                    _Enter 00A4                              __CFG_WRT4$OFF 000000  
                           __CFG_EBRT0$OFF 000000                              __CFG_WRT5$OFF 000000  
                           __CFG_EBRT1$OFF 000000                              __CFG_WRT6$OFF 000000  
                           __CFG_EBRT2$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBRT3$OFF 000000                             __CFG_EBRT4$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBRT5$OFF 000000  
                                    _Time2 007C                             __CFG_EBRT6$OFF 000000  
                           __CFG_EBRT7$OFF 000000                           __end_of_TMR0_ISR 2FDC  
                                    _Pulse 0076                                      _Trick 000A  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                                    _Store 0015                              __CFG_WRTD$OFF 000000  
                           ?_INT1_CallBack 0027                             __CFG_EBRTB$OFF 000000  
                                    _ckeck 008E                                      _delay 315E  
                             _Write_b_eep2 2DDC             ??_INT1_DefaultInterruptHandler 00BB  
                            ___ftpack@sign 00BF                                      _value 0009  
                         __end_of_SPI_Read 3266                   _INT1_SetInterruptHandler 32D8  
                                    pclath 000FFA                       ??_set_reception_mode 012B  
                                    tablat 000FF5                           __end_of_RF_reset 2F8C  
                                    status 000FD8                                      wtemp6 004C  
                       __size_of_SPI_Write 0012                         __size_ofi1___lwdiv 0054  
           ?_INTERRUPT_InterruptManagerLow 0027                           __end_of_Delay_ms 31D2  
                         __end_of_Delayms1 2E50                   __end_of_read_ZIGBEE_long 2B48  
                          __initialization 28D8                               __end_of_main 16E2  
                         read_RX_FIFO@temp 0035               __end_ofi2_write_ZIGBEE_short 319A  
                           _ADDRESS_long_1 013A                             _ADDRESS_long_2 00EF  
                                   ??_main 0139                              ___fttol@sign1 0130  
                            ?_read_RX_FIFO 0027                              __activetblptr 000003  
                           __CFG_PLLCFG$ON 000000                        __end_of_Read_b_eep2 329C  
                   ??_write_TX_normal_FIFO 0130                                     ?_delay 0127  
                             ?i2_SPI_Write 0027                                 _Send_Frame 00A9  
                                   _EEDATA 000F61                                     _EECON2 000F7E  
                                   _ANCON0 000F25                                     _ANCON1 000F24  
                                   _ANCON2 000F23                           ___awdiv@dividend 0127  
                         __end_of___ftpack 2648                                     i1l1240 261E  
                                   i1l1241 2614                                     i1l1234 25C2  
                                   i1l1235 25B8                                     _LENGTH 0023  
                                   i1l1237 25F6                                     i1l1238 25E0  
                                   i1l1423 2A70                                     i1l1280 20AE  
                                   i1l1424 2A68                                     i1l1265 2032  
                                   i1l1274 20C2                                     i1l1291 211A  
                                   i1l1427 2A90                                     i1l1292 2136  
                                   i1l1428 2A9A                                     i1l1293 2166  
                                   i1l1269 205C                                     i1l1279 20B8  
                                   i1l1288 20F6   __end_of_nonbeacon_PAN_coordinator_device 2DDC  
__size_of_nonbeacon_PAN_coordinator_device 003E          ?_nonbeacon_PAN_coordinator_device 0027  
       ??_nonbeacon_PAN_coordinator_device 012B           _nonbeacon_PAN_coordinator_device 2D9E  
                                   i1l1289 20EC                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     _ID_SET 000E  
                                   u422_21 1FF0                                     u423_21 2004  
                         __end_of___lwtoft 3002                                  ??_LcdData 012D  
                         SPI_Write@command 0128                                  ??_Delayms 0129  
                                   _OSCCON 000FD3                                  ??_LcdInit 012E  
                                   _PORTGX 0003                         __size_of_Busy_eep2 0006  
                  __end_of_set_not_encrypt 3200                            Read_b_eep2@badd 0127  
                      __size_ofi2_SPI_Read 0010                               ?_set_channel 0027  
                         set_CCA_mode@temp 012C                                  ??_InitSPI 012B  
                                   _TX_CRC 0094                                     _LcdCmd 313E  
                       __size_of_ScanInput 0062                                     _Count1 0025  
                                   _Count2 0024                                     _V_Temp 009C  
                                   _Rv_CRC 0096                             __CFG_XINST$OFF 000000  
                                   _SendId 00A2                    write_ZIGBEE_long@data_r 012B  
                              ?_LcdDisplay 012E                               ?_set_not_ACK 0027  
                 set_short_address@address 012B                                     ___wmul 2F8C  
                                ??___awdiv 012B                                  ??___ftadd 00C9  
                           __CFG_STVREN$ON 000000                                  ??___awmod 012B  
                                   _data_r 0021                                  ??___fttol 012B  
                                ??___lwdiv 012B                                  ??___lwmod 012B  
                         ?_TMR0_Initialize 0027                                     delay@l 0129  
                                   clear_0 291E                                     clear_1 292A  
                                   clear_2 2936                           ___awdiv@quotient 012D  
                          ___awmod@divisor 0129                          _set_WAKE_from_pin 319A  
                          ___awmod@counter 012B                             ??_read_RX_FIFO 0030  
                          ??_INT0_CallBack 0027                           __end_of_pin_wake 3278  
                      Xor_check@data_value 0127                         ?_set_WAKE_from_pin 0027  
                        __end_of_SPI_Write 328A                          __end_ofi1___lwdiv 2AA4  
                       Xor_check@xor_value 012B                            ??_INT1_CallBack 00BB  
                         ??_lcd_off_cursor 012E                               __mediumconst 0000  
                             _data_RX_FIFO 0100                             _start_transmit 2B48  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                              ?_Set_DeviceId 0027  
                    __end_of_TMR0_CallBack 3092   INT0_SetInterruptHandler@InterruptHandler 0127  
 INT1_SetInterruptHandler@InterruptHandler 0127   TMR0_SetInterruptHandler@InterruptHandler 0127  
                      ??_set_WAKE_from_pin 012B                          _init_ZIGBEE_basic 2648  
            __size_of_INTERRUPT_Initialize 0008           ??_INTERRUPT_InterruptManagerHigh 0037  
          ?_INTERRUPT_InterruptManagerHigh 0027                          _SYSTEM_Initialize 3216  
                       ?_init_ZIGBEE_basic 0027                                 __accesstop 0060  
                  __end_of__initialization 293C                              ?_set_CCA_mode 0027  
                                ?_INT0_ISR 0027                                  ?_INT1_ISR 0027  
                               ___ftadd@f1 00C3                                 ___ftadd@f2 00C6  
                       __size_of_Xor_check 0042                                 _Store_DATA 0060  
             __size_ofi2_read_ZIGBEE_short 0022                         ?_SYSTEM_Initialize 0027  
                 __end_of_set_long_address 2E84                              ___rparam_used 000001  
                        ScanInput@portread 00BB                        ??_init_ZIGBEE_basic 0130  
                               ___fttol@f1 0127                             __pcstackCOMRAM 0027  
                             __pidataBANK0 31D2                               __pidataBANK1 32F4  
     nonbeacon_PAN_coordinator_device@temp 012B                        ??_SYSTEM_Initialize 012A  
                                ?_TMR0_ISR 0027                              __end_of_delay 317C  
                __end_of_set_WAKE_from_pin 31B6                           _enable_interrupt 32BC  
                                ?_SPI_Read 0027                                _Read_b_eep2 328A  
                               ___lwtoft@c 00C8                          __end_of_Busy_eep2 332A  
                   __end_of_start_transmit 2B90                __size_of_EXT_INT_Initialize 0032  
                                ?_RF_reset 0027                      TMR0_ISR@CountCallBack 009A  
                        __end_of_ScanInput 29A8                               _DeviceId_arr 00B5  
                           ??_Set_DeviceId 0131                                  ?_Delay_ms 0127  
                                ?_Delayms1 0127                         __size_of_lcd_clear 0008  
                             Xor_check@xor 012D                  __end_of_init_ZIGBEE_basic 26DE  
              __size_of_write_ZIGBEE_short 0024                               ?i2_Xor_check 0027  
            write_ZIGBEE_long@address_high 012E                   read_ZIGBEE_short@address 012A  
                                  ??_delay 0129                        __size_of_LcdDisplay 0040  
                __end_of_SYSTEM_Initialize 322C                            Set_DeviceId@ID1 0133  
                          _ADDRESS_short_1 00EA                            _ADDRESS_short_2 00F9  
                               __pbssBANK0 0060                                 __pbssBANK1 0100  
                           ??_set_CCA_mode 012B                              _CheckPassword 006A  
                     i2_write_ZIGBEE_short 317C                      _INT0_InterruptHandler 006D  
                               ??_INT0_ISR 0027                                 ??_INT1_ISR 00BB  
                         ?_set_not_encrypt 0027                                    ?_LcdCmd 0027  
                           _flow_frequency 0082                              ?_set_TX_power 0027  
                  ??_init_ZIGBEE_nonbeacon 0131           __end_of_TMR0_SetInterruptHandler 32D8  
                                  ?___wmul 00BB                                 ??_TMR0_ISR 00BB  
              i2write_ZIGBEE_short@address 002A                         __size_of_pin_reset 0022  
                               _enable_PLL 322C                               ??i2_SPI_Read 0027  
                                ?___ftpack 00BB                                 ??_SPI_Read 0127  
                                  _DATA_RX 00B0                                    _DATA_TX 00B8  
                                ?___lwtoft 00C8                          __end_of_Xor_check 2C5A  
                          ?_start_transmit 0027                                 ??_RF_reset 012B  
               ??_INT1_SetInterruptHandler 012A                                    _ID_READ 0005  
         __size_of_set_frame_format_filter 0092                                    _REFOCON 000F2A  
                               ??_Delay_ms 0129                                 ??_Delayms1 0129  
                                  _OSCCON2 000F64                                    _F_ERROR 0012  
                                  _OSCTUNE 000F9B                                    _F_IdSet 0018  
                                  _SSP1BUF 000FC9                                    _F_Enter 0001  
              set_frame_format_filter@temp 012C                                    _F_SetID 000F  
                                  _F_Input 001B                 i2write_ZIGBEE_short@data_r 0029  
                                  _IdByte1 009F                                    _IdByte2 009E  
                                  _IdByte3 009D                                    _T_ERROR 0090  
                   set_reception_mode@temp 012C                       __size_ofi2_SPI_Write 0010  
                    ?i2_write_ZIGBEE_short 0029                                    _LcdData 311E  
                                  _Delayms 2D1E                                    _LcdInit 2AA4  
                               _flowLitres 0064          __size_of_INT0_SetInterruptHandler 000E  
                                  _T_Input 001C                       __end_of_read_RX_FIFO 1E1E  
                ?_INT0_SetInterruptHandler 0127                                    _InitSPI 304A  
                       __end_ofi2_SPI_Read 32BC                          SPI_Write@response 0127  
                          __size_of_LcdCmd 0020                             ??_set_TX_power 0130  
                          Xor_check@length 0129                            __CFG_PWRTEN$OFF 000000  
                                ?_pin_wake 0027                                    __Hparam 0000  
                            _HEADER_LENGHT 1001                          ?_read_ZIGBEE_long 0029  
                                  __Lparam 0000                       __size_of_set_channel 01C0  
                 write_ZIGBEE_long@address 0129                          __end_of_lcd_clear 330C  
                       ??_read_ZIGBEE_long 002B                    read_ZIGBEE_long@address 0029  
                                  ___awdiv 2770                                    ___ftadd 1FDE  
                                  ___awmod 27F6                 __size_of_set_WAKE_from_pin 001C  
                          __size_of___wmul 0028                                    ___fttol 2300  
                                  ___lwdiv 29FC                                    ___lwmod 2B90  
                             __psmallconst 1000                                    _address 0007  
                     __size_of_set_not_ACK 0016                          set_long_address@i 012D  
                                  __pcinit 28D8                                 ??___ftpack 00C0  
                                  __ramtop 1000                                    __ptext0 10F2  
                                  __ptext1 218C                                    __ptext2 2B48  
                                  __ptext3 2F3C                                    __ptext4 3254  
                                  __ptext5 31EA                                    __ptext6 3200  
                                  __ptext7 2C18                                    __ptext8 2EB6  
                                  __ptext9 2868                                 ??___lwtoft 00CB  
                                _T0CONbits 000FD5                          i1___lwdiv@divisor 00C3  
                    _OSCILLATOR_Initialize 3240                          i1___lwdiv@counter 00C5  
                         ___awmod@dividend 0127                   ??_PIN_MANAGER_Initialize 0127  
                        __CFG_MSSPMSK$MSK7 000000                     _address_TX_normal_FIFO 0098  
               __size_of_init_ZIGBEE_basic 0096                                 _set_PAN_ID 2EE4  
               __size_of_SYSTEM_Initialize 0016                             __pintcode_body 23F8  
                   __size_of_set_RSSI_mode 0042                       end_of_initialization 293C  
                        __end_of_pin_reset 30FC                __size_of_set_reception_mode 0070  
                                Delayms1@i 0129                                  Delayms1@j 012B  
                                Delay_ms@y 0129                            _address_RX_FIFO 00EC  
                                  int_func 23F8                  set_channel@channel_number 0130  
                        _write_ZIGBEE_long 29A8                                  _F_ID_SEND 00AA  
                               ??_pin_wake 012B                                  _F_ID_Send 0004  
                       ?_write_ZIGBEE_long 0129                       __end_of_Set_DeviceId 1B9C  
                             ??_LcdDisplay 0130                                    postdec1 000FE5  
                      __end_of_DATA_LENGHT 1003                                    postinc0 000FEE  
                                  postinc2 000FDE                          _set_short_address 2EB6  
                        set_TX_power@power 0131                                ?_enable_PLL 0027  
                       ?_set_short_address 012B                        ??_write_ZIGBEE_long 012C  
                     __end_of_set_CCA_mode 2598                   _TMR0_SetInterruptHandler 32CA  
                                _PORTAbits 000F80                      _INT1_InterruptHandler 0070  
                                _PORTCbits 000F82                                  _PORTEbits 000F84  
                                _PORTFbits 000F85                        i2_read_ZIGBEE_short 30FC  
                      ??_set_short_address 012D                           Write_b_eep2@badd 0127  
                                _TRISCbits 000F94                           Write_b_eep2@data 0129  
                                _SPI_Write 3278                                  _F_Success 00A5  
                                i1___lwdiv 2A50                        set_not_encrypt@temp 012B  
                   ??i2_write_ZIGBEE_short 002A                             i2Xor_check@xor 002D  
                       __end_of_LcdDisplay 2D1E                   __end_of_enable_interrupt 32CA  
            __size_of_write_TX_normal_FIFO 0174                       __size_ofi2_Xor_check 0040  
                __end_of_write_ZIGBEE_long 29FC                   set_reception_mode@r_mode 012B  
                     ?i2_read_ZIGBEE_short 0027                                  _T_ID_Send 000D  
                                _Decrement 008A                          ?_set_long_address 012B  
                        __size_of_INT0_ISR 0008                          __size_of_INT1_ISR 0008  
                           __end_of_LcdCmd 315E                  __end_of_set_short_address 2EE4  
                       i2SPI_Write@command 0028                         ??_set_long_address 012D  
                                _Device_ID 001D               __end_of_INTERRUPT_Initialize 3314  
                            _set_RSSI_mode 2C9C       __end_of_INT0_DefaultInterruptHandler 3330  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 332E  
                           __end_of___wmul 2FB4                          __size_of_TMR0_ISR 0028  
                             ?_Read_b_eep2 0127                     ?_OSCILLATOR_Initialize 0027  
                  _set_frame_format_filter 26DE                                  _Count_LED 0011  
                                _Flow_Rate 0080                    set_long_address@address 012B  
                        __size_of_SPI_Read 0012                      __end_of_INT0_CallBack 30DA  
                      start_initialization 28D8                       __end_of_set_TX_power 2C9C  
                                _Increment 008C                   __size_of_TMR0_Initialize 002A  
          __size_of_PIN_MANAGER_Initialize 0044                          __size_of_RF_reset 0028  
                                _Busy_eep2 3324                      __end_of_INT1_CallBack 30B6  
                              ?_set_PAN_ID 012B                                 ?_SPI_Write 0027  
                               ?i1___lwdiv 00C1                                  _ScanInput 2946  
                        __size_of_Delay_ms 001C                          __size_of_Delayms1 0038  
                    __size_of_read_RX_FIFO 0282                                  _InputRead 0019  
                      __size_of_enable_PLL 0014                      ??i2_read_ZIGBEE_short 0029  
                                _Module_ID 00A3                                _DATA_LENGHT 1002  
                                 ??_LcdCmd 012D                             ?_set_RSSI_mode 0027  
                                 ??___wmul 00BF            set_frame_format_filter@fff_mode 012B  
                             Delay_ms@time 0127                     __size_of_TMR0_CallBack 0024  
                         ??_start_transmit 012B                               Delayms1@time 0127  
           __size_of_init_ZIGBEE_nonbeacon 0024                                __pdataBANK0 00E4  
                              __pdataBANK1 013A              __end_of_init_ZIGBEE_nonbeacon 3026  
               __end_of_EXT_INT_Initialize 2EB6                               LcdData@value 012D  
            ?_INT0_DefaultInterruptHandler 0027                               _read_RX_FIFO 1B9C  
                        __size_of___ftpack 00B0                 __end_of_write_ZIGBEE_short 304A  
                     i2Xor_check@xor_value 002B                           Set_DeviceId@fail 0135  
                              __pbssCOMRAM 0001           __end_of_INT0_SetInterruptHandler 32F4  
                        __size_of___lwtoft 0026                              __pcstackBANK0 00BB  
                            __pcstackBANK1 0127                                 ?_Busy_eep2 0027  
                        set_RSSI_mode@temp 012C                                  _Xor_check 2C18  
                            ?_Write_b_eep2 0127                                 ?_ScanInput 0027  
                            ScanInput@temp 00BC                   write_ZIGBEE_short@data_r 0129  
                                 ?_LcdData 0027                                   ?_Delayms 0127  
               __size_of_write_ZIGBEE_long 0054                                   ?_LcdInit 0027  
             write_ZIGBEE_long@address_low 012F                      __size_of_Set_DeviceId 04BA  
                  read_ZIGBEE_short@data_r 0129                    __size_of_lcd_off_cursor 0008  
                                 ?_InitSPI 0027                      _TMR0_InterruptHandler 0073  
                         ___lwdiv@dividend 0127                     _PIN_MANAGER_Initialize 2BD4  
               __size_of_set_short_address 002E                          __CFG_CCP2MX$PORTC 000000  
                                __pintcode 0008                      __size_of_set_CCA_mode 00C6  
             read_ZIGBEE_long@address_high 002E                          __size_of_pin_wake 0012  
                                 ?___awdiv 0127                                   ?___ftadd 00C3  
                      __size_of_set_PAN_ID 002E                                   ?___awmod 0127  
                 __size_of_set_not_encrypt 0016                                   ?___fttol 0127  
                                 ?___lwdiv 0127                                   ?___lwmod 0127  
                                _lcd_clear 3304                  ??_set_frame_format_filter 012B  
                              __pintcodelo 0018                          i2SPI_Read@TempVar 0027  
                              __smallconst 1000                               _Send_Frame_2 00A8  
                __size_of_read_ZIGBEE_long 0052                             ??_Write_b_eep2 012A  
                               ?_Xor_check 0127                               _Set_DeviceId 16E2  
                            ??i2_SPI_Write 0027                                ??_SPI_Write 0127  
                   read_ZIGBEE_long@data_r 002D                           ___lwdiv@quotient 012C  
                              ??i1___lwdiv 00C5                             __size_of_delay 001E  
                            _TMR0_CallBack 306E                       _INTERRUPT_Initialize 330C  
                        ??_TMR0_Initialize 012A                                   _INT0_ISR 331C  
                                 _INT1_ISR 3314                               _set_CCA_mode 24D2  
                           ___wmul@product 00BF                             LcdDisplay@LINE 0130  
                            ??_set_channel 0130          __size_of_INT1_SetInterruptHandler 000E  
                ?_INT1_SetInterruptHandler 0127                                  _pin_reset 30DA  
                                 _PAN_ID_1 00E8                                   _PAN_ID_2 00F7  
                                 _INPUT_DS 00E4                                   Delayms@k 0129  
                                 Delayms@l 012B                                   _INPUT_PS 00E6  
                                 _INTTRUPT 0026                                   i1u432_20 208C  
                                 i1u370_20 2628                                   i1u426_20 2024  
                          ??_set_RSSI_mode 012B                                   i1u436_20 20CA  
                                 i1u429_20 204E                                   i1u366_20 25AA  
                                 i1u550_28 307E                                   i1u439_20 20FE  
                                 i2u215_40 1CA8                                   i1u464_20 2A74  
                                _lost_data 001E                                   i1u552_28 30A2  
                                 _F_BUZZER 00AC                                   i1u555_20 2FCC  
                                 i1u563_20 009A                                   i1u572_20 0192  
               ??_TMR0_SetInterruptHandler 012A                                   _PIR1bits 000F9E  
                                 i2u554_48 30C6                              ??_set_not_ACK 012B  
                                 _RCONbits 000FD0                                  _slave_add 0014  
                                 _TMR0_ISR 2FB4                               ??_enable_PLL 0130  
                               ?_lcd_clear 0027                                   _SPI_Read 3254  
                    __size_of_set_TX_power 0042                          ___wmul@multiplier 00BB  
                         __CFG_SOSCSEL$DIG 000000                                   _RF_reset 2F64  
                     __size_of_Read_b_eep2 0012                                   _T_BUZZER 00AB  
           ??_INT0_DefaultInterruptHandler 0027                                   _Delay_ms 31B6  
                                 _Delayms1 2E18                                ??_Busy_eep2 0127  
                            read_RX_FIFO@i 0036                             ?_TMR0_CallBack 0027  
               __end_of_set_reception_mode 28D8                                ??_ScanInput 00BB  
                              _INTCON2bits 000FF1                                _INTCON3bits 000FF0  
                                copy_data0 28EC                                  copy_data1 290C  
                    ?_INTERRUPT_Initialize 0027                   _INT0_SetInterruptHandler 32E6  
          __end_of_set_frame_format_filter 2770                          ?_enable_interrupt 0027  
                       __end_of_enable_PLL 3240                           __size_of_LcdData 0020  
                         __size_of_Delayms 0040                        __end_ofi2_SPI_Write 32AC  
                         __size_of_LcdInit 0052                         ??_enable_interrupt 012B  
                        _read_ZIGBEE_short 2F3C                                 _EECON1bits 000F7F  
                               ?_pin_reset 0027                           __size_of_InitSPI 0024  
                                 __Hrparam 0000                         ?_read_ZIGBEE_short 0027  
                             _set_TX_power 2C5A                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                        __end_of_set_channel 1FDE  
                              LcdCmd@value 012D               __end_of_write_TX_normal_FIFO 2300  
                                 _Portread 001A                    ??_OSCILLATOR_Initialize 0127  
                         __size_of___awdiv 0086                           __size_of___ftadd 01AE  
                         __size_of___awmod 0072                           __size_of___fttol 00F8  
                      ??_read_ZIGBEE_short 0129                           __size_of___lwdiv 0054  
                              Delayms@time 0127                           __size_of___lwmod 0044  
                                 ___ftpack 2598                        __end_of_set_not_ACK 3216  
                                 ___lwtoft 2FDC                          _ConfigModeEntered 00A6  
                __size_of_set_long_address 0034                          ??_set_not_encrypt 012B  
          ??_INTERRUPT_InterruptManagerLow 00CF                            ___lwdiv@divisor 0129  
                            ??i2_Xor_check 002A                               ??_set_PAN_ID 012D  
                              ??_Xor_check 012A                            ___lwdiv@counter 012B  
                                 __ptext10 2E50                                   __ptext11 26DE  
                                 __ptext20 2F64                                   __ptext12 319A  
                                 __ptext21 2C9C                                   __ptext13 2C5A  
                                 __ptext30 3278                                   __ptext22 24D2  
                                 __ptext14 2EE4                                   __ptext31 2B90  
                                 __ptext23 3266                                   __ptext15 30DA  
                                 __ptext40 2CDE                                   __ptext32 29FC  
                                 __ptext24 31B6                                   __ptext16 2D9E  
                                 __ptext41 311E                                   __ptext33 2300  
                                 __ptext25 2648                                   __ptext17 32FC  
                                 __ptext50 2E84                                   __ptext42 2E18  
                                 __ptext34 2770                                   __ptext26 322C  
                                 __ptext18 3002                                   __ptext51 32D8  
                                 __ptext43 3324                                   __ptext35 16E2  
                                 __ptext27 29A8                                   __ptext19 1E1E  
                                 __ptext60 2F8C                                   __ptext52 32E6  
                                 __ptext44 3216                                   __ptext36 3304  
                                 __ptext28 32BC                                   __ptext61 2FDC  
                                 __ptext53 2AA4                                   __ptext45 2F12  
                                 __ptext37 27F6                                   __ptext29 3026  
                                 __ptext70 332C                                   __ptext62 1FDE  
                                 __ptext54 313E                                   __ptext46 32CA  
                                 __ptext38 2DDC                                   __ptext63 2598  
                                 __ptext55 2D1E                                   __ptext47 2BD4  
                                 __ptext39 328A                                   __ptext80 30B6  
                                 __ptext72 30FC                                   __ptext64 2FB4  
                                 __ptext56 304A                                   __ptext48 3240  
                                 __ptext81 332E                                   __ptext73 2D5E  
                                 __ptext65 306E                                   __ptext57 315E  
                                 __ptext49 330C                                   __ptext82 0000  
                                 __ptext74 1B9C                                   __ptext66 332A  
                                 __ptext75 317C                                   __ptext67 2946  
                                 __ptext59 2A50                                   __ptext76 2AF6  
                                 __ptext68 3314                                   __ptext77 329C  
                                 __ptext69 3092                                   __ptext78 32AC  
                                 __ptext79 331C                               _SSP1CON1bits 000FC6  
                       i1___lwdiv@dividend 00C1                  __end_of_read_ZIGBEE_short 2F64  
            __size_ofi2_write_ZIGBEE_short 001E                             _lcd_off_cursor 32FC  
                            __size_of_main 05F0                                 _ENTERCOUNT 0086  
                                 delay@dly 0127       __end_of_TMR0_DefaultInterruptHandler 332C  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 332A  
                                 _pin_wake 3266                        __CFG_RTCOSC$SOSCREF 000000  
                     __end_of_Write_b_eep2 2E18                                   int$flags 004B  
                     set_CCA_mode@CCA_mode 012B                         __end_of_set_PAN_ID 2F12  
                              ??_lcd_clear 012E                  write_ZIGBEE_short@address 012A  
                             _SSP1STATbits 000FC7                        __CFG_INTOSCSEL$HIGH 000000  
     __end_of_INT1_DefaultInterruptHandler 332E      __size_of_INT1_DefaultInterruptHandler 0002  
             _INT1_DefaultInterruptHandler 332C                         i1___lwdiv@quotient 00C6  
                         _read_ZIGBEE_long 2AF6                                 _INTCONbits 000FF2  
                        set_PAN_ID@address 012B                            ??_TMR0_CallBack 00BB  
                   ??_INTERRUPT_Initialize 0127                __end_ofi2_read_ZIGBEE_short 311E  
                              i2_SPI_Write 329C                         _EXT_INT_Initialize 2E84  
                   __end_of_lcd_off_cursor 3304                                   intlevel1 0000  
                                 intlevel2 0000                         _write_ZIGBEE_short 3026  
                         ___lwmod@dividend 0127                        __end_ofi2_Xor_check 2D9E  
                  ?_PIN_MANAGER_Initialize 0027                           LcdDisplay@string 012E  
                      ?_EXT_INT_Initialize 0027                                _set_channel 1E1E  
                              ??_pin_reset 012B                      __end_of_HEADER_LENGHT 1002  
                   __size_of_INT0_CallBack 0024              ?_TMR0_DefaultInterruptHandler 0027  
                      ?_write_ZIGBEE_short 0129                                _set_not_ACK 3200  
                   __size_of_INT1_CallBack 0024                         __CFG_WDTPS$1048576 000000  
                               i2_SPI_Read 32AC     __end_of_INTERRUPT_InterruptManagerHigh 24D2  
  __size_of_INTERRUPT_InterruptManagerHigh 24CA             _INTERRUPT_InterruptManagerHigh 0008  
                    _init_ZIGBEE_nonbeacon 3002                       ??_EXT_INT_Initialize 012A  
                               _SEQ_NUMBER 00EE              ?_INT1_DefaultInterruptHandler 0027  
                          ___lwmod@divisor 0129                            _TMR0_Initialize 2F12  
                          ___lwmod@counter 012B                    Write_b_eep2@GIE_BIT_VAL 012A  
         __end_of_INT1_SetInterruptHandler 32E6                       ??_write_ZIGBEE_short 012A  
    __end_of_INTERRUPT_InterruptManagerLow 01F2     __size_of_INTERRUPT_InterruptManagerLow 01DA  
            _INTERRUPT_InterruptManagerLow 0018                       _write_TX_normal_FIFO 218C  
                          ?_lcd_off_cursor 0027             __end_of_PIN_MANAGER_Initialize 2C18  
               __size_of_read_ZIGBEE_short 0028                        __CFG_BORPWR$ZPBORMV 000000  
