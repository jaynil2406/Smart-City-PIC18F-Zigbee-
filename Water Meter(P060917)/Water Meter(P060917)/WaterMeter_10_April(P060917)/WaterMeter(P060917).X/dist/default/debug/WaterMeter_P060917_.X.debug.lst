

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 13 12:20:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104  0000                     
   105                           ; Version 1.45
   106                           ; Generated 16/11/2017 GMT
   107                           ; 
   108                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC18F67K22 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     
   140                           	psect	idataBANK0
   141  003198                     __pidataBANK0:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _INPUT_DS
   145  003198  FF                 	db	255
   146  003199  FF                 	db	255
   147                           
   148                           ;initializer for _INPUT_PS
   149  00319A  FF                 	db	255
   150  00319B  FF                 	db	255
   151                           
   152                           ;initializer for _PAN_ID_1
   153  00319C  03                 	db	3
   154  00319D  03                 	db	3
   155                           
   156                           ;initializer for _ADDRESS_short_1
   157  00319E  01                 	db	1
   158  00319F  01                 	db	1
   159                           
   160                           ;initializer for _address_RX_FIFO
   161  0031A0  0300               	dw	768
   162                           
   163                           ;initializer for _SEQ_NUMBER
   164  0031A2  23                 	db	35
   165                           
   166                           ;initializer for _ADDRESS_long_2
   167  0031A3  02                 	db	2
   168  0031A4  02                 	db	2
   169  0031A5  02                 	db	2
   170  0031A6  02                 	db	2
   171  0031A7  02                 	db	2
   172  0031A8  02                 	db	2
   173  0031A9  02                 	db	2
   174  0031AA  02                 	db	2
   175                           
   176                           ;initializer for _PAN_ID_2
   177  0031AB  03                 	db	3
   178  0031AC  03                 	db	3
   179                           
   180                           ;initializer for _ADDRESS_short_2
   181  0031AD  02                 	db	2
   182  0031AE  02                 	db	2
   183                           
   184                           	psect	idataBANK1
   185  0032BA                     __pidataBANK1:
   186                           	opt stack 0
   187                           
   188                           ;initializer for _ADDRESS_long_1
   189  0032BA  01                 	db	1
   190  0032BB  01                 	db	1
   191  0032BC  01                 	db	1
   192  0032BD  01                 	db	1
   193  0032BE  01                 	db	1
   194  0032BF  01                 	db	1
   195  0032C0  01                 	db	1
   196  0032C1  01                 	db	1
   197                           
   198                           	psect	smallconst
   199  001000                     __psmallconst:
   200                           	opt stack 0
   201  001000  00                 	db	0
   202  001001                     _HEADER_LENGHT:
   203                           	opt stack 0
   204  001001  0B                 	db	11
   205  001002                     __end_of_HEADER_LENGHT:
   206                           	opt stack 0
   207  001002                     _DATA_LENGHT:
   208                           	opt stack 0
   209  001002  05                 	db	5
   210  001003                     __end_of_DATA_LENGHT:
   211                           	opt stack 0
   212  0000                     _ANCON2	set	3875
   213  0000                     _ANCON1	set	3876
   214  0000                     _ANCON0	set	3877
   215  0000                     _REFOCON	set	3882
   216  0000                     _PORTG	set	3974
   217  0000                     _PORTEbits	set	3972
   218  0000                     _PORTE	set	3972
   219  0000                     _PORTAbits	set	3968
   220  0000                     _EECON2	set	3966
   221  0000                     _EECON1bits	set	3967
   222  0000                     _EEDATA	set	3937
   223  0000                     _EEADR	set	3938
   224  0000                     _PIR1bits	set	3998
   225  0000                     _SSP1BUF	set	4041
   226  0000                     _SSP1STATbits	set	4039
   227  0000                     _TRISCbits	set	3988
   228  0000                     _SSP1CON1bits	set	4038
   229  0000                     _PORTFbits	set	3973
   230  0000                     _PORTCbits	set	3970
   231  0000                     _RCONbits	set	4048
   232  0000                     _INTCON2bits	set	4081
   233  0000                     _INTCON3bits	set	4080
   234  0000                     _TRISD	set	3989
   235  0000                     _TRISC	set	3988
   236  0000                     _TRISB	set	3987
   237  0000                     _TRISG	set	3992
   238  0000                     _TRISA	set	3986
   239  0000                     _TRISF	set	3991
   240  0000                     _TRISE	set	3990
   241  0000                     _LATC	set	3979
   242  0000                     _LATG	set	3983
   243  0000                     _LATB	set	3978
   244  0000                     _LATF	set	3982
   245  0000                     _LATA	set	3977
   246  0000                     _LATD	set	3980
   247  0000                     _LATE	set	3981
   248  0000                     _T0CONbits	set	4053
   249  0000                     _T0CON	set	4053
   250  0000                     _INTCONbits	set	4082
   251  0000                     _TMR0L	set	4054
   252  0000                     _TMR0H	set	4055
   253  0000                     _OSCTUNE	set	3995
   254  0000                     _OSCCON2	set	3940
   255  0000                     _OSCCON	set	4051
   256  001003                     STR_1:
   257  001003  20                 	db	32
   258  001004  20                 	db	32
   259  001005  20                 	db	32
   260  001006  20                 	db	32
   261  001007  70                 	db	112	;'p'
   262  001008  68                 	db	104	;'h'
   263  001009  69                 	db	105	;'i'
   264  00100A  6C                 	db	108	;'l'
   265  00100B  62                 	db	98	;'b'
   266  00100C  72                 	db	114	;'r'
   267  00100D  69                 	db	105	;'i'
   268  00100E  63                 	db	99	;'c'
   269  00100F  6B                 	db	107	;'k'
   270  001010  20                 	db	32
   271  001011  20                 	db	32
   272  001012  20                 	db	32
   273  001013  20                 	db	32
   274  001014  20                 	db	32
   275  001015  00                 	db	0
   276  001016                     STR_2:
   277  001016  20                 	db	32
   278  001017  20                 	db	32
   279  001018  54                 	db	84	;'T'
   280  001019  65                 	db	101	;'e'
   281  00101A  63                 	db	99	;'c'
   282  00101B  68                 	db	104	;'h'
   283  00101C  6E                 	db	110	;'n'
   284  00101D  6F                 	db	111	;'o'
   285  00101E  6C                 	db	108	;'l'
   286  00101F  6F                 	db	111	;'o'
   287  001020  67                 	db	103	;'g'
   288  001021  69                 	db	105	;'i'
   289  001022  65                 	db	101	;'e'
   290  001023  73                 	db	115	;'s'
   291  001024  20                 	db	32
   292  001025  20                 	db	32
   293  001026  20                 	db	32
   294  001027  20                 	db	32
   295  001028  00                 	db	0
   296  001029                     STR_8:
   297  001029  54                 	db	84	;'T'
   298  00102A  2E                 	db	46
   299  00102B  4C                 	db	76	;'L'
   300  00102C  74                 	db	116	;'t'
   301  00102D  72                 	db	114	;'r'
   302  00102E  3A                 	db	58	;':'
   303  00102F  20                 	db	32
   304  001030  20                 	db	32
   305  001031  20                 	db	32
   306  001032  20                 	db	32
   307  001033  20                 	db	32
   308  001034  20                 	db	32
   309  001035  20                 	db	32
   310  001036  20                 	db	32
   311  001037  20                 	db	32
   312  001038  20                 	db	32
   313  001039  00                 	db	0
   314  00103A                     STR_7:
   315  00103A  46                 	db	70	;'F'
   316  00103B  2E                 	db	46
   317  00103C  52                 	db	82	;'R'
   318  00103D  61                 	db	97	;'a'
   319  00103E  74                 	db	116	;'t'
   320  00103F  65                 	db	101	;'e'
   321  001040  3A                 	db	58	;':'
   322  001041  20                 	db	32
   323  001042  20                 	db	32
   324  001043  20                 	db	32
   325  001044  20                 	db	32
   326  001045  20                 	db	32
   327  001046  20                 	db	32
   328  001047  20                 	db	32
   329  001048  20                 	db	32
   330  001049  20                 	db	32
   331  00104A  00                 	db	0
   332  00104B                     STR_10:
   333  00104B  20                 	db	32
   334  00104C  20                 	db	32
   335  00104D  20                 	db	32
   336  00104E  20                 	db	32
   337  00104F  20                 	db	32
   338  001050  20                 	db	32
   339  001051  30                 	db	48	;'0'
   340  001052  30                 	db	48	;'0'
   341  001053  30                 	db	48	;'0'
   342  001054  20                 	db	32
   343  001055  20                 	db	32
   344  001056  20                 	db	32
   345  001057  20                 	db	32
   346  001058  20                 	db	32
   347  001059  20                 	db	32
   348  00105A  20                 	db	32
   349  00105B  00                 	db	0
   350  00105C                     STR_5:
   351  00105C  20                 	db	32
   352  00105D  20                 	db	32
   353  00105E  20                 	db	32
   354  00105F  20                 	db	32
   355  001060  47                 	db	71	;'G'
   356  001061  6F                 	db	111	;'o'
   357  001062  20                 	db	32
   358  001063  46                 	db	70	;'F'
   359  001064  6F                 	db	111	;'o'
   360  001065  72                 	db	114	;'r'
   361  001066  20                 	db	32
   362  001067  20                 	db	32
   363  001068  20                 	db	32
   364  001069  20                 	db	32
   365  00106A  20                 	db	32
   366  00106B  20                 	db	32
   367  00106C  00                 	db	0
   368  00106D                     STR_17:
   369  00106D  44                 	db	68	;'D'
   370  00106E  61                 	db	97	;'a'
   371  00106F  74                 	db	116	;'t'
   372  001070  61                 	db	97	;'a'
   373  001071  20                 	db	32
   374  001072  53                 	db	83	;'S'
   375  001073  61                 	db	97	;'a'
   376  001074  76                 	db	118	;'v'
   377  001075  65                 	db	101	;'e'
   378  001076  64                 	db	100	;'d'
   379  001077  2E                 	db	46
   380  001078  2E                 	db	46
   381  001079  2E                 	db	46
   382  00107A  20                 	db	32
   383  00107B  20                 	db	32
   384  00107C  20                 	db	32
   385  00107D  00                 	db	0
   386  00107E                     STR_11:
   387  00107E  57                 	db	87	;'W'
   388  00107F  61                 	db	97	;'a'
   389  001080  6E                 	db	110	;'n'
   390  001081  74                 	db	116	;'t'
   391  001082  20                 	db	32
   392  001083  74                 	db	116	;'t'
   393  001084  6F                 	db	111	;'o'
   394  001085  20                 	db	32
   395  001086  53                 	db	83	;'S'
   396  001087  41                 	db	65	;'A'
   397  001088  56                 	db	86	;'V'
   398  001089  45                 	db	69	;'E'
   399  00108A  3F                 	db	63	;'?'
   400  00108B  20                 	db	32
   401  00108C  20                 	db	32
   402  00108D  20                 	db	32
   403  00108E  00                 	db	0
   404  00108F                     STR_12:
   405  00108F  20                 	db	32
   406  001090  20                 	db	32
   407  001091  3E                 	db	62	;'>'
   408  001092  59                 	db	89	;'Y'
   409  001093  65                 	db	101	;'e'
   410  001094  73                 	db	115	;'s'
   411  001095  20                 	db	32
   412  001096  20                 	db	32
   413  001097  20                 	db	32
   414  001098  20                 	db	32
   415  001099  20                 	db	32
   416  00109A  4E                 	db	78	;'N'
   417  00109B  6F                 	db	111	;'o'
   418  00109C  20                 	db	32
   419  00109D  20                 	db	32
   420  00109E  20                 	db	32
   421  00109F  00                 	db	0
   422  0010A0                     STR_14:
   423  0010A0  20                 	db	32
   424  0010A1  20                 	db	32
   425  0010A2  20                 	db	32
   426  0010A3  59                 	db	89	;'Y'
   427  0010A4  65                 	db	101	;'e'
   428  0010A5  73                 	db	115	;'s'
   429  0010A6  20                 	db	32
   430  0010A7  20                 	db	32
   431  0010A8  20                 	db	32
   432  0010A9  20                 	db	32
   433  0010AA  3E                 	db	62	;'>'
   434  0010AB  4E                 	db	78	;'N'
   435  0010AC  6F                 	db	111	;'o'
   436  0010AD  20                 	db	32
   437  0010AE  20                 	db	32
   438  0010AF  20                 	db	32
   439  0010B0  00                 	db	0
   440  0010B1                     STR_3:
   441  0010B1  20                 	db	32
   442  0010B2  50                 	db	80	;'P'
   443  0010B3  72                 	db	114	;'r'
   444  0010B4  65                 	db	101	;'e'
   445  0010B5  73                 	db	115	;'s'
   446  0010B6  73                 	db	115	;'s'
   447  0010B7  20                 	db	32
   448  0010B8  53                 	db	83	;'S'
   449  0010B9  45                 	db	69	;'E'
   450  0010BA  54                 	db	84	;'T'
   451  0010BB  20                 	db	32
   452  0010BC  4B                 	db	75	;'K'
   453  0010BD  45                 	db	69	;'E'
   454  0010BE  59                 	db	89	;'Y'
   455  0010BF  20                 	db	32
   456  0010C0  20                 	db	32
   457  0010C1  00                 	db	0
   458  0010C2                     STR_9:
   459  0010C2  20                 	db	32
   460  0010C3  20                 	db	32
   461  0010C4  44                 	db	68	;'D'
   462  0010C5  65                 	db	101	;'e'
   463  0010C6  76                 	db	118	;'v'
   464  0010C7  69                 	db	105	;'i'
   465  0010C8  63                 	db	99	;'c'
   466  0010C9  65                 	db	101	;'e'
   467  0010CA  20                 	db	32
   468  0010CB  49                 	db	73	;'I'
   469  0010CC  64                 	db	100	;'d'
   470  0010CD  20                 	db	32
   471  0010CE  49                 	db	73	;'I'
   472  0010CF  73                 	db	115	;'s'
   473  0010D0  20                 	db	32
   474  0010D1  20                 	db	32
   475  0010D2  00                 	db	0
   476  0010D3                     STR_6:
   477  0010D3  20                 	db	32
   478  0010D4  20                 	db	32
   479  0010D5  53                 	db	83	;'S'
   480  0010D6  65                 	db	101	;'e'
   481  0010D7  74                 	db	116	;'t'
   482  0010D8  20                 	db	32
   483  0010D9  44                 	db	68	;'D'
   484  0010DA  65                 	db	101	;'e'
   485  0010DB  76                 	db	118	;'v'
   486  0010DC  69                 	db	105	;'i'
   487  0010DD  63                 	db	99	;'c'
   488  0010DE  65                 	db	101	;'e'
   489  0010DF  20                 	db	32
   490  0010E0  49                 	db	73	;'I'
   491  0010E1  44                 	db	68	;'D'
   492  0010E2  20                 	db	32
   493  0010E3  00                 	db	0
   494  0010E4                     STR_4:
   495  0010E4  54                 	db	84	;'T'
   496  0010E5  6F                 	db	111	;'o'
   497  0010E6  20                 	db	32
   498  0010E7  53                 	db	83	;'S'
   499  0010E8  65                 	db	101	;'e'
   500  0010E9  74                 	db	116	;'t'
   501  0010EA  20                 	db	32
   502  0010EB  44                 	db	68	;'D'
   503  0010EC  45                 	db	69	;'E'
   504  0010ED  56                 	db	86	;'V'
   505  0010EE  49                 	db	73	;'I'
   506  0010EF  43                 	db	67	;'C'
   507  0010F0  45                 	db	69	;'E'
   508  0010F1  20                 	db	32
   509  0010F2  49                 	db	73	;'I'
   510  0010F3  44                 	db	68	;'D'
   511  0010F4  00                 	db	0
   512  0000                     
   513                           ; #config settings
   514  0010F5  00                 	db	0	; dummy byte at the end
   515  0000                     
   516                           	psect	cinit
   517  00289E                     __pcinit:
   518                           	opt stack 0
   519  00289E                     start_initialization:
   520                           	opt stack 0
   521  00289E                     __initialization:
   522                           	opt stack 0
   523                           
   524                           ; Initialize objects allocated to BANK1 (8 bytes)
   525                           ; load TBLPTR registers with __pidataBANK1
   526  00289E  0EBA               	movlw	low __pidataBANK1
   527  0028A0  6EF6               	movwf	tblptrl,c
   528  0028A2  0E32               	movlw	high __pidataBANK1
   529  0028A4  6EF7               	movwf	tblptrh,c
   530  0028A6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   531  0028A8  6EF8               	movwf	tblptru,c
   532  0028AA  EE01  F039         	lfsr	0,__pdataBANK1
   533  0028AE  EE10 F008          	lfsr	1,8
   534  0028B2                     copy_data0:
   535  0028B2  0009               	tblrd		*+
   536  0028B4  CFF5 FFEE          	movff	tablat,postinc0
   537  0028B8  50E5               	movf	postdec1,w,c
   538  0028BA  50E1               	movf	fsr1l,w,c
   539  0028BC  E1FA               	bnz	copy_data0
   540                           
   541                           ; Initialize objects allocated to BANK0 (23 bytes)
   542                           ; load TBLPTR registers with __pidataBANK0
   543  0028BE  0E98               	movlw	low __pidataBANK0
   544  0028C0  6EF6               	movwf	tblptrl,c
   545  0028C2  0E31               	movlw	high __pidataBANK0
   546  0028C4  6EF7               	movwf	tblptrh,c
   547  0028C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   548  0028C8  6EF8               	movwf	tblptru,c
   549  0028CA  EE00  F0E4         	lfsr	0,__pdataBANK0
   550  0028CE  EE10 F017          	lfsr	1,23
   551  0028D2                     copy_data1:
   552  0028D2  0009               	tblrd		*+
   553  0028D4  CFF5 FFEE          	movff	tablat,postinc0
   554  0028D8  50E5               	movf	postdec1,w,c
   555  0028DA  50E1               	movf	fsr1l,w,c
   556  0028DC  E1FA               	bnz	copy_data1
   557                           
   558                           ; Clear objects allocated to BANK1 (39 bytes)
   559  0028DE  EE01  F000         	lfsr	0,__pbssBANK1
   560  0028E2  0E27               	movlw	39
   561  0028E4                     clear_0:
   562  0028E4  6AEE               	clrf	postinc0,c
   563  0028E6  06E8               	decf	wreg,f,c
   564  0028E8  E1FD               	bnz	clear_0
   565                           
   566                           ; Clear objects allocated to BANK0 (91 bytes)
   567  0028EA  EE00  F060         	lfsr	0,__pbssBANK0
   568  0028EE  0E5B               	movlw	91
   569  0028F0                     clear_1:
   570  0028F0  6AEE               	clrf	postinc0,c
   571  0028F2  06E8               	decf	wreg,f,c
   572  0028F4  E1FD               	bnz	clear_1
   573                           
   574                           ; Clear objects allocated to COMRAM (38 bytes)
   575  0028F6  EE00  F001         	lfsr	0,__pbssCOMRAM
   576  0028FA  0E26               	movlw	38
   577  0028FC                     clear_2:
   578  0028FC  6AEE               	clrf	postinc0,c
   579  0028FE  06E8               	decf	wreg,f,c
   580  002900  E1FD               	bnz	clear_2
   581  002902                     end_of_initialization:
   582                           	opt stack 0
   583  002902                     __end_of__initialization:
   584                           	opt stack 0
   585  002902  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   586  002904  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   587  002906  0100               	movlb	0
   588  002908  EF7B  F008         	goto	_main	;jump to C main() function
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           postdec1	equ	0xFE5
   596                           fsr1l	equ	0xFE1
   597                           
   598                           	psect	bssCOMRAM
   599  000001                     __pbssCOMRAM:
   600                           	opt stack 0
   601  000001                     _F_Enter:
   602                           	opt stack 0
   603  000001                     	ds	1
   604  000002                     _F_TimerCounting:
   605                           	opt stack 0
   606  000002                     	ds	1
   607  000003                     _PORTGX:
   608                           	opt stack 0
   609  000003                     	ds	1
   610  000004                     _F_ID_Send:
   611                           	opt stack 0
   612  000004                     	ds	1
   613  000005                     _ID_READ:
   614                           	opt stack 0
   615  000005                     	ds	1
   616  000006                     _Nilp:
   617                           	opt stack 0
   618  000006                     	ds	1
   619  000007                     _address:
   620                           	opt stack 0
   621  000007                     	ds	1
   622  000008                     _VALUE:
   623                           	opt stack 0
   624  000008                     	ds	1
   625  000009                     _value:
   626                           	opt stack 0
   627  000009                     	ds	1
   628  00000A                     _Trick:
   629                           	opt stack 0
   630  00000A                     	ds	1
   631  00000B                     _Tick:
   632                           	opt stack 0
   633  00000B                     	ds	1
   634  00000C                     _TX_ID:
   635                           	opt stack 0
   636  00000C                     	ds	1
   637  00000D                     _T_ID_Send:
   638                           	opt stack 0
   639  00000D                     	ds	1
   640  00000E                     _ID_SET:
   641                           	opt stack 0
   642  00000E                     	ds	1
   643  00000F                     _F_SetID:
   644                           	opt stack 0
   645  00000F                     	ds	1
   646  000010                     _T:
   647                           	opt stack 0
   648  000010                     	ds	1
   649  000011                     _Count_LED:
   650                           	opt stack 0
   651  000011                     	ds	1
   652  000012                     _F_ERROR:
   653                           	opt stack 0
   654  000012                     	ds	1
   655  000013                     _ERROR:
   656                           	opt stack 0
   657  000013                     	ds	1
   658  000014                     _slave_add:
   659                           	opt stack 0
   660  000014                     	ds	1
   661  000015                     _Store:
   662                           	opt stack 0
   663  000015                     	ds	1
   664  000016                     _d:
   665                           	opt stack 0
   666  000016                     	ds	1
   667  000017                     _i:
   668                           	opt stack 0
   669  000017                     	ds	1
   670  000018                     _F_IdSet:
   671                           	opt stack 0
   672  000018                     	ds	1
   673  000019                     _InputRead:
   674                           	opt stack 0
   675  000019                     	ds	1
   676  00001A                     _Portread:
   677                           	opt stack 0
   678  00001A                     	ds	1
   679  00001B                     _F_Input:
   680                           	opt stack 0
   681  00001B                     	ds	1
   682  00001C                     _T_Input:
   683                           	opt stack 0
   684  00001C                     	ds	1
   685  00001D                     _Device_ID:
   686                           	opt stack 0
   687  00001D                     	ds	1
   688  00001E                     _lost_data:
   689                           	opt stack 0
   690  00001E                     	ds	1
   691  00001F                     _RSSI2:
   692                           	opt stack 0
   693  00001F                     	ds	1
   694  000020                     _LQI:
   695                           	opt stack 0
   696  000020                     	ds	1
   697  000021                     _data_r:
   698                           	opt stack 0
   699  000021                     	ds	1
   700  000022                     _DATA:
   701                           	opt stack 0
   702  000022                     	ds	1
   703  000023                     _LENGTH:
   704                           	opt stack 0
   705  000023                     	ds	1
   706  000024                     _Count2:
   707                           	opt stack 0
   708  000024                     	ds	1
   709  000025                     _Count1:
   710                           	opt stack 0
   711  000025                     	ds	1
   712  000026                     _INTTRUPT:
   713                           	opt stack 0
   714  000026                     	ds	1
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	bssBANK0
   725  000060                     __pbssBANK0:
   726                           	opt stack 0
   727  000060                     _Store_DATA:
   728                           	opt stack 0
   729  000060                     	ds	4
   730  000064                     _flowLitres:
   731                           	opt stack 0
   732  000064                     	ds	3
   733  000067                     _totalLitres:
   734                           	opt stack 0
   735  000067                     	ds	3
   736  00006A                     _CheckPassword:
   737                           	opt stack 0
   738  00006A                     	ds	3
   739  00006D                     _INT0_InterruptHandler:
   740                           	opt stack 0
   741  00006D                     	ds	3
   742  000070                     _INT1_InterruptHandler:
   743                           	opt stack 0
   744  000070                     	ds	3
   745  000073                     _TMR0_InterruptHandler:
   746                           	opt stack 0
   747  000073                     	ds	3
   748  000076                     _Pulse:
   749                           	opt stack 0
   750  000076                     	ds	2
   751  000078                     _T_Ltr:
   752                           	opt stack 0
   753  000078                     	ds	2
   754  00007A                     _ltr:
   755                           	opt stack 0
   756  00007A                     	ds	2
   757  00007C                     _Time2:
   758                           	opt stack 0
   759  00007C                     	ds	2
   760  00007E                     _Time:
   761                           	opt stack 0
   762  00007E                     	ds	2
   763  000080                     _Flow_Rate:
   764                           	opt stack 0
   765  000080                     	ds	2
   766  000082                     _flow_frequency:
   767                           	opt stack 0
   768  000082                     	ds	2
   769  000084                     _Num:
   770                           	opt stack 0
   771  000084                     	ds	2
   772  000086                     _ENTERCOUNT:
   773                           	opt stack 0
   774  000086                     	ds	2
   775  000088                     _COUNT:
   776                           	opt stack 0
   777  000088                     	ds	2
   778  00008A                     _Decrement:
   779                           	opt stack 0
   780  00008A                     	ds	2
   781  00008C                     _Increment:
   782                           	opt stack 0
   783  00008C                     	ds	2
   784  00008E                     _ckeck:
   785                           	opt stack 0
   786  00008E                     	ds	2
   787  000090                     _T_ERROR:
   788                           	opt stack 0
   789  000090                     	ds	2
   790  000092                     _CRC:
   791                           	opt stack 0
   792  000092                     	ds	2
   793  000094                     _TX_CRC:
   794                           	opt stack 0
   795  000094                     	ds	2
   796  000096                     _Rv_CRC:
   797                           	opt stack 0
   798  000096                     	ds	2
   799  000098                     _address_TX_normal_FIFO:
   800                           	opt stack 0
   801  000098                     	ds	2
   802  00009A                     TMR0_ISR@CountCallBack:
   803                           	opt stack 0
   804  00009A                     	ds	2
   805  00009C                     _V_Temp:
   806                           	opt stack 0
   807  00009C                     	ds	1
   808  00009D                     _IdByte3:
   809                           	opt stack 0
   810  00009D                     	ds	1
   811  00009E                     _IdByte2:
   812                           	opt stack 0
   813  00009E                     	ds	1
   814  00009F                     _IdByte1:
   815                           	opt stack 0
   816  00009F                     	ds	1
   817  0000A0                     _addr:
   818                           	opt stack 0
   819  0000A0                     	ds	1
   820  0000A1                     _Digit:
   821                           	opt stack 0
   822  0000A1                     	ds	1
   823  0000A2                     _SendId:
   824                           	opt stack 0
   825  0000A2                     	ds	1
   826  0000A3                     _Module_ID:
   827                           	opt stack 0
   828  0000A3                     	ds	1
   829  0000A4                     _Enter:
   830                           	opt stack 0
   831  0000A4                     	ds	1
   832  0000A5                     _F_Success:
   833                           	opt stack 0
   834  0000A5                     	ds	1
   835  0000A6                     _ConfigModeEntered:
   836                           	opt stack 0
   837  0000A6                     	ds	1
   838  0000A7                     _flag:
   839                           	opt stack 0
   840  0000A7                     	ds	1
   841  0000A8                     _Send_Frame_2:
   842                           	opt stack 0
   843  0000A8                     	ds	1
   844  0000A9                     _Send_Frame:
   845                           	opt stack 0
   846  0000A9                     	ds	1
   847  0000AA                     _F_ID_SEND:
   848                           	opt stack 0
   849  0000AA                     	ds	1
   850  0000AB                     _T_BUZZER:
   851                           	opt stack 0
   852  0000AB                     	ds	1
   853  0000AC                     _F_BUZZER:
   854                           	opt stack 0
   855  0000AC                     	ds	1
   856  0000AD                     _ii:
   857                           	opt stack 0
   858  0000AD                     	ds	1
   859  0000AE                     _CHECK:
   860                           	opt stack 0
   861  0000AE                     	ds	1
   862  0000AF                     _timer0ReloadVal:
   863                           	opt stack 0
   864  0000AF                     	ds	1
   865  0000B0                     _DATA_RX:
   866                           	opt stack 0
   867  0000B0                     	ds	5
   868  0000B5                     _DeviceId_arr:
   869                           	opt stack 0
   870  0000B5                     	ds	3
   871  0000B8                     _DATA_TX:
   872                           	opt stack 0
   873  0000B8                     	ds	3
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           	psect	dataBANK0
   884  0000E4                     __pdataBANK0:
   885                           	opt stack 0
   886  0000E4                     _INPUT_DS:
   887                           	opt stack 0
   888  0000E4                     	ds	2
   889  0000E6                     _INPUT_PS:
   890                           	opt stack 0
   891  0000E6                     	ds	2
   892  0000E8                     _PAN_ID_1:
   893                           	opt stack 0
   894  0000E8                     	ds	2
   895  0000EA                     _ADDRESS_short_1:
   896                           	opt stack 0
   897  0000EA                     	ds	2
   898  0000EC                     _address_RX_FIFO:
   899                           	opt stack 0
   900  0000EC                     	ds	2
   901  0000EE                     _SEQ_NUMBER:
   902                           	opt stack 0
   903  0000EE                     	ds	1
   904  0000EF                     _ADDRESS_long_2:
   905                           	opt stack 0
   906  0000EF                     	ds	8
   907  0000F7                     _PAN_ID_2:
   908                           	opt stack 0
   909  0000F7                     	ds	2
   910  0000F9                     _ADDRESS_short_2:
   911                           	opt stack 0
   912  0000F9                     	ds	2
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           postdec1	equ	0xFE5
   920                           fsr1l	equ	0xFE1
   921                           
   922                           	psect	bssBANK1
   923  000100                     __pbssBANK1:
   924                           	opt stack 0
   925  000100                     _data_RX_FIFO:
   926                           	opt stack 0
   927  000100                     	ds	21
   928  000115                     _data_TX_normal_FIFO:
   929                           	opt stack 0
   930  000115                     	ds	18
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           postdec1	equ	0xFE5
   938                           fsr1l	equ	0xFE1
   939                           
   940                           	psect	dataBANK1
   941  000139                     __pdataBANK1:
   942                           	opt stack 0
   943  000139                     _ADDRESS_long_1:
   944                           	opt stack 0
   945  000139                     	ds	8
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postdec1	equ	0xFE5
   953                           fsr1l	equ	0xFE1
   954                           
   955                           	psect	cstackBANK1
   956  000127                     __pcstackBANK1:
   957                           	opt stack 0
   958  000127                     ?_Xor_check:
   959                           	opt stack 0
   960  000127                     ?___awdiv:
   961                           	opt stack 0
   962  000127                     ?___awmod:
   963                           	opt stack 0
   964  000127                     ?___lwdiv:
   965                           	opt stack 0
   966  000127                     ?___lwmod:
   967                           	opt stack 0
   968  000127                     ?___fttol:
   969                           	opt stack 0
   970  000127                     SPI_Write@response:
   971                           	opt stack 0
   972  000127                     SPI_Read@TempVar:
   973                           	opt stack 0
   974  000127                     delay@dly:
   975                           	opt stack 0
   976  000127                     Delay_ms@time:
   977                           	opt stack 0
   978  000127                     Delayms@time:
   979                           	opt stack 0
   980  000127                     Delayms1@time:
   981                           	opt stack 0
   982  000127                     Xor_check@data_value:
   983                           	opt stack 0
   984  000127                     Write_b_eep2@badd:
   985                           	opt stack 0
   986  000127                     Read_b_eep2@badd:
   987                           	opt stack 0
   988  000127                     ___awdiv@dividend:
   989                           	opt stack 0
   990  000127                     ___awmod@dividend:
   991                           	opt stack 0
   992  000127                     ___lwdiv@dividend:
   993                           	opt stack 0
   994  000127                     ___lwmod@dividend:
   995                           	opt stack 0
   996  000127                     TMR0_SetInterruptHandler@InterruptHandler:
   997                           	opt stack 0
   998  000127                     INT1_SetInterruptHandler@InterruptHandler:
   999                           	opt stack 0
  1000  000127                     INT0_SetInterruptHandler@InterruptHandler:
  1001                           	opt stack 0
  1002  000127                     ___fttol@f1:
  1003                           	opt stack 0
  1004                           
  1005                           ; 3 bytes @ 0x0
  1006  000127                     	ds	1
  1007  000128                     SPI_Write@command:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x1
  1011  000128                     	ds	1
  1012  000129                     write_ZIGBEE_short@data_r:
  1013                           	opt stack 0
  1014  000129                     read_ZIGBEE_short@data_r:
  1015                           	opt stack 0
  1016  000129                     Xor_check@length:
  1017                           	opt stack 0
  1018  000129                     Write_b_eep2@data:
  1019                           	opt stack 0
  1020  000129                     write_ZIGBEE_long@address:
  1021                           	opt stack 0
  1022  000129                     delay@l:
  1023                           	opt stack 0
  1024  000129                     Delay_ms@y:
  1025                           	opt stack 0
  1026  000129                     Delayms@k:
  1027                           	opt stack 0
  1028  000129                     Delayms1@i:
  1029                           	opt stack 0
  1030  000129                     ___awdiv@divisor:
  1031                           	opt stack 0
  1032  000129                     ___awmod@divisor:
  1033                           	opt stack 0
  1034  000129                     ___lwdiv@divisor:
  1035                           	opt stack 0
  1036  000129                     ___lwmod@divisor:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  000129                     	ds	1
  1041  00012A                     ??_Xor_check:
  1042  00012A                     write_ZIGBEE_short@address:
  1043                           	opt stack 0
  1044  00012A                     read_ZIGBEE_short@address:
  1045                           	opt stack 0
  1046  00012A                     Write_b_eep2@GIE_BIT_VAL:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0x3
  1050  00012A                     	ds	1
  1051  00012B                     ??___fttol:
  1052  00012B                     set_CCA_mode@CCA_mode:
  1053                           	opt stack 0
  1054  00012B                     set_RSSI_mode@RSSI_mode:
  1055                           	opt stack 0
  1056  00012B                     nonbeacon_PAN_coordinator_device@temp:
  1057                           	opt stack 0
  1058  00012B                     set_frame_format_filter@fff_mode:
  1059                           	opt stack 0
  1060  00012B                     set_reception_mode@r_mode:
  1061                           	opt stack 0
  1062  00012B                     set_not_ACK@temp:
  1063                           	opt stack 0
  1064  00012B                     set_not_encrypt@temp:
  1065                           	opt stack 0
  1066  00012B                     write_ZIGBEE_long@data_r:
  1067                           	opt stack 0
  1068  00012B                     ___awdiv@counter:
  1069                           	opt stack 0
  1070  00012B                     ___awmod@counter:
  1071                           	opt stack 0
  1072  00012B                     ___lwdiv@counter:
  1073                           	opt stack 0
  1074  00012B                     ___lwmod@counter:
  1075                           	opt stack 0
  1076  00012B                     set_long_address@address:
  1077                           	opt stack 0
  1078  00012B                     set_short_address@address:
  1079                           	opt stack 0
  1080  00012B                     set_PAN_ID@address:
  1081                           	opt stack 0
  1082  00012B                     Delayms@l:
  1083                           	opt stack 0
  1084  00012B                     Delayms1@j:
  1085                           	opt stack 0
  1086  00012B                     Xor_check@xor_value:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x4
  1090  00012B                     	ds	1
  1091  00012C                     ??_write_ZIGBEE_long:
  1092  00012C                     set_CCA_mode@temp:
  1093                           	opt stack 0
  1094  00012C                     set_RSSI_mode@temp:
  1095                           	opt stack 0
  1096  00012C                     set_frame_format_filter@temp:
  1097                           	opt stack 0
  1098  00012C                     set_reception_mode@temp:
  1099                           	opt stack 0
  1100  00012C                     ___awdiv@sign:
  1101                           	opt stack 0
  1102  00012C                     ___awmod@sign:
  1103                           	opt stack 0
  1104  00012C                     ___lwdiv@quotient:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x5
  1108  00012C                     	ds	1
  1109  00012D                     set_long_address@i:
  1110                           	opt stack 0
  1111  00012D                     LcdData@value:
  1112                           	opt stack 0
  1113  00012D                     LcdCmd@value:
  1114                           	opt stack 0
  1115  00012D                     Xor_check@xor:
  1116                           	opt stack 0
  1117  00012D                     ___awdiv@quotient:
  1118                           	opt stack 0
  1119                           
  1120                           ; 2 bytes @ 0x6
  1121  00012D                     	ds	1
  1122  00012E                     write_ZIGBEE_long@address_high:
  1123                           	opt stack 0
  1124  00012E                     LcdDisplay@string:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x7
  1128  00012E                     	ds	1
  1129  00012F                     write_ZIGBEE_long@address_low:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x8
  1133  00012F                     	ds	1
  1134  000130                     ??_set_TX_power:
  1135  000130                     ??_write_TX_normal_FIFO:
  1136  000130                     set_channel@channel_number:
  1137                           	opt stack 0
  1138  000130                     LcdDisplay@LINE:
  1139                           	opt stack 0
  1140  000130                     ___fttol@sign1:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x9
  1144  000130                     	ds	1
  1145  000131                     ??_Set_DeviceId:
  1146  000131                     set_TX_power@power:
  1147                           	opt stack 0
  1148  000131                     ___fttol@lval:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0xA
  1152  000131                     	ds	2
  1153  000133                     Set_DeviceId@ID1:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0xC
  1157  000133                     	ds	2
  1158  000135                     write_TX_normal_FIFO@n:
  1159                           	opt stack 0
  1160  000135                     Set_DeviceId@fail:
  1161                           	opt stack 0
  1162  000135                     ___fttol@exp1:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0xE
  1166  000135                     	ds	1
  1167  000136                     write_TX_normal_FIFO@i:
  1168                           	opt stack 0
  1169  000136                     Set_DeviceId@j:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0xF
  1173  000136                     	ds	1
  1174  000137                     Set_DeviceId@n:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x10
  1178  000137                     	ds	1
  1179  000138                     Set_DeviceId@i:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x11
  1183  000138                     	ds	1
  1184  000139                     tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           ; 1 bytes @ 0x12
  1194                           
  1195                           	psect	cstackBANK0
  1196  0000BB                     __pcstackBANK0:
  1197                           	opt stack 0
  1198  0000BB                     ?___wmul:
  1199                           	opt stack 0
  1200  0000BB                     ?___ftpack:
  1201                           	opt stack 0
  1202  0000BB                     ScanInput@portread:
  1203                           	opt stack 0
  1204  0000BB                     ___wmul@multiplier:
  1205                           	opt stack 0
  1206  0000BB                     ___ftpack@arg:
  1207                           	opt stack 0
  1208                           
  1209                           ; 3 bytes @ 0x0
  1210  0000BB                     	ds	1
  1211  0000BC                     ScanInput@temp:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x1
  1215  0000BC                     	ds	1
  1216  0000BD                     ScanInput@x:
  1217                           	opt stack 0
  1218  0000BD                     ___wmul@multiplicand:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0x2
  1222  0000BD                     	ds	1
  1223  0000BE                     ___ftpack@exp:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x3
  1227  0000BE                     	ds	1
  1228  0000BF                     ___ftpack@sign:
  1229                           	opt stack 0
  1230  0000BF                     ___wmul@product:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x4
  1234  0000BF                     	ds	1
  1235  0000C0                     ??___ftpack:
  1236                           
  1237                           ; 1 bytes @ 0x5
  1238  0000C0                     	ds	1
  1239  0000C1                     ?i1___lwdiv:
  1240                           	opt stack 0
  1241  0000C1                     i1___lwdiv@dividend:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x6
  1245  0000C1                     	ds	2
  1246  0000C3                     ?___ftadd:
  1247                           	opt stack 0
  1248  0000C3                     i1___lwdiv@divisor:
  1249                           	opt stack 0
  1250  0000C3                     ___ftadd@f1:
  1251                           	opt stack 0
  1252                           
  1253                           ; 3 bytes @ 0x8
  1254  0000C3                     	ds	2
  1255  0000C5                     i1___lwdiv@counter:
  1256                           	opt stack 0
  1257                           
  1258                           ; 1 bytes @ 0xA
  1259  0000C5                     	ds	1
  1260  0000C6                     i1___lwdiv@quotient:
  1261                           	opt stack 0
  1262  0000C6                     ___ftadd@f2:
  1263                           	opt stack 0
  1264                           
  1265                           ; 3 bytes @ 0xB
  1266  0000C6                     	ds	2
  1267  0000C8                     ?___lwtoft:
  1268                           	opt stack 0
  1269  0000C8                     ___lwtoft@c:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0xD
  1273  0000C8                     	ds	1
  1274  0000C9                     ??___ftadd:
  1275                           
  1276                           ; 1 bytes @ 0xE
  1277  0000C9                     	ds	2
  1278  0000CB                     
  1279                           ; 1 bytes @ 0x10
  1280  0000CB                     	ds	1
  1281  0000CC                     ___ftadd@sign:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x11
  1285  0000CC                     	ds	1
  1286  0000CD                     ___ftadd@exp2:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x12
  1290  0000CD                     	ds	1
  1291  0000CE                     ___ftadd@exp1:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x13
  1295  0000CE                     	ds	1
  1296  0000CF                     ??_INTERRUPT_InterruptManagerLow:
  1297                           
  1298                           ; 1 bytes @ 0x14
  1299  0000CF                     	ds	21
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1l	equ	0xFE1
  1308                           
  1309                           	psect	cstackCOMRAM
  1310  000027                     __pcstackCOMRAM:
  1311                           	opt stack 0
  1312  000027                     ?i2_Xor_check:
  1313                           	opt stack 0
  1314  000027                     i2SPI_Write@response:
  1315                           	opt stack 0
  1316  000027                     i2SPI_Read@TempVar:
  1317                           	opt stack 0
  1318  000027                     i2Xor_check@data_value:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x0
  1322  000027                     	ds	1
  1323  000028                     i2SPI_Write@command:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0x1
  1327  000028                     	ds	1
  1328  000029                     i2write_ZIGBEE_short@data_r:
  1329                           	opt stack 0
  1330  000029                     i2read_ZIGBEE_short@address:
  1331                           	opt stack 0
  1332  000029                     i2Xor_check@length:
  1333                           	opt stack 0
  1334  000029                     read_ZIGBEE_long@address:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x2
  1338  000029                     	ds	1
  1339  00002A                     ??i2_Xor_check:
  1340  00002A                     i2write_ZIGBEE_short@address:
  1341                           	opt stack 0
  1342  00002A                     i2read_ZIGBEE_short@data_r:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x3
  1346  00002A                     	ds	1
  1347  00002B                     ??_read_ZIGBEE_long:
  1348  00002B                     i2Xor_check@xor_value:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x4
  1352  00002B                     	ds	2
  1353  00002D                     read_ZIGBEE_long@data_r:
  1354                           	opt stack 0
  1355  00002D                     i2Xor_check@xor:
  1356                           	opt stack 0
  1357                           
  1358                           ; 2 bytes @ 0x6
  1359  00002D                     	ds	1
  1360  00002E                     read_ZIGBEE_long@address_high:
  1361                           	opt stack 0
  1362                           
  1363                           ; 1 bytes @ 0x7
  1364  00002E                     	ds	1
  1365  00002F                     read_ZIGBEE_long@address_low:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x8
  1369  00002F                     	ds	1
  1370  000030                     ??_read_RX_FIFO:
  1371                           
  1372                           ; 1 bytes @ 0x9
  1373  000030                     	ds	5
  1374  000035                     read_RX_FIFO@temp:
  1375                           	opt stack 0
  1376                           
  1377                           ; 1 bytes @ 0xE
  1378  000035                     	ds	1
  1379  000036                     read_RX_FIFO@i:
  1380                           	opt stack 0
  1381                           
  1382                           ; 1 bytes @ 0xF
  1383  000036                     	ds	1
  1384  000037                     ??_INTERRUPT_InterruptManagerHigh:
  1385                           
  1386                           ; 1 bytes @ 0x10
  1387  000037                     	ds	20
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           
  1397 ;;
  1398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1399 ;;
  1400 ;; *************** function _main *****************
  1401 ;; Defined at:
  1402 ;;		line 189 in file "13_April_WaterMeter_Main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels required when called:   13
  1422 ;; This function calls:
  1423 ;;		_Delay_ms
  1424 ;;		_Delayms
  1425 ;;		_InitSPI
  1426 ;;		_LcdCmd
  1427 ;;		_LcdData
  1428 ;;		_LcdDisplay
  1429 ;;		_LcdInit
  1430 ;;		_RF_reset
  1431 ;;		_Read_b_eep2
  1432 ;;		_SYSTEM_Initialize
  1433 ;;		_Set_DeviceId
  1434 ;;		___awdiv
  1435 ;;		___awmod
  1436 ;;		___fttol
  1437 ;;		___lwdiv
  1438 ;;		___lwmod
  1439 ;;		_init_ZIGBEE_nonbeacon
  1440 ;;		_lcd_clear
  1441 ;;		_lcd_off_cursor
  1442 ;;		_nonbeacon_PAN_coordinator_device
  1443 ;;		_pin_reset
  1444 ;;		_pin_wake
  1445 ;;		_set_PAN_ID
  1446 ;;		_set_TX_power
  1447 ;;		_set_WAKE_from_pin
  1448 ;;		_set_frame_format_filter
  1449 ;;		_set_long_address
  1450 ;;		_set_reception_mode
  1451 ;;		_set_short_address
  1452 ;;		_write_TX_normal_FIFO
  1453 ;; This function is called by:
  1454 ;;		Startup code after reset
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text0
  1459  0010F6                     __ptext0:
  1460                           	opt stack 0
  1461  0010F6                     _main:
  1462                           	opt stack 18
  1463                           
  1464                           ;13_April_WaterMeter_Main.c: 191: Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_ms(500
      +                          );Delay_ms(500);
  1465                           
  1466                           ;incstack = 0
  1467  0010F6  0E01               	movlw	1
  1468  0010F8  0101               	movlb	1	; () banked
  1469  0010FA  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1470  0010FC  0EF4               	movlw	244
  1471  0010FE  6F27               	movwf	Delay_ms@time& (0+255),b
  1472  001100  ECBE  F018         	call	_Delay_ms	;wreg free
  1473  001104  0E01               	movlw	1
  1474  001106  0101               	movlb	1	; () banked
  1475  001108  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1476  00110A  0EF4               	movlw	244
  1477  00110C  6F27               	movwf	Delay_ms@time& (0+255),b
  1478  00110E  ECBE  F018         	call	_Delay_ms	;wreg free
  1479  001112  0E01               	movlw	1
  1480  001114  0101               	movlb	1	; () banked
  1481  001116  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1482  001118  0EF4               	movlw	244
  1483  00111A  6F27               	movwf	Delay_ms@time& (0+255),b
  1484  00111C  ECBE  F018         	call	_Delay_ms	;wreg free
  1485  001120  0E01               	movlw	1
  1486  001122  0101               	movlb	1	; () banked
  1487  001124  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1488  001126  0EF4               	movlw	244
  1489  001128  6F27               	movwf	Delay_ms@time& (0+255),b
  1490  00112A  ECBE  F018         	call	_Delay_ms	;wreg free
  1491  00112E  0E01               	movlw	1
  1492  001130  0101               	movlb	1	; () banked
  1493  001132  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1494  001134  0EF4               	movlw	244
  1495  001136  6F27               	movwf	Delay_ms@time& (0+255),b
  1496  001138  ECBE  F018         	call	_Delay_ms	;wreg free
  1497                           
  1498                           ;13_April_WaterMeter_Main.c: 193: SYSTEM_Initialize();
  1499  00113C  ECEE  F018         	call	_SYSTEM_Initialize	;wreg free
  1500                           
  1501                           ;13_April_WaterMeter_Main.c: 194: (INTCONbits.GIEH = 1);
  1502  001140  8EF2               	bsf	intcon,7,c	;volatile
  1503                           
  1504                           ;13_April_WaterMeter_Main.c: 195: (INTCONbits.GIEL = 1);
  1505  001142  8CF2               	bsf	intcon,6,c	;volatile
  1506                           
  1507                           ;13_April_WaterMeter_Main.c: 196: (INTCONbits.PEIE = 1);
  1508  001144  8CF2               	bsf	intcon,6,c	;volatile
  1509                           
  1510                           ;13_April_WaterMeter_Main.c: 197: Delay_ms(100);
  1511  001146  0E00               	movlw	0
  1512  001148  0101               	movlb	1	; () banked
  1513  00114A  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1514  00114C  0E64               	movlw	100
  1515  00114E  6F27               	movwf	Delay_ms@time& (0+255),b
  1516  001150  ECBE  F018         	call	_Delay_ms	;wreg free
  1517                           
  1518                           ;13_April_WaterMeter_Main.c: 198: LcdInit();
  1519  001154  EC35  F015         	call	_LcdInit	;wreg free
  1520                           
  1521                           ;13_April_WaterMeter_Main.c: 199: Delay_ms(10);
  1522  001158  0E00               	movlw	0
  1523  00115A  0101               	movlb	1	; () banked
  1524  00115C  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1525  00115E  0E0A               	movlw	10
  1526  001160  6F27               	movwf	Delay_ms@time& (0+255),b
  1527  001162  ECBE  F018         	call	_Delay_ms	;wreg free
  1528                           
  1529                           ;13_April_WaterMeter_Main.c: 200: lcd_off_cursor();
  1530  001166  EC61  F019         	call	_lcd_off_cursor	;wreg free
  1531                           
  1532                           ;13_April_WaterMeter_Main.c: 201: lcd_clear();
  1533  00116A  EC65  F019         	call	_lcd_clear	;wreg free
  1534                           
  1535                           ;13_April_WaterMeter_Main.c: 202: LcdDisplay(0x80,"    philbrick     ");
  1536  00116E  0E03               	movlw	low STR_1
  1537  001170  0101               	movlb	1	; () banked
  1538  001172  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1539  001174  0E10               	movlw	high STR_1
  1540  001176  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1541  001178  0E80               	movlw	128
  1542  00117A  EC52  F016         	call	_LcdDisplay
  1543                           
  1544                           ;13_April_WaterMeter_Main.c: 203: LcdDisplay(0xC0,"  Technologies    ");
  1545  00117E  0E16               	movlw	low STR_2
  1546  001180  0101               	movlb	1	; () banked
  1547  001182  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1548  001184  0E10               	movlw	high STR_2
  1549  001186  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1550  001188  0EC0               	movlw	192
  1551  00118A  EC52  F016         	call	_LcdDisplay
  1552                           
  1553                           ;13_April_WaterMeter_Main.c: 204: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  1554  00118E  0E01               	movlw	1
  1555  001190  0101               	movlb	1	; () banked
  1556  001192  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1557  001194  0E2C               	movlw	44
  1558  001196  6F27               	movwf	Delayms@time& (0+255),b
  1559  001198  EC72  F016         	call	_Delayms	;wreg free
  1560  00119C  0E01               	movlw	1
  1561  00119E  0101               	movlb	1	; () banked
  1562  0011A0  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1563  0011A2  0E2C               	movlw	44
  1564  0011A4  6F27               	movwf	Delayms@time& (0+255),b
  1565  0011A6  EC72  F016         	call	_Delayms	;wreg free
  1566  0011AA  0E01               	movlw	1
  1567  0011AC  0101               	movlb	1	; () banked
  1568  0011AE  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1569  0011B0  0E2C               	movlw	44
  1570  0011B2  6F27               	movwf	Delayms@time& (0+255),b
  1571  0011B4  EC72  F016         	call	_Delayms	;wreg free
  1572  0011B8  0E01               	movlw	1
  1573  0011BA  0101               	movlb	1	; () banked
  1574  0011BC  6F28               	movwf	(Delayms@time+1)& (0+255),b
  1575  0011BE  0E2C               	movlw	44
  1576  0011C0  6F27               	movwf	Delayms@time& (0+255),b
  1577  0011C2  EC72  F016         	call	_Delayms	;wreg free
  1578                           
  1579                           ;13_April_WaterMeter_Main.c: 205: Delay_ms(10);
  1580  0011C6  0E00               	movlw	0
  1581  0011C8  0101               	movlb	1	; () banked
  1582  0011CA  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1583  0011CC  0E0A               	movlw	10
  1584  0011CE  6F27               	movwf	Delay_ms@time& (0+255),b
  1585  0011D0  ECBE  F018         	call	_Delay_ms	;wreg free
  1586                           
  1587                           ;13_April_WaterMeter_Main.c: 206: InitSPI();
  1588  0011D4  EC08  F018         	call	_InitSPI	;wreg free
  1589                           
  1590                           ;13_April_WaterMeter_Main.c: 207: Delay_ms(10);
  1591  0011D8  0E00               	movlw	0
  1592  0011DA  0101               	movlb	1	; () banked
  1593  0011DC  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1594  0011DE  0E0A               	movlw	10
  1595  0011E0  6F27               	movwf	Delay_ms@time& (0+255),b
  1596  0011E2  ECBE  F018         	call	_Delay_ms	;wreg free
  1597                           
  1598                           ;13_April_WaterMeter_Main.c: 208: pin_reset();
  1599  0011E6  EC50  F018         	call	_pin_reset	;wreg free
  1600                           
  1601                           ;13_April_WaterMeter_Main.c: 209: RF_reset();
  1602  0011EA  EC95  F017         	call	_RF_reset	;wreg free
  1603                           
  1604                           ;13_April_WaterMeter_Main.c: 210: set_WAKE_from_pin();
  1605  0011EE  ECB0  F018         	call	_set_WAKE_from_pin	;wreg free
  1606                           
  1607                           ;13_April_WaterMeter_Main.c: 212: set_long_address(ADDRESS_long_2);
  1608  0011F2  0EEF               	movlw	low _ADDRESS_long_2
  1609  0011F4  0101               	movlb	1	; () banked
  1610  0011F6  6F2B               	movwf	set_long_address@address& (0+255),b
  1611  0011F8  0E00               	movlw	high _ADDRESS_long_2
  1612  0011FA  6F2C               	movwf	(set_long_address@address+1)& (0+255),b
  1613  0011FC  EC0B  F017         	call	_set_long_address	;wreg free
  1614                           
  1615                           ;13_April_WaterMeter_Main.c: 213: set_short_address(ADDRESS_short_2);
  1616  001200  0EF9               	movlw	low _ADDRESS_short_2
  1617  001202  0101               	movlb	1	; () banked
  1618  001204  6F2B               	movwf	set_short_address@address& (0+255),b
  1619  001206  0E00               	movlw	high _ADDRESS_short_2
  1620  001208  6F2C               	movwf	(set_short_address@address+1)& (0+255),b
  1621  00120A  EC3E  F017         	call	_set_short_address	;wreg free
  1622                           
  1623                           ;13_April_WaterMeter_Main.c: 214: set_PAN_ID(PAN_ID_2);
  1624  00120E  0EF7               	movlw	low _PAN_ID_2
  1625  001210  0101               	movlb	1	; () banked
  1626  001212  6F2B               	movwf	set_PAN_ID@address& (0+255),b
  1627  001214  0E00               	movlw	high _PAN_ID_2
  1628  001216  6F2C               	movwf	(set_PAN_ID@address+1)& (0+255),b
  1629  001218  EC55  F017         	call	_set_PAN_ID	;wreg free
  1630                           
  1631                           ;13_April_WaterMeter_Main.c: 216: init_ZIGBEE_nonbeacon();
  1632  00121C  ECE4  F017         	call	_init_ZIGBEE_nonbeacon	;wreg free
  1633                           
  1634                           ;13_April_WaterMeter_Main.c: 218: nonbeacon_PAN_coordinator_device();
  1635  001220  ECB2  F016         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  1636                           
  1637                           ;13_April_WaterMeter_Main.c: 219: set_TX_power(31);
  1638  001224  0E1F               	movlw	31
  1639  001226  EC10  F016         	call	_set_TX_power
  1640                           
  1641                           ;13_April_WaterMeter_Main.c: 220: set_frame_format_filter(1);
  1642  00122A  0E01               	movlw	1
  1643  00122C  EC52  F013         	call	_set_frame_format_filter
  1644                           
  1645                           ;13_April_WaterMeter_Main.c: 221: set_reception_mode(1);
  1646  001230  0E01               	movlw	1
  1647  001232  EC17  F014         	call	_set_reception_mode
  1648                           
  1649                           ;13_April_WaterMeter_Main.c: 222: pin_wake();
  1650  001236  EC16  F019         	call	_pin_wake	;wreg free
  1651                           
  1652                           ;13_April_WaterMeter_Main.c: 223: LcdDisplay(0x80," Press SET KEY  ");
  1653  00123A  0EB1               	movlw	low STR_3
  1654  00123C  0101               	movlb	1	; () banked
  1655  00123E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1656  001240  0E10               	movlw	high STR_3
  1657  001242  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1658  001244  0E80               	movlw	128
  1659  001246  EC52  F016         	call	_LcdDisplay
  1660                           
  1661                           ;13_April_WaterMeter_Main.c: 224: LcdDisplay(0xC0,"To Set DEVICE ID");
  1662  00124A  0EE4               	movlw	low STR_4
  1663  00124C  0101               	movlb	1	; () banked
  1664  00124E  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1665  001250  0E10               	movlw	high STR_4
  1666  001252  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1667  001254  0EC0               	movlw	192
  1668  001256  EC52  F016         	call	_LcdDisplay
  1669                           
  1670                           ;13_April_WaterMeter_Main.c: 225: Delay_ms(500);
  1671  00125A  0E01               	movlw	1
  1672  00125C  0101               	movlb	1	; () banked
  1673  00125E  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1674  001260  0EF4               	movlw	244
  1675  001262  6F27               	movwf	Delay_ms@time& (0+255),b
  1676  001264  ECBE  F018         	call	_Delay_ms	;wreg free
  1677                           
  1678                           ;13_April_WaterMeter_Main.c: 226: lcd_clear();
  1679  001268  EC65  F019         	call	_lcd_clear	;wreg free
  1680                           
  1681                           ;13_April_WaterMeter_Main.c: 227: SendId=Read_b_eep2(0x02);
  1682  00126C  0E00               	movlw	0
  1683  00126E  0101               	movlb	1	; () banked
  1684  001270  6F28               	movwf	(Read_b_eep2@badd+1)& (0+255),b
  1685  001272  0E02               	movlw	2
  1686  001274  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  1687  001276  EC28  F019         	call	_Read_b_eep2	;wreg free
  1688  00127A  0100               	movlb	0	; () banked
  1689  00127C  6FA2               	movwf	_SendId& (0+255),b
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;13_April_WaterMeter_Main.c: 228: if(SendId == 0xFF){
  1693  00127E  29A2               	incf	_SendId& (0+255),w,b
  1694  001280  A4D8               	btfss	status,2,c
  1695  001282  D002               	goto	l893
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;13_April_WaterMeter_Main.c: 229: SendId=0;
  1699  001284  0E00               	movlw	0
  1700  001286  6FA2               	movwf	_SendId& (0+255),b
  1701  001288                     l893:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;13_April_WaterMeter_Main.c: 232: F_Enter=1;
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;13_April_WaterMeter_Main.c: 230: }
  1708                           ;13_April_WaterMeter_Main.c: 231: do{
  1709  001288  0E01               	movlw	1
  1710  00128A  6E01               	movwf	_F_Enter,c
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;13_April_WaterMeter_Main.c: 233: LcdDisplay(0x80,"    Go For      ");
  1714  00128C  0E5C               	movlw	low STR_5
  1715  00128E  0101               	movlb	1	; () banked
  1716  001290  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1717  001292  0E10               	movlw	high STR_5
  1718  001294  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1719  001296  0E80               	movlw	128
  1720  001298  EC52  F016         	call	_LcdDisplay
  1721                           
  1722                           ;13_April_WaterMeter_Main.c: 234: LcdDisplay(0xC0,"  Set Device ID ");
  1723  00129C  0ED3               	movlw	low STR_6
  1724  00129E  0101               	movlb	1	; () banked
  1725  0012A0  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1726  0012A2  0E10               	movlw	high STR_6
  1727  0012A4  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1728  0012A6  0EC0               	movlw	192
  1729  0012A8  EC52  F016         	call	_LcdDisplay
  1730                           
  1731                           ;13_April_WaterMeter_Main.c: 235: if(flag==1){
  1732  0012AC  0100               	movlb	0	; () banked
  1733  0012AE  05A7               	decf	_flag& (0+255),w,b
  1734  0012B0  A4D8               	btfss	status,2,c
  1735  0012B2  D007               	goto	l895
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;13_April_WaterMeter_Main.c: 236: F_Enter=0;
  1739  0012B4  0E00               	movlw	0
  1740  0012B6  6E01               	movwf	_F_Enter,c
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;13_April_WaterMeter_Main.c: 237: Set_DeviceId();
  1744  0012B8  EC54  F00B         	call	_Set_DeviceId	;wreg free
  1745                           
  1746                           ;13_April_WaterMeter_Main.c: 238: Enter=1;
  1747  0012BC  0E01               	movlw	1
  1748  0012BE  0100               	movlb	0	; () banked
  1749  0012C0  6FA4               	movwf	_Enter& (0+255),b
  1750  0012C2                     l895:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;13_April_WaterMeter_Main.c: 239: }
  1754                           ;13_April_WaterMeter_Main.c: 240: COUNT++;
  1755                           
  1756                           ; BSR set to: 0
  1757  0012C2  4B88               	infsnz	_COUNT& (0+255),f,b
  1758  0012C4  2B89               	incf	(_COUNT+1)& (0+255),f,b
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;13_April_WaterMeter_Main.c: 241: }while((COUNT<20)&&(Enter==0));
  1762  0012C6  5189               	movf	(_COUNT+1)& (0+255),w,b
  1763  0012C8  E107               	bnz	l5895
  1764  0012CA  0E14               	movlw	20
  1765  0012CC  5D88               	subwf	_COUNT& (0+255),w,b
  1766  0012CE  B0D8               	btfsc	status,0,c
  1767  0012D0  D003               	goto	u4870
  1768                           
  1769                           ; BSR set to: 0
  1770  0012D2  51A4               	movf	_Enter& (0+255),w,b
  1771  0012D4  B4D8               	btfsc	status,2,c
  1772  0012D6  D7D8               	goto	l893
  1773  0012D8                     u4870:
  1774  0012D8                     l5895:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;13_April_WaterMeter_Main.c: 242: F_TimerCounting=0;
  1778  0012D8  0E00               	movlw	0
  1779  0012DA  6E02               	movwf	_F_TimerCounting,c
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;13_April_WaterMeter_Main.c: 243: lcd_clear();
  1783  0012DC  EC65  F019         	call	_lcd_clear	;wreg free
  1784                           
  1785                           ;13_April_WaterMeter_Main.c: 244: F_Enter=0;
  1786  0012E0  0E00               	movlw	0
  1787  0012E2  6E01               	movwf	_F_Enter,c
  1788                           
  1789                           ;13_April_WaterMeter_Main.c: 245: Increment=0;
  1790  0012E4  0E00               	movlw	0
  1791  0012E6  0100               	movlb	0	; () banked
  1792  0012E8  6F8D               	movwf	(_Increment+1)& (0+255),b
  1793  0012EA  0E00               	movlw	0
  1794  0012EC  6F8C               	movwf	_Increment& (0+255),b
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;13_April_WaterMeter_Main.c: 246: Decrement=0;
  1798  0012EE  0E00               	movlw	0
  1799  0012F0  6F8B               	movwf	(_Decrement+1)& (0+255),b
  1800  0012F2  0E00               	movlw	0
  1801  0012F4  6F8A               	movwf	_Decrement& (0+255),b
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;13_April_WaterMeter_Main.c: 247: Enter=0;
  1805  0012F6  0E00               	movlw	0
  1806  0012F8  6FA4               	movwf	_Enter& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;13_April_WaterMeter_Main.c: 248: LcdCmd(0x0C);
  1810  0012FA  0E0C               	movlw	12
  1811  0012FC  EC82  F018         	call	_LcdCmd
  1812                           
  1813                           ;13_April_WaterMeter_Main.c: 249: F_TimerCounting=1;
  1814  001300  0E01               	movlw	1
  1815  001302  6E02               	movwf	_F_TimerCounting,c
  1816                           
  1817                           ;13_April_WaterMeter_Main.c: 250: LcdDisplay(0x80,"F.Rate:         ");
  1818  001304  0E3A               	movlw	low STR_7
  1819  001306  0101               	movlb	1	; () banked
  1820  001308  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1821  00130A  0E10               	movlw	high STR_7
  1822  00130C  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1823  00130E  0E80               	movlw	128
  1824  001310  EC52  F016         	call	_LcdDisplay
  1825                           
  1826                           ;13_April_WaterMeter_Main.c: 251: LcdDisplay(0xC0,"T.Ltr:          ");
  1827  001314  0E29               	movlw	low STR_8
  1828  001316  0101               	movlb	1	; () banked
  1829  001318  6F2E               	movwf	LcdDisplay@string& (0+255),b
  1830  00131A  0E10               	movlw	high STR_8
  1831  00131C  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  1832  00131E  0EC0               	movlw	192
  1833  001320  EC52  F016         	call	_LcdDisplay
  1834  001324                     
  1835                           ;13_April_WaterMeter_Main.c: 253: {
  1836                           ;13_April_WaterMeter_Main.c: 255: if((CRC==Rv_CRC) && (DATA_RX[0]=='!')){
  1837  001324  0100               	movlb	0	; () banked
  1838  001326  5196               	movf	_Rv_CRC& (0+255),w,b
  1839  001328  1992               	xorwf	_CRC& (0+255),w,b
  1840  00132A  E132               	bnz	l5939
  1841  00132C  5197               	movf	(_Rv_CRC+1)& (0+255),w,b
  1842  00132E  1993               	xorwf	(_CRC+1)& (0+255),w,b
  1843  001330  A4D8               	btfss	status,2,c
  1844  001332  D02E               	goto	l900
  1845                           
  1846                           ; BSR set to: 0
  1847  001334  0E21               	movlw	33
  1848  001336  19B0               	xorwf	_DATA_RX& (0+255),w,b
  1849  001338  A4D8               	btfss	status,2,c
  1850  00133A  D02A               	goto	l900
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;13_April_WaterMeter_Main.c: 256: DATA_RX[0]=0;
  1854  00133C  0E00               	movlw	0
  1855  00133E  6FB0               	movwf	_DATA_RX& (0+255),b
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;13_April_WaterMeter_Main.c: 257: PORTAbits.RA1=0;
  1859  001340  9280               	bcf	3968,1,c	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;13_April_WaterMeter_Main.c: 258: SendId=Read_b_eep2(0x02);
  1863  001342  0E00               	movlw	0
  1864  001344  0101               	movlb	1	; () banked
  1865  001346  6F28               	movwf	(Read_b_eep2@badd+1)& (0+255),b
  1866  001348  0E02               	movlw	2
  1867  00134A  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  1868  00134C  EC28  F019         	call	_Read_b_eep2	;wreg free
  1869  001350  0100               	movlb	0	; () banked
  1870  001352  6FA2               	movwf	_SendId& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;13_April_WaterMeter_Main.c: 259: data_TX_normal_FIFO[13]='!';
  1874  001354  0E21               	movlw	33
  1875  001356  0101               	movlb	1	; () banked
  1876  001358  6F22               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;13_April_WaterMeter_Main.c: 260: data_TX_normal_FIFO[14]=ltr;
  1880  00135A  C07A  F123         	movff	_ltr,_data_TX_normal_FIFO+14
  1881                           
  1882                           ; BSR set to: 1
  1883                           ;13_April_WaterMeter_Main.c: 261: data_TX_normal_FIFO[15]=SendId;
  1884  00135E  C0A2  F124         	movff	_SendId,_data_TX_normal_FIFO+15
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;13_April_WaterMeter_Main.c: 262: Delay_ms(100);Delay_ms(100);Delay_ms(100);
  1888  001362  0E00               	movlw	0
  1889  001364  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1890  001366  0E64               	movlw	100
  1891  001368  6F27               	movwf	Delay_ms@time& (0+255),b
  1892  00136A  ECBE  F018         	call	_Delay_ms	;wreg free
  1893  00136E  0E00               	movlw	0
  1894  001370  0101               	movlb	1	; () banked
  1895  001372  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1896  001374  0E64               	movlw	100
  1897  001376  6F27               	movwf	Delay_ms@time& (0+255),b
  1898  001378  ECBE  F018         	call	_Delay_ms	;wreg free
  1899  00137C  0E00               	movlw	0
  1900  00137E  0101               	movlb	1	; () banked
  1901  001380  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  1902  001382  0E64               	movlw	100
  1903  001384  6F27               	movwf	Delay_ms@time& (0+255),b
  1904  001386  ECBE  F018         	call	_Delay_ms	;wreg free
  1905                           
  1906                           ;13_April_WaterMeter_Main.c: 263: write_TX_normal_FIFO();
  1907  00138A  ECA9  F010         	call	_write_TX_normal_FIFO	;wreg free
  1908                           
  1909                           ;13_April_WaterMeter_Main.c: 264: PORTAbits.RA1=1;
  1910  00138E  8280               	bsf	3968,1,c	;volatile
  1911  001390                     l900:
  1912  001390                     l5939:
  1913                           
  1914                           ;13_April_WaterMeter_Main.c: 265: }
  1915                           ;13_April_WaterMeter_Main.c: 266: Num=Flow_Rate;
  1916  001390  C080  F084         	movff	_Flow_Rate,_Num
  1917  001394  C081  F085         	movff	_Flow_Rate+1,_Num+1
  1918                           
  1919                           ;13_April_WaterMeter_Main.c: 267: if(Num >=0 && Num < 10){
  1920  001398  0100               	movlb	0	; () banked
  1921  00139A  5185               	movf	(_Num+1)& (0+255),w,b
  1922  00139C  E119               	bnz	l5945
  1923  00139E  0E0A               	movlw	10
  1924  0013A0  5D84               	subwf	_Num& (0+255),w,b
  1925  0013A2  B0D8               	btfsc	status,0,c
  1926  0013A4  D015               	goto	l901
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;13_April_WaterMeter_Main.c: 270: LcdCmd(0x8e);
  1930  0013A6  0E8E               	movlw	142
  1931  0013A8  EC82  F018         	call	_LcdCmd
  1932                           
  1933                           ;13_April_WaterMeter_Main.c: 271: LcdData(Num+0x30);
  1934  0013AC  0100               	movlb	0	; () banked
  1935  0013AE  5184               	movf	_Num& (0+255),w,b
  1936  0013B0  0F30               	addlw	48
  1937  0013B2  EC72  F018         	call	_LcdData
  1938                           
  1939                           ;13_April_WaterMeter_Main.c: 272: LcdCmd(0x8d);
  1940  0013B6  0E8D               	movlw	141
  1941  0013B8  EC82  F018         	call	_LcdCmd
  1942                           
  1943                           ;13_April_WaterMeter_Main.c: 273: LcdData(0+0x30);
  1944  0013BC  0E30               	movlw	48
  1945  0013BE  EC72  F018         	call	_LcdData
  1946                           
  1947                           ;13_April_WaterMeter_Main.c: 274: LcdCmd(0x8c);
  1948  0013C2  0E8C               	movlw	140
  1949  0013C4  EC82  F018         	call	_LcdCmd
  1950                           
  1951                           ;13_April_WaterMeter_Main.c: 275: LcdData(0+0x30);
  1952  0013C8  0E30               	movlw	48
  1953  0013CA  EC72  F018         	call	_LcdData
  1954                           
  1955                           ;13_April_WaterMeter_Main.c: 276: }
  1956  0013CE  D0A1               	goto	l905
  1957  0013D0                     l901:
  1958  0013D0                     l5945:
  1959                           
  1960                           ;13_April_WaterMeter_Main.c: 277: else if(Num >=10 && Num < 100){
  1961  0013D0  0100               	movlb	0	; () banked
  1962  0013D2  5185               	movf	(_Num+1)& (0+255),w,b
  1963  0013D4  E104               	bnz	u4910
  1964  0013D6  0E0A               	movlw	10
  1965  0013D8  5D84               	subwf	_Num& (0+255),w,b
  1966  0013DA  A0D8               	btfss	status,0,c
  1967  0013DC  D03B               	goto	l903
  1968  0013DE                     u4910:
  1969                           
  1970                           ; BSR set to: 0
  1971  0013DE  5185               	movf	(_Num+1)& (0+255),w,b
  1972  0013E0  E139               	bnz	l5951
  1973  0013E2  0E64               	movlw	100
  1974  0013E4  5D84               	subwf	_Num& (0+255),w,b
  1975  0013E6  B0D8               	btfsc	status,0,c
  1976  0013E8  D035               	goto	l903
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;13_April_WaterMeter_Main.c: 278: IdByte1=Num/10;
  1980  0013EA  C084  F127         	movff	_Num,___lwdiv@dividend
  1981  0013EE  C085  F128         	movff	_Num+1,___lwdiv@dividend+1
  1982  0013F2  0E00               	movlw	0
  1983  0013F4  0101               	movlb	1	; () banked
  1984  0013F6  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1985  0013F8  0E0A               	movlw	10
  1986  0013FA  6F29               	movwf	___lwdiv@divisor& (0+255),b
  1987  0013FC  ECE1  F014         	call	___lwdiv	;wreg free
  1988  001400  0101               	movlb	1	; () banked
  1989  001402  5127               	movf	?___lwdiv& (0+255),w,b
  1990  001404  0100               	movlb	0	; () banked
  1991  001406  6F9F               	movwf	_IdByte1& (0+255),b
  1992                           
  1993                           ;13_April_WaterMeter_Main.c: 279: IdByte2=Num%10;
  1994  001408  C084  F127         	movff	_Num,___lwmod@dividend
  1995  00140C  C085  F128         	movff	_Num+1,___lwmod@dividend+1
  1996  001410  0E00               	movlw	0
  1997  001412  0101               	movlb	1	; () banked
  1998  001414  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  1999  001416  0E0A               	movlw	10
  2000  001418  6F29               	movwf	___lwmod@divisor& (0+255),b
  2001  00141A  ECAB  F015         	call	___lwmod	;wreg free
  2002  00141E  0101               	movlb	1	; () banked
  2003  001420  5127               	movf	?___lwmod& (0+255),w,b
  2004  001422  0100               	movlb	0	; () banked
  2005  001424  6F9E               	movwf	_IdByte2& (0+255),b
  2006                           
  2007                           ;13_April_WaterMeter_Main.c: 282: LcdCmd(0x8d);
  2008  001426  0E8D               	movlw	141
  2009  001428  EC82  F018         	call	_LcdCmd
  2010                           
  2011                           ;13_April_WaterMeter_Main.c: 283: LcdData(IdByte1+0x30);
  2012  00142C  0100               	movlb	0	; () banked
  2013  00142E  519F               	movf	_IdByte1& (0+255),w,b
  2014  001430  0F30               	addlw	48
  2015  001432  EC72  F018         	call	_LcdData
  2016                           
  2017                           ;13_April_WaterMeter_Main.c: 284: LcdCmd(0x8e);
  2018  001436  0E8E               	movlw	142
  2019  001438  EC82  F018         	call	_LcdCmd
  2020                           
  2021                           ;13_April_WaterMeter_Main.c: 285: LcdData(IdByte2+0x30);
  2022  00143C  0100               	movlb	0	; () banked
  2023  00143E  519E               	movf	_IdByte2& (0+255),w,b
  2024  001440  0F30               	addlw	48
  2025  001442  EC72  F018         	call	_LcdData
  2026                           
  2027                           ;13_April_WaterMeter_Main.c: 286: LcdCmd(0x8c);
  2028  001446  0E8C               	movlw	140
  2029  001448  EC82  F018         	call	_LcdCmd
  2030                           
  2031                           ;13_April_WaterMeter_Main.c: 287: LcdData(0+0x30);
  2032  00144C  0E30               	movlw	48
  2033  00144E  EC72  F018         	call	_LcdData
  2034                           
  2035                           ;13_April_WaterMeter_Main.c: 290: }
  2036  001452  D05F               	goto	l905
  2037  001454                     l903:
  2038  001454                     l5951:
  2039                           
  2040                           ;13_April_WaterMeter_Main.c: 291: else if(Num >=100 && Num < 1000){
  2041  001454  0100               	movlb	0	; () banked
  2042  001456  5185               	movf	(_Num+1)& (0+255),w,b
  2043  001458  E104               	bnz	u4930
  2044  00145A  0E64               	movlw	100
  2045  00145C  5D84               	subwf	_Num& (0+255),w,b
  2046  00145E  A0D8               	btfss	status,0,c
  2047  001460  D058               	goto	l905
  2048  001462                     u4930:
  2049                           
  2050                           ; BSR set to: 0
  2051  001462  0EE8               	movlw	232
  2052  001464  5D84               	subwf	_Num& (0+255),w,b
  2053  001466  0E03               	movlw	3
  2054  001468  5985               	subwfb	(_Num+1)& (0+255),w,b
  2055  00146A  B0D8               	btfsc	status,0,c
  2056  00146C  D052               	goto	l905
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;13_April_WaterMeter_Main.c: 292: IdByte3=Num/100;
  2060  00146E  C084  F127         	movff	_Num,___lwdiv@dividend
  2061  001472  C085  F128         	movff	_Num+1,___lwdiv@dividend+1
  2062  001476  0E00               	movlw	0
  2063  001478  0101               	movlb	1	; () banked
  2064  00147A  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2065  00147C  0E64               	movlw	100
  2066  00147E  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2067  001480  ECE1  F014         	call	___lwdiv	;wreg free
  2068  001484  0101               	movlb	1	; () banked
  2069  001486  5127               	movf	?___lwdiv& (0+255),w,b
  2070  001488  0100               	movlb	0	; () banked
  2071  00148A  6F9D               	movwf	_IdByte3& (0+255),b
  2072                           
  2073                           ;13_April_WaterMeter_Main.c: 293: V_Temp=Num%100;
  2074  00148C  C084  F127         	movff	_Num,___lwmod@dividend
  2075  001490  C085  F128         	movff	_Num+1,___lwmod@dividend+1
  2076  001494  0E00               	movlw	0
  2077  001496  0101               	movlb	1	; () banked
  2078  001498  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2079  00149A  0E64               	movlw	100
  2080  00149C  6F29               	movwf	___lwmod@divisor& (0+255),b
  2081  00149E  ECAB  F015         	call	___lwmod	;wreg free
  2082  0014A2  0101               	movlb	1	; () banked
  2083  0014A4  5127               	movf	?___lwmod& (0+255),w,b
  2084  0014A6  0100               	movlb	0	; () banked
  2085  0014A8  6F9C               	movwf	_V_Temp& (0+255),b
  2086                           
  2087                           ;13_April_WaterMeter_Main.c: 294: IdByte1=V_Temp/10;
  2088  0014AA  C09C  F127         	movff	_V_Temp,___awdiv@dividend
  2089  0014AE  0101               	movlb	1	; () banked
  2090  0014B0  6B28               	clrf	(___awdiv@dividend+1)& (0+255),b
  2091  0014B2  0E00               	movlw	0
  2092  0014B4  6F2A               	movwf	(___awdiv@divisor+1)& (0+255),b
  2093  0014B6  0E0A               	movlw	10
  2094  0014B8  6F29               	movwf	___awdiv@divisor& (0+255),b
  2095  0014BA  EC9B  F013         	call	___awdiv	;wreg free
  2096  0014BE  0101               	movlb	1	; () banked
  2097  0014C0  5127               	movf	?___awdiv& (0+255),w,b
  2098  0014C2  0100               	movlb	0	; () banked
  2099  0014C4  6F9F               	movwf	_IdByte1& (0+255),b
  2100                           
  2101                           ;13_April_WaterMeter_Main.c: 295: IdByte2=V_Temp%10;
  2102  0014C6  C09C  F127         	movff	_V_Temp,___awmod@dividend
  2103  0014CA  0101               	movlb	1	; () banked
  2104  0014CC  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  2105  0014CE  0E00               	movlw	0
  2106  0014D0  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  2107  0014D2  0E0A               	movlw	10
  2108  0014D4  6F29               	movwf	___awmod@divisor& (0+255),b
  2109  0014D6  ECDE  F013         	call	___awmod	;wreg free
  2110  0014DA  0101               	movlb	1	; () banked
  2111  0014DC  5127               	movf	?___awmod& (0+255),w,b
  2112  0014DE  0100               	movlb	0	; () banked
  2113  0014E0  6F9E               	movwf	_IdByte2& (0+255),b
  2114                           
  2115                           ;13_April_WaterMeter_Main.c: 299: LcdCmd(0x8c);
  2116  0014E2  0E8C               	movlw	140
  2117  0014E4  EC82  F018         	call	_LcdCmd
  2118                           
  2119                           ;13_April_WaterMeter_Main.c: 300: LcdData(IdByte3+0x30);
  2120  0014E8  0100               	movlb	0	; () banked
  2121  0014EA  519D               	movf	_IdByte3& (0+255),w,b
  2122  0014EC  0F30               	addlw	48
  2123  0014EE  EC72  F018         	call	_LcdData
  2124                           
  2125                           ;13_April_WaterMeter_Main.c: 301: LcdCmd(0x8d);
  2126  0014F2  0E8D               	movlw	141
  2127  0014F4  EC82  F018         	call	_LcdCmd
  2128                           
  2129                           ;13_April_WaterMeter_Main.c: 302: LcdData(IdByte1+0x30);
  2130  0014F8  0100               	movlb	0	; () banked
  2131  0014FA  519F               	movf	_IdByte1& (0+255),w,b
  2132  0014FC  0F30               	addlw	48
  2133  0014FE  EC72  F018         	call	_LcdData
  2134                           
  2135                           ;13_April_WaterMeter_Main.c: 303: LcdCmd(0x8e);
  2136  001502  0E8E               	movlw	142
  2137  001504  EC82  F018         	call	_LcdCmd
  2138                           
  2139                           ;13_April_WaterMeter_Main.c: 304: LcdData(IdByte2+0x30);
  2140  001508  0100               	movlb	0	; () banked
  2141  00150A  519E               	movf	_IdByte2& (0+255),w,b
  2142  00150C  0F30               	addlw	48
  2143  00150E  EC72  F018         	call	_LcdData
  2144  001512                     l905:
  2145                           
  2146                           ;13_April_WaterMeter_Main.c: 306: }
  2147                           ;13_April_WaterMeter_Main.c: 308: ltr=totalLitres;
  2148  001512  C067  F127         	movff	_totalLitres,___fttol@f1
  2149  001516  C068  F128         	movff	_totalLitres+1,___fttol@f1+1
  2150  00151A  C069  F129         	movff	_totalLitres+2,___fttol@f1+2
  2151  00151E  EC63  F011         	call	___fttol	;wreg free
  2152  001522  C127  F07A         	movff	?___fttol,_ltr
  2153  001526  C128  F07B         	movff	?___fttol+1,_ltr+1
  2154                           
  2155                           ;13_April_WaterMeter_Main.c: 309: if(ltr >=0 && ltr < 10){
  2156  00152A  0100               	movlb	0	; () banked
  2157  00152C  517B               	movf	(_ltr+1)& (0+255),w,b
  2158  00152E  E119               	bnz	l5961
  2159  001530  0E0A               	movlw	10
  2160  001532  5D7A               	subwf	_ltr& (0+255),w,b
  2161  001534  B0D8               	btfsc	status,0,c
  2162  001536  D015               	goto	l906
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;13_April_WaterMeter_Main.c: 312: LcdCmd(0xce);
  2166  001538  0ECE               	movlw	206
  2167  00153A  EC82  F018         	call	_LcdCmd
  2168                           
  2169                           ;13_April_WaterMeter_Main.c: 313: LcdData(ltr+0x30);
  2170  00153E  0100               	movlb	0	; () banked
  2171  001540  517A               	movf	_ltr& (0+255),w,b
  2172  001542  0F30               	addlw	48
  2173  001544  EC72  F018         	call	_LcdData
  2174                           
  2175                           ;13_April_WaterMeter_Main.c: 314: LcdCmd(0xcd);
  2176  001548  0ECD               	movlw	205
  2177  00154A  EC82  F018         	call	_LcdCmd
  2178                           
  2179                           ;13_April_WaterMeter_Main.c: 315: LcdData(0+0x30);
  2180  00154E  0E30               	movlw	48
  2181  001550  EC72  F018         	call	_LcdData
  2182                           
  2183                           ;13_April_WaterMeter_Main.c: 316: LcdCmd(0xcc);
  2184  001554  0ECC               	movlw	204
  2185  001556  EC82  F018         	call	_LcdCmd
  2186                           
  2187                           ;13_April_WaterMeter_Main.c: 317: LcdData(0+0x30);
  2188  00155A  0E30               	movlw	48
  2189  00155C  EC72  F018         	call	_LcdData
  2190                           
  2191                           ;13_April_WaterMeter_Main.c: 318: }
  2192  001560  D0A1               	goto	l910
  2193  001562                     l906:
  2194  001562                     l5961:
  2195                           
  2196                           ;13_April_WaterMeter_Main.c: 319: else if(ltr >=10 && ltr < 100){
  2197  001562  0100               	movlb	0	; () banked
  2198  001564  517B               	movf	(_ltr+1)& (0+255),w,b
  2199  001566  E104               	bnz	u4960
  2200  001568  0E0A               	movlw	10
  2201  00156A  5D7A               	subwf	_ltr& (0+255),w,b
  2202  00156C  A0D8               	btfss	status,0,c
  2203  00156E  D03B               	goto	l908
  2204  001570                     u4960:
  2205                           
  2206                           ; BSR set to: 0
  2207  001570  517B               	movf	(_ltr+1)& (0+255),w,b
  2208  001572  E139               	bnz	l5967
  2209  001574  0E64               	movlw	100
  2210  001576  5D7A               	subwf	_ltr& (0+255),w,b
  2211  001578  B0D8               	btfsc	status,0,c
  2212  00157A  D035               	goto	l908
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;13_April_WaterMeter_Main.c: 320: IdByte1=ltr/10;
  2216  00157C  C07A  F127         	movff	_ltr,___lwdiv@dividend
  2217  001580  C07B  F128         	movff	_ltr+1,___lwdiv@dividend+1
  2218  001584  0E00               	movlw	0
  2219  001586  0101               	movlb	1	; () banked
  2220  001588  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2221  00158A  0E0A               	movlw	10
  2222  00158C  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2223  00158E  ECE1  F014         	call	___lwdiv	;wreg free
  2224  001592  0101               	movlb	1	; () banked
  2225  001594  5127               	movf	?___lwdiv& (0+255),w,b
  2226  001596  0100               	movlb	0	; () banked
  2227  001598  6F9F               	movwf	_IdByte1& (0+255),b
  2228                           
  2229                           ;13_April_WaterMeter_Main.c: 321: IdByte2=ltr%10;
  2230  00159A  C07A  F127         	movff	_ltr,___lwmod@dividend
  2231  00159E  C07B  F128         	movff	_ltr+1,___lwmod@dividend+1
  2232  0015A2  0E00               	movlw	0
  2233  0015A4  0101               	movlb	1	; () banked
  2234  0015A6  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2235  0015A8  0E0A               	movlw	10
  2236  0015AA  6F29               	movwf	___lwmod@divisor& (0+255),b
  2237  0015AC  ECAB  F015         	call	___lwmod	;wreg free
  2238  0015B0  0101               	movlb	1	; () banked
  2239  0015B2  5127               	movf	?___lwmod& (0+255),w,b
  2240  0015B4  0100               	movlb	0	; () banked
  2241  0015B6  6F9E               	movwf	_IdByte2& (0+255),b
  2242                           
  2243                           ;13_April_WaterMeter_Main.c: 324: LcdCmd(0xcd);
  2244  0015B8  0ECD               	movlw	205
  2245  0015BA  EC82  F018         	call	_LcdCmd
  2246                           
  2247                           ;13_April_WaterMeter_Main.c: 325: LcdData(IdByte1+0x30);
  2248  0015BE  0100               	movlb	0	; () banked
  2249  0015C0  519F               	movf	_IdByte1& (0+255),w,b
  2250  0015C2  0F30               	addlw	48
  2251  0015C4  EC72  F018         	call	_LcdData
  2252                           
  2253                           ;13_April_WaterMeter_Main.c: 326: LcdCmd(0xce);
  2254  0015C8  0ECE               	movlw	206
  2255  0015CA  EC82  F018         	call	_LcdCmd
  2256                           
  2257                           ;13_April_WaterMeter_Main.c: 327: LcdData(IdByte2+0x30);
  2258  0015CE  0100               	movlb	0	; () banked
  2259  0015D0  519E               	movf	_IdByte2& (0+255),w,b
  2260  0015D2  0F30               	addlw	48
  2261  0015D4  EC72  F018         	call	_LcdData
  2262                           
  2263                           ;13_April_WaterMeter_Main.c: 328: LcdCmd(0xcc);
  2264  0015D8  0ECC               	movlw	204
  2265  0015DA  EC82  F018         	call	_LcdCmd
  2266                           
  2267                           ;13_April_WaterMeter_Main.c: 329: LcdData(0+0x30);
  2268  0015DE  0E30               	movlw	48
  2269  0015E0  EC72  F018         	call	_LcdData
  2270                           
  2271                           ;13_April_WaterMeter_Main.c: 332: }
  2272  0015E4  D05F               	goto	l910
  2273  0015E6                     l908:
  2274  0015E6                     l5967:
  2275                           
  2276                           ;13_April_WaterMeter_Main.c: 333: else if(ltr >=100 && ltr < 1000){
  2277  0015E6  0100               	movlb	0	; () banked
  2278  0015E8  517B               	movf	(_ltr+1)& (0+255),w,b
  2279  0015EA  E104               	bnz	u4980
  2280  0015EC  0E64               	movlw	100
  2281  0015EE  5D7A               	subwf	_ltr& (0+255),w,b
  2282  0015F0  A0D8               	btfss	status,0,c
  2283  0015F2  D058               	goto	l910
  2284  0015F4                     u4980:
  2285                           
  2286                           ; BSR set to: 0
  2287  0015F4  0EE8               	movlw	232
  2288  0015F6  5D7A               	subwf	_ltr& (0+255),w,b
  2289  0015F8  0E03               	movlw	3
  2290  0015FA  597B               	subwfb	(_ltr+1)& (0+255),w,b
  2291  0015FC  B0D8               	btfsc	status,0,c
  2292  0015FE  D052               	goto	l910
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;13_April_WaterMeter_Main.c: 334: IdByte3=ltr/100;
  2296  001600  C07A  F127         	movff	_ltr,___lwdiv@dividend
  2297  001604  C07B  F128         	movff	_ltr+1,___lwdiv@dividend+1
  2298  001608  0E00               	movlw	0
  2299  00160A  0101               	movlb	1	; () banked
  2300  00160C  6F2A               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2301  00160E  0E64               	movlw	100
  2302  001610  6F29               	movwf	___lwdiv@divisor& (0+255),b
  2303  001612  ECE1  F014         	call	___lwdiv	;wreg free
  2304  001616  0101               	movlb	1	; () banked
  2305  001618  5127               	movf	?___lwdiv& (0+255),w,b
  2306  00161A  0100               	movlb	0	; () banked
  2307  00161C  6F9D               	movwf	_IdByte3& (0+255),b
  2308                           
  2309                           ;13_April_WaterMeter_Main.c: 335: V_Temp=ltr%100;
  2310  00161E  C07A  F127         	movff	_ltr,___lwmod@dividend
  2311  001622  C07B  F128         	movff	_ltr+1,___lwmod@dividend+1
  2312  001626  0E00               	movlw	0
  2313  001628  0101               	movlb	1	; () banked
  2314  00162A  6F2A               	movwf	(___lwmod@divisor+1)& (0+255),b
  2315  00162C  0E64               	movlw	100
  2316  00162E  6F29               	movwf	___lwmod@divisor& (0+255),b
  2317  001630  ECAB  F015         	call	___lwmod	;wreg free
  2318  001634  0101               	movlb	1	; () banked
  2319  001636  5127               	movf	?___lwmod& (0+255),w,b
  2320  001638  0100               	movlb	0	; () banked
  2321  00163A  6F9C               	movwf	_V_Temp& (0+255),b
  2322                           
  2323                           ;13_April_WaterMeter_Main.c: 336: IdByte1=V_Temp/10;
  2324  00163C  C09C  F127         	movff	_V_Temp,___awdiv@dividend
  2325  001640  0101               	movlb	1	; () banked
  2326  001642  6B28               	clrf	(___awdiv@dividend+1)& (0+255),b
  2327  001644  0E00               	movlw	0
  2328  001646  6F2A               	movwf	(___awdiv@divisor+1)& (0+255),b
  2329  001648  0E0A               	movlw	10
  2330  00164A  6F29               	movwf	___awdiv@divisor& (0+255),b
  2331  00164C  EC9B  F013         	call	___awdiv	;wreg free
  2332  001650  0101               	movlb	1	; () banked
  2333  001652  5127               	movf	?___awdiv& (0+255),w,b
  2334  001654  0100               	movlb	0	; () banked
  2335  001656  6F9F               	movwf	_IdByte1& (0+255),b
  2336                           
  2337                           ;13_April_WaterMeter_Main.c: 337: IdByte2=V_Temp%10;
  2338  001658  C09C  F127         	movff	_V_Temp,___awmod@dividend
  2339  00165C  0101               	movlb	1	; () banked
  2340  00165E  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  2341  001660  0E00               	movlw	0
  2342  001662  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  2343  001664  0E0A               	movlw	10
  2344  001666  6F29               	movwf	___awmod@divisor& (0+255),b
  2345  001668  ECDE  F013         	call	___awmod	;wreg free
  2346  00166C  0101               	movlb	1	; () banked
  2347  00166E  5127               	movf	?___awmod& (0+255),w,b
  2348  001670  0100               	movlb	0	; () banked
  2349  001672  6F9E               	movwf	_IdByte2& (0+255),b
  2350                           
  2351                           ;13_April_WaterMeter_Main.c: 341: LcdCmd(0xcc);
  2352  001674  0ECC               	movlw	204
  2353  001676  EC82  F018         	call	_LcdCmd
  2354                           
  2355                           ;13_April_WaterMeter_Main.c: 342: LcdData(IdByte3+0x30);
  2356  00167A  0100               	movlb	0	; () banked
  2357  00167C  519D               	movf	_IdByte3& (0+255),w,b
  2358  00167E  0F30               	addlw	48
  2359  001680  EC72  F018         	call	_LcdData
  2360                           
  2361                           ;13_April_WaterMeter_Main.c: 343: LcdCmd(0xcd);
  2362  001684  0ECD               	movlw	205
  2363  001686  EC82  F018         	call	_LcdCmd
  2364                           
  2365                           ;13_April_WaterMeter_Main.c: 344: LcdData(IdByte1+0x30);
  2366  00168A  0100               	movlb	0	; () banked
  2367  00168C  519F               	movf	_IdByte1& (0+255),w,b
  2368  00168E  0F30               	addlw	48
  2369  001690  EC72  F018         	call	_LcdData
  2370                           
  2371                           ;13_April_WaterMeter_Main.c: 345: LcdCmd(0xce);
  2372  001694  0ECE               	movlw	206
  2373  001696  EC82  F018         	call	_LcdCmd
  2374                           
  2375                           ;13_April_WaterMeter_Main.c: 346: LcdData(IdByte2+0x30);
  2376  00169A  0100               	movlb	0	; () banked
  2377  00169C  519E               	movf	_IdByte2& (0+255),w,b
  2378  00169E  0F30               	addlw	48
  2379  0016A0  EC72  F018         	call	_LcdData
  2380  0016A4                     l910:
  2381                           
  2382                           ;13_April_WaterMeter_Main.c: 348: }
  2383                           ;13_April_WaterMeter_Main.c: 387: __nop();
  2384  0016A4  F000               	nop	
  2385  0016A6  D63E               	goto	l899
  2386  0016A8                     __end_of_main:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           intcon	equ	0xFF2
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1l	equ	0xFE1
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _write_TX_normal_FIFO *****************
  2400 ;; Defined at:
  2401 ;;		line 335 in file "zigbee.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  i               1   15[BANK1 ] unsigned char 
  2406 ;;  n               1   14[BANK1 ] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;Total ram usage:        7 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:   11
  2423 ;; This function calls:
  2424 ;;		_Delay_ms
  2425 ;;		_Xor_check
  2426 ;;		_set_not_ACK
  2427 ;;		_set_not_encrypt
  2428 ;;		_start_transmit
  2429 ;;		_write_ZIGBEE_long
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text1
  2436  002152                     __ptext1:
  2437                           	opt stack 0
  2438  002152                     _write_TX_normal_FIFO:
  2439                           	opt stack 19
  2440                           
  2441                           ;zigbee.c: 336: unsigned char i = 0,n = 0;
  2442                           
  2443                           ;incstack = 0
  2444  002152  0E00               	movlw	0
  2445  002154  0101               	movlb	1	; () banked
  2446  002156  6F36               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2447  002158  0E00               	movlw	0
  2448  00215A  6F35               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2449                           
  2450                           ; BSR set to: 1
  2451                           ;zigbee.c: 338: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  2452  00215C  0E01               	movlw	low _HEADER_LENGHT
  2453  00215E  6EF6               	movwf	tblptrl,c
  2454  002160                     	if	1	;There is more than 1 active tblptr byte
  2455  002160  0E10               	movlw	high _HEADER_LENGHT
  2456  002162  6EF7               	movwf	tblptrh,c
  2457  002164                     	endif
  2458  002164                     	if	1	;There are 3 active tblptr bytes
  2459  002164  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2460  002166  6EF8               	movwf	tblptru,c
  2461  002168                     	endif
  2462  002168  0008               	tblrd		*
  2463  00216A  CFF5 F115          	movff	tablat,_data_TX_normal_FIFO
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;zigbee.c: 339: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  2467  00216E  0E02               	movlw	low _DATA_LENGHT
  2468  002170  6EF6               	movwf	tblptrl,c
  2469  002172                     	if	1	;There is more than 1 active tblptr byte
  2470  002172  0E10               	movlw	high _DATA_LENGHT
  2471  002174  6EF7               	movwf	tblptrh,c
  2472  002176                     	endif
  2473  002176                     	if	1	;There are 3 active tblptr bytes
  2474  002176  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2475  002178  6EF8               	movwf	tblptru,c
  2476  00217A                     	endif
  2477  00217A  0008               	tblrd		*
  2478  00217C  CFF5 F130          	movff	tablat,??_write_TX_normal_FIFO
  2479  002180  0E01               	movlw	low _HEADER_LENGHT
  2480  002182  6EF6               	movwf	tblptrl,c
  2481  002184                     	if	1	;There is more than 1 active tblptr byte
  2482  002184  0E10               	movlw	high _HEADER_LENGHT
  2483  002186  6EF7               	movwf	tblptrh,c
  2484  002188                     	endif
  2485  002188                     	if	1	;There are 3 active tblptr bytes
  2486  002188  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2487  00218A  6EF8               	movwf	tblptru,c
  2488  00218C                     	endif
  2489  00218C  0008               	tblrd		*
  2490  00218E  50F5               	movf	tablat,w,c
  2491  002190  2530               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  2492  002192  6F16               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;zigbee.c: 340: data_TX_normal_FIFO[2] = 0x01;
  2496  002194  0E01               	movlw	1
  2497  002196  6F17               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;zigbee.c: 341: data_TX_normal_FIFO[3] = 0x88;
  2501  002198  0E88               	movlw	136
  2502  00219A  6F18               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;zigbee.c: 342: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  2506  00219C  C0EE  F119         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;zigbee.c: 343: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  2510  0021A0  C0F8  F11A         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;zigbee.c: 344: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  2514  0021A4  C0F7  F11B         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;zigbee.c: 345: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  2518  0021A8  C0F9  F11C         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  2519                           
  2520                           ; BSR set to: 1
  2521                           ;zigbee.c: 346: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  2522  0021AC  C0FA  F11D         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;zigbee.c: 347: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  2526  0021B0  C0E8  F11E         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;zigbee.c: 348: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  2530  0021B4  C0E9  F11F         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;zigbee.c: 349: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  2534  0021B8  C0EA  F120         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;zigbee.c: 350: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  2538  0021BC  C0EB  F121         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  2539                           
  2540                           ; BSR set to: 1
  2541                           ;zigbee.c: 352: for(n=0,ii=13;n<3;n++,ii++){
  2542  0021C0  0E00               	movlw	0
  2543  0021C2  6F35               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2544                           
  2545                           ; BSR set to: 1
  2546  0021C4  0E0D               	movlw	13
  2547  0021C6  0100               	movlb	0	; () banked
  2548  0021C8  6FAD               	movwf	_ii& (0+255),b
  2549  0021CA                     l5215:
  2550                           
  2551                           ; BSR set to: 0
  2552  0021CA  0E02               	movlw	2
  2553  0021CC  0101               	movlb	1	; () banked
  2554  0021CE  6535               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  2555  0021D0  D001               	goto	l479
  2556  0021D2  D018               	goto	u3840
  2557  0021D4                     l479:
  2558                           
  2559                           ; BSR set to: 1
  2560                           ;zigbee.c: 353: DATA_TX[n] = data_TX_normal_FIFO[ii];
  2561                           
  2562                           ; BSR set to: 1
  2563  0021D4  0100               	movlb	0	; () banked
  2564  0021D6  51AD               	movf	_ii& (0+255),w,b
  2565  0021D8  0D01               	mullw	1
  2566  0021DA  0E15               	movlw	low _data_TX_normal_FIFO
  2567  0021DC  24F3               	addwf	prodl,w,c
  2568  0021DE  6ED9               	movwf	fsr2l,c
  2569  0021E0  0E01               	movlw	high _data_TX_normal_FIFO
  2570  0021E2  20F4               	addwfc	prodh,w,c
  2571  0021E4  6EDA               	movwf	fsr2h,c
  2572  0021E6  0101               	movlb	1	; () banked
  2573  0021E8  5135               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  2574  0021EA  0D01               	mullw	1
  2575  0021EC  0EB8               	movlw	low _DATA_TX
  2576  0021EE  24F3               	addwf	prodl,w,c
  2577  0021F0  6EE1               	movwf	fsr1l,c
  2578  0021F2  0E00               	movlw	high _DATA_TX
  2579  0021F4  20F4               	addwfc	prodh,w,c
  2580  0021F6  6EE2               	movwf	fsr1h,c
  2581  0021F8  CFDF FFE7          	movff	indf2,indf1
  2582                           
  2583                           ; BSR set to: 1
  2584  0021FC  2B35               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  2585                           
  2586                           ; BSR set to: 1
  2587  0021FE  0100               	movlb	0	; () banked
  2588  002200  2BAD               	incf	_ii& (0+255),f,b
  2589  002202  D7E3               	goto	l5215
  2590  002204                     u3840:
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;zigbee.c: 354: }
  2594                           ;zigbee.c: 355: TX_CRC = Xor_check(DATA_TX,3);
  2595                           
  2596                           ; BSR set to: 1
  2597  002204  0EB8               	movlw	low _DATA_TX
  2598  002206  6F27               	movwf	Xor_check@data_value& (0+255),b
  2599  002208  0E00               	movlw	high _DATA_TX
  2600  00220A  6F28               	movwf	(Xor_check@data_value+1)& (0+255),b
  2601  00220C  0E03               	movlw	3
  2602  00220E  6F29               	movwf	Xor_check@length& (0+255),b
  2603  002210  ECEF  F015         	call	_Xor_check	;wreg free
  2604  002214  C127  F094         	movff	?_Xor_check,_TX_CRC
  2605  002218  C128  F095         	movff	?_Xor_check+1,_TX_CRC+1
  2606                           
  2607                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  2608  00221C  C094  F125         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  2609                           
  2610                           ;zigbee.c: 357: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  2611  002220  0100               	movlb	0	; () banked
  2612  002222  5195               	movf	(_TX_CRC+1)& (0+255),w,b
  2613  002224  0101               	movlb	1	; () banked
  2614  002226  6F26               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;zigbee.c: 360: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  2618  002228  0E00               	movlw	0
  2619  00222A  6F36               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2620  00222C                     l5235:
  2621                           
  2622                           ; BSR set to: 1
  2623  00222C  0E01               	movlw	low _HEADER_LENGHT
  2624  00222E  6EF6               	movwf	tblptrl,c
  2625  002230                     	if	1	;There is more than 1 active tblptr byte
  2626  002230  0E10               	movlw	high _HEADER_LENGHT
  2627  002232  6EF7               	movwf	tblptrh,c
  2628  002234                     	endif
  2629  002234                     	if	1	;There are 3 active tblptr bytes
  2630  002234  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2631  002236  6EF8               	movwf	tblptru,c
  2632  002238                     	endif
  2633  002238  0008               	tblrd		*
  2634  00223A  50F5               	movf	tablat,w,c
  2635  00223C  6F30               	movwf	??_write_TX_normal_FIFO& (0+255),b
  2636  00223E  6B31               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  2637  002240  0E02               	movlw	low _DATA_LENGHT
  2638  002242  6EF6               	movwf	tblptrl,c
  2639  002244                     	if	1	;There is more than 1 active tblptr byte
  2640  002244  0E10               	movlw	high _DATA_LENGHT
  2641  002246  6EF7               	movwf	tblptrh,c
  2642  002248                     	endif
  2643  002248                     	if	1	;There are 3 active tblptr bytes
  2644  002248  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2645  00224A  6EF8               	movwf	tblptru,c
  2646  00224C                     	endif
  2647  00224C  0008               	tblrd		*
  2648  00224E  50F5               	movf	tablat,w,c
  2649  002250  2730               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2650  002252  0E00               	movlw	0
  2651  002254  2331               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2652  002256  0E02               	movlw	2
  2653  002258  2730               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2654  00225A  0E00               	movlw	0
  2655  00225C  2331               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2656  00225E  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2657  002260  6F32               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  2658  002262  6B33               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  2659  002264  5130               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  2660  002266  5D32               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  2661  002268  5133               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  2662  00226A  0A80               	xorlw	128
  2663  00226C  6F34               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  2664  00226E  5131               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  2665  002270  0A80               	xorlw	128
  2666  002272  5934               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  2667  002274  B0D8               	btfsc	status,0,c
  2668  002276  D020               	goto	u3860
  2669                           
  2670                           ; BSR set to: 1
  2671                           ;zigbee.c: 361: {
  2672                           ;zigbee.c: 362: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  2673                           
  2674                           ; BSR set to: 1
  2675                           
  2676                           ; BSR set to: 1
  2677  002278  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2678  00227A  0100               	movlb	0	; () banked
  2679  00227C  2598               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  2680  00227E  0101               	movlb	1	; () banked
  2681  002280  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  2682  002282  0E00               	movlw	0
  2683  002284  0100               	movlb	0	; () banked
  2684  002286  2199               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  2685  002288  0101               	movlb	1	; () banked
  2686  00228A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  2687  00228C  5136               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2688  00228E  0D01               	mullw	1
  2689  002290  0E15               	movlw	low _data_TX_normal_FIFO
  2690  002292  24F3               	addwf	prodl,w,c
  2691  002294  6ED9               	movwf	fsr2l,c
  2692  002296  0E01               	movlw	high _data_TX_normal_FIFO
  2693  002298  20F4               	addwfc	prodh,w,c
  2694  00229A  6EDA               	movwf	fsr2h,c
  2695  00229C  50DF               	movf	indf2,w,c
  2696  00229E  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  2697  0022A0  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  2698                           
  2699                           ;zigbee.c: 363: Delay_ms(10);
  2700  0022A4  0E00               	movlw	0
  2701  0022A6  0101               	movlb	1	; () banked
  2702  0022A8  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  2703  0022AA  0E0A               	movlw	10
  2704  0022AC  6F27               	movwf	Delay_ms@time& (0+255),b
  2705  0022AE  ECBE  F018         	call	_Delay_ms	;wreg free
  2706  0022B2  0101               	movlb	1	; () banked
  2707  0022B4  2B36               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  2708  0022B6  D7BA               	goto	l5235
  2709  0022B8                     u3860:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;zigbee.c: 364: }
  2713                           ;zigbee.c: 365: set_not_ACK();
  2714                           
  2715                           ; BSR set to: 1
  2716  0022B8  ECE3  F018         	call	_set_not_ACK	;wreg free
  2717                           
  2718                           ;zigbee.c: 366: set_not_encrypt();
  2719  0022BC  ECD8  F018         	call	_set_not_encrypt	;wreg free
  2720                           
  2721                           ;zigbee.c: 367: start_transmit();
  2722  0022C0  EC87  F015         	call	_start_transmit	;wreg free
  2723  0022C4  0012               	return		;funcret
  2724  0022C6                     __end_of_write_TX_normal_FIFO:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           indf1	equ	0xFE7
  2736                           postdec1	equ	0xFE5
  2737                           fsr1h	equ	0xFE2
  2738                           fsr1l	equ	0xFE1
  2739                           indf2	equ	0xFDF
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function _start_transmit *****************
  2745 ;; Defined at:
  2746 ;;		line 383 in file "zigbee.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:   10
  2767 ;; This function calls:
  2768 ;;		_read_ZIGBEE_short
  2769 ;;		_write_ZIGBEE_short
  2770 ;; This function is called by:
  2771 ;;		_write_TX_normal_FIFO
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text2
  2776  002B0E                     __ptext2:
  2777                           	opt stack 0
  2778  002B0E                     _start_transmit:
  2779                           	opt stack 19
  2780                           
  2781                           ;zigbee.c: 385: CHECK=0;
  2782                           
  2783                           ;incstack = 0
  2784  002B0E  0E00               	movlw	0
  2785  002B10  0100               	movlb	0	; () banked
  2786  002B12  6FAE               	movwf	_CHECK& (0+255),b
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;zigbee.c: 386: CHECK = CHECK | 0x01;
  2790  002B14  51AE               	movf	_CHECK& (0+255),w,b
  2791  002B16  0901               	iorlw	1
  2792  002B18  6FAE               	movwf	_CHECK& (0+255),b
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;zigbee.c: 387: write_ZIGBEE_short(0x1B,CHECK);
  2796  002B1A  C0AE  F129         	movff	_CHECK,write_ZIGBEE_short@data_r
  2797  002B1E  0E1B               	movlw	27
  2798  002B20  ECF6  F017         	call	_write_ZIGBEE_short
  2799                           
  2800                           ;zigbee.c: 389: CHECK=0;
  2801  002B24  0E00               	movlw	0
  2802  002B26  0100               	movlb	0	; () banked
  2803  002B28  6FAE               	movwf	_CHECK& (0+255),b
  2804  002B2A                     
  2805                           ; BSR set to: 0
  2806                           
  2807                           ; BSR set to: 0
  2808  002B2A  0E31               	movlw	49
  2809  002B2C  EC81  F017         	call	_read_ZIGBEE_short
  2810  002B30  06E8               	decf	wreg,f,c
  2811  002B32  A4D8               	btfss	status,2,c
  2812  002B34  D7FA               	goto	l493
  2813                           
  2814                           ;zigbee.c: 391: CHECK = read_ZIGBEE_short(0x31);
  2815  002B36  0E31               	movlw	49
  2816  002B38  EC81  F017         	call	_read_ZIGBEE_short
  2817  002B3C  0100               	movlb	0	; () banked
  2818  002B3E  6FAE               	movwf	_CHECK& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;zigbee.c: 392: __nop();
  2822  002B40  F000               	nop	
  2823                           
  2824                           ;zigbee.c: 393: CHECK = 0;
  2825  002B42  0E00               	movlw	0
  2826  002B44  0100               	movlb	0	; () banked
  2827  002B46  6FAE               	movwf	_CHECK& (0+255),b
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;zigbee.c: 394: CHECK = read_ZIGBEE_short(0x24);
  2831  002B48  0E24               	movlw	36
  2832  002B4A  EC81  F017         	call	_read_ZIGBEE_short
  2833  002B4E  0100               	movlb	0	; () banked
  2834  002B50  6FAE               	movwf	_CHECK& (0+255),b
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;zigbee.c: 395: __nop();
  2838  002B52  F000               	nop	
  2839  002B54  0012               	return		;funcret
  2840  002B56                     __end_of_start_transmit:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf1	equ	0xFE7
  2852                           postdec1	equ	0xFE5
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _read_ZIGBEE_short *****************
  2861 ;; Defined at:
  2862 ;;		line 404 in file "zigbee.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  address         1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  address         1    3[BANK1 ] unsigned char 
  2867 ;;  data_r          1    2[BANK1 ] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      unsigned char 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;Total ram usage:        2 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    9
  2884 ;; This function calls:
  2885 ;;		_SPI_Read
  2886 ;;		_SPI_Write
  2887 ;; This function is called by:
  2888 ;;		_start_transmit
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text3
  2893  002F02                     __ptext3:
  2894                           	opt stack 0
  2895  002F02                     _read_ZIGBEE_short:
  2896                           	opt stack 19
  2897                           
  2898                           ;incstack = 0
  2899                           ;read_ZIGBEE_short@address stored from wreg
  2900  002F02  0101               	movlb	1	; () banked
  2901  002F04  6F2A               	movwf	read_ZIGBEE_short@address& (0+255),b
  2902                           
  2903                           ;zigbee.c: 405: unsigned char data_r = 0;
  2904  002F06  0E00               	movlw	0
  2905  002F08  0101               	movlb	1	; () banked
  2906  002F0A  6F29               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;zigbee.c: 407: PORTCbits.RC0=0;
  2910  002F0C  9082               	bcf	3970,0,c	;volatile
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
  2914  002F0E  512A               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2915  002F10  252A               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  2916  002F12  0B7E               	andlw	126
  2917  002F14  6F2A               	movwf	read_ZIGBEE_short@address& (0+255),b
  2918                           
  2919                           ; BSR set to: 1
  2920                           ;zigbee.c: 409: SPI_Write(address);
  2921  002F16  512A               	movf	read_ZIGBEE_short@address& (0+255),w,b
  2922  002F18  EC1F  F019         	call	_SPI_Write
  2923                           
  2924                           ;zigbee.c: 410: data_r = SPI_Read();
  2925  002F1C  EC0D  F019         	call	_SPI_Read	;wreg free
  2926  002F20  0101               	movlb	1	; () banked
  2927  002F22  6F29               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;zigbee.c: 411: PORTCbits.RC0=1;
  2931  002F24  8082               	bsf	3970,0,c	;volatile
  2932                           
  2933                           ; BSR set to: 1
  2934                           ;zigbee.c: 413: return data_r;
  2935  002F26  5129               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  2936  002F28  0012               	return	
  2937  002F2A                     __end_of_read_ZIGBEE_short:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           prodh	equ	0xFF4
  2944                           prodl	equ	0xFF3
  2945                           intcon	equ	0xFF2
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           indf1	equ	0xFE7
  2949                           postdec1	equ	0xFE5
  2950                           fsr1h	equ	0xFE2
  2951                           fsr1l	equ	0xFE1
  2952                           indf2	equ	0xFDF
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _SPI_Read *****************
  2958 ;; Defined at:
  2959 ;;		line 464 in file "zigbee.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  TempVar         1    0[BANK1 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      unsigned char 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    8
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_read_ZIGBEE_short
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text4
  2988  00321A                     __ptext4:
  2989                           	opt stack 0
  2990  00321A                     _SPI_Read:
  2991                           	opt stack 19
  2992                           
  2993                           ;zigbee.c: 465: unsigned char TempVar;
  2994                           ;zigbee.c: 466: SSP1BUF = 0xff;
  2995                           
  2996                           ; BSR set to: 1
  2997                           ;incstack = 0
  2998  00321A  68C9               	setf	4041,c	;volatile
  2999  00321C  A0C7               	btfss	4039,0,c	;volatile
  3000  00321E  D7FE               	goto	l520
  3001                           
  3002                           ;zigbee.c: 468: TempVar = SSP1BUF;
  3003  003220  CFC9 F127          	movff	4041,SPI_Read@TempVar	;volatile
  3004                           
  3005                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
  3006  003224  969E               	bcf	3998,3,c	;volatile
  3007                           
  3008                           ;zigbee.c: 470: return ( TempVar );
  3009  003226  0101               	movlb	1	; () banked
  3010  003228  5127               	movf	SPI_Read@TempVar& (0+255),w,b
  3011  00322A  0012               	return	
  3012  00322C                     __end_of_SPI_Read:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           intcon	equ	0xFF2
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           indf1	equ	0xFE7
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function _set_not_encrypt *****************
  3033 ;; Defined at:
  3034 ;;		line 376 in file "zigbee.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  temp            1    4[BANK1 ] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;Total ram usage:        1 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:   10
  3055 ;; This function calls:
  3056 ;;		_write_ZIGBEE_short
  3057 ;; This function is called by:
  3058 ;;		_write_TX_normal_FIFO
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text5
  3063  0031B0                     __ptext5:
  3064                           	opt stack 0
  3065  0031B0                     _set_not_encrypt:
  3066                           	opt stack 19
  3067                           
  3068                           ;zigbee.c: 378: unsigned char temp = 0;
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;incstack = 0
  3072  0031B0  0E00               	movlw	0
  3073  0031B2  0101               	movlb	1	; () banked
  3074  0031B4  6F2B               	movwf	set_not_encrypt@temp& (0+255),b
  3075                           
  3076                           ;zigbee.c: 379: temp = temp & (!0x02);
  3077  0031B6  0E00               	movlw	0
  3078  0031B8  6F2B               	movwf	set_not_encrypt@temp& (0+255),b
  3079                           
  3080                           ; BSR set to: 1
  3081                           ;zigbee.c: 380: write_ZIGBEE_short(0x1B, temp);
  3082  0031BA  C12B  F129         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  3083  0031BE  0E1B               	movlw	27
  3084  0031C0  ECF6  F017         	call	_write_ZIGBEE_short
  3085  0031C4  0012               	return		;funcret
  3086  0031C6                     __end_of_set_not_encrypt:
  3087                           	opt stack 0
  3088                           tblptru	equ	0xFF8
  3089                           tblptrh	equ	0xFF7
  3090                           tblptrl	equ	0xFF6
  3091                           tablat	equ	0xFF5
  3092                           prodh	equ	0xFF4
  3093                           prodl	equ	0xFF3
  3094                           intcon	equ	0xFF2
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf1	equ	0xFE7
  3098                           postdec1	equ	0xFE5
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           indf2	equ	0xFDF
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _set_not_ACK *****************
  3107 ;; Defined at:
  3108 ;;		line 370 in file "zigbee.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  temp            1    4[BANK1 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:   10
  3129 ;; This function calls:
  3130 ;;		_write_ZIGBEE_short
  3131 ;; This function is called by:
  3132 ;;		_write_TX_normal_FIFO
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text6
  3137  0031C6                     __ptext6:
  3138                           	opt stack 0
  3139  0031C6                     _set_not_ACK:
  3140                           	opt stack 19
  3141                           
  3142                           ;zigbee.c: 372: unsigned char temp = 0;
  3143                           
  3144                           ;incstack = 0
  3145  0031C6  0E00               	movlw	0
  3146  0031C8  0101               	movlb	1	; () banked
  3147  0031CA  6F2B               	movwf	set_not_ACK@temp& (0+255),b
  3148                           
  3149                           ;zigbee.c: 373: temp = temp & (!0x04);
  3150  0031CC  0E00               	movlw	0
  3151  0031CE  6F2B               	movwf	set_not_ACK@temp& (0+255),b
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;zigbee.c: 374: write_ZIGBEE_short(0x1B, temp);
  3155  0031D0  C12B  F129         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  3156  0031D4  0E1B               	movlw	27
  3157  0031D6  ECF6  F017         	call	_write_ZIGBEE_short
  3158  0031DA  0012               	return		;funcret
  3159  0031DC                     __end_of_set_not_ACK:
  3160                           	opt stack 0
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           indf1	equ	0xFE7
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _Xor_check *****************
  3180 ;; Defined at:
  3181 ;;		line 504 in file "zigbee.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  data_value      2    0[BANK1 ] PTR unsigned char 
  3184 ;;		 -> DATA_TX(3), DATA_RX(5), 
  3185 ;;  length          1    2[BANK1 ] unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  xor             2    6[BANK1 ] unsigned short 
  3188 ;;  xor_value       2    4[BANK1 ] unsigned short 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2    0[BANK1 ] unsigned short 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        8 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    8
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_write_TX_normal_FIFO
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text7
  3213  002BDE                     __ptext7:
  3214                           	opt stack 0
  3215  002BDE                     _Xor_check:
  3216                           	opt stack 21
  3217                           
  3218                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
  3219                           
  3220                           ;incstack = 0
  3221  002BDE  0E8D               	movlw	141
  3222  002BE0  0101               	movlb	1	; () banked
  3223  002BE2  6F2C               	movwf	(Xor_check@xor_value+1)& (0+255),b
  3224  002BE4  0E0D               	movlw	13
  3225  002BE6  6F2B               	movwf	Xor_check@xor_value& (0+255),b
  3226                           
  3227                           ;zigbee.c: 507: unsigned short xor=0x00;
  3228  002BE8  0E00               	movlw	0
  3229  002BEA  6F2E               	movwf	(Xor_check@xor+1)& (0+255),b
  3230  002BEC  0E00               	movlw	0
  3231  002BEE  6F2D               	movwf	Xor_check@xor& (0+255),b
  3232                           
  3233                           ;zigbee.c: 508: while(length --)
  3234  002BF0  D00A               	goto	l559
  3235  002BF2                     
  3236                           ; BSR set to: 1
  3237                           ;zigbee.c: 509: {
  3238                           ;zigbee.c: 510: xor_value ^= *data_value++;
  3239                           
  3240                           ; BSR set to: 1
  3241  002BF2  C127  FFD9         	movff	Xor_check@data_value,fsr2l
  3242  002BF6  C128  FFDA         	movff	Xor_check@data_value+1,fsr2h
  3243  002BFA  50DF               	movf	indf2,w,c
  3244  002BFC  6F2A               	movwf	??_Xor_check& (0+255),b
  3245  002BFE  512A               	movf	??_Xor_check& (0+255),w,b
  3246  002C00  1B2B               	xorwf	Xor_check@xor_value& (0+255),f,b
  3247                           
  3248                           ; BSR set to: 1
  3249  002C02  4B27               	infsnz	Xor_check@data_value& (0+255),f,b
  3250  002C04  2B28               	incf	(Xor_check@data_value+1)& (0+255),f,b
  3251  002C06                     l559:
  3252                           
  3253                           ; BSR set to: 1
  3254                           
  3255                           ; BSR set to: 1
  3256  002C06  0729               	decf	Xor_check@length& (0+255),f,b
  3257  002C08  2929               	incf	Xor_check@length& (0+255),w,b
  3258  002C0A  A4D8               	btfss	status,2,c
  3259  002C0C  D7F2               	goto	l560
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;zigbee.c: 511: }
  3263                           ;zigbee.c: 512: xor=xor_value;
  3264  002C0E  C12B  F12D         	movff	Xor_check@xor_value,Xor_check@xor
  3265  002C12  C12C  F12E         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  3266                           
  3267                           ;zigbee.c: 513: return(xor);
  3268  002C16  C12D  F127         	movff	Xor_check@xor,?_Xor_check
  3269  002C1A  C12E  F128         	movff	Xor_check@xor+1,?_Xor_check+1
  3270                           
  3271                           ; BSR set to: 1
  3272  002C1E  0012               	return		;funcret
  3273  002C20                     __end_of_Xor_check:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           indf1	equ	0xFE7
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _set_short_address *****************
  3294 ;; Defined at:
  3295 ;;		line 68 in file "zigbee.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3298 ;;		 -> ADDRESS_short_2(2), 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3310 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;Total ram usage:        2 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:   10
  3317 ;; This function calls:
  3318 ;;		_write_ZIGBEE_short
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text8
  3325  002E7C                     __ptext8:
  3326                           	opt stack 0
  3327  002E7C                     _set_short_address:
  3328                           	opt stack 20
  3329                           
  3330                           ;zigbee.c: 69: write_ZIGBEE_short(0x03, address[0]);
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;incstack = 0
  3334  002E7C  C12B  FFD9         	movff	set_short_address@address,fsr2l
  3335  002E80  C12C  FFDA         	movff	set_short_address@address+1,fsr2h
  3336  002E84  50DF               	movf	indf2,w,c
  3337  002E86  0101               	movlb	1	; () banked
  3338  002E88  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3339  002E8A  0E03               	movlw	3
  3340  002E8C  ECF6  F017         	call	_write_ZIGBEE_short
  3341                           
  3342                           ;zigbee.c: 70: write_ZIGBEE_short(0x04, address[1]);
  3343  002E90  0101               	movlb	1	; () banked
  3344  002E92  EE20 F001          	lfsr	2,1
  3345  002E96  512B               	movf	set_short_address@address& (0+255),w,b
  3346  002E98  26D9               	addwf	fsr2l,f,c
  3347  002E9A  512C               	movf	(set_short_address@address+1)& (0+255),w,b
  3348  002E9C  22DA               	addwfc	fsr2h,f,c
  3349  002E9E  50DF               	movf	indf2,w,c
  3350  002EA0  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3351  002EA2  0E04               	movlw	4
  3352  002EA4  ECF6  F017         	call	_write_ZIGBEE_short
  3353  002EA8  0012               	return		;funcret
  3354  002EAA                     __end_of_set_short_address:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           indf1	equ	0xFE7
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _set_reception_mode *****************
  3375 ;; Defined at:
  3376 ;;		line 304 in file "zigbee.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  r_mode          1    wreg     unsigned char 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  r_mode          1    4[BANK1 ] unsigned char 
  3381 ;;  temp            1    5[BANK1 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:   10
  3398 ;; This function calls:
  3399 ;;		_write_ZIGBEE_short
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text9
  3406  00282E                     __ptext9:
  3407                           	opt stack 0
  3408  00282E                     _set_reception_mode:
  3409                           	opt stack 20
  3410                           
  3411                           ;incstack = 0
  3412                           ;set_reception_mode@r_mode stored from wreg
  3413  00282E  0101               	movlb	1	; () banked
  3414  002830  6F2B               	movwf	set_reception_mode@r_mode& (0+255),b
  3415                           
  3416                           ;zigbee.c: 306: unsigned char temp=0;
  3417  002832  0E00               	movlw	0
  3418  002834  0101               	movlb	1	; () banked
  3419  002836  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3420                           
  3421                           ;zigbee.c: 307: switch(r_mode)
  3422  002838  D026               	goto	l471
  3423  00283A                     
  3424                           ; BSR set to: 1
  3425                           ;zigbee.c: 310: {
  3426                           ;zigbee.c: 311: temp=0;
  3427                           
  3428                           ; BSR set to: 1
  3429  00283A  0E00               	movlw	0
  3430  00283C  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3431                           
  3432                           ;zigbee.c: 312: temp = temp & (!0x03);
  3433  00283E  0E00               	movlw	0
  3434  002840  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;zigbee.c: 313: write_ZIGBEE_short(0x00, temp);
  3438  002842  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3439  002846  0E00               	movlw	0
  3440  002848  ECF6  F017         	call	_write_ZIGBEE_short
  3441                           
  3442                           ;zigbee.c: 314: }
  3443                           ;zigbee.c: 315: break;
  3444  00284C  0012               	return	
  3445  00284E                     
  3446                           ;zigbee.c: 318: {
  3447                           ;zigbee.c: 319: temp=0;
  3448  00284E  0E00               	movlw	0
  3449  002850  0101               	movlb	1	; () banked
  3450  002852  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3451                           
  3452                           ;zigbee.c: 320: temp = temp & (!0x01);
  3453  002854  0E00               	movlw	0
  3454  002856  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;zigbee.c: 321: temp = temp | 0x02;
  3458  002858  512C               	movf	set_reception_mode@temp& (0+255),w,b
  3459  00285A  0902               	iorlw	2
  3460  00285C  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;zigbee.c: 322: write_ZIGBEE_short(0x00, temp);
  3464  00285E  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3465  002862  0E00               	movlw	0
  3466  002864  ECF6  F017         	call	_write_ZIGBEE_short
  3467                           
  3468                           ;zigbee.c: 323: }
  3469                           ;zigbee.c: 324: break;
  3470  002868  0012               	return	
  3471  00286A                     
  3472                           ;zigbee.c: 326: {
  3473                           ;zigbee.c: 327: temp=0;
  3474  00286A  0E00               	movlw	0
  3475  00286C  0101               	movlb	1	; () banked
  3476  00286E  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3477                           
  3478                           ;zigbee.c: 328: temp = temp & (!0x02);
  3479  002870  0E00               	movlw	0
  3480  002872  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;zigbee.c: 329: temp = temp | 0x01;
  3484  002874  512C               	movf	set_reception_mode@temp& (0+255),w,b
  3485  002876  0901               	iorlw	1
  3486  002878  6F2C               	movwf	set_reception_mode@temp& (0+255),b
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;zigbee.c: 330: write_ZIGBEE_short(0x00, temp);
  3490  00287A  C12C  F129         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3491  00287E  0E00               	movlw	0
  3492  002880  ECF6  F017         	call	_write_ZIGBEE_short
  3493                           
  3494                           ;zigbee.c: 333: }
  3495                           
  3496                           ;zigbee.c: 331: }
  3497                           ;zigbee.c: 332: break;
  3498  002884  0012               	return	
  3499  002886                     l471:
  3500  002886  0101               	movlb	1	; () banked
  3501  002888  512B               	movf	set_reception_mode@r_mode& (0+255),w,b
  3502                           
  3503                           ; Switch size 1, requested type "space"
  3504                           ; Number of cases is 3, Range of values is 1 to 3
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte           10     6 (average)
  3508                           ;	Chosen strategy is simple_byte
  3509  00288A  0A01               	xorlw	1	; case 1
  3510  00288C  B4D8               	btfsc	status,2,c
  3511  00288E  D7D5               	goto	l472
  3512  002890  0A03               	xorlw	3	; case 2
  3513  002892  B4D8               	btfsc	status,2,c
  3514  002894  D7DC               	goto	l474
  3515  002896  0A01               	xorlw	1	; case 3
  3516  002898  A4D8               	btfss	status,2,c
  3517  00289A  0012               	return	
  3518  00289C  D7E6               	goto	l475
  3519  00289E                     __end_of_set_reception_mode:
  3520                           	opt stack 0
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           prodh	equ	0xFF4
  3526                           prodl	equ	0xFF3
  3527                           intcon	equ	0xFF2
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           indf1	equ	0xFE7
  3531                           postdec1	equ	0xFE5
  3532                           fsr1h	equ	0xFE2
  3533                           fsr1l	equ	0xFE1
  3534                           indf2	equ	0xFDF
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           
  3539 ;; *************** function _set_long_address *****************
  3540 ;; Defined at:
  3541 ;;		line 63 in file "zigbee.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3544 ;;		 -> ADDRESS_long_2(8), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  i               1    6[BANK1 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3556 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;Total ram usage:        3 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:   10
  3563 ;; This function calls:
  3564 ;;		_write_ZIGBEE_short
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text10
  3571  002E16                     __ptext10:
  3572                           	opt stack 0
  3573  002E16                     _set_long_address:
  3574                           	opt stack 20
  3575                           
  3576                           ;zigbee.c: 64: unsigned char i = 0;
  3577                           
  3578                           ;incstack = 0
  3579  002E16  0E00               	movlw	0
  3580  002E18  0101               	movlb	1	; () banked
  3581  002E1A  6F2D               	movwf	set_long_address@i& (0+255),b
  3582                           
  3583                           ;zigbee.c: 65: for(i = 0; i < 8; i++)
  3584  002E1C  0E00               	movlw	0
  3585  002E1E  6F2D               	movwf	set_long_address@i& (0+255),b
  3586  002E20                     l5097:
  3587                           
  3588                           ; BSR set to: 1
  3589  002E20  0E07               	movlw	7
  3590  002E22  652D               	cpfsgt	set_long_address@i& (0+255),b
  3591  002E24  D001               	goto	l390
  3592  002E26  0012               	return	
  3593  002E28                     l390:
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;zigbee.c: 66: write_ZIGBEE_short(0x05 + i, address[i]);
  3597                           
  3598                           ; BSR set to: 1
  3599  002E28  512D               	movf	set_long_address@i& (0+255),w,b
  3600  002E2A  0D01               	mullw	1
  3601  002E2C  50F3               	movf	prodl,w,c
  3602  002E2E  252B               	addwf	set_long_address@address& (0+255),w,b
  3603  002E30  6ED9               	movwf	fsr2l,c
  3604  002E32  50F4               	movf	prodh,w,c
  3605  002E34  212C               	addwfc	(set_long_address@address+1)& (0+255),w,b
  3606  002E36  6EDA               	movwf	fsr2h,c
  3607  002E38  50DF               	movf	indf2,w,c
  3608  002E3A  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3609  002E3C  512D               	movf	set_long_address@i& (0+255),w,b
  3610  002E3E  0F05               	addlw	5
  3611  002E40  ECF6  F017         	call	_write_ZIGBEE_short
  3612  002E44  0101               	movlb	1	; () banked
  3613  002E46  2B2D               	incf	set_long_address@i& (0+255),f,b
  3614  002E48  D7EB               	goto	l5097
  3615  002E4A                     __end_of_set_long_address:
  3616                           	opt stack 0
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           postdec1	equ	0xFE5
  3628                           fsr1h	equ	0xFE2
  3629                           fsr1l	equ	0xFE1
  3630                           indf2	equ	0xFDF
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _set_frame_format_filter *****************
  3636 ;; Defined at:
  3637 ;;		line 263 in file "zigbee.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  fff_mode        1    wreg     unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  fff_mode        1    4[BANK1 ] unsigned char 
  3642 ;;  temp            1    5[BANK1 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        2 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:   10
  3659 ;; This function calls:
  3660 ;;		_write_ZIGBEE_short
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text11
  3667  0026A4                     __ptext11:
  3668                           	opt stack 0
  3669  0026A4                     _set_frame_format_filter:
  3670                           	opt stack 20
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;incstack = 0
  3674                           ;set_frame_format_filter@fff_mode stored from wreg
  3675  0026A4  0101               	movlb	1	; () banked
  3676  0026A6  6F2B               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  3677                           
  3678                           ;zigbee.c: 265: unsigned char temp = 0;
  3679  0026A8  0E00               	movlw	0
  3680  0026AA  0101               	movlb	1	; () banked
  3681  0026AC  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3682                           
  3683                           ;zigbee.c: 266: switch(fff_mode)
  3684  0026AE  D034               	goto	l462
  3685  0026B0                     
  3686                           ; BSR set to: 1
  3687                           ;zigbee.c: 269: {
  3688                           ;zigbee.c: 270: temp=0;
  3689                           
  3690                           ; BSR set to: 1
  3691  0026B0  0E00               	movlw	0
  3692  0026B2  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3693                           
  3694                           ;zigbee.c: 271: temp = temp & (!0x0E);
  3695  0026B4  0E00               	movlw	0
  3696  0026B6  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3697                           
  3698                           ; BSR set to: 1
  3699                           ;zigbee.c: 272: write_ZIGBEE_short(0x0D, temp);
  3700  0026B8  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3701  0026BC  0E0D               	movlw	13
  3702  0026BE  ECF6  F017         	call	_write_ZIGBEE_short
  3703                           
  3704                           ;zigbee.c: 273: }
  3705                           ;zigbee.c: 274: break;
  3706  0026C2  0012               	return	
  3707  0026C4                     
  3708                           ;zigbee.c: 276: {
  3709                           ;zigbee.c: 277: temp=0;
  3710  0026C4  0E00               	movlw	0
  3711  0026C6  0101               	movlb	1	; () banked
  3712  0026C8  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3713                           
  3714                           ;zigbee.c: 278: temp = temp & (!0x06);
  3715  0026CA  0E00               	movlw	0
  3716  0026CC  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;zigbee.c: 279: temp = temp | 0x08;
  3720  0026CE  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3721  0026D0  0908               	iorlw	8
  3722  0026D2  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3723                           
  3724                           ; BSR set to: 1
  3725                           ;zigbee.c: 280: write_ZIGBEE_short(0x0D, temp);
  3726  0026D4  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3727  0026D8  0E0D               	movlw	13
  3728  0026DA  ECF6  F017         	call	_write_ZIGBEE_short
  3729                           
  3730                           ;zigbee.c: 281: }
  3731                           ;zigbee.c: 282: break;
  3732  0026DE  0012               	return	
  3733  0026E0                     
  3734                           ;zigbee.c: 284: {
  3735                           ;zigbee.c: 285: temp=0;
  3736  0026E0  0E00               	movlw	0
  3737  0026E2  0101               	movlb	1	; () banked
  3738  0026E4  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3739                           
  3740                           ;zigbee.c: 286: temp = temp & (!0x0A);
  3741  0026E6  0E00               	movlw	0
  3742  0026E8  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;zigbee.c: 287: temp = temp | 0x04;
  3746  0026EA  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3747  0026EC  0904               	iorlw	4
  3748  0026EE  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;zigbee.c: 288: write_ZIGBEE_short(0x0D, temp);
  3752  0026F0  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3753  0026F4  0E0D               	movlw	13
  3754  0026F6  ECF6  F017         	call	_write_ZIGBEE_short
  3755                           
  3756                           ;zigbee.c: 289: }
  3757                           ;zigbee.c: 290: break;
  3758  0026FA  0012               	return	
  3759  0026FC                     
  3760                           ;zigbee.c: 293: {
  3761                           ;zigbee.c: 294: temp=0;
  3762  0026FC  0E00               	movlw	0
  3763  0026FE  0101               	movlb	1	; () banked
  3764  002700  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3765                           
  3766                           ;zigbee.c: 295: temp = temp & (!0x0C);
  3767  002702  0E00               	movlw	0
  3768  002704  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3769                           
  3770                           ; BSR set to: 1
  3771                           ;zigbee.c: 296: temp = temp | 0x02;
  3772  002706  512C               	movf	set_frame_format_filter@temp& (0+255),w,b
  3773  002708  0902               	iorlw	2
  3774  00270A  6F2C               	movwf	set_frame_format_filter@temp& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;zigbee.c: 297: write_ZIGBEE_short(0x0D, temp);
  3778  00270C  C12C  F129         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3779  002710  0E0D               	movlw	13
  3780  002712  ECF6  F017         	call	_write_ZIGBEE_short
  3781                           
  3782                           ;zigbee.c: 300: }
  3783                           
  3784                           ;zigbee.c: 298: }
  3785                           ;zigbee.c: 299: break;
  3786  002716  0012               	return	
  3787  002718                     l462:
  3788  002718  0101               	movlb	1	; () banked
  3789  00271A  512B               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  3790                           
  3791                           ; Switch size 1, requested type "space"
  3792                           ; Number of cases is 4, Range of values is 1 to 4
  3793                           ; switch strategies available:
  3794                           ; Name         Instructions Cycles
  3795                           ; simple_byte           13     7 (average)
  3796                           ;	Chosen strategy is simple_byte
  3797  00271C  0A01               	xorlw	1	; case 1
  3798  00271E  B4D8               	btfsc	status,2,c
  3799  002720  D7C7               	goto	l463
  3800  002722  0A03               	xorlw	3	; case 2
  3801  002724  B4D8               	btfsc	status,2,c
  3802  002726  D7CE               	goto	l465
  3803  002728  0A01               	xorlw	1	; case 3
  3804  00272A  B4D8               	btfsc	status,2,c
  3805  00272C  D7D9               	goto	l466
  3806  00272E  0A07               	xorlw	7	; case 4
  3807  002730  A4D8               	btfss	status,2,c
  3808  002732  0012               	return	
  3809  002734  D7E3               	goto	l467
  3810  002736                     __end_of_set_frame_format_filter:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           indf1	equ	0xFE7
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           indf2	equ	0xFDF
  3826                           fsr2h	equ	0xFDA
  3827                           fsr2l	equ	0xFD9
  3828                           status	equ	0xFD8
  3829                           
  3830 ;; *************** function _set_WAKE_from_pin *****************
  3831 ;; Defined at:
  3832 ;;		line 58 in file "zigbee.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:   10
  3853 ;; This function calls:
  3854 ;;		_write_ZIGBEE_short
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text12
  3861  003160                     __ptext12:
  3862                           	opt stack 0
  3863  003160                     _set_WAKE_from_pin:
  3864                           	opt stack 20
  3865                           
  3866                           ;zigbee.c: 59: PORTFbits.RF4=0;
  3867                           
  3868                           ;incstack = 0
  3869  003160  9885               	bcf	3973,4,c	;volatile
  3870                           
  3871                           ;zigbee.c: 60: write_ZIGBEE_short(0x0D,0x60);
  3872  003162  0E60               	movlw	96
  3873  003164  0101               	movlb	1	; () banked
  3874  003166  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3875  003168  0E0D               	movlw	13
  3876  00316A  ECF6  F017         	call	_write_ZIGBEE_short
  3877                           
  3878                           ;zigbee.c: 61: write_ZIGBEE_short(0x22,0x80);
  3879  00316E  0E80               	movlw	128
  3880  003170  0101               	movlb	1	; () banked
  3881  003172  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3882  003174  0E22               	movlw	34
  3883  003176  ECF6  F017         	call	_write_ZIGBEE_short
  3884  00317A  0012               	return		;funcret
  3885  00317C                     __end_of_set_WAKE_from_pin:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           intcon	equ	0xFF2
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           indf1	equ	0xFE7
  3897                           postdec1	equ	0xFE5
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           indf2	equ	0xFDF
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _set_TX_power *****************
  3906 ;; Defined at:
  3907 ;;		line 252 in file "zigbee.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  power           1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  power           1   10[BANK1 ] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:   10
  3928 ;; This function calls:
  3929 ;;		_write_ZIGBEE_long
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text13
  3936  002C20                     __ptext13:
  3937                           	opt stack 0
  3938  002C20                     _set_TX_power:
  3939                           	opt stack 20
  3940                           
  3941                           ;incstack = 0
  3942                           ;set_TX_power@power stored from wreg
  3943  002C20  0101               	movlb	1	; () banked
  3944  002C22  6F31               	movwf	set_TX_power@power& (0+255),b
  3945                           
  3946                           ;zigbee.c: 253: if((power < 0) || (power > 31))
  3947  002C24  0E1F               	movlw	31
  3948  002C26  0101               	movlb	1	; () banked
  3949  002C28  6531               	cpfsgt	set_TX_power@power& (0+255),b
  3950  002C2A  D002               	goto	l458
  3951                           
  3952                           ; BSR set to: 1
  3953                           ;zigbee.c: 254: power = 31;
  3954  002C2C  0E1F               	movlw	31
  3955  002C2E  6F31               	movwf	set_TX_power@power& (0+255),b
  3956  002C30                     l458:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;zigbee.c: 256: power = 31 - power;
  3960                           
  3961                           ; BSR set to: 1
  3962  002C30  5131               	movf	set_TX_power@power& (0+255),w,b
  3963  002C32  0800               	sublw	0
  3964  002C34  0F1F               	addlw	31
  3965  002C36  6F31               	movwf	set_TX_power@power& (0+255),b
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;zigbee.c: 257: power = ((power & 0b00011111) << 3) & 0b11111000;
  3969  002C38  C131  F130         	movff	set_TX_power@power,??_set_TX_power
  3970  002C3C  0E1F               	movlw	31
  3971  002C3E  1730               	andwf	??_set_TX_power& (0+255),f,b
  3972  002C40  90D8               	bcf	status,0,c
  3973  002C42  3730               	rlcf	??_set_TX_power& (0+255),f,b
  3974  002C44  90D8               	bcf	status,0,c
  3975  002C46  3730               	rlcf	??_set_TX_power& (0+255),f,b
  3976  002C48  90D8               	bcf	status,0,c
  3977  002C4A  3530               	rlcf	??_set_TX_power& (0+255),w,b
  3978  002C4C  0BF8               	andlw	248
  3979  002C4E  6F31               	movwf	set_TX_power@power& (0+255),b
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;zigbee.c: 258: write_ZIGBEE_long(0x203, power);
  3983  002C50  0E02               	movlw	2
  3984  002C52  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  3985  002C54  0E03               	movlw	3
  3986  002C56  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  3987  002C58  C131  F12B         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  3988  002C5C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  3989  002C60  0012               	return		;funcret
  3990  002C62                     __end_of_set_TX_power:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           prodh	equ	0xFF4
  3997                           prodl	equ	0xFF3
  3998                           intcon	equ	0xFF2
  3999                           postinc0	equ	0xFEE
  4000                           wreg	equ	0xFE8
  4001                           indf1	equ	0xFE7
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _set_PAN_ID *****************
  4011 ;; Defined at:
  4012 ;;		line 72 in file "zigbee.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  address         2    4[BANK1 ] PTR unsigned char 
  4015 ;;		 -> PAN_ID_2(2), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   10
  4034 ;; This function calls:
  4035 ;;		_write_ZIGBEE_short
  4036 ;; This function is called by:
  4037 ;;		_main
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text14
  4042  002EAA                     __ptext14:
  4043                           	opt stack 0
  4044  002EAA                     _set_PAN_ID:
  4045                           	opt stack 20
  4046                           
  4047                           ;zigbee.c: 73: write_ZIGBEE_short(0x01, address[0]);
  4048                           
  4049                           ;incstack = 0
  4050  002EAA  C12B  FFD9         	movff	set_PAN_ID@address,fsr2l
  4051  002EAE  C12C  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  4052  002EB2  50DF               	movf	indf2,w,c
  4053  002EB4  0101               	movlb	1	; () banked
  4054  002EB6  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4055  002EB8  0E01               	movlw	1
  4056  002EBA  ECF6  F017         	call	_write_ZIGBEE_short
  4057                           
  4058                           ;zigbee.c: 74: write_ZIGBEE_short(0x02, address[1]);
  4059  002EBE  0101               	movlb	1	; () banked
  4060  002EC0  EE20 F001          	lfsr	2,1
  4061  002EC4  512B               	movf	set_PAN_ID@address& (0+255),w,b
  4062  002EC6  26D9               	addwf	fsr2l,f,c
  4063  002EC8  512C               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  4064  002ECA  22DA               	addwfc	fsr2h,f,c
  4065  002ECC  50DF               	movf	indf2,w,c
  4066  002ECE  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4067  002ED0  0E02               	movlw	2
  4068  002ED2  ECF6  F017         	call	_write_ZIGBEE_short
  4069  002ED6  0012               	return		;funcret
  4070  002ED8                     __end_of_set_PAN_ID:
  4071                           	opt stack 0
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           indf1	equ	0xFE7
  4082                           postdec1	equ	0xFE5
  4083                           fsr1h	equ	0xFE2
  4084                           fsr1l	equ	0xFE1
  4085                           indf2	equ	0xFDF
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _pin_reset *****************
  4091 ;; Defined at:
  4092 ;;		line 47 in file "zigbee.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    9
  4113 ;; This function calls:
  4114 ;;		_Delay_ms
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text15
  4121  0030A0                     __ptext15:
  4122                           	opt stack 0
  4123  0030A0                     _pin_reset:
  4124                           	opt stack 21
  4125                           
  4126                           ;zigbee.c: 48: PORTCbits.RC1=0;
  4127                           
  4128                           ;incstack = 0
  4129  0030A0  9282               	bcf	3970,1,c	;volatile
  4130                           
  4131                           ;zigbee.c: 49: Delay_ms(10);
  4132  0030A2  0E00               	movlw	0
  4133  0030A4  0101               	movlb	1	; () banked
  4134  0030A6  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4135  0030A8  0E0A               	movlw	10
  4136  0030AA  6F27               	movwf	Delay_ms@time& (0+255),b
  4137  0030AC  ECBE  F018         	call	_Delay_ms	;wreg free
  4138                           
  4139                           ;zigbee.c: 50: PORTCbits.RC1=1;
  4140  0030B0  8282               	bsf	3970,1,c	;volatile
  4141                           
  4142                           ;zigbee.c: 51: Delay_ms(10);
  4143  0030B2  0E00               	movlw	0
  4144  0030B4  0101               	movlb	1	; () banked
  4145  0030B6  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4146  0030B8  0E0A               	movlw	10
  4147  0030BA  6F27               	movwf	Delay_ms@time& (0+255),b
  4148  0030BC  ECBE  F018         	call	_Delay_ms	;wreg free
  4149  0030C0  0012               	return		;funcret
  4150  0030C2                     __end_of_pin_reset:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           indf1	equ	0xFE7
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  4171 ;; Defined at:
  4172 ;;		line 236 in file "zigbee.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  temp            1    4[BANK1 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        1 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:   10
  4193 ;; This function calls:
  4194 ;;		_write_ZIGBEE_short
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text16
  4201  002D64                     __ptext16:
  4202                           	opt stack 0
  4203  002D64                     _nonbeacon_PAN_coordinator_device:
  4204                           	opt stack 20
  4205                           
  4206                           ;zigbee.c: 237: unsigned char temp = 0;
  4207                           
  4208                           ;incstack = 0
  4209  002D64  0E00               	movlw	0
  4210  002D66  0101               	movlb	1	; () banked
  4211  002D68  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4212                           
  4213                           ;zigbee.c: 239: temp=0;
  4214  002D6A  0E00               	movlw	0
  4215  002D6C  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4216                           
  4217                           ; BSR set to: 1
  4218                           ;zigbee.c: 240: temp = temp | 0x08;
  4219  002D6E  512B               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4220  002D70  0908               	iorlw	8
  4221  002D72  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4222                           
  4223                           ; BSR set to: 1
  4224                           ;zigbee.c: 241: write_ZIGBEE_short(0x00, temp);
  4225  002D74  C12B  F129         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4226  002D78  0E00               	movlw	0
  4227  002D7A  ECF6  F017         	call	_write_ZIGBEE_short
  4228                           
  4229                           ;zigbee.c: 243: temp=0;
  4230  002D7E  0E00               	movlw	0
  4231  002D80  0101               	movlb	1	; () banked
  4232  002D82  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4233                           
  4234                           ; BSR set to: 1
  4235                           ;zigbee.c: 244: temp = temp & 0xDF;
  4236  002D84  512B               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4237  002D86  0BDF               	andlw	223
  4238  002D88  6F2B               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4239                           
  4240                           ;zigbee.c: 245: write_ZIGBEE_short(0x11, temp);
  4241  002D8A  C12B  F129         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4242  002D8E  0E11               	movlw	17
  4243  002D90  ECF6  F017         	call	_write_ZIGBEE_short
  4244                           
  4245                           ;zigbee.c: 247: write_ZIGBEE_short(0x10, 0xFF);
  4246  002D94  0EFF               	movlw	255
  4247  002D96  0101               	movlb	1	; () banked
  4248  002D98  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4249  002D9A  0E10               	movlw	16
  4250  002D9C  ECF6  F017         	call	_write_ZIGBEE_short
  4251  002DA0  0012               	return		;funcret
  4252  002DA2                     __end_of_nonbeacon_PAN_coordinator_device:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           prodh	equ	0xFF4
  4259                           prodl	equ	0xFF3
  4260                           intcon	equ	0xFF2
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           indf1	equ	0xFE7
  4264                           postdec1	equ	0xFE5
  4265                           fsr1h	equ	0xFE2
  4266                           fsr1l	equ	0xFE1
  4267                           indf2	equ	0xFDF
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function _lcd_off_cursor *****************
  4273 ;; Defined at:
  4274 ;;		line 405 in file "13_April_WaterMeter_Main.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:   10
  4295 ;; This function calls:
  4296 ;;		_LcdCmd
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text17
  4303  0032C2                     __ptext17:
  4304                           	opt stack 0
  4305  0032C2                     _lcd_off_cursor:
  4306                           	opt stack 20
  4307                           
  4308                           ;13_April_WaterMeter_Main.c: 407: LcdCmd(0x0C);
  4309                           
  4310                           ;incstack = 0
  4311  0032C2  0E0C               	movlw	12
  4312  0032C4  EC82  F018         	call	_LcdCmd
  4313  0032C8  0012               	return		;funcret
  4314  0032CA                     __end_of_lcd_off_cursor:
  4315                           	opt stack 0
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           prodh	equ	0xFF4
  4321                           prodl	equ	0xFF3
  4322                           intcon	equ	0xFF2
  4323                           postinc0	equ	0xFEE
  4324                           wreg	equ	0xFE8
  4325                           indf1	equ	0xFE7
  4326                           postdec1	equ	0xFE5
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  4335 ;; Defined at:
  4336 ;;		line 76 in file "zigbee.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:   12
  4357 ;; This function calls:
  4358 ;;		_RF_reset
  4359 ;;		_enable_interrupt
  4360 ;;		_init_ZIGBEE_basic
  4361 ;;		_pin_wake
  4362 ;;		_set_CCA_mode
  4363 ;;		_set_RSSI_mode
  4364 ;;		_set_channel
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text18
  4371  002FC8                     __ptext18:
  4372                           	opt stack 0
  4373  002FC8                     _init_ZIGBEE_nonbeacon:
  4374                           	opt stack 18
  4375                           
  4376                           ;zigbee.c: 77: init_ZIGBEE_basic();
  4377                           
  4378                           ;incstack = 0
  4379  002FC8  EC07  F013         	call	_init_ZIGBEE_basic	;wreg free
  4380                           
  4381                           ;zigbee.c: 78: set_CCA_mode(1);
  4382  002FCC  0E01               	movlw	1
  4383  002FCE  EC4C  F012         	call	_set_CCA_mode
  4384                           
  4385                           ;zigbee.c: 79: set_RSSI_mode(2);
  4386  002FD2  0E02               	movlw	2
  4387  002FD4  EC31  F016         	call	_set_RSSI_mode
  4388                           
  4389                           ;zigbee.c: 80: enable_interrupt();
  4390  002FD8  EC41  F019         	call	_enable_interrupt	;wreg free
  4391                           
  4392                           ;zigbee.c: 81: set_channel(15);
  4393  002FDC  0E0F               	movlw	15
  4394  002FDE  ECF2  F00E         	call	_set_channel
  4395                           
  4396                           ;zigbee.c: 82: pin_wake();
  4397  002FE2  EC16  F019         	call	_pin_wake	;wreg free
  4398                           
  4399                           ;zigbee.c: 83: RF_reset();
  4400  002FE6  EC95  F017         	call	_RF_reset	;wreg free
  4401  002FEA  0012               	return		;funcret
  4402  002FEC                     __end_of_init_ZIGBEE_nonbeacon:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           intcon	equ	0xFF2
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _set_channel *****************
  4423 ;; Defined at:
  4424 ;;		line 172 in file "zigbee.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  channel_numb    1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  channel_numb    1    9[BANK1 ] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:   11
  4445 ;; This function calls:
  4446 ;;		_RF_reset
  4447 ;;		_write_ZIGBEE_long
  4448 ;; This function is called by:
  4449 ;;		_init_ZIGBEE_nonbeacon
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text19
  4454  001DE4                     __ptext19:
  4455                           	opt stack 0
  4456  001DE4                     _set_channel:
  4457                           	opt stack 18
  4458                           
  4459                           ;incstack = 0
  4460                           ;set_channel@channel_number stored from wreg
  4461  001DE4  0101               	movlb	1	; () banked
  4462  001DE6  6F30               	movwf	set_channel@channel_number& (0+255),b
  4463                           
  4464                           ;zigbee.c: 174: if((channel_number > 26) || (channel_number < 11))
  4465  001DE8  0E1B               	movlw	27
  4466  001DEA  0101               	movlb	1	; () banked
  4467  001DEC  6130               	cpfslt	set_channel@channel_number& (0+255),b
  4468  001DEE  D003               	goto	u3540
  4469                           
  4470                           ; BSR set to: 1
  4471  001DF0  0E0B               	movlw	11
  4472  001DF2  6130               	cpfslt	set_channel@channel_number& (0+255),b
  4473  001DF4  D0A2               	goto	l431
  4474  001DF6                     u3540:
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;zigbee.c: 175: channel_number = 11;
  4478                           
  4479                           ; BSR set to: 1
  4480  001DF6  0E0B               	movlw	11
  4481  001DF8  6F30               	movwf	set_channel@channel_number& (0+255),b
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;zigbee.c: 177: switch(channel_number)
  4485  001DFA  D09F               	goto	l431
  4486  001DFC                     
  4487                           ; BSR set to: 1
  4488                           ;zigbee.c: 180: write_ZIGBEE_long(0x200, 0x02);
  4489                           
  4490                           ; BSR set to: 1
  4491  001DFC  0E02               	movlw	2
  4492  001DFE  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4493  001E00  0E00               	movlw	0
  4494  001E02  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4495  001E04  0E02               	movlw	2
  4496  001E06  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4497  001E08  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4498                           
  4499                           ;zigbee.c: 181: break;
  4500  001E0C  D0C8               	goto	l433
  4501  001E0E                     
  4502                           ;zigbee.c: 184: write_ZIGBEE_long(0x200, 0x12);
  4503  001E0E  0E02               	movlw	2
  4504  001E10  0101               	movlb	1	; () banked
  4505  001E12  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4506  001E14  0E00               	movlw	0
  4507  001E16  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4508  001E18  0E12               	movlw	18
  4509  001E1A  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4510  001E1C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4511                           
  4512                           ;zigbee.c: 185: break;
  4513  001E20  D0BE               	goto	l433
  4514  001E22                     
  4515                           ;zigbee.c: 188: write_ZIGBEE_long(0x200, 0x22);
  4516  001E22  0E02               	movlw	2
  4517  001E24  0101               	movlb	1	; () banked
  4518  001E26  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4519  001E28  0E00               	movlw	0
  4520  001E2A  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4521  001E2C  0E22               	movlw	34
  4522  001E2E  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4523  001E30  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4524                           
  4525                           ;zigbee.c: 189: break;
  4526  001E34  D0B4               	goto	l433
  4527  001E36                     
  4528                           ;zigbee.c: 191: write_ZIGBEE_long(0x200, 0x32);
  4529  001E36  0E02               	movlw	2
  4530  001E38  0101               	movlb	1	; () banked
  4531  001E3A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4532  001E3C  0E00               	movlw	0
  4533  001E3E  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4534  001E40  0E32               	movlw	50
  4535  001E42  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4536  001E44  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4537                           
  4538                           ;zigbee.c: 192: break;
  4539  001E48  D0AA               	goto	l433
  4540  001E4A                     
  4541                           ;zigbee.c: 194: write_ZIGBEE_long(0x200, 0x42);
  4542  001E4A  0E02               	movlw	2
  4543  001E4C  0101               	movlb	1	; () banked
  4544  001E4E  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4545  001E50  0E00               	movlw	0
  4546  001E52  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4547  001E54  0E42               	movlw	66
  4548  001E56  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4549  001E58  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4550                           
  4551                           ;zigbee.c: 195: break;
  4552  001E5C  D0A0               	goto	l433
  4553  001E5E                     
  4554                           ;zigbee.c: 197: write_ZIGBEE_long(0x200, 0x52);
  4555  001E5E  0E02               	movlw	2
  4556  001E60  0101               	movlb	1	; () banked
  4557  001E62  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4558  001E64  0E00               	movlw	0
  4559  001E66  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4560  001E68  0E52               	movlw	82
  4561  001E6A  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4562  001E6C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4563                           
  4564                           ;zigbee.c: 198: break;
  4565  001E70  D096               	goto	l433
  4566  001E72                     
  4567                           ;zigbee.c: 200: write_ZIGBEE_long(0x200, 0x62);
  4568  001E72  0E02               	movlw	2
  4569  001E74  0101               	movlb	1	; () banked
  4570  001E76  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4571  001E78  0E00               	movlw	0
  4572  001E7A  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4573  001E7C  0E62               	movlw	98
  4574  001E7E  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4575  001E80  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4576                           
  4577                           ;zigbee.c: 201: break;
  4578  001E84  D08C               	goto	l433
  4579  001E86                     
  4580                           ;zigbee.c: 203: write_ZIGBEE_long(0x200, 0x72);
  4581  001E86  0E02               	movlw	2
  4582  001E88  0101               	movlb	1	; () banked
  4583  001E8A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4584  001E8C  0E00               	movlw	0
  4585  001E8E  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4586  001E90  0E72               	movlw	114
  4587  001E92  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4588  001E94  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4589                           
  4590                           ;zigbee.c: 204: break;
  4591  001E98  D082               	goto	l433
  4592  001E9A                     
  4593                           ;zigbee.c: 206: write_ZIGBEE_long(0x200, 0x82);
  4594  001E9A  0E02               	movlw	2
  4595  001E9C  0101               	movlb	1	; () banked
  4596  001E9E  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4597  001EA0  0E00               	movlw	0
  4598  001EA2  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4599  001EA4  0E82               	movlw	130
  4600  001EA6  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4601  001EA8  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4602                           
  4603                           ;zigbee.c: 207: break;
  4604  001EAC  D078               	goto	l433
  4605  001EAE                     
  4606                           ;zigbee.c: 209: write_ZIGBEE_long(0x200, 0x92);
  4607  001EAE  0E02               	movlw	2
  4608  001EB0  0101               	movlb	1	; () banked
  4609  001EB2  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4610  001EB4  0E00               	movlw	0
  4611  001EB6  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4612  001EB8  0E92               	movlw	146
  4613  001EBA  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4614  001EBC  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4615                           
  4616                           ;zigbee.c: 210: break;
  4617  001EC0  D06E               	goto	l433
  4618  001EC2                     
  4619                           ;zigbee.c: 212: write_ZIGBEE_long(0x200, 0xA2);
  4620  001EC2  0E02               	movlw	2
  4621  001EC4  0101               	movlb	1	; () banked
  4622  001EC6  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4623  001EC8  0E00               	movlw	0
  4624  001ECA  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4625  001ECC  0EA2               	movlw	162
  4626  001ECE  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4627  001ED0  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4628                           
  4629                           ;zigbee.c: 213: break;
  4630  001ED4  D064               	goto	l433
  4631  001ED6                     
  4632                           ;zigbee.c: 215: write_ZIGBEE_long(0x200, 0xB2);
  4633  001ED6  0E02               	movlw	2
  4634  001ED8  0101               	movlb	1	; () banked
  4635  001EDA  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4636  001EDC  0E00               	movlw	0
  4637  001EDE  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4638  001EE0  0EB2               	movlw	178
  4639  001EE2  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4640  001EE4  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4641                           
  4642                           ;zigbee.c: 216: break;
  4643  001EE8  D05A               	goto	l433
  4644  001EEA                     
  4645                           ;zigbee.c: 218: write_ZIGBEE_long(0x200, 0xC2);
  4646  001EEA  0E02               	movlw	2
  4647  001EEC  0101               	movlb	1	; () banked
  4648  001EEE  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4649  001EF0  0E00               	movlw	0
  4650  001EF2  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4651  001EF4  0EC2               	movlw	194
  4652  001EF6  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4653  001EF8  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4654                           
  4655                           ;zigbee.c: 219: break;
  4656  001EFC  D050               	goto	l433
  4657  001EFE                     
  4658                           ;zigbee.c: 221: write_ZIGBEE_long(0x200, 0xD2);
  4659  001EFE  0E02               	movlw	2
  4660  001F00  0101               	movlb	1	; () banked
  4661  001F02  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4662  001F04  0E00               	movlw	0
  4663  001F06  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4664  001F08  0ED2               	movlw	210
  4665  001F0A  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4666  001F0C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4667                           
  4668                           ;zigbee.c: 222: break;
  4669  001F10  D046               	goto	l433
  4670  001F12                     
  4671                           ;zigbee.c: 224: write_ZIGBEE_long(0x200, 0xE2);
  4672  001F12  0E02               	movlw	2
  4673  001F14  0101               	movlb	1	; () banked
  4674  001F16  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4675  001F18  0E00               	movlw	0
  4676  001F1A  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4677  001F1C  0EE2               	movlw	226
  4678  001F1E  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4679  001F20  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4680                           
  4681                           ;zigbee.c: 225: break;
  4682  001F24  D03C               	goto	l433
  4683  001F26                     
  4684                           ;zigbee.c: 227: write_ZIGBEE_long(0x200, 0xF2);
  4685  001F26  0E02               	movlw	2
  4686  001F28  0101               	movlb	1	; () banked
  4687  001F2A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4688  001F2C  0E00               	movlw	0
  4689  001F2E  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  4690  001F30  0EF2               	movlw	242
  4691  001F32  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4692  001F34  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  4693                           
  4694                           ;zigbee.c: 229: }
  4695                           
  4696                           ;zigbee.c: 228: break;
  4697  001F38  D032               	goto	l433
  4698  001F3A                     l431:
  4699  001F3A  0101               	movlb	1	; () banked
  4700  001F3C  5130               	movf	set_channel@channel_number& (0+255),w,b
  4701                           
  4702                           ; Switch size 1, requested type "space"
  4703                           ; Number of cases is 16, Range of values is 11 to 26
  4704                           ; switch strategies available:
  4705                           ; Name         Instructions Cycles
  4706                           ; simple_byte           49    25 (average)
  4707                           ;	Chosen strategy is simple_byte
  4708  001F3E  0A0B               	xorlw	11	; case 11
  4709  001F40  B4D8               	btfsc	status,2,c
  4710  001F42  D75C               	goto	l432
  4711  001F44  0A07               	xorlw	7	; case 12
  4712  001F46  B4D8               	btfsc	status,2,c
  4713  001F48  D762               	goto	l434
  4714  001F4A  0A01               	xorlw	1	; case 13
  4715  001F4C  B4D8               	btfsc	status,2,c
  4716  001F4E  D769               	goto	l435
  4717  001F50  0A03               	xorlw	3	; case 14
  4718  001F52  B4D8               	btfsc	status,2,c
  4719  001F54  D770               	goto	l436
  4720  001F56  0A01               	xorlw	1	; case 15
  4721  001F58  B4D8               	btfsc	status,2,c
  4722  001F5A  D777               	goto	l437
  4723  001F5C  0A1F               	xorlw	31	; case 16
  4724  001F5E  B4D8               	btfsc	status,2,c
  4725  001F60  D77E               	goto	l438
  4726  001F62  0A01               	xorlw	1	; case 17
  4727  001F64  B4D8               	btfsc	status,2,c
  4728  001F66  D785               	goto	l439
  4729  001F68  0A03               	xorlw	3	; case 18
  4730  001F6A  B4D8               	btfsc	status,2,c
  4731  001F6C  D78C               	goto	l440
  4732  001F6E  0A01               	xorlw	1	; case 19
  4733  001F70  B4D8               	btfsc	status,2,c
  4734  001F72  D793               	goto	l441
  4735  001F74  0A07               	xorlw	7	; case 20
  4736  001F76  B4D8               	btfsc	status,2,c
  4737  001F78  D79A               	goto	l442
  4738  001F7A  0A01               	xorlw	1	; case 21
  4739  001F7C  B4D8               	btfsc	status,2,c
  4740  001F7E  D7A1               	goto	l443
  4741  001F80  0A03               	xorlw	3	; case 22
  4742  001F82  B4D8               	btfsc	status,2,c
  4743  001F84  D7A8               	goto	l444
  4744  001F86  0A01               	xorlw	1	; case 23
  4745  001F88  B4D8               	btfsc	status,2,c
  4746  001F8A  D7AF               	goto	l445
  4747  001F8C  0A0F               	xorlw	15	; case 24
  4748  001F8E  B4D8               	btfsc	status,2,c
  4749  001F90  D7B6               	goto	l446
  4750  001F92  0A01               	xorlw	1	; case 25
  4751  001F94  B4D8               	btfsc	status,2,c
  4752  001F96  D7BD               	goto	l447
  4753  001F98  0A03               	xorlw	3	; case 26
  4754  001F9A  B4D8               	btfsc	status,2,c
  4755  001F9C  D7C4               	goto	l448
  4756  001F9E                     l433:
  4757                           
  4758                           ;zigbee.c: 230: RF_reset();
  4759                           
  4760                           ; BSR set to: 1
  4761  001F9E  EC95  F017         	call	_RF_reset	;wreg free
  4762  001FA2  0012               	return		;funcret
  4763  001FA4                     __end_of_set_channel:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           intcon	equ	0xFF2
  4772                           postinc0	equ	0xFEE
  4773                           wreg	equ	0xFE8
  4774                           indf1	equ	0xFE7
  4775                           postdec1	equ	0xFE5
  4776                           fsr1h	equ	0xFE2
  4777                           fsr1l	equ	0xFE1
  4778                           indf2	equ	0xFDF
  4779                           fsr2h	equ	0xFDA
  4780                           fsr2l	equ	0xFD9
  4781                           status	equ	0xFD8
  4782                           
  4783 ;; *************** function _RF_reset *****************
  4784 ;; Defined at:
  4785 ;;		line 53 in file "zigbee.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:   10
  4806 ;; This function calls:
  4807 ;;		_Delay_ms
  4808 ;;		_write_ZIGBEE_short
  4809 ;; This function is called by:
  4810 ;;		_init_ZIGBEE_nonbeacon
  4811 ;;		_set_channel
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text20
  4817  002F2A                     __ptext20:
  4818                           	opt stack 0
  4819  002F2A                     _RF_reset:
  4820                           	opt stack 18
  4821                           
  4822                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,0x04);
  4823                           
  4824                           ;incstack = 0
  4825  002F2A  0E04               	movlw	4
  4826  002F2C  0101               	movlb	1	; () banked
  4827  002F2E  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4828  002F30  0E36               	movlw	54
  4829  002F32  ECF6  F017         	call	_write_ZIGBEE_short
  4830                           
  4831                           ;zigbee.c: 55: write_ZIGBEE_short(0x36,(!0x04));
  4832  002F36  0E00               	movlw	0
  4833  002F38  0101               	movlb	1	; () banked
  4834  002F3A  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4835  002F3C  0E36               	movlw	54
  4836  002F3E  ECF6  F017         	call	_write_ZIGBEE_short
  4837                           
  4838                           ;zigbee.c: 56: Delay_ms(20);
  4839  002F42  0E00               	movlw	0
  4840  002F44  0101               	movlb	1	; () banked
  4841  002F46  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  4842  002F48  0E14               	movlw	20
  4843  002F4A  6F27               	movwf	Delay_ms@time& (0+255),b
  4844  002F4C  ECBE  F018         	call	_Delay_ms	;wreg free
  4845  002F50  0012               	return		;funcret
  4846  002F52                     __end_of_RF_reset:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           indf1	equ	0xFE7
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           indf2	equ	0xFDF
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _set_RSSI_mode *****************
  4867 ;; Defined at:
  4868 ;;		line 150 in file "zigbee.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  RSSI_mode       1    wreg     unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  RSSI_mode       1    4[BANK1 ] unsigned char 
  4873 ;;  temp            1    5[BANK1 ] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:   10
  4890 ;; This function calls:
  4891 ;;		_write_ZIGBEE_short
  4892 ;; This function is called by:
  4893 ;;		_init_ZIGBEE_nonbeacon
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text21
  4898  002C62                     __ptext21:
  4899                           	opt stack 0
  4900  002C62                     _set_RSSI_mode:
  4901                           	opt stack 19
  4902                           
  4903                           ;incstack = 0
  4904                           ;set_RSSI_mode@RSSI_mode stored from wreg
  4905  002C62  0101               	movlb	1	; () banked
  4906  002C64  6F2B               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  4907                           
  4908                           ;zigbee.c: 152: unsigned char temp = 0;
  4909  002C66  0E00               	movlw	0
  4910  002C68  0101               	movlb	1	; () banked
  4911  002C6A  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4912                           
  4913                           ;zigbee.c: 153: switch(RSSI_mode)
  4914  002C6C  D012               	goto	l418
  4915  002C6E                     
  4916                           ; BSR set to: 1
  4917                           ;zigbee.c: 156: {
  4918                           ;zigbee.c: 157: temp=0;
  4919                           
  4920                           ; BSR set to: 1
  4921  002C6E  0E00               	movlw	0
  4922  002C70  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4923                           
  4924                           ; BSR set to: 1
  4925                           ;zigbee.c: 158: temp = temp | 0x80;
  4926  002C72  512C               	movf	set_RSSI_mode@temp& (0+255),w,b
  4927  002C74  0980               	iorlw	128
  4928  002C76  6F2C               	movwf	set_RSSI_mode@temp& (0+255),b
  4929                           
  4930                           ; BSR set to: 1
  4931                           ;zigbee.c: 159: write_ZIGBEE_short(0x3E, temp);
  4932  002C78  C12C  F129         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  4933  002C7C  0E3E               	movlw	62
  4934  002C7E  ECF6  F017         	call	_write_ZIGBEE_short
  4935                           
  4936                           ;zigbee.c: 160: }
  4937                           ;zigbee.c: 161: break;
  4938  002C82  0012               	return	
  4939  002C84                     
  4940                           ;zigbee.c: 164: write_ZIGBEE_short(0x3E, 0x40);
  4941  002C84  0E40               	movlw	64
  4942  002C86  0101               	movlb	1	; () banked
  4943  002C88  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4944  002C8A  0E3E               	movlw	62
  4945  002C8C  ECF6  F017         	call	_write_ZIGBEE_short
  4946                           
  4947                           ;zigbee.c: 166: }
  4948                           
  4949                           ;zigbee.c: 165: break;
  4950  002C90  0012               	return	
  4951  002C92                     l418:
  4952  002C92  0101               	movlb	1	; () banked
  4953  002C94  512B               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  4954                           
  4955                           ; Switch size 1, requested type "space"
  4956                           ; Number of cases is 2, Range of values is 1 to 2
  4957                           ; switch strategies available:
  4958                           ; Name         Instructions Cycles
  4959                           ; simple_byte            7     4 (average)
  4960                           ;	Chosen strategy is simple_byte
  4961  002C96  0A01               	xorlw	1	; case 1
  4962  002C98  B4D8               	btfsc	status,2,c
  4963  002C9A  D7E9               	goto	l419
  4964  002C9C  0A03               	xorlw	3	; case 2
  4965  002C9E  A4D8               	btfss	status,2,c
  4966  002CA0  0012               	return	
  4967  002CA2  D7F0               	goto	l421
  4968  002CA4                     __end_of_set_RSSI_mode:
  4969                           	opt stack 0
  4970                           tblptru	equ	0xFF8
  4971                           tblptrh	equ	0xFF7
  4972                           tblptrl	equ	0xFF6
  4973                           tablat	equ	0xFF5
  4974                           prodh	equ	0xFF4
  4975                           prodl	equ	0xFF3
  4976                           intcon	equ	0xFF2
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           postdec1	equ	0xFE5
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _set_CCA_mode *****************
  4989 ;; Defined at:
  4990 ;;		line 103 in file "zigbee.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  CCA_mode        1    wreg     unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  CCA_mode        1    4[BANK1 ] unsigned char 
  4995 ;;  temp            1    5[BANK1 ] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;Total ram usage:        2 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:   10
  5012 ;; This function calls:
  5013 ;;		_write_ZIGBEE_short
  5014 ;; This function is called by:
  5015 ;;		_init_ZIGBEE_nonbeacon
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text22
  5020  002498                     __ptext22:
  5021                           	opt stack 0
  5022  002498                     _set_CCA_mode:
  5023                           	opt stack 19
  5024                           
  5025                           ;incstack = 0
  5026                           ;set_CCA_mode@CCA_mode stored from wreg
  5027  002498  0101               	movlb	1	; () banked
  5028  00249A  6F2B               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  5029                           
  5030                           ;zigbee.c: 105: unsigned char temp = 0;
  5031  00249C  0E00               	movlw	0
  5032  00249E  0101               	movlb	1	; () banked
  5033  0024A0  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5034                           
  5035                           ;zigbee.c: 106: switch(CCA_mode)
  5036  0024A2  D051               	goto	l410
  5037  0024A4                     
  5038                           ; BSR set to: 1
  5039                           ;zigbee.c: 109: {
  5040                           ;zigbee.c: 110: temp=0;
  5041                           
  5042                           ; BSR set to: 1
  5043  0024A4  0E00               	movlw	0
  5044  0024A6  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5045                           
  5046                           ; BSR set to: 1
  5047                           ;zigbee.c: 111: temp = temp | 0x80;
  5048  0024A8  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5049  0024AA  0980               	iorlw	128
  5050  0024AC  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5051                           
  5052                           ; BSR set to: 1
  5053                           ;zigbee.c: 112: temp = temp & 0xDF;
  5054  0024AE  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5055  0024B0  0BDF               	andlw	223
  5056  0024B2  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5057                           
  5058                           ; BSR set to: 1
  5059                           ;zigbee.c: 113: write_ZIGBEE_short(0x3A, temp);
  5060  0024B4  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5061  0024B8  0E3A               	movlw	58
  5062  0024BA  ECF6  F017         	call	_write_ZIGBEE_short
  5063                           
  5064                           ;zigbee.c: 114: write_ZIGBEE_short(0x3F, 0x60);
  5065  0024BE  0E60               	movlw	96
  5066  0024C0  0101               	movlb	1	; () banked
  5067  0024C2  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5068  0024C4  0E3F               	movlw	63
  5069  0024C6  ECF6  F017         	call	_write_ZIGBEE_short
  5070                           
  5071                           ;zigbee.c: 115: }
  5072                           ;zigbee.c: 116: break;
  5073  0024CA  0012               	return	
  5074  0024CC                     
  5075                           ;zigbee.c: 119: {
  5076                           ;zigbee.c: 120: temp=0;
  5077  0024CC  0E00               	movlw	0
  5078  0024CE  0101               	movlb	1	; () banked
  5079  0024D0  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;zigbee.c: 121: temp = temp | 0x40;
  5083  0024D2  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5084  0024D4  0940               	iorlw	64
  5085  0024D6  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5086                           
  5087                           ; BSR set to: 1
  5088                           ;zigbee.c: 122: temp = temp & 0x7F;
  5089  0024D8  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5090  0024DA  0B7F               	andlw	127
  5091  0024DC  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5092                           
  5093                           ; BSR set to: 1
  5094                           ;zigbee.c: 123: write_ZIGBEE_short(0x3A, temp);
  5095  0024DE  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5096  0024E2  0E3A               	movlw	58
  5097  0024E4  ECF6  F017         	call	_write_ZIGBEE_short
  5098                           
  5099                           ;zigbee.c: 125: temp=0;
  5100  0024E8  0E00               	movlw	0
  5101  0024EA  0101               	movlb	1	; () banked
  5102  0024EC  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5103                           
  5104                           ; BSR set to: 1
  5105                           ;zigbee.c: 126: temp = temp | 0x38;
  5106  0024EE  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5107  0024F0  0938               	iorlw	56
  5108  0024F2  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;zigbee.c: 127: temp = temp & 0xFB;
  5112  0024F4  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5113  0024F6  0BFB               	andlw	251
  5114  0024F8  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5115                           
  5116                           ;zigbee.c: 128: write_ZIGBEE_short(0x3A, temp);
  5117  0024FA  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5118  0024FE  0E3A               	movlw	58
  5119  002500  ECF6  F017         	call	_write_ZIGBEE_short
  5120                           
  5121                           ;zigbee.c: 129: }
  5122                           ;zigbee.c: 130: break;
  5123  002504  0012               	return	
  5124  002506                     
  5125                           ;zigbee.c: 133: {
  5126                           ;zigbee.c: 134: temp=0;
  5127  002506  0E00               	movlw	0
  5128  002508  0101               	movlb	1	; () banked
  5129  00250A  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;zigbee.c: 135: temp = temp | 0xC0;
  5133  00250C  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5134  00250E  09C0               	iorlw	192
  5135  002510  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5136                           
  5137                           ; BSR set to: 1
  5138                           ;zigbee.c: 136: write_ZIGBEE_short(0x3A, temp);
  5139  002512  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5140  002516  0E3A               	movlw	58
  5141  002518  ECF6  F017         	call	_write_ZIGBEE_short
  5142                           
  5143                           ;zigbee.c: 138: temp=0;
  5144  00251C  0E00               	movlw	0
  5145  00251E  0101               	movlb	1	; () banked
  5146  002520  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;zigbee.c: 139: temp = temp | 0x38;
  5150  002522  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5151  002524  0938               	iorlw	56
  5152  002526  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;zigbee.c: 140: temp = temp & 0xFB;
  5156  002528  512C               	movf	set_CCA_mode@temp& (0+255),w,b
  5157  00252A  0BFB               	andlw	251
  5158  00252C  6F2C               	movwf	set_CCA_mode@temp& (0+255),b
  5159                           
  5160                           ; BSR set to: 1
  5161                           ;zigbee.c: 141: write_ZIGBEE_short(0x3A, temp);
  5162  00252E  C12C  F129         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5163  002532  0E3A               	movlw	58
  5164  002534  ECF6  F017         	call	_write_ZIGBEE_short
  5165                           
  5166                           ;zigbee.c: 143: write_ZIGBEE_short(0x3F, 0x60);
  5167  002538  0E60               	movlw	96
  5168  00253A  0101               	movlb	1	; () banked
  5169  00253C  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5170  00253E  0E3F               	movlw	63
  5171  002540  ECF6  F017         	call	_write_ZIGBEE_short
  5172                           
  5173                           ;zigbee.c: 146: }
  5174                           
  5175                           ;zigbee.c: 144: }
  5176                           ;zigbee.c: 145: break;
  5177  002544  0012               	return	
  5178  002546                     l410:
  5179  002546  0101               	movlb	1	; () banked
  5180  002548  512B               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  5181                           
  5182                           ; Switch size 1, requested type "space"
  5183                           ; Number of cases is 3, Range of values is 1 to 3
  5184                           ; switch strategies available:
  5185                           ; Name         Instructions Cycles
  5186                           ; simple_byte           10     6 (average)
  5187                           ;	Chosen strategy is simple_byte
  5188  00254A  0A01               	xorlw	1	; case 1
  5189  00254C  B4D8               	btfsc	status,2,c
  5190  00254E  D7AA               	goto	l411
  5191  002550  0A03               	xorlw	3	; case 2
  5192  002552  B4D8               	btfsc	status,2,c
  5193  002554  D7BB               	goto	l413
  5194  002556  0A01               	xorlw	1	; case 3
  5195  002558  A4D8               	btfss	status,2,c
  5196  00255A  0012               	return	
  5197  00255C  D7D4               	goto	l414
  5198  00255E                     __end_of_set_CCA_mode:
  5199                           	opt stack 0
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           indf1	equ	0xFE7
  5210                           postdec1	equ	0xFE5
  5211                           fsr1h	equ	0xFE2
  5212                           fsr1l	equ	0xFE1
  5213                           indf2	equ	0xFDF
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _pin_wake *****************
  5219 ;; Defined at:
  5220 ;;		line 232 in file "zigbee.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    9
  5241 ;; This function calls:
  5242 ;;		_Delay_ms
  5243 ;; This function is called by:
  5244 ;;		_init_ZIGBEE_nonbeacon
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text23
  5250  00322C                     __ptext23:
  5251                           	opt stack 0
  5252  00322C                     _pin_wake:
  5253                           	opt stack 21
  5254                           
  5255                           ;zigbee.c: 233: PORTFbits.RF4=1;
  5256                           
  5257                           ;incstack = 0
  5258  00322C  8885               	bsf	3973,4,c	;volatile
  5259                           
  5260                           ;zigbee.c: 234: Delay_ms(10);
  5261  00322E  0E00               	movlw	0
  5262  003230  0101               	movlb	1	; () banked
  5263  003232  6F28               	movwf	(Delay_ms@time+1)& (0+255),b
  5264  003234  0E0A               	movlw	10
  5265  003236  6F27               	movwf	Delay_ms@time& (0+255),b
  5266  003238  ECBE  F018         	call	_Delay_ms	;wreg free
  5267  00323C  0012               	return		;funcret
  5268  00323E                     __end_of_pin_wake:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           indf1	equ	0xFE7
  5280                           postdec1	equ	0xFE5
  5281                           fsr1h	equ	0xFE2
  5282                           fsr1l	equ	0xFE1
  5283                           indf2	equ	0xFDF
  5284                           fsr2h	equ	0xFDA
  5285                           fsr2l	equ	0xFD9
  5286                           status	equ	0xFD8
  5287                           
  5288 ;; *************** function _Delay_ms *****************
  5289 ;; Defined at:
  5290 ;;		line 476 in file "zigbee.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  time            2    0[BANK1 ] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  y               2    2[BANK1 ] unsigned int 
  5295 ;;  x               2    0        unsigned int 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:        4 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    8
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_pin_reset
  5316 ;;		_RF_reset
  5317 ;;		_pin_wake
  5318 ;;		_write_TX_normal_FIFO
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text24
  5324  00317C                     __ptext24:
  5325                           	opt stack 0
  5326  00317C                     _Delay_ms:
  5327                           	opt stack 21
  5328                           
  5329                           ;zigbee.c: 477: unsigned int x,y=0;
  5330                           
  5331                           ;incstack = 0
  5332  00317C  0E00               	movlw	0
  5333  00317E  0101               	movlb	1	; () banked
  5334  003180  6F2A               	movwf	(Delay_ms@y+1)& (0+255),b
  5335  003182  0E00               	movlw	0
  5336  003184  6F29               	movwf	Delay_ms@y& (0+255),b
  5337  003186                     
  5338                           ; BSR set to: 1
  5339                           
  5340                           ; BSR set to: 1
  5341                           
  5342                           ; BSR set to: 1
  5343  003186  4B27               	infsnz	Delay_ms@time& (0+255),f,b
  5344  003188  2B28               	incf	(Delay_ms@time+1)& (0+255),f,b
  5345  00318A  0E10               	movlw	16
  5346  00318C  5D27               	subwf	Delay_ms@time& (0+255),w,b
  5347  00318E  0E27               	movlw	39
  5348  003190  5928               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  5349  003192  B0D8               	btfsc	status,0,c
  5350  003194  0012               	return	
  5351  003196  D7F7               	goto	l532
  5352  003198                     __end_of_Delay_ms:
  5353                           	opt stack 0
  5354                           tblptru	equ	0xFF8
  5355                           tblptrh	equ	0xFF7
  5356                           tblptrl	equ	0xFF6
  5357                           tablat	equ	0xFF5
  5358                           prodh	equ	0xFF4
  5359                           prodl	equ	0xFF3
  5360                           intcon	equ	0xFF2
  5361                           postinc0	equ	0xFEE
  5362                           wreg	equ	0xFE8
  5363                           indf1	equ	0xFE7
  5364                           postdec1	equ	0xFE5
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           indf2	equ	0xFDF
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _init_ZIGBEE_basic *****************
  5373 ;; Defined at:
  5374 ;;		line 86 in file "zigbee.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:   11
  5395 ;; This function calls:
  5396 ;;		_enable_PLL
  5397 ;;		_write_ZIGBEE_long
  5398 ;;		_write_ZIGBEE_short
  5399 ;; This function is called by:
  5400 ;;		_init_ZIGBEE_nonbeacon
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text25
  5405  00260E                     __ptext25:
  5406                           	opt stack 0
  5407  00260E                     _init_ZIGBEE_basic:
  5408                           	opt stack 18
  5409                           
  5410                           ;zigbee.c: 87: write_ZIGBEE_short(0x18, 0x98);
  5411                           
  5412                           ; BSR set to: 1
  5413                           ;incstack = 0
  5414  00260E  0E98               	movlw	152
  5415  002610  0101               	movlb	1	; () banked
  5416  002612  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5417  002614  0E18               	movlw	24
  5418  002616  ECF6  F017         	call	_write_ZIGBEE_short
  5419                           
  5420                           ;zigbee.c: 88: write_ZIGBEE_short(0x2E, 0x95);
  5421  00261A  0E95               	movlw	149
  5422  00261C  0101               	movlb	1	; () banked
  5423  00261E  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5424  002620  0E2E               	movlw	46
  5425  002622  ECF6  F017         	call	_write_ZIGBEE_short
  5426                           
  5427                           ;zigbee.c: 89: write_ZIGBEE_long(0x201, 0x01);
  5428  002626  0E02               	movlw	2
  5429  002628  0101               	movlb	1	; () banked
  5430  00262A  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5431  00262C  0E01               	movlw	1
  5432  00262E  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5433  002630  0E01               	movlw	1
  5434  002632  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5435  002634  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5436                           
  5437                           ;zigbee.c: 90: enable_PLL();
  5438  002638  ECF9  F018         	call	_enable_PLL	;wreg free
  5439                           
  5440                           ;zigbee.c: 91: write_ZIGBEE_long(0x206, 0x90);
  5441  00263C  0E02               	movlw	2
  5442  00263E  0101               	movlb	1	; () banked
  5443  002640  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5444  002642  0E06               	movlw	6
  5445  002644  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5446  002646  0E90               	movlw	144
  5447  002648  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5448  00264A  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5449                           
  5450                           ;zigbee.c: 92: write_ZIGBEE_long(0x207, 0x80);
  5451  00264E  0E02               	movlw	2
  5452  002650  0101               	movlb	1	; () banked
  5453  002652  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5454  002654  0E07               	movlw	7
  5455  002656  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5456  002658  0E80               	movlw	128
  5457  00265A  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5458  00265C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5459                           
  5460                           ;zigbee.c: 93: write_ZIGBEE_long(0x208, 0x10);
  5461  002660  0E02               	movlw	2
  5462  002662  0101               	movlb	1	; () banked
  5463  002664  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5464  002666  0E08               	movlw	8
  5465  002668  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5466  00266A  0E10               	movlw	16
  5467  00266C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5468  00266E  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5469                           
  5470                           ;zigbee.c: 94: write_ZIGBEE_short(0x211,0X02);
  5471  002672  0E02               	movlw	2
  5472  002674  0101               	movlb	1	; () banked
  5473  002676  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5474  002678  0E11               	movlw	17
  5475  00267A  ECF6  F017         	call	_write_ZIGBEE_short
  5476                           
  5477                           ;zigbee.c: 95: write_ZIGBEE_long(0x220, 0x21);
  5478  00267E  0E02               	movlw	2
  5479  002680  0101               	movlb	1	; () banked
  5480  002682  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5481  002684  0E20               	movlw	32
  5482  002686  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5483  002688  0E21               	movlw	33
  5484  00268A  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5485  00268C  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5486                           
  5487                           ;zigbee.c: 96: write_ZIGBEE_long(0x22F, 0x0F);
  5488  002690  0E02               	movlw	2
  5489  002692  0101               	movlb	1	; () banked
  5490  002694  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5491  002696  0E2F               	movlw	47
  5492  002698  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5493  00269A  0E0F               	movlw	15
  5494  00269C  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5495  00269E  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5496  0026A2  0012               	return		;funcret
  5497  0026A4                     __end_of_init_ZIGBEE_basic:
  5498                           	opt stack 0
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           postinc0	equ	0xFEE
  5507                           wreg	equ	0xFE8
  5508                           indf1	equ	0xFE7
  5509                           postdec1	equ	0xFE5
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           indf2	equ	0xFDF
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function _enable_PLL *****************
  5518 ;; Defined at:
  5519 ;;		line 100 in file "zigbee.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:   10
  5540 ;; This function calls:
  5541 ;;		_write_ZIGBEE_long
  5542 ;; This function is called by:
  5543 ;;		_init_ZIGBEE_basic
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text26
  5548  0031F2                     __ptext26:
  5549                           	opt stack 0
  5550  0031F2                     _enable_PLL:
  5551                           	opt stack 18
  5552                           
  5553                           ;zigbee.c: 101: write_ZIGBEE_long(0x202, 0x80);
  5554                           
  5555                           ;incstack = 0
  5556  0031F2  0E02               	movlw	2
  5557  0031F4  0101               	movlb	1	; () banked
  5558  0031F6  6F2A               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5559  0031F8  0E02               	movlw	2
  5560  0031FA  6F29               	movwf	write_ZIGBEE_long@address& (0+255),b
  5561  0031FC  0E80               	movlw	128
  5562  0031FE  6F2B               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5563  003200  ECB7  F014         	call	_write_ZIGBEE_long	;wreg free
  5564  003204  0012               	return		;funcret
  5565  003206                     __end_of_enable_PLL:
  5566                           	opt stack 0
  5567                           tblptru	equ	0xFF8
  5568                           tblptrh	equ	0xFF7
  5569                           tblptrl	equ	0xFF6
  5570                           tablat	equ	0xFF5
  5571                           prodh	equ	0xFF4
  5572                           prodl	equ	0xFF3
  5573                           intcon	equ	0xFF2
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           indf1	equ	0xFE7
  5577                           postdec1	equ	0xFE5
  5578                           fsr1h	equ	0xFE2
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _write_ZIGBEE_long *****************
  5586 ;; Defined at:
  5587 ;;		line 415 in file "zigbee.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  address         2    2[BANK1 ] unsigned int 
  5590 ;;  data_r          1    4[BANK1 ] unsigned char 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  address_low     1    8[BANK1 ] unsigned char 
  5593 ;;  address_high    1    7[BANK1 ] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5603 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;Total ram usage:        7 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    9
  5610 ;; This function calls:
  5611 ;;		_SPI_Write
  5612 ;; This function is called by:
  5613 ;;		_init_ZIGBEE_basic
  5614 ;;		_enable_PLL
  5615 ;;		_set_channel
  5616 ;;		_set_TX_power
  5617 ;;		_write_TX_normal_FIFO
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text27
  5622  00296E                     __ptext27:
  5623                           	opt stack 0
  5624  00296E                     _write_ZIGBEE_long:
  5625                           	opt stack 20
  5626                           
  5627                           ;zigbee.c: 416: unsigned char address_high = 0, address_low = 0;
  5628                           
  5629                           ;incstack = 0
  5630  00296E  0E00               	movlw	0
  5631  002970  0101               	movlb	1	; () banked
  5632  002972  6F2E               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5633  002974  0E00               	movlw	0
  5634  002976  6F2F               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;zigbee.c: 418: PORTCbits.RC0=0;
  5638  002978  9082               	bcf	3970,0,c	;volatile
  5639                           
  5640                           ; BSR set to: 1
  5641                           ;zigbee.c: 419: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  5642  00297A  C129  F12C         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  5643  00297E  C12A  F12D         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  5644  002982  90D8               	bcf	status,0,c
  5645  002984  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5646  002986  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5647  002988  90D8               	bcf	status,0,c
  5648  00298A  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5649  00298C  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5650  00298E  90D8               	bcf	status,0,c
  5651  002990  332D               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  5652  002992  332C               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  5653  002994  512C               	movf	??_write_ZIGBEE_long& (0+255),w,b
  5654  002996  0B7F               	andlw	127
  5655  002998  0980               	iorlw	128
  5656  00299A  6F2E               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5657                           
  5658                           ; BSR set to: 1
  5659                           ;zigbee.c: 420: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  5660  00299C  3929               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  5661  00299E  46E8               	rlncf	wreg,f,c
  5662  0029A0  0BE0               	andlw	224
  5663  0029A2  0BE0               	andlw	224
  5664  0029A4  0910               	iorlw	16
  5665  0029A6  6F2F               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;zigbee.c: 421: SPI_Write(address_high);
  5669  0029A8  512E               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  5670  0029AA  EC1F  F019         	call	_SPI_Write
  5671                           
  5672                           ;zigbee.c: 422: SPI_Write(address_low);
  5673  0029AE  0101               	movlb	1	; () banked
  5674  0029B0  512F               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  5675  0029B2  EC1F  F019         	call	_SPI_Write
  5676                           
  5677                           ;zigbee.c: 423: SPI_Write(data_r);
  5678  0029B6  0101               	movlb	1	; () banked
  5679  0029B8  512B               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  5680  0029BA  EC1F  F019         	call	_SPI_Write
  5681                           
  5682                           ;zigbee.c: 424: PORTCbits.RC0=1;
  5683  0029BE  8082               	bsf	3970,0,c	;volatile
  5684  0029C0  0012               	return		;funcret
  5685  0029C2                     __end_of_write_ZIGBEE_long:
  5686                           	opt stack 0
  5687                           tblptru	equ	0xFF8
  5688                           tblptrh	equ	0xFF7
  5689                           tblptrl	equ	0xFF6
  5690                           tablat	equ	0xFF5
  5691                           prodh	equ	0xFF4
  5692                           prodl	equ	0xFF3
  5693                           intcon	equ	0xFF2
  5694                           postinc0	equ	0xFEE
  5695                           wreg	equ	0xFE8
  5696                           indf1	equ	0xFE7
  5697                           postdec1	equ	0xFE5
  5698                           fsr1h	equ	0xFE2
  5699                           fsr1l	equ	0xFE1
  5700                           indf2	equ	0xFDF
  5701                           fsr2h	equ	0xFDA
  5702                           fsr2l	equ	0xFD9
  5703                           status	equ	0xFD8
  5704                           
  5705 ;; *************** function _enable_interrupt *****************
  5706 ;; Defined at:
  5707 ;;		line 168 in file "zigbee.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:   10
  5728 ;; This function calls:
  5729 ;;		_write_ZIGBEE_short
  5730 ;; This function is called by:
  5731 ;;		_init_ZIGBEE_nonbeacon
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text28
  5736  003282                     __ptext28:
  5737                           	opt stack 0
  5738  003282                     _enable_interrupt:
  5739                           	opt stack 19
  5740                           
  5741                           ;zigbee.c: 169: write_ZIGBEE_short(0x32, 0xF7);
  5742                           
  5743                           ;incstack = 0
  5744  003282  0EF7               	movlw	247
  5745  003284  0101               	movlb	1	; () banked
  5746  003286  6F29               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5747  003288  0E32               	movlw	50
  5748  00328A  ECF6  F017         	call	_write_ZIGBEE_short
  5749  00328E  0012               	return		;funcret
  5750  003290                     __end_of_enable_interrupt:
  5751                           	opt stack 0
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           postdec1	equ	0xFE5
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           indf2	equ	0xFDF
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770 ;; *************** function _write_ZIGBEE_short *****************
  5771 ;; Defined at:
  5772 ;;		line 397 in file "zigbee.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  address         1    wreg     unsigned char 
  5775 ;;  data_r          1    2[BANK1 ] unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  address         1    3[BANK1 ] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5787 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;Total ram usage:        2 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    9
  5794 ;; This function calls:
  5795 ;;		_SPI_Write
  5796 ;; This function is called by:
  5797 ;;		_RF_reset
  5798 ;;		_set_WAKE_from_pin
  5799 ;;		_set_long_address
  5800 ;;		_set_short_address
  5801 ;;		_set_PAN_ID
  5802 ;;		_init_ZIGBEE_basic
  5803 ;;		_set_CCA_mode
  5804 ;;		_set_RSSI_mode
  5805 ;;		_enable_interrupt
  5806 ;;		_nonbeacon_PAN_coordinator_device
  5807 ;;		_set_frame_format_filter
  5808 ;;		_set_reception_mode
  5809 ;;		_set_not_ACK
  5810 ;;		_set_not_encrypt
  5811 ;;		_start_transmit
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text29
  5816  002FEC                     __ptext29:
  5817                           	opt stack 0
  5818  002FEC                     _write_ZIGBEE_short:
  5819                           	opt stack 19
  5820                           
  5821                           ;incstack = 0
  5822                           ;write_ZIGBEE_short@address stored from wreg
  5823  002FEC  0101               	movlb	1	; () banked
  5824  002FEE  6F2A               	movwf	write_ZIGBEE_short@address& (0+255),b
  5825                           
  5826                           ;zigbee.c: 398: PORTCbits.RC0=0;
  5827  002FF0  9082               	bcf	3970,0,c	;volatile
  5828                           
  5829                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
  5830  002FF2  0101               	movlb	1	; () banked
  5831  002FF4  512A               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5832  002FF6  252A               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  5833  002FF8  0B7F               	andlw	127
  5834  002FFA  0901               	iorlw	1
  5835  002FFC  6F2A               	movwf	write_ZIGBEE_short@address& (0+255),b
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;zigbee.c: 400: SPI_Write(address);
  5839  002FFE  512A               	movf	write_ZIGBEE_short@address& (0+255),w,b
  5840  003000  EC1F  F019         	call	_SPI_Write
  5841                           
  5842                           ;zigbee.c: 401: SPI_Write(data_r);
  5843  003004  0101               	movlb	1	; () banked
  5844  003006  5129               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  5845  003008  EC1F  F019         	call	_SPI_Write
  5846                           
  5847                           ;zigbee.c: 402: PORTCbits.RC0=1;
  5848  00300C  8082               	bsf	3970,0,c	;volatile
  5849  00300E  0012               	return		;funcret
  5850  003010                     __end_of_write_ZIGBEE_short:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           indf1	equ	0xFE7
  5862                           postdec1	equ	0xFE5
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function _SPI_Write *****************
  5871 ;; Defined at:
  5872 ;;		line 458 in file "zigbee.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  command         1    wreg     unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  command         1    1[BANK1 ] unsigned char 
  5877 ;;  response        1    0[BANK1 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:        2 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    8
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_write_ZIGBEE_short
  5898 ;;		_read_ZIGBEE_short
  5899 ;;		_write_ZIGBEE_long
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text30
  5904  00323E                     __ptext30:
  5905                           	opt stack 0
  5906  00323E                     _SPI_Write:
  5907                           	opt stack 20
  5908                           
  5909                           ;incstack = 0
  5910                           ;SPI_Write@command stored from wreg
  5911  00323E  0101               	movlb	1	; () banked
  5912  003240  6F28               	movwf	SPI_Write@command& (0+255),b
  5913                           
  5914                           ;zigbee.c: 459: unsigned char response;
  5915                           ;zigbee.c: 460: SSP1BUF = command;
  5916  003242  C128  FFC9         	movff	SPI_Write@command,4041	;volatile
  5917  003246  A0C7               	btfss	4039,0,c	;volatile
  5918  003248  D7FE               	goto	l514
  5919                           
  5920                           ;zigbee.c: 462: response = SSP1BUF;
  5921  00324A  CFC9 F127          	movff	4041,SPI_Write@response	;volatile
  5922  00324E  0012               	return		;funcret
  5923  003250                     __end_of_SPI_Write:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           postinc0	equ	0xFEE
  5933                           wreg	equ	0xFE8
  5934                           indf1	equ	0xFE7
  5935                           postdec1	equ	0xFE5
  5936                           fsr1h	equ	0xFE2
  5937                           fsr1l	equ	0xFE1
  5938                           indf2	equ	0xFDF
  5939                           fsr2h	equ	0xFDA
  5940                           fsr2l	equ	0xFD9
  5941                           status	equ	0xFD8
  5942                           
  5943 ;; *************** function ___lwmod *****************
  5944 ;; Defined at:
  5945 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  dividend        2    0[BANK1 ] unsigned int 
  5948 ;;  divisor         2    2[BANK1 ] unsigned int 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  counter         1    4[BANK1 ] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2    0[BANK1 ] unsigned int 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5960 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;Total ram usage:        5 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    8
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_main
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text31
  5975  002B56                     __ptext31:
  5976                           	opt stack 0
  5977  002B56                     ___lwmod:
  5978                           	opt stack 22
  5979                           
  5980                           ;incstack = 0
  5981  002B56  0101               	movlb	1	; () banked
  5982  002B58  5129               	movf	___lwmod@divisor& (0+255),w,b
  5983  002B5A  112A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5984  002B5C  B4D8               	btfsc	status,2,c
  5985  002B5E  D018               	goto	l1438
  5986                           
  5987                           ; BSR set to: 1
  5988  002B60  0E01               	movlw	1
  5989  002B62  6F2B               	movwf	___lwmod@counter& (0+255),b
  5990  002B64  D004               	goto	l1433
  5991  002B66                     
  5992                           ; BSR set to: 1
  5993                           
  5994                           ; BSR set to: 1
  5995  002B66  90D8               	bcf	status,0,c
  5996  002B68  3729               	rlcf	___lwmod@divisor& (0+255),f,b
  5997  002B6A  372A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5998  002B6C  2B2B               	incf	___lwmod@counter& (0+255),f,b
  5999  002B6E                     l1433:
  6000                           
  6001                           ; BSR set to: 1
  6002                           
  6003                           ; BSR set to: 1
  6004  002B6E  AF2A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6005  002B70  D7FA               	goto	l1434
  6006  002B72                     u4610:
  6007                           
  6008                           ; BSR set to: 1
  6009                           
  6010                           ; BSR set to: 1
  6011                           
  6012                           ; BSR set to: 1
  6013  002B72  5129               	movf	___lwmod@divisor& (0+255),w,b
  6014  002B74  5D27               	subwf	___lwmod@dividend& (0+255),w,b
  6015  002B76  512A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6016  002B78  5928               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6017  002B7A  A0D8               	btfss	status,0,c
  6018  002B7C  D004               	goto	l1437
  6019                           
  6020                           ; BSR set to: 1
  6021  002B7E  5129               	movf	___lwmod@divisor& (0+255),w,b
  6022  002B80  5F27               	subwf	___lwmod@dividend& (0+255),f,b
  6023  002B82  512A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6024  002B84  5B28               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6025  002B86                     l1437:
  6026                           
  6027                           ; BSR set to: 1
  6028                           
  6029                           ; BSR set to: 1
  6030  002B86  90D8               	bcf	status,0,c
  6031  002B88  332A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6032  002B8A  3329               	rrcf	___lwmod@divisor& (0+255),f,b
  6033                           
  6034                           ; BSR set to: 1
  6035  002B8C  2F2B               	decfsz	___lwmod@counter& (0+255),f,b
  6036  002B8E  D7F1               	goto	u4610
  6037  002B90                     l1438:
  6038                           
  6039                           ; BSR set to: 1
  6040                           
  6041                           ; BSR set to: 1
  6042  002B90  C127  F127         	movff	___lwmod@dividend,?___lwmod
  6043  002B94  C128  F128         	movff	___lwmod@dividend+1,?___lwmod+1
  6044                           
  6045                           ; BSR set to: 1
  6046  002B98  0012               	return		;funcret
  6047  002B9A                     __end_of___lwmod:
  6048                           	opt stack 0
  6049                           tblptru	equ	0xFF8
  6050                           tblptrh	equ	0xFF7
  6051                           tblptrl	equ	0xFF6
  6052                           tablat	equ	0xFF5
  6053                           prodh	equ	0xFF4
  6054                           prodl	equ	0xFF3
  6055                           intcon	equ	0xFF2
  6056                           postinc0	equ	0xFEE
  6057                           wreg	equ	0xFE8
  6058                           indf1	equ	0xFE7
  6059                           postdec1	equ	0xFE5
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           indf2	equ	0xFDF
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function ___lwdiv *****************
  6068 ;; Defined at:
  6069 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  dividend        2    0[BANK1 ] unsigned int 
  6072 ;;  divisor         2    2[BANK1 ] unsigned int 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  quotient        2    5[BANK1 ] unsigned int 
  6075 ;;  counter         1    4[BANK1 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2    0[BANK1 ] unsigned int 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        7 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    8
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_main
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text32
  6100  0029C2                     __ptext32:
  6101                           	opt stack 0
  6102  0029C2                     ___lwdiv:
  6103                           	opt stack 22
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;incstack = 0
  6107  0029C2  0E00               	movlw	0
  6108  0029C4  0101               	movlb	1	; () banked
  6109  0029C6  6F2D               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6110  0029C8  0E00               	movlw	0
  6111  0029CA  6F2C               	movwf	___lwdiv@quotient& (0+255),b
  6112                           
  6113                           ; BSR set to: 1
  6114  0029CC  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6115  0029CE  112A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6116  0029D0  B4D8               	btfsc	status,2,c
  6117  0029D2  D01C               	goto	l1428
  6118                           
  6119                           ; BSR set to: 1
  6120  0029D4  0E01               	movlw	1
  6121  0029D6  6F2B               	movwf	___lwdiv@counter& (0+255),b
  6122  0029D8  D004               	goto	l1423
  6123  0029DA                     
  6124                           ; BSR set to: 1
  6125                           
  6126                           ; BSR set to: 1
  6127  0029DA  90D8               	bcf	status,0,c
  6128  0029DC  3729               	rlcf	___lwdiv@divisor& (0+255),f,b
  6129  0029DE  372A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6130  0029E0  2B2B               	incf	___lwdiv@counter& (0+255),f,b
  6131  0029E2                     l1423:
  6132                           
  6133                           ; BSR set to: 1
  6134                           
  6135                           ; BSR set to: 1
  6136  0029E2  AF2A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6137  0029E4  D7FA               	goto	l1424
  6138  0029E6                     u4580:
  6139                           
  6140                           ; BSR set to: 1
  6141                           
  6142                           ; BSR set to: 1
  6143                           
  6144                           ; BSR set to: 1
  6145  0029E6  90D8               	bcf	status,0,c
  6146  0029E8  372C               	rlcf	___lwdiv@quotient& (0+255),f,b
  6147  0029EA  372D               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6148                           
  6149                           ; BSR set to: 1
  6150  0029EC  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6151  0029EE  5D27               	subwf	___lwdiv@dividend& (0+255),w,b
  6152  0029F0  512A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6153  0029F2  5928               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6154  0029F4  A0D8               	btfss	status,0,c
  6155  0029F6  D005               	goto	l1427
  6156                           
  6157                           ; BSR set to: 1
  6158  0029F8  5129               	movf	___lwdiv@divisor& (0+255),w,b
  6159  0029FA  5F27               	subwf	___lwdiv@dividend& (0+255),f,b
  6160  0029FC  512A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6161  0029FE  5B28               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6162                           
  6163                           ; BSR set to: 1
  6164  002A00  812C               	bsf	___lwdiv@quotient& (0+255),0,b
  6165  002A02                     l1427:
  6166                           
  6167                           ; BSR set to: 1
  6168                           
  6169                           ; BSR set to: 1
  6170  002A02  90D8               	bcf	status,0,c
  6171  002A04  332A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6172  002A06  3329               	rrcf	___lwdiv@divisor& (0+255),f,b
  6173                           
  6174                           ; BSR set to: 1
  6175  002A08  2F2B               	decfsz	___lwdiv@counter& (0+255),f,b
  6176  002A0A  D7ED               	goto	u4580
  6177  002A0C                     l1428:
  6178                           
  6179                           ; BSR set to: 1
  6180                           
  6181                           ; BSR set to: 1
  6182  002A0C  C12C  F127         	movff	___lwdiv@quotient,?___lwdiv
  6183  002A10  C12D  F128         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6184                           
  6185                           ; BSR set to: 1
  6186  002A14  0012               	return		;funcret
  6187  002A16                     __end_of___lwdiv:
  6188                           	opt stack 0
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           intcon	equ	0xFF2
  6196                           postinc0	equ	0xFEE
  6197                           wreg	equ	0xFE8
  6198                           indf1	equ	0xFE7
  6199                           postdec1	equ	0xFE5
  6200                           fsr1h	equ	0xFE2
  6201                           fsr1l	equ	0xFE1
  6202                           indf2	equ	0xFDF
  6203                           fsr2h	equ	0xFDA
  6204                           fsr2l	equ	0xFD9
  6205                           status	equ	0xFD8
  6206                           
  6207 ;; *************** function ___fttol *****************
  6208 ;; Defined at:
  6209 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  f1              3    0[BANK1 ] float 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  lval            4   10[BANK1 ] unsigned long 
  6214 ;;  exp1            1   14[BANK1 ] unsigned char 
  6215 ;;  sign1           1    9[BANK1 ] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  4    0[BANK1 ] long 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6225 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;Total ram usage:       15 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    8
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_main
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text33
  6240  0022C6                     __ptext33:
  6241                           	opt stack 0
  6242  0022C6                     ___fttol:
  6243                           	opt stack 22
  6244                           
  6245                           ; BSR set to: 1
  6246                           ;incstack = 0
  6247  0022C6  C129  F12B         	movff	___fttol@f1+2,??___fttol
  6248  0022CA  0101               	movlb	1	; () banked
  6249  0022CC  6B2C               	clrf	(??___fttol+1)& (0+255),b
  6250  0022CE  6B2D               	clrf	(??___fttol+2)& (0+255),b
  6251  0022D0  3528               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6252  0022D2  372B               	rlcf	??___fttol& (0+255),f,b
  6253  0022D4  E301               	bnc	u4491
  6254  0022D6  812C               	bsf	(??___fttol+1)& (0+255),0,b
  6255  0022D8                     u4491:
  6256  0022D8  512B               	movf	??___fttol& (0+255),w,b
  6257  0022DA  6F35               	movwf	___fttol@exp1& (0+255),b
  6258  0022DC  5135               	movf	___fttol@exp1& (0+255),w,b
  6259  0022DE  A4D8               	btfss	status,2,c
  6260  0022E0  D009               	goto	l1334
  6261                           
  6262                           ; BSR set to: 1
  6263  0022E2  0E00               	movlw	0
  6264  0022E4  6F27               	movwf	?___fttol& (0+255),b
  6265  0022E6  0E00               	movlw	0
  6266  0022E8  6F28               	movwf	(?___fttol+1)& (0+255),b
  6267  0022EA  0E00               	movlw	0
  6268  0022EC  6F29               	movwf	(?___fttol+2)& (0+255),b
  6269  0022EE  0E00               	movlw	0
  6270  0022F0  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6271                           
  6272                           ; BSR set to: 1
  6273  0022F2  0012               	return	
  6274  0022F4                     l1334:
  6275                           
  6276                           ; BSR set to: 1
  6277                           
  6278                           ; BSR set to: 1
  6279  0022F4  0E17               	movlw	23
  6280  0022F6  6F2B               	movwf	??___fttol& (0+255),b
  6281  0022F8  C127  F12C         	movff	___fttol@f1,??___fttol+1
  6282  0022FC  C128  F12D         	movff	___fttol@f1+1,??___fttol+2
  6283  002300  C129  F12E         	movff	___fttol@f1+2,??___fttol+3
  6284  002304  292B               	incf	??___fttol& (0+255),w,b
  6285  002306  6F2F               	movwf	(??___fttol+4)& (0+255),b
  6286  002308  D004               	goto	u4510
  6287  00230A                     u4515:
  6288  00230A  90D8               	bcf	status,0,c
  6289  00230C  332E               	rrcf	(??___fttol+3)& (0+255),f,b
  6290  00230E  332D               	rrcf	(??___fttol+2)& (0+255),f,b
  6291  002310  332C               	rrcf	(??___fttol+1)& (0+255),f,b
  6292  002312                     u4510:
  6293  002312  2F2F               	decfsz	(??___fttol+4)& (0+255),f,b
  6294  002314  D7FA               	goto	u4515
  6295  002316  0101               	movlb	1	; () banked
  6296  002318  512C               	movf	(??___fttol+1)& (0+255),w,b
  6297  00231A  6F30               	movwf	___fttol@sign1& (0+255),b
  6298                           
  6299                           ; BSR set to: 1
  6300  00231C  8F28               	bsf	(___fttol@f1+1)& (0+255),7,b
  6301                           
  6302                           ; BSR set to: 1
  6303  00231E  0EFF               	movlw	255
  6304  002320  1727               	andwf	___fttol@f1& (0+255),f,b
  6305  002322  0EFF               	movlw	255
  6306  002324  1728               	andwf	(___fttol@f1+1)& (0+255),f,b
  6307  002326  0E00               	movlw	0
  6308  002328  1729               	andwf	(___fttol@f1+2)& (0+255),f,b
  6309                           
  6310                           ; BSR set to: 1
  6311  00232A  5127               	movf	___fttol@f1& (0+255),w,b
  6312  00232C  6F31               	movwf	___fttol@lval& (0+255),b
  6313  00232E  5128               	movf	(___fttol@f1+1)& (0+255),w,b
  6314  002330  6F32               	movwf	(___fttol@lval+1)& (0+255),b
  6315  002332  5129               	movf	(___fttol@f1+2)& (0+255),w,b
  6316  002334  6F33               	movwf	(___fttol@lval+2)& (0+255),b
  6317  002336  6B34               	clrf	(___fttol@lval+3)& (0+255),b
  6318                           
  6319                           ; BSR set to: 1
  6320  002338  0E8E               	movlw	142
  6321  00233A  5F35               	subwf	___fttol@exp1& (0+255),f,b
  6322                           
  6323                           ; BSR set to: 1
  6324  00233C  AF35               	btfss	___fttol@exp1& (0+255),7,b
  6325  00233E  D016               	goto	l1336
  6326                           
  6327                           ; BSR set to: 1
  6328  002340  5135               	movf	___fttol@exp1& (0+255),w,b
  6329  002342  0A80               	xorlw	128
  6330  002344  0F8F               	addlw	143
  6331  002346  B0D8               	btfsc	status,0,c
  6332  002348  D009               	goto	l1337
  6333                           
  6334                           ; BSR set to: 1
  6335  00234A  0E00               	movlw	0
  6336  00234C  6F27               	movwf	?___fttol& (0+255),b
  6337  00234E  0E00               	movlw	0
  6338  002350  6F28               	movwf	(?___fttol+1)& (0+255),b
  6339  002352  0E00               	movlw	0
  6340  002354  6F29               	movwf	(?___fttol+2)& (0+255),b
  6341  002356  0E00               	movlw	0
  6342  002358  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6343                           
  6344                           ; BSR set to: 1
  6345  00235A  0012               	return	
  6346  00235C                     l1337:
  6347                           
  6348                           ; BSR set to: 1
  6349                           
  6350                           ; BSR set to: 1
  6351                           
  6352                           ; BSR set to: 1
  6353  00235C  90D8               	bcf	status,0,c
  6354  00235E  3334               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6355  002360  3333               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6356  002362  3332               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6357  002364  3331               	rrcf	___fttol@lval& (0+255),f,b
  6358                           
  6359                           ; BSR set to: 1
  6360  002366  3F35               	incfsz	___fttol@exp1& (0+255),f,b
  6361  002368  D7F9               	goto	l1337
  6362                           
  6363                           ; BSR set to: 1
  6364  00236A  D015               	goto	u4550
  6365  00236C                     l1336:
  6366                           
  6367                           ; BSR set to: 1
  6368                           
  6369                           ; BSR set to: 1
  6370  00236C  0E17               	movlw	23
  6371  00236E  6535               	cpfsgt	___fttol@exp1& (0+255),b
  6372  002370  D00F               	goto	l1342
  6373                           
  6374                           ; BSR set to: 1
  6375  002372  0E00               	movlw	0
  6376  002374  6F27               	movwf	?___fttol& (0+255),b
  6377  002376  0E00               	movlw	0
  6378  002378  6F28               	movwf	(?___fttol+1)& (0+255),b
  6379  00237A  0E00               	movlw	0
  6380  00237C  6F29               	movwf	(?___fttol+2)& (0+255),b
  6381  00237E  0E00               	movlw	0
  6382  002380  6F2A               	movwf	(?___fttol+3)& (0+255),b
  6383                           
  6384                           ; BSR set to: 1
  6385  002382  0012               	return	
  6386  002384                     
  6387                           ; BSR set to: 1
  6388                           
  6389                           ; BSR set to: 1
  6390  002384  90D8               	bcf	status,0,c
  6391  002386  3731               	rlcf	___fttol@lval& (0+255),f,b
  6392  002388  3732               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6393  00238A  3733               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6394  00238C  3734               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6395  00238E  0735               	decf	___fttol@exp1& (0+255),f,b
  6396  002390                     l1342:
  6397                           
  6398                           ; BSR set to: 1
  6399                           
  6400                           ; BSR set to: 1
  6401  002390  5135               	movf	___fttol@exp1& (0+255),w,b
  6402  002392  A4D8               	btfss	status,2,c
  6403  002394  D7F7               	goto	l1343
  6404  002396                     u4550:
  6405                           
  6406                           ; BSR set to: 1
  6407                           
  6408                           ; BSR set to: 1
  6409                           
  6410                           ; BSR set to: 1
  6411  002396  5130               	movf	___fttol@sign1& (0+255),w,b
  6412  002398  B4D8               	btfsc	status,2,c
  6413  00239A  D008               	goto	l1345
  6414                           
  6415                           ; BSR set to: 1
  6416  00239C  1F34               	comf	(___fttol@lval+3)& (0+255),f,b
  6417  00239E  1F33               	comf	(___fttol@lval+2)& (0+255),f,b
  6418  0023A0  1F32               	comf	(___fttol@lval+1)& (0+255),f,b
  6419  0023A2  6D31               	negf	___fttol@lval& (0+255),b
  6420  0023A4  0E00               	movlw	0
  6421  0023A6  2332               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6422  0023A8  2333               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6423  0023AA  2334               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6424  0023AC                     l1345:
  6425                           
  6426                           ; BSR set to: 1
  6427                           
  6428                           ; BSR set to: 1
  6429  0023AC  C131  F127         	movff	___fttol@lval,?___fttol
  6430  0023B0  C132  F128         	movff	___fttol@lval+1,?___fttol+1
  6431  0023B4  C133  F129         	movff	___fttol@lval+2,?___fttol+2
  6432  0023B8  C134  F12A         	movff	___fttol@lval+3,?___fttol+3
  6433  0023BC  0012               	return	
  6434  0023BE                     __end_of___fttol:
  6435                           	opt stack 0
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           intcon	equ	0xFF2
  6443                           postinc0	equ	0xFEE
  6444                           wreg	equ	0xFE8
  6445                           indf1	equ	0xFE7
  6446                           postdec1	equ	0xFE5
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function ___awdiv *****************
  6455 ;; Defined at:
  6456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  dividend        2    0[BANK1 ] int 
  6459 ;;  divisor         2    2[BANK1 ] int 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  quotient        2    6[BANK1 ] int 
  6462 ;;  sign            1    5[BANK1 ] unsigned char 
  6463 ;;  counter         1    4[BANK1 ] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  2    0[BANK1 ] int 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6473 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;Total ram usage:        8 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    8
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text34
  6488  002736                     __ptext34:
  6489                           	opt stack 0
  6490  002736                     ___awdiv:
  6491                           	opt stack 22
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;incstack = 0
  6495  002736  0E00               	movlw	0
  6496  002738  0101               	movlb	1	; () banked
  6497  00273A  6F2C               	movwf	___awdiv@sign& (0+255),b
  6498                           
  6499                           ; BSR set to: 1
  6500  00273C  AF2A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6501  00273E  D006               	goto	l1187
  6502                           
  6503                           ; BSR set to: 1
  6504  002740  6D29               	negf	___awdiv@divisor& (0+255),b
  6505  002742  1F2A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6506  002744  B0D8               	btfsc	status,0,c
  6507  002746  2B2A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6508                           
  6509                           ; BSR set to: 1
  6510  002748  0E01               	movlw	1
  6511  00274A  6F2C               	movwf	___awdiv@sign& (0+255),b
  6512  00274C                     l1187:
  6513                           
  6514                           ; BSR set to: 1
  6515                           
  6516                           ; BSR set to: 1
  6517  00274C  AF28               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6518  00274E  D006               	goto	l1188
  6519                           
  6520                           ; BSR set to: 1
  6521  002750  6D27               	negf	___awdiv@dividend& (0+255),b
  6522  002752  1F28               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6523  002754  B0D8               	btfsc	status,0,c
  6524  002756  2B28               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6525                           
  6526                           ; BSR set to: 1
  6527  002758  0E01               	movlw	1
  6528  00275A  1B2C               	xorwf	___awdiv@sign& (0+255),f,b
  6529  00275C                     l1188:
  6530                           
  6531                           ; BSR set to: 1
  6532                           
  6533                           ; BSR set to: 1
  6534  00275C  0E00               	movlw	0
  6535  00275E  6F2E               	movwf	(___awdiv@quotient+1)& (0+255),b
  6536  002760  0E00               	movlw	0
  6537  002762  6F2D               	movwf	___awdiv@quotient& (0+255),b
  6538                           
  6539                           ; BSR set to: 1
  6540  002764  5129               	movf	___awdiv@divisor& (0+255),w,b
  6541  002766  112A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6542  002768  B4D8               	btfsc	status,2,c
  6543  00276A  D01C               	goto	l1195
  6544                           
  6545                           ; BSR set to: 1
  6546  00276C  0E01               	movlw	1
  6547  00276E  6F2B               	movwf	___awdiv@counter& (0+255),b
  6548  002770  D004               	goto	l1190
  6549  002772                     
  6550                           ; BSR set to: 1
  6551                           
  6552                           ; BSR set to: 1
  6553  002772  90D8               	bcf	status,0,c
  6554  002774  3729               	rlcf	___awdiv@divisor& (0+255),f,b
  6555  002776  372A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6556  002778  2B2B               	incf	___awdiv@counter& (0+255),f,b
  6557  00277A                     l1190:
  6558                           
  6559                           ; BSR set to: 1
  6560                           
  6561                           ; BSR set to: 1
  6562  00277A  AF2A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6563  00277C  D7FA               	goto	l1191
  6564  00277E                     u4460:
  6565                           
  6566                           ; BSR set to: 1
  6567                           
  6568                           ; BSR set to: 1
  6569                           
  6570                           ; BSR set to: 1
  6571  00277E  90D8               	bcf	status,0,c
  6572  002780  372D               	rlcf	___awdiv@quotient& (0+255),f,b
  6573  002782  372E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 1
  6576  002784  5129               	movf	___awdiv@divisor& (0+255),w,b
  6577  002786  5D27               	subwf	___awdiv@dividend& (0+255),w,b
  6578  002788  512A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6579  00278A  5928               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6580  00278C  A0D8               	btfss	status,0,c
  6581  00278E  D005               	goto	l1194
  6582                           
  6583                           ; BSR set to: 1
  6584  002790  5129               	movf	___awdiv@divisor& (0+255),w,b
  6585  002792  5F27               	subwf	___awdiv@dividend& (0+255),f,b
  6586  002794  512A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6587  002796  5B28               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6588                           
  6589                           ; BSR set to: 1
  6590  002798  812D               	bsf	___awdiv@quotient& (0+255),0,b
  6591  00279A                     l1194:
  6592                           
  6593                           ; BSR set to: 1
  6594                           
  6595                           ; BSR set to: 1
  6596  00279A  90D8               	bcf	status,0,c
  6597  00279C  332A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6598  00279E  3329               	rrcf	___awdiv@divisor& (0+255),f,b
  6599                           
  6600                           ; BSR set to: 1
  6601  0027A0  2F2B               	decfsz	___awdiv@counter& (0+255),f,b
  6602  0027A2  D7ED               	goto	u4460
  6603  0027A4                     l1195:
  6604                           
  6605                           ; BSR set to: 1
  6606                           
  6607                           ; BSR set to: 1
  6608                           
  6609                           ; BSR set to: 1
  6610  0027A4  512C               	movf	___awdiv@sign& (0+255),w,b
  6611  0027A6  B4D8               	btfsc	status,2,c
  6612  0027A8  D004               	goto	l1196
  6613                           
  6614                           ; BSR set to: 1
  6615  0027AA  6D2D               	negf	___awdiv@quotient& (0+255),b
  6616  0027AC  1F2E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6617  0027AE  B0D8               	btfsc	status,0,c
  6618  0027B0  2B2E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6619  0027B2                     l1196:
  6620                           
  6621                           ; BSR set to: 1
  6622                           
  6623                           ; BSR set to: 1
  6624  0027B2  C12D  F127         	movff	___awdiv@quotient,?___awdiv
  6625  0027B6  C12E  F128         	movff	___awdiv@quotient+1,?___awdiv+1
  6626  0027BA  0012               	return	
  6627  0027BC                     __end_of___awdiv:
  6628                           	opt stack 0
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           prodh	equ	0xFF4
  6634                           prodl	equ	0xFF3
  6635                           intcon	equ	0xFF2
  6636                           postinc0	equ	0xFEE
  6637                           wreg	equ	0xFE8
  6638                           indf1	equ	0xFE7
  6639                           postdec1	equ	0xFE5
  6640                           fsr1h	equ	0xFE2
  6641                           fsr1l	equ	0xFE1
  6642                           indf2	equ	0xFDF
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _Set_DeviceId *****************
  6648 ;; Defined at:
  6649 ;;		line 530 in file "13_April_WaterMeter_Main.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  ID1             2   12[BANK1 ] unsigned int 
  6654 ;;  i               1   17[BANK1 ] unsigned char 
  6655 ;;  n               1   16[BANK1 ] unsigned char 
  6656 ;;  j               1   15[BANK1 ] unsigned char 
  6657 ;;  fail            1   14[BANK1 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:        8 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:   11
  6674 ;; This function calls:
  6675 ;;		_Busy_eep2
  6676 ;;		_Delayms1
  6677 ;;		_LcdCmd
  6678 ;;		_LcdData
  6679 ;;		_LcdDisplay
  6680 ;;		_Read_b_eep2
  6681 ;;		_Write_b_eep2
  6682 ;;		___awmod
  6683 ;;		_lcd_clear
  6684 ;; This function is called by:
  6685 ;;		_main
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text35
  6690  0016A8                     __ptext35:
  6691                           	opt stack 0
  6692  0016A8                     _Set_DeviceId:
  6693                           	opt stack 19
  6694                           
  6695                           ;13_April_WaterMeter_Main.c: 531: char i=0,j=0;
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;incstack = 0
  6699  0016A8  0E00               	movlw	0
  6700  0016AA  0101               	movlb	1	; () banked
  6701  0016AC  6F38               	movwf	Set_DeviceId@i& (0+255),b
  6702  0016AE  0E00               	movlw	0
  6703  0016B0  6F36               	movwf	Set_DeviceId@j& (0+255),b
  6704                           
  6705                           ;13_April_WaterMeter_Main.c: 532: unsigned char n=1,fail=0;
  6706  0016B2  0E01               	movlw	1
  6707  0016B4  6F37               	movwf	Set_DeviceId@n& (0+255),b
  6708  0016B6  0E00               	movlw	0
  6709  0016B8  6F35               	movwf	Set_DeviceId@fail& (0+255),b
  6710                           
  6711                           ;13_April_WaterMeter_Main.c: 533: unsigned int ID1=0;
  6712  0016BA  0E00               	movlw	0
  6713  0016BC  6F34               	movwf	(Set_DeviceId@ID1+1)& (0+255),b
  6714  0016BE  0E00               	movlw	0
  6715  0016C0  6F33               	movwf	Set_DeviceId@ID1& (0+255),b
  6716                           
  6717                           ; BSR set to: 1
  6718                           ;13_April_WaterMeter_Main.c: 535: lcd_clear();
  6719  0016C2  EC65  F019         	call	_lcd_clear	;wreg free
  6720                           
  6721                           ;13_April_WaterMeter_Main.c: 536: LcdDisplay(0x80,"  Device Id Is  ");
  6722  0016C6  0EC2               	movlw	low STR_9
  6723  0016C8  0101               	movlb	1	; () banked
  6724  0016CA  6F2E               	movwf	LcdDisplay@string& (0+255),b
  6725  0016CC  0E10               	movlw	high STR_9
  6726  0016CE  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  6727  0016D0  0E80               	movlw	128
  6728  0016D2  EC52  F016         	call	_LcdDisplay
  6729                           
  6730                           ;13_April_WaterMeter_Main.c: 537: LcdDisplay(0xC0,"      000       ");
  6731  0016D6  0E4B               	movlw	low STR_10
  6732  0016D8  0101               	movlb	1	; () banked
  6733  0016DA  6F2E               	movwf	LcdDisplay@string& (0+255),b
  6734  0016DC  0E10               	movlw	high STR_10
  6735  0016DE  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  6736  0016E0  0EC0               	movlw	192
  6737  0016E2  EC52  F016         	call	_LcdDisplay
  6738                           
  6739                           ;13_April_WaterMeter_Main.c: 538: LcdCmd(0xC0+6);
  6740  0016E6  0EC6               	movlw	198
  6741  0016E8  EC82  F018         	call	_LcdCmd
  6742                           
  6743                           ;13_April_WaterMeter_Main.c: 539: LcdCmd(0x0E);
  6744  0016EC  0E0E               	movlw	14
  6745  0016EE  EC82  F018         	call	_LcdCmd
  6746  0016F2  A003               	btfss	_PORTGX,0,c
  6747  0016F4  D7FE               	goto	l956
  6748                           
  6749                           ;13_April_WaterMeter_Main.c: 541: Delayms1(30);
  6750  0016F6  0E00               	movlw	0
  6751  0016F8  0101               	movlb	1	; () banked
  6752  0016FA  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6753  0016FC  0E1E               	movlw	30
  6754  0016FE  6F27               	movwf	Delayms1@time& (0+255),b
  6755  001700  ECEF  F016         	call	_Delayms1	;wreg free
  6756                           
  6757                           ;13_April_WaterMeter_Main.c: 543: Increment=0;
  6758  001704  0E00               	movlw	0
  6759  001706  0100               	movlb	0	; () banked
  6760  001708  6F8D               	movwf	(_Increment+1)& (0+255),b
  6761  00170A  0E00               	movlw	0
  6762  00170C  6F8C               	movwf	_Increment& (0+255),b
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;13_April_WaterMeter_Main.c: 544: Decrement=0;
  6766  00170E  0E00               	movlw	0
  6767  001710  6F8B               	movwf	(_Decrement+1)& (0+255),b
  6768  001712  0E00               	movlw	0
  6769  001714  6F8A               	movwf	_Decrement& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;13_April_WaterMeter_Main.c: 545: Enter=0;
  6773  001716  0E00               	movlw	0
  6774  001718  6FA4               	movwf	_Enter& (0+255),b
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;13_April_WaterMeter_Main.c: 546: F_TimerCounting=1;
  6778  00171A  0E01               	movlw	1
  6779  00171C  6E02               	movwf	_F_TimerCounting,c
  6780  00171E                     
  6781                           ; BSR set to: 0
  6782                           ;13_April_WaterMeter_Main.c: 548: if(Increment>=20){
  6783                           
  6784                           ; BSR set to: 0
  6785  00171E  518D               	movf	(_Increment+1)& (0+255),w,b
  6786  001720  E104               	bnz	u3880
  6787  001722  0E14               	movlw	20
  6788  001724  5D8C               	subwf	_Increment& (0+255),w,b
  6789  001726  A0D8               	btfss	status,0,c
  6790  001728  D034               	goto	l959
  6791  00172A                     u3880:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;13_April_WaterMeter_Main.c: 549: LcdCmd(0xC0 + 6 + i);
  6795  00172A  0101               	movlb	1	; () banked
  6796  00172C  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6797  00172E  0FC6               	addlw	198
  6798  001730  EC82  F018         	call	_LcdCmd
  6799                           
  6800                           ;13_April_WaterMeter_Main.c: 550: j++;
  6801  001734  0101               	movlb	1	; () banked
  6802  001736  2B36               	incf	Set_DeviceId@j& (0+255),f,b
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;13_April_WaterMeter_Main.c: 551: if(j>9)
  6806  001738  0E09               	movlw	9
  6807  00173A  6536               	cpfsgt	Set_DeviceId@j& (0+255),b
  6808  00173C  D002               	goto	l960
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;13_April_WaterMeter_Main.c: 552: j=0;
  6812  00173E  0E00               	movlw	0
  6813  001740  6F36               	movwf	Set_DeviceId@j& (0+255),b
  6814  001742                     l960:
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;13_April_WaterMeter_Main.c: 553: LcdCmd(0x0C);
  6818                           
  6819                           ; BSR set to: 1
  6820  001742  0E0C               	movlw	12
  6821  001744  EC82  F018         	call	_LcdCmd
  6822                           
  6823                           ;13_April_WaterMeter_Main.c: 554: LcdData(j%10 + 48);
  6824  001748  C136  F127         	movff	Set_DeviceId@j,___awmod@dividend
  6825  00174C  0101               	movlb	1	; () banked
  6826  00174E  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  6827  001750  0E00               	movlw	0
  6828  001752  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  6829  001754  0E0A               	movlw	10
  6830  001756  6F29               	movwf	___awmod@divisor& (0+255),b
  6831  001758  ECDE  F013         	call	___awmod	;wreg free
  6832  00175C  0101               	movlb	1	; () banked
  6833  00175E  5127               	movf	?___awmod& (0+255),w,b
  6834  001760  0F30               	addlw	48
  6835  001762  EC72  F018         	call	_LcdData
  6836                           
  6837                           ;13_April_WaterMeter_Main.c: 555: LcdCmd(0xC0 + 6 + i);
  6838  001766  0101               	movlb	1	; () banked
  6839  001768  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6840  00176A  0FC6               	addlw	198
  6841  00176C  EC82  F018         	call	_LcdCmd
  6842                           
  6843                           ;13_April_WaterMeter_Main.c: 556: LcdCmd(0x0E);
  6844  001770  0E0E               	movlw	14
  6845  001772  EC82  F018         	call	_LcdCmd
  6846  001776  A203               	btfss	_PORTGX,1,c
  6847  001778  D7FE               	goto	l962
  6848                           
  6849                           ;13_April_WaterMeter_Main.c: 558: Delayms1(30);
  6850  00177A  0E00               	movlw	0
  6851  00177C  0101               	movlb	1	; () banked
  6852  00177E  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6853  001780  0E1E               	movlw	30
  6854  001782  6F27               	movwf	Delayms1@time& (0+255),b
  6855  001784  ECEF  F016         	call	_Delayms1	;wreg free
  6856                           
  6857                           ;13_April_WaterMeter_Main.c: 559: Increment=0;
  6858  001788  0E00               	movlw	0
  6859  00178A  0100               	movlb	0	; () banked
  6860  00178C  6F8D               	movwf	(_Increment+1)& (0+255),b
  6861  00178E  0E00               	movlw	0
  6862  001790  6F8C               	movwf	_Increment& (0+255),b
  6863  001792                     l959:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;13_April_WaterMeter_Main.c: 560: }
  6867                           ;13_April_WaterMeter_Main.c: 561: if(Decrement>=20){
  6868                           
  6869                           ; BSR set to: 0
  6870  001792  518B               	movf	(_Decrement+1)& (0+255),w,b
  6871  001794  E104               	bnz	u3910
  6872  001796  0E14               	movlw	20
  6873  001798  5D8A               	subwf	_Decrement& (0+255),w,b
  6874  00179A  A0D8               	btfss	status,0,c
  6875  00179C  D02F               	goto	l964
  6876  00179E                     u3910:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;13_April_WaterMeter_Main.c: 562: LcdCmd(0xC0 + 6 + i);
  6880  00179E  0101               	movlb	1	; () banked
  6881  0017A0  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6882  0017A2  0FC6               	addlw	198
  6883  0017A4  EC82  F018         	call	_LcdCmd
  6884                           
  6885                           ;13_April_WaterMeter_Main.c: 563: j--;
  6886  0017A8  0101               	movlb	1	; () banked
  6887  0017AA  0736               	decf	Set_DeviceId@j& (0+255),f,b
  6888                           
  6889                           ; BSR set to: 1
  6890                           ;13_April_WaterMeter_Main.c: 566: LcdCmd(0x0C);
  6891                           
  6892                           ; BSR set to: 1
  6893                           
  6894                           ; BSR set to: 1
  6895                           ;13_April_WaterMeter_Main.c: 565: j=9;
  6896                           
  6897                           ;13_April_WaterMeter_Main.c: 564: if(j<0)
  6898  0017AC  0E0C               	movlw	12
  6899  0017AE  EC82  F018         	call	_LcdCmd
  6900                           
  6901                           ;13_April_WaterMeter_Main.c: 567: LcdData(j%10 + 48);
  6902  0017B2  C136  F127         	movff	Set_DeviceId@j,___awmod@dividend
  6903  0017B6  0101               	movlb	1	; () banked
  6904  0017B8  6B28               	clrf	(___awmod@dividend+1)& (0+255),b
  6905  0017BA  0E00               	movlw	0
  6906  0017BC  6F2A               	movwf	(___awmod@divisor+1)& (0+255),b
  6907  0017BE  0E0A               	movlw	10
  6908  0017C0  6F29               	movwf	___awmod@divisor& (0+255),b
  6909  0017C2  ECDE  F013         	call	___awmod	;wreg free
  6910  0017C6  0101               	movlb	1	; () banked
  6911  0017C8  5127               	movf	?___awmod& (0+255),w,b
  6912  0017CA  0F30               	addlw	48
  6913  0017CC  EC72  F018         	call	_LcdData
  6914                           
  6915                           ;13_April_WaterMeter_Main.c: 568: LcdCmd(0xC0 + 6 + i);
  6916  0017D0  0101               	movlb	1	; () banked
  6917  0017D2  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6918  0017D4  0FC6               	addlw	198
  6919  0017D6  EC82  F018         	call	_LcdCmd
  6920                           
  6921                           ;13_April_WaterMeter_Main.c: 569: LcdCmd(0x0E);
  6922  0017DA  0E0E               	movlw	14
  6923  0017DC  EC82  F018         	call	_LcdCmd
  6924  0017E0  A403               	btfss	_PORTGX,2,c
  6925  0017E2  D7FE               	goto	l967
  6926                           
  6927                           ;13_April_WaterMeter_Main.c: 571: Delayms1(30);
  6928  0017E4  0E00               	movlw	0
  6929  0017E6  0101               	movlb	1	; () banked
  6930  0017E8  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6931  0017EA  0E1E               	movlw	30
  6932  0017EC  6F27               	movwf	Delayms1@time& (0+255),b
  6933  0017EE  ECEF  F016         	call	_Delayms1	;wreg free
  6934                           
  6935                           ;13_April_WaterMeter_Main.c: 572: Decrement=0;
  6936  0017F2  0E00               	movlw	0
  6937  0017F4  0100               	movlb	0	; () banked
  6938  0017F6  6F8B               	movwf	(_Decrement+1)& (0+255),b
  6939  0017F8  0E00               	movlw	0
  6940  0017FA  6F8A               	movwf	_Decrement& (0+255),b
  6941  0017FC                     l964:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;13_April_WaterMeter_Main.c: 573: }
  6945                           ;13_April_WaterMeter_Main.c: 574: if(Enter >= 20){
  6946                           
  6947                           ; BSR set to: 0
  6948  0017FC  0E13               	movlw	19
  6949  0017FE  65A4               	cpfsgt	_Enter& (0+255),b
  6950  001800  D191               	goto	l1013
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;13_April_WaterMeter_Main.c: 575: DeviceId_arr[i]=j;
  6954  001802  0101               	movlb	1	; () banked
  6955  001804  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6956  001806  0D01               	mullw	1
  6957  001808  0EB5               	movlw	low _DeviceId_arr
  6958  00180A  24F3               	addwf	prodl,w,c
  6959  00180C  6ED9               	movwf	fsr2l,c
  6960  00180E  0E00               	movlw	high _DeviceId_arr
  6961  001810  20F4               	addwfc	prodh,w,c
  6962  001812  6EDA               	movwf	fsr2h,c
  6963  001814  C136  FFDF         	movff	Set_DeviceId@j,indf2
  6964                           
  6965                           ; BSR set to: 1
  6966                           ;13_April_WaterMeter_Main.c: 576: i++;
  6967  001818  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;13_April_WaterMeter_Main.c: 577: LcdCmd(0xC0 + 6 + i);
  6971  00181A  5138               	movf	Set_DeviceId@i& (0+255),w,b
  6972  00181C  0FC6               	addlw	198
  6973  00181E  EC82  F018         	call	_LcdCmd
  6974                           
  6975                           ;13_April_WaterMeter_Main.c: 578: LcdCmd(0x0C);
  6976  001822  0E0C               	movlw	12
  6977  001824  EC82  F018         	call	_LcdCmd
  6978                           
  6979                           ;13_April_WaterMeter_Main.c: 579: j=0;
  6980  001828  0E00               	movlw	0
  6981  00182A  0101               	movlb	1	; () banked
  6982  00182C  6F36               	movwf	Set_DeviceId@j& (0+255),b
  6983  00182E                     
  6984                           ; BSR set to: 1
  6985  00182E  A003               	btfss	_PORTGX,0,c
  6986  001830  D7FE               	goto	l971
  6987                           
  6988                           ;13_April_WaterMeter_Main.c: 581: Delayms1(30);
  6989  001832  0E00               	movlw	0
  6990  001834  0101               	movlb	1	; () banked
  6991  001836  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  6992  001838  0E1E               	movlw	30
  6993  00183A  6F27               	movwf	Delayms1@time& (0+255),b
  6994  00183C  ECEF  F016         	call	_Delayms1	;wreg free
  6995                           
  6996                           ;13_April_WaterMeter_Main.c: 582: Enter=0;
  6997  001840  0E00               	movlw	0
  6998  001842  0100               	movlb	0	; () banked
  6999  001844  6FA4               	movwf	_Enter& (0+255),b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;13_April_WaterMeter_Main.c: 583: if(i>2){
  7003  001846  0E02               	movlw	2
  7004  001848  0101               	movlb	1	; () banked
  7005  00184A  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7006  00184C  D16B               	goto	l1013
  7007                           
  7008                           ; BSR set to: 1
  7009                           ;13_April_WaterMeter_Main.c: 584: i=0;
  7010  00184E  0E00               	movlw	0
  7011  001850  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7012                           
  7013                           ; BSR set to: 1
  7014                           ;13_April_WaterMeter_Main.c: 585: LcdDisplay(0x80,"Want to SAVE?   ");
  7015  001852  0E7E               	movlw	low STR_11
  7016  001854  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7017  001856  0E10               	movlw	high STR_11
  7018  001858  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7019  00185A  0E80               	movlw	128
  7020  00185C  EC52  F016         	call	_LcdDisplay
  7021                           
  7022                           ;13_April_WaterMeter_Main.c: 586: LcdDisplay(0xC0,"  >Yes     No   ");
  7023  001860  0E8F               	movlw	low STR_12
  7024  001862  0101               	movlb	1	; () banked
  7025  001864  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7026  001866  0E10               	movlw	high STR_12
  7027  001868  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7028  00186A  0EC0               	movlw	192
  7029  00186C  EC52  F016         	call	_LcdDisplay
  7030                           
  7031                           ;13_April_WaterMeter_Main.c: 588: Increment=0;
  7032  001870  0E00               	movlw	0
  7033  001872  0100               	movlb	0	; () banked
  7034  001874  6F8D               	movwf	(_Increment+1)& (0+255),b
  7035  001876  0E00               	movlw	0
  7036  001878  6F8C               	movwf	_Increment& (0+255),b
  7037                           
  7038                           ;13_April_WaterMeter_Main.c: 589: Decrement=0;
  7039  00187A  0E00               	movlw	0
  7040  00187C  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7041  00187E  0E00               	movlw	0
  7042  001880  6F8A               	movwf	_Decrement& (0+255),b
  7043                           
  7044                           ;13_April_WaterMeter_Main.c: 590: Enter=0;
  7045  001882  0E00               	movlw	0
  7046  001884  6FA4               	movwf	_Enter& (0+255),b
  7047                           
  7048                           ;13_April_WaterMeter_Main.c: 591: F_TimerCounting=1;
  7049  001886  0E01               	movlw	1
  7050  001888  6E02               	movwf	_F_TimerCounting,c
  7051  00188A                     
  7052                           ;13_April_WaterMeter_Main.c: 593: if(Increment>=20){
  7053                           
  7054                           ; BSR set to: 0
  7055  00188A  0100               	movlb	0	; () banked
  7056  00188C  518D               	movf	(_Increment+1)& (0+255),w,b
  7057  00188E  E104               	bnz	u3960
  7058  001890  0E14               	movlw	20
  7059  001892  5D8C               	subwf	_Increment& (0+255),w,b
  7060  001894  A0D8               	btfss	status,0,c
  7061  001896  D032               	goto	l975
  7062  001898                     u3960:
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;13_April_WaterMeter_Main.c: 594: n++;
  7066  001898  0101               	movlb	1	; () banked
  7067  00189A  2B37               	incf	Set_DeviceId@n& (0+255),f,b
  7068                           
  7069                           ; BSR set to: 1
  7070                           ;13_April_WaterMeter_Main.c: 595: __nop();__nop();__nop();__nop();
  7071  00189C  F000               	nop	
  7072  00189E  F000               	nop	
  7073  0018A0  F000               	nop	
  7074  0018A2  F000               	nop	
  7075                           
  7076                           ;13_April_WaterMeter_Main.c: 596: if(n>2)
  7077  0018A4  0E02               	movlw	2
  7078  0018A6  0101               	movlb	1	; () banked
  7079  0018A8  6537               	cpfsgt	Set_DeviceId@n& (0+255),b
  7080  0018AA  D002               	goto	l976
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;13_April_WaterMeter_Main.c: 597: n=1;
  7084  0018AC  0E01               	movlw	1
  7085  0018AE  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7086  0018B0                     l976:
  7087                           
  7088                           ; BSR set to: 1
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;13_April_WaterMeter_Main.c: 598: while(PORTGX.tbits.tb1==0);
  7092  0018B0  A203               	btfss	_PORTGX,1,c
  7093  0018B2  D7FE               	goto	l976
  7094                           
  7095                           ;13_April_WaterMeter_Main.c: 599: Delayms1(30);
  7096  0018B4  0E00               	movlw	0
  7097  0018B6  0101               	movlb	1	; () banked
  7098  0018B8  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7099  0018BA  0E1E               	movlw	30
  7100  0018BC  6F27               	movwf	Delayms1@time& (0+255),b
  7101  0018BE  ECEF  F016         	call	_Delayms1	;wreg free
  7102                           
  7103                           ;13_April_WaterMeter_Main.c: 600: if(n==1){
  7104  0018C2  0101               	movlb	1	; () banked
  7105  0018C4  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7106  0018C6  A4D8               	btfss	status,2,c
  7107  0018C8  D008               	goto	l980
  7108                           
  7109                           ; BSR set to: 1
  7110                           ;13_April_WaterMeter_Main.c: 602: LcdDisplay(0xC0,"  >Yes     No   ");
  7111  0018CA  0E8F               	movlw	low STR_12
  7112  0018CC  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7113  0018CE  0E10               	movlw	high STR_12
  7114  0018D0  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7115  0018D2  0EC0               	movlw	192
  7116  0018D4  EC52  F016         	call	_LcdDisplay
  7117                           
  7118                           ;13_April_WaterMeter_Main.c: 603: }
  7119  0018D8  D00C               	goto	l982
  7120  0018DA                     l980:
  7121                           
  7122                           ;13_April_WaterMeter_Main.c: 604: else if(n==2){
  7123  0018DA  0E02               	movlw	2
  7124  0018DC  0101               	movlb	1	; () banked
  7125  0018DE  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7126  0018E0  A4D8               	btfss	status,2,c
  7127  0018E2  D007               	goto	l982
  7128                           
  7129                           ; BSR set to: 1
  7130                           ;13_April_WaterMeter_Main.c: 606: LcdDisplay(0xC0,"   Yes    >No   ");
  7131  0018E4  0EA0               	movlw	low STR_14
  7132  0018E6  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7133  0018E8  0E10               	movlw	high STR_14
  7134  0018EA  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7135  0018EC  0EC0               	movlw	192
  7136  0018EE  EC52  F016         	call	_LcdDisplay
  7137  0018F2                     l982:
  7138                           
  7139                           ;13_April_WaterMeter_Main.c: 607: }
  7140                           ;13_April_WaterMeter_Main.c: 608: Increment=0;
  7141  0018F2  0E00               	movlw	0
  7142  0018F4  0100               	movlb	0	; () banked
  7143  0018F6  6F8D               	movwf	(_Increment+1)& (0+255),b
  7144  0018F8  0E00               	movlw	0
  7145  0018FA  6F8C               	movwf	_Increment& (0+255),b
  7146  0018FC                     l975:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;13_April_WaterMeter_Main.c: 609: }
  7150                           ;13_April_WaterMeter_Main.c: 610: if(Decrement >= 20){
  7151                           
  7152                           ; BSR set to: 0
  7153  0018FC  518B               	movf	(_Decrement+1)& (0+255),w,b
  7154  0018FE  E104               	bnz	u4010
  7155  001900  0E14               	movlw	20
  7156  001902  5D8A               	subwf	_Decrement& (0+255),w,b
  7157  001904  A0D8               	btfss	status,0,c
  7158  001906  D032               	goto	l983
  7159  001908                     u4010:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;13_April_WaterMeter_Main.c: 611: n--;
  7163  001908  0101               	movlb	1	; () banked
  7164  00190A  0737               	decf	Set_DeviceId@n& (0+255),f,b
  7165                           
  7166                           ; BSR set to: 1
  7167                           ;13_April_WaterMeter_Main.c: 612: __nop();__nop();__nop();__nop();
  7168  00190C  F000               	nop	
  7169  00190E  F000               	nop	
  7170  001910  F000               	nop	
  7171  001912  F000               	nop	
  7172                           
  7173                           ;13_April_WaterMeter_Main.c: 613: if(n<1)
  7174  001914  0101               	movlb	1	; () banked
  7175  001916  5137               	movf	Set_DeviceId@n& (0+255),w,b
  7176  001918  A4D8               	btfss	status,2,c
  7177  00191A  D002               	goto	l984
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;13_April_WaterMeter_Main.c: 614: n=2;
  7181  00191C  0E02               	movlw	2
  7182  00191E  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7183  001920                     l984:
  7184                           
  7185                           ; BSR set to: 1
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;13_April_WaterMeter_Main.c: 615: while(PORTGX.tbits.tb2==0);
  7189  001920  A403               	btfss	_PORTGX,2,c
  7190  001922  D7FE               	goto	l984
  7191                           
  7192                           ;13_April_WaterMeter_Main.c: 616: Delayms1(30);
  7193  001924  0E00               	movlw	0
  7194  001926  0101               	movlb	1	; () banked
  7195  001928  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7196  00192A  0E1E               	movlw	30
  7197  00192C  6F27               	movwf	Delayms1@time& (0+255),b
  7198  00192E  ECEF  F016         	call	_Delayms1	;wreg free
  7199                           
  7200                           ;13_April_WaterMeter_Main.c: 617: if(n==1){
  7201  001932  0101               	movlb	1	; () banked
  7202  001934  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7203  001936  A4D8               	btfss	status,2,c
  7204  001938  D008               	goto	l988
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;13_April_WaterMeter_Main.c: 619: LcdDisplay(0xC0,"  >Yes     No   ");
  7208  00193A  0E8F               	movlw	low STR_12
  7209  00193C  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7210  00193E  0E10               	movlw	high STR_12
  7211  001940  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7212  001942  0EC0               	movlw	192
  7213  001944  EC52  F016         	call	_LcdDisplay
  7214                           
  7215                           ;13_April_WaterMeter_Main.c: 620: }
  7216  001948  D00C               	goto	l990
  7217  00194A                     l988:
  7218                           
  7219                           ;13_April_WaterMeter_Main.c: 621: else if(n==2){
  7220  00194A  0E02               	movlw	2
  7221  00194C  0101               	movlb	1	; () banked
  7222  00194E  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7223  001950  A4D8               	btfss	status,2,c
  7224  001952  D007               	goto	l990
  7225                           
  7226                           ; BSR set to: 1
  7227                           ;13_April_WaterMeter_Main.c: 623: LcdDisplay(0xC0,"   Yes    >No   ");
  7228  001954  0EA0               	movlw	low STR_14
  7229  001956  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7230  001958  0E10               	movlw	high STR_14
  7231  00195A  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7232  00195C  0EC0               	movlw	192
  7233  00195E  EC52  F016         	call	_LcdDisplay
  7234  001962                     l990:
  7235                           
  7236                           ;13_April_WaterMeter_Main.c: 624: }
  7237                           ;13_April_WaterMeter_Main.c: 625: Decrement=0;
  7238  001962  0E00               	movlw	0
  7239  001964  0100               	movlb	0	; () banked
  7240  001966  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7241  001968  0E00               	movlw	0
  7242  00196A  6F8A               	movwf	_Decrement& (0+255),b
  7243  00196C                     l983:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;13_April_WaterMeter_Main.c: 626: }
  7247                           ;13_April_WaterMeter_Main.c: 627: if(Enter >= 20){
  7248                           
  7249                           ; BSR set to: 0
  7250  00196C  0E13               	movlw	19
  7251  00196E  65A4               	cpfsgt	_Enter& (0+255),b
  7252  001970  D78C               	goto	l974
  7253  001972                     u4060:
  7254                           
  7255                           ; BSR set to: 0
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;13_April_WaterMeter_Main.c: 628: while(PORTGX.tbits.tb0==0);
  7259  001972  A003               	btfss	_PORTGX,0,c
  7260  001974  D7FE               	goto	u4060
  7261                           
  7262                           ;13_April_WaterMeter_Main.c: 629: Delayms1(30);
  7263  001976  0E00               	movlw	0
  7264  001978  0101               	movlb	1	; () banked
  7265  00197A  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7266  00197C  0E1E               	movlw	30
  7267  00197E  6F27               	movwf	Delayms1@time& (0+255),b
  7268  001980  ECEF  F016         	call	_Delayms1	;wreg free
  7269                           
  7270                           ;13_April_WaterMeter_Main.c: 630: if(n==1){
  7271  001984  0101               	movlb	1	; () banked
  7272  001986  0537               	decf	Set_DeviceId@n& (0+255),w,b
  7273  001988  A4D8               	btfss	status,2,c
  7274  00198A  D09F               	goto	l995
  7275  00198C                     u4080:
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;13_April_WaterMeter_Main.c: 632: for(i=0;i<3;i++){
  7279                           
  7280                           ; BSR set to: 1
  7281                           
  7282                           ;13_April_WaterMeter_Main.c: 631: write_weight:
  7283  00198C  0E00               	movlw	0
  7284  00198E  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7285  001990                     l5425:
  7286                           
  7287                           ; BSR set to: 1
  7288  001990  0E02               	movlw	2
  7289  001992  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7290  001994  D001               	goto	l997
  7291  001996  D04C               	goto	u4130
  7292  001998                     l997:
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;13_April_WaterMeter_Main.c: 633: if(i==0)
  7296                           
  7297                           ; BSR set to: 1
  7298  001998  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7299  00199A  A4D8               	btfss	status,2,c
  7300  00199C  D00D               	goto	l999
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;13_April_WaterMeter_Main.c: 634: ID1=100 * DeviceId_arr[i];
  7304  00199E  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7305  0019A0  0D01               	mullw	1
  7306  0019A2  0EB5               	movlw	low _DeviceId_arr
  7307  0019A4  24F3               	addwf	prodl,w,c
  7308  0019A6  6ED9               	movwf	fsr2l,c
  7309  0019A8  0E00               	movlw	high _DeviceId_arr
  7310  0019AA  20F4               	addwfc	prodh,w,c
  7311  0019AC  6EDA               	movwf	fsr2h,c
  7312  0019AE  50DF               	movf	indf2,w,c
  7313  0019B0  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7314  0019B2  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7315  0019B4  0D64               	mullw	100
  7316  0019B6  D00F               	goto	L1
  7317  0019B8                     l999:
  7318                           
  7319                           ; BSR set to: 1
  7320                           ;13_April_WaterMeter_Main.c: 635: else if(i==1)
  7321                           
  7322                           ; BSR set to: 1
  7323  0019B8  0538               	decf	Set_DeviceId@i& (0+255),w,b
  7324  0019BA  A4D8               	btfss	status,2,c
  7325  0019BC  D011               	goto	l1001
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;13_April_WaterMeter_Main.c: 636: ID1=10 * DeviceId_arr[i];
  7329  0019BE  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7330  0019C0  0D01               	mullw	1
  7331  0019C2  0EB5               	movlw	low _DeviceId_arr
  7332  0019C4  24F3               	addwf	prodl,w,c
  7333  0019C6  6ED9               	movwf	fsr2l,c
  7334  0019C8  0E00               	movlw	high _DeviceId_arr
  7335  0019CA  20F4               	addwfc	prodh,w,c
  7336  0019CC  6EDA               	movwf	fsr2h,c
  7337  0019CE  50DF               	movf	indf2,w,c
  7338  0019D0  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7339  0019D2  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7340  0019D4  0D0A               	mullw	10
  7341  0019D6                     L1:
  7342  0019D6  CFF3 F133          	movff	prodl,Set_DeviceId@ID1
  7343  0019DA  CFF4 F134          	movff	prodh,Set_DeviceId@ID1+1
  7344  0019DE  D011               	goto	l1003
  7345  0019E0                     l1001:
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;13_April_WaterMeter_Main.c: 637: else if(i==2)
  7349                           
  7350                           ; BSR set to: 1
  7351  0019E0  0E02               	movlw	2
  7352  0019E2  1938               	xorwf	Set_DeviceId@i& (0+255),w,b
  7353  0019E4  A4D8               	btfss	status,2,c
  7354  0019E6  D00D               	goto	l1003
  7355                           
  7356                           ; BSR set to: 1
  7357                           ;13_April_WaterMeter_Main.c: 638: ID1=DeviceId_arr[i];
  7358  0019E8  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7359  0019EA  0D01               	mullw	1
  7360  0019EC  0EB5               	movlw	low _DeviceId_arr
  7361  0019EE  24F3               	addwf	prodl,w,c
  7362  0019F0  6ED9               	movwf	fsr2l,c
  7363  0019F2  0E00               	movlw	high _DeviceId_arr
  7364  0019F4  20F4               	addwfc	prodh,w,c
  7365  0019F6  6EDA               	movwf	fsr2h,c
  7366  0019F8  50DF               	movf	indf2,w,c
  7367  0019FA  6F31               	movwf	??_Set_DeviceId& (0+255),b
  7368  0019FC  5131               	movf	??_Set_DeviceId& (0+255),w,b
  7369  0019FE  6F33               	movwf	Set_DeviceId@ID1& (0+255),b
  7370  001A00  6B34               	clrf	(Set_DeviceId@ID1+1)& (0+255),b
  7371  001A02                     l1003:
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;13_April_WaterMeter_Main.c: 640: Write_b_eep2(0x0064 + i,DeviceId_arr[i]);
  7375                           
  7376                           ; BSR set to: 1
  7377                           
  7378                           ; BSR set to: 1
  7379                           
  7380                           ; BSR set to: 1
  7381  001A02  0E64               	movlw	100
  7382  001A04  2538               	addwf	Set_DeviceId@i& (0+255),w,b
  7383  001A06  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  7384  001A08  6B28               	clrf	(Write_b_eep2@badd+1)& (0+255),b
  7385  001A0A  0E00               	movlw	0
  7386  001A0C  2328               	addwfc	(Write_b_eep2@badd+1)& (0+255),f,b
  7387  001A0E  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7388  001A10  0D01               	mullw	1
  7389  001A12  0EB5               	movlw	low _DeviceId_arr
  7390  001A14  24F3               	addwf	prodl,w,c
  7391  001A16  6ED9               	movwf	fsr2l,c
  7392  001A18  0E00               	movlw	high _DeviceId_arr
  7393  001A1A  20F4               	addwfc	prodh,w,c
  7394  001A1C  6EDA               	movwf	fsr2h,c
  7395  001A1E  50DF               	movf	indf2,w,c
  7396  001A20  6F29               	movwf	Write_b_eep2@data& (0+255),b
  7397  001A22  ECD1  F016         	call	_Write_b_eep2	;wreg free
  7398                           
  7399                           ;13_April_WaterMeter_Main.c: 641: Busy_eep2();
  7400  001A26  EC75  F019         	call	_Busy_eep2	;wreg free
  7401  001A2A  0101               	movlb	1	; () banked
  7402  001A2C  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  7403  001A2E  D7B0               	goto	l5425
  7404  001A30                     u4130:
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;13_April_WaterMeter_Main.c: 642: }
  7408                           ;13_April_WaterMeter_Main.c: 643: for(i=0;i<3;i++){
  7409                           
  7410                           ; BSR set to: 1
  7411  001A30  0E00               	movlw	0
  7412  001A32  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7413  001A34                     l5449:
  7414                           
  7415                           ; BSR set to: 1
  7416  001A34  0E02               	movlw	2
  7417  001A36  6538               	cpfsgt	Set_DeviceId@i& (0+255),b
  7418  001A38  D001               	goto	l1004
  7419  001A3A  D041               	goto	u4180
  7420  001A3C                     l1004:
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;13_April_WaterMeter_Main.c: 644: if((Read_b_eep2(0x0064 + i)) == (DeviceId_arr[i])){
  7424                           
  7425                           ; BSR set to: 1
  7426  001A3C  5138               	movf	Set_DeviceId@i& (0+255),w,b
  7427  001A3E  0D01               	mullw	1
  7428  001A40  0EB5               	movlw	low _DeviceId_arr
  7429  001A42  24F3               	addwf	prodl,w,c
  7430  001A44  6ED9               	movwf	fsr2l,c
  7431  001A46  0E00               	movlw	high _DeviceId_arr
  7432  001A48  20F4               	addwfc	prodh,w,c
  7433  001A4A  6EDA               	movwf	fsr2h,c
  7434  001A4C  0E64               	movlw	100
  7435  001A4E  2538               	addwf	Set_DeviceId@i& (0+255),w,b
  7436  001A50  6F27               	movwf	Read_b_eep2@badd& (0+255),b
  7437  001A52  6B28               	clrf	(Read_b_eep2@badd+1)& (0+255),b
  7438  001A54  0E00               	movlw	0
  7439  001A56  2328               	addwfc	(Read_b_eep2@badd+1)& (0+255),f,b
  7440  001A58  EC28  F019         	call	_Read_b_eep2	;wreg free
  7441  001A5C  0101               	movlb	1	; () banked
  7442  001A5E  6F32               	movwf	(??_Set_DeviceId+1)& (0+255),b
  7443  001A60  50DE               	movf	postinc2,w,c
  7444  001A62  1932               	xorwf	(??_Set_DeviceId+1)& (0+255),w,b
  7445  001A64  A4D8               	btfss	status,2,c
  7446  001A66  D022               	goto	l1006
  7447                           
  7448                           ; BSR set to: 1
  7449                           ;13_April_WaterMeter_Main.c: 645: if(i==2){
  7450  001A68  0E02               	movlw	2
  7451  001A6A  1938               	xorwf	Set_DeviceId@i& (0+255),w,b
  7452  001A6C  A4D8               	btfss	status,2,c
  7453  001A6E  D024               	goto	l1009
  7454                           
  7455                           ; BSR set to: 1
  7456                           ;13_April_WaterMeter_Main.c: 646: F_TimerCounting=0;
  7457  001A70  0E00               	movlw	0
  7458  001A72  6E02               	movwf	_F_TimerCounting,c
  7459                           
  7460                           ;13_April_WaterMeter_Main.c: 647: F_Success = 1;
  7461  001A74  0E01               	movlw	1
  7462  001A76  0100               	movlb	0	; () banked
  7463  001A78  6FA5               	movwf	_F_Success& (0+255),b
  7464                           
  7465                           ;13_April_WaterMeter_Main.c: 648: i=0;
  7466  001A7A  0E00               	movlw	0
  7467  001A7C  0101               	movlb	1	; () banked
  7468  001A7E  6F38               	movwf	Set_DeviceId@i& (0+255),b
  7469                           
  7470                           ;13_April_WaterMeter_Main.c: 649: j=0;
  7471  001A80  0E00               	movlw	0
  7472  001A82  6F36               	movwf	Set_DeviceId@j& (0+255),b
  7473                           
  7474                           ; BSR set to: 1
  7475                           ;13_April_WaterMeter_Main.c: 650: lcd_clear();
  7476  001A84  EC65  F019         	call	_lcd_clear	;wreg free
  7477                           
  7478                           ;13_April_WaterMeter_Main.c: 651: LcdDisplay(0x80,"Data Saved...   ");
  7479  001A88  0E6D               	movlw	low STR_17
  7480  001A8A  0101               	movlb	1	; () banked
  7481  001A8C  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7482  001A8E  0E10               	movlw	high STR_17
  7483  001A90  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7484  001A92  0E80               	movlw	128
  7485  001A94  EC52  F016         	call	_LcdDisplay
  7486                           
  7487                           ;13_April_WaterMeter_Main.c: 652: Delayms1(500);
  7488  001A98  0E01               	movlw	1
  7489  001A9A  0101               	movlb	1	; () banked
  7490  001A9C  6F28               	movwf	(Delayms1@time+1)& (0+255),b
  7491  001A9E  0EF4               	movlw	244
  7492  001AA0  6F27               	movwf	Delayms1@time& (0+255),b
  7493  001AA2  ECEF  F016         	call	_Delayms1	;wreg free
  7494                           
  7495                           ;13_April_WaterMeter_Main.c: 653: lcd_clear();
  7496  001AA6  EC65  F019         	call	_lcd_clear	;wreg free
  7497                           
  7498                           ;13_April_WaterMeter_Main.c: 654: break;
  7499  001AAA  D009               	goto	u4180
  7500  001AAC                     l1006:
  7501                           
  7502                           ;13_April_WaterMeter_Main.c: 658: else{
  7503                           ;13_April_WaterMeter_Main.c: 659: fail++;
  7504  001AAC  0101               	movlb	1	; () banked
  7505  001AAE  2B35               	incf	Set_DeviceId@fail& (0+255),f,b
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;13_April_WaterMeter_Main.c: 660: if(fail > 2){
  7509  001AB0  0E02               	movlw	2
  7510  001AB2  6535               	cpfsgt	Set_DeviceId@fail& (0+255),b
  7511  001AB4  D76B               	goto	u4080
  7512  001AB6  D00E               	goto	u4200
  7513  001AB8                     l1009:
  7514                           
  7515                           ; BSR set to: 1
  7516                           
  7517                           ; BSR set to: 1
  7518  001AB8  0101               	movlb	1	; () banked
  7519  001ABA  2B38               	incf	Set_DeviceId@i& (0+255),f,b
  7520  001ABC  D7BB               	goto	l5449
  7521  001ABE                     u4180:
  7522                           
  7523                           ;13_April_WaterMeter_Main.c: 664: }
  7524                           ;13_April_WaterMeter_Main.c: 665: }
  7525                           ;13_April_WaterMeter_Main.c: 666: if(F_Success == 1)
  7526                           
  7527                           ; BSR set to: 1
  7528  001ABE  0100               	movlb	0	; () banked
  7529  001AC0  05A5               	decf	_F_Success& (0+255),w,b
  7530  001AC2  B4D8               	btfsc	status,2,c
  7531  001AC4  D02F               	goto	l1013
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;13_April_WaterMeter_Main.c: 668: Enter=0;
  7535                           
  7536                           ; BSR set to: 0
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;13_April_WaterMeter_Main.c: 667: break;
  7540  001AC6  0E00               	movlw	0
  7541  001AC8  6FA4               	movwf	_Enter& (0+255),b
  7542  001ACA                     l995:
  7543                           
  7544                           ;13_April_WaterMeter_Main.c: 669: }
  7545                           ;13_April_WaterMeter_Main.c: 670: if(n==2){
  7546                           
  7547                           ; BSR set to: 0
  7548  001ACA  0E02               	movlw	2
  7549  001ACC  0101               	movlb	1	; () banked
  7550  001ACE  1937               	xorwf	Set_DeviceId@n& (0+255),w,b
  7551  001AD0  A4D8               	btfss	status,2,c
  7552  001AD2  D6DB               	goto	l974
  7553  001AD4                     u4200:
  7554                           
  7555                           ; BSR set to: 1
  7556                           ;13_April_WaterMeter_Main.c: 672: lcd_clear();
  7557                           
  7558                           ; BSR set to: 1
  7559                           
  7560                           ;13_April_WaterMeter_Main.c: 671: no:
  7561  001AD4  EC65  F019         	call	_lcd_clear	;wreg free
  7562                           
  7563                           ;13_April_WaterMeter_Main.c: 673: LcdDisplay(0x80,"  Device Id Is  ");
  7564  001AD8  0EC2               	movlw	low STR_9
  7565  001ADA  0101               	movlb	1	; () banked
  7566  001ADC  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7567  001ADE  0E10               	movlw	high STR_9
  7568  001AE0  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7569  001AE2  0E80               	movlw	128
  7570  001AE4  EC52  F016         	call	_LcdDisplay
  7571                           
  7572                           ;13_April_WaterMeter_Main.c: 674: LcdDisplay(0xC0,"      000       ");
  7573  001AE8  0E4B               	movlw	low STR_10
  7574  001AEA  0101               	movlb	1	; () banked
  7575  001AEC  6F2E               	movwf	LcdDisplay@string& (0+255),b
  7576  001AEE  0E10               	movlw	high STR_10
  7577  001AF0  6F2F               	movwf	(LcdDisplay@string+1)& (0+255),b
  7578  001AF2  0EC0               	movlw	192
  7579  001AF4  EC52  F016         	call	_LcdDisplay
  7580                           
  7581                           ;13_April_WaterMeter_Main.c: 675: LcdCmd(0xC0+6);
  7582  001AF8  0EC6               	movlw	198
  7583  001AFA  EC82  F018         	call	_LcdCmd
  7584                           
  7585                           ;13_April_WaterMeter_Main.c: 676: LcdCmd(0x0E);
  7586  001AFE  0E0E               	movlw	14
  7587  001B00  EC82  F018         	call	_LcdCmd
  7588                           
  7589                           ;13_April_WaterMeter_Main.c: 677: n=0;
  7590  001B04  0E00               	movlw	0
  7591  001B06  0101               	movlb	1	; () banked
  7592  001B08  6F37               	movwf	Set_DeviceId@n& (0+255),b
  7593                           
  7594                           ; BSR set to: 1
  7595                           ;13_April_WaterMeter_Main.c: 678: Increment=0;
  7596  001B0A  0E00               	movlw	0
  7597  001B0C  0100               	movlb	0	; () banked
  7598  001B0E  6F8D               	movwf	(_Increment+1)& (0+255),b
  7599  001B10  0E00               	movlw	0
  7600  001B12  6F8C               	movwf	_Increment& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;13_April_WaterMeter_Main.c: 679: Decrement=0;
  7604  001B14  0E00               	movlw	0
  7605  001B16  6F8B               	movwf	(_Decrement+1)& (0+255),b
  7606  001B18  0E00               	movlw	0
  7607  001B1A  6F8A               	movwf	_Decrement& (0+255),b
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;13_April_WaterMeter_Main.c: 680: Enter=0;
  7611  001B1C  0E00               	movlw	0
  7612  001B1E  6FA4               	movwf	_Enter& (0+255),b
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;13_April_WaterMeter_Main.c: 681: F_TimerCounting=1;
  7616  001B20  0E01               	movlw	1
  7617  001B22  6E02               	movwf	_F_TimerCounting,c
  7618  001B24                     l1013:
  7619                           
  7620                           ;13_April_WaterMeter_Main.c: 683: }
  7621                           ;13_April_WaterMeter_Main.c: 684: }
  7622                           ;13_April_WaterMeter_Main.c: 685: }
  7623                           ;13_April_WaterMeter_Main.c: 686: }
  7624                           ;13_April_WaterMeter_Main.c: 687: }
  7625                           ;13_April_WaterMeter_Main.c: 688: if(F_Success == 1){
  7626                           
  7627                           ; BSR set to: 0
  7628                           
  7629                           ; BSR set to: 0
  7630                           
  7631                           ; BSR set to: 0
  7632  001B24  0100               	movlb	0	; () banked
  7633  001B26  05A5               	decf	_F_Success& (0+255),w,b
  7634  001B28  A4D8               	btfss	status,2,c
  7635  001B2A  D5F9               	goto	l958
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;13_April_WaterMeter_Main.c: 689: Module_ID=((DeviceId_arr[0]*100) + (DeviceId_arr[1]*10
      +                          ) + (DeviceId_arr[2]));
  7639  001B2C  51B6               	movf	(_DeviceId_arr+1)& (0+255),w,b
  7640  001B2E  0D0A               	mullw	10
  7641  001B30  CFF3 F131          	movff	prodl,??_Set_DeviceId
  7642  001B34  51B5               	movf	_DeviceId_arr& (0+255),w,b
  7643  001B36  0D64               	mullw	100
  7644  001B38  50F3               	movf	prodl,w,c
  7645  001B3A  0101               	movlb	1	; () banked
  7646  001B3C  2531               	addwf	??_Set_DeviceId& (0+255),w,b
  7647  001B3E  0100               	movlb	0	; () banked
  7648  001B40  25B7               	addwf	(_DeviceId_arr+2)& (0+255),w,b
  7649  001B42  6FA3               	movwf	_Module_ID& (0+255),b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;13_April_WaterMeter_Main.c: 690: Write_b_eep2(0x02,Module_ID);
  7653  001B44  0E00               	movlw	0
  7654  001B46  0101               	movlb	1	; () banked
  7655  001B48  6F28               	movwf	(Write_b_eep2@badd+1)& (0+255),b
  7656  001B4A  0E02               	movlw	2
  7657  001B4C  6F27               	movwf	Write_b_eep2@badd& (0+255),b
  7658  001B4E  C0A3  F129         	movff	_Module_ID,Write_b_eep2@data
  7659  001B52  ECD1  F016         	call	_Write_b_eep2	;wreg free
  7660                           
  7661                           ;13_April_WaterMeter_Main.c: 691: F_Success=0;
  7662  001B56  0E00               	movlw	0
  7663  001B58  0100               	movlb	0	; () banked
  7664  001B5A  6FA5               	movwf	_F_Success& (0+255),b
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;13_April_WaterMeter_Main.c: 692: F_TimerCounting=1;
  7668  001B5C  0E01               	movlw	1
  7669  001B5E  6E02               	movwf	_F_TimerCounting,c
  7670                           
  7671                           ;13_April_WaterMeter_Main.c: 693: break;
  7672  001B60  0012               	return	
  7673  001B62                     __end_of_Set_DeviceId:
  7674                           	opt stack 0
  7675                           tblptru	equ	0xFF8
  7676                           tblptrh	equ	0xFF7
  7677                           tblptrl	equ	0xFF6
  7678                           tablat	equ	0xFF5
  7679                           prodh	equ	0xFF4
  7680                           prodl	equ	0xFF3
  7681                           intcon	equ	0xFF2
  7682                           postinc0	equ	0xFEE
  7683                           wreg	equ	0xFE8
  7684                           indf1	equ	0xFE7
  7685                           postdec1	equ	0xFE5
  7686                           fsr1h	equ	0xFE2
  7687                           fsr1l	equ	0xFE1
  7688                           indf2	equ	0xFDF
  7689                           postinc2	equ	0xFDE
  7690                           fsr2h	equ	0xFDA
  7691                           fsr2l	equ	0xFD9
  7692                           status	equ	0xFD8
  7693                           
  7694 ;; *************** function _lcd_clear *****************
  7695 ;; Defined at:
  7696 ;;		line 433 in file "13_April_WaterMeter_Main.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;Total ram usage:        0 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:   10
  7717 ;; This function calls:
  7718 ;;		_LcdCmd
  7719 ;; This function is called by:
  7720 ;;		_main
  7721 ;;		_Set_DeviceId
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text36
  7726  0032CA                     __ptext36:
  7727                           	opt stack 0
  7728  0032CA                     _lcd_clear:
  7729                           	opt stack 20
  7730                           
  7731                           ;13_April_WaterMeter_Main.c: 435: LcdCmd(0x01);
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;incstack = 0
  7735  0032CA  0E01               	movlw	1
  7736  0032CC  EC82  F018         	call	_LcdCmd
  7737  0032D0  0012               	return		;funcret
  7738  0032D2                     __end_of_lcd_clear:
  7739                           	opt stack 0
  7740                           tblptru	equ	0xFF8
  7741                           tblptrh	equ	0xFF7
  7742                           tblptrl	equ	0xFF6
  7743                           tablat	equ	0xFF5
  7744                           prodh	equ	0xFF4
  7745                           prodl	equ	0xFF3
  7746                           intcon	equ	0xFF2
  7747                           postinc0	equ	0xFEE
  7748                           wreg	equ	0xFE8
  7749                           indf1	equ	0xFE7
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           indf2	equ	0xFDF
  7754                           postinc2	equ	0xFDE
  7755                           fsr2h	equ	0xFDA
  7756                           fsr2l	equ	0xFD9
  7757                           status	equ	0xFD8
  7758                           
  7759 ;; *************** function ___awmod *****************
  7760 ;; Defined at:
  7761 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  dividend        2    0[BANK1 ] int 
  7764 ;;  divisor         2    2[BANK1 ] int 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  sign            1    5[BANK1 ] unsigned char 
  7767 ;;  counter         1    4[BANK1 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2    0[BANK1 ] int 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7777 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;Total ram usage:        6 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    8
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_main
  7788 ;;		_Set_DeviceId
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text37
  7793  0027BC                     __ptext37:
  7794                           	opt stack 0
  7795  0027BC                     ___awmod:
  7796                           	opt stack 22
  7797                           
  7798                           ;incstack = 0
  7799  0027BC  0E00               	movlw	0
  7800  0027BE  0101               	movlb	1	; () banked
  7801  0027C0  6F2C               	movwf	___awmod@sign& (0+255),b
  7802                           
  7803                           ; BSR set to: 1
  7804  0027C2  AF28               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7805  0027C4  D006               	goto	l1200
  7806                           
  7807                           ; BSR set to: 1
  7808  0027C6  6D27               	negf	___awmod@dividend& (0+255),b
  7809  0027C8  1F28               	comf	(___awmod@dividend+1)& (0+255),f,b
  7810  0027CA  B0D8               	btfsc	status,0,c
  7811  0027CC  2B28               	incf	(___awmod@dividend+1)& (0+255),f,b
  7812                           
  7813                           ; BSR set to: 1
  7814  0027CE  0E01               	movlw	1
  7815  0027D0  6F2C               	movwf	___awmod@sign& (0+255),b
  7816  0027D2                     l1200:
  7817                           
  7818                           ; BSR set to: 1
  7819                           
  7820                           ; BSR set to: 1
  7821  0027D2  AF2A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7822  0027D4  D004               	goto	l1201
  7823                           
  7824                           ; BSR set to: 1
  7825  0027D6  6D29               	negf	___awmod@divisor& (0+255),b
  7826  0027D8  1F2A               	comf	(___awmod@divisor+1)& (0+255),f,b
  7827  0027DA  B0D8               	btfsc	status,0,c
  7828  0027DC  2B2A               	incf	(___awmod@divisor+1)& (0+255),f,b
  7829  0027DE                     l1201:
  7830                           
  7831                           ; BSR set to: 1
  7832                           
  7833                           ; BSR set to: 1
  7834  0027DE  5129               	movf	___awmod@divisor& (0+255),w,b
  7835  0027E0  112A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7836  0027E2  B4D8               	btfsc	status,2,c
  7837  0027E4  D018               	goto	l1208
  7838                           
  7839                           ; BSR set to: 1
  7840  0027E6  0E01               	movlw	1
  7841  0027E8  6F2B               	movwf	___awmod@counter& (0+255),b
  7842  0027EA  D004               	goto	l1203
  7843  0027EC                     
  7844                           ; BSR set to: 1
  7845                           
  7846                           ; BSR set to: 1
  7847  0027EC  90D8               	bcf	status,0,c
  7848  0027EE  3729               	rlcf	___awmod@divisor& (0+255),f,b
  7849  0027F0  372A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7850  0027F2  2B2B               	incf	___awmod@counter& (0+255),f,b
  7851  0027F4                     l1203:
  7852                           
  7853                           ; BSR set to: 1
  7854                           
  7855                           ; BSR set to: 1
  7856  0027F4  AF2A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7857  0027F6  D7FA               	goto	l1204
  7858  0027F8                     u3760:
  7859                           
  7860                           ; BSR set to: 1
  7861                           
  7862                           ; BSR set to: 1
  7863                           
  7864                           ; BSR set to: 1
  7865  0027F8  5129               	movf	___awmod@divisor& (0+255),w,b
  7866  0027FA  5D27               	subwf	___awmod@dividend& (0+255),w,b
  7867  0027FC  512A               	movf	(___awmod@divisor+1)& (0+255),w,b
  7868  0027FE  5928               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7869  002800  A0D8               	btfss	status,0,c
  7870  002802  D004               	goto	l1207
  7871                           
  7872                           ; BSR set to: 1
  7873  002804  5129               	movf	___awmod@divisor& (0+255),w,b
  7874  002806  5F27               	subwf	___awmod@dividend& (0+255),f,b
  7875  002808  512A               	movf	(___awmod@divisor+1)& (0+255),w,b
  7876  00280A  5B28               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7877  00280C                     l1207:
  7878                           
  7879                           ; BSR set to: 1
  7880                           
  7881                           ; BSR set to: 1
  7882  00280C  90D8               	bcf	status,0,c
  7883  00280E  332A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7884  002810  3329               	rrcf	___awmod@divisor& (0+255),f,b
  7885                           
  7886                           ; BSR set to: 1
  7887  002812  2F2B               	decfsz	___awmod@counter& (0+255),f,b
  7888  002814  D7F1               	goto	u3760
  7889  002816                     l1208:
  7890                           
  7891                           ; BSR set to: 1
  7892                           
  7893                           ; BSR set to: 1
  7894                           
  7895                           ; BSR set to: 1
  7896  002816  512C               	movf	___awmod@sign& (0+255),w,b
  7897  002818  B4D8               	btfsc	status,2,c
  7898  00281A  D004               	goto	l1209
  7899                           
  7900                           ; BSR set to: 1
  7901  00281C  6D27               	negf	___awmod@dividend& (0+255),b
  7902  00281E  1F28               	comf	(___awmod@dividend+1)& (0+255),f,b
  7903  002820  B0D8               	btfsc	status,0,c
  7904  002822  2B28               	incf	(___awmod@dividend+1)& (0+255),f,b
  7905  002824                     l1209:
  7906                           
  7907                           ; BSR set to: 1
  7908                           
  7909                           ; BSR set to: 1
  7910  002824  C127  F127         	movff	___awmod@dividend,?___awmod
  7911  002828  C128  F128         	movff	___awmod@dividend+1,?___awmod+1
  7912  00282C  0012               	return	
  7913  00282E                     __end_of___awmod:
  7914                           	opt stack 0
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           intcon	equ	0xFF2
  7922                           postinc0	equ	0xFEE
  7923                           wreg	equ	0xFE8
  7924                           indf1	equ	0xFE7
  7925                           postdec1	equ	0xFE5
  7926                           fsr1h	equ	0xFE2
  7927                           fsr1l	equ	0xFE1
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           fsr2h	equ	0xFDA
  7931                           fsr2l	equ	0xFD9
  7932                           status	equ	0xFD8
  7933                           
  7934 ;; *************** function _Write_b_eep2 *****************
  7935 ;; Defined at:
  7936 ;;		line 530 in file "zigbee.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  badd            2    0[BANK1 ] unsigned int 
  7939 ;;  data            1    2[BANK1 ] unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  GIE_BIT_VAL     1    3[BANK1 ] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7951 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;Total ram usage:        4 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    8
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_Set_DeviceId
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text38
  7966  002DA2                     __ptext38:
  7967                           	opt stack 0
  7968  002DA2                     _Write_b_eep2:
  7969                           	opt stack 21
  7970                           
  7971                           ;zigbee.c: 531: char GIE_BIT_VAL = 0;
  7972                           
  7973                           ; BSR set to: 1
  7974                           ;incstack = 0
  7975  002DA2  0E00               	movlw	0
  7976  002DA4  0101               	movlb	1	; () banked
  7977  002DA6  6F2A               	movwf	Write_b_eep2@GIE_BIT_VAL& (0+255),b
  7978                           
  7979                           ; BSR set to: 1
  7980                           ;zigbee.c: 532: EEADR = (badd & 0x0FF);
  7981  002DA8  C127  FF62         	movff	Write_b_eep2@badd,3938	;volatile
  7982                           
  7983                           ; BSR set to: 1
  7984                           ;zigbee.c: 533: EEDATA = data;
  7985  002DAC  C129  FF61         	movff	Write_b_eep2@data,3937	;volatile
  7986                           
  7987                           ; BSR set to: 1
  7988                           ;zigbee.c: 534: EECON1bits.EEPGD = 0;
  7989  002DB0  9E7F               	bcf	3967,7,c	;volsfr
  7990                           
  7991                           ; BSR set to: 1
  7992                           ;zigbee.c: 535: EECON1bits.CFGS = 0;
  7993  002DB2  9C7F               	bcf	3967,6,c	;volsfr
  7994                           
  7995                           ; BSR set to: 1
  7996                           ;zigbee.c: 536: EECON1bits.WREN = 1;
  7997  002DB4  847F               	bsf	3967,2,c	;volsfr
  7998                           
  7999                           ; BSR set to: 1
  8000                           ;zigbee.c: 537: GIE_BIT_VAL = INTCONbits.GIE;
  8001  002DB6  0E00               	movlw	0
  8002  002DB8  BEF2               	btfsc	intcon,7,c	;volatile
  8003  002DBA  0E01               	movlw	1
  8004  002DBC  6F2A               	movwf	Write_b_eep2@GIE_BIT_VAL& (0+255),b
  8005                           
  8006                           ; BSR set to: 1
  8007                           ;zigbee.c: 538: INTCONbits.GIE = 0;
  8008  002DBE  9EF2               	bcf	intcon,7,c	;volatile
  8009                           
  8010                           ; BSR set to: 1
  8011                           ;zigbee.c: 539: EECON2 = 0x55;
  8012  002DC0  0E55               	movlw	85
  8013  002DC2  6E7E               	movwf	3966,c	;volsfr
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;zigbee.c: 540: EECON2 = 0xAA;
  8017  002DC4  0EAA               	movlw	170
  8018  002DC6  6E7E               	movwf	3966,c	;volsfr
  8019                           
  8020                           ; BSR set to: 1
  8021                           ;zigbee.c: 541: EECON1bits.WR = 1;
  8022  002DC8  827F               	bsf	3967,1,c	;volsfr
  8023  002DCA                     
  8024                           ; BSR set to: 1
  8025  002DCA  B27F               	btfsc	3967,1,c	;volsfr
  8026  002DCC  D7FE               	goto	l571
  8027                           
  8028                           ;zigbee.c: 543: INTCONbits.GIE = GIE_BIT_VAL;
  8029  002DCE  0101               	movlb	1	; () banked
  8030  002DD0  B12A               	btfsc	Write_b_eep2@GIE_BIT_VAL& (0+255),0,b
  8031  002DD2  D002               	bra	u3625
  8032  002DD4  9EF2               	bcf	intcon,7,c	;volatile
  8033  002DD6  D001               	bra	u3626
  8034  002DD8                     u3625:
  8035  002DD8  8EF2               	bsf	intcon,7,c	;volatile
  8036  002DDA                     u3626:
  8037                           
  8038                           ;zigbee.c: 544: EECON1bits.WREN = 0;
  8039  002DDA  947F               	bcf	3967,2,c	;volsfr
  8040  002DDC  0012               	return		;funcret
  8041  002DDE                     __end_of_Write_b_eep2:
  8042                           	opt stack 0
  8043                           tblptru	equ	0xFF8
  8044                           tblptrh	equ	0xFF7
  8045                           tblptrl	equ	0xFF6
  8046                           tablat	equ	0xFF5
  8047                           prodh	equ	0xFF4
  8048                           prodl	equ	0xFF3
  8049                           intcon	equ	0xFF2
  8050                           postinc0	equ	0xFEE
  8051                           wreg	equ	0xFE8
  8052                           indf1	equ	0xFE7
  8053                           postdec1	equ	0xFE5
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           indf2	equ	0xFDF
  8057                           postinc2	equ	0xFDE
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _Read_b_eep2 *****************
  8063 ;; Defined at:
  8064 ;;		line 547 in file "zigbee.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  badd            2    0[BANK1 ] unsigned int 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      unsigned char 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8078 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;Total ram usage:        2 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    8
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_main
  8089 ;;		_Set_DeviceId
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text39
  8094  003250                     __ptext39:
  8095                           	opt stack 0
  8096  003250                     _Read_b_eep2:
  8097                           	opt stack 21
  8098                           
  8099                           ;zigbee.c: 549: EEADR = (badd & 0x0FF);
  8100                           
  8101                           ;incstack = 0
  8102  003250  C127  FF62         	movff	Read_b_eep2@badd,3938	;volatile
  8103                           
  8104                           ;zigbee.c: 550: EECON1bits.CFGS = 0;
  8105  003254  9C7F               	bcf	3967,6,c	;volsfr
  8106                           
  8107                           ;zigbee.c: 551: EECON1bits.EEPGD = 0;
  8108  003256  9E7F               	bcf	3967,7,c	;volsfr
  8109                           
  8110                           ;zigbee.c: 552: EECON1bits.RD = 1;
  8111  003258  807F               	bsf	3967,0,c	;volsfr
  8112                           
  8113                           ;zigbee.c: 553: __nop();
  8114  00325A  F000               	nop	
  8115                           
  8116                           ;zigbee.c: 554: __nop();
  8117  00325C  F000               	nop	
  8118                           
  8119                           ;zigbee.c: 555: return (EEDATA);
  8120  00325E  5061               	movf	3937,w,c	;volatile
  8121  003260  0012               	return	
  8122  003262                     __end_of_Read_b_eep2:
  8123                           	opt stack 0
  8124                           tblptru	equ	0xFF8
  8125                           tblptrh	equ	0xFF7
  8126                           tblptrl	equ	0xFF6
  8127                           tablat	equ	0xFF5
  8128                           prodh	equ	0xFF4
  8129                           prodl	equ	0xFF3
  8130                           intcon	equ	0xFF2
  8131                           postinc0	equ	0xFEE
  8132                           wreg	equ	0xFE8
  8133                           indf1	equ	0xFE7
  8134                           postdec1	equ	0xFE5
  8135                           fsr1h	equ	0xFE2
  8136                           fsr1l	equ	0xFE1
  8137                           indf2	equ	0xFDF
  8138                           postinc2	equ	0xFDE
  8139                           fsr2h	equ	0xFDA
  8140                           fsr2l	equ	0xFD9
  8141                           status	equ	0xFD8
  8142                           
  8143 ;; *************** function _LcdDisplay *****************
  8144 ;; Defined at:
  8145 ;;		line 466 in file "13_April_WaterMeter_Main.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  LINE            1    wreg     unsigned char 
  8148 ;;  string          2    7[BANK1 ] PTR const unsigned char 
  8149 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(17), 
  8150 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  8151 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
  8152 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  8153 ;;		 -> STR_3(17), STR_2(19), STR_1(19), 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  LINE            1    9[BANK1 ] unsigned char 
  8156 ;;  data            1    0        unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8166 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;Total ram usage:        3 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:   10
  8173 ;; This function calls:
  8174 ;;		_LcdCmd
  8175 ;;		_LcdData
  8176 ;; This function is called by:
  8177 ;;		_main
  8178 ;;		_Set_DeviceId
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text40
  8183  002CA4                     __ptext40:
  8184                           	opt stack 0
  8185  002CA4                     _LcdDisplay:
  8186                           	opt stack 19
  8187                           
  8188                           ;incstack = 0
  8189                           ;LcdDisplay@LINE stored from wreg
  8190  002CA4  0101               	movlb	1	; () banked
  8191  002CA6  6F30               	movwf	LcdDisplay@LINE& (0+255),b
  8192                           
  8193                           ;13_April_WaterMeter_Main.c: 468: unsigned char data;
  8194                           ;13_April_WaterMeter_Main.c: 469: LcdCmd(LINE);
  8195  002CA8  0101               	movlb	1	; () banked
  8196  002CAA  5130               	movf	LcdDisplay@LINE& (0+255),w,b
  8197  002CAC  EC82  F018         	call	_LcdCmd
  8198                           
  8199                           ;13_April_WaterMeter_Main.c: 471: while(*string != '\0')
  8200  002CB0  D00D               	goto	l946
  8201  002CB2                     
  8202                           ;13_April_WaterMeter_Main.c: 472: {
  8203                           ;13_April_WaterMeter_Main.c: 473: LcdData(*string);
  8204  002CB2  C12E  FFF6         	movff	LcdDisplay@string,tblptrl
  8205  002CB6  C12F  FFF7         	movff	LcdDisplay@string+1,tblptrh
  8206  002CBA                     	if	0	;tblptru may be non-zero
  8207  002CBA                     	endif
  8208  002CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8209  002CBA  0E00               	movlw	low (__mediumconst shr (0+16))
  8210  002CBC  6EF8               	movwf	tblptru,c
  8211  002CBE                     	endif
  8212  002CBE  0008               	tblrd		*
  8213  002CC0  50F5               	movf	tablat,w,c
  8214  002CC2  EC72  F018         	call	_LcdData
  8215                           
  8216                           ;13_April_WaterMeter_Main.c: 474: string++;
  8217  002CC6  0101               	movlb	1	; () banked
  8218  002CC8  4B2E               	infsnz	LcdDisplay@string& (0+255),f,b
  8219  002CCA  2B2F               	incf	(LcdDisplay@string+1)& (0+255),f,b
  8220  002CCC                     l946:
  8221                           
  8222                           ; BSR set to: 1
  8223  002CCC  C12E  FFF6         	movff	LcdDisplay@string,tblptrl
  8224  002CD0  C12F  FFF7         	movff	LcdDisplay@string+1,tblptrh
  8225  002CD4                     	if	0	;tblptru may be non-zero
  8226  002CD4                     	endif
  8227  002CD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8228  002CD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8229  002CD6  6EF8               	movwf	tblptru,c
  8230  002CD8                     	endif
  8231  002CD8  0008               	tblrd		*
  8232  002CDA  50F5               	movf	tablat,w,c
  8233  002CDC  0900               	iorlw	0
  8234  002CDE  B4D8               	btfsc	status,2,c
  8235  002CE0  0012               	return	
  8236  002CE2  D7E7               	goto	l947
  8237  002CE4                     __end_of_LcdDisplay:
  8238                           	opt stack 0
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           prodh	equ	0xFF4
  8244                           prodl	equ	0xFF3
  8245                           intcon	equ	0xFF2
  8246                           postinc0	equ	0xFEE
  8247                           wreg	equ	0xFE8
  8248                           indf1	equ	0xFE7
  8249                           postdec1	equ	0xFE5
  8250                           fsr1h	equ	0xFE2
  8251                           fsr1l	equ	0xFE1
  8252                           indf2	equ	0xFDF
  8253                           postinc2	equ	0xFDE
  8254                           fsr2h	equ	0xFDA
  8255                           fsr2l	equ	0xFD9
  8256                           status	equ	0xFD8
  8257                           
  8258 ;; *************** function _LcdData *****************
  8259 ;; Defined at:
  8260 ;;		line 414 in file "13_April_WaterMeter_Main.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  value           1    wreg     unsigned char 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  value           1    6[BANK1 ] unsigned char 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0, cstack
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;Total ram usage:        1 bytes
  8279 ;; Hardware stack levels used:    1
  8280 ;; Hardware stack levels required when called:    9
  8281 ;; This function calls:
  8282 ;;		_Delayms
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;;		_LcdDisplay
  8286 ;;		_Set_DeviceId
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text41
  8291  0030E4                     __ptext41:
  8292                           	opt stack 0
  8293  0030E4                     _LcdData:
  8294                           	opt stack 19
  8295                           
  8296                           ;incstack = 0
  8297                           ;LcdData@value stored from wreg
  8298  0030E4  0101               	movlb	1	; () banked
  8299  0030E6  6F2D               	movwf	LcdData@value& (0+255),b
  8300                           
  8301                           ;13_April_WaterMeter_Main.c: 416: PORTE=value;
  8302  0030E8  C12D  FF84         	movff	LcdData@value,3972	;volatile
  8303                           
  8304                           ;13_April_WaterMeter_Main.c: 417: PORTFbits.RF1=1;
  8305  0030EC  8285               	bsf	3973,1,c	;volatile
  8306                           
  8307                           ;13_April_WaterMeter_Main.c: 418: __nop();
  8308  0030EE  F000               	nop	
  8309                           
  8310                           ;13_April_WaterMeter_Main.c: 419: PORTFbits.RF3=1;
  8311  0030F0  8685               	bsf	3973,3,c	;volatile
  8312                           
  8313                           ;13_April_WaterMeter_Main.c: 420: Delayms(5);
  8314  0030F2  0E00               	movlw	0
  8315  0030F4  0101               	movlb	1	; () banked
  8316  0030F6  6F28               	movwf	(Delayms@time+1)& (0+255),b
  8317  0030F8  0E05               	movlw	5
  8318  0030FA  6F27               	movwf	Delayms@time& (0+255),b
  8319  0030FC  EC72  F016         	call	_Delayms	;wreg free
  8320                           
  8321                           ;13_April_WaterMeter_Main.c: 421: PORTFbits.RF3=0;
  8322  003100  9685               	bcf	3973,3,c	;volatile
  8323  003102  0012               	return		;funcret
  8324  003104                     __end_of_LcdData:
  8325                           	opt stack 0
  8326                           tblptru	equ	0xFF8
  8327                           tblptrh	equ	0xFF7
  8328                           tblptrl	equ	0xFF6
  8329                           tablat	equ	0xFF5
  8330                           prodh	equ	0xFF4
  8331                           prodl	equ	0xFF3
  8332                           intcon	equ	0xFF2
  8333                           postinc0	equ	0xFEE
  8334                           wreg	equ	0xFE8
  8335                           indf1	equ	0xFE7
  8336                           postdec1	equ	0xFE5
  8337                           fsr1h	equ	0xFE2
  8338                           fsr1l	equ	0xFE1
  8339                           indf2	equ	0xFDF
  8340                           postinc2	equ	0xFDE
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function _Delayms1 *****************
  8346 ;; Defined at:
  8347 ;;		line 498 in file "zigbee.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  time            2    0[BANK1 ] unsigned int 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  j               2    4[BANK1 ] unsigned int 
  8352 ;;  i               2    2[BANK1 ] unsigned int 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8362 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;Total ram usage:        6 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    8
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_Set_DeviceId
  8373 ;;		_Delaysec
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text42
  8378  002DDE                     __ptext42:
  8379                           	opt stack 0
  8380  002DDE                     _Delayms1:
  8381                           	opt stack 21
  8382                           
  8383                           ;zigbee.c: 500: unsigned int i,j;
  8384                           ;zigbee.c: 501: for(i=0;i<time;i++)
  8385                           
  8386                           ;incstack = 0
  8387  002DDE  0E00               	movlw	0
  8388  002DE0  0101               	movlb	1	; () banked
  8389  002DE2  6F2A               	movwf	(Delayms1@i+1)& (0+255),b
  8390  002DE4  0E00               	movlw	0
  8391  002DE6  6F29               	movwf	Delayms1@i& (0+255),b
  8392  002DE8  D00F               	goto	l551
  8393  002DEA                     
  8394                           ; BSR set to: 1
  8395                           ;zigbee.c: 502: for(j=0;j<=500;j++);
  8396                           
  8397                           ; BSR set to: 1
  8398  002DEA  0E00               	movlw	0
  8399  002DEC  6F2C               	movwf	(Delayms1@j+1)& (0+255),b
  8400  002DEE  0E00               	movlw	0
  8401  002DF0  6F2B               	movwf	Delayms1@j& (0+255),b
  8402  002DF2                     l4935:
  8403                           
  8404                           ; BSR set to: 1
  8405  002DF2  0EF5               	movlw	245
  8406  002DF4  5D2B               	subwf	Delayms1@j& (0+255),w,b
  8407  002DF6  0E01               	movlw	1
  8408  002DF8  592C               	subwfb	(Delayms1@j+1)& (0+255),w,b
  8409  002DFA  B0D8               	btfsc	status,0,c
  8410  002DFC  D003               	goto	u3590
  8411                           
  8412                           ; BSR set to: 1
  8413                           
  8414                           ; BSR set to: 1
  8415                           
  8416                           ; BSR set to: 1
  8417  002DFE  4B2B               	infsnz	Delayms1@j& (0+255),f,b
  8418  002E00  2B2C               	incf	(Delayms1@j+1)& (0+255),f,b
  8419  002E02  D7F7               	goto	l4935
  8420  002E04                     u3590:
  8421                           
  8422                           ; BSR set to: 1
  8423                           
  8424                           ; BSR set to: 1
  8425  002E04  4B29               	infsnz	Delayms1@i& (0+255),f,b
  8426  002E06  2B2A               	incf	(Delayms1@i+1)& (0+255),f,b
  8427  002E08                     l551:
  8428                           
  8429                           ; BSR set to: 1
  8430                           
  8431                           ; BSR set to: 1
  8432  002E08  5127               	movf	Delayms1@time& (0+255),w,b
  8433  002E0A  5D29               	subwf	Delayms1@i& (0+255),w,b
  8434  002E0C  5128               	movf	(Delayms1@time+1)& (0+255),w,b
  8435  002E0E  592A               	subwfb	(Delayms1@i+1)& (0+255),w,b
  8436  002E10  B0D8               	btfsc	status,0,c
  8437  002E12  0012               	return	
  8438  002E14  D7EA               	goto	l552
  8439  002E16                     __end_of_Delayms1:
  8440                           	opt stack 0
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           postinc0	equ	0xFEE
  8449                           wreg	equ	0xFE8
  8450                           indf1	equ	0xFE7
  8451                           postdec1	equ	0xFE5
  8452                           fsr1h	equ	0xFE2
  8453                           fsr1l	equ	0xFE1
  8454                           indf2	equ	0xFDF
  8455                           postinc2	equ	0xFDE
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function _Busy_eep2 *****************
  8461 ;; Defined at:
  8462 ;;		line 557 in file "zigbee.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		None
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    8
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_Set_DeviceId
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text43
  8491  0032EA                     __ptext43:
  8492                           	opt stack 0
  8493  0032EA                     _Busy_eep2:
  8494                           	opt stack 21
  8495                           
  8496                           ;zigbee.c: 559: while(EECON1bits.WR);
  8497                           
  8498                           ; BSR set to: 1
  8499                           ;incstack = 0
  8500  0032EA  B27F               	btfsc	3967,1,c	;volsfr
  8501  0032EC  D7FE               	goto	_Busy_eep2
  8502  0032EE  0012               	return	
  8503  0032F0                     __end_of_Busy_eep2:
  8504                           	opt stack 0
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           postinc0	equ	0xFEE
  8513                           wreg	equ	0xFE8
  8514                           indf1	equ	0xFE7
  8515                           postdec1	equ	0xFE5
  8516                           fsr1h	equ	0xFE2
  8517                           fsr1l	equ	0xFE1
  8518                           indf2	equ	0xFDF
  8519                           postinc2	equ	0xFDE
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524 ;; *************** function _SYSTEM_Initialize *****************
  8525 ;; Defined at:
  8526 ;;		line 128 in file "mcc_generated_files/mcc.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;Total ram usage:        0 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:   10
  8547 ;; This function calls:
  8548 ;;		_EXT_INT_Initialize
  8549 ;;		_INTERRUPT_Initialize
  8550 ;;		_OSCILLATOR_Initialize
  8551 ;;		_PIN_MANAGER_Initialize
  8552 ;;		_TMR0_Initialize
  8553 ;; This function is called by:
  8554 ;;		_main
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text44
  8559  0031DC                     __ptext44:
  8560                           	opt stack 0
  8561  0031DC                     _SYSTEM_Initialize:
  8562                           	opt stack 20
  8563                           
  8564                           ;mcc.c: 130: INTERRUPT_Initialize();
  8565                           
  8566                           ;incstack = 0
  8567  0031DC  EC69  F019         	call	_INTERRUPT_Initialize	;wreg free
  8568                           
  8569                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  8570  0031E0  ECCD  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  8571                           
  8572                           ;mcc.c: 132: OSCILLATOR_Initialize();
  8573  0031E4  EC03  F019         	call	_OSCILLATOR_Initialize	;wreg free
  8574                           
  8575                           ;mcc.c: 133: EXT_INT_Initialize();
  8576  0031E8  EC25  F017         	call	_EXT_INT_Initialize	;wreg free
  8577                           
  8578                           ;mcc.c: 134: TMR0_Initialize();
  8579  0031EC  EC6C  F017         	call	_TMR0_Initialize	;wreg free
  8580  0031F0  0012               	return		;funcret
  8581  0031F2                     __end_of_SYSTEM_Initialize:
  8582                           	opt stack 0
  8583                           tblptru	equ	0xFF8
  8584                           tblptrh	equ	0xFF7
  8585                           tblptrl	equ	0xFF6
  8586                           tablat	equ	0xFF5
  8587                           prodh	equ	0xFF4
  8588                           prodl	equ	0xFF3
  8589                           intcon	equ	0xFF2
  8590                           postinc0	equ	0xFEE
  8591                           wreg	equ	0xFE8
  8592                           indf1	equ	0xFE7
  8593                           postdec1	equ	0xFE5
  8594                           fsr1h	equ	0xFE2
  8595                           fsr1l	equ	0xFE1
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           fsr2h	equ	0xFDA
  8599                           fsr2l	equ	0xFD9
  8600                           status	equ	0xFD8
  8601                           
  8602 ;; *************** function _TMR0_Initialize *****************
  8603 ;; Defined at:
  8604 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;		None
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0, cstack
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;Total ram usage:        0 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    9
  8625 ;; This function calls:
  8626 ;;		_TMR0_SetInterruptHandler
  8627 ;; This function is called by:
  8628 ;;		_SYSTEM_Initialize
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text45
  8633  002ED8                     __ptext45:
  8634                           	opt stack 0
  8635  002ED8                     _TMR0_Initialize:
  8636                           	opt stack 20
  8637                           
  8638                           ;tmr0.c: 71: TMR0H = 0x00;
  8639                           
  8640                           ;incstack = 0
  8641  002ED8  0E00               	movlw	0
  8642  002EDA  6ED7               	movwf	4055,c	;volatile
  8643                           
  8644                           ;tmr0.c: 74: TMR0L = 0x02;
  8645  002EDC  0E02               	movlw	2
  8646  002EDE  6ED6               	movwf	4054,c	;volatile
  8647                           
  8648                           ;tmr0.c: 78: timer0ReloadVal = 2;
  8649  002EE0  0E02               	movlw	2
  8650  002EE2  0100               	movlb	0	; () banked
  8651  002EE4  6FAF               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  8655  002EE6  94F2               	bcf	intcon,2,c	;volatile
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  8659  002EE8  8AF2               	bsf	intcon,5,c	;volatile
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8663  002EEA  0EF0               	movlw	low _TMR0_DefaultInterruptHandler
  8664  002EEC  0101               	movlb	1	; () banked
  8665  002EEE  6F27               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8666  002EF0  0E32               	movlw	high _TMR0_DefaultInterruptHandler
  8667  002EF2  6F28               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8668  002EF4  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  8669  002EF6  6F29               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  8670  002EF8  EC48  F019         	call	_TMR0_SetInterruptHandler	;wreg free
  8671                           
  8672                           ;tmr0.c: 90: T0CON = 0xD7;
  8673  002EFC  0ED7               	movlw	215
  8674  002EFE  6ED5               	movwf	4053,c	;volatile
  8675  002F00  0012               	return		;funcret
  8676  002F02                     __end_of_TMR0_Initialize:
  8677                           	opt stack 0
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           wreg	equ	0xFE8
  8687                           indf1	equ	0xFE7
  8688                           postdec1	equ	0xFE5
  8689                           fsr1h	equ	0xFE2
  8690                           fsr1l	equ	0xFE1
  8691                           indf2	equ	0xFDF
  8692                           postinc2	equ	0xFDE
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _TMR0_SetInterruptHandler *****************
  8698 ;; Defined at:
  8699 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  8702 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8714 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;Total ram usage:        3 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:    8
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_TMR0_Initialize
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text46
  8729  003290                     __ptext46:
  8730                           	opt stack 0
  8731  003290                     _TMR0_SetInterruptHandler:
  8732                           	opt stack 20
  8733                           
  8734                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
  8735                           
  8736                           ;incstack = 0
  8737  003290  C127  F073         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8738  003294  C128  F074         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8739  003298  C129  F075         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  8740  00329C  0012               	return		;funcret
  8741  00329E                     __end_of_TMR0_SetInterruptHandler:
  8742                           	opt stack 0
  8743                           tblptru	equ	0xFF8
  8744                           tblptrh	equ	0xFF7
  8745                           tblptrl	equ	0xFF6
  8746                           tablat	equ	0xFF5
  8747                           prodh	equ	0xFF4
  8748                           prodl	equ	0xFF3
  8749                           intcon	equ	0xFF2
  8750                           postinc0	equ	0xFEE
  8751                           wreg	equ	0xFE8
  8752                           indf1	equ	0xFE7
  8753                           postdec1	equ	0xFE5
  8754                           fsr1h	equ	0xFE2
  8755                           fsr1l	equ	0xFE1
  8756                           indf2	equ	0xFDF
  8757                           postinc2	equ	0xFDE
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function _PIN_MANAGER_Initialize *****************
  8763 ;; Defined at:
  8764 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:        0 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    8
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_SYSTEM_Initialize
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text47
  8793  002B9A                     __ptext47:
  8794                           	opt stack 0
  8795  002B9A                     _PIN_MANAGER_Initialize:
  8796                           	opt stack 21
  8797                           
  8798                           ;pin_manager.c: 57: LATE = 0x00;
  8799                           
  8800                           ;incstack = 0
  8801  002B9A  0E00               	movlw	0
  8802  002B9C  6E8D               	movwf	3981,c	;volatile
  8803                           
  8804                           ;pin_manager.c: 58: LATD = 0x00;
  8805  002B9E  0E00               	movlw	0
  8806  002BA0  6E8C               	movwf	3980,c	;volatile
  8807                           
  8808                           ;pin_manager.c: 59: LATA = 0x0F;
  8809  002BA2  0E0F               	movlw	15
  8810  002BA4  6E89               	movwf	3977,c	;volatile
  8811                           
  8812                           ;pin_manager.c: 60: LATF = 0x10;
  8813  002BA6  0E10               	movlw	16
  8814  002BA8  6E8E               	movwf	3982,c	;volatile
  8815                           
  8816                           ;pin_manager.c: 61: LATB = 0x00;
  8817  002BAA  0E00               	movlw	0
  8818  002BAC  6E8A               	movwf	3978,c	;volatile
  8819                           
  8820                           ;pin_manager.c: 62: LATG = 0x07;
  8821  002BAE  0E07               	movlw	7
  8822  002BB0  6E8F               	movwf	3983,c	;volatile
  8823                           
  8824                           ;pin_manager.c: 63: LATC = 0x03;
  8825  002BB2  0E03               	movlw	3
  8826  002BB4  6E8B               	movwf	3979,c	;volatile
  8827                           
  8828                           ;pin_manager.c: 68: TRISE = 0x00;
  8829  002BB6  0E00               	movlw	0
  8830  002BB8  6E96               	movwf	3990,c	;volatile
  8831                           
  8832                           ;pin_manager.c: 69: TRISF = 0xE0;
  8833  002BBA  0EE0               	movlw	224
  8834  002BBC  6E97               	movwf	3991,c	;volatile
  8835                           
  8836                           ;pin_manager.c: 70: TRISA = 0xC0;
  8837  002BBE  0EC0               	movlw	192
  8838  002BC0  6E92               	movwf	3986,c	;volatile
  8839                           
  8840                           ;pin_manager.c: 71: TRISG = 0x1F;
  8841  002BC2  0E1F               	movlw	31
  8842  002BC4  6E98               	movwf	3992,c	;volatile
  8843                           
  8844                           ;pin_manager.c: 72: TRISB = 0xFF;
  8845  002BC6  6893               	setf	3987,c	;volatile
  8846                           
  8847                           ;pin_manager.c: 73: TRISC = 0xFC;
  8848  002BC8  0EFC               	movlw	252
  8849  002BCA  6E94               	movwf	3988,c	;volatile
  8850                           
  8851                           ;pin_manager.c: 74: TRISD = 0xFF;
  8852  002BCC  6895               	setf	3989,c	;volatile
  8853                           
  8854                           ;pin_manager.c: 79: ANCON0 = 0x20;
  8855  002BCE  0E20               	movlw	32
  8856  002BD0  010F               	movlb	15	; () banked
  8857  002BD2  6F25               	movwf	37,b	;volatile
  8858                           
  8859                           ;pin_manager.c: 80: ANCON1 = 0x0C;
  8860  002BD4  0E0C               	movlw	12
  8861  002BD6  6F24               	movwf	36,b	;volatile
  8862                           
  8863                           ;pin_manager.c: 81: ANCON2 = 0x03;
  8864  002BD8  0E03               	movlw	3
  8865  002BDA  6F23               	movwf	35,b	;volatile
  8866                           
  8867                           ; BSR set to: 15
  8868  002BDC  0012               	return		;funcret
  8869  002BDE                     __end_of_PIN_MANAGER_Initialize:
  8870                           	opt stack 0
  8871                           tblptru	equ	0xFF8
  8872                           tblptrh	equ	0xFF7
  8873                           tblptrl	equ	0xFF6
  8874                           tablat	equ	0xFF5
  8875                           prodh	equ	0xFF4
  8876                           prodl	equ	0xFF3
  8877                           intcon	equ	0xFF2
  8878                           postinc0	equ	0xFEE
  8879                           wreg	equ	0xFE8
  8880                           indf1	equ	0xFE7
  8881                           postdec1	equ	0xFE5
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           indf2	equ	0xFDF
  8885                           postinc2	equ	0xFDE
  8886                           fsr2h	equ	0xFDA
  8887                           fsr2l	equ	0xFD9
  8888                           status	equ	0xFD8
  8889                           
  8890 ;; *************** function _OSCILLATOR_Initialize *****************
  8891 ;; Defined at:
  8892 ;;		line 137 in file "mcc_generated_files/mcc.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, status,2
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;Total ram usage:        0 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    8
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_SYSTEM_Initialize
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text48
  8921  003206                     __ptext48:
  8922                           	opt stack 0
  8923  003206                     _OSCILLATOR_Initialize:
  8924                           	opt stack 21
  8925                           
  8926                           ;mcc.c: 140: OSCCON = 0x60;
  8927                           
  8928                           ; BSR set to: 15
  8929                           ;incstack = 0
  8930  003206  0E60               	movlw	96
  8931  003208  6ED3               	movwf	4051,c	;volatile
  8932                           
  8933                           ;mcc.c: 142: OSCCON2 = 0x00;
  8934  00320A  0E00               	movlw	0
  8935  00320C  6E64               	movwf	3940,c	;volatile
  8936                           
  8937                           ;mcc.c: 144: OSCTUNE = 0x00;
  8938  00320E  0E00               	movlw	0
  8939  003210  6E9B               	movwf	3995,c	;volatile
  8940                           
  8941                           ;mcc.c: 146: REFOCON = 0x00;
  8942  003212  0E00               	movlw	0
  8943  003214  010F               	movlb	15	; () banked
  8944  003216  6F2A               	movwf	42,b	;volatile
  8945                           
  8946                           ; BSR set to: 15
  8947  003218  0012               	return		;funcret
  8948  00321A                     __end_of_OSCILLATOR_Initialize:
  8949                           	opt stack 0
  8950                           tblptru	equ	0xFF8
  8951                           tblptrh	equ	0xFF7
  8952                           tblptrl	equ	0xFF6
  8953                           tablat	equ	0xFF5
  8954                           prodh	equ	0xFF4
  8955                           prodl	equ	0xFF3
  8956                           intcon	equ	0xFF2
  8957                           postinc0	equ	0xFEE
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8
  8968                           
  8969 ;; *************** function _INTERRUPT_Initialize *****************
  8970 ;; Defined at:
  8971 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		None
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    8
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_SYSTEM_Initialize
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text49
  9000  0032D2                     __ptext49:
  9001                           	opt stack 0
  9002  0032D2                     _INTERRUPT_Initialize:
  9003                           	opt stack 21
  9004                           
  9005                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  9006                           
  9007                           ; BSR set to: 15
  9008                           ;incstack = 0
  9009  0032D2  8ED0               	bsf	4048,7,c	;volatile
  9010                           
  9011                           ;interrupt_manager.c: 62: INTCON3bits.INT1IP = 0;
  9012  0032D4  9CF0               	bcf	intcon3,6,c	;volatile
  9013                           
  9014                           ;interrupt_manager.c: 65: INTCON2bits.TMR0IP = 0;
  9015  0032D6  94F1               	bcf	intcon2,2,c	;volatile
  9016  0032D8  0012               	return		;funcret
  9017  0032DA                     __end_of_INTERRUPT_Initialize:
  9018                           	opt stack 0
  9019                           tblptru	equ	0xFF8
  9020                           tblptrh	equ	0xFF7
  9021                           tblptrl	equ	0xFF6
  9022                           tablat	equ	0xFF5
  9023                           prodh	equ	0xFF4
  9024                           prodl	equ	0xFF3
  9025                           intcon	equ	0xFF2
  9026                           intcon2	equ	0xFF1
  9027                           intcon3	equ	0xFF0
  9028                           postinc0	equ	0xFEE
  9029                           wreg	equ	0xFE8
  9030                           indf1	equ	0xFE7
  9031                           postdec1	equ	0xFE5
  9032                           fsr1h	equ	0xFE2
  9033                           fsr1l	equ	0xFE1
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function _EXT_INT_Initialize *****************
  9041 ;; Defined at:
  9042 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    9
  9063 ;; This function calls:
  9064 ;;		_INT0_SetInterruptHandler
  9065 ;;		_INT1_SetInterruptHandler
  9066 ;; This function is called by:
  9067 ;;		_SYSTEM_Initialize
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text50
  9072  002E4A                     __ptext50:
  9073                           	opt stack 0
  9074  002E4A                     _EXT_INT_Initialize:
  9075                           	opt stack 20
  9076                           
  9077                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  9078                           
  9079                           ;incstack = 0
  9080  002E4A  90F0               	bcf	intcon3,0,c	;volatile
  9081                           
  9082                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  9083  002E4C  8AF1               	bsf	intcon2,5,c	;volatile
  9084                           
  9085                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  9086  002E4E  0EF2               	movlw	low _INT1_DefaultInterruptHandler
  9087  002E50  0101               	movlb	1	; () banked
  9088  002E52  6F27               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9089  002E54  0E32               	movlw	high _INT1_DefaultInterruptHandler
  9090  002E56  6F28               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9091  002E58  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  9092  002E5A  6F29               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9093  002E5C  EC4F  F019         	call	_INT1_SetInterruptHandler	;wreg free
  9094                           
  9095                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  9096  002E60  86F0               	bsf	intcon3,3,c	;volatile
  9097                           
  9098                           ;ext_int.c: 100: (INTCONbits.INT0IF = 0);
  9099  002E62  92F2               	bcf	intcon,1,c	;volatile
  9100                           
  9101                           ;ext_int.c: 101: (INTCON2bits.INTEDG0 = 0);
  9102  002E64  9CF1               	bcf	intcon2,6,c	;volatile
  9103                           
  9104                           ;ext_int.c: 103: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  9105  002E66  0EF4               	movlw	low _INT0_DefaultInterruptHandler
  9106  002E68  0101               	movlb	1	; () banked
  9107  002E6A  6F27               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  9108  002E6C  0E32               	movlw	high _INT0_DefaultInterruptHandler
  9109  002E6E  6F28               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9110  002E70  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  9111  002E72  6F29               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9112  002E74  EC56  F019         	call	_INT0_SetInterruptHandler	;wreg free
  9113                           
  9114                           ;ext_int.c: 104: (INTCONbits.INT0IE = 1);
  9115  002E78  88F2               	bsf	intcon,4,c	;volatile
  9116  002E7A  0012               	return		;funcret
  9117  002E7C                     __end_of_EXT_INT_Initialize:
  9118                           	opt stack 0
  9119                           tblptru	equ	0xFF8
  9120                           tblptrh	equ	0xFF7
  9121                           tblptrl	equ	0xFF6
  9122                           tablat	equ	0xFF5
  9123                           prodh	equ	0xFF4
  9124                           prodl	equ	0xFF3
  9125                           intcon	equ	0xFF2
  9126                           intcon2	equ	0xFF1
  9127                           intcon3	equ	0xFF0
  9128                           postinc0	equ	0xFEE
  9129                           wreg	equ	0xFE8
  9130                           indf1	equ	0xFE7
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           fsr2h	equ	0xFDA
  9137                           fsr2l	equ	0xFD9
  9138                           status	equ	0xFD8
  9139                           
  9140 ;; *************** function _INT1_SetInterruptHandler *****************
  9141 ;; Defined at:
  9142 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  9145 ;;		 -> INT1_DefaultInterruptHandler(1), 
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9157 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;Total ram usage:        3 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    8
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_EXT_INT_Initialize
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text51
  9172  00329E                     __ptext51:
  9173                           	opt stack 0
  9174  00329E                     _INT1_SetInterruptHandler:
  9175                           	opt stack 20
  9176                           
  9177                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  9178                           
  9179                           ;incstack = 0
  9180  00329E  C127  F070         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  9181  0032A2  C128  F071         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  9182  0032A6  C129  F072         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  9183  0032AA  0012               	return		;funcret
  9184  0032AC                     __end_of_INT1_SetInterruptHandler:
  9185                           	opt stack 0
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           intcon	equ	0xFF2
  9193                           intcon2	equ	0xFF1
  9194                           intcon3	equ	0xFF0
  9195                           postinc0	equ	0xFEE
  9196                           wreg	equ	0xFE8
  9197                           indf1	equ	0xFE7
  9198                           postdec1	equ	0xFE5
  9199                           fsr1h	equ	0xFE2
  9200                           fsr1l	equ	0xFE1
  9201                           indf2	equ	0xFDF
  9202                           postinc2	equ	0xFDE
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function _INT0_SetInterruptHandler *****************
  9208 ;; Defined at:
  9209 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  9212 ;;		 -> INT0_DefaultInterruptHandler(1), 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9224 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;Total ram usage:        3 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    8
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_EXT_INT_Initialize
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text52
  9239  0032AC                     __ptext52:
  9240                           	opt stack 0
  9241  0032AC                     _INT0_SetInterruptHandler:
  9242                           	opt stack 20
  9243                           
  9244                           ;ext_int.c: 78: INT0_InterruptHandler = InterruptHandler;
  9245                           
  9246                           ;incstack = 0
  9247  0032AC  C127  F06D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  9248  0032B0  C128  F06E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  9249  0032B4  C129  F06F         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  9250  0032B8  0012               	return		;funcret
  9251  0032BA                     __end_of_INT0_SetInterruptHandler:
  9252                           	opt stack 0
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           intcon	equ	0xFF2
  9260                           intcon2	equ	0xFF1
  9261                           intcon3	equ	0xFF0
  9262                           postinc0	equ	0xFEE
  9263                           wreg	equ	0xFE8
  9264                           indf1	equ	0xFE7
  9265                           postdec1	equ	0xFE5
  9266                           fsr1h	equ	0xFE2
  9267                           fsr1l	equ	0xFE1
  9268                           indf2	equ	0xFDF
  9269                           postinc2	equ	0xFDE
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8
  9273                           
  9274 ;; *************** function _LcdInit *****************
  9275 ;; Defined at:
  9276 ;;		line 438 in file "13_April_WaterMeter_Main.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   10
  9297 ;; This function calls:
  9298 ;;		_Delayms
  9299 ;;		_LcdCmd
  9300 ;; This function is called by:
  9301 ;;		_main
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text53
  9306  002A6A                     __ptext53:
  9307                           	opt stack 0
  9308  002A6A                     _LcdInit:
  9309                           	opt stack 20
  9310                           
  9311                           ;13_April_WaterMeter_Main.c: 440: LcdCmd(0x38);
  9312                           
  9313                           ;incstack = 0
  9314  002A6A  0E38               	movlw	56
  9315  002A6C  EC82  F018         	call	_LcdCmd
  9316                           
  9317                           ;13_April_WaterMeter_Main.c: 441: Delayms(10);
  9318  002A70  0E00               	movlw	0
  9319  002A72  0101               	movlb	1	; () banked
  9320  002A74  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9321  002A76  0E0A               	movlw	10
  9322  002A78  6F27               	movwf	Delayms@time& (0+255),b
  9323  002A7A  EC72  F016         	call	_Delayms	;wreg free
  9324                           
  9325                           ;13_April_WaterMeter_Main.c: 442: LcdCmd(0x0E);
  9326  002A7E  0E0E               	movlw	14
  9327  002A80  EC82  F018         	call	_LcdCmd
  9328                           
  9329                           ;13_April_WaterMeter_Main.c: 443: Delayms(10);
  9330  002A84  0E00               	movlw	0
  9331  002A86  0101               	movlb	1	; () banked
  9332  002A88  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9333  002A8A  0E0A               	movlw	10
  9334  002A8C  6F27               	movwf	Delayms@time& (0+255),b
  9335  002A8E  EC72  F016         	call	_Delayms	;wreg free
  9336                           
  9337                           ;13_April_WaterMeter_Main.c: 444: LcdCmd(0x01);
  9338  002A92  0E01               	movlw	1
  9339  002A94  EC82  F018         	call	_LcdCmd
  9340                           
  9341                           ;13_April_WaterMeter_Main.c: 445: Delayms(10);
  9342  002A98  0E00               	movlw	0
  9343  002A9A  0101               	movlb	1	; () banked
  9344  002A9C  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9345  002A9E  0E0A               	movlw	10
  9346  002AA0  6F27               	movwf	Delayms@time& (0+255),b
  9347  002AA2  EC72  F016         	call	_Delayms	;wreg free
  9348                           
  9349                           ;13_April_WaterMeter_Main.c: 446: LcdCmd(0x80);
  9350  002AA6  0E80               	movlw	128
  9351  002AA8  EC82  F018         	call	_LcdCmd
  9352                           
  9353                           ;13_April_WaterMeter_Main.c: 447: Delayms(10);
  9354  002AAC  0E00               	movlw	0
  9355  002AAE  0101               	movlb	1	; () banked
  9356  002AB0  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9357  002AB2  0E0A               	movlw	10
  9358  002AB4  6F27               	movwf	Delayms@time& (0+255),b
  9359  002AB6  EC72  F016         	call	_Delayms	;wreg free
  9360  002ABA  0012               	return		;funcret
  9361  002ABC                     __end_of_LcdInit:
  9362                           	opt stack 0
  9363                           tblptru	equ	0xFF8
  9364                           tblptrh	equ	0xFF7
  9365                           tblptrl	equ	0xFF6
  9366                           tablat	equ	0xFF5
  9367                           prodh	equ	0xFF4
  9368                           prodl	equ	0xFF3
  9369                           intcon	equ	0xFF2
  9370                           intcon2	equ	0xFF1
  9371                           intcon3	equ	0xFF0
  9372                           postinc0	equ	0xFEE
  9373                           wreg	equ	0xFE8
  9374                           indf1	equ	0xFE7
  9375                           postdec1	equ	0xFE5
  9376                           fsr1h	equ	0xFE2
  9377                           fsr1l	equ	0xFE1
  9378                           indf2	equ	0xFDF
  9379                           postinc2	equ	0xFDE
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
  9383                           
  9384 ;; *************** function _LcdCmd *****************
  9385 ;; Defined at:
  9386 ;;		line 423 in file "13_April_WaterMeter_Main.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;  value           1    wreg     unsigned char 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  value           1    6[BANK1 ] unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:        1 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    9
  9407 ;; This function calls:
  9408 ;;		_Delayms
  9409 ;; This function is called by:
  9410 ;;		_main
  9411 ;;		_lcd_off_cursor
  9412 ;;		_lcd_clear
  9413 ;;		_LcdInit
  9414 ;;		_LcdDisplay
  9415 ;;		_Set_DeviceId
  9416 ;;		_scroll
  9417 ;;		_stop_scroll
  9418 ;;		_lcd_on_cursor
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text54
  9423  003104                     __ptext54:
  9424                           	opt stack 0
  9425  003104                     _LcdCmd:
  9426                           	opt stack 20
  9427                           
  9428                           ;incstack = 0
  9429                           ;LcdCmd@value stored from wreg
  9430  003104  0101               	movlb	1	; () banked
  9431  003106  6F2D               	movwf	LcdCmd@value& (0+255),b
  9432                           
  9433                           ;13_April_WaterMeter_Main.c: 425: PORTE=value;
  9434  003108  C12D  FF84         	movff	LcdCmd@value,3972	;volatile
  9435                           
  9436                           ;13_April_WaterMeter_Main.c: 426: PORTFbits.RF1=0;
  9437  00310C  9285               	bcf	3973,1,c	;volatile
  9438                           
  9439                           ;13_April_WaterMeter_Main.c: 427: __nop();
  9440  00310E  F000               	nop	
  9441                           
  9442                           ;13_April_WaterMeter_Main.c: 428: PORTFbits.RF3=1;
  9443  003110  8685               	bsf	3973,3,c	;volatile
  9444                           
  9445                           ;13_April_WaterMeter_Main.c: 429: Delayms(5);
  9446  003112  0E00               	movlw	0
  9447  003114  0101               	movlb	1	; () banked
  9448  003116  6F28               	movwf	(Delayms@time+1)& (0+255),b
  9449  003118  0E05               	movlw	5
  9450  00311A  6F27               	movwf	Delayms@time& (0+255),b
  9451  00311C  EC72  F016         	call	_Delayms	;wreg free
  9452                           
  9453                           ;13_April_WaterMeter_Main.c: 430: PORTFbits.RF3=0;
  9454  003120  9685               	bcf	3973,3,c	;volatile
  9455  003122  0012               	return		;funcret
  9456  003124                     __end_of_LcdCmd:
  9457                           	opt stack 0
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           intcon2	equ	0xFF1
  9466                           intcon3	equ	0xFF0
  9467                           postinc0	equ	0xFEE
  9468                           wreg	equ	0xFE8
  9469                           indf1	equ	0xFE7
  9470                           postdec1	equ	0xFE5
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           indf2	equ	0xFDF
  9474                           postinc2	equ	0xFDE
  9475                           fsr2h	equ	0xFDA
  9476                           fsr2l	equ	0xFD9
  9477                           status	equ	0xFD8
  9478                           
  9479 ;; *************** function _Delayms *****************
  9480 ;; Defined at:
  9481 ;;		line 480 in file "zigbee.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  time            2    0[BANK1 ] unsigned int 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  l               2    4[BANK1 ] int 
  9486 ;;  k               2    2[BANK1 ] int 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9496 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;Total ram usage:        6 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    8
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_main
  9507 ;;		_LcdData
  9508 ;;		_LcdCmd
  9509 ;;		_LcdInit
  9510 ;;		_stop_scroll
  9511 ;;		_LcdReady
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text55
  9516  002CE4                     __ptext55:
  9517                           	opt stack 0
  9518  002CE4                     _Delayms:
  9519                           	opt stack 20
  9520                           
  9521                           ;zigbee.c: 482: int k,l;
  9522                           ;zigbee.c: 483: for(k=0;k<time;k++)
  9523                           
  9524                           ;incstack = 0
  9525  002CE4  0E00               	movlw	0
  9526  002CE6  0101               	movlb	1	; () banked
  9527  002CE8  6F2A               	movwf	(Delayms@k+1)& (0+255),b
  9528  002CEA  0E00               	movlw	0
  9529  002CEC  6F29               	movwf	Delayms@k& (0+255),b
  9530  002CEE  D011               	goto	l537
  9531  002CF0                     
  9532                           ; BSR set to: 1
  9533                           ;zigbee.c: 484: for(l=0;l<=500;l++);
  9534                           
  9535                           ; BSR set to: 1
  9536  002CF0  0E00               	movlw	0
  9537  002CF2  6F2C               	movwf	(Delayms@l+1)& (0+255),b
  9538  002CF4  0E00               	movlw	0
  9539  002CF6  6F2B               	movwf	Delayms@l& (0+255),b
  9540  002CF8                     l4671:
  9541                           
  9542                           ; BSR set to: 1
  9543  002CF8  BF2C               	btfsc	(Delayms@l+1)& (0+255),7,b
  9544  002CFA  D006               	goto	l539
  9545  002CFC  0EF5               	movlw	245
  9546  002CFE  5D2B               	subwf	Delayms@l& (0+255),w,b
  9547  002D00  0E01               	movlw	1
  9548  002D02  592C               	subwfb	(Delayms@l+1)& (0+255),w,b
  9549  002D04  B0D8               	btfsc	status,0,c
  9550  002D06  D003               	goto	u3450
  9551  002D08                     l539:
  9552                           
  9553                           ; BSR set to: 1
  9554                           
  9555                           ; BSR set to: 1
  9556  002D08  4B2B               	infsnz	Delayms@l& (0+255),f,b
  9557  002D0A  2B2C               	incf	(Delayms@l+1)& (0+255),f,b
  9558  002D0C  D7F5               	goto	l4671
  9559  002D0E                     u3450:
  9560                           
  9561                           ; BSR set to: 1
  9562                           
  9563                           ; BSR set to: 1
  9564  002D0E  4B29               	infsnz	Delayms@k& (0+255),f,b
  9565  002D10  2B2A               	incf	(Delayms@k+1)& (0+255),f,b
  9566  002D12                     l537:
  9567                           
  9568                           ; BSR set to: 1
  9569                           
  9570                           ; BSR set to: 1
  9571  002D12  5127               	movf	Delayms@time& (0+255),w,b
  9572  002D14  5D29               	subwf	Delayms@k& (0+255),w,b
  9573  002D16  5128               	movf	(Delayms@time+1)& (0+255),w,b
  9574  002D18  592A               	subwfb	(Delayms@k+1)& (0+255),w,b
  9575  002D1A  A0D8               	btfss	status,0,c
  9576  002D1C  D7E9               	goto	l538
  9577                           
  9578                           ; BSR set to: 1
  9579                           ;zigbee.c: 485: __nop();
  9580  002D1E  F000               	nop	
  9581                           
  9582                           ;zigbee.c: 486: __nop();
  9583  002D20  F000               	nop	
  9584  002D22  0012               	return		;funcret
  9585  002D24                     __end_of_Delayms:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           intcon2	equ	0xFF1
  9595                           intcon3	equ	0xFF0
  9596                           postinc0	equ	0xFEE
  9597                           wreg	equ	0xFE8
  9598                           indf1	equ	0xFE7
  9599                           postdec1	equ	0xFE5
  9600                           fsr1h	equ	0xFE2
  9601                           fsr1l	equ	0xFE1
  9602                           indf2	equ	0xFDF
  9603                           postinc2	equ	0xFDE
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _InitSPI *****************
  9609 ;; Defined at:
  9610 ;;		line 442 in file "zigbee.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    9
  9631 ;; This function calls:
  9632 ;;		_delay
  9633 ;; This function is called by:
  9634 ;;		_main
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text56
  9639  003010                     __ptext56:
  9640                           	opt stack 0
  9641  003010                     _InitSPI:
  9642                           	opt stack 21
  9643                           
  9644                           ;zigbee.c: 443: SSP1CON1bits.SSPM0 = 0;
  9645                           
  9646                           ;incstack = 0
  9647  003010  90C6               	bcf	4038,0,c	;volatile
  9648                           
  9649                           ;zigbee.c: 444: SSP1CON1bits.SSPM1 = 0;
  9650  003012  92C6               	bcf	4038,1,c	;volatile
  9651                           
  9652                           ;zigbee.c: 445: SSP1CON1bits.SSPM2 = 0;
  9653  003014  94C6               	bcf	4038,2,c	;volatile
  9654                           
  9655                           ;zigbee.c: 446: SSP1CON1bits.SSPM3 = 0;
  9656  003016  96C6               	bcf	4038,3,c	;volatile
  9657                           
  9658                           ;zigbee.c: 448: TRISCbits.TRISC5 = 0;
  9659  003018  9A94               	bcf	3988,5,c	;volatile
  9660                           
  9661                           ;zigbee.c: 449: TRISCbits.TRISC3 = 0;
  9662  00301A  9694               	bcf	3988,3,c	;volatile
  9663                           
  9664                           ;zigbee.c: 450: SSP1CON1bits.SSPEN = 1;
  9665  00301C  8AC6               	bsf	4038,5,c	;volatile
  9666                           
  9667                           ;zigbee.c: 453: SSP1STATbits.SMP = 1;
  9668  00301E  8EC7               	bsf	4039,7,c	;volatile
  9669                           
  9670                           ;zigbee.c: 454: SSP1CON1bits.CKP = 0;
  9671  003020  98C6               	bcf	4038,4,c	;volatile
  9672                           
  9673                           ;zigbee.c: 455: SSP1STATbits.CKE = 1;
  9674  003022  8CC7               	bsf	4039,6,c	;volatile
  9675                           
  9676                           ;zigbee.c: 456: delay(10);
  9677  003024  0E00               	movlw	0
  9678  003026  0101               	movlb	1	; () banked
  9679  003028  6F28               	movwf	(delay@dly+1)& (0+255),b
  9680  00302A  0E0A               	movlw	10
  9681  00302C  6F27               	movwf	delay@dly& (0+255),b
  9682  00302E  EC92  F018         	call	_delay	;wreg free
  9683  003032  0012               	return		;funcret
  9684  003034                     __end_of_InitSPI:
  9685                           	opt stack 0
  9686                           tblptru	equ	0xFF8
  9687                           tblptrh	equ	0xFF7
  9688                           tblptrl	equ	0xFF6
  9689                           tablat	equ	0xFF5
  9690                           prodh	equ	0xFF4
  9691                           prodl	equ	0xFF3
  9692                           intcon	equ	0xFF2
  9693                           intcon2	equ	0xFF1
  9694                           intcon3	equ	0xFF0
  9695                           postinc0	equ	0xFEE
  9696                           wreg	equ	0xFE8
  9697                           indf1	equ	0xFE7
  9698                           postdec1	equ	0xFE5
  9699                           fsr1h	equ	0xFE2
  9700                           fsr1l	equ	0xFE1
  9701                           indf2	equ	0xFDF
  9702                           postinc2	equ	0xFDE
  9703                           fsr2h	equ	0xFDA
  9704                           fsr2l	equ	0xFD9
  9705                           status	equ	0xFD8
  9706                           
  9707 ;; *************** function _delay *****************
  9708 ;; Defined at:
  9709 ;;		line 472 in file "zigbee.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  dly             2    0[BANK1 ] unsigned int 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  l               2    2[BANK1 ] unsigned int 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, status,2, status,0
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9723 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;Total ram usage:        4 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; Hardware stack levels required when called:    8
  9730 ;; This function calls:
  9731 ;;		Nothing
  9732 ;; This function is called by:
  9733 ;;		_InitSPI
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text57
  9738  003124                     __ptext57:
  9739                           	opt stack 0
  9740  003124                     _delay:
  9741                           	opt stack 21
  9742                           
  9743                           ;zigbee.c: 473: unsigned int l;
  9744                           ;zigbee.c: 474: for(l=0;l<dly;l++);
  9745                           
  9746                           ;incstack = 0
  9747  003124  0E00               	movlw	0
  9748  003126  0101               	movlb	1	; () banked
  9749  003128  6F2A               	movwf	(delay@l+1)& (0+255),b
  9750  00312A  0E00               	movlw	0
  9751  00312C  6F29               	movwf	delay@l& (0+255),b
  9752  00312E  D002               	goto	l525
  9753  003130                     
  9754                           ; BSR set to: 1
  9755                           
  9756                           ; BSR set to: 1
  9757  003130  4B29               	infsnz	delay@l& (0+255),f,b
  9758  003132  2B2A               	incf	(delay@l+1)& (0+255),f,b
  9759  003134                     l525:
  9760                           
  9761                           ; BSR set to: 1
  9762                           
  9763                           ; BSR set to: 1
  9764  003134  5127               	movf	delay@dly& (0+255),w,b
  9765  003136  5D29               	subwf	delay@l& (0+255),w,b
  9766  003138  5128               	movf	(delay@dly+1)& (0+255),w,b
  9767  00313A  592A               	subwfb	(delay@l+1)& (0+255),w,b
  9768  00313C  B0D8               	btfsc	status,0,c
  9769  00313E  0012               	return	
  9770  003140  D7F7               	goto	l526
  9771  003142                     __end_of_delay:
  9772                           	opt stack 0
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           intcon	equ	0xFF2
  9780                           intcon2	equ	0xFF1
  9781                           intcon3	equ	0xFF0
  9782                           postinc0	equ	0xFEE
  9783                           wreg	equ	0xFE8
  9784                           indf1	equ	0xFE7
  9785                           postdec1	equ	0xFE5
  9786                           fsr1h	equ	0xFE2
  9787                           fsr1l	equ	0xFE1
  9788                           indf2	equ	0xFDF
  9789                           postinc2	equ	0xFDE
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  9795 ;; Defined at:
  9796 ;;		line 137 in file "13_April_WaterMeter_Main.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;		None
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;Total ram usage:       21 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    7
  9817 ;; This function calls:
  9818 ;;		_INT1_ISR
  9819 ;;		_ScanInput
  9820 ;;		_TMR0_ISR
  9821 ;;		___ftadd
  9822 ;;		___lwtoft
  9823 ;;		___wmul
  9824 ;;		i1___lwdiv
  9825 ;; This function is called by:
  9826 ;;		Interrupt level 1
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	intcodelo
  9831  000018                     __pintcodelo:
  9832                           	opt stack 0
  9833  000018                     _INTERRUPT_InterruptManagerLow:
  9834                           	opt stack 18
  9835                           
  9836                           ; BSR set to: 1
  9837                           ;incstack = 0
  9838  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9839  00001A  CFD8 F0CF          	movff	status,??_INTERRUPT_InterruptManagerLow
  9840  00001E  CFE8 F0D0          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  9841  000022  CFE0 F0D1          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  9842  000026  CFFA F0D2          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  9843  00002A  CFFB F0D3          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  9844  00002E  CFE9 F0D4          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  9845  000032  CFEA F0D5          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  9846  000036  CFE1 F0D6          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  9847  00003A  CFE2 F0D7          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  9848  00003E  CFD9 F0D8          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  9849  000042  CFDA F0D9          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  9850  000046  CFF3 F0DA          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  9851  00004A  CFF4 F0DB          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  9852  00004E  CFF6 F0DC          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  9853  000052  CFF7 F0DD          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  9854  000056  CFF8 F0DE          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  9855  00005A  CFF5 F0DF          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  9856  00005E  C04B  F0E0         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  9857  000062  C04C  F0E1         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  9858  000066  C04D  F0E2         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  9859  00006A  C04E  F0E3         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  9860                           
  9861                           ;13_April_WaterMeter_Main.c: 140: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  9862  00006E  B6F0               	btfsc	intcon3,3,c	;volatile
  9863  000070  A0F0               	btfss	intcon3,0,c	;volatile
  9864  000072  D005               	goto	i1l875
  9865                           
  9866                           ;13_April_WaterMeter_Main.c: 141: {
  9867                           ;13_April_WaterMeter_Main.c: 142: flow_frequency++;
  9868  000074  0100               	movlb	0	; () banked
  9869  000076  4B82               	infsnz	_flow_frequency& (0+255),f,b
  9870  000078  2B83               	incf	(_flow_frequency+1)& (0+255),f,b
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;13_April_WaterMeter_Main.c: 144: INT1_ISR();
  9874  00007A  EC6D  F019         	call	_INT1_ISR	;wreg free
  9875  00007E                     i1l875:
  9876                           
  9877                           ;13_April_WaterMeter_Main.c: 145: }
  9878                           ;13_April_WaterMeter_Main.c: 146: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9879  00007E  BAF2               	btfsc	intcon,5,c	;volatile
  9880  000080  A4F2               	btfss	intcon,2,c	;volatile
  9881  000082  D08B               	goto	i1l876
  9882                           
  9883                           ;13_April_WaterMeter_Main.c: 147: {
  9884                           ;13_April_WaterMeter_Main.c: 148: Time++;
  9885  000084  0100               	movlb	0	; () banked
  9886  000086  4B7E               	infsnz	_Time& (0+255),f,b
  9887  000088  2B7F               	incf	(_Time+1)& (0+255),f,b
  9888                           
  9889                           ;13_April_WaterMeter_Main.c: 149: Time2++;
  9890  00008A  4B7C               	infsnz	_Time2& (0+255),f,b
  9891  00008C  2B7D               	incf	(_Time2+1)& (0+255),f,b
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;13_April_WaterMeter_Main.c: 150: if(Time>20){
  9895  00008E  517F               	movf	(_Time+1)& (0+255),w,b
  9896  000090  E104               	bnz	i1u563_20
  9897  000092  0E15               	movlw	21
  9898  000094  5D7E               	subwf	_Time& (0+255),w,b
  9899  000096  A0D8               	btfss	status,0,c
  9900  000098  D022               	goto	i1l877
  9901  00009A                     i1u563_20:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;13_April_WaterMeter_Main.c: 151: Time=0;
  9905  00009A  0E00               	movlw	0
  9906  00009C  6F7F               	movwf	(_Time+1)& (0+255),b
  9907  00009E  0E00               	movlw	0
  9908  0000A0  6F7E               	movwf	_Time& (0+255),b
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;13_April_WaterMeter_Main.c: 152: Flow_Rate=(flow_frequency * 60 / 7);
  9912  0000A2  C082  F0BB         	movff	_flow_frequency,___wmul@multiplier
  9913  0000A6  C083  F0BC         	movff	_flow_frequency+1,___wmul@multiplier+1
  9914  0000AA  0E00               	movlw	0
  9915  0000AC  6FBE               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9916  0000AE  0E3C               	movlw	60
  9917  0000B0  6FBD               	movwf	___wmul@multiplicand& (0+255),b
  9918  0000B2  ECA9  F017         	call	___wmul	;wreg free
  9919  0000B6  C0BB  F0C1         	movff	?___wmul,i1___lwdiv@dividend
  9920  0000BA  C0BC  F0C2         	movff	?___wmul+1,i1___lwdiv@dividend+1
  9921  0000BE  0E00               	movlw	0
  9922  0000C0  0100               	movlb	0	; () banked
  9923  0000C2  6FC4               	movwf	(i1___lwdiv@divisor+1)& (0+255),b
  9924  0000C4  0E07               	movlw	7
  9925  0000C6  6FC3               	movwf	i1___lwdiv@divisor& (0+255),b
  9926  0000C8  EC0B  F015         	call	i1___lwdiv	;wreg free
  9927  0000CC  C0C1  F080         	movff	?i1___lwdiv,_Flow_Rate
  9928  0000D0  C0C2  F081         	movff	?i1___lwdiv+1,_Flow_Rate+1
  9929                           
  9930                           ;13_April_WaterMeter_Main.c: 153: flow_frequency=0;
  9931  0000D4  0E00               	movlw	0
  9932  0000D6  0100               	movlb	0	; () banked
  9933  0000D8  6F83               	movwf	(_flow_frequency+1)& (0+255),b
  9934  0000DA  0E00               	movlw	0
  9935  0000DC  6F82               	movwf	_flow_frequency& (0+255),b
  9936  0000DE                     i1l877:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;13_April_WaterMeter_Main.c: 154: }
  9940                           ;13_April_WaterMeter_Main.c: 155: if(Time2>500){
  9941                           
  9942                           ; BSR set to: 0
  9943  0000DE  0EF5               	movlw	245
  9944  0000E0  5D7C               	subwf	_Time2& (0+255),w,b
  9945  0000E2  0E01               	movlw	1
  9946  0000E4  597D               	subwfb	(_Time2+1)& (0+255),w,b
  9947  0000E6  A0D8               	btfss	status,0,c
  9948  0000E8  D02E               	goto	i1l878
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;13_April_WaterMeter_Main.c: 156: Time2=0;
  9952  0000EA  0E00               	movlw	0
  9953  0000EC  6F7D               	movwf	(_Time2+1)& (0+255),b
  9954  0000EE  0E00               	movlw	0
  9955  0000F0  6F7C               	movwf	_Time2& (0+255),b
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;13_April_WaterMeter_Main.c: 157: flowLitres=Flow_Rate/60;
  9959  0000F2  0E00               	movlw	0
  9960  0000F4  6FC4               	movwf	(i1___lwdiv@divisor+1)& (0+255),b
  9961  0000F6  0E3C               	movlw	60
  9962  0000F8  6FC3               	movwf	i1___lwdiv@divisor& (0+255),b
  9963  0000FA  C080  F0C1         	movff	_Flow_Rate,i1___lwdiv@dividend
  9964  0000FE  C081  F0C2         	movff	_Flow_Rate+1,i1___lwdiv@dividend+1
  9965  000102  EC0B  F015         	call	i1___lwdiv	;wreg free
  9966  000106  C0C1  F0C8         	movff	?i1___lwdiv,___lwtoft@c
  9967  00010A  C0C2  F0C9         	movff	?i1___lwdiv+1,___lwtoft@c+1
  9968  00010E  ECD1  F017         	call	___lwtoft	;wreg free
  9969  000112  C0C8  F064         	movff	?___lwtoft,_flowLitres
  9970  000116  C0C9  F065         	movff	?___lwtoft+1,_flowLitres+1
  9971  00011A  C0CA  F066         	movff	?___lwtoft+2,_flowLitres+2
  9972                           
  9973                           ;13_April_WaterMeter_Main.c: 158: totalLitres += flowLitres;
  9974  00011E  C067  F0C3         	movff	_totalLitres,___ftadd@f1
  9975  000122  C068  F0C4         	movff	_totalLitres+1,___ftadd@f1+1
  9976  000126  C069  F0C5         	movff	_totalLitres+2,___ftadd@f1+2
  9977  00012A  C064  F0C6         	movff	_flowLitres,___ftadd@f2
  9978  00012E  C065  F0C7         	movff	_flowLitres+1,___ftadd@f2+1
  9979  000132  C066  F0C8         	movff	_flowLitres+2,___ftadd@f2+2
  9980  000136  ECD2  F00F         	call	___ftadd	;wreg free
  9981  00013A  C0C3  F067         	movff	?___ftadd,_totalLitres
  9982  00013E  C0C4  F068         	movff	?___ftadd+1,_totalLitres+1
  9983  000142  C0C5  F069         	movff	?___ftadd+2,_totalLitres+2
  9984  000146                     i1l878:
  9985                           
  9986                           ;13_April_WaterMeter_Main.c: 159: }
  9987                           ;13_April_WaterMeter_Main.c: 161: __nop();
  9988  000146  F000               	nop	
  9989                           
  9990                           ;13_April_WaterMeter_Main.c: 165: ScanInput();
  9991  000148  EC86  F014         	call	_ScanInput	;wreg free
  9992                           
  9993                           ;13_April_WaterMeter_Main.c: 166: if(F_TimerCounting==1)
  9994  00014C  0402               	decf	_F_TimerCounting,w,c
  9995  00014E  A4D8               	btfss	status,2,c
  9996  000150  D013               	goto	i1l879
  9997                           
  9998                           ;13_April_WaterMeter_Main.c: 167: {
  9999                           ;13_April_WaterMeter_Main.c: 168: if(PORTGX.tbits.tb1==0)
 10000  000152  B203               	btfsc	_PORTGX,1,c
 10001  000154  D004               	goto	i1l880
 10002                           
 10003                           ;13_April_WaterMeter_Main.c: 169: Increment++;
 10004  000156  0100               	movlb	0	; () banked
 10005  000158  4B8C               	infsnz	_Increment& (0+255),f,b
 10006  00015A  2B8D               	incf	(_Increment+1)& (0+255),f,b
 10007  00015C  D01C               	goto	i1l887
 10008  00015E                     i1l880:
 10009                           
 10010                           ;13_April_WaterMeter_Main.c: 170: else if(PORTGX.tbits.tb2==0)
 10011  00015E  B403               	btfsc	_PORTGX,2,c
 10012  000160  D004               	goto	i1l882
 10013                           
 10014                           ;13_April_WaterMeter_Main.c: 171: Decrement++;
 10015  000162  0100               	movlb	0	; () banked
 10016  000164  4B8A               	infsnz	_Decrement& (0+255),f,b
 10017  000166  2B8B               	incf	(_Decrement+1)& (0+255),f,b
 10018  000168  D016               	goto	i1l887
 10019  00016A                     i1l882:
 10020                           
 10021                           ;13_April_WaterMeter_Main.c: 172: else if((F_Enter==0) && (PORTGX.tbits.tb0==0))
 10022                           
 10023                           ; BSR set to: 0
 10024  00016A  5001               	movf	_F_Enter,w,c
 10025  00016C  B4D8               	btfsc	status,2,c
 10026  00016E  B003               	btfsc	_PORTGX,0,c
 10027  000170  D012               	goto	i1l887
 10028                           
 10029                           ;13_April_WaterMeter_Main.c: 173: Enter++;
 10030  000172  0100               	movlb	0	; () banked
 10031  000174  2BA4               	incf	_Enter& (0+255),f,b
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;13_April_WaterMeter_Main.c: 174: }
 10035                           
 10036                           ; BSR set to: 0
 10037                           
 10038                           ; BSR set to: 0
 10039  000176  D00F               	goto	i1l887
 10040  000178                     i1l879:
 10041                           
 10042                           ;13_April_WaterMeter_Main.c: 176: else if((F_Enter==1)&&(PORTGX.tbits.tb0==0))
 10043                           
 10044                           ; BSR set to: 0
 10045  000178  0401               	decf	_F_Enter,w,c
 10046  00017A  B4D8               	btfsc	status,2,c
 10047  00017C  B003               	btfsc	_PORTGX,0,c
 10048  00017E  D00B               	goto	i1l887
 10049                           
 10050                           ;13_April_WaterMeter_Main.c: 177: {
 10051                           ;13_April_WaterMeter_Main.c: 178: ENTERCOUNT++;
 10052  000180  0100               	movlb	0	; () banked
 10053  000182  4B86               	infsnz	_ENTERCOUNT& (0+255),f,b
 10054  000184  2B87               	incf	(_ENTERCOUNT+1)& (0+255),f,b
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;13_April_WaterMeter_Main.c: 179: if (ENTERCOUNT >= 100)
 10058  000186  5187               	movf	(_ENTERCOUNT+1)& (0+255),w,b
 10059  000188  E104               	bnz	i1u572_20
 10060  00018A  0E64               	movlw	100
 10061  00018C  5D86               	subwf	_ENTERCOUNT& (0+255),w,b
 10062  00018E  A0D8               	btfss	status,0,c
 10063  000190  D002               	goto	i1l887
 10064  000192                     i1u572_20:
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;13_April_WaterMeter_Main.c: 180: {
 10068                           ;13_April_WaterMeter_Main.c: 181: flag=1;
 10069  000192  0E01               	movlw	1
 10070  000194  6FA7               	movwf	_flag& (0+255),b
 10071  000196                     i1l887:
 10072                           
 10073                           ;13_April_WaterMeter_Main.c: 182: }
 10074                           ;13_April_WaterMeter_Main.c: 183: }
 10075                           ;13_April_WaterMeter_Main.c: 184: TMR0_ISR();
 10076                           
 10077                           ; BSR set to: 0
 10078                           
 10079                           ; BSR set to: 0
 10080                           
 10081                           ; BSR set to: 0
 10082  000196  ECBD  F017         	call	_TMR0_ISR	;wreg free
 10083  00019A                     i1l876:
 10084  00019A  C0E3  F04E         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 10085  00019E  C0E2  F04D         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 10086  0001A2  C0E1  F04C         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 10087  0001A6  C0E0  F04B         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 10088  0001AA  C0DF  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 10089  0001AE  C0DE  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 10090  0001B2  C0DD  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 10091  0001B6  C0DC  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 10092  0001BA  C0DB  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 10093  0001BE  C0DA  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 10094  0001C2  C0D9  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 10095  0001C6  C0D8  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 10096  0001CA  C0D7  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 10097  0001CE  C0D6  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 10098  0001D2  C0D5  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 10099  0001D6  C0D4  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 10100  0001DA  C0D3  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 10101  0001DE  C0D2  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 10102  0001E2  C0D1  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 10103  0001E6  C0D0  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 10104  0001EA  C0CF  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 10105  0001EE  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10106  0001F0  0010               	retfie	
 10107  0001F2                     __end_of_INTERRUPT_InterruptManagerLow:
 10108                           	opt stack 0
 10109                           pclatu	equ	0xFFB
 10110                           pclath	equ	0xFFA
 10111                           tblptru	equ	0xFF8
 10112                           tblptrh	equ	0xFF7
 10113                           tblptrl	equ	0xFF6
 10114                           tablat	equ	0xFF5
 10115                           prodh	equ	0xFF4
 10116                           prodl	equ	0xFF3
 10117                           intcon	equ	0xFF2
 10118                           intcon2	equ	0xFF1
 10119                           intcon3	equ	0xFF0
 10120                           postinc0	equ	0xFEE
 10121                           fsr0h	equ	0xFEA
 10122                           fsr0l	equ	0xFE9
 10123                           wreg	equ	0xFE8
 10124                           indf1	equ	0xFE7
 10125                           postdec1	equ	0xFE5
 10126                           fsr1h	equ	0xFE2
 10127                           fsr1l	equ	0xFE1
 10128                           bsr	equ	0xFE0
 10129                           indf2	equ	0xFDF
 10130                           postinc2	equ	0xFDE
 10131                           fsr2h	equ	0xFDA
 10132                           fsr2l	equ	0xFD9
 10133                           status	equ	0xFD8
 10134                           
 10135 ;; *************** function i1___lwdiv *****************
 10136 ;; Defined at:
 10137 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  dividend        2    6[BANK0 ] unsigned int 
 10140 ;;  divisor         2    8[BANK0 ] unsigned int 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  __lwdiv         2   11[BANK0 ] unsigned int 
 10143 ;;  __lwdiv         1   10[BANK0 ] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  2    6[BANK0 ] unsigned int 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;Total ram usage:        7 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    4
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_INTERRUPT_InterruptManagerLow
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text59
 10168  002A16                     __ptext59:
 10169                           	opt stack 0
 10170  002A16                     i1___lwdiv:
 10171                           	opt stack 20
 10172                           
 10173                           ;incstack = 0
 10174  002A16  0E00               	movlw	0
 10175  002A18  0100               	movlb	0	; () banked
 10176  002A1A  6FC7               	movwf	(i1___lwdiv@quotient+1)& (0+255),b
 10177  002A1C  0E00               	movlw	0
 10178  002A1E  6FC6               	movwf	i1___lwdiv@quotient& (0+255),b
 10179                           
 10180                           ; BSR set to: 0
 10181  002A20  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10182  002A22  11C4               	iorwf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10183  002A24  B4D8               	btfsc	status,2,c
 10184  002A26  D01C               	goto	i1l1428
 10185                           
 10186                           ; BSR set to: 0
 10187  002A28  0E01               	movlw	1
 10188  002A2A  6FC5               	movwf	i1___lwdiv@counter& (0+255),b
 10189  002A2C  D004               	goto	i1l1423
 10190  002A2E                     
 10191                           ; BSR set to: 0
 10192                           
 10193                           ; BSR set to: 0
 10194  002A2E  90D8               	bcf	status,0,c
 10195  002A30  37C3               	rlcf	i1___lwdiv@divisor& (0+255),f,b
 10196  002A32  37C4               	rlcf	(i1___lwdiv@divisor+1)& (0+255),f,b
 10197  002A34  2BC5               	incf	i1___lwdiv@counter& (0+255),f,b
 10198  002A36                     i1l1423:
 10199                           
 10200                           ; BSR set to: 0
 10201                           
 10202                           ; BSR set to: 0
 10203  002A36  AFC4               	btfss	(i1___lwdiv@divisor+1)& (0+255),7,b
 10204  002A38  D7FA               	goto	i1l1424
 10205  002A3A                     i1u464_20:
 10206                           
 10207                           ; BSR set to: 0
 10208                           
 10209                           ; BSR set to: 0
 10210                           
 10211                           ; BSR set to: 0
 10212  002A3A  90D8               	bcf	status,0,c
 10213  002A3C  37C6               	rlcf	i1___lwdiv@quotient& (0+255),f,b
 10214  002A3E  37C7               	rlcf	(i1___lwdiv@quotient+1)& (0+255),f,b
 10215                           
 10216                           ; BSR set to: 0
 10217  002A40  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10218  002A42  5DC1               	subwf	i1___lwdiv@dividend& (0+255),w,b
 10219  002A44  51C4               	movf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10220  002A46  59C2               	subwfb	(i1___lwdiv@dividend+1)& (0+255),w,b
 10221  002A48  A0D8               	btfss	status,0,c
 10222  002A4A  D005               	goto	i1l1427
 10223                           
 10224                           ; BSR set to: 0
 10225  002A4C  51C3               	movf	i1___lwdiv@divisor& (0+255),w,b
 10226  002A4E  5FC1               	subwf	i1___lwdiv@dividend& (0+255),f,b
 10227  002A50  51C4               	movf	(i1___lwdiv@divisor+1)& (0+255),w,b
 10228  002A52  5BC2               	subwfb	(i1___lwdiv@dividend+1)& (0+255),f,b
 10229                           
 10230                           ; BSR set to: 0
 10231  002A54  81C6               	bsf	i1___lwdiv@quotient& (0+255),0,b
 10232  002A56                     i1l1427:
 10233                           
 10234                           ; BSR set to: 0
 10235                           
 10236                           ; BSR set to: 0
 10237  002A56  90D8               	bcf	status,0,c
 10238  002A58  33C4               	rrcf	(i1___lwdiv@divisor+1)& (0+255),f,b
 10239  002A5A  33C3               	rrcf	i1___lwdiv@divisor& (0+255),f,b
 10240                           
 10241                           ; BSR set to: 0
 10242  002A5C  2FC5               	decfsz	i1___lwdiv@counter& (0+255),f,b
 10243  002A5E  D7ED               	goto	i1u464_20
 10244  002A60                     i1l1428:
 10245                           
 10246                           ; BSR set to: 0
 10247                           
 10248                           ; BSR set to: 0
 10249  002A60  C0C6  F0C1         	movff	i1___lwdiv@quotient,?i1___lwdiv
 10250  002A64  C0C7  F0C2         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
 10251                           
 10252                           ; BSR set to: 0
 10253  002A68  0012               	return		;funcret
 10254  002A6A                     __end_ofi1___lwdiv:
 10255                           	opt stack 0
 10256                           pclatu	equ	0xFFB
 10257                           pclath	equ	0xFFA
 10258                           tblptru	equ	0xFF8
 10259                           tblptrh	equ	0xFF7
 10260                           tblptrl	equ	0xFF6
 10261                           tablat	equ	0xFF5
 10262                           prodh	equ	0xFF4
 10263                           prodl	equ	0xFF3
 10264                           intcon	equ	0xFF2
 10265                           intcon2	equ	0xFF1
 10266                           intcon3	equ	0xFF0
 10267                           postinc0	equ	0xFEE
 10268                           fsr0h	equ	0xFEA
 10269                           fsr0l	equ	0xFE9
 10270                           wreg	equ	0xFE8
 10271                           indf1	equ	0xFE7
 10272                           postdec1	equ	0xFE5
 10273                           fsr1h	equ	0xFE2
 10274                           fsr1l	equ	0xFE1
 10275                           bsr	equ	0xFE0
 10276                           indf2	equ	0xFDF
 10277                           postinc2	equ	0xFDE
 10278                           fsr2h	equ	0xFDA
 10279                           fsr2l	equ	0xFD9
 10280                           status	equ	0xFD8
 10281                           
 10282 ;; *************** function ___wmul *****************
 10283 ;; Defined at:
 10284 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10287 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  product         2    4[BANK0 ] unsigned int 
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  2    0[BANK0 ] unsigned int 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0, prodl, prodh
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;Total ram usage:        6 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    4
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_INTERRUPT_InterruptManagerLow
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text60
 10314  002F52                     __ptext60:
 10315                           	opt stack 0
 10316  002F52                     ___wmul:
 10317                           	opt stack 20
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;incstack = 0
 10321  002F52  0100               	movlb	0	; () banked
 10322  002F54  51BB               	movf	___wmul@multiplier& (0+255),w,b
 10323  002F56  03BD               	mulwf	___wmul@multiplicand& (0+255),b
 10324  002F58  CFF3 F0BF          	movff	prodl,___wmul@product
 10325  002F5C  CFF4 F0C0          	movff	prodh,___wmul@product+1
 10326  002F60  51BB               	movf	___wmul@multiplier& (0+255),w,b
 10327  002F62  03BE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10328  002F64  50F3               	movf	prodl,w,c
 10329  002F66  27C0               	addwf	(___wmul@product+1)& (0+255),f,b
 10330  002F68  51BC               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10331  002F6A  03BD               	mulwf	___wmul@multiplicand& (0+255),b
 10332  002F6C  50F3               	movf	prodl,w,c
 10333  002F6E  27C0               	addwf	(___wmul@product+1)& (0+255),f,b
 10334                           
 10335                           ; BSR set to: 0
 10336  002F70  C0BF  F0BB         	movff	___wmul@product,?___wmul
 10337  002F74  C0C0  F0BC         	movff	___wmul@product+1,?___wmul+1
 10338  002F78  0012               	return	
 10339  002F7A                     __end_of___wmul:
 10340                           	opt stack 0
 10341                           pclatu	equ	0xFFB
 10342                           pclath	equ	0xFFA
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           intcon	equ	0xFF2
 10350                           intcon2	equ	0xFF1
 10351                           intcon3	equ	0xFF0
 10352                           postinc0	equ	0xFEE
 10353                           fsr0h	equ	0xFEA
 10354                           fsr0l	equ	0xFE9
 10355                           wreg	equ	0xFE8
 10356                           indf1	equ	0xFE7
 10357                           postdec1	equ	0xFE5
 10358                           fsr1h	equ	0xFE2
 10359                           fsr1l	equ	0xFE1
 10360                           bsr	equ	0xFE0
 10361                           indf2	equ	0xFDF
 10362                           postinc2	equ	0xFDE
 10363                           fsr2h	equ	0xFDA
 10364                           fsr2l	equ	0xFD9
 10365                           status	equ	0xFD8
 10366                           
 10367 ;; *************** function ___lwtoft *****************
 10368 ;; Defined at:
 10369 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  c               2   13[BANK0 ] unsigned int 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  3   13[BANK0 ] float 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10383 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10387 ;;Total ram usage:        3 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    5
 10390 ;; This function calls:
 10391 ;;		___ftpack
 10392 ;; This function is called by:
 10393 ;;		_INTERRUPT_InterruptManagerLow
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text61
 10398  002FA2                     __ptext61:
 10399                           	opt stack 0
 10400  002FA2                     ___lwtoft:
 10401                           	opt stack 19
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;incstack = 0
 10405  002FA2  C0C8  F0BB         	movff	___lwtoft@c,___ftpack@arg
 10406  002FA6  C0C9  F0BC         	movff	___lwtoft@c+1,___ftpack@arg+1
 10407  002FAA  0100               	movlb	0	; () banked
 10408  002FAC  6BBD               	clrf	(___ftpack@arg+2)& (0+255),b
 10409  002FAE  0E8E               	movlw	142
 10410  002FB0  6FBE               	movwf	___ftpack@exp& (0+255),b
 10411  002FB2  0E00               	movlw	0
 10412  002FB4  6FBF               	movwf	___ftpack@sign& (0+255),b
 10413  002FB6  ECAF  F012         	call	___ftpack	;wreg free
 10414  002FBA  C0BB  F0C8         	movff	?___ftpack,?___lwtoft
 10415  002FBE  C0BC  F0C9         	movff	?___ftpack+1,?___lwtoft+1
 10416  002FC2  C0BD  F0CA         	movff	?___ftpack+2,?___lwtoft+2
 10417  002FC6  0012               	return	
 10418  002FC8                     __end_of___lwtoft:
 10419                           	opt stack 0
 10420                           pclatu	equ	0xFFB
 10421                           pclath	equ	0xFFA
 10422                           tblptru	equ	0xFF8
 10423                           tblptrh	equ	0xFF7
 10424                           tblptrl	equ	0xFF6
 10425                           tablat	equ	0xFF5
 10426                           prodh	equ	0xFF4
 10427                           prodl	equ	0xFF3
 10428                           intcon	equ	0xFF2
 10429                           intcon2	equ	0xFF1
 10430                           intcon3	equ	0xFF0
 10431                           postinc0	equ	0xFEE
 10432                           fsr0h	equ	0xFEA
 10433                           fsr0l	equ	0xFE9
 10434                           wreg	equ	0xFE8
 10435                           indf1	equ	0xFE7
 10436                           postdec1	equ	0xFE5
 10437                           fsr1h	equ	0xFE2
 10438                           fsr1l	equ	0xFE1
 10439                           bsr	equ	0xFE0
 10440                           indf2	equ	0xFDF
 10441                           postinc2	equ	0xFDE
 10442                           fsr2h	equ	0xFDA
 10443                           fsr2l	equ	0xFD9
 10444                           status	equ	0xFD8
 10445                           
 10446 ;; *************** function ___ftadd *****************
 10447 ;; Defined at:
 10448 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  f1              3    8[BANK0 ] float 
 10451 ;;  f2              3   11[BANK0 ] float 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  exp1            1   19[BANK0 ] unsigned char 
 10454 ;;  exp2            1   18[BANK0 ] unsigned char 
 10455 ;;  sign            1   17[BANK0 ] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  3    8[BANK0 ] float 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10465 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;Total ram usage:       12 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    5
 10472 ;; This function calls:
 10473 ;;		___ftpack
 10474 ;; This function is called by:
 10475 ;;		_INTERRUPT_InterruptManagerLow
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           	psect	text62
 10480  001FA4                     __ptext62:
 10481                           	opt stack 0
 10482  001FA4                     ___ftadd:
 10483                           	opt stack 19
 10484                           
 10485                           ;incstack = 0
 10486  001FA4  C0C5  F0C9         	movff	___ftadd@f1+2,??___ftadd
 10487  001FA8  0100               	movlb	0	; () banked
 10488  001FAA  6BCA               	clrf	(??___ftadd+1)& (0+255),b
 10489  001FAC  6BCB               	clrf	(??___ftadd+2)& (0+255),b
 10490  001FAE  35C4               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10491  001FB0  37C9               	rlcf	??___ftadd& (0+255),f,b
 10492  001FB2  E301               	bnc	u422_21
 10493  001FB4  81CA               	bsf	(??___ftadd+1)& (0+255),0,b
 10494  001FB6                     u422_21:
 10495  001FB6  51C9               	movf	??___ftadd& (0+255),w,b
 10496  001FB8  6FCE               	movwf	___ftadd@exp1& (0+255),b
 10497  001FBA  C0C8  F0C9         	movff	___ftadd@f2+2,??___ftadd
 10498  001FBE  6BCA               	clrf	(??___ftadd+1)& (0+255),b
 10499  001FC0  6BCB               	clrf	(??___ftadd+2)& (0+255),b
 10500  001FC2  35C7               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10501  001FC4  37C9               	rlcf	??___ftadd& (0+255),f,b
 10502  001FC6  E301               	bnc	u423_21
 10503  001FC8  81CA               	bsf	(??___ftadd+1)& (0+255),0,b
 10504  001FCA                     u423_21:
 10505  001FCA  51C9               	movf	??___ftadd& (0+255),w,b
 10506  001FCC  6FCD               	movwf	___ftadd@exp2& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509  001FCE  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10510  001FD0  B4D8               	btfsc	status,2,c
 10511  001FD2  D00B               	goto	i1u426_20
 10512                           
 10513                           ; BSR set to: 0
 10514  001FD4  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10515  001FD6  5DCE               	subwf	___ftadd@exp1& (0+255),w,b
 10516  001FD8  B0D8               	btfsc	status,0,c
 10517  001FDA  D00E               	goto	i1l1265
 10518                           
 10519                           ; BSR set to: 0
 10520  001FDC  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10521  001FDE  0800               	sublw	0
 10522  001FE0  25CD               	addwf	___ftadd@exp2& (0+255),w,b
 10523  001FE2  6FC9               	movwf	??___ftadd& (0+255),b
 10524  001FE4  0E18               	movlw	24
 10525  001FE6  65C9               	cpfsgt	??___ftadd& (0+255),b
 10526  001FE8  D007               	goto	i1l1265
 10527  001FEA                     i1u426_20:
 10528                           
 10529                           ; BSR set to: 0
 10530  001FEA  C0C6  F0C3         	movff	___ftadd@f2,?___ftadd
 10531  001FEE  C0C7  F0C4         	movff	___ftadd@f2+1,?___ftadd+1
 10532  001FF2  C0C8  F0C5         	movff	___ftadd@f2+2,?___ftadd+2
 10533  001FF6  0012               	return	
 10534  001FF8                     i1l1265:
 10535                           
 10536                           ; BSR set to: 0
 10537                           
 10538                           ; BSR set to: 0
 10539  001FF8  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10540  001FFA  B4D8               	btfsc	status,2,c
 10541  001FFC  D00B               	goto	i1u429_20
 10542                           
 10543                           ; BSR set to: 0
 10544  001FFE  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10545  002000  5DCD               	subwf	___ftadd@exp2& (0+255),w,b
 10546  002002  B0D8               	btfsc	status,0,c
 10547  002004  D00E               	goto	i1l1269
 10548                           
 10549                           ; BSR set to: 0
 10550  002006  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10551  002008  0800               	sublw	0
 10552  00200A  25CE               	addwf	___ftadd@exp1& (0+255),w,b
 10553  00200C  6FC9               	movwf	??___ftadd& (0+255),b
 10554  00200E  0E18               	movlw	24
 10555  002010  65C9               	cpfsgt	??___ftadd& (0+255),b
 10556  002012  D007               	goto	i1l1269
 10557  002014                     i1u429_20:
 10558                           
 10559                           ; BSR set to: 0
 10560  002014  C0C3  F0C3         	movff	___ftadd@f1,?___ftadd
 10561  002018  C0C4  F0C4         	movff	___ftadd@f1+1,?___ftadd+1
 10562  00201C  C0C5  F0C5         	movff	___ftadd@f1+2,?___ftadd+2
 10563  002020  0012               	return	
 10564  002022                     i1l1269:
 10565                           
 10566                           ; BSR set to: 0
 10567                           
 10568                           ; BSR set to: 0
 10569  002022  0E06               	movlw	6
 10570  002024  6FCC               	movwf	___ftadd@sign& (0+255),b
 10571                           
 10572                           ; BSR set to: 0
 10573  002026  BFC5               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 10574                           
 10575                           ; BSR set to: 0
 10576  002028  8FCC               	bsf	___ftadd@sign& (0+255),7,b
 10577                           
 10578                           ; BSR set to: 0
 10579                           
 10580                           ; BSR set to: 0
 10581  00202A  BFC8               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 10582                           
 10583                           ; BSR set to: 0
 10584  00202C  8DCC               	bsf	___ftadd@sign& (0+255),6,b
 10585                           
 10586                           ; BSR set to: 0
 10587  00202E  8FC4               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10588                           
 10589                           ; BSR set to: 0
 10590  002030  0EFF               	movlw	255
 10591  002032  17C3               	andwf	___ftadd@f1& (0+255),f,b
 10592  002034  0EFF               	movlw	255
 10593  002036  17C4               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10594  002038  0E00               	movlw	0
 10595  00203A  17C5               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10596  00203C  8FC7               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10597                           
 10598                           ; BSR set to: 0
 10599  00203E  0EFF               	movlw	255
 10600  002040  17C6               	andwf	___ftadd@f2& (0+255),f,b
 10601  002042  0EFF               	movlw	255
 10602  002044  17C7               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10603  002046  0E00               	movlw	0
 10604  002048  17C8               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10605                           
 10606                           ; BSR set to: 0
 10607  00204A  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10608  00204C  5DCE               	subwf	___ftadd@exp1& (0+255),w,b
 10609  00204E  B0D8               	btfsc	status,0,c
 10610  002050  D01B               	goto	i1l1274
 10611  002052                     i1u432_20:
 10612                           
 10613                           ; BSR set to: 0
 10614                           
 10615                           ; BSR set to: 0
 10616  002052  90D8               	bcf	status,0,c
 10617  002054  37C6               	rlcf	___ftadd@f2& (0+255),f,b
 10618  002056  37C7               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10619  002058  37C8               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10620  00205A  07CD               	decf	___ftadd@exp2& (0+255),f,b
 10621                           
 10622                           ; BSR set to: 0
 10623  00205C  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10624  00205E  19CD               	xorwf	___ftadd@exp2& (0+255),w,b
 10625  002060  B4D8               	btfsc	status,2,c
 10626  002062  D00D               	goto	i1l1279
 10627                           
 10628                           ; BSR set to: 0
 10629  002064  07CC               	decf	___ftadd@sign& (0+255),f,b
 10630  002066  C0CC  F0C9         	movff	___ftadd@sign,??___ftadd
 10631  00206A  0E07               	movlw	7
 10632  00206C  17C9               	andwf	??___ftadd& (0+255),f,b
 10633  00206E  B4D8               	btfsc	status,2,c
 10634  002070  D006               	goto	i1l1279
 10635  002072  D7EF               	goto	i1u432_20
 10636  002074                     
 10637                           ; BSR set to: 0
 10638                           
 10639                           ; BSR set to: 0
 10640  002074  90D8               	bcf	status,0,c
 10641  002076  33C5               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10642  002078  33C4               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10643  00207A  33C3               	rrcf	___ftadd@f1& (0+255),f,b
 10644  00207C  2BCE               	incf	___ftadd@exp1& (0+255),f,b
 10645  00207E                     i1l1279:
 10646                           
 10647                           ; BSR set to: 0
 10648                           
 10649                           ; BSR set to: 0
 10650  00207E  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10651  002080  19CE               	xorwf	___ftadd@exp1& (0+255),w,b
 10652  002082  B4D8               	btfsc	status,2,c
 10653  002084  D01F               	goto	i1u439_20
 10654  002086  D7F6               	goto	i1l1280
 10655  002088                     i1l1274:
 10656                           
 10657                           ; BSR set to: 0
 10658                           
 10659                           ; BSR set to: 0
 10660  002088  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10661  00208A  5DCD               	subwf	___ftadd@exp2& (0+255),w,b
 10662  00208C  B0D8               	btfsc	status,0,c
 10663  00208E  D01A               	goto	i1u439_20
 10664  002090                     i1u436_20:
 10665                           
 10666                           ; BSR set to: 0
 10667                           
 10668                           ; BSR set to: 0
 10669  002090  90D8               	bcf	status,0,c
 10670  002092  37C3               	rlcf	___ftadd@f1& (0+255),f,b
 10671  002094  37C4               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10672  002096  37C5               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10673  002098  07CE               	decf	___ftadd@exp1& (0+255),f,b
 10674                           
 10675                           ; BSR set to: 0
 10676  00209A  51CE               	movf	___ftadd@exp1& (0+255),w,b
 10677  00209C  19CD               	xorwf	___ftadd@exp2& (0+255),w,b
 10678  00209E  B4D8               	btfsc	status,2,c
 10679  0020A0  D00D               	goto	i1l1288
 10680                           
 10681                           ; BSR set to: 0
 10682  0020A2  07CC               	decf	___ftadd@sign& (0+255),f,b
 10683  0020A4  C0CC  F0C9         	movff	___ftadd@sign,??___ftadd
 10684  0020A8  0E07               	movlw	7
 10685  0020AA  17C9               	andwf	??___ftadd& (0+255),f,b
 10686  0020AC  B4D8               	btfsc	status,2,c
 10687  0020AE  D006               	goto	i1l1288
 10688  0020B0  D7EF               	goto	i1u436_20
 10689  0020B2                     
 10690                           ; BSR set to: 0
 10691                           
 10692                           ; BSR set to: 0
 10693  0020B2  90D8               	bcf	status,0,c
 10694  0020B4  33C8               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10695  0020B6  33C7               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10696  0020B8  33C6               	rrcf	___ftadd@f2& (0+255),f,b
 10697  0020BA  2BCD               	incf	___ftadd@exp2& (0+255),f,b
 10698  0020BC                     i1l1288:
 10699                           
 10700                           ; BSR set to: 0
 10701                           
 10702                           ; BSR set to: 0
 10703  0020BC  51CD               	movf	___ftadd@exp2& (0+255),w,b
 10704  0020BE  19CE               	xorwf	___ftadd@exp1& (0+255),w,b
 10705  0020C0  A4D8               	btfss	status,2,c
 10706  0020C2  D7F7               	goto	i1l1289
 10707  0020C4                     i1u439_20:
 10708                           
 10709                           ; BSR set to: 0
 10710                           
 10711                           ; BSR set to: 0
 10712                           
 10713                           ; BSR set to: 0
 10714  0020C4  AFCC               	btfss	___ftadd@sign& (0+255),7,b
 10715  0020C6  D00C               	goto	i1l1291
 10716                           
 10717                           ; BSR set to: 0
 10718  0020C8  0EFF               	movlw	255
 10719  0020CA  1BC3               	xorwf	___ftadd@f1& (0+255),f,b
 10720  0020CC  0EFF               	movlw	255
 10721  0020CE  1BC4               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10722  0020D0  0EFF               	movlw	255
 10723  0020D2  1BC5               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10724  0020D4  0E01               	movlw	1
 10725  0020D6  27C3               	addwf	___ftadd@f1& (0+255),f,b
 10726  0020D8  0E00               	movlw	0
 10727  0020DA  23C4               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10728  0020DC  0E00               	movlw	0
 10729  0020DE  23C5               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10730  0020E0                     i1l1291:
 10731                           
 10732                           ; BSR set to: 0
 10733  0020E0  ADCC               	btfss	___ftadd@sign& (0+255),6,b
 10734  0020E2  D00C               	goto	i1l1292
 10735                           
 10736                           ; BSR set to: 0
 10737  0020E4  0EFF               	movlw	255
 10738  0020E6  1BC6               	xorwf	___ftadd@f2& (0+255),f,b
 10739  0020E8  0EFF               	movlw	255
 10740  0020EA  1BC7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10741  0020EC  0EFF               	movlw	255
 10742  0020EE  1BC8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10743  0020F0  0E01               	movlw	1
 10744  0020F2  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10745  0020F4  0E00               	movlw	0
 10746  0020F6  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10747  0020F8  0E00               	movlw	0
 10748  0020FA  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10749  0020FC                     i1l1292:
 10750                           
 10751                           ; BSR set to: 0
 10752                           
 10753                           ; BSR set to: 0
 10754  0020FC  0E00               	movlw	0
 10755  0020FE  6FCC               	movwf	___ftadd@sign& (0+255),b
 10756                           
 10757                           ; BSR set to: 0
 10758  002100  51C3               	movf	___ftadd@f1& (0+255),w,b
 10759  002102  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10760  002104  51C4               	movf	(___ftadd@f1+1)& (0+255),w,b
 10761  002106  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10762  002108  51C5               	movf	(___ftadd@f1+2)& (0+255),w,b
 10763  00210A  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10764                           
 10765                           ; BSR set to: 0
 10766  00210C  AFC8               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10767  00210E  D00E               	goto	i1l1293
 10768                           
 10769                           ; BSR set to: 0
 10770  002110  0EFF               	movlw	255
 10771  002112  1BC6               	xorwf	___ftadd@f2& (0+255),f,b
 10772  002114  0EFF               	movlw	255
 10773  002116  1BC7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10774  002118  0EFF               	movlw	255
 10775  00211A  1BC8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10776  00211C  0E01               	movlw	1
 10777  00211E  27C6               	addwf	___ftadd@f2& (0+255),f,b
 10778  002120  0E00               	movlw	0
 10779  002122  23C7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10780  002124  0E00               	movlw	0
 10781  002126  23C8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10782                           
 10783                           ; BSR set to: 0
 10784  002128  0E01               	movlw	1
 10785  00212A  6FCC               	movwf	___ftadd@sign& (0+255),b
 10786  00212C                     i1l1293:
 10787                           
 10788                           ; BSR set to: 0
 10789                           
 10790                           ; BSR set to: 0
 10791  00212C  C0C6  F0BB         	movff	___ftadd@f2,___ftpack@arg
 10792  002130  C0C7  F0BC         	movff	___ftadd@f2+1,___ftpack@arg+1
 10793  002134  C0C8  F0BD         	movff	___ftadd@f2+2,___ftpack@arg+2
 10794  002138  C0CE  F0BE         	movff	___ftadd@exp1,___ftpack@exp
 10795  00213C  C0CC  F0BF         	movff	___ftadd@sign,___ftpack@sign
 10796  002140  ECAF  F012         	call	___ftpack	;wreg free
 10797  002144  C0BB  F0C3         	movff	?___ftpack,?___ftadd
 10798  002148  C0BC  F0C4         	movff	?___ftpack+1,?___ftadd+1
 10799  00214C  C0BD  F0C5         	movff	?___ftpack+2,?___ftadd+2
 10800  002150  0012               	return	
 10801  002152                     __end_of___ftadd:
 10802                           	opt stack 0
 10803                           pclatu	equ	0xFFB
 10804                           pclath	equ	0xFFA
 10805                           tblptru	equ	0xFF8
 10806                           tblptrh	equ	0xFF7
 10807                           tblptrl	equ	0xFF6
 10808                           tablat	equ	0xFF5
 10809                           prodh	equ	0xFF4
 10810                           prodl	equ	0xFF3
 10811                           intcon	equ	0xFF2
 10812                           intcon2	equ	0xFF1
 10813                           intcon3	equ	0xFF0
 10814                           postinc0	equ	0xFEE
 10815                           fsr0h	equ	0xFEA
 10816                           fsr0l	equ	0xFE9
 10817                           wreg	equ	0xFE8
 10818                           indf1	equ	0xFE7
 10819                           postdec1	equ	0xFE5
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           bsr	equ	0xFE0
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           fsr2h	equ	0xFDA
 10826                           fsr2l	equ	0xFD9
 10827                           status	equ	0xFD8
 10828                           
 10829 ;; *************** function ___ftpack *****************
 10830 ;; Defined at:
 10831 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  arg             3    0[BANK0 ] unsigned um
 10834 ;;  exp             1    3[BANK0 ] unsigned char 
 10835 ;;  sign            1    4[BANK0 ] unsigned char 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  3    0[BANK0 ] float 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10847 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;Total ram usage:        8 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    4
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		___ftadd
 10858 ;;		___lwtoft
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text63
 10863  00255E                     __ptext63:
 10864                           	opt stack 0
 10865  00255E                     ___ftpack:
 10866                           	opt stack 19
 10867                           
 10868                           ;incstack = 0
 10869  00255E  0100               	movlb	0	; () banked
 10870  002560  51BE               	movf	___ftpack@exp& (0+255),w,b
 10871  002562  B4D8               	btfsc	status,2,c
 10872  002564  D005               	goto	i1u366_20
 10873                           
 10874                           ; BSR set to: 0
 10875  002566  51BB               	movf	___ftpack@arg& (0+255),w,b
 10876  002568  11BC               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10877  00256A  11BD               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10878  00256C  A4D8               	btfss	status,2,c
 10879  00256E  D00C               	goto	i1l1234
 10880  002570                     i1u366_20:
 10881                           
 10882                           ; BSR set to: 0
 10883                           
 10884                           ; BSR set to: 0
 10885  002570  0E00               	movlw	0
 10886  002572  6FBB               	movwf	?___ftpack& (0+255),b
 10887  002574  0E00               	movlw	0
 10888  002576  6FBC               	movwf	(?___ftpack+1)& (0+255),b
 10889  002578  0E00               	movlw	0
 10890  00257A  6FBD               	movwf	(?___ftpack+2)& (0+255),b
 10891                           
 10892                           ; BSR set to: 0
 10893  00257C  0012               	return	
 10894  00257E                     
 10895                           ; BSR set to: 0
 10896                           
 10897                           ; BSR set to: 0
 10898  00257E  2BBE               	incf	___ftpack@exp& (0+255),f,b
 10899  002580  90D8               	bcf	status,0,c
 10900  002582  33BD               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10901  002584  33BC               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10902  002586  33BB               	rrcf	___ftpack@arg& (0+255),f,b
 10903  002588                     i1l1234:
 10904                           
 10905                           ; BSR set to: 0
 10906                           
 10907                           ; BSR set to: 0
 10908  002588  0E00               	movlw	0
 10909  00258A  15BB               	andwf	___ftpack@arg& (0+255),w,b
 10910  00258C  6FC0               	movwf	??___ftpack& (0+255),b
 10911  00258E  0E00               	movlw	0
 10912  002590  15BC               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10913  002592  6FC1               	movwf	(??___ftpack+1)& (0+255),b
 10914  002594  0EFE               	movlw	254
 10915  002596  15BD               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10916  002598  6FC2               	movwf	(??___ftpack+2)& (0+255),b
 10917  00259A  51C0               	movf	??___ftpack& (0+255),w,b
 10918  00259C  11C1               	iorwf	(??___ftpack+1)& (0+255),w,b
 10919  00259E  11C2               	iorwf	(??___ftpack+2)& (0+255),w,b
 10920  0025A0  B4D8               	btfsc	status,2,c
 10921  0025A2  D00C               	goto	i1l1237
 10922  0025A4  D7EC               	goto	i1l1235
 10923  0025A6                     
 10924                           ; BSR set to: 0
 10925                           
 10926                           ; BSR set to: 0
 10927  0025A6  2BBE               	incf	___ftpack@exp& (0+255),f,b
 10928                           
 10929                           ; BSR set to: 0
 10930  0025A8  0E01               	movlw	1
 10931  0025AA  27BB               	addwf	___ftpack@arg& (0+255),f,b
 10932  0025AC  0E00               	movlw	0
 10933  0025AE  23BC               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10934  0025B0  0E00               	movlw	0
 10935  0025B2  23BD               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10936  0025B4  90D8               	bcf	status,0,c
 10937  0025B6  33BD               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10938  0025B8  33BC               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10939  0025BA  33BB               	rrcf	___ftpack@arg& (0+255),f,b
 10940  0025BC                     i1l1237:
 10941                           
 10942                           ; BSR set to: 0
 10943                           
 10944                           ; BSR set to: 0
 10945  0025BC  0E00               	movlw	0
 10946  0025BE  15BB               	andwf	___ftpack@arg& (0+255),w,b
 10947  0025C0  6FC0               	movwf	??___ftpack& (0+255),b
 10948  0025C2  0E00               	movlw	0
 10949  0025C4  15BC               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10950  0025C6  6FC1               	movwf	(??___ftpack+1)& (0+255),b
 10951  0025C8  0EFF               	movlw	255
 10952  0025CA  15BD               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10953  0025CC  6FC2               	movwf	(??___ftpack+2)& (0+255),b
 10954  0025CE  51C0               	movf	??___ftpack& (0+255),w,b
 10955  0025D0  11C1               	iorwf	(??___ftpack+1)& (0+255),w,b
 10956  0025D2  11C2               	iorwf	(??___ftpack+2)& (0+255),w,b
 10957  0025D4  B4D8               	btfsc	status,2,c
 10958  0025D6  D006               	goto	i1l1240
 10959  0025D8  D7E6               	goto	i1l1238
 10960  0025DA                     
 10961                           ; BSR set to: 0
 10962                           
 10963                           ; BSR set to: 0
 10964  0025DA  07BE               	decf	___ftpack@exp& (0+255),f,b
 10965  0025DC  90D8               	bcf	status,0,c
 10966  0025DE  37BB               	rlcf	___ftpack@arg& (0+255),f,b
 10967  0025E0  37BC               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10968  0025E2  37BD               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10969  0025E4                     i1l1240:
 10970                           
 10971                           ; BSR set to: 0
 10972                           
 10973                           ; BSR set to: 0
 10974  0025E4  BFBC               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10975  0025E6  D003               	goto	i1u370_20
 10976                           
 10977                           ; BSR set to: 0
 10978  0025E8  0E02               	movlw	2
 10979  0025EA  61BE               	cpfslt	___ftpack@exp& (0+255),b
 10980  0025EC  D7F6               	goto	i1l1241
 10981  0025EE                     i1u370_20:
 10982                           
 10983                           ; BSR set to: 0
 10984                           
 10985                           ; BSR set to: 0
 10986  0025EE  A1BE               	btfss	___ftpack@exp& (0+255),0,b
 10987                           
 10988                           ; BSR set to: 0
 10989  0025F0  9FBC               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10990                           
 10991                           ; BSR set to: 0
 10992                           
 10993                           ; BSR set to: 0
 10994  0025F2  90D8               	bcf	status,0,c
 10995  0025F4  33BE               	rrcf	___ftpack@exp& (0+255),f,b
 10996  0025F6  51BE               	movf	___ftpack@exp& (0+255),w,b
 10997  0025F8  13BD               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10998                           
 10999                           ; BSR set to: 0
 11000  0025FA  51BF               	movf	___ftpack@sign& (0+255),w,b
 11001  0025FC  A4D8               	btfss	status,2,c
 11002                           
 11003                           ; BSR set to: 0
 11004  0025FE  8FBD               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11005                           
 11006                           ; BSR set to: 0
 11007                           
 11008                           ; BSR set to: 0
 11009  002600  C0BB  F0BB         	movff	___ftpack@arg,?___ftpack
 11010  002604  C0BC  F0BC         	movff	___ftpack@arg+1,?___ftpack+1
 11011  002608  C0BD  F0BD         	movff	___ftpack@arg+2,?___ftpack+2
 11012  00260C  0012               	return	
 11013  00260E                     __end_of___ftpack:
 11014                           	opt stack 0
 11015                           pclatu	equ	0xFFB
 11016                           pclath	equ	0xFFA
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           intcon	equ	0xFF2
 11024                           intcon2	equ	0xFF1
 11025                           intcon3	equ	0xFF0
 11026                           postinc0	equ	0xFEE
 11027                           fsr0h	equ	0xFEA
 11028                           fsr0l	equ	0xFE9
 11029                           wreg	equ	0xFE8
 11030                           indf1	equ	0xFE7
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           bsr	equ	0xFE0
 11035                           indf2	equ	0xFDF
 11036                           postinc2	equ	0xFDE
 11037                           fsr2h	equ	0xFDA
 11038                           fsr2l	equ	0xFD9
 11039                           status	equ	0xFD8
 11040                           
 11041 ;; *************** function _TMR0_ISR *****************
 11042 ;; Defined at:
 11043 ;;		line 128 in file "mcc_generated_files/tmr0.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1    wreg      void 
 11050 ;; Registers used:
 11051 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;Total ram usage:        0 bytes
 11062 ;; Hardware stack levels used:    1
 11063 ;; Hardware stack levels required when called:    6
 11064 ;; This function calls:
 11065 ;;		_TMR0_CallBack
 11066 ;; This function is called by:
 11067 ;;		_INTERRUPT_InterruptManagerLow
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text64
 11072  002F7A                     __ptext64:
 11073                           	opt stack 0
 11074  002F7A                     _TMR0_ISR:
 11075                           	opt stack 18
 11076                           
 11077                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
 11078                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;incstack = 0
 11082  002F7A  94F2               	bcf	intcon,2,c	;volatile
 11083                           
 11084                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
 11085  002F7C  C0AF  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 11086                           
 11087                           ;tmr0.c: 139: if (++CountCallBack >= 152)
 11088  002F80  0100               	movlb	0	; () banked
 11089  002F82  4B9A               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 11090  002F84  2B9B               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11091  002F86  519B               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11092  002F88  E104               	bnz	i1u555_20
 11093  002F8A  0E98               	movlw	152
 11094  002F8C  5D9A               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 11095  002F8E  A0D8               	btfss	status,0,c
 11096  002F90  0012               	return	
 11097  002F92                     i1u555_20:
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;tmr0.c: 140: {
 11101                           ;tmr0.c: 142: TMR0_CallBack();
 11102  002F92  EC1A  F018         	call	_TMR0_CallBack	;wreg free
 11103                           
 11104                           ;tmr0.c: 145: CountCallBack = 0;
 11105  002F96  0E00               	movlw	0
 11106  002F98  0100               	movlb	0	; () banked
 11107  002F9A  6F9B               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 11108  002F9C  0E00               	movlw	0
 11109  002F9E  6F9A               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 11110  002FA0  0012               	return	
 11111  002FA2                     __end_of_TMR0_ISR:
 11112                           	opt stack 0
 11113                           pclatu	equ	0xFFB
 11114                           pclath	equ	0xFFA
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           intcon	equ	0xFF2
 11122                           intcon2	equ	0xFF1
 11123                           intcon3	equ	0xFF0
 11124                           postinc0	equ	0xFEE
 11125                           fsr0h	equ	0xFEA
 11126                           fsr0l	equ	0xFE9
 11127                           wreg	equ	0xFE8
 11128                           indf1	equ	0xFE7
 11129                           postdec1	equ	0xFE5
 11130                           fsr1h	equ	0xFE2
 11131                           fsr1l	equ	0xFE1
 11132                           bsr	equ	0xFE0
 11133                           indf2	equ	0xFDF
 11134                           postinc2	equ	0xFDE
 11135                           fsr2h	equ	0xFDA
 11136                           fsr2l	equ	0xFD9
 11137                           status	equ	0xFD8
 11138                           
 11139 ;; *************** function _TMR0_CallBack *****************
 11140 ;; Defined at:
 11141 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;		None
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1    wreg      void 
 11148 ;; Registers used:
 11149 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11159 ;;Total ram usage:        0 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    5
 11162 ;; This function calls:
 11163 ;;		Absolute function
 11164 ;;		_TMR0_DefaultInterruptHandler
 11165 ;; This function is called by:
 11166 ;;		_TMR0_ISR
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text65
 11171  003034                     __ptext65:
 11172                           	opt stack 0
 11173  003034                     _TMR0_CallBack:
 11174                           	opt stack 18
 11175                           
 11176                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;incstack = 0
 11180  003034  0100               	movlb	0	; () banked
 11181  003036  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11182  003038  1174               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11183  00303A  1175               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11184  00303C  B4D8               	btfsc	status,2,c
 11185  00303E  0012               	return	
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;tmr0.c: 156: {
 11189                           ;tmr0.c: 157: TMR0_InterruptHandler();
 11190  003040  D801               	call	i1u550_28
 11191  003042  0012               	return	
 11192  003044                     i1u550_28:
 11193  003044  0005               	push	
 11194  003046  6EFA               	movwf	pclath,c
 11195  003048  5173               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11196  00304A  6EFD               	movwf	tosl,c
 11197  00304C  5174               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11198  00304E  6EFE               	movwf	tosh,c
 11199  003050  5175               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11200  003052  6EFF               	movwf	tosu,c
 11201  003054  50FA               	movf	pclath,w,c
 11202  003056  0012               	return		;indir
 11203  003058                     __end_of_TMR0_CallBack:
 11204                           	opt stack 0
 11205                           tosu	equ	0xFFF
 11206                           tosh	equ	0xFFE
 11207                           tosl	equ	0xFFD
 11208                           pclatu	equ	0xFFB
 11209                           pclath	equ	0xFFA
 11210                           tblptru	equ	0xFF8
 11211                           tblptrh	equ	0xFF7
 11212                           tblptrl	equ	0xFF6
 11213                           tablat	equ	0xFF5
 11214                           prodh	equ	0xFF4
 11215                           prodl	equ	0xFF3
 11216                           intcon	equ	0xFF2
 11217                           intcon2	equ	0xFF1
 11218                           intcon3	equ	0xFF0
 11219                           postinc0	equ	0xFEE
 11220                           fsr0h	equ	0xFEA
 11221                           fsr0l	equ	0xFE9
 11222                           wreg	equ	0xFE8
 11223                           indf1	equ	0xFE7
 11224                           postdec1	equ	0xFE5
 11225                           fsr1h	equ	0xFE2
 11226                           fsr1l	equ	0xFE1
 11227                           bsr	equ	0xFE0
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           fsr2h	equ	0xFDA
 11231                           fsr2l	equ	0xFD9
 11232                           status	equ	0xFD8
 11233                           
 11234 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11235 ;; Defined at:
 11236 ;;		line 165 in file "mcc_generated_files/tmr0.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;		None
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		None
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;Total ram usage:        0 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    4
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_TMR0_Initialize
 11261 ;;		_TMR0_CallBack
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text66
 11266  0032F0                     __ptext66:
 11267                           	opt stack 0
 11268  0032F0                     _TMR0_DefaultInterruptHandler:
 11269                           	opt stack 18
 11270                           
 11271                           ;incstack = 0
 11272  0032F0  0012               	return		;funcret
 11273  0032F2                     __end_of_TMR0_DefaultInterruptHandler:
 11274                           	opt stack 0
 11275                           tosu	equ	0xFFF
 11276                           tosh	equ	0xFFE
 11277                           tosl	equ	0xFFD
 11278                           pclatu	equ	0xFFB
 11279                           pclath	equ	0xFFA
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodh	equ	0xFF4
 11285                           prodl	equ	0xFF3
 11286                           intcon	equ	0xFF2
 11287                           intcon2	equ	0xFF1
 11288                           intcon3	equ	0xFF0
 11289                           postinc0	equ	0xFEE
 11290                           fsr0h	equ	0xFEA
 11291                           fsr0l	equ	0xFE9
 11292                           wreg	equ	0xFE8
 11293                           indf1	equ	0xFE7
 11294                           postdec1	equ	0xFE5
 11295                           fsr1h	equ	0xFE2
 11296                           fsr1l	equ	0xFE1
 11297                           bsr	equ	0xFE0
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           fsr2h	equ	0xFDA
 11301                           fsr2l	equ	0xFD9
 11302                           status	equ	0xFD8
 11303                           
 11304 ;; *************** function _ScanInput *****************
 11305 ;; Defined at:
 11306 ;;		line 477 in file "13_April_WaterMeter_Main.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;		None
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  x               1    2[BANK0 ] unsigned char 
 11311 ;;  temp            1    1[BANK0 ] unsigned char 
 11312 ;;  portread        1    0[BANK0 ] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  1    wreg      void 
 11315 ;; Registers used:
 11316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;Total ram usage:        3 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    4
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_INTERRUPT_InterruptManagerLow
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text67
 11337  00290C                     __ptext67:
 11338                           	opt stack 0
 11339  00290C                     _ScanInput:
 11340                           	opt stack 20
 11341                           
 11342                           ;13_April_WaterMeter_Main.c: 478: unsigned char portread = PORTG;
 11343                           
 11344                           ;incstack = 0
 11345  00290C  CF86 F0BB          	movff	3974,ScanInput@portread	;volatile
 11346                           
 11347                           ;13_April_WaterMeter_Main.c: 521: unsigned char temp,x;
 11348                           ;13_April_WaterMeter_Main.c: 523: x=0;
 11349  002910  0E00               	movlw	0
 11350  002912  0100               	movlb	0	; () banked
 11351  002914  6FBD               	movwf	ScanInput@x& (0+255),b
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;13_April_WaterMeter_Main.c: 524: temp=PORTG ;
 11355  002916  CF86 F0BC          	movff	3974,ScanInput@temp	;volatile
 11356                           
 11357                           ; BSR set to: 0
 11358                           ;13_April_WaterMeter_Main.c: 525: INPUT_DS[x]=temp|INPUT_PS[x];
 11359  00291A  51BD               	movf	ScanInput@x& (0+255),w,b
 11360  00291C  0D01               	mullw	1
 11361  00291E  0EE4               	movlw	low _INPUT_DS
 11362  002920  24F3               	addwf	prodl,w,c
 11363  002922  6ED9               	movwf	fsr2l,c
 11364  002924  0E00               	movlw	high _INPUT_DS
 11365  002926  20F4               	addwfc	prodh,w,c
 11366  002928  6EDA               	movwf	fsr2h,c
 11367  00292A  51BD               	movf	ScanInput@x& (0+255),w,b
 11368  00292C  0D01               	mullw	1
 11369  00292E  0EE6               	movlw	low _INPUT_PS
 11370  002930  24F3               	addwf	prodl,w,c
 11371  002932  6EE1               	movwf	fsr1l,c
 11372  002934  0E00               	movlw	high _INPUT_PS
 11373  002936  20F4               	addwfc	prodh,w,c
 11374  002938  6EE2               	movwf	fsr1h,c
 11375  00293A  50E7               	movf	indf1,w,c
 11376  00293C  11BC               	iorwf	ScanInput@temp& (0+255),w,b
 11377  00293E  6EDF               	movwf	indf2,c
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;13_April_WaterMeter_Main.c: 526: INPUT_PS[x]=temp;
 11381  002940  51BD               	movf	ScanInput@x& (0+255),w,b
 11382  002942  0D01               	mullw	1
 11383  002944  0EE6               	movlw	low _INPUT_PS
 11384  002946  24F3               	addwf	prodl,w,c
 11385  002948  6ED9               	movwf	fsr2l,c
 11386  00294A  0E00               	movlw	high _INPUT_PS
 11387  00294C  20F4               	addwfc	prodh,w,c
 11388  00294E  6EDA               	movwf	fsr2h,c
 11389  002950  C0BC  FFDF         	movff	ScanInput@temp,indf2
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;13_April_WaterMeter_Main.c: 527: PORTGX.T_BYTE=INPUT_DS[x];
 11393  002954  51BD               	movf	ScanInput@x& (0+255),w,b
 11394  002956  0D01               	mullw	1
 11395  002958  0EE4               	movlw	low _INPUT_DS
 11396  00295A  24F3               	addwf	prodl,w,c
 11397  00295C  6ED9               	movwf	fsr2l,c
 11398  00295E  0E00               	movlw	high _INPUT_DS
 11399  002960  20F4               	addwfc	prodh,w,c
 11400  002962  6EDA               	movwf	fsr2h,c
 11401  002964  50DF               	movf	indf2,w,c
 11402  002966  6E03               	movwf	_PORTGX,c
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;13_April_WaterMeter_Main.c: 528: x=x+1;
 11406  002968  29BD               	incf	ScanInput@x& (0+255),w,b
 11407  00296A  6FBD               	movwf	ScanInput@x& (0+255),b
 11408                           
 11409                           ; BSR set to: 0
 11410  00296C  0012               	return		;funcret
 11411  00296E                     __end_of_ScanInput:
 11412                           	opt stack 0
 11413                           tosu	equ	0xFFF
 11414                           tosh	equ	0xFFE
 11415                           tosl	equ	0xFFD
 11416                           pclatu	equ	0xFFB
 11417                           pclath	equ	0xFFA
 11418                           tblptru	equ	0xFF8
 11419                           tblptrh	equ	0xFF7
 11420                           tblptrl	equ	0xFF6
 11421                           tablat	equ	0xFF5
 11422                           prodh	equ	0xFF4
 11423                           prodl	equ	0xFF3
 11424                           intcon	equ	0xFF2
 11425                           intcon2	equ	0xFF1
 11426                           intcon3	equ	0xFF0
 11427                           postinc0	equ	0xFEE
 11428                           fsr0h	equ	0xFEA
 11429                           fsr0l	equ	0xFE9
 11430                           wreg	equ	0xFE8
 11431                           indf1	equ	0xFE7
 11432                           postdec1	equ	0xFE5
 11433                           fsr1h	equ	0xFE2
 11434                           fsr1l	equ	0xFE1
 11435                           bsr	equ	0xFE0
 11436                           indf2	equ	0xFDF
 11437                           postinc2	equ	0xFDE
 11438                           fsr2h	equ	0xFDA
 11439                           fsr2l	equ	0xFD9
 11440                           status	equ	0xFD8
 11441                           
 11442 ;; *************** function _INT1_ISR *****************
 11443 ;; Defined at:
 11444 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;		None
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;Total ram usage:        0 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:    6
 11465 ;; This function calls:
 11466 ;;		_INT1_CallBack
 11467 ;; This function is called by:
 11468 ;;		_INTERRUPT_InterruptManagerLow
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text68
 11473  0032DA                     __ptext68:
 11474                           	opt stack 0
 11475  0032DA                     _INT1_ISR:
 11476                           	opt stack 18
 11477                           
 11478                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;incstack = 0
 11482  0032DA  90F0               	bcf	intcon3,0,c	;volatile
 11483                           
 11484                           ;ext_int.c: 38: INT1_CallBack();
 11485  0032DC  EC2C  F018         	call	_INT1_CallBack	;wreg free
 11486  0032E0  0012               	return		;funcret
 11487  0032E2                     __end_of_INT1_ISR:
 11488                           	opt stack 0
 11489                           tosu	equ	0xFFF
 11490                           tosh	equ	0xFFE
 11491                           tosl	equ	0xFFD
 11492                           pclatu	equ	0xFFB
 11493                           pclath	equ	0xFFA
 11494                           tblptru	equ	0xFF8
 11495                           tblptrh	equ	0xFF7
 11496                           tblptrl	equ	0xFF6
 11497                           tablat	equ	0xFF5
 11498                           prodh	equ	0xFF4
 11499                           prodl	equ	0xFF3
 11500                           intcon	equ	0xFF2
 11501                           intcon2	equ	0xFF1
 11502                           intcon3	equ	0xFF0
 11503                           postinc0	equ	0xFEE
 11504                           fsr0h	equ	0xFEA
 11505                           fsr0l	equ	0xFE9
 11506                           wreg	equ	0xFE8
 11507                           indf1	equ	0xFE7
 11508                           postdec1	equ	0xFE5
 11509                           fsr1h	equ	0xFE2
 11510                           fsr1l	equ	0xFE1
 11511                           bsr	equ	0xFE0
 11512                           indf2	equ	0xFDF
 11513                           postinc2	equ	0xFDE
 11514                           fsr2h	equ	0xFDA
 11515                           fsr2l	equ	0xFD9
 11516                           status	equ	0xFD8
 11517                           
 11518 ;; *************** function _INT1_CallBack *****************
 11519 ;; Defined at:
 11520 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;		None
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;		None
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  1    wreg      void 
 11527 ;; Registers used:
 11528 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 0/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;Total ram usage:        0 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:    5
 11541 ;; This function calls:
 11542 ;;		Absolute function
 11543 ;;		_INT1_DefaultInterruptHandler
 11544 ;; This function is called by:
 11545 ;;		_INT1_ISR
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text69
 11550  003058                     __ptext69:
 11551                           	opt stack 0
 11552  003058                     _INT1_CallBack:
 11553                           	opt stack 18
 11554                           
 11555                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 11556                           
 11557                           ;incstack = 0
 11558  003058  0100               	movlb	0	; () banked
 11559  00305A  5170               	movf	_INT1_InterruptHandler& (0+255),w,b
 11560  00305C  1171               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 11561  00305E  1172               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 11562  003060  B4D8               	btfsc	status,2,c
 11563  003062  0012               	return	
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;ext_int.c: 46: {
 11567                           ;ext_int.c: 47: INT1_InterruptHandler();
 11568  003064  D801               	call	i1u552_28
 11569  003066  0012               	return	
 11570  003068                     i1u552_28:
 11571  003068  0005               	push	
 11572  00306A  6EFA               	movwf	pclath,c
 11573  00306C  5170               	movf	_INT1_InterruptHandler& (0+255),w,b
 11574  00306E  6EFD               	movwf	tosl,c
 11575  003070  5171               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 11576  003072  6EFE               	movwf	tosh,c
 11577  003074  5172               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 11578  003076  6EFF               	movwf	tosu,c
 11579  003078  50FA               	movf	pclath,w,c
 11580  00307A  0012               	return		;indir
 11581  00307C                     __end_of_INT1_CallBack:
 11582                           	opt stack 0
 11583                           tosu	equ	0xFFF
 11584                           tosh	equ	0xFFE
 11585                           tosl	equ	0xFFD
 11586                           pclatu	equ	0xFFB
 11587                           pclath	equ	0xFFA
 11588                           tblptru	equ	0xFF8
 11589                           tblptrh	equ	0xFF7
 11590                           tblptrl	equ	0xFF6
 11591                           tablat	equ	0xFF5
 11592                           prodh	equ	0xFF4
 11593                           prodl	equ	0xFF3
 11594                           intcon	equ	0xFF2
 11595                           intcon2	equ	0xFF1
 11596                           intcon3	equ	0xFF0
 11597                           postinc0	equ	0xFEE
 11598                           fsr0h	equ	0xFEA
 11599                           fsr0l	equ	0xFE9
 11600                           wreg	equ	0xFE8
 11601                           indf1	equ	0xFE7
 11602                           postdec1	equ	0xFE5
 11603                           fsr1h	equ	0xFE2
 11604                           fsr1l	equ	0xFE1
 11605                           bsr	equ	0xFE0
 11606                           indf2	equ	0xFDF
 11607                           postinc2	equ	0xFDE
 11608                           fsr2h	equ	0xFDA
 11609                           fsr2l	equ	0xFD9
 11610                           status	equ	0xFD8
 11611                           
 11612 ;; *************** function _INT1_DefaultInterruptHandler *****************
 11613 ;; Defined at:
 11614 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;		None
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;		None
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  1    wreg      void 
 11621 ;; Registers used:
 11622 ;;		None
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;Total ram usage:        0 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    4
 11635 ;; This function calls:
 11636 ;;		Nothing
 11637 ;; This function is called by:
 11638 ;;		_EXT_INT_Initialize
 11639 ;;		_INT1_CallBack
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text70
 11644  0032F2                     __ptext70:
 11645                           	opt stack 0
 11646  0032F2                     _INT1_DefaultInterruptHandler:
 11647                           	opt stack 18
 11648                           
 11649                           ;incstack = 0
 11650  0032F2  0012               	return		;funcret
 11651  0032F4                     __end_of_INT1_DefaultInterruptHandler:
 11652                           	opt stack 0
 11653                           tosu	equ	0xFFF
 11654                           tosh	equ	0xFFE
 11655                           tosl	equ	0xFFD
 11656                           pclatu	equ	0xFFB
 11657                           pclath	equ	0xFFA
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           intcon2	equ	0xFF1
 11666                           intcon3	equ	0xFF0
 11667                           postinc0	equ	0xFEE
 11668                           fsr0h	equ	0xFEA
 11669                           fsr0l	equ	0xFE9
 11670                           wreg	equ	0xFE8
 11671                           indf1	equ	0xFE7
 11672                           postdec1	equ	0xFE5
 11673                           fsr1h	equ	0xFE2
 11674                           fsr1l	equ	0xFE1
 11675                           bsr	equ	0xFE0
 11676                           indf2	equ	0xFDF
 11677                           postinc2	equ	0xFDE
 11678                           fsr2h	equ	0xFDA
 11679                           fsr2l	equ	0xFD9
 11680                           status	equ	0xFD8
 11681                           
 11682 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 11683 ;; Defined at:
 11684 ;;		line 114 in file "13_April_WaterMeter_Main.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;Total ram usage:       20 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    3
 11705 ;; This function calls:
 11706 ;;		_INT0_ISR
 11707 ;;		_read_RX_FIFO
 11708 ;;		i2_Xor_check
 11709 ;;		i2_read_ZIGBEE_short
 11710 ;; This function is called by:
 11711 ;;		Interrupt level 2
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	intcode
 11716  000008                     __pintcode:
 11717                           	opt stack 0
 11718  000008                     _INTERRUPT_InterruptManagerHigh:
 11719                           	opt stack 18
 11720                           
 11721                           ;incstack = 0
 11722  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11723  00000A  EFDF  F011         	goto	int_func
 11724                           tosu	equ	0xFFF
 11725                           tosh	equ	0xFFE
 11726                           tosl	equ	0xFFD
 11727                           pclatu	equ	0xFFB
 11728                           pclath	equ	0xFFA
 11729                           tblptru	equ	0xFF8
 11730                           tblptrh	equ	0xFF7
 11731                           tblptrl	equ	0xFF6
 11732                           tablat	equ	0xFF5
 11733                           prodh	equ	0xFF4
 11734                           prodl	equ	0xFF3
 11735                           intcon	equ	0xFF2
 11736                           intcon2	equ	0xFF1
 11737                           intcon3	equ	0xFF0
 11738                           postinc0	equ	0xFEE
 11739                           fsr0h	equ	0xFEA
 11740                           fsr0l	equ	0xFE9
 11741                           wreg	equ	0xFE8
 11742                           indf1	equ	0xFE7
 11743                           postdec1	equ	0xFE5
 11744                           fsr1h	equ	0xFE2
 11745                           fsr1l	equ	0xFE1
 11746                           bsr	equ	0xFE0
 11747                           indf2	equ	0xFDF
 11748                           postinc2	equ	0xFDE
 11749                           fsr2h	equ	0xFDA
 11750                           fsr2l	equ	0xFD9
 11751                           status	equ	0xFD8
 11752                           
 11753                           	psect	intcode_body
 11754  0023BE                     __pintcode_body:
 11755                           	opt stack 18
 11756  0023BE                     int_func:
 11757                           	opt stack 18
 11758  0023BE  CFFA F039          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
 11759  0023C2  CFFB F03A          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
 11760  0023C6  CFE9 F03B          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
 11761  0023CA  CFEA F03C          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
 11762  0023CE  CFE1 F03D          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
 11763  0023D2  CFE2 F03E          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
 11764  0023D6  CFD9 F03F          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
 11765  0023DA  CFDA F040          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
 11766  0023DE  CFF3 F041          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
 11767  0023E2  CFF4 F042          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
 11768  0023E6  CFF6 F043          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
 11769  0023EA  CFF7 F044          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
 11770  0023EE  CFF8 F045          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
 11771  0023F2  CFF5 F046          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
 11772  0023F6  C04B  F047         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
 11773  0023FA  C04C  F048         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
 11774  0023FE  C04D  F049         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
 11775  002402  C04E  F04A         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
 11776                           
 11777                           ;13_April_WaterMeter_Main.c: 117: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 11778  002406  B8F2               	btfsc	intcon,4,c	;volatile
 11779  002408  A2F2               	btfss	intcon,1,c	;volatile
 11780  00240A  D020               	goto	i2l867
 11781                           
 11782                           ;13_April_WaterMeter_Main.c: 118: {
 11783                           ;13_April_WaterMeter_Main.c: 119: INTTRUPT=read_ZIGBEE_short(0X31);
 11784  00240C  0E31               	movlw	49
 11785  00240E  EC61  F018         	call	i2_read_ZIGBEE_short
 11786  002412  6E26               	movwf	_INTTRUPT,c
 11787                           
 11788                           ;13_April_WaterMeter_Main.c: 121: if((INTTRUPT & 0x08)==0x08){
 11789  002414  A626               	btfss	_INTTRUPT,3,c
 11790  002416  D018               	goto	i2l868
 11791                           
 11792                           ;13_April_WaterMeter_Main.c: 122: INTCONbits.GIE=0;
 11793  002418  9EF2               	bcf	intcon,7,c	;volatile
 11794                           
 11795                           ;13_April_WaterMeter_Main.c: 123: read_RX_FIFO();
 11796  00241A  ECB1  F00D         	call	_read_RX_FIFO	;wreg free
 11797                           
 11798                           ;13_April_WaterMeter_Main.c: 124: INTCONbits.GIE=1;
 11799  00241E  8EF2               	bsf	intcon,7,c	;volatile
 11800                           
 11801                           ;13_April_WaterMeter_Main.c: 125: CRC=Xor_check(DATA_RX,3);
 11802  002420  0EB0               	movlw	low _DATA_RX
 11803  002422  6E27               	movwf	i2Xor_check@data_value,c
 11804  002424  0E00               	movlw	high _DATA_RX
 11805  002426  6E28               	movwf	i2Xor_check@data_value+1,c
 11806  002428  0E03               	movlw	3
 11807  00242A  6E29               	movwf	i2Xor_check@length,c
 11808  00242C  EC92  F016         	call	i2_Xor_check	;wreg free
 11809  002430  C027  F092         	movff	?i2_Xor_check,_CRC
 11810  002434  C028  F093         	movff	?i2_Xor_check+1,_CRC+1
 11811                           
 11812                           ;13_April_WaterMeter_Main.c: 126: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]
      +                          );
 11813  002438  0100               	movlb	0	; () banked
 11814  00243A  51B4               	movf	(_DATA_RX+4)& (0+255),w,b
 11815  00243C  6E37               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
 11816  00243E  51B3               	movf	(_DATA_RX+3)& (0+255),w,b
 11817  002440  6F96               	movwf	_Rv_CRC& (0+255),b
 11818  002442  C037  F097         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;13_April_WaterMeter_Main.c: 127: __nop();
 11822  002446  F000               	nop	
 11823  002448                     i2l868:
 11824                           
 11825                           ;13_April_WaterMeter_Main.c: 128: }
 11826                           ;13_April_WaterMeter_Main.c: 129: INT0_ISR();
 11827  002448  EC71  F019         	call	_INT0_ISR	;wreg free
 11828  00244C                     i2l867:
 11829                           
 11830                           ;13_April_WaterMeter_Main.c: 131: else
 11831                           ;13_April_WaterMeter_Main.c: 132: {
 11832  00244C  C04A  F04E         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
 11833  002450  C049  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
 11834  002454  C048  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
 11835  002458  C047  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
 11836  00245C  C046  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
 11837  002460  C045  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
 11838  002464  C044  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
 11839  002468  C043  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
 11840  00246C  C042  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
 11841  002470  C041  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
 11842  002474  C040  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
 11843  002478  C03F  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
 11844  00247C  C03E  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
 11845  002480  C03D  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
 11846  002484  C03C  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
 11847  002488  C03B  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
 11848  00248C  C03A  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
 11849  002490  C039  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
 11850  002494  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11851  002496  0011               	retfie		f
 11852  002498                     __end_of_INTERRUPT_InterruptManagerHigh:
 11853                           	opt stack 0
 11854                           tosu	equ	0xFFF
 11855                           tosh	equ	0xFFE
 11856                           tosl	equ	0xFFD
 11857                           pclatu	equ	0xFFB
 11858                           pclath	equ	0xFFA
 11859                           tblptru	equ	0xFF8
 11860                           tblptrh	equ	0xFF7
 11861                           tblptrl	equ	0xFF6
 11862                           tablat	equ	0xFF5
 11863                           prodh	equ	0xFF4
 11864                           prodl	equ	0xFF3
 11865                           intcon	equ	0xFF2
 11866                           intcon2	equ	0xFF1
 11867                           intcon3	equ	0xFF0
 11868                           postinc0	equ	0xFEE
 11869                           fsr0h	equ	0xFEA
 11870                           fsr0l	equ	0xFE9
 11871                           wreg	equ	0xFE8
 11872                           indf1	equ	0xFE7
 11873                           postdec1	equ	0xFE5
 11874                           fsr1h	equ	0xFE2
 11875                           fsr1l	equ	0xFE1
 11876                           bsr	equ	0xFE0
 11877                           indf2	equ	0xFDF
 11878                           postinc2	equ	0xFDE
 11879                           fsr2h	equ	0xFDA
 11880                           fsr2l	equ	0xFD9
 11881                           status	equ	0xFD8
 11882                           
 11883 ;; *************** function i2_read_ZIGBEE_short *****************
 11884 ;; Defined at:
 11885 ;;		line 404 in file "zigbee.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;  address         1    wreg     unsigned char 
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  address         1    2[COMRAM] unsigned char 
 11890 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      unsigned char 
 11893 ;; Registers used:
 11894 ;;		wreg, status,2, status,0, cstack
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11904 ;;Total ram usage:        2 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    1
 11907 ;; This function calls:
 11908 ;;		i2_SPI_Read
 11909 ;;		i2_SPI_Write
 11910 ;; This function is called by:
 11911 ;;		_INTERRUPT_InterruptManagerHigh
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text72
 11916  0030C2                     __ptext72:
 11917                           	opt stack 0
 11918  0030C2                     i2_read_ZIGBEE_short:
 11919                           	opt stack 19
 11920                           
 11921                           ;incstack = 0
 11922                           ;i2read_ZIGBEE_short@address stored from wreg
 11923  0030C2  6E29               	movwf	i2read_ZIGBEE_short@address,c
 11924                           
 11925                           ;zigbee.c: 405: unsigned char data_r = 0;
 11926  0030C4  0E00               	movlw	0
 11927  0030C6  6E2A               	movwf	i2read_ZIGBEE_short@data_r,c
 11928                           
 11929                           ;zigbee.c: 407: PORTCbits.RC0=0;
 11930  0030C8  9082               	bcf	3970,0,c	;volatile
 11931                           
 11932                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
 11933  0030CA  5029               	movf	i2read_ZIGBEE_short@address,w,c
 11934  0030CC  2429               	addwf	i2read_ZIGBEE_short@address,w,c
 11935  0030CE  0B7E               	andlw	126
 11936  0030D0  6E29               	movwf	i2read_ZIGBEE_short@address,c
 11937                           
 11938                           ;zigbee.c: 409: SPI_Write(address);
 11939  0030D2  5029               	movf	i2read_ZIGBEE_short@address,w,c
 11940  0030D4  EC31  F019         	call	i2_SPI_Write
 11941                           
 11942                           ;zigbee.c: 410: data_r = SPI_Read();
 11943  0030D8  EC39  F019         	call	i2_SPI_Read	;wreg free
 11944  0030DC  6E2A               	movwf	i2read_ZIGBEE_short@data_r,c
 11945                           
 11946                           ;zigbee.c: 411: PORTCbits.RC0=1;
 11947  0030DE  8082               	bsf	3970,0,c	;volatile
 11948                           
 11949                           ;zigbee.c: 413: return data_r;
 11950  0030E0  502A               	movf	i2read_ZIGBEE_short@data_r,w,c
 11951  0030E2  0012               	return	
 11952  0030E4                     __end_ofi2_read_ZIGBEE_short:
 11953                           	opt stack 0
 11954                           tosu	equ	0xFFF
 11955                           tosh	equ	0xFFE
 11956                           tosl	equ	0xFFD
 11957                           pclatu	equ	0xFFB
 11958                           pclath	equ	0xFFA
 11959                           tblptru	equ	0xFF8
 11960                           tblptrh	equ	0xFF7
 11961                           tblptrl	equ	0xFF6
 11962                           tablat	equ	0xFF5
 11963                           prodh	equ	0xFF4
 11964                           prodl	equ	0xFF3
 11965                           intcon	equ	0xFF2
 11966                           intcon2	equ	0xFF1
 11967                           intcon3	equ	0xFF0
 11968                           postinc0	equ	0xFEE
 11969                           fsr0h	equ	0xFEA
 11970                           fsr0l	equ	0xFE9
 11971                           wreg	equ	0xFE8
 11972                           indf1	equ	0xFE7
 11973                           postdec1	equ	0xFE5
 11974                           fsr1h	equ	0xFE2
 11975                           fsr1l	equ	0xFE1
 11976                           bsr	equ	0xFE0
 11977                           indf2	equ	0xFDF
 11978                           postinc2	equ	0xFDE
 11979                           fsr2h	equ	0xFDA
 11980                           fsr2l	equ	0xFD9
 11981                           status	equ	0xFD8
 11982                           
 11983 ;; *************** function i2_Xor_check *****************
 11984 ;; Defined at:
 11985 ;;		line 504 in file "zigbee.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  data_value      2    0[COMRAM] PTR unsigned char 
 11988 ;;		 -> DATA_TX(3), DATA_RX(5), 
 11989 ;;  length          1    2[COMRAM] unsigned char 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  Xor_check       2    6[COMRAM] unsigned short 
 11992 ;;  Xor_check       2    4[COMRAM] unsigned short 
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  2    0[COMRAM] unsigned short 
 11995 ;; Registers used:
 11996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12002 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;Total ram usage:        8 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_INTERRUPT_InterruptManagerHigh
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text73
 12016  002D24                     __ptext73:
 12017                           	opt stack 0
 12018  002D24                     i2_Xor_check:
 12019                           	opt stack 20
 12020                           
 12021                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
 12022                           
 12023                           ;incstack = 0
 12024  002D24  0E8D               	movlw	141
 12025  002D26  6E2C               	movwf	i2Xor_check@xor_value+1,c
 12026  002D28  0E0D               	movlw	13
 12027  002D2A  6E2B               	movwf	i2Xor_check@xor_value,c
 12028                           
 12029                           ;zigbee.c: 507: unsigned short xor=0x00;
 12030  002D2C  0E00               	movlw	0
 12031  002D2E  6E2E               	movwf	i2Xor_check@xor+1,c
 12032  002D30  0E00               	movlw	0
 12033  002D32  6E2D               	movwf	i2Xor_check@xor,c
 12034                           
 12035                           ;zigbee.c: 508: while(length --)
 12036  002D34  D00A               	goto	i2l559
 12037  002D36                     
 12038                           ;zigbee.c: 509: {
 12039                           ;zigbee.c: 510: xor_value ^= *data_value++;
 12040  002D36  C027  FFD9         	movff	i2Xor_check@data_value,fsr2l
 12041  002D3A  C028  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
 12042  002D3E  50DF               	movf	indf2,w,c
 12043  002D40  6E2A               	movwf	??i2_Xor_check& (0+255),c
 12044  002D42  502A               	movf	??i2_Xor_check,w,c
 12045  002D44  1A2B               	xorwf	i2Xor_check@xor_value,f,c
 12046  002D46  4A27               	infsnz	i2Xor_check@data_value,f,c
 12047  002D48  2A28               	incf	i2Xor_check@data_value+1,f,c
 12048  002D4A                     i2l559:
 12049  002D4A  0629               	decf	i2Xor_check@length,f,c
 12050  002D4C  2829               	incf	i2Xor_check@length,w,c
 12051  002D4E  A4D8               	btfss	status,2,c
 12052  002D50  D7F2               	goto	i2l560
 12053                           
 12054                           ;zigbee.c: 511: }
 12055                           ;zigbee.c: 512: xor=xor_value;
 12056  002D52  C02B  F02D         	movff	i2Xor_check@xor_value,i2Xor_check@xor
 12057  002D56  C02C  F02E         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
 12058                           
 12059                           ;zigbee.c: 513: return(xor);
 12060  002D5A  C02D  F027         	movff	i2Xor_check@xor,?i2_Xor_check
 12061  002D5E  C02E  F028         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
 12062  002D62  0012               	return		;funcret
 12063  002D64                     __end_ofi2_Xor_check:
 12064                           	opt stack 0
 12065                           tosu	equ	0xFFF
 12066                           tosh	equ	0xFFE
 12067                           tosl	equ	0xFFD
 12068                           pclatu	equ	0xFFB
 12069                           pclath	equ	0xFFA
 12070                           tblptru	equ	0xFF8
 12071                           tblptrh	equ	0xFF7
 12072                           tblptrl	equ	0xFF6
 12073                           tablat	equ	0xFF5
 12074                           prodh	equ	0xFF4
 12075                           prodl	equ	0xFF3
 12076                           intcon	equ	0xFF2
 12077                           intcon2	equ	0xFF1
 12078                           intcon3	equ	0xFF0
 12079                           postinc0	equ	0xFEE
 12080                           fsr0h	equ	0xFEA
 12081                           fsr0l	equ	0xFE9
 12082                           wreg	equ	0xFE8
 12083                           indf1	equ	0xFE7
 12084                           postdec1	equ	0xFE5
 12085                           fsr1h	equ	0xFE2
 12086                           fsr1l	equ	0xFE1
 12087                           bsr	equ	0xFE0
 12088                           indf2	equ	0xFDF
 12089                           postinc2	equ	0xFDE
 12090                           fsr2h	equ	0xFDA
 12091                           fsr2l	equ	0xFD9
 12092                           status	equ	0xFD8
 12093                           
 12094 ;; *************** function _read_RX_FIFO *****************
 12095 ;; Defined at:
 12096 ;;		line 11 in file "zigbee.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  i               1   15[COMRAM] unsigned char 
 12101 ;;  temp            1   14[COMRAM] unsigned char 
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;Total ram usage:        7 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    2
 12118 ;; This function calls:
 12119 ;;		_read_ZIGBEE_long
 12120 ;;		i2_write_ZIGBEE_short
 12121 ;; This function is called by:
 12122 ;;		_INTERRUPT_InterruptManagerHigh
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           	psect	text74
 12127  001B62                     __ptext74:
 12128                           	opt stack 0
 12129  001B62                     _read_RX_FIFO:
 12130                           	opt stack 18
 12131                           
 12132                           ;zigbee.c: 13: unsigned char temp = 0;
 12133                           
 12134                           ;incstack = 0
 12135  001B62  0E00               	movlw	0
 12136  001B64  6E35               	movwf	read_RX_FIFO@temp,c
 12137                           
 12138                           ;zigbee.c: 14: unsigned char i = 0;
 12139  001B66  0E00               	movlw	0
 12140  001B68  6E36               	movwf	read_RX_FIFO@i,c
 12141                           
 12142                           ;zigbee.c: 16: temp=0;
 12143  001B6A  0E00               	movlw	0
 12144  001B6C  6E35               	movwf	read_RX_FIFO@temp,c
 12145                           
 12146                           ;zigbee.c: 17: temp = temp | 0x04;
 12147  001B6E  5035               	movf	read_RX_FIFO@temp,w,c
 12148  001B70  0904               	iorlw	4
 12149  001B72  6E35               	movwf	read_RX_FIFO@temp,c
 12150                           
 12151                           ;zigbee.c: 18: write_ZIGBEE_short(0x39, temp);
 12152  001B74  C035  F029         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 12153  001B78  0E39               	movlw	57
 12154  001B7A  ECA1  F018         	call	i2_write_ZIGBEE_short
 12155                           
 12156                           ;zigbee.c: 20: LENGTH=read_ZIGBEE_long(0x300);
 12157  001B7E  0E03               	movlw	3
 12158  001B80  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12159  001B82  0E00               	movlw	0
 12160  001B84  6E29               	movwf	read_ZIGBEE_long@address,c
 12161  001B86  EC5E  F015         	call	_read_ZIGBEE_long	;wreg free
 12162  001B8A  6E23               	movwf	_LENGTH,c
 12163                           
 12164                           ;zigbee.c: 21: __nop();
 12165  001B8C  F000               	nop	
 12166                           
 12167                           ;zigbee.c: 22: for(i=0; i<128; i++)
 12168  001B8E  0E00               	movlw	0
 12169  001B90  6E36               	movwf	read_RX_FIFO@i,c
 12170  001B92  0E7F               	movlw	127
 12171  001B94  6436               	cpfsgt	read_RX_FIFO@i,c
 12172  001B96  D001               	goto	i2l374
 12173  001B98  D06A               	goto	i2u215_40
 12174  001B9A                     i2l374:
 12175                           
 12176                           ;zigbee.c: 23: {
 12177                           ;zigbee.c: 24: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 12178  001B9A  0E02               	movlw	low _DATA_LENGHT
 12179  001B9C  6EF6               	movwf	tblptrl,c
 12180  001B9E                     	if	1	;There is more than 1 active tblptr byte
 12181  001B9E  0E10               	movlw	high _DATA_LENGHT
 12182  001BA0  6EF7               	movwf	tblptrh,c
 12183  001BA2                     	endif
 12184  001BA2                     	if	1	;There are 3 active tblptr bytes
 12185  001BA2  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12186  001BA4  6EF8               	movwf	tblptru,c
 12187  001BA6                     	endif
 12188  001BA6  0008               	tblrd		*
 12189  001BA8  50F5               	movf	tablat,w,c
 12190  001BAA  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12191  001BAC  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12192  001BAE  0E01               	movlw	low _HEADER_LENGHT
 12193  001BB0  6EF6               	movwf	tblptrl,c
 12194  001BB2                     	if	1	;There is more than 1 active tblptr byte
 12195  001BB2  0E10               	movlw	high _HEADER_LENGHT
 12196  001BB4  6EF7               	movwf	tblptrh,c
 12197  001BB6                     	endif
 12198  001BB6                     	if	1	;There are 3 active tblptr bytes
 12199  001BB6  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12200  001BB8  6EF8               	movwf	tblptru,c
 12201  001BBA                     	endif
 12202  001BBA  0008               	tblrd		*
 12203  001BBC  50F5               	movf	tablat,w,c
 12204  001BBE  2630               	addwf	??_read_RX_FIFO,f,c
 12205  001BC0  0E00               	movlw	0
 12206  001BC2  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12207  001BC4  0E05               	movlw	5
 12208  001BC6  2630               	addwf	??_read_RX_FIFO,f,c
 12209  001BC8  0E00               	movlw	0
 12210  001BCA  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12211  001BCC  5036               	movf	read_RX_FIFO@i,w,c
 12212  001BCE  6E32               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 12213  001BD0  6A33               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 12214  001BD2  5030               	movf	??_read_RX_FIFO,w,c
 12215  001BD4  5C32               	subwf	??_read_RX_FIFO+2,w,c
 12216  001BD6  5033               	movf	??_read_RX_FIFO+3,w,c
 12217  001BD8  0A80               	xorlw	128
 12218  001BDA  6E34               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 12219  001BDC  5031               	movf	??_read_RX_FIFO+1,w,c
 12220  001BDE  0A80               	xorlw	128
 12221  001BE0  5834               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 12222  001BE2  B0D8               	btfsc	status,0,c
 12223  001BE4  D012               	goto	i2l376
 12224                           
 12225                           ;zigbee.c: 25: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 12226  001BE6  5036               	movf	read_RX_FIFO@i,w,c
 12227  001BE8  0D01               	mullw	1
 12228  001BEA  0E00               	movlw	low _data_RX_FIFO
 12229  001BEC  24F3               	addwf	prodl,w,c
 12230  001BEE  6ED9               	movwf	fsr2l,c
 12231  001BF0  0E01               	movlw	high _data_RX_FIFO
 12232  001BF2  20F4               	addwfc	prodh,w,c
 12233  001BF4  6EDA               	movwf	fsr2h,c
 12234  001BF6  5036               	movf	read_RX_FIFO@i,w,c
 12235  001BF8  0100               	movlb	0	; () banked
 12236  001BFA  25EC               	addwf	_address_RX_FIFO& (0+255),w,b
 12237  001BFC  6E29               	movwf	read_ZIGBEE_long@address,c
 12238  001BFE  0E00               	movlw	0
 12239  001C00  21ED               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 12240  001C02  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12241  001C04  EC5E  F015         	call	_read_ZIGBEE_long	;wreg free
 12242  001C08  6EDF               	movwf	indf2,c
 12243  001C0A                     i2l376:
 12244                           
 12245                           ;zigbee.c: 26: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 12246  001C0A  0E02               	movlw	low _DATA_LENGHT
 12247  001C0C  6EF6               	movwf	tblptrl,c
 12248  001C0E                     	if	1	;There is more than 1 active tblptr byte
 12249  001C0E  0E10               	movlw	high _DATA_LENGHT
 12250  001C10  6EF7               	movwf	tblptrh,c
 12251  001C12                     	endif
 12252  001C12                     	if	1	;There are 3 active tblptr bytes
 12253  001C12  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12254  001C14  6EF8               	movwf	tblptru,c
 12255  001C16                     	endif
 12256  001C16  0008               	tblrd		*
 12257  001C18  50F5               	movf	tablat,w,c
 12258  001C1A  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12259  001C1C  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12260  001C1E  0E01               	movlw	low _HEADER_LENGHT
 12261  001C20  6EF6               	movwf	tblptrl,c
 12262  001C22                     	if	1	;There is more than 1 active tblptr byte
 12263  001C22  0E10               	movlw	high _HEADER_LENGHT
 12264  001C24  6EF7               	movwf	tblptrh,c
 12265  001C26                     	endif
 12266  001C26                     	if	1	;There are 3 active tblptr bytes
 12267  001C26  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12268  001C28  6EF8               	movwf	tblptru,c
 12269  001C2A                     	endif
 12270  001C2A  0008               	tblrd		*
 12271  001C2C  50F5               	movf	tablat,w,c
 12272  001C2E  2630               	addwf	??_read_RX_FIFO,f,c
 12273  001C30  0E00               	movlw	0
 12274  001C32  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12275  001C34  0E05               	movlw	5
 12276  001C36  2630               	addwf	??_read_RX_FIFO,f,c
 12277  001C38  0E00               	movlw	0
 12278  001C3A  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12279  001C3C  5036               	movf	read_RX_FIFO@i,w,c
 12280  001C3E  6E32               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 12281  001C40  6A33               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 12282  001C42  5030               	movf	??_read_RX_FIFO,w,c
 12283  001C44  5C32               	subwf	??_read_RX_FIFO+2,w,c
 12284  001C46  5033               	movf	??_read_RX_FIFO+3,w,c
 12285  001C48  0A80               	xorlw	128
 12286  001C4A  6E34               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 12287  001C4C  5031               	movf	??_read_RX_FIFO+1,w,c
 12288  001C4E  0A80               	xorlw	128
 12289  001C50  5834               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 12290  001C52  A0D8               	btfss	status,0,c
 12291  001C54  D00A               	goto	i2l377
 12292                           
 12293                           ;zigbee.c: 27: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 12294  001C56  5036               	movf	read_RX_FIFO@i,w,c
 12295  001C58  0100               	movlb	0	; () banked
 12296  001C5A  25EC               	addwf	_address_RX_FIFO& (0+255),w,b
 12297  001C5C  6E29               	movwf	read_ZIGBEE_long@address,c
 12298  001C5E  0E00               	movlw	0
 12299  001C60  21ED               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 12300  001C62  6E2A               	movwf	read_ZIGBEE_long@address+1,c
 12301  001C64  EC5E  F015         	call	_read_ZIGBEE_long	;wreg free
 12302  001C68  6E1E               	movwf	_lost_data,c
 12303  001C6A                     i2l377:
 12304  001C6A  2A36               	incf	read_RX_FIFO@i,f,c
 12305  001C6C  D792               	goto	L2
 12306  001C6E                     i2u215_40:
 12307                           
 12308                           ;zigbee.c: 28: }
 12309                           ;zigbee.c: 30: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 12310  001C6E  0E01               	movlw	low _HEADER_LENGHT
 12311  001C70  6EF6               	movwf	tblptrl,c
 12312  001C72                     	if	1	;There is more than 1 active tblptr byte
 12313  001C72  0E10               	movlw	high _HEADER_LENGHT
 12314  001C74  6EF7               	movwf	tblptrh,c
 12315  001C76                     	endif
 12316  001C76                     	if	1	;There are 3 active tblptr bytes
 12317  001C76  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12318  001C78  6EF8               	movwf	tblptru,c
 12319  001C7A                     	endif
 12320  001C7A  0008               	tblrd		*
 12321  001C7C  50F5               	movf	tablat,w,c
 12322  001C7E  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12323  001C80  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12324  001C82  0E01               	movlw	1
 12325  001C84  2630               	addwf	??_read_RX_FIFO,f,c
 12326  001C86  0E00               	movlw	0
 12327  001C88  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12328  001C8A  0E00               	movlw	low _data_RX_FIFO
 12329  001C8C  2430               	addwf	??_read_RX_FIFO,w,c
 12330  001C8E  6ED9               	movwf	fsr2l,c
 12331  001C90  0E01               	movlw	high _data_RX_FIFO
 12332  001C92  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12333  001C94  6EDA               	movwf	fsr2h,c
 12334  001C96  50DF               	movf	indf2,w,c
 12335  001C98  0100               	movlb	0	; () banked
 12336  001C9A  6FB0               	movwf	_DATA_RX& (0+255),b
 12337                           
 12338                           ;zigbee.c: 31: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 12339  001C9C  0E01               	movlw	low _HEADER_LENGHT
 12340  001C9E  6EF6               	movwf	tblptrl,c
 12341  001CA0                     	if	1	;There is more than 1 active tblptr byte
 12342  001CA0  0E10               	movlw	high _HEADER_LENGHT
 12343  001CA2  6EF7               	movwf	tblptrh,c
 12344  001CA4                     	endif
 12345  001CA4                     	if	1	;There are 3 active tblptr bytes
 12346  001CA4  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12347  001CA6  6EF8               	movwf	tblptru,c
 12348  001CA8                     	endif
 12349  001CA8  0008               	tblrd		*
 12350  001CAA  50F5               	movf	tablat,w,c
 12351  001CAC  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12352  001CAE  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12353  001CB0  0E02               	movlw	2
 12354  001CB2  2630               	addwf	??_read_RX_FIFO,f,c
 12355  001CB4  0E00               	movlw	0
 12356  001CB6  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12357  001CB8  0E00               	movlw	low _data_RX_FIFO
 12358  001CBA  2430               	addwf	??_read_RX_FIFO,w,c
 12359  001CBC  6ED9               	movwf	fsr2l,c
 12360  001CBE  0E01               	movlw	high _data_RX_FIFO
 12361  001CC0  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12362  001CC2  6EDA               	movwf	fsr2h,c
 12363  001CC4  50DF               	movf	indf2,w,c
 12364  001CC6  6FB1               	movwf	(_DATA_RX+1)& (0+255),b
 12365                           
 12366                           ;zigbee.c: 32: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 12367  001CC8  0E01               	movlw	low _HEADER_LENGHT
 12368  001CCA  6EF6               	movwf	tblptrl,c
 12369  001CCC                     	if	1	;There is more than 1 active tblptr byte
 12370  001CCC  0E10               	movlw	high _HEADER_LENGHT
 12371  001CCE  6EF7               	movwf	tblptrh,c
 12372  001CD0                     	endif
 12373  001CD0                     	if	1	;There are 3 active tblptr bytes
 12374  001CD0  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12375  001CD2  6EF8               	movwf	tblptru,c
 12376  001CD4                     	endif
 12377  001CD4  0008               	tblrd		*
 12378  001CD6  50F5               	movf	tablat,w,c
 12379  001CD8  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12380  001CDA  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12381  001CDC  0E03               	movlw	3
 12382  001CDE  2630               	addwf	??_read_RX_FIFO,f,c
 12383  001CE0  0E00               	movlw	0
 12384  001CE2  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12385  001CE4  0E00               	movlw	low _data_RX_FIFO
 12386  001CE6  2430               	addwf	??_read_RX_FIFO,w,c
 12387  001CE8  6ED9               	movwf	fsr2l,c
 12388  001CEA  0E01               	movlw	high _data_RX_FIFO
 12389  001CEC  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12390  001CEE  6EDA               	movwf	fsr2h,c
 12391  001CF0  50DF               	movf	indf2,w,c
 12392  001CF2  6FB2               	movwf	(_DATA_RX+2)& (0+255),b
 12393                           
 12394                           ;zigbee.c: 34: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 12395  001CF4  0E01               	movlw	low _HEADER_LENGHT
 12396  001CF6  6EF6               	movwf	tblptrl,c
 12397  001CF8                     	if	1	;There is more than 1 active tblptr byte
 12398  001CF8  0E10               	movlw	high _HEADER_LENGHT
 12399  001CFA  6EF7               	movwf	tblptrh,c
 12400  001CFC                     	endif
 12401  001CFC                     	if	1	;There are 3 active tblptr bytes
 12402  001CFC  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12403  001CFE  6EF8               	movwf	tblptru,c
 12404  001D00                     	endif
 12405  001D00  0008               	tblrd		*
 12406  001D02  50F5               	movf	tablat,w,c
 12407  001D04  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12408  001D06  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12409  001D08  0E04               	movlw	4
 12410  001D0A  2630               	addwf	??_read_RX_FIFO,f,c
 12411  001D0C  0E00               	movlw	0
 12412  001D0E  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12413  001D10  0E00               	movlw	low _data_RX_FIFO
 12414  001D12  2430               	addwf	??_read_RX_FIFO,w,c
 12415  001D14  6ED9               	movwf	fsr2l,c
 12416  001D16  0E01               	movlw	high _data_RX_FIFO
 12417  001D18  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12418  001D1A  6EDA               	movwf	fsr2h,c
 12419  001D1C  50DF               	movf	indf2,w,c
 12420  001D1E  6FB3               	movwf	(_DATA_RX+3)& (0+255),b
 12421                           
 12422                           ;zigbee.c: 35: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 12423  001D20  0E01               	movlw	low _HEADER_LENGHT
 12424  001D22  6EF6               	movwf	tblptrl,c
 12425  001D24                     	if	1	;There is more than 1 active tblptr byte
 12426  001D24  0E10               	movlw	high _HEADER_LENGHT
 12427  001D26  6EF7               	movwf	tblptrh,c
 12428  001D28                     	endif
 12429  001D28                     	if	1	;There are 3 active tblptr bytes
 12430  001D28  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12431  001D2A  6EF8               	movwf	tblptru,c
 12432  001D2C                     	endif
 12433  001D2C  0008               	tblrd		*
 12434  001D2E  50F5               	movf	tablat,w,c
 12435  001D30  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12436  001D32  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12437  001D34  0E05               	movlw	5
 12438  001D36  2630               	addwf	??_read_RX_FIFO,f,c
 12439  001D38  0E00               	movlw	0
 12440  001D3A  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12441  001D3C  0E00               	movlw	low _data_RX_FIFO
 12442  001D3E  2430               	addwf	??_read_RX_FIFO,w,c
 12443  001D40  6ED9               	movwf	fsr2l,c
 12444  001D42  0E01               	movlw	high _data_RX_FIFO
 12445  001D44  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12446  001D46  6EDA               	movwf	fsr2h,c
 12447  001D48  50DF               	movf	indf2,w,c
 12448  001D4A  6FB4               	movwf	(_DATA_RX+4)& (0+255),b
 12449                           
 12450                           ;zigbee.c: 39: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 12451  001D4C  0E01               	movlw	low _HEADER_LENGHT
 12452  001D4E  6EF6               	movwf	tblptrl,c
 12453  001D50                     	if	1	;There is more than 1 active tblptr byte
 12454  001D50  0E10               	movlw	high _HEADER_LENGHT
 12455  001D52  6EF7               	movwf	tblptrh,c
 12456  001D54                     	endif
 12457  001D54                     	if	1	;There are 3 active tblptr bytes
 12458  001D54  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12459  001D56  6EF8               	movwf	tblptru,c
 12460  001D58                     	endif
 12461  001D58  0008               	tblrd		*
 12462  001D5A  50F5               	movf	tablat,w,c
 12463  001D5C  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12464  001D5E  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12465  001D60  0E02               	movlw	low _DATA_LENGHT
 12466  001D62  6EF6               	movwf	tblptrl,c
 12467  001D64                     	if	1	;There is more than 1 active tblptr byte
 12468  001D64  0E10               	movlw	high _DATA_LENGHT
 12469  001D66  6EF7               	movwf	tblptrh,c
 12470  001D68                     	endif
 12471  001D68                     	if	1	;There are 3 active tblptr bytes
 12472  001D68  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12473  001D6A  6EF8               	movwf	tblptru,c
 12474  001D6C                     	endif
 12475  001D6C  0008               	tblrd		*
 12476  001D6E  50F5               	movf	tablat,w,c
 12477  001D70  2630               	addwf	??_read_RX_FIFO,f,c
 12478  001D72  0E00               	movlw	0
 12479  001D74  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12480  001D76  0E03               	movlw	3
 12481  001D78  2630               	addwf	??_read_RX_FIFO,f,c
 12482  001D7A  0E00               	movlw	0
 12483  001D7C  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12484  001D7E  0E00               	movlw	low _data_RX_FIFO
 12485  001D80  2430               	addwf	??_read_RX_FIFO,w,c
 12486  001D82  6ED9               	movwf	fsr2l,c
 12487  001D84  0E01               	movlw	high _data_RX_FIFO
 12488  001D86  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12489  001D88  6EDA               	movwf	fsr2h,c
 12490  001D8A  50DF               	movf	indf2,w,c
 12491  001D8C  6E20               	movwf	_LQI,c
 12492                           
 12493                           ;zigbee.c: 40: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 12494  001D8E  0E01               	movlw	low _HEADER_LENGHT
 12495  001D90  6EF6               	movwf	tblptrl,c
 12496  001D92                     	if	1	;There is more than 1 active tblptr byte
 12497  001D92  0E10               	movlw	high _HEADER_LENGHT
 12498  001D94  6EF7               	movwf	tblptrh,c
 12499  001D96                     	endif
 12500  001D96                     	if	1	;There are 3 active tblptr bytes
 12501  001D96  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 12502  001D98  6EF8               	movwf	tblptru,c
 12503  001D9A                     	endif
 12504  001D9A  0008               	tblrd		*
 12505  001D9C  50F5               	movf	tablat,w,c
 12506  001D9E  6E30               	movwf	??_read_RX_FIFO& (0+255),c
 12507  001DA0  6A31               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 12508  001DA2  0E02               	movlw	low _DATA_LENGHT
 12509  001DA4  6EF6               	movwf	tblptrl,c
 12510  001DA6                     	if	1	;There is more than 1 active tblptr byte
 12511  001DA6  0E10               	movlw	high _DATA_LENGHT
 12512  001DA8  6EF7               	movwf	tblptrh,c
 12513  001DAA                     	endif
 12514  001DAA                     	if	1	;There are 3 active tblptr bytes
 12515  001DAA  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 12516  001DAC  6EF8               	movwf	tblptru,c
 12517  001DAE                     	endif
 12518  001DAE  0008               	tblrd		*
 12519  001DB0  50F5               	movf	tablat,w,c
 12520  001DB2  2630               	addwf	??_read_RX_FIFO,f,c
 12521  001DB4  0E00               	movlw	0
 12522  001DB6  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12523  001DB8  0E04               	movlw	4
 12524  001DBA  2630               	addwf	??_read_RX_FIFO,f,c
 12525  001DBC  0E00               	movlw	0
 12526  001DBE  2231               	addwfc	??_read_RX_FIFO+1,f,c
 12527  001DC0  0E00               	movlw	low _data_RX_FIFO
 12528  001DC2  2430               	addwf	??_read_RX_FIFO,w,c
 12529  001DC4  6ED9               	movwf	fsr2l,c
 12530  001DC6  0E01               	movlw	high _data_RX_FIFO
 12531  001DC8  2031               	addwfc	??_read_RX_FIFO+1,w,c
 12532  001DCA  6EDA               	movwf	fsr2h,c
 12533  001DCC  50DF               	movf	indf2,w,c
 12534  001DCE  6E1F               	movwf	_RSSI2,c
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;zigbee.c: 42: temp=0;
 12538  001DD0  0E00               	movlw	0
 12539  001DD2  6E35               	movwf	read_RX_FIFO@temp,c
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;zigbee.c: 43: temp = temp & (!0x04);
 12543  001DD4  0E00               	movlw	0
 12544  001DD6  6E35               	movwf	read_RX_FIFO@temp,c
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;zigbee.c: 44: write_ZIGBEE_short(0x39, temp);
 12548  001DD8  C035  F029         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 12549  001DDC  0E39               	movlw	57
 12550  001DDE  ECA1  F018         	call	i2_write_ZIGBEE_short
 12551  001DE2  0012               	return		;funcret
 12552  001DE4                     __end_of_read_RX_FIFO:
 12553                           	opt stack 0
 12554                           tosu	equ	0xFFF
 12555                           tosh	equ	0xFFE
 12556                           tosl	equ	0xFFD
 12557                           pclatu	equ	0xFFB
 12558                           pclath	equ	0xFFA
 12559                           tblptru	equ	0xFF8
 12560                           tblptrh	equ	0xFF7
 12561                           tblptrl	equ	0xFF6
 12562                           tablat	equ	0xFF5
 12563                           prodh	equ	0xFF4
 12564                           prodl	equ	0xFF3
 12565                           intcon	equ	0xFF2
 12566                           intcon2	equ	0xFF1
 12567                           intcon3	equ	0xFF0
 12568                           postinc0	equ	0xFEE
 12569                           fsr0h	equ	0xFEA
 12570                           fsr0l	equ	0xFE9
 12571                           wreg	equ	0xFE8
 12572                           indf1	equ	0xFE7
 12573                           postdec1	equ	0xFE5
 12574                           fsr1h	equ	0xFE2
 12575                           fsr1l	equ	0xFE1
 12576                           bsr	equ	0xFE0
 12577                           indf2	equ	0xFDF
 12578                           postinc2	equ	0xFDE
 12579                           fsr2h	equ	0xFDA
 12580                           fsr2l	equ	0xFD9
 12581                           status	equ	0xFD8
 12582                           
 12583 ;; *************** function i2_write_ZIGBEE_short *****************
 12584 ;; Defined at:
 12585 ;;		line 397 in file "zigbee.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;  address         1    wreg     unsigned char 
 12588 ;;  data_r          1    2[COMRAM] unsigned char 
 12589 ;; Auto vars:     Size  Location     Type
 12590 ;;  address         1    3[COMRAM] unsigned char 
 12591 ;; Return value:  Size  Location     Type
 12592 ;;                  1    wreg      void 
 12593 ;; Registers used:
 12594 ;;		wreg, status,2, status,0, cstack
 12595 ;; Tracked objects:
 12596 ;;		On entry : 0/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12600 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12604 ;;Total ram usage:        2 bytes
 12605 ;; Hardware stack levels used:    1
 12606 ;; Hardware stack levels required when called:    1
 12607 ;; This function calls:
 12608 ;;		i2_SPI_Write
 12609 ;; This function is called by:
 12610 ;;		_read_RX_FIFO
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           	psect	text75
 12615  003142                     __ptext75:
 12616                           	opt stack 0
 12617  003142                     i2_write_ZIGBEE_short:
 12618                           	opt stack 18
 12619                           
 12620                           ;incstack = 0
 12621                           ;i2write_ZIGBEE_short@address stored from wreg
 12622  003142  6E2A               	movwf	i2write_ZIGBEE_short@address,c
 12623                           
 12624                           ;zigbee.c: 398: PORTCbits.RC0=0;
 12625  003144  9082               	bcf	3970,0,c	;volatile
 12626                           
 12627                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
 12628  003146  502A               	movf	i2write_ZIGBEE_short@address,w,c
 12629  003148  242A               	addwf	i2write_ZIGBEE_short@address,w,c
 12630  00314A  0B7F               	andlw	127
 12631  00314C  0901               	iorlw	1
 12632  00314E  6E2A               	movwf	i2write_ZIGBEE_short@address,c
 12633                           
 12634                           ;zigbee.c: 400: SPI_Write(address);
 12635  003150  502A               	movf	i2write_ZIGBEE_short@address,w,c
 12636  003152  EC31  F019         	call	i2_SPI_Write
 12637                           
 12638                           ;zigbee.c: 401: SPI_Write(data_r);
 12639  003156  5029               	movf	i2write_ZIGBEE_short@data_r,w,c
 12640  003158  EC31  F019         	call	i2_SPI_Write
 12641                           
 12642                           ;zigbee.c: 402: PORTCbits.RC0=1;
 12643  00315C  8082               	bsf	3970,0,c	;volatile
 12644  00315E  0012               	return		;funcret
 12645  003160                     __end_ofi2_write_ZIGBEE_short:
 12646                           	opt stack 0
 12647                           tosu	equ	0xFFF
 12648                           tosh	equ	0xFFE
 12649                           tosl	equ	0xFFD
 12650                           pclatu	equ	0xFFB
 12651                           pclath	equ	0xFFA
 12652                           tblptru	equ	0xFF8
 12653                           tblptrh	equ	0xFF7
 12654                           tblptrl	equ	0xFF6
 12655                           tablat	equ	0xFF5
 12656                           prodh	equ	0xFF4
 12657                           prodl	equ	0xFF3
 12658                           intcon	equ	0xFF2
 12659                           intcon2	equ	0xFF1
 12660                           intcon3	equ	0xFF0
 12661                           postinc0	equ	0xFEE
 12662                           fsr0h	equ	0xFEA
 12663                           fsr0l	equ	0xFE9
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           postdec1	equ	0xFE5
 12667                           fsr1h	equ	0xFE2
 12668                           fsr1l	equ	0xFE1
 12669                           bsr	equ	0xFE0
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           fsr2h	equ	0xFDA
 12673                           fsr2l	equ	0xFD9
 12674                           status	equ	0xFD8
 12675                           
 12676 ;; *************** function _read_ZIGBEE_long *****************
 12677 ;; Defined at:
 12678 ;;		line 426 in file "zigbee.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  address         2    2[COMRAM] unsigned int 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  address_low     1    8[COMRAM] unsigned char 
 12683 ;;  address_high    1    7[COMRAM] unsigned char 
 12684 ;;  data_r          1    6[COMRAM] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      unsigned char 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12695 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12698 ;;Total ram usage:        7 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:    1
 12701 ;; This function calls:
 12702 ;;		i2_SPI_Read
 12703 ;;		i2_SPI_Write
 12704 ;; This function is called by:
 12705 ;;		_read_RX_FIFO
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text76
 12710  002ABC                     __ptext76:
 12711                           	opt stack 0
 12712  002ABC                     _read_ZIGBEE_long:
 12713                           	opt stack 18
 12714                           
 12715                           ;zigbee.c: 427: unsigned char data_r = 0;
 12716                           
 12717                           ;incstack = 0
 12718  002ABC  0E00               	movlw	0
 12719  002ABE  6E2D               	movwf	read_ZIGBEE_long@data_r,c
 12720                           
 12721                           ;zigbee.c: 428: unsigned char address_high = 0, address_low = 0;
 12722  002AC0  0E00               	movlw	0
 12723  002AC2  6E2E               	movwf	read_ZIGBEE_long@address_high,c
 12724  002AC4  0E00               	movlw	0
 12725  002AC6  6E2F               	movwf	read_ZIGBEE_long@address_low,c
 12726                           
 12727                           ;zigbee.c: 431: PORTCbits.RC0=0;
 12728  002AC8  9082               	bcf	3970,0,c	;volatile
 12729                           
 12730                           ;zigbee.c: 432: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 12731  002ACA  C029  F02B         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 12732  002ACE  C02A  F02C         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 12733  002AD2  90D8               	bcf	status,0,c
 12734  002AD4  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12735  002AD6  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12736  002AD8  90D8               	bcf	status,0,c
 12737  002ADA  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12738  002ADC  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12739  002ADE  90D8               	bcf	status,0,c
 12740  002AE0  322C               	rrcf	??_read_ZIGBEE_long+1,f,c
 12741  002AE2  322B               	rrcf	??_read_ZIGBEE_long,f,c
 12742  002AE4  502B               	movf	??_read_ZIGBEE_long,w,c
 12743  002AE6  0B7F               	andlw	127
 12744  002AE8  0980               	iorlw	128
 12745  002AEA  6E2E               	movwf	read_ZIGBEE_long@address_high,c
 12746                           
 12747                           ;zigbee.c: 433: address_low = ((unsigned char)(address << 5) & 0b11100000);
 12748  002AEC  3829               	swapf	read_ZIGBEE_long@address,w,c
 12749  002AEE  46E8               	rlncf	wreg,f,c
 12750  002AF0  0BE0               	andlw	224
 12751  002AF2  0BE0               	andlw	224
 12752  002AF4  6E2F               	movwf	read_ZIGBEE_long@address_low,c
 12753                           
 12754                           ;zigbee.c: 434: SPI_Write(address_high);
 12755  002AF6  502E               	movf	read_ZIGBEE_long@address_high,w,c
 12756  002AF8  EC31  F019         	call	i2_SPI_Write
 12757                           
 12758                           ;zigbee.c: 435: SPI_Write(address_low);
 12759  002AFC  502F               	movf	read_ZIGBEE_long@address_low,w,c
 12760  002AFE  EC31  F019         	call	i2_SPI_Write
 12761                           
 12762                           ;zigbee.c: 436: data_r = SPI_Read();
 12763  002B02  EC39  F019         	call	i2_SPI_Read	;wreg free
 12764  002B06  6E2D               	movwf	read_ZIGBEE_long@data_r,c
 12765                           
 12766                           ;zigbee.c: 437: PORTCbits.RC0=1;
 12767  002B08  8082               	bsf	3970,0,c	;volatile
 12768                           
 12769                           ;zigbee.c: 438: return data_r;
 12770  002B0A  502D               	movf	read_ZIGBEE_long@data_r,w,c
 12771  002B0C  0012               	return	
 12772  002B0E                     __end_of_read_ZIGBEE_long:
 12773                           	opt stack 0
 12774                           tosu	equ	0xFFF
 12775                           tosh	equ	0xFFE
 12776                           tosl	equ	0xFFD
 12777                           pclatu	equ	0xFFB
 12778                           pclath	equ	0xFFA
 12779                           tblptru	equ	0xFF8
 12780                           tblptrh	equ	0xFF7
 12781                           tblptrl	equ	0xFF6
 12782                           tablat	equ	0xFF5
 12783                           prodh	equ	0xFF4
 12784                           prodl	equ	0xFF3
 12785                           intcon	equ	0xFF2
 12786                           intcon2	equ	0xFF1
 12787                           intcon3	equ	0xFF0
 12788                           postinc0	equ	0xFEE
 12789                           fsr0h	equ	0xFEA
 12790                           fsr0l	equ	0xFE9
 12791                           wreg	equ	0xFE8
 12792                           indf1	equ	0xFE7
 12793                           postdec1	equ	0xFE5
 12794                           fsr1h	equ	0xFE2
 12795                           fsr1l	equ	0xFE1
 12796                           bsr	equ	0xFE0
 12797                           indf2	equ	0xFDF
 12798                           postinc2	equ	0xFDE
 12799                           fsr2h	equ	0xFDA
 12800                           fsr2l	equ	0xFD9
 12801                           status	equ	0xFD8
 12802                           
 12803 ;; *************** function i2_SPI_Write *****************
 12804 ;; Defined at:
 12805 ;;		line 458 in file "zigbee.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  command         1    wreg     unsigned char 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  command         1    1[COMRAM] unsigned char 
 12810 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;Total ram usage:        2 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; This function calls:
 12827 ;;		Nothing
 12828 ;; This function is called by:
 12829 ;;		_read_ZIGBEE_long
 12830 ;;		i2_write_ZIGBEE_short
 12831 ;;		i2_read_ZIGBEE_short
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           	psect	text77
 12836  003262                     __ptext77:
 12837                           	opt stack 0
 12838  003262                     i2_SPI_Write:
 12839                           	opt stack 19
 12840                           
 12841                           ;incstack = 0
 12842                           ;i2SPI_Write@command stored from wreg
 12843  003262  6E28               	movwf	i2SPI_Write@command,c
 12844                           
 12845                           ;zigbee.c: 459: unsigned char response;
 12846                           ;zigbee.c: 460: SSP1BUF = command;
 12847  003264  C028  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 12848  003268  A0C7               	btfss	4039,0,c	;volatile
 12849  00326A  D7FE               	goto	i2l514
 12850                           
 12851                           ;zigbee.c: 462: response = SSP1BUF;
 12852  00326C  CFC9 F027          	movff	4041,i2SPI_Write@response	;volatile
 12853  003270  0012               	return		;funcret
 12854  003272                     __end_ofi2_SPI_Write:
 12855                           	opt stack 0
 12856                           tosu	equ	0xFFF
 12857                           tosh	equ	0xFFE
 12858                           tosl	equ	0xFFD
 12859                           pclatu	equ	0xFFB
 12860                           pclath	equ	0xFFA
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           intcon2	equ	0xFF1
 12869                           intcon3	equ	0xFF0
 12870                           postinc0	equ	0xFEE
 12871                           fsr0h	equ	0xFEA
 12872                           fsr0l	equ	0xFE9
 12873                           wreg	equ	0xFE8
 12874                           indf1	equ	0xFE7
 12875                           postdec1	equ	0xFE5
 12876                           fsr1h	equ	0xFE2
 12877                           fsr1l	equ	0xFE1
 12878                           bsr	equ	0xFE0
 12879                           indf2	equ	0xFDF
 12880                           postinc2	equ	0xFDE
 12881                           fsr2h	equ	0xFDA
 12882                           fsr2l	equ	0xFD9
 12883                           status	equ	0xFD8
 12884                           
 12885 ;; *************** function i2_SPI_Read *****************
 12886 ;; Defined at:
 12887 ;;		line 464 in file "zigbee.c"
 12888 ;; Parameters:    Size  Location     Type
 12889 ;;		None
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  1    wreg      unsigned char 
 12894 ;; Registers used:
 12895 ;;		wreg, status,2
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;Total ram usage:        1 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; This function calls:
 12908 ;;		Nothing
 12909 ;; This function is called by:
 12910 ;;		_read_ZIGBEE_long
 12911 ;;		i2_read_ZIGBEE_short
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915                           	psect	text78
 12916  003272                     __ptext78:
 12917                           	opt stack 0
 12918  003272                     i2_SPI_Read:
 12919                           	opt stack 19
 12920                           
 12921                           ;zigbee.c: 465: unsigned char TempVar;
 12922                           ;zigbee.c: 466: SSP1BUF = 0xff;
 12923                           
 12924                           ;incstack = 0
 12925  003272  68C9               	setf	4041,c	;volatile
 12926  003274  A0C7               	btfss	4039,0,c	;volatile
 12927  003276  D7FE               	goto	i2l520
 12928                           
 12929                           ;zigbee.c: 468: TempVar = SSP1BUF;
 12930  003278  CFC9 F027          	movff	4041,i2SPI_Read@TempVar	;volatile
 12931                           
 12932                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
 12933  00327C  969E               	bcf	3998,3,c	;volatile
 12934                           
 12935                           ;zigbee.c: 470: return ( TempVar );
 12936  00327E  5027               	movf	i2SPI_Read@TempVar,w,c
 12937  003280  0012               	return	
 12938  003282                     __end_ofi2_SPI_Read:
 12939                           	opt stack 0
 12940                           tosu	equ	0xFFF
 12941                           tosh	equ	0xFFE
 12942                           tosl	equ	0xFFD
 12943                           pclatu	equ	0xFFB
 12944                           pclath	equ	0xFFA
 12945                           tblptru	equ	0xFF8
 12946                           tblptrh	equ	0xFF7
 12947                           tblptrl	equ	0xFF6
 12948                           tablat	equ	0xFF5
 12949                           prodh	equ	0xFF4
 12950                           prodl	equ	0xFF3
 12951                           intcon	equ	0xFF2
 12952                           intcon2	equ	0xFF1
 12953                           intcon3	equ	0xFF0
 12954                           postinc0	equ	0xFEE
 12955                           fsr0h	equ	0xFEA
 12956                           fsr0l	equ	0xFE9
 12957                           wreg	equ	0xFE8
 12958                           indf1	equ	0xFE7
 12959                           postdec1	equ	0xFE5
 12960                           fsr1h	equ	0xFE2
 12961                           fsr1l	equ	0xFE1
 12962                           bsr	equ	0xFE0
 12963                           indf2	equ	0xFDF
 12964                           postinc2	equ	0xFDE
 12965                           fsr2h	equ	0xFDA
 12966                           fsr2l	equ	0xFD9
 12967                           status	equ	0xFD8
 12968                           
 12969 ;; *************** function _INT0_ISR *****************
 12970 ;; Defined at:
 12971 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:    2
 12992 ;; This function calls:
 12993 ;;		_INT0_CallBack
 12994 ;; This function is called by:
 12995 ;;		_INTERRUPT_InterruptManagerHigh
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text79
 13000  0032E2                     __ptext79:
 13001                           	opt stack 0
 13002  0032E2                     _INT0_ISR:
 13003                           	opt stack 18
 13004                           
 13005                           ;ext_int.c: 61: (INTCONbits.INT0IF = 0);
 13006                           
 13007                           ;incstack = 0
 13008  0032E2  92F2               	bcf	intcon,1,c	;volatile
 13009                           
 13010                           ;ext_int.c: 64: INT0_CallBack();
 13011  0032E4  EC3E  F018         	call	_INT0_CallBack	;wreg free
 13012  0032E8  0012               	return		;funcret
 13013  0032EA                     __end_of_INT0_ISR:
 13014                           	opt stack 0
 13015                           tosu	equ	0xFFF
 13016                           tosh	equ	0xFFE
 13017                           tosl	equ	0xFFD
 13018                           pclatu	equ	0xFFB
 13019                           pclath	equ	0xFFA
 13020                           tblptru	equ	0xFF8
 13021                           tblptrh	equ	0xFF7
 13022                           tblptrl	equ	0xFF6
 13023                           tablat	equ	0xFF5
 13024                           prodh	equ	0xFF4
 13025                           prodl	equ	0xFF3
 13026                           intcon	equ	0xFF2
 13027                           intcon2	equ	0xFF1
 13028                           intcon3	equ	0xFF0
 13029                           postinc0	equ	0xFEE
 13030                           fsr0h	equ	0xFEA
 13031                           fsr0l	equ	0xFE9
 13032                           wreg	equ	0xFE8
 13033                           indf1	equ	0xFE7
 13034                           postdec1	equ	0xFE5
 13035                           fsr1h	equ	0xFE2
 13036                           fsr1l	equ	0xFE1
 13037                           bsr	equ	0xFE0
 13038                           indf2	equ	0xFDF
 13039                           postinc2	equ	0xFDE
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _INT0_CallBack *****************
 13045 ;; Defined at:
 13046 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13064 ;;Total ram usage:        0 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:    1
 13067 ;; This function calls:
 13068 ;;		Absolute function
 13069 ;;		_INT0_DefaultInterruptHandler
 13070 ;; This function is called by:
 13071 ;;		_INT0_ISR
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           	psect	text80
 13076  00307C                     __ptext80:
 13077                           	opt stack 0
 13078  00307C                     _INT0_CallBack:
 13079                           	opt stack 18
 13080                           
 13081                           ;ext_int.c: 71: if(INT0_InterruptHandler)
 13082                           
 13083                           ;incstack = 0
 13084  00307C  0100               	movlb	0	; () banked
 13085  00307E  516D               	movf	_INT0_InterruptHandler& (0+255),w,b
 13086  003080  116E               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13087  003082  116F               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 13088  003084  B4D8               	btfsc	status,2,c
 13089  003086  0012               	return	
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;ext_int.c: 72: {
 13093                           ;ext_int.c: 73: INT0_InterruptHandler();
 13094  003088  D801               	call	i2u554_48
 13095  00308A  0012               	return	
 13096  00308C                     i2u554_48:
 13097  00308C  0005               	push	
 13098  00308E  6EFA               	movwf	pclath,c
 13099  003090  516D               	movf	_INT0_InterruptHandler& (0+255),w,b
 13100  003092  6EFD               	movwf	tosl,c
 13101  003094  516E               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13102  003096  6EFE               	movwf	tosh,c
 13103  003098  516F               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 13104  00309A  6EFF               	movwf	tosu,c
 13105  00309C  50FA               	movf	pclath,w,c
 13106  00309E  0012               	return		;indir
 13107  0030A0                     __end_of_INT0_CallBack:
 13108                           	opt stack 0
 13109                           tosu	equ	0xFFF
 13110                           tosh	equ	0xFFE
 13111                           tosl	equ	0xFFD
 13112                           pclatu	equ	0xFFB
 13113                           pclath	equ	0xFFA
 13114                           tblptru	equ	0xFF8
 13115                           tblptrh	equ	0xFF7
 13116                           tblptrl	equ	0xFF6
 13117                           tablat	equ	0xFF5
 13118                           prodh	equ	0xFF4
 13119                           prodl	equ	0xFF3
 13120                           intcon	equ	0xFF2
 13121                           intcon2	equ	0xFF1
 13122                           intcon3	equ	0xFF0
 13123                           postinc0	equ	0xFEE
 13124                           fsr0h	equ	0xFEA
 13125                           fsr0l	equ	0xFE9
 13126                           wreg	equ	0xFE8
 13127                           indf1	equ	0xFE7
 13128                           postdec1	equ	0xFE5
 13129                           fsr1h	equ	0xFE2
 13130                           fsr1l	equ	0xFE1
 13131                           bsr	equ	0xFE0
 13132                           indf2	equ	0xFDF
 13133                           postinc2	equ	0xFDE
 13134                           fsr2h	equ	0xFDA
 13135                           fsr2l	equ	0xFD9
 13136                           status	equ	0xFD8
 13137                           
 13138 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13139 ;; Defined at:
 13140 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;		None
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		None
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;Total ram usage:        0 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; This function calls:
 13161 ;;		Nothing
 13162 ;; This function is called by:
 13163 ;;		_EXT_INT_Initialize
 13164 ;;		_INT0_CallBack
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text81
 13169  0032F4                     __ptext81:
 13170                           	opt stack 0
 13171  0032F4                     _INT0_DefaultInterruptHandler:
 13172                           	opt stack 18
 13173                           
 13174                           ;incstack = 0
 13175  0032F4  0012               	return		;funcret
 13176  0032F6                     __end_of_INT0_DefaultInterruptHandler:
 13177                           	opt stack 0
 13178                           tosu	equ	0xFFF
 13179                           tosh	equ	0xFFE
 13180                           tosl	equ	0xFFD
 13181                           pclatu	equ	0xFFB
 13182                           pclath	equ	0xFFA
 13183                           tblptru	equ	0xFF8
 13184                           tblptrh	equ	0xFF7
 13185                           tblptrl	equ	0xFF6
 13186                           tablat	equ	0xFF5
 13187                           prodh	equ	0xFF4
 13188                           prodl	equ	0xFF3
 13189                           intcon	equ	0xFF2
 13190                           intcon2	equ	0xFF1
 13191                           intcon3	equ	0xFF0
 13192                           postinc0	equ	0xFEE
 13193                           fsr0h	equ	0xFEA
 13194                           fsr0l	equ	0xFE9
 13195                           wreg	equ	0xFE8
 13196                           indf1	equ	0xFE7
 13197                           postdec1	equ	0xFE5
 13198                           fsr1h	equ	0xFE2
 13199                           fsr1l	equ	0xFE1
 13200                           bsr	equ	0xFE0
 13201                           indf2	equ	0xFDF
 13202                           postinc2	equ	0xFDE
 13203                           fsr2h	equ	0xFDA
 13204                           fsr2l	equ	0xFD9
 13205                           status	equ	0xFD8
 13206                           tosu	equ	0xFFF
 13207                           tosh	equ	0xFFE
 13208                           tosl	equ	0xFFD
 13209                           pclatu	equ	0xFFB
 13210                           pclath	equ	0xFFA
 13211                           tblptru	equ	0xFF8
 13212                           tblptrh	equ	0xFF7
 13213                           tblptrl	equ	0xFF6
 13214                           tablat	equ	0xFF5
 13215                           prodh	equ	0xFF4
 13216                           prodl	equ	0xFF3
 13217                           intcon	equ	0xFF2
 13218                           intcon2	equ	0xFF1
 13219                           intcon3	equ	0xFF0
 13220                           postinc0	equ	0xFEE
 13221                           fsr0h	equ	0xFEA
 13222                           fsr0l	equ	0xFE9
 13223                           wreg	equ	0xFE8
 13224                           indf1	equ	0xFE7
 13225                           postdec1	equ	0xFE5
 13226                           fsr1h	equ	0xFE2
 13227                           fsr1l	equ	0xFE1
 13228                           bsr	equ	0xFE0
 13229                           indf2	equ	0xFDF
 13230                           postinc2	equ	0xFDE
 13231                           fsr2h	equ	0xFDA
 13232                           fsr2l	equ	0xFD9
 13233                           status	equ	0xFD8
 13234                           
 13235                           	psect	text82
 13236  000000                     __ptext82:
 13237                           	opt stack 0
 13238                           tosu	equ	0xFFF
 13239                           tosh	equ	0xFFE
 13240                           tosl	equ	0xFFD
 13241                           pclatu	equ	0xFFB
 13242                           pclath	equ	0xFFA
 13243                           tblptru	equ	0xFF8
 13244                           tblptrh	equ	0xFF7
 13245                           tblptrl	equ	0xFF6
 13246                           tablat	equ	0xFF5
 13247                           prodh	equ	0xFF4
 13248                           prodl	equ	0xFF3
 13249                           intcon	equ	0xFF2
 13250                           intcon2	equ	0xFF1
 13251                           intcon3	equ	0xFF0
 13252                           postinc0	equ	0xFEE
 13253                           fsr0h	equ	0xFEA
 13254                           fsr0l	equ	0xFE9
 13255                           wreg	equ	0xFE8
 13256                           indf1	equ	0xFE7
 13257                           postdec1	equ	0xFE5
 13258                           fsr1h	equ	0xFE2
 13259                           fsr1l	equ	0xFE1
 13260                           bsr	equ	0xFE0
 13261                           indf2	equ	0xFDF
 13262                           postinc2	equ	0xFDE
 13263                           fsr2h	equ	0xFDA
 13264                           fsr2l	equ	0xFD9
 13265                           status	equ	0xFD8
 13266                           
 13267                           	psect	rparam
 13268  0000                     tosu	equ	0xFFF
 13269                           tosh	equ	0xFFE
 13270                           tosl	equ	0xFFD
 13271                           pclatu	equ	0xFFB
 13272                           pclath	equ	0xFFA
 13273                           tblptru	equ	0xFF8
 13274                           tblptrh	equ	0xFF7
 13275                           tblptrl	equ	0xFF6
 13276                           tablat	equ	0xFF5
 13277                           prodh	equ	0xFF4
 13278                           prodl	equ	0xFF3
 13279                           intcon	equ	0xFF2
 13280                           intcon2	equ	0xFF1
 13281                           intcon3	equ	0xFF0
 13282                           postinc0	equ	0xFEE
 13283                           fsr0h	equ	0xFEA
 13284                           fsr0l	equ	0xFE9
 13285                           wreg	equ	0xFE8
 13286                           indf1	equ	0xFE7
 13287                           postdec1	equ	0xFE5
 13288                           fsr1h	equ	0xFE2
 13289                           fsr1l	equ	0xFE1
 13290                           bsr	equ	0xFE0
 13291                           indf2	equ	0xFDF
 13292                           postinc2	equ	0xFDE
 13293                           fsr2h	equ	0xFDA
 13294                           fsr2l	equ	0xFD9
 13295                           status	equ	0xFD8
 13296                           
 13297                           	psect	temp
 13298  00004B                     btemp:
 13299                           	opt stack 0
 13300  00004B                     	ds	1
 13301  0000                     int$flags	set	btemp
 13302  0000                     wtemp6	set	btemp+1
 13303                           tosu	equ	0xFFF
 13304                           tosh	equ	0xFFE
 13305                           tosl	equ	0xFFD
 13306                           pclatu	equ	0xFFB
 13307                           pclath	equ	0xFFA
 13308                           tblptru	equ	0xFF8
 13309                           tblptrh	equ	0xFF7
 13310                           tblptrl	equ	0xFF6
 13311                           tablat	equ	0xFF5
 13312                           prodh	equ	0xFF4
 13313                           prodl	equ	0xFF3
 13314                           intcon	equ	0xFF2
 13315                           intcon2	equ	0xFF1
 13316                           intcon3	equ	0xFF0
 13317                           postinc0	equ	0xFEE
 13318                           fsr0h	equ	0xFEA
 13319                           fsr0l	equ	0xFE9
 13320                           wreg	equ	0xFE8
 13321                           indf1	equ	0xFE7
 13322                           postdec1	equ	0xFE5
 13323                           fsr1h	equ	0xFE2
 13324                           fsr1l	equ	0xFE1
 13325                           bsr	equ	0xFE0
 13326                           indf2	equ	0xFDF
 13327                           postinc2	equ	0xFDE
 13328                           fsr2h	equ	0xFDA
 13329                           fsr2l	equ	0xFD9
 13330                           status	equ	0xFD8


Data Sizes:
    Strings     242
    Constant    2
    Data        31
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160     41     155
    BANK1           256     18      65
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    LcdDisplay@string	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[19]), STR_1(CODE[19]), 

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK0[8]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _INTERRUPT_InterruptManagerLow->___ftadd
    i1___lwdiv->___wmul
    ___lwtoft->i1___lwdiv
    ___ftadd->___ftpack

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Set_DeviceId
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _lcd_off_cursor->_LcdCmd
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    _Set_DeviceId->_LcdDisplay
    _lcd_clear->_LcdCmd
    _LcdDisplay->_LcdCmd
    _LcdDisplay->_LcdData
    _LcdData->_Delayms
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _LcdInit->_LcdCmd
    _LcdCmd->_Delayms
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  127987
                           _Delay_ms
                            _Delayms
                            _InitSPI
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                            _LcdInit
                           _RF_reset
                        _Read_b_eep2
                  _SYSTEM_Initialize
                       _Set_DeviceId
                            ___awdiv
                            ___awmod
                            ___fttol
                            ___lwdiv
                            ___lwmod
              _init_ZIGBEE_nonbeacon
                          _lcd_clear
                     _lcd_off_cursor
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   17433
                                              9 BANK1      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                              2 BANK1      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                              0 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                              4 BANK1      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                              9 BANK1      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    1654
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _lcd_off_cursor                                       0     0      0    1247
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   40113
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0    9841
                                              9 BANK1      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    5044
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    1654
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1654
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                              2 BANK1      7     4      3
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                              2 BANK1      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     952
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1181
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     461
                                              0 BANK1     15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     805
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Set_DeviceId                                         8     8      0   12336
                                             10 BANK1      8     8      0
                          _Busy_eep2
                           _Delayms1
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                        _Read_b_eep2
                       _Write_b_eep2
                            ___awmod
                          _lcd_clear
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0    1247
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1153
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep2                                         4     1      3     459
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep2                                          2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LcdDisplay                                           4     2      2    4300
                                              7 BANK1      3     1      2
                             _LcdCmd
                            _LcdData
 ---------------------------------------------------------------------------------
 (3) _LcdData                                              1     1      0    1247
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (2) _Delayms1                                             6     4      2    1216
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Busy_eep2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     242
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0    2463
                            _Delayms
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               1     1      0    1247
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _Delayms                                              6     4      2    1216
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0    8374
                                             20 BANK0     21    21      0
                           _INT1_ISR
                          _ScanInput
                           _TMR0_ISR
                            ___ftadd
                           ___lwtoft
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            7     3      4     381
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             3     0      3    2894
                                             13 BANK0      3     0      3
                           ___ftpack
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    4458
                                              8 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2773
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ScanInput                                            3     3      0     229
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1020
                                             16 COMRAM    20    20      0
                           _INT0_ISR
                       _read_RX_FIFO
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Delayms
   _InitSPI
     _delay
   _LcdCmd
     _Delayms
   _LcdData
     _Delayms
   _LcdDisplay
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
   _LcdInit
     _Delayms
     _LcdCmd
       _Delayms
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep2
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Set_DeviceId
     _Busy_eep2
     _Delayms1
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
     _LcdDisplay
       _LcdCmd
         _Delayms
       _LcdData
         _Delayms
     _Read_b_eep2
     _Write_b_eep2
     ___awmod
     _lcd_clear
       _LcdCmd
         _Delayms
   ___awdiv
   ___awmod
   ___fttol
   ___lwdiv
   ___lwmod
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _lcd_clear
     _LcdCmd
       _Delayms
   _lcd_off_cursor
     _LcdCmd
       _Delayms
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _ScanInput
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   ___ftadd
     ___ftpack
   ___lwtoft
     ___ftpack
     i1___lwdiv (ARG)
       ___wmul (ARG)
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      41       7       25.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126      12        0.0%
DATA                 0      0     126       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 13 12:20:30 2018

                                        _T 0010                                          _d 0016  
                                        _i 0017                            SPI_Read@TempVar 0127  
                             ___awdiv@sign 012C                                         _ii 00AD  
                                       bsr 000FE0                        ___wmul@multiplicand 00BD  
                              __CFG_BORV$3 000000                            _timer0ReloadVal 00AF  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                             __CFG_CP4$OFF 000000                  i2read_ZIGBEE_short@data_r 002A  
                             __CFG_CP5$OFF 000000                               ___ftadd@exp1 00CE  
                             ___ftadd@exp2 00CD                               __CFG_CP6$OFF 000000  
                             __CFG_CP7$OFF 000000                               ___ftadd@sign 00CC  
                                      l410 2546                                        l411 24A4  
                                      l413 24CC                                        l421 2C84  
                                      l414 2506                                        l431 1F3A  
                                      l440 1E86                                        l432 1DFC  
                                      l520 321C                                        l433 1F9E  
                                      l441 1E9A                                        l514 3246  
                                      l418 2C92                                        l442 1EAE  
                                      l434 1E0E                                        l419 2C6E  
                                      l443 1EC2                                        l435 1E22  
                                      l532 3186                                        l444 1ED6  
                                      l436 1E36                                        l525 3134  
                                      l445 1EEA                                        l437 1E4A  
                                      l526 3130                                        l446 1EFE  
                                      l438 1E5E                                        l462 2718  
                                      l390 2E28                                        l551 2E08  
                                      l447 1F12                                        l439 1E72  
                                      l463 26B0                                        l471 2886  
                                      l552 2DEA                                        l448 1F26  
                                      l472 283A                                        l560 2BF2  
                                      l537 2D12                                        l465 26C4  
                                      l538 2CF0                                        l458 2C30  
                                      l466 26E0                                        l474 284E  
                                      l539 2D08                                        l571 2DCA  
                                      l467 26FC                                        l475 286A  
                                      l900 1390                                        l493 2B2A  
                                      l901 13D0                                        l910 16A4  
                                      l559 2C06                                        l479 21D4  
                                      l903 1454                                        l905 1512  
                                      l906 1562                                        l908 15E6  
                                      l960 1742                                        l946 2CCC  
                                      l962 1776                                        l947 2CB2  
                                      l971 182E                                        l980 18DA  
                                      l964 17FC                                        l956 16F2  
                                      l893 1288                                        l990 1962  
                                      l982 18F2                                        l974 188A  
                                      l958 171E                                        l983 196C  
                                      l975 18FC                                        l967 17E0  
                                      l959 1792                                        l895 12C2  
                                      l984 1920                                        l976 18B0  
                                      l995 1ACA                                        l899 1324  
                                      _CRC 0092                                        l988 194A  
                                      l997 1998                                        l999 19B8  
                             __CFG_CPB$OFF 000000                      i2Xor_check@data_value 0027  
                             __CFG_CPD$OFF 000000                                        _LQI 0020  
                         _set_long_address 2E16                 ??_INT0_SetInterruptHandler 012A  
                                      _Num 0084                                        _ltr 007A  
                              _totalLitres 0067                               ___awmod@sign 012C  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 307C  
                  __size_of_start_transmit 0048                 i2read_ZIGBEE_short@address 0029  
                              i2_Xor_check 2D24                              _INT1_CallBack 3058  
              read_ZIGBEE_long@address_low 002F                                       l1001 19E0  
                                     l1003 1A02                                       l1004 1A3C  
                                     l1013 1B24                                       l1006 1AAC  
                                     l1200 27D2                                       l1201 27DE  
                                     l1009 1AB8                      ?_write_TX_normal_FIFO 0027  
                                     l1203 27F4                                       l1204 27EC  
                                     l1207 280C                                       l1208 2816  
                                     l1209 2824                                       l1190 277A  
                                     l1342 2390                                       l1334 22F4  
                                     l1191 2772                                       l1343 2384  
                                     l1423 29E2                                       l1336 236C  
                                     l1424 29DA                                       l1345 23AC  
                                     l1337 235C                                       l1433 2B6E  
                                     l1194 279A                                       l1434 2B66  
                                     l1195 27A4                                       l1187 274C  
                                     l1427 2A02                                       l1196 27B2  
                                     l1188 275C                                       l1428 2A0C  
                                     l1437 2B86                                       l1438 2B90  
                                     l5215 21CA                                       l5235 222C  
                                     l5425 1990                                       l5097 2E20  
                                     l4671 2CF8                                       l5449 1A34  
                                     l4935 2DF2                                       l5951 1454  
                                     l5961 1562                                       l5945 13D0  
                                     l5939 1390                                       l5967 15E6  
                                     l5895 12D8                                       _DATA 0022  
                                     STR_1 1003                                       STR_2 1016  
                                     STR_3 10B1                                       STR_4 10E4  
                                     STR_5 105C                                       STR_6 10D3  
                                     STR_7 103A                                       STR_8 1029  
                                     STR_9 10C2                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u4010 1908                                       _LATF 000F8E  
                                     _LATG 000F8F                                       u4200 1AD4  
                                     u4130 1A30                                       u4060 1972  
                                     u4080 198C                                       u3450 2D0E  
                                     u4180 1ABE                                       u3540 1DF6  
                                     u4510 2312                                       u3625 2DD8  
                                     u3626 2DDA                                       u4610 2B72  
                                     u4515 230A                                       u4460 277E  
                                     u3590 2E04                                       u3910 179E  
                                     u4550 2396                                       u3760 27F8  
                                     u3840 2204                                       u4491 22D8  
                                     u4580 29E6                                       u3860 22B8  
                                     u4910 13DE                                       u3960 1898  
                                     u3880 172A                                       u4930 1462  
                                     u4870 12D8                                       u4960 1570  
                                     u4980 15F4                                       _Nilp 0006  
                                     _Tick 000B                                       _Time 007E  
                                     _addr 00A0                                       _flag 00A7  
                                     _main 10F6                               ___ftpack@arg 00BB  
                    write_TX_normal_FIFO@i 0136                      write_TX_normal_FIFO@n 0135  
                             ___ftpack@exp 00BE                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 004B  
                    __size_of_Write_b_eep2 003C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 01F2  
                            __CFG_IESO$OFF 000000                              __CFG_FOSC$HS1 000000  
                          __end_of_LcdData 3104                            __end_of_Delayms 2D24  
                          __end_of_LcdInit 2ABC                         _set_reception_mode 282E  
                            __CFG_MCLRE$ON 000000                   ?_set_frame_format_filter 0027  
                             ___param_bank 000000                                 _LcdDisplay 2CA4  
                        i2Xor_check@length 0029                            _set_not_encrypt 31B0  
                    __end_of_set_RSSI_mode 2CA4                            __end_of_InitSPI 3034  
                          set_not_ACK@temp 012B                               ___fttol@exp1 0135  
                   set_RSSI_mode@RSSI_mode 012B                               ___fttol@lval 0131  
                __size_of_enable_interrupt 000E                    __end_of_TMR0_Initialize 2F02  
                            Set_DeviceId@i 0138                              Set_DeviceId@j 0136  
                            Set_DeviceId@n 0137                           __end_of_INT0_ISR 32EA  
                         __end_of_INT1_ISR 32E2                                 ScanInput@x 00BD  
           ??_TMR0_DefaultInterruptHandler 00BB                              __CFG_RETEN$ON 000000  
           __size_of_OSCILLATOR_Initialize 0014                        ?_set_reception_mode 0027  
                   ?_init_ZIGBEE_nonbeacon 0027                              ??_Read_b_eep2 0129  
            __end_of_OSCILLATOR_Initialize 321A                                ?i2_SPI_Read 0027  
                                    ?_main 0027                            __end_of___awdiv 27BC  
                                    _CHECK 00AE                                      _EEADR 000F62  
                          __end_of___ftadd 2152                                      STR_10 104B  
                                    STR_11 107E                                      STR_12 108F  
                                    STR_13 108F                                      STR_14 10A0  
                                    STR_15 108F                                      STR_16 10A0  
                                    STR_17 106D                                      STR_18 10C2  
                                    STR_19 104B                            __end_of___awmod 282E  
                          _F_TimerCounting 0002                        _data_TX_normal_FIFO 0115  
                                    _T0CON 000FD5                            ___awdiv@divisor 0129  
                          __end_of___fttol 23BE                                      _COUNT 0088  
                           __CFG_DEBUG$OFF 000000                            __end_of___lwdiv 2A16  
                                    _ERROR 0013                            __end_of___lwmod 2B9A  
                                    i2l520 3274                                      i2l514 3268  
                                    i2l374 1B9A                                      i2l376 1C0A  
                                    i2l560 2D36                                      i1l880 015E  
                                    i2l377 1C6A                                      i1l882 016A  
                                    i1l875 007E                                      i1l876 019A  
                                    i1l877 00DE                                      i1l878 0146  
                                    i2l559 2D4A                                      i1l887 0196  
                                    i1l879 0178                                      i2l867 244C  
                                    i2l868 2448                            ___awdiv@counter 012B  
                                    _VALUE 0008                        i2SPI_Write@response 0027  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _PORTE 000F84                                      _PORTG 000F86  
                                    _RSSI2 001F                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0027  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                                      _TRISF 000F97  
                                    _TRISG 000F98                                      _TX_ID 000C  
        __size_of_TMR0_SetInterruptHandler 000E                                      _Digit 00A1  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                  ?_TMR0_SetInterruptHandler 0127  
                                    _T_Ltr 0078                              __CFG_WRT3$OFF 000000  
                                    _Enter 00A4                              __CFG_WRT4$OFF 000000  
                           __CFG_EBRT0$OFF 000000                              __CFG_WRT5$OFF 000000  
                           __CFG_EBRT1$OFF 000000                              __CFG_WRT6$OFF 000000  
                           __CFG_EBRT2$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBRT3$OFF 000000                             __CFG_EBRT4$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBRT5$OFF 000000  
                                    _Time2 007C                             __CFG_EBRT6$OFF 000000  
                           __CFG_EBRT7$OFF 000000                           __end_of_TMR0_ISR 2FA2  
                                    _Pulse 0076                                      _Trick 000A  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                                    _Store 0015                              __CFG_WRTD$OFF 000000  
                           ?_INT1_CallBack 0027                             __CFG_EBRTB$OFF 000000  
                                    _ckeck 008E                                      _delay 3124  
                             _Write_b_eep2 2DA2             ??_INT1_DefaultInterruptHandler 00BB  
                            ___ftpack@sign 00BF                                      _value 0009  
                         __end_of_SPI_Read 322C                   _INT1_SetInterruptHandler 329E  
                                    pclath 000FFA                       ??_set_reception_mode 012B  
                                    tablat 000FF5                           __end_of_RF_reset 2F52  
                                    status 000FD8                                      wtemp6 004C  
                       __size_of_SPI_Write 0012                         __size_ofi1___lwdiv 0054  
           ?_INTERRUPT_InterruptManagerLow 0027                           __end_of_Delay_ms 3198  
                         __end_of_Delayms1 2E16                   __end_of_read_ZIGBEE_long 2B0E  
                          __initialization 289E                               __end_of_main 16A8  
                         read_RX_FIFO@temp 0035               __end_ofi2_write_ZIGBEE_short 3160  
                           _ADDRESS_long_1 0139                             _ADDRESS_long_2 00EF  
                                   ??_main 0139                              ___fttol@sign1 0130  
                            ?_read_RX_FIFO 0027                              __activetblptr 000003  
                           __CFG_PLLCFG$ON 000000                        __end_of_Read_b_eep2 3262  
                   ??_write_TX_normal_FIFO 0130                                     ?_delay 0127  
                             ?i2_SPI_Write 0027                                 _Send_Frame 00A9  
                                   _EEDATA 000F61                                     _EECON2 000F7E  
                                   _ANCON0 000F25                                     _ANCON1 000F24  
                                   _ANCON2 000F23                           ___awdiv@dividend 0127  
                         __end_of___ftpack 260E                                     i1l1240 25E4  
                                   i1l1241 25DA                                     i1l1234 2588  
                                   i1l1235 257E                                     _LENGTH 0023  
                                   i1l1237 25BC                                     i1l1238 25A6  
                                   i1l1423 2A36                                     i1l1280 2074  
                                   i1l1424 2A2E                                     i1l1265 1FF8  
                                   i1l1274 2088                                     i1l1291 20E0  
                                   i1l1427 2A56                                     i1l1292 20FC  
                                   i1l1428 2A60                                     i1l1293 212C  
                                   i1l1269 2022                                     i1l1279 207E  
                                   i1l1288 20BC   __end_of_nonbeacon_PAN_coordinator_device 2DA2  
__size_of_nonbeacon_PAN_coordinator_device 003E          ?_nonbeacon_PAN_coordinator_device 0027  
       ??_nonbeacon_PAN_coordinator_device 012B           _nonbeacon_PAN_coordinator_device 2D64  
                                   i1l1289 20B2                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     _ID_SET 000E  
                                   u422_21 1FB6                                     u423_21 1FCA  
                         __end_of___lwtoft 2FC8                                  ??_LcdData 012D  
                         SPI_Write@command 0128                                  ??_Delayms 0129  
                                   _OSCCON 000FD3                                  ??_LcdInit 012E  
                                   _PORTGX 0003                         __size_of_Busy_eep2 0006  
                  __end_of_set_not_encrypt 31C6                            Read_b_eep2@badd 0127  
                      __size_ofi2_SPI_Read 0010                               ?_set_channel 0027  
                         set_CCA_mode@temp 012C                                  ??_InitSPI 012B  
                                   _TX_CRC 0094                                     _LcdCmd 3104  
                       __size_of_ScanInput 0062                                     _Count1 0025  
                                   _Count2 0024                                     _V_Temp 009C  
                                   _Rv_CRC 0096                             __CFG_XINST$OFF 000000  
                                   _SendId 00A2                    write_ZIGBEE_long@data_r 012B  
                              ?_LcdDisplay 012E                               ?_set_not_ACK 0027  
                 set_short_address@address 012B                                     ___wmul 2F52  
                                ??___awdiv 012B                                  ??___ftadd 00C9  
                           __CFG_STVREN$ON 000000                                  ??___awmod 012B  
                                   _data_r 0021                                  ??___fttol 012B  
                                ??___lwdiv 012B                                  ??___lwmod 012B  
                         ?_TMR0_Initialize 0027                                     delay@l 0129  
                                   clear_0 28E4                                     clear_1 28F0  
                                   clear_2 28FC                           ___awdiv@quotient 012D  
                          ___awmod@divisor 0129                          _set_WAKE_from_pin 3160  
                          ___awmod@counter 012B                             ??_read_RX_FIFO 0030  
                          ??_INT0_CallBack 0027                           __end_of_pin_wake 323E  
                      Xor_check@data_value 0127                         ?_set_WAKE_from_pin 0027  
                        __end_of_SPI_Write 3250                          __end_ofi1___lwdiv 2A6A  
                       Xor_check@xor_value 012B                            ??_INT1_CallBack 00BB  
                         ??_lcd_off_cursor 012E                               __mediumconst 0000  
                             _data_RX_FIFO 0100                             _start_transmit 2B0E  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                              ?_Set_DeviceId 0027  
                    __end_of_TMR0_CallBack 3058   INT0_SetInterruptHandler@InterruptHandler 0127  
 INT1_SetInterruptHandler@InterruptHandler 0127   TMR0_SetInterruptHandler@InterruptHandler 0127  
                      ??_set_WAKE_from_pin 012B                          _init_ZIGBEE_basic 260E  
            __size_of_INTERRUPT_Initialize 0008           ??_INTERRUPT_InterruptManagerHigh 0037  
          ?_INTERRUPT_InterruptManagerHigh 0027                          _SYSTEM_Initialize 31DC  
                       ?_init_ZIGBEE_basic 0027                                 __accesstop 0060  
                  __end_of__initialization 2902                              ?_set_CCA_mode 0027  
                                ?_INT0_ISR 0027                                  ?_INT1_ISR 0027  
                               ___ftadd@f1 00C3                                 ___ftadd@f2 00C6  
                       __size_of_Xor_check 0042                                 _Store_DATA 0060  
             __size_ofi2_read_ZIGBEE_short 0022                         ?_SYSTEM_Initialize 0027  
                 __end_of_set_long_address 2E4A                              ___rparam_used 000001  
                        ScanInput@portread 00BB                        ??_init_ZIGBEE_basic 0130  
                               ___fttol@f1 0127                             __pcstackCOMRAM 0027  
                             __pidataBANK0 3198                               __pidataBANK1 32BA  
     nonbeacon_PAN_coordinator_device@temp 012B                        ??_SYSTEM_Initialize 012A  
                                ?_TMR0_ISR 0027                              __end_of_delay 3142  
                __end_of_set_WAKE_from_pin 317C                           _enable_interrupt 3282  
                                ?_SPI_Read 0027                                _Read_b_eep2 3250  
                               ___lwtoft@c 00C8                          __end_of_Busy_eep2 32F0  
                   __end_of_start_transmit 2B56                __size_of_EXT_INT_Initialize 0032  
                                ?_RF_reset 0027                      TMR0_ISR@CountCallBack 009A  
                        __end_of_ScanInput 296E                               _DeviceId_arr 00B5  
                           ??_Set_DeviceId 0131                                  ?_Delay_ms 0127  
                                ?_Delayms1 0127                         __size_of_lcd_clear 0008  
                             Xor_check@xor 012D                  __end_of_init_ZIGBEE_basic 26A4  
              __size_of_write_ZIGBEE_short 0024                               ?i2_Xor_check 0027  
            write_ZIGBEE_long@address_high 012E                   read_ZIGBEE_short@address 012A  
                                  ??_delay 0129                        __size_of_LcdDisplay 0040  
                __end_of_SYSTEM_Initialize 31F2                            Set_DeviceId@ID1 0133  
                          _ADDRESS_short_1 00EA                            _ADDRESS_short_2 00F9  
                               __pbssBANK0 0060                                 __pbssBANK1 0100  
                           ??_set_CCA_mode 012B                              _CheckPassword 006A  
                     i2_write_ZIGBEE_short 3142                      _INT0_InterruptHandler 006D  
                               ??_INT0_ISR 0027                                 ??_INT1_ISR 00BB  
                         ?_set_not_encrypt 0027                                    ?_LcdCmd 0027  
                           _flow_frequency 0082                              ?_set_TX_power 0027  
                  ??_init_ZIGBEE_nonbeacon 0131           __end_of_TMR0_SetInterruptHandler 329E  
                                  ?___wmul 00BB                                 ??_TMR0_ISR 00BB  
              i2write_ZIGBEE_short@address 002A                         __size_of_pin_reset 0022  
                               _enable_PLL 31F2                               ??i2_SPI_Read 0027  
                                ?___ftpack 00BB                                 ??_SPI_Read 0127  
                                  _DATA_RX 00B0                                    _DATA_TX 00B8  
                                ?___lwtoft 00C8                          __end_of_Xor_check 2C20  
                          ?_start_transmit 0027                                 ??_RF_reset 012B  
               ??_INT1_SetInterruptHandler 012A                                    _ID_READ 0005  
         __size_of_set_frame_format_filter 0092                                    _REFOCON 000F2A  
                               ??_Delay_ms 0129                                 ??_Delayms1 0129  
                                  _OSCCON2 000F64                                    _F_ERROR 0012  
                                  _OSCTUNE 000F9B                                    _F_IdSet 0018  
                                  _SSP1BUF 000FC9                                    _F_Enter 0001  
              set_frame_format_filter@temp 012C                                    _F_SetID 000F  
                                  _F_Input 001B                 i2write_ZIGBEE_short@data_r 0029  
                                  _IdByte1 009F                                    _IdByte2 009E  
                                  _IdByte3 009D                                    _T_ERROR 0090  
                   set_reception_mode@temp 012C                       __size_ofi2_SPI_Write 0010  
                    ?i2_write_ZIGBEE_short 0029                                    _LcdData 30E4  
                                  _Delayms 2CE4                                    _LcdInit 2A6A  
                               _flowLitres 0064          __size_of_INT0_SetInterruptHandler 000E  
                                  _T_Input 001C                       __end_of_read_RX_FIFO 1DE4  
                ?_INT0_SetInterruptHandler 0127                                    _InitSPI 3010  
                       __end_ofi2_SPI_Read 3282                          SPI_Write@response 0127  
                          __size_of_LcdCmd 0020                             ??_set_TX_power 0130  
                          Xor_check@length 0129                            __CFG_PWRTEN$OFF 000000  
                                ?_pin_wake 0027                                    __Hparam 0000  
                            _HEADER_LENGHT 1001                          ?_read_ZIGBEE_long 0029  
                                  __Lparam 0000                       __size_of_set_channel 01C0  
                 write_ZIGBEE_long@address 0129                          __end_of_lcd_clear 32D2  
                       ??_read_ZIGBEE_long 002B                    read_ZIGBEE_long@address 0029  
                                  ___awdiv 2736                                    ___ftadd 1FA4  
                                  ___awmod 27BC                 __size_of_set_WAKE_from_pin 001C  
                          __size_of___wmul 0028                                    ___fttol 22C6  
                                  ___lwdiv 29C2                                    ___lwmod 2B56  
                             __psmallconst 1000                                    _address 0007  
                     __size_of_set_not_ACK 0016                          set_long_address@i 012D  
                                  __pcinit 289E                                 ??___ftpack 00C0  
                                  __ramtop 1000                                    __ptext0 10F6  
                                  __ptext1 2152                                    __ptext2 2B0E  
                                  __ptext3 2F02                                    __ptext4 321A  
                                  __ptext5 31B0                                    __ptext6 31C6  
                                  __ptext7 2BDE                                    __ptext8 2E7C  
                                  __ptext9 282E                                 ??___lwtoft 00CB  
                                _T0CONbits 000FD5                          i1___lwdiv@divisor 00C3  
                    _OSCILLATOR_Initialize 3206                          i1___lwdiv@counter 00C5  
                         ___awmod@dividend 0127                   ??_PIN_MANAGER_Initialize 0127  
                        __CFG_MSSPMSK$MSK7 000000                     _address_TX_normal_FIFO 0098  
               __size_of_init_ZIGBEE_basic 0096                                 _set_PAN_ID 2EAA  
               __size_of_SYSTEM_Initialize 0016                             __pintcode_body 23BE  
                   __size_of_set_RSSI_mode 0042                       end_of_initialization 2902  
                        __end_of_pin_reset 30C2                __size_of_set_reception_mode 0070  
                                Delayms1@i 0129                                  Delayms1@j 012B  
                                Delay_ms@y 0129                            _address_RX_FIFO 00EC  
                                  int_func 23BE                  set_channel@channel_number 0130  
                        _write_ZIGBEE_long 296E                                  _F_ID_SEND 00AA  
                               ??_pin_wake 012B                                  _F_ID_Send 0004  
                       ?_write_ZIGBEE_long 0129                       __end_of_Set_DeviceId 1B62  
                             ??_LcdDisplay 0130                                    postdec1 000FE5  
                      __end_of_DATA_LENGHT 1003                                    postinc0 000FEE  
                                  postinc2 000FDE                          _set_short_address 2E7C  
                        set_TX_power@power 0131                                ?_enable_PLL 0027  
                       ?_set_short_address 012B                        ??_write_ZIGBEE_long 012C  
                     __end_of_set_CCA_mode 255E                   _TMR0_SetInterruptHandler 3290  
                                _PORTAbits 000F80                      _INT1_InterruptHandler 0070  
                                _PORTCbits 000F82                                  _PORTEbits 000F84  
                                _PORTFbits 000F85                        i2_read_ZIGBEE_short 30C2  
                      ??_set_short_address 012D                           Write_b_eep2@badd 0127  
                                _TRISCbits 000F94                           Write_b_eep2@data 0129  
                                _SPI_Write 323E                                  _F_Success 00A5  
                                i1___lwdiv 2A16                        set_not_encrypt@temp 012B  
                   ??i2_write_ZIGBEE_short 002A                             i2Xor_check@xor 002D  
                       __end_of_LcdDisplay 2CE4                   __end_of_enable_interrupt 3290  
            __size_of_write_TX_normal_FIFO 0174                       __size_ofi2_Xor_check 0040  
                __end_of_write_ZIGBEE_long 29C2                   set_reception_mode@r_mode 012B  
                     ?i2_read_ZIGBEE_short 0027                                  _T_ID_Send 000D  
                                _Decrement 008A                          ?_set_long_address 012B  
                        __size_of_INT0_ISR 0008                          __size_of_INT1_ISR 0008  
                           __end_of_LcdCmd 3124                  __end_of_set_short_address 2EAA  
                       i2SPI_Write@command 0028                         ??_set_long_address 012D  
                                _Device_ID 001D               __end_of_INTERRUPT_Initialize 32DA  
                            _set_RSSI_mode 2C62       __end_of_INT0_DefaultInterruptHandler 32F6  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 32F4  
                           __end_of___wmul 2F7A                          __size_of_TMR0_ISR 0028  
                             ?_Read_b_eep2 0127                     ?_OSCILLATOR_Initialize 0027  
                  _set_frame_format_filter 26A4                                  _Count_LED 0011  
                                _Flow_Rate 0080                    set_long_address@address 012B  
                        __size_of_SPI_Read 0012                      __end_of_INT0_CallBack 30A0  
                      start_initialization 289E                       __end_of_set_TX_power 2C62  
                                _Increment 008C                   __size_of_TMR0_Initialize 002A  
          __size_of_PIN_MANAGER_Initialize 0044                          __size_of_RF_reset 0028  
                                _Busy_eep2 32EA                      __end_of_INT1_CallBack 307C  
                              ?_set_PAN_ID 012B                                 ?_SPI_Write 0027  
                               ?i1___lwdiv 00C1                                  _ScanInput 290C  
                        __size_of_Delay_ms 001C                          __size_of_Delayms1 0038  
                    __size_of_read_RX_FIFO 0282                                  _InputRead 0019  
                      __size_of_enable_PLL 0014                      ??i2_read_ZIGBEE_short 0029  
                                _Module_ID 00A3                                _DATA_LENGHT 1002  
                                 ??_LcdCmd 012D                             ?_set_RSSI_mode 0027  
                                 ??___wmul 00BF            set_frame_format_filter@fff_mode 012B  
                             Delay_ms@time 0127                     __size_of_TMR0_CallBack 0024  
                         ??_start_transmit 012B                               Delayms1@time 0127  
           __size_of_init_ZIGBEE_nonbeacon 0024                                __pdataBANK0 00E4  
                              __pdataBANK1 0139              __end_of_init_ZIGBEE_nonbeacon 2FEC  
               __end_of_EXT_INT_Initialize 2E7C                               LcdData@value 012D  
            ?_INT0_DefaultInterruptHandler 0027                               _read_RX_FIFO 1B62  
                        __size_of___ftpack 00B0                 __end_of_write_ZIGBEE_short 3010  
                     i2Xor_check@xor_value 002B                           Set_DeviceId@fail 0135  
                              __pbssCOMRAM 0001           __end_of_INT0_SetInterruptHandler 32BA  
                        __size_of___lwtoft 0026                              __pcstackBANK0 00BB  
                            __pcstackBANK1 0127                                 ?_Busy_eep2 0027  
                        set_RSSI_mode@temp 012C                                  _Xor_check 2BDE  
                            ?_Write_b_eep2 0127                                 ?_ScanInput 0027  
                            ScanInput@temp 00BC                   write_ZIGBEE_short@data_r 0129  
                                 ?_LcdData 0027                                   ?_Delayms 0127  
               __size_of_write_ZIGBEE_long 0054                                   ?_LcdInit 0027  
             write_ZIGBEE_long@address_low 012F                      __size_of_Set_DeviceId 04BA  
                  read_ZIGBEE_short@data_r 0129                    __size_of_lcd_off_cursor 0008  
                                 ?_InitSPI 0027                      _TMR0_InterruptHandler 0073  
                         ___lwdiv@dividend 0127                     _PIN_MANAGER_Initialize 2B9A  
               __size_of_set_short_address 002E                          __CFG_CCP2MX$PORTC 000000  
                                __pintcode 0008                      __size_of_set_CCA_mode 00C6  
             read_ZIGBEE_long@address_high 002E                          __size_of_pin_wake 0012  
                                 ?___awdiv 0127                                   ?___ftadd 00C3  
                      __size_of_set_PAN_ID 002E                                   ?___awmod 0127  
                 __size_of_set_not_encrypt 0016                                   ?___fttol 0127  
                                 ?___lwdiv 0127                                   ?___lwmod 0127  
                                _lcd_clear 32CA                  ??_set_frame_format_filter 012B  
                              __pintcodelo 0018                          i2SPI_Read@TempVar 0027  
                              __smallconst 1000                               _Send_Frame_2 00A8  
                __size_of_read_ZIGBEE_long 0052                             ??_Write_b_eep2 012A  
                               ?_Xor_check 0127                               _Set_DeviceId 16A8  
                            ??i2_SPI_Write 0027                                ??_SPI_Write 0127  
                   read_ZIGBEE_long@data_r 002D                           ___lwdiv@quotient 012C  
                              ??i1___lwdiv 00C5                             __size_of_delay 001E  
                            _TMR0_CallBack 3034                       _INTERRUPT_Initialize 32D2  
                        ??_TMR0_Initialize 012A                                   _INT0_ISR 32E2  
                                 _INT1_ISR 32DA                               _set_CCA_mode 2498  
                           ___wmul@product 00BF                             LcdDisplay@LINE 0130  
                            ??_set_channel 0130          __size_of_INT1_SetInterruptHandler 000E  
                ?_INT1_SetInterruptHandler 0127                                  _pin_reset 30A0  
                                 _PAN_ID_1 00E8                                   _PAN_ID_2 00F7  
                                 _INPUT_DS 00E4                                   Delayms@k 0129  
                                 Delayms@l 012B                                   _INPUT_PS 00E6  
                                 _INTTRUPT 0026                                   i1u432_20 2052  
                                 i1u370_20 25EE                                   i1u426_20 1FEA  
                          ??_set_RSSI_mode 012B                                   i1u436_20 2090  
                                 i1u429_20 2014                                   i1u366_20 2570  
                                 i1u550_28 3044                                   i1u439_20 20C4  
                                 i2u215_40 1C6E                                   i1u464_20 2A3A  
                                _lost_data 001E                                   i1u552_28 3068  
                                 _F_BUZZER 00AC                                   i1u555_20 2F92  
                                 i1u563_20 009A                                   i1u572_20 0192  
               ??_TMR0_SetInterruptHandler 012A                                   _PIR1bits 000F9E  
                                 i2u554_48 308C                              ??_set_not_ACK 012B  
                                 _RCONbits 000FD0                                  _slave_add 0014  
                                 _TMR0_ISR 2F7A                               ??_enable_PLL 0130  
                               ?_lcd_clear 0027                                   _SPI_Read 321A  
                    __size_of_set_TX_power 0042                          ___wmul@multiplier 00BB  
                         __CFG_SOSCSEL$DIG 000000                                   _RF_reset 2F2A  
                     __size_of_Read_b_eep2 0012                                   _T_BUZZER 00AB  
           ??_INT0_DefaultInterruptHandler 0027                                   _Delay_ms 317C  
                                 _Delayms1 2DDE                                ??_Busy_eep2 0127  
                            read_RX_FIFO@i 0036                             ?_TMR0_CallBack 0027  
               __end_of_set_reception_mode 289E                                ??_ScanInput 00BB  
                              _INTCON2bits 000FF1                                _INTCON3bits 000FF0  
                                copy_data0 28B2                                  copy_data1 28D2  
                    ?_INTERRUPT_Initialize 0027                   _INT0_SetInterruptHandler 32AC  
          __end_of_set_frame_format_filter 2736                          ?_enable_interrupt 0027  
                       __end_of_enable_PLL 3206                           __size_of_LcdData 0020  
                         __size_of_Delayms 0040                        __end_ofi2_SPI_Write 3272  
                         __size_of_LcdInit 0052                         ??_enable_interrupt 012B  
                        _read_ZIGBEE_short 2F02                                 _EECON1bits 000F7F  
                               ?_pin_reset 0027                           __size_of_InitSPI 0024  
                                 __Hrparam 0000                         ?_read_ZIGBEE_short 0027  
                             _set_TX_power 2C20                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                        __end_of_set_channel 1FA4  
                              LcdCmd@value 012D               __end_of_write_TX_normal_FIFO 22C6  
                                 _Portread 001A                    ??_OSCILLATOR_Initialize 0127  
                         __size_of___awdiv 0086                           __size_of___ftadd 01AE  
                         __size_of___awmod 0072                           __size_of___fttol 00F8  
                      ??_read_ZIGBEE_short 0129                           __size_of___lwdiv 0054  
                              Delayms@time 0127                           __size_of___lwmod 0044  
                                 ___ftpack 255E                        __end_of_set_not_ACK 31DC  
                                 ___lwtoft 2FA2                          _ConfigModeEntered 00A6  
                __size_of_set_long_address 0034                          ??_set_not_encrypt 012B  
          ??_INTERRUPT_InterruptManagerLow 00CF                            ___lwdiv@divisor 0129  
                            ??i2_Xor_check 002A                               ??_set_PAN_ID 012D  
                              ??_Xor_check 012A                            ___lwdiv@counter 012B  
                                 __ptext10 2E16                                   __ptext11 26A4  
                                 __ptext20 2F2A                                   __ptext12 3160  
                                 __ptext21 2C62                                   __ptext13 2C20  
                                 __ptext30 323E                                   __ptext22 2498  
                                 __ptext14 2EAA                                   __ptext31 2B56  
                                 __ptext23 322C                                   __ptext15 30A0  
                                 __ptext40 2CA4                                   __ptext32 29C2  
                                 __ptext24 317C                                   __ptext16 2D64  
                                 __ptext41 30E4                                   __ptext33 22C6  
                                 __ptext25 260E                                   __ptext17 32C2  
                                 __ptext50 2E4A                                   __ptext42 2DDE  
                                 __ptext34 2736                                   __ptext26 31F2  
                                 __ptext18 2FC8                                   __ptext51 329E  
                                 __ptext43 32EA                                   __ptext35 16A8  
                                 __ptext27 296E                                   __ptext19 1DE4  
                                 __ptext60 2F52                                   __ptext52 32AC  
                                 __ptext44 31DC                                   __ptext36 32CA  
                                 __ptext28 3282                                   __ptext61 2FA2  
                                 __ptext53 2A6A                                   __ptext45 2ED8  
                                 __ptext37 27BC                                   __ptext29 2FEC  
                                 __ptext70 32F2                                   __ptext62 1FA4  
                                 __ptext54 3104                                   __ptext46 3290  
                                 __ptext38 2DA2                                   __ptext63 255E  
                                 __ptext55 2CE4                                   __ptext47 2B9A  
                                 __ptext39 3250                                   __ptext80 307C  
                                 __ptext72 30C2                                   __ptext64 2F7A  
                                 __ptext56 3010                                   __ptext48 3206  
                                 __ptext81 32F4                                   __ptext73 2D24  
                                 __ptext65 3034                                   __ptext57 3124  
                                 __ptext49 32D2                                   __ptext82 0000  
                                 __ptext74 1B62                                   __ptext66 32F0  
                                 __ptext75 3142                                   __ptext67 290C  
                                 __ptext59 2A16                                   __ptext76 2ABC  
                                 __ptext68 32DA                                   __ptext77 3262  
                                 __ptext69 3058                                   __ptext78 3272  
                                 __ptext79 32E2                               _SSP1CON1bits 000FC6  
                       i1___lwdiv@dividend 00C1                  __end_of_read_ZIGBEE_short 2F2A  
            __size_ofi2_write_ZIGBEE_short 001E                             _lcd_off_cursor 32C2  
                            __size_of_main 05B2                                 _ENTERCOUNT 0086  
                                 delay@dly 0127       __end_of_TMR0_DefaultInterruptHandler 32F2  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 32F0  
                                 _pin_wake 322C                        __CFG_RTCOSC$SOSCREF 000000  
                     __end_of_Write_b_eep2 2DDE                                   int$flags 004B  
                     set_CCA_mode@CCA_mode 012B                         __end_of_set_PAN_ID 2ED8  
                              ??_lcd_clear 012E                  write_ZIGBEE_short@address 012A  
                             _SSP1STATbits 000FC7                        __CFG_INTOSCSEL$HIGH 000000  
     __end_of_INT1_DefaultInterruptHandler 32F4      __size_of_INT1_DefaultInterruptHandler 0002  
             _INT1_DefaultInterruptHandler 32F2                         i1___lwdiv@quotient 00C6  
                         _read_ZIGBEE_long 2ABC                                 _INTCONbits 000FF2  
                        set_PAN_ID@address 012B                            ??_TMR0_CallBack 00BB  
                   ??_INTERRUPT_Initialize 0127                __end_ofi2_read_ZIGBEE_short 30E4  
                              i2_SPI_Write 3262                         _EXT_INT_Initialize 2E4A  
                   __end_of_lcd_off_cursor 32CA                                   intlevel1 0000  
                                 intlevel2 0000                         _write_ZIGBEE_short 2FEC  
                         ___lwmod@dividend 0127                        __end_ofi2_Xor_check 2D64  
                  ?_PIN_MANAGER_Initialize 0027                           LcdDisplay@string 012E  
                      ?_EXT_INT_Initialize 0027                                _set_channel 1DE4  
                              ??_pin_reset 012B                      __end_of_HEADER_LENGHT 1002  
                   __size_of_INT0_CallBack 0024              ?_TMR0_DefaultInterruptHandler 0027  
                      ?_write_ZIGBEE_short 0129                                _set_not_ACK 31C6  
                   __size_of_INT1_CallBack 0024                         __CFG_WDTPS$1048576 000000  
                               i2_SPI_Read 3272     __end_of_INTERRUPT_InterruptManagerHigh 2498  
  __size_of_INTERRUPT_InterruptManagerHigh 2490             _INTERRUPT_InterruptManagerHigh 0008  
                    _init_ZIGBEE_nonbeacon 2FC8                       ??_EXT_INT_Initialize 012A  
                               _SEQ_NUMBER 00EE              ?_INT1_DefaultInterruptHandler 0027  
                          ___lwmod@divisor 0129                            _TMR0_Initialize 2ED8  
                          ___lwmod@counter 012B                    Write_b_eep2@GIE_BIT_VAL 012A  
         __end_of_INT1_SetInterruptHandler 32AC                       ??_write_ZIGBEE_short 012A  
    __end_of_INTERRUPT_InterruptManagerLow 01F2     __size_of_INTERRUPT_InterruptManagerLow 01DA  
            _INTERRUPT_InterruptManagerLow 0018                       _write_TX_normal_FIFO 2152  
                          ?_lcd_off_cursor 0027             __end_of_PIN_MANAGER_Initialize 2BDE  
               __size_of_read_ZIGBEE_short 0028                        __CFG_BORPWR$ZPBORMV 000000  
