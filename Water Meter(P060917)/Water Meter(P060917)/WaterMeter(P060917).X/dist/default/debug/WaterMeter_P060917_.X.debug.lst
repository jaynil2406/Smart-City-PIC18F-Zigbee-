

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 10 12:21:40 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           ; Version 1.45
   104                           ; Generated 16/11/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F67K22 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  011A9C                     __pidataCOMRAM:
   140                           	opt stack 0
   141                           
   142                           ;initializer for _send
   143  011A9C  1A                 	db	26
   144  011A9D  0D                 	db	13
   145                           
   146                           	psect	idataBANK0
   147  011A68                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _PAN_ID_1
   151  011A68  03                 	db	3
   152  011A69  03                 	db	3
   153                           
   154                           ;initializer for _ADDRESS_short_1
   155  011A6A  01                 	db	1
   156  011A6B  01                 	db	1
   157                           
   158                           ;initializer for _address_RX_FIFO
   159  011A6C  0300               	dw	768
   160                           
   161                           ;initializer for _SEQ_NUMBER
   162  011A6E  23                 	db	35
   163                           
   164                           ;initializer for _PAN_ID_2
   165  011A6F  03                 	db	3
   166  011A70  03                 	db	3
   167                           
   168                           ;initializer for _ADDRESS_short_2
   169  011A71  02                 	db	2
   170  011A72  02                 	db	2
   171                           
   172                           	psect	idataBANK1
   173  010C72                     __pidataBANK1:
   174                           	opt stack 0
   175                           
   176                           ;initializer for _ADDRESS_long_1
   177  010C72  01                 	db	1
   178  010C73  01                 	db	1
   179  010C74  01                 	db	1
   180  010C75  01                 	db	1
   181  010C76  01                 	db	1
   182  010C77  01                 	db	1
   183  010C78  01                 	db	1
   184  010C79  01                 	db	1
   185                           
   186                           ;initializer for _LED_PATTERN
   187  010C7A  30                 	db	48
   188  010C7B  2C                 	db	44
   189  010C7C  30                 	db	48
   190  010C7D  2C                 	db	44
   191  010C7E  30                 	db	48
   192  010C7F  2C                 	db	44
   193  010C80  30                 	db	48
   194                           
   195                           ;initializer for _msg
   196  010C81  48                 	db	72
   197  010C82  65                 	db	101
   198  010C83  6C                 	db	108
   199  010C84  6C                 	db	108
   200  010C85  6F                 	db	111
   201  010C86  0D                 	db	13
   202                           
   203                           ;initializer for _Call_Cut
   204  010C87  41                 	db	65
   205  010C88  54                 	db	84
   206  010C89  48                 	db	72
   207  010C8A  0D                 	db	13
   208                           
   209                           ;initializer for _Emeregency3
   210  010C8B  49                 	db	73
   211  010C8C  44                 	db	68
   212  010C8D  20                 	db	32
   213  010C8E  00                 	db	0
   214  010C8F  00                 	db	0
   215  010C90  00                 	db	0
   216  010C91  20                 	db	32
   217  010C92  69                 	db	105
   218  010C93  73                 	db	115
   219  010C94  20                 	db	32
   220  010C95  69                 	db	105
   221  010C96  6E                 	db	110
   222  010C97  20                 	db	32
   223  010C98  45                 	db	69
   224  010C99  6D                 	db	109
   225  010C9A  65                 	db	101
   226  010C9B  72                 	db	114
   227  010C9C  67                 	db	103
   228  010C9D  65                 	db	101
   229  010C9E  6E                 	db	110
   230  010C9F  63                 	db	99
   231  010CA0  79                 	db	121
   232  010CA1  0D                 	db	13
   233                           
   234                           ;initializer for _Message4
   235  010CA2  49                 	db	73
   236  010CA3  44                 	db	68
   237  010CA4  20                 	db	32
   238  010CA5  20                 	db	32
   239  010CA6  20                 	db	32
   240  010CA7  20                 	db	32
   241  010CA8  20                 	db	32
   242  010CA9  20                 	db	32
   243  010CAA  4C                 	db	76
   244  010CAB  69                 	db	105
   245  010CAC  67                 	db	103
   246  010CAD  68                 	db	104
   247  010CAE  74                 	db	116
   248  010CAF  20                 	db	32
   249  010CB0  2D                 	db	45
   250  010CB1  2D                 	db	45
   251  010CB2  3E                 	db	62
   252  010CB3  3E                 	db	62
   253  010CB4  20                 	db	32
   254  010CB5  4F                 	db	79
   255  010CB6  4E                 	db	78
   256  010CB7  00                 	db	0
   257                           
   258                           ;initializer for _Emeregency2
   259  010CB8  49                 	db	73
   260  010CB9  44                 	db	68
   261  010CBA  20                 	db	32
   262  010CBB  00                 	db	0
   263  010CBC  00                 	db	0
   264  010CBD  20                 	db	32
   265  010CBE  69                 	db	105
   266  010CBF  73                 	db	115
   267  010CC0  20                 	db	32
   268  010CC1  69                 	db	105
   269  010CC2  6E                 	db	110
   270  010CC3  20                 	db	32
   271  010CC4  45                 	db	69
   272  010CC5  6D                 	db	109
   273  010CC6  65                 	db	101
   274  010CC7  72                 	db	114
   275  010CC8  67                 	db	103
   276  010CC9  65                 	db	101
   277  010CCA  6E                 	db	110
   278  010CCB  63                 	db	99
   279  010CCC  79                 	db	121
   280  010CCD  0D                 	db	13
   281                           
   282                           ;initializer for _Emeregency
   283  010CCE  49                 	db	73
   284  010CCF  44                 	db	68
   285  010CD0  20                 	db	32
   286  010CD1  00                 	db	0
   287  010CD2  20                 	db	32
   288  010CD3  69                 	db	105
   289  010CD4  73                 	db	115
   290  010CD5  20                 	db	32
   291  010CD6  69                 	db	105
   292  010CD7  6E                 	db	110
   293  010CD8  20                 	db	32
   294  010CD9  45                 	db	69
   295  010CDA  6D                 	db	109
   296  010CDB  65                 	db	101
   297  010CDC  72                 	db	114
   298  010CDD  67                 	db	103
   299  010CDE  65                 	db	101
   300  010CDF  6E                 	db	110
   301  010CE0  63                 	db	99
   302  010CE1  79                 	db	121
   303  010CE2  0D                 	db	13
   304                           
   305                           ;initializer for _SEND_SMS
   306  010CE3  41                 	db	65
   307  010CE4  54                 	db	84
   308  010CE5  2B                 	db	43
   309  010CE6  43                 	db	67
   310  010CE7  4D                 	db	77
   311  010CE8  47                 	db	71
   312  010CE9  53                 	db	83
   313  010CEA  3D                 	db	61
   314  010CEB  22                 	db	34
   315  010CEC  39                 	db	57
   316  010CED  34                 	db	52
   317  010CEE  32                 	db	50
   318  010CEF  37                 	db	55
   319  010CF0  38                 	db	56
   320  010CF1  35                 	db	53
   321  010CF2  32                 	db	50
   322  010CF3  30                 	db	48
   323  010CF4  32                 	db	50
   324  010CF5  35                 	db	53
   325  010CF6  22                 	db	34
   326  010CF7  0D                 	db	13
   327                           
   328                           ;initializer for _Array
   329  010CF8  30                 	db	48
   330  010CF9  78                 	db	120
   331  010CFA  30                 	db	48
   332  010CFB  30                 	db	48
   333  010CFC  2C                 	db	44
   334  010CFD  30                 	db	48
   335  010CFE  78                 	db	120
   336  010CFF  30                 	db	48
   337  010D00  30                 	db	48
   338  010D01  2C                 	db	44
   339  010D02  30                 	db	48
   340  010D03  78                 	db	120
   341  010D04  30                 	db	48
   342  010D05  30                 	db	48
   343  010D06  2C                 	db	44
   344  010D07  30                 	db	48
   345  010D08  78                 	db	120
   346  010D09  30                 	db	48
   347  010D0A  30                 	db	48
   348                           
   349                           ;initializer for _Number
   350  010D0B  41                 	db	65
   351  010D0C  54                 	db	84
   352  010D0D  44                 	db	68
   353  010D0E  39                 	db	57
   354  010D0F  34                 	db	52
   355  010D10  32                 	db	50
   356  010D11  37                 	db	55
   357  010D12  38                 	db	56
   358  010D13  35                 	db	53
   359  010D14  32                 	db	50
   360  010D15  30                 	db	48
   361  010D16  32                 	db	50
   362  010D17  35                 	db	53
   363  010D18  3B                 	db	59
   364  010D19  0D                 	db	13
   365                           
   366                           ;initializer for _SMS_format
   367  010D1A  41                 	db	65
   368  010D1B  54                 	db	84
   369  010D1C  2B                 	db	43
   370  010D1D  43                 	db	67
   371  010D1E  4D                 	db	77
   372  010D1F  47                 	db	71
   373  010D20  46                 	db	70
   374  010D21  3D                 	db	61
   375  010D22  31                 	db	49
   376  010D23  0D                 	db	13
   377                           
   378                           ;initializer for _ADDRESS_long_2
   379  010D24  02                 	db	2
   380  010D25  02                 	db	2
   381  010D26  02                 	db	2
   382  010D27  02                 	db	2
   383  010D28  02                 	db	2
   384  010D29  02                 	db	2
   385  010D2A  02                 	db	2
   386  010D2B  02                 	db	2
   387                           
   388                           ;initializer for _Call
   389  010D2C  41                 	db	65
   390  010D2D  54                 	db	84
   391  010D2E  43                 	db	67
   392  010D2F  4C                 	db	76
   393  010D30  43                 	db	67
   394  010D31  0D                 	db	13
   395                           
   396                           	psect	idataBANK2
   397  011946                     __pidataBANK2:
   398                           	opt stack 0
   399                           
   400                           ;initializer for _Message5
   401  011946  49                 	db	73
   402  011947  44                 	db	68
   403  011948  20                 	db	32
   404  011949  20                 	db	32
   405  01194A  20                 	db	32
   406  01194B  20                 	db	32
   407  01194C  20                 	db	32
   408  01194D  20                 	db	32
   409  01194E  4C                 	db	76
   410  01194F  69                 	db	105
   411  011950  67                 	db	103
   412  011951  68                 	db	104
   413  011952  74                 	db	116
   414  011953  20                 	db	32
   415  011954  2D                 	db	45
   416  011955  2D                 	db	45
   417  011956  3E                 	db	62
   418  011957  3E                 	db	62
   419  011958  20                 	db	32
   420  011959  4F                 	db	79
   421  01195A  46                 	db	70
   422  01195B  46                 	db	70
   423  01195C  2E                 	db	46
   424  01195D  20                 	db	32
   425                           
   426                           	psect	mediumconst
   427  00FE9A                     __pmediumconst:
   428                           	opt stack 0
   429  00FE9A  00                 	db	0
   430  00FE9B                     _Message2:
   431                           	opt stack 0
   432  00FE9B  4C                 	db	76
   433  00FE9C  69                 	db	105
   434  00FE9D  67                 	db	103
   435  00FE9E  68                 	db	104
   436  00FE9F  74                 	db	116
   437  00FEA0  20                 	db	32
   438  00FEA1  69                 	db	105
   439  00FEA2  73                 	db	115
   440  00FEA3  20                 	db	32
   441  00FEA4  4F                 	db	79
   442  00FEA5  46                 	db	70
   443  00FEA6  46                 	db	70
   444  00FEA7  2E                 	db	46
   445  00FEA8                     __end_of_Message2:
   446                           	opt stack 0
   447  00FEA8                     _LIGHT_CARD_STATUS:
   448                           	opt stack 0
   449  00FEA8  24                 	db	36
   450  00FEA9  20                 	db	32
   451  00FEAA  4D                 	db	77
   452  00FEAB  53                 	db	83
   453  00FEAC  47                 	db	71
   454  00FEAD  35                 	db	53
   455  00FEAE  20                 	db	32
   456  00FEAF  50                 	db	80
   457  00FEB0  41                 	db	65
   458  00FEB1  52                 	db	82
   459  00FEB2  20                 	db	32
   460  00FEB3  53                 	db	83
   461  00FEB4  54                 	db	84
   462  00FEB5                     __end_of_LIGHT_CARD_STATUS:
   463                           	opt stack 0
   464  00FEB5                     _LIGHT_ALTERNATE:
   465                           	opt stack 0
   466  00FEB5  24                 	db	36
   467  00FEB6  20                 	db	32
   468  00FEB7  4D                 	db	77
   469  00FEB8  53                 	db	83
   470  00FEB9  47                 	db	71
   471  00FEBA  33                 	db	51
   472  00FEBB  20                 	db	32
   473  00FEBC  41                 	db	65
   474  00FEBD  4C                 	db	76
   475  00FEBE  54                 	db	84
   476  00FEBF  45                 	db	69
   477  00FEC0  52                 	db	82
   478  00FEC1  4E                 	db	78
   479  00FEC2                     __end_of_LIGHT_ALTERNATE:
   480                           	opt stack 0
   481  00FEC2                     _LIGHT_ALL_OFF:
   482                           	opt stack 0
   483  00FEC2  24                 	db	36
   484  00FEC3  20                 	db	32
   485  00FEC4  4D                 	db	77
   486  00FEC5  53                 	db	83
   487  00FEC6  47                 	db	71
   488  00FEC7  32                 	db	50
   489  00FEC8  20                 	db	32
   490  00FEC9  41                 	db	65
   491  00FECA  4C                 	db	76
   492  00FECB  4C                 	db	76
   493  00FECC  20                 	db	32
   494  00FECD  4F                 	db	79
   495  00FECE  46                 	db	70
   496  00FECF                     __end_of_LIGHT_ALL_OFF:
   497                           	opt stack 0
   498  00FECF                     _LIGHT_ALL_ON:
   499                           	opt stack 0
   500  00FECF  24                 	db	36
   501  00FED0  20                 	db	32
   502  00FED1  4D                 	db	77
   503  00FED2  53                 	db	83
   504  00FED3  47                 	db	71
   505  00FED4  31                 	db	49
   506  00FED5  20                 	db	32
   507  00FED6  41                 	db	65
   508  00FED7  4C                 	db	76
   509  00FED8  4C                 	db	76
   510  00FED9  20                 	db	32
   511  00FEDA  4F                 	db	79
   512  00FEDB  4E                 	db	78
   513  00FEDC                     __end_of_LIGHT_ALL_ON:
   514                           	opt stack 0
   515  00FEDC                     _Message1:
   516                           	opt stack 0
   517  00FEDC  4C                 	db	76
   518  00FEDD  69                 	db	105
   519  00FEDE  67                 	db	103
   520  00FEDF  68                 	db	104
   521  00FEE0  74                 	db	116
   522  00FEE1  20                 	db	32
   523  00FEE2  69                 	db	105
   524  00FEE3  73                 	db	115
   525  00FEE4  20                 	db	32
   526  00FEE5  4F                 	db	79
   527  00FEE6  4E                 	db	78
   528  00FEE7                     __end_of_Message1:
   529                           	opt stack 0
   530  00FEE7                     _SMSread:
   531                           	opt stack 0
   532  00FEE7  41                 	db	65
   533  00FEE8  54                 	db	84
   534  00FEE9  2B                 	db	43
   535  00FEEA  43                 	db	67
   536  00FEEB  4D                 	db	77
   537  00FEEC  47                 	db	71
   538  00FEED  52                 	db	82
   539  00FEEE  3D                 	db	61
   540  00FEEF  31                 	db	49
   541  00FEF0  0D                 	db	13
   542  00FEF1                     __end_of_SMSread:
   543                           	opt stack 0
   544  00FEF1                     _Enable_Result_Code:
   545                           	opt stack 0
   546  00FEF1  41                 	db	65
   547  00FEF2  54                 	db	84
   548  00FEF3  2B                 	db	43
   549  00FEF4  43                 	db	67
   550  00FEF5  4D                 	db	77
   551  00FEF6  45                 	db	69
   552  00FEF7  45                 	db	69
   553  00FEF8  3D                 	db	61
   554  00FEF9  32                 	db	50
   555  00FEFA  0D                 	db	13
   556  00FEFB                     __end_of_Enable_Result_Code:
   557                           	opt stack 0
   558  00FEFB                     _LIGHT_DEBBUGE_STATUS:
   559                           	opt stack 0
   560  00FEFB  24                 	db	36
   561  00FEFC  20                 	db	32
   562  00FEFD  4D                 	db	77
   563  00FEFE  53                 	db	83
   564  00FEFF  47                 	db	71
   565  00FF00  34                 	db	52
   566  00FF01  20                 	db	32
   567  00FF02  4C                 	db	76
   568  00FF03  44                 	db	68
   569  00FF04                     __end_of_LIGHT_DEBBUGE_STATUS:
   570                           	opt stack 0
   571  00FF04                     _Sim_Status:
   572                           	opt stack 0
   573  00FF04  41                 	db	65
   574  00FF05  54                 	db	84
   575  00FF06  2B                 	db	43
   576  00FF07  43                 	db	67
   577  00FF08  50                 	db	80
   578  00FF09  49                 	db	73
   579  00FF0A  4E                 	db	78
   580  00FF0B  3F                 	db	63
   581  00FF0C  0D                 	db	13
   582  00FF0D                     __end_of_Sim_Status:
   583                           	opt stack 0
   584  00FF0D                     _Get_Baud:
   585                           	opt stack 0
   586  00FF0D  41                 	db	65
   587  00FF0E  54                 	db	84
   588  00FF0F  2B                 	db	43
   589  00FF10  49                 	db	73
   590  00FF11  50                 	db	80
   591  00FF12  52                 	db	82
   592  00FF13  3F                 	db	63
   593  00FF14  0D                 	db	13
   594  00FF15                     __end_of_Get_Baud:
   595                           	opt stack 0
   596  00FF15                     _IMEI:
   597                           	opt stack 0
   598  00FF15  41                 	db	65
   599  00FF16  54                 	db	84
   600  00FF17  2B                 	db	43
   601  00FF18  47                 	db	71
   602  00FF19  53                 	db	83
   603  00FF1A  4E                 	db	78
   604  00FF1B  0D                 	db	13
   605  00FF1C                     __end_of_IMEI:
   606                           	opt stack 0
   607  00FF1C                     _echo_off:
   608                           	opt stack 0
   609  00FF1C  41                 	db	65
   610  00FF1D  54                 	db	84
   611  00FF1E  45                 	db	69
   612  00FF1F  30                 	db	48
   613  00FF20  0D                 	db	13
   614  00FF21  00                 	db	0
   615  00FF22                     __end_of_echo_off:
   616                           	opt stack 0
   617  00FF22                     _Set_Responce:
   618                           	opt stack 0
   619  00FF22  41                 	db	65
   620  00FF23  54                 	db	84
   621  00FF24  56                 	db	86
   622  00FF25  31                 	db	49
   623  00FF26  0D                 	db	13
   624  00FF27                     __end_of_Set_Responce:
   625                           	opt stack 0
   626  00FF27                     _Manufacturer_Id:
   627                           	opt stack 0
   628  00FF27  41                 	db	65
   629  00FF28  54                 	db	84
   630  00FF29  49                 	db	73
   631  00FF2A  0D                 	db	13
   632  00FF2B                     __end_of_Manufacturer_Id:
   633                           	opt stack 0
   634  00FF2B                     _HEADER_LENGHT:
   635                           	opt stack 0
   636  00FF2B  0B                 	db	11
   637  00FF2C                     __end_of_HEADER_LENGHT:
   638                           	opt stack 0
   639  00FF2C                     _DATA_LENGHT:
   640                           	opt stack 0
   641  00FF2C  05                 	db	5
   642  00FF2D                     __end_of_DATA_LENGHT:
   643                           	opt stack 0
   644  00FF2D                     _Message6:
   645                           	opt stack 0
   646  00FF2D  20                 	db	32
   647  00FF2E  20                 	db	32
   648  00FF2F  20                 	db	32
   649  00FF30  2D                 	db	45
   650  00FF31  2D                 	db	45
   651  00FF32  2D                 	db	45
   652  00FF33  3E                 	db	62
   653  00FF34  4C                 	db	76
   654  00FF35  45                 	db	69
   655  00FF36  44                 	db	68
   656  00FF37  20                 	db	32
   657  00FF38  44                 	db	68
   658  00FF39  69                 	db	105
   659  00FF3A  73                 	db	115
   660  00FF3B  70                 	db	112
   661  00FF3C  6C                 	db	108
   662  00FF3D  61                 	db	97
   663  00FF3E  79                 	db	121
   664  00FF3F  20                 	db	32
   665  00FF40  42                 	db	66
   666  00FF41  6F                 	db	111
   667  00FF42  61                 	db	97
   668  00FF43  72                 	db	114
   669  00FF44  64                 	db	100
   670  00FF45  20                 	db	32
   671  00FF46  44                 	db	68
   672  00FF47  61                 	db	97
   673  00FF48  74                 	db	116
   674  00FF49  61                 	db	97
   675  00FF4A  3C                 	db	60
   676  00FF4B  2D                 	db	45
   677  00FF4C  2D                 	db	45
   678  00FF4D  2D                 	db	45
   679  00FF4E  2D                 	db	45
   680  00FF4F  20                 	db	32
   681  00FF50  20                 	db	32
   682  00FF51  20                 	db	32
   683  00FF52                     __end_of_Message6:
   684                           	opt stack 0
   685  00FF52                     _Message3:
   686                           	opt stack 0
   687  00FF52  50                 	db	80
   688  00FF53  6C                 	db	108
   689  00FF54  65                 	db	101
   690  00FF55  61                 	db	97
   691  00FF56  73                 	db	115
   692  00FF57  65                 	db	101
   693  00FF58  20                 	db	32
   694  00FF59  43                 	db	67
   695  00FF5A  68                 	db	104
   696  00FF5B  61                 	db	97
   697  00FF5C  6E                 	db	110
   698  00FF5D  67                 	db	103
   699  00FF5E  65                 	db	101
   700  00FF5F  20                 	db	32
   701  00FF60  79                 	db	121
   702  00FF61  6F                 	db	111
   703  00FF62  75                 	db	117
   704  00FF63  72                 	db	114
   705  00FF64  20                 	db	32
   706  00FF65  4C                 	db	76
   707  00FF66  69                 	db	105
   708  00FF67  67                 	db	103
   709  00FF68  68                 	db	104
   710  00FF69  74                 	db	116
   711  00FF6A  20                 	db	32
   712  00FF6B  4D                 	db	77
   713  00FF6C  6F                 	db	111
   714  00FF6D  64                 	db	100
   715  00FF6E  75                 	db	117
   716  00FF6F  6C                 	db	108
   717  00FF70  65                 	db	101
   718  00FF71  2E                 	db	46
   719  00FF72                     __end_of_Message3:
   720                           	opt stack 0
   721  00FF72                     _Delet_All_SMS:
   722                           	opt stack 0
   723  00FF72  41                 	db	65
   724  00FF73  54                 	db	84
   725  00FF74  2B                 	db	43
   726  00FF75  43                 	db	67
   727  00FF76  4D                 	db	77
   728  00FF77  47                 	db	71
   729  00FF78  44                 	db	68
   730  00FF79  3D                 	db	61
   731  00FF7A  31                 	db	49
   732  00FF7B  2C                 	db	44
   733  00FF7C  34                 	db	52
   734  00FF7D  0D                 	db	13
   735  00FF7E                     __end_of_Delet_All_SMS:
   736                           	opt stack 0
   737  00FF7E                     _ATCheck:
   738                           	opt stack 0
   739  00FF7E  41                 	db	65
   740  00FF7F  54                 	db	84
   741  00FF80  0D                 	db	13
   742  00FF81                     __end_of_ATCheck:
   743                           	opt stack 0
   744  0000                     _REFOCON	set	3882
   745  0000                     _ANCON2	set	3875
   746  0000                     _ANCON1	set	3876
   747  0000                     _ANCON0	set	3877
   748  0000                     _EECON2	set	3966
   749  0000                     _EECON1bits	set	3967
   750  0000                     _EEDATA	set	3937
   751  0000                     _EEADR	set	3938
   752  0000                     _SSP1BUF	set	4041
   753  0000                     _SSP1STATbits	set	4039
   754  0000                     _SSP1CON1bits	set	4038
   755  0000                     _PORTCbits	set	3970
   756  0000                     _PORTEbits	set	3972
   757  0000                     _PORTFbits	set	3973
   758  0000                     _PORTE	set	3972
   759  0000                     _PIR1bits	set	3998
   760  0000                     _TXREG	set	4013
   761  0000                     _TRISCbits	set	3988
   762  0000                     _PIE1bits	set	3997
   763  0000                     _RCSTAbits	set	4011
   764  0000                     _TXSTAbits	set	4012
   765  0000                     _SPBRG	set	4015
   766  0000                     _PORTAbits	set	3968
   767  0000                     _T0CONbits	set	4053
   768  0000                     _T0CON	set	4053
   769  0000                     _TMR0L	set	4054
   770  0000                     _TMR0H	set	4055
   771  0000                     _RCONbits	set	4048
   772  0000                     _OSCTUNE	set	3995
   773  0000                     _OSCCON2	set	3940
   774  0000                     _OSCCON	set	4051
   775  0000                     _TRISD	set	3989
   776  0000                     _TRISC	set	3988
   777  0000                     _TRISB	set	3987
   778  0000                     _TRISG	set	3992
   779  0000                     _TRISA	set	3986
   780  0000                     _TRISF	set	3991
   781  0000                     _TRISE	set	3990
   782  0000                     _LATC	set	3979
   783  0000                     _LATG	set	3983
   784  0000                     _LATB	set	3978
   785  0000                     _LATF	set	3982
   786  0000                     _LATA	set	3977
   787  0000                     _LATD	set	3980
   788  0000                     _LATE	set	3981
   789  0000                     _INTCON2bits	set	4081
   790  0000                     _INTCONbits	set	4082
   791  0000                     _INTCON3bits	set	4080
   792  00FF81                     STR_1:
   793  00FF81  20                 	db	32
   794  00FF82  20                 	db	32
   795  00FF83  20                 	db	32
   796  00FF84  20                 	db	32
   797  00FF85  70                 	db	112	;'p'
   798  00FF86  68                 	db	104	;'h'
   799  00FF87  69                 	db	105	;'i'
   800  00FF88  6C                 	db	108	;'l'
   801  00FF89  62                 	db	98	;'b'
   802  00FF8A  72                 	db	114	;'r'
   803  00FF8B  69                 	db	105	;'i'
   804  00FF8C  63                 	db	99	;'c'
   805  00FF8D  6B                 	db	107	;'k'
   806  00FF8E  20                 	db	32
   807  00FF8F  20                 	db	32
   808  00FF90  20                 	db	32
   809  00FF91  20                 	db	32
   810  00FF92  20                 	db	32
   811  00FF93  00                 	db	0
   812  00FF94                     STR_2:
   813  00FF94  20                 	db	32
   814  00FF95  20                 	db	32
   815  00FF96  54                 	db	84	;'T'
   816  00FF97  65                 	db	101	;'e'
   817  00FF98  63                 	db	99	;'c'
   818  00FF99  68                 	db	104	;'h'
   819  00FF9A  6E                 	db	110	;'n'
   820  00FF9B  6F                 	db	111	;'o'
   821  00FF9C  6C                 	db	108	;'l'
   822  00FF9D  6F                 	db	111	;'o'
   823  00FF9E  67                 	db	103	;'g'
   824  00FF9F  69                 	db	105	;'i'
   825  00FFA0  65                 	db	101	;'e'
   826  00FFA1  73                 	db	115	;'s'
   827  00FFA2  20                 	db	32
   828  00FFA3  20                 	db	32
   829  00FFA4  20                 	db	32
   830  00FFA5  20                 	db	32
   831  00FFA6  00                 	db	0
   832  00FFA7                     STR_3:
   833  00FFA7  20                 	db	32
   834  00FFA8  57                 	db	87	;'W'
   835  00FFA9  61                 	db	97	;'a'
   836  00FFAA  74                 	db	116	;'t'
   837  00FFAB  65                 	db	101	;'e'
   838  00FFAC  72                 	db	114	;'r'
   839  00FFAD  20                 	db	32
   840  00FFAE  46                 	db	70	;'F'
   841  00FFAF  6C                 	db	108	;'l'
   842  00FFB0  6F                 	db	111	;'o'
   843  00FFB1  77                 	db	119	;'w'
   844  00FFB2  20                 	db	32
   845  00FFB3  4D                 	db	77	;'M'
   846  00FFB4  65                 	db	101	;'e'
   847  00FFB5  74                 	db	116	;'t'
   848  00FFB6  65                 	db	101	;'e'
   849  00FFB7  72                 	db	114	;'r'
   850  00FFB8  20                 	db	32
   851  00FFB9  00                 	db	0
   852  00FFBA  44                 	db	68	;'D'
   853  00FFBB  65                 	db	101	;'e'
   854  00FFBC  6C                 	db	108	;'l'
   855  00FFBD  65                 	db	101	;'e'
   856  00FFBE  74                 	db	116	;'t'
   857  00FFBF  69                 	db	105	;'i'
   858  00FFC0  6E                 	db	110	;'n'
   859  00FFC1  67                 	db	103	;'g'
   860  00FFC2  20                 	db	32
   861  00FFC3  53                 	db	83	;'S'
   862  00FFC4  4D                 	db	77	;'M'
   863  00FFC5  53                 	db	83	;'S'
   864  00FFC6  20                 	db	32
   865  00FFC7  20                 	db	32
   866  00FFC8  20                 	db	32
   867  00FFC9  20                 	db	32
   868  00FFCA  00                 	db	0
   869  00FFCB  41                 	db	65	;'A'
   870  00FFCC  6C                 	db	108	;'l'
   871  00FFCD  6C                 	db	108	;'l'
   872  00FFCE  20                 	db	32
   873  00FFCF  53                 	db	83	;'S'
   874  00FFD0  4D                 	db	77	;'M'
   875  00FFD1  53                 	db	83	;'S'
   876  00FFD2  20                 	db	32
   877  00FFD3  64                 	db	100	;'d'
   878  00FFD4  65                 	db	101	;'e'
   879  00FFD5  6C                 	db	108	;'l'
   880  00FFD6  65                 	db	101	;'e'
   881  00FFD7  74                 	db	116	;'t'
   882  00FFD8  65                 	db	101	;'e'
   883  00FFD9  64                 	db	100	;'d'
   884  00FFDA  20                 	db	32
   885  00FFDB  00                 	db	0
   886  00FFDC                     STR_4:
   887  00FFDC  46                 	db	70	;'F'
   888  00FFDD  6C                 	db	108	;'l'
   889  00FFDE  6F                 	db	111	;'o'
   890  00FFDF  77                 	db	119	;'w'
   891  00FFE0  52                 	db	82	;'R'
   892  00FFE1  61                 	db	97	;'a'
   893  00FFE2  74                 	db	116	;'t'
   894  00FFE3  65                 	db	101	;'e'
   895  00FFE4  3D                 	db	61	;'='
   896  00FFE5  20                 	db	32
   897  00FFE6  20                 	db	32
   898  00FFE7  20                 	db	32
   899  00FFE8  20                 	db	32
   900  00FFE9  4C                 	db	76	;'L'
   901  00FFEA  2F                 	db	47
   902  00FFEB  48                 	db	72	;'H'
   903  00FFEC  00                 	db	0
   904  00FFED                     STR_5:
   905  00FFED  20                 	db	32
   906  00FFEE  20                 	db	32
   907  00FFEF  20                 	db	32
   908  00FFF0  20                 	db	32
   909  00FFF1  20                 	db	32
   910  00FFF2  20                 	db	32
   911  00FFF3  20                 	db	32
   912  00FFF4  20                 	db	32
   913  00FFF5  20                 	db	32
   914  00FFF6  20                 	db	32
   915  00FFF7  20                 	db	32
   916  00FFF8  20                 	db	32
   917  00FFF9  20                 	db	32
   918  00FFFA  20                 	db	32
   919  00FFFB  20                 	db	32
   920  00FFFC  6C                 	db	108	;'l'
   921  00FFFD  00                 	db	0
   922                           
   923                           ; #config settings
   924  00FFFE  00                 	db	0	; dummy byte at the end
   925  0000                     
   926                           	psect	cinit
   927  010D32                     __pcinit:
   928                           	opt stack 0
   929  010D32                     start_initialization:
   930                           	opt stack 0
   931  010D32                     __initialization:
   932                           	opt stack 0
   933                           
   934                           ; Initialize objects allocated to BANK2 (24 bytes)
   935                           ; load TBLPTR registers with __pidataBANK2
   936  010D32  0E46               	movlw	low __pidataBANK2
   937  010D34  6EF6               	movwf	tblptrl,c
   938  010D36  0E19               	movlw	high __pidataBANK2
   939  010D38  6EF7               	movwf	tblptrh,c
   940  010D3A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
   941  010D3C  6EF8               	movwf	tblptru,c
   942  010D3E  EE02  F085         	lfsr	0,__pdataBANK2
   943  010D42  EE10 F018          	lfsr	1,24
   944  010D46                     copy_data0:
   945  010D46  0009               	tblrd		*+
   946  010D48  CFF5 FFEE          	movff	tablat,postinc0
   947  010D4C  50E5               	movf	postdec1,w,c
   948  010D4E  50E1               	movf	fsr1l,w,c
   949  010D50  E1FA               	bnz	copy_data0
   950                           
   951                           ; Initialize objects allocated to BANK1 (192 bytes)
   952                           ; load TBLPTR registers with __pidataBANK1
   953  010D52  0E72               	movlw	low __pidataBANK1
   954  010D54  6EF6               	movwf	tblptrl,c
   955  010D56  0E0C               	movlw	high __pidataBANK1
   956  010D58  6EF7               	movwf	tblptrh,c
   957  010D5A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   958  010D5C  6EF8               	movwf	tblptru,c
   959  010D5E  EE01  F000         	lfsr	0,__pdataBANK1
   960  010D62  EE10 F0C0          	lfsr	1,192
   961  010D66                     copy_data1:
   962  010D66  0009               	tblrd		*+
   963  010D68  CFF5 FFEE          	movff	tablat,postinc0
   964  010D6C  50E5               	movf	postdec1,w,c
   965  010D6E  50E1               	movf	fsr1l,w,c
   966  010D70  E1FA               	bnz	copy_data1
   967                           
   968                           ; Initialize objects allocated to BANK0 (11 bytes)
   969                           ; load TBLPTR registers with __pidataBANK0
   970  010D72  0E68               	movlw	low __pidataBANK0
   971  010D74  6EF6               	movwf	tblptrl,c
   972  010D76  0E1A               	movlw	high __pidataBANK0
   973  010D78  6EF7               	movwf	tblptrh,c
   974  010D7A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   975  010D7C  6EF8               	movwf	tblptru,c
   976  010D7E  EE00  F0E1         	lfsr	0,__pdataBANK0
   977  010D82  EE10 F00B          	lfsr	1,11
   978  010D86                     copy_data2:
   979  010D86  0009               	tblrd		*+
   980  010D88  CFF5 FFEE          	movff	tablat,postinc0
   981  010D8C  50E5               	movf	postdec1,w,c
   982  010D8E  50E1               	movf	fsr1l,w,c
   983  010D90  E1FA               	bnz	copy_data2
   984                           
   985                           ; Initialize objects allocated to COMRAM (2 bytes)
   986                           ; load TBLPTR registers with __pidataCOMRAM
   987  010D92  0E9C               	movlw	low __pidataCOMRAM
   988  010D94  6EF6               	movwf	tblptrl,c
   989  010D96  0E1A               	movlw	high __pidataCOMRAM
   990  010D98  6EF7               	movwf	tblptrh,c
   991  010D9A  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   992  010D9C  6EF8               	movwf	tblptru,c
   993  010D9E  0009               	tblrd		*+	;fetch initializer
   994  010DA0  CFF5 F049          	movff	tablat,__pdataCOMRAM
   995  010DA4  0009               	tblrd		*+	;fetch initializer
   996  010DA6  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   997                           
   998                           ; Clear objects allocated to BANK2 (100 bytes)
   999  010DAA  EE02  F000         	lfsr	0,__pbssBANK2
  1000  010DAE  0E64               	movlw	100
  1001  010DB0                     clear_0:
  1002  010DB0  6AEE               	clrf	postinc0,c
  1003  010DB2  06E8               	decf	wreg,f,c
  1004  010DB4  E1FD               	bnz	clear_0
  1005                           
  1006                           ; Clear objects allocated to BANK1 (57 bytes)
  1007  010DB6  EE01  F0C0         	lfsr	0,__pbssBANK1
  1008  010DBA  0E39               	movlw	57
  1009  010DBC                     clear_1:
  1010  010DBC  6AEE               	clrf	postinc0,c
  1011  010DBE  06E8               	decf	wreg,f,c
  1012  010DC0  E1FD               	bnz	clear_1
  1013                           
  1014                           ; Clear objects allocated to BANK0 (104 bytes)
  1015  010DC2  EE00  F060         	lfsr	0,__pbssBANK0
  1016  010DC6  0E68               	movlw	104
  1017  010DC8                     clear_2:
  1018  010DC8  6AEE               	clrf	postinc0,c
  1019  010DCA  06E8               	decf	wreg,f,c
  1020  010DCC  E1FD               	bnz	clear_2
  1021                           
  1022                           ; Clear objects allocated to COMRAM (36 bytes)
  1023  010DCE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1024  010DD2  0E24               	movlw	36
  1025  010DD4                     clear_3:
  1026  010DD4  6AEE               	clrf	postinc0,c
  1027  010DD6  06E8               	decf	wreg,f,c
  1028  010DD8  E1FD               	bnz	clear_3
  1029  010DDA                     end_of_initialization:
  1030                           	opt stack 0
  1031  010DDA                     __end_of__initialization:
  1032                           	opt stack 0
  1033  010DDA  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1034  010DDC  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1035  010DDE  0100               	movlb	0
  1036  010DE0  EF00  F080         	goto	_main	;jump to C main() function
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           postdec1	equ	0xFE5
  1044                           fsr1l	equ	0xFE1
  1045                           
  1046                           	psect	bssCOMRAM
  1047  000001                     __pbssCOMRAM:
  1048                           	opt stack 0
  1049  000001                     _second:
  1050                           	opt stack 0
  1051  000001                     	ds	1
  1052  000002                     _n:
  1053                           	opt stack 0
  1054  000002                     	ds	1
  1055  000003                     _WaitForReceive:
  1056                           	opt stack 0
  1057  000003                     	ds	1
  1058  000004                     _Nilp:
  1059                           	opt stack 0
  1060  000004                     	ds	1
  1061  000005                     _address:
  1062                           	opt stack 0
  1063  000005                     	ds	1
  1064  000006                     _VALUE:
  1065                           	opt stack 0
  1066  000006                     	ds	1
  1067  000007                     _value:
  1068                           	opt stack 0
  1069  000007                     	ds	1
  1070  000008                     _Trick:
  1071                           	opt stack 0
  1072  000008                     	ds	1
  1073  000009                     _Tick:
  1074                           	opt stack 0
  1075  000009                     	ds	1
  1076  00000A                     _TX_ID:
  1077                           	opt stack 0
  1078  00000A                     	ds	1
  1079  00000B                     _T_ID_Send:
  1080                           	opt stack 0
  1081  00000B                     	ds	1
  1082  00000C                     _ID_SET:
  1083                           	opt stack 0
  1084  00000C                     	ds	1
  1085  00000D                     _F_SetID:
  1086                           	opt stack 0
  1087  00000D                     	ds	1
  1088  00000E                     _T:
  1089                           	opt stack 0
  1090  00000E                     	ds	1
  1091  00000F                     _Count_LED:
  1092                           	opt stack 0
  1093  00000F                     	ds	1
  1094  000010                     _F_ERROR:
  1095                           	opt stack 0
  1096  000010                     	ds	1
  1097  000011                     _ERROR:
  1098                           	opt stack 0
  1099  000011                     	ds	1
  1100  000012                     _slave_add:
  1101                           	opt stack 0
  1102  000012                     	ds	1
  1103  000013                     _Store:
  1104                           	opt stack 0
  1105  000013                     	ds	1
  1106  000014                     _d:
  1107                           	opt stack 0
  1108  000014                     	ds	1
  1109  000015                     _i:
  1110                           	opt stack 0
  1111  000015                     	ds	1
  1112  000016                     _F_IdSet:
  1113                           	opt stack 0
  1114  000016                     	ds	1
  1115  000017                     _InputRead:
  1116                           	opt stack 0
  1117  000017                     	ds	1
  1118  000018                     _Portread:
  1119                           	opt stack 0
  1120  000018                     	ds	1
  1121  000019                     _F_Input:
  1122                           	opt stack 0
  1123  000019                     	ds	1
  1124  00001A                     _T_Input:
  1125                           	opt stack 0
  1126  00001A                     	ds	1
  1127  00001B                     _Device_ID:
  1128                           	opt stack 0
  1129  00001B                     	ds	1
  1130  00001C                     _lost_data:
  1131                           	opt stack 0
  1132  00001C                     	ds	1
  1133  00001D                     _RSSI2:
  1134                           	opt stack 0
  1135  00001D                     	ds	1
  1136  00001E                     _LQI:
  1137                           	opt stack 0
  1138  00001E                     	ds	1
  1139  00001F                     _data_r:
  1140                           	opt stack 0
  1141  00001F                     	ds	1
  1142  000020                     _DATA:
  1143                           	opt stack 0
  1144  000020                     	ds	1
  1145  000021                     _LENGTH:
  1146                           	opt stack 0
  1147  000021                     	ds	1
  1148  000022                     _Count2:
  1149                           	opt stack 0
  1150  000022                     	ds	1
  1151  000023                     _Count1:
  1152                           	opt stack 0
  1153  000023                     	ds	1
  1154  000024                     _INTTRUPT:
  1155                           	opt stack 0
  1156  000024                     	ds	1
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166                           	psect	dataCOMRAM
  1167  000049                     __pdataCOMRAM:
  1168                           	opt stack 0
  1169  000049                     _send:
  1170                           	opt stack 0
  1171  000049                     	ds	2
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1l	equ	0xFE1
  1180                           
  1181                           	psect	bssBANK0
  1182  000060                     __pbssBANK0:
  1183                           	opt stack 0
  1184  000060                     _data_TX_normal_FIFO:
  1185                           	opt stack 0
  1186  000060                     	ds	18
  1187  000072                     _Litre:
  1188                           	opt stack 0
  1189  000072                     	ds	4
  1190  000076                     _pulse:
  1191                           	opt stack 0
  1192  000076                     	ds	4
  1193  00007A                     _flowrate:
  1194                           	opt stack 0
  1195  00007A                     	ds	4
  1196  00007E                     _frequency:
  1197                           	opt stack 0
  1198  00007E                     	ds	4
  1199  000082                     _IdByte4:
  1200                           	opt stack 0
  1201  000082                     	ds	4
  1202  000086                     _Store_DATA:
  1203                           	opt stack 0
  1204  000086                     	ds	4
  1205  00008A                     _TMR0_InterruptHandler:
  1206                           	opt stack 0
  1207  00008A                     	ds	3
  1208  00008D                     _INT0_InterruptHandler:
  1209                           	opt stack 0
  1210  00008D                     	ds	3
  1211  000090                     _INT1_InterruptHandler:
  1212                           	opt stack 0
  1213  000090                     	ds	3
  1214  000093                     _Send_ID:
  1215                           	opt stack 0
  1216  000093                     	ds	2
  1217  000095                     _ckeck:
  1218                           	opt stack 0
  1219  000095                     	ds	2
  1220  000097                     _T_ERROR:
  1221                           	opt stack 0
  1222  000097                     	ds	2
  1223  000099                     _CRC:
  1224                           	opt stack 0
  1225  000099                     	ds	2
  1226  00009B                     _TX_CRC:
  1227                           	opt stack 0
  1228  00009B                     	ds	2
  1229  00009D                     _Rv_CRC:
  1230                           	opt stack 0
  1231  00009D                     	ds	2
  1232  00009F                     _address_TX_normal_FIFO:
  1233                           	opt stack 0
  1234  00009F                     	ds	2
  1235  0000A1                     TMR0_ISR@CountCallBack:
  1236                           	opt stack 0
  1237  0000A1                     	ds	2
  1238  0000A3                     _Addr:
  1239                           	opt stack 0
  1240  0000A3                     	ds	1
  1241  0000A4                     _V_Temp1:
  1242                           	opt stack 0
  1243  0000A4                     	ds	1
  1244  0000A5                     _IdByte3:
  1245                           	opt stack 0
  1246  0000A5                     	ds	1
  1247  0000A6                     _IdByte2:
  1248                           	opt stack 0
  1249  0000A6                     	ds	1
  1250  0000A7                     _IdByte1:
  1251                           	opt stack 0
  1252  0000A7                     	ds	1
  1253  0000A8                     _t:
  1254                           	opt stack 0
  1255  0000A8                     	ds	1
  1256  0000A9                     _g:
  1257                           	opt stack 0
  1258  0000A9                     	ds	1
  1259  0000AA                     _Frame:
  1260                           	opt stack 0
  1261  0000AA                     	ds	1
  1262  0000AB                     _ds:
  1263                           	opt stack 0
  1264  0000AB                     	ds	1
  1265  0000AC                     _V_Temp:
  1266                           	opt stack 0
  1267  0000AC                     	ds	1
  1268  0000AD                     _IDByte3:
  1269                           	opt stack 0
  1270  0000AD                     	ds	1
  1271  0000AE                     _IDByte2:
  1272                           	opt stack 0
  1273  0000AE                     	ds	1
  1274  0000AF                     _IDByte1:
  1275                           	opt stack 0
  1276  0000AF                     	ds	1
  1277  0000B0                     _Chksum:
  1278                           	opt stack 0
  1279  0000B0                     	ds	1
  1280  0000B1                     _F_WaitForReceive:
  1281                           	opt stack 0
  1282  0000B1                     	ds	1
  1283  0000B2                     _RXcounter:
  1284                           	opt stack 0
  1285  0000B2                     	ds	1
  1286  0000B3                     _Sent_sms:
  1287                           	opt stack 0
  1288  0000B3                     	ds	1
  1289  0000B4                     _id:
  1290                           	opt stack 0
  1291  0000B4                     	ds	1
  1292  0000B5                     _RECEIVE_OK:
  1293                           	opt stack 0
  1294  0000B5                     	ds	1
  1295  0000B6                     _Send_Frame_2:
  1296                           	opt stack 0
  1297  0000B6                     	ds	1
  1298  0000B7                     _Send_Frame:
  1299                           	opt stack 0
  1300  0000B7                     	ds	1
  1301  0000B8                     _F_ID_SEND:
  1302                           	opt stack 0
  1303  0000B8                     	ds	1
  1304  0000B9                     _T_BUZZER:
  1305                           	opt stack 0
  1306  0000B9                     	ds	1
  1307  0000BA                     _F_BUZZER:
  1308                           	opt stack 0
  1309  0000BA                     	ds	1
  1310  0000BB                     _F_ID_Send:
  1311                           	opt stack 0
  1312  0000BB                     	ds	1
  1313  0000BC                     _ID_READ:
  1314                           	opt stack 0
  1315  0000BC                     	ds	1
  1316  0000BD                     _ii:
  1317                           	opt stack 0
  1318  0000BD                     	ds	1
  1319  0000BE                     _CHECK:
  1320                           	opt stack 0
  1321  0000BE                     	ds	1
  1322  0000BF                     _timer0ReloadVal:
  1323                           	opt stack 0
  1324  0000BF                     	ds	1
  1325  0000C0                     _DATA_RX:
  1326                           	opt stack 0
  1327  0000C0                     	ds	5
  1328  0000C5                     _DATA_TX:
  1329                           	opt stack 0
  1330  0000C5                     	ds	3
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           postdec1	equ	0xFE5
  1338                           fsr1l	equ	0xFE1
  1339                           
  1340                           	psect	dataBANK0
  1341  0000E1                     __pdataBANK0:
  1342                           	opt stack 0
  1343  0000E1                     _PAN_ID_1:
  1344                           	opt stack 0
  1345  0000E1                     	ds	2
  1346  0000E3                     _ADDRESS_short_1:
  1347                           	opt stack 0
  1348  0000E3                     	ds	2
  1349  0000E5                     _address_RX_FIFO:
  1350                           	opt stack 0
  1351  0000E5                     	ds	2
  1352  0000E7                     _SEQ_NUMBER:
  1353                           	opt stack 0
  1354  0000E7                     	ds	1
  1355  0000E8                     _PAN_ID_2:
  1356                           	opt stack 0
  1357  0000E8                     	ds	2
  1358  0000EA                     _ADDRESS_short_2:
  1359                           	opt stack 0
  1360  0000EA                     	ds	2
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1l	equ	0xFE1
  1369                           
  1370                           	psect	bssBANK1
  1371  0001C0                     __pbssBANK1:
  1372                           	opt stack 0
  1373  0001C0                     _data_RX_FIFO:
  1374                           	opt stack 0
  1375  0001C0                     	ds	21
  1376  0001D5                     _SMS:
  1377                           	opt stack 0
  1378  0001D5                     	ds	15
  1379  0001E4                     _SMSsender:
  1380                           	opt stack 0
  1381  0001E4                     	ds	13
  1382  0001F1                     _divisor:
  1383                           	opt stack 0
  1384  0001F1                     	ds	4
  1385  0001F5                     _freq_low:
  1386                           	opt stack 0
  1387  0001F5                     	ds	4
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           
  1397                           	psect	dataBANK1
  1398  000100                     __pdataBANK1:
  1399                           	opt stack 0
  1400  000100                     _ADDRESS_long_1:
  1401                           	opt stack 0
  1402  000100                     	ds	8
  1403  000108                     _LED_PATTERN:
  1404                           	opt stack 0
  1405  000108                     	ds	7
  1406  00010F                     _msg:
  1407                           	opt stack 0
  1408  00010F                     	ds	6
  1409  000115                     _Call_Cut:
  1410                           	opt stack 0
  1411  000115                     	ds	4
  1412  000119                     _Emeregency3:
  1413                           	opt stack 0
  1414  000119                     	ds	23
  1415  000130                     _Message4:
  1416                           	opt stack 0
  1417  000130                     	ds	22
  1418  000146                     _Emeregency2:
  1419                           	opt stack 0
  1420  000146                     	ds	22
  1421  00015C                     _Emeregency:
  1422                           	opt stack 0
  1423  00015C                     	ds	21
  1424  000171                     _SEND_SMS:
  1425                           	opt stack 0
  1426  000171                     	ds	21
  1427  000186                     _Array:
  1428                           	opt stack 0
  1429  000186                     	ds	19
  1430  000199                     _Number:
  1431                           	opt stack 0
  1432  000199                     	ds	15
  1433  0001A8                     _SMS_format:
  1434                           	opt stack 0
  1435  0001A8                     	ds	10
  1436  0001B2                     _ADDRESS_long_2:
  1437                           	opt stack 0
  1438  0001B2                     	ds	8
  1439  0001BA                     _Call:
  1440                           	opt stack 0
  1441  0001BA                     	ds	6
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1l	equ	0xFE1
  1450                           
  1451                           	psect	bssBANK2
  1452  000200                     __pbssBANK2:
  1453                           	opt stack 0
  1454  000200                     _RxBuffer:
  1455                           	opt stack 0
  1456  000200                     	ds	100
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1l	equ	0xFE1
  1465                           
  1466                           	psect	dataBANK2
  1467  000285                     __pdataBANK2:
  1468                           	opt stack 0
  1469  000285                     _Message5:
  1470                           	opt stack 0
  1471  000285                     	ds	24
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           postinc0	equ	0xFEE
  1477                           wreg	equ	0xFE8
  1478                           postdec1	equ	0xFE5
  1479                           fsr1l	equ	0xFE1
  1480                           
  1481                           	psect	cstackBANK2
  1482  000264                     __pcstackBANK2:
  1483                           	opt stack 0
  1484  000264                     ??_INTERRUPT_InterruptManagerLow:
  1485                           
  1486                           ; 1 bytes @ 0x0
  1487  000264                     	ds	21
  1488  000279                     ?___lldiv:
  1489                           	opt stack 0
  1490  000279                     ?___llmod:
  1491                           	opt stack 0
  1492  000279                     write_ZIGBEE_long@address_high:
  1493                           	opt stack 0
  1494  000279                     ___awdiv@counter:
  1495                           	opt stack 0
  1496  000279                     LcdDisplay@string:
  1497                           	opt stack 0
  1498  000279                     Xor_check@xor_value:
  1499                           	opt stack 0
  1500  000279                     ___lldiv@dividend:
  1501                           	opt stack 0
  1502  000279                     ___llmod@dividend:
  1503                           	opt stack 0
  1504                           
  1505                           ; 4 bytes @ 0x15
  1506  000279                     	ds	1
  1507  00027A                     write_ZIGBEE_long@address_low:
  1508                           	opt stack 0
  1509  00027A                     ___awdiv@sign:
  1510                           	opt stack 0
  1511                           
  1512                           ; 1 bytes @ 0x16
  1513  00027A                     	ds	1
  1514  00027B                     ??_set_TX_power:
  1515  00027B                     LcdDisplay@LINE:
  1516                           	opt stack 0
  1517  00027B                     set_channel@channel_number:
  1518                           	opt stack 0
  1519  00027B                     Xor_check@xor:
  1520                           	opt stack 0
  1521  00027B                     ___awdiv@quotient:
  1522                           	opt stack 0
  1523                           
  1524                           ; 2 bytes @ 0x17
  1525  00027B                     	ds	1
  1526  00027C                     set_TX_power@power:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x18
  1530  00027C                     	ds	1
  1531  00027D                     ??_write_TX_normal_FIFO:
  1532  00027D                     ___lldiv@divisor:
  1533                           	opt stack 0
  1534  00027D                     ___llmod@divisor:
  1535                           	opt stack 0
  1536                           
  1537                           ; 4 bytes @ 0x19
  1538  00027D                     	ds	5
  1539  000282                     write_TX_normal_FIFO@n:
  1540                           	opt stack 0
  1541                           
  1542                           ; 1 bytes @ 0x1E
  1543  000282                     	ds	1
  1544  000283                     write_TX_normal_FIFO@i:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x1F
  1548  000283                     	ds	1
  1549  000284                     ??_main:
  1550                           
  1551                           ; 1 bytes @ 0x20
  1552  000284                     	ds	1
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           postdec1	equ	0xFE5
  1560                           fsr1l	equ	0xFE1
  1561                           
  1562                           	psect	cstackBANK1
  1563  0001F9                     __pcstackBANK1:
  1564                           	opt stack 0
  1565  0001F9                     ?_Xor_check:
  1566                           	opt stack 0
  1567  0001F9                     ?___awdiv:
  1568                           	opt stack 0
  1569  0001F9                     ?___awmod:
  1570                           	opt stack 0
  1571  0001F9                     SPI_Write@response:
  1572                           	opt stack 0
  1573  0001F9                     SPI_Read@TempVar:
  1574                           	opt stack 0
  1575  0001F9                     ___llmod@counter:
  1576                           	opt stack 0
  1577  0001F9                     delay@dly:
  1578                           	opt stack 0
  1579  0001F9                     Delay_ms@time:
  1580                           	opt stack 0
  1581  0001F9                     Delayms@time:
  1582                           	opt stack 0
  1583  0001F9                     Xor_check@data_value:
  1584                           	opt stack 0
  1585  0001F9                     Read_b_eep@badd:
  1586                           	opt stack 0
  1587  0001F9                     ___awdiv@dividend:
  1588                           	opt stack 0
  1589  0001F9                     ___awmod@dividend:
  1590                           	opt stack 0
  1591  0001F9                     INT1_SetInterruptHandler@InterruptHandler:
  1592                           	opt stack 0
  1593  0001F9                     INT0_SetInterruptHandler@InterruptHandler:
  1594                           	opt stack 0
  1595  0001F9                     TMR0_SetInterruptHandler@InterruptHandler:
  1596                           	opt stack 0
  1597  0001F9                     ___lldiv@quotient:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0x0
  1601  0001F9                     	ds	1
  1602  0001FA                     SPI_Write@command:
  1603                           	opt stack 0
  1604                           
  1605                           ; 1 bytes @ 0x1
  1606  0001FA                     	ds	1
  1607  0001FB                     write_ZIGBEE_short@data_r:
  1608                           	opt stack 0
  1609  0001FB                     read_ZIGBEE_short@data_r:
  1610                           	opt stack 0
  1611  0001FB                     Xor_check@length:
  1612                           	opt stack 0
  1613  0001FB                     write_ZIGBEE_long@address:
  1614                           	opt stack 0
  1615  0001FB                     delay@l:
  1616                           	opt stack 0
  1617  0001FB                     Delay_ms@y:
  1618                           	opt stack 0
  1619  0001FB                     Delayms@k:
  1620                           	opt stack 0
  1621  0001FB                     ___awdiv@divisor:
  1622                           	opt stack 0
  1623  0001FB                     ___awmod@divisor:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x2
  1627  0001FB                     	ds	1
  1628  0001FC                     ??_Xor_check:
  1629  0001FC                     write_ZIGBEE_short@address:
  1630                           	opt stack 0
  1631  0001FC                     read_ZIGBEE_short@address:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x3
  1635  0001FC                     	ds	1
  1636  0001FD                     set_CCA_mode@CCA_mode:
  1637                           	opt stack 0
  1638  0001FD                     set_RSSI_mode@RSSI_mode:
  1639                           	opt stack 0
  1640  0001FD                     nonbeacon_PAN_coordinator_device@temp:
  1641                           	opt stack 0
  1642  0001FD                     set_frame_format_filter@fff_mode:
  1643                           	opt stack 0
  1644  0001FD                     set_reception_mode@r_mode:
  1645                           	opt stack 0
  1646  0001FD                     set_not_ACK@temp:
  1647                           	opt stack 0
  1648  0001FD                     set_not_encrypt@temp:
  1649                           	opt stack 0
  1650  0001FD                     write_ZIGBEE_long@data_r:
  1651                           	opt stack 0
  1652  0001FD                     ___awmod@counter:
  1653                           	opt stack 0
  1654  0001FD                     ___lldiv@counter:
  1655                           	opt stack 0
  1656  0001FD                     set_long_address@address:
  1657                           	opt stack 0
  1658  0001FD                     set_short_address@address:
  1659                           	opt stack 0
  1660  0001FD                     set_PAN_ID@address:
  1661                           	opt stack 0
  1662  0001FD                     Delayms@l:
  1663                           	opt stack 0
  1664                           
  1665                           ; 2 bytes @ 0x4
  1666  0001FD                     	ds	1
  1667  0001FE                     ??_write_ZIGBEE_long:
  1668  0001FE                     set_CCA_mode@temp:
  1669                           	opt stack 0
  1670  0001FE                     set_RSSI_mode@temp:
  1671                           	opt stack 0
  1672  0001FE                     set_frame_format_filter@temp:
  1673                           	opt stack 0
  1674  0001FE                     set_reception_mode@temp:
  1675                           	opt stack 0
  1676  0001FE                     ___awmod@sign:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x5
  1680  0001FE                     	ds	1
  1681  0001FF                     LcdData@value:
  1682                           	opt stack 0
  1683  0001FF                     LcdCmd@value:
  1684                           	opt stack 0
  1685  0001FF                     set_long_address@i:
  1686                           	opt stack 0
  1687                           
  1688                           ; 1 bytes @ 0x6
  1689  0001FF                     	ds	1
  1690  000200                     tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           
  1699                           ; 1 bytes @ 0x7
  1700                           
  1701                           	psect	cstackBANK0
  1702  0000C8                     __pcstackBANK0:
  1703                           	opt stack 0
  1704  0000C8                     ?___lmul:
  1705                           	opt stack 0
  1706  0000C8                     Write_b_eep@badd:
  1707                           	opt stack 0
  1708  0000C8                     ___lmul@multiplier:
  1709                           	opt stack 0
  1710                           
  1711                           ; 4 bytes @ 0x0
  1712  0000C8                     	ds	2
  1713  0000CA                     Write_b_eep@data:
  1714                           	opt stack 0
  1715                           
  1716                           ; 1 bytes @ 0x2
  1717  0000CA                     	ds	1
  1718  0000CB                     Write_b_eep@GIE_BIT_VAL:
  1719                           	opt stack 0
  1720                           
  1721                           ; 1 bytes @ 0x3
  1722  0000CB                     	ds	1
  1723  0000CC                     ___lmul@multiplicand:
  1724                           	opt stack 0
  1725                           
  1726                           ; 4 bytes @ 0x4
  1727  0000CC                     	ds	4
  1728  0000D0                     ___lmul@product:
  1729                           	opt stack 0
  1730                           
  1731                           ; 4 bytes @ 0x8
  1732  0000D0                     	ds	4
  1733  0000D4                     ?i1___lldiv:
  1734                           	opt stack 0
  1735  0000D4                     i1___lldiv@dividend:
  1736                           	opt stack 0
  1737                           
  1738                           ; 4 bytes @ 0xC
  1739  0000D4                     	ds	4
  1740  0000D8                     i1___lldiv@divisor:
  1741                           	opt stack 0
  1742                           
  1743                           ; 4 bytes @ 0x10
  1744  0000D8                     	ds	4
  1745  0000DC                     i1___lldiv@quotient:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0x14
  1749  0000DC                     	ds	4
  1750  0000E0                     i1___lldiv@counter:
  1751                           	opt stack 0
  1752                           
  1753                           ; 1 bytes @ 0x18
  1754  0000E0                     	ds	1
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           postdec1	equ	0xFE5
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	cstackCOMRAM
  1765  000025                     __pcstackCOMRAM:
  1766                           	opt stack 0
  1767  000025                     ?i2_Xor_check:
  1768                           	opt stack 0
  1769  000025                     i2SPI_Write@response:
  1770                           	opt stack 0
  1771  000025                     i2SPI_Read@TempVar:
  1772                           	opt stack 0
  1773  000025                     i2Xor_check@data_value:
  1774                           	opt stack 0
  1775                           
  1776                           ; 2 bytes @ 0x0
  1777  000025                     	ds	1
  1778  000026                     i2SPI_Write@command:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x1
  1782  000026                     	ds	1
  1783  000027                     i2write_ZIGBEE_short@data_r:
  1784                           	opt stack 0
  1785  000027                     i2read_ZIGBEE_short@address:
  1786                           	opt stack 0
  1787  000027                     i2Xor_check@length:
  1788                           	opt stack 0
  1789  000027                     read_ZIGBEE_long@address:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x2
  1793  000027                     	ds	1
  1794  000028                     ??i2_Xor_check:
  1795  000028                     i2write_ZIGBEE_short@address:
  1796                           	opt stack 0
  1797  000028                     i2read_ZIGBEE_short@data_r:
  1798                           	opt stack 0
  1799                           
  1800                           ; 1 bytes @ 0x3
  1801  000028                     	ds	1
  1802  000029                     ??_read_ZIGBEE_long:
  1803  000029                     i2Xor_check@xor_value:
  1804                           	opt stack 0
  1805                           
  1806                           ; 2 bytes @ 0x4
  1807  000029                     	ds	2
  1808  00002B                     read_ZIGBEE_long@data_r:
  1809                           	opt stack 0
  1810  00002B                     i2Xor_check@xor:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x6
  1814  00002B                     	ds	1
  1815  00002C                     read_ZIGBEE_long@address_high:
  1816                           	opt stack 0
  1817                           
  1818                           ; 1 bytes @ 0x7
  1819  00002C                     	ds	1
  1820  00002D                     read_ZIGBEE_long@address_low:
  1821                           	opt stack 0
  1822                           
  1823                           ; 1 bytes @ 0x8
  1824  00002D                     	ds	1
  1825  00002E                     ??_read_RX_FIFO:
  1826                           
  1827                           ; 1 bytes @ 0x9
  1828  00002E                     	ds	5
  1829  000033                     read_RX_FIFO@temp:
  1830                           	opt stack 0
  1831                           
  1832                           ; 1 bytes @ 0xE
  1833  000033                     	ds	1
  1834  000034                     read_RX_FIFO@i:
  1835                           	opt stack 0
  1836                           
  1837                           ; 1 bytes @ 0xF
  1838  000034                     	ds	1
  1839  000035                     ??_INTERRUPT_InterruptManagerHigh:
  1840                           
  1841                           ; 1 bytes @ 0x10
  1842  000035                     	ds	20
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1l	equ	0xFE1
  1851                           
  1852 ;;
  1853 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1854 ;;
  1855 ;; *************** function _main *****************
  1856 ;; Defined at:
  1857 ;;		line 236 in file "2_April_WaterMeterMain.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;Total ram usage:        1 bytes
  1876 ;; Hardware stack levels required when called:   13
  1877 ;; This function calls:
  1878 ;;		_Delay_ms
  1879 ;;		_Delayms
  1880 ;;		_InitSPI
  1881 ;;		_LcdCmd
  1882 ;;		_LcdData
  1883 ;;		_LcdDisplay
  1884 ;;		_LcdInit
  1885 ;;		_RF_reset
  1886 ;;		_Read_b_eep
  1887 ;;		_SYSTEM_Initialize
  1888 ;;		___awdiv
  1889 ;;		___awmod
  1890 ;;		___lldiv
  1891 ;;		___llmod
  1892 ;;		_init_ZIGBEE_nonbeacon
  1893 ;;		_lcd_clear
  1894 ;;		_lcd_off_cursor
  1895 ;;		_nonbeacon_PAN_coordinator_device
  1896 ;;		_pin_reset
  1897 ;;		_pin_wake
  1898 ;;		_set_PAN_ID
  1899 ;;		_set_TX_power
  1900 ;;		_set_WAKE_from_pin
  1901 ;;		_set_frame_format_filter
  1902 ;;		_set_long_address
  1903 ;;		_set_reception_mode
  1904 ;;		_set_short_address
  1905 ;;		_write_TX_normal_FIFO
  1906 ;; This function is called by:
  1907 ;;		Startup code after reset
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text0
  1912  010000                     __ptext0:
  1913                           	opt stack 0
  1914  010000                     _main:
  1915                           	opt stack 18
  1916                           
  1917                           ;2_April_WaterMeterMain.c: 237: Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_ms(500);
      +                          Delay_ms(500);
  1918                           
  1919                           ;incstack = 0
  1920  010000  0E01               	movlw	1
  1921  010002  0101               	movlb	1	; () banked
  1922  010004  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1923  010006  0EF4               	movlw	244
  1924  010008  6FF9               	movwf	Delay_ms@time& (0+255),b
  1925  01000A  EC95  F08C         	call	_Delay_ms	;wreg free
  1926  01000E  0E01               	movlw	1
  1927  010010  0101               	movlb	1	; () banked
  1928  010012  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1929  010014  0EF4               	movlw	244
  1930  010016  6FF9               	movwf	Delay_ms@time& (0+255),b
  1931  010018  EC95  F08C         	call	_Delay_ms	;wreg free
  1932  01001C  0E01               	movlw	1
  1933  01001E  0101               	movlb	1	; () banked
  1934  010020  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1935  010022  0EF4               	movlw	244
  1936  010024  6FF9               	movwf	Delay_ms@time& (0+255),b
  1937  010026  EC95  F08C         	call	_Delay_ms	;wreg free
  1938  01002A  0E01               	movlw	1
  1939  01002C  0101               	movlb	1	; () banked
  1940  01002E  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1941  010030  0EF4               	movlw	244
  1942  010032  6FF9               	movwf	Delay_ms@time& (0+255),b
  1943  010034  EC95  F08C         	call	_Delay_ms	;wreg free
  1944  010038  0E01               	movlw	1
  1945  01003A  0101               	movlb	1	; () banked
  1946  01003C  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1947  01003E  0EF4               	movlw	244
  1948  010040  6FF9               	movwf	Delay_ms@time& (0+255),b
  1949  010042  EC95  F08C         	call	_Delay_ms	;wreg free
  1950                           
  1951                           ;2_April_WaterMeterMain.c: 239: SYSTEM_Initialize();
  1952  010046  ECC5  F08C         	call	_SYSTEM_Initialize	;wreg free
  1953                           
  1954                           ;2_April_WaterMeterMain.c: 240: (INTCONbits.GIEH = 1);
  1955  01004A  8EF2               	bsf	intcon,7,c	;volatile
  1956                           
  1957                           ;2_April_WaterMeterMain.c: 241: (INTCONbits.GIEL = 1);
  1958  01004C  8CF2               	bsf	intcon,6,c	;volatile
  1959                           
  1960                           ;2_April_WaterMeterMain.c: 242: (INTCONbits.PEIE = 1);
  1961  01004E  8CF2               	bsf	intcon,6,c	;volatile
  1962                           
  1963                           ;2_April_WaterMeterMain.c: 243: Delay_ms(100);
  1964  010050  0E00               	movlw	0
  1965  010052  0101               	movlb	1	; () banked
  1966  010054  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1967  010056  0E64               	movlw	100
  1968  010058  6FF9               	movwf	Delay_ms@time& (0+255),b
  1969  01005A  EC95  F08C         	call	_Delay_ms	;wreg free
  1970                           
  1971                           ;2_April_WaterMeterMain.c: 244: LcdInit();
  1972  01005E  EC6C  F089         	call	_LcdInit	;wreg free
  1973                           
  1974                           ;2_April_WaterMeterMain.c: 245: Delay_ms(10);
  1975  010062  0E00               	movlw	0
  1976  010064  0101               	movlb	1	; () banked
  1977  010066  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  1978  010068  0E0A               	movlw	10
  1979  01006A  6FF9               	movwf	Delay_ms@time& (0+255),b
  1980  01006C  EC95  F08C         	call	_Delay_ms	;wreg free
  1981                           
  1982                           ;2_April_WaterMeterMain.c: 246: lcd_off_cursor();
  1983  010070  EC3A  F08D         	call	_lcd_off_cursor	;wreg free
  1984                           
  1985                           ;2_April_WaterMeterMain.c: 247: lcd_clear();
  1986  010074  EC3E  F08D         	call	_lcd_clear	;wreg free
  1987                           
  1988                           ;2_April_WaterMeterMain.c: 248: LcdDisplay(0x80,"    philbrick     ");
  1989  010078  0E81               	movlw	low STR_1
  1990  01007A  0102               	movlb	2	; () banked
  1991  01007C  6F79               	movwf	LcdDisplay@string& (0+255),b
  1992  01007E  0EFF               	movlw	high STR_1
  1993  010080  6F7A               	movwf	(LcdDisplay@string+1)& (0+255),b
  1994  010082  0E80               	movlw	128
  1995  010084  EC6C  F08A         	call	_LcdDisplay
  1996                           
  1997                           ;2_April_WaterMeterMain.c: 249: LcdDisplay(0xC0,"  Technologies    ");
  1998  010088  0E94               	movlw	low STR_2
  1999  01008A  0102               	movlb	2	; () banked
  2000  01008C  6F79               	movwf	LcdDisplay@string& (0+255),b
  2001  01008E  0EFF               	movlw	high STR_2
  2002  010090  6F7A               	movwf	(LcdDisplay@string+1)& (0+255),b
  2003  010092  0EC0               	movlw	192
  2004  010094  EC6C  F08A         	call	_LcdDisplay
  2005                           
  2006                           ;2_April_WaterMeterMain.c: 250: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  2007  010098  0E01               	movlw	1
  2008  01009A  0101               	movlb	1	; () banked
  2009  01009C  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2010  01009E  0E2C               	movlw	44
  2011  0100A0  6FF9               	movwf	Delayms@time& (0+255),b
  2012  0100A2  EC8C  F08A         	call	_Delayms	;wreg free
  2013  0100A6  0E01               	movlw	1
  2014  0100A8  0101               	movlb	1	; () banked
  2015  0100AA  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2016  0100AC  0E2C               	movlw	44
  2017  0100AE  6FF9               	movwf	Delayms@time& (0+255),b
  2018  0100B0  EC8C  F08A         	call	_Delayms	;wreg free
  2019  0100B4  0E01               	movlw	1
  2020  0100B6  0101               	movlb	1	; () banked
  2021  0100B8  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2022  0100BA  0E2C               	movlw	44
  2023  0100BC  6FF9               	movwf	Delayms@time& (0+255),b
  2024  0100BE  EC8C  F08A         	call	_Delayms	;wreg free
  2025  0100C2  0E01               	movlw	1
  2026  0100C4  0101               	movlb	1	; () banked
  2027  0100C6  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2028  0100C8  0E2C               	movlw	44
  2029  0100CA  6FF9               	movwf	Delayms@time& (0+255),b
  2030  0100CC  EC8C  F08A         	call	_Delayms	;wreg free
  2031                           
  2032                           ;2_April_WaterMeterMain.c: 251: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  2033  0100D0  0E01               	movlw	1
  2034  0100D2  0101               	movlb	1	; () banked
  2035  0100D4  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2036  0100D6  0E2C               	movlw	44
  2037  0100D8  6FF9               	movwf	Delayms@time& (0+255),b
  2038  0100DA  EC8C  F08A         	call	_Delayms	;wreg free
  2039  0100DE  0E01               	movlw	1
  2040  0100E0  0101               	movlb	1	; () banked
  2041  0100E2  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2042  0100E4  0E2C               	movlw	44
  2043  0100E6  6FF9               	movwf	Delayms@time& (0+255),b
  2044  0100E8  EC8C  F08A         	call	_Delayms	;wreg free
  2045  0100EC  0E01               	movlw	1
  2046  0100EE  0101               	movlb	1	; () banked
  2047  0100F0  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2048  0100F2  0E2C               	movlw	44
  2049  0100F4  6FF9               	movwf	Delayms@time& (0+255),b
  2050  0100F6  EC8C  F08A         	call	_Delayms	;wreg free
  2051  0100FA  0E01               	movlw	1
  2052  0100FC  0101               	movlb	1	; () banked
  2053  0100FE  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2054  010100  0E2C               	movlw	44
  2055  010102  6FF9               	movwf	Delayms@time& (0+255),b
  2056  010104  EC8C  F08A         	call	_Delayms	;wreg free
  2057                           
  2058                           ;2_April_WaterMeterMain.c: 252: lcd_clear();
  2059  010108  EC3E  F08D         	call	_lcd_clear	;wreg free
  2060                           
  2061                           ;2_April_WaterMeterMain.c: 253: LcdDisplay(0x80," Water Flow Meter ");
  2062  01010C  0EA7               	movlw	low STR_3
  2063  01010E  0102               	movlb	2	; () banked
  2064  010110  6F79               	movwf	LcdDisplay@string& (0+255),b
  2065  010112  0EFF               	movlw	high STR_3
  2066  010114  6F7A               	movwf	(LcdDisplay@string+1)& (0+255),b
  2067  010116  0E80               	movlw	128
  2068  010118  EC6C  F08A         	call	_LcdDisplay
  2069                           
  2070                           ;2_April_WaterMeterMain.c: 254: Delayms(300);Delayms(300);Delayms(300);Delayms(300);
  2071  01011C  0E01               	movlw	1
  2072  01011E  0101               	movlb	1	; () banked
  2073  010120  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2074  010122  0E2C               	movlw	44
  2075  010124  6FF9               	movwf	Delayms@time& (0+255),b
  2076  010126  EC8C  F08A         	call	_Delayms	;wreg free
  2077  01012A  0E01               	movlw	1
  2078  01012C  0101               	movlb	1	; () banked
  2079  01012E  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2080  010130  0E2C               	movlw	44
  2081  010132  6FF9               	movwf	Delayms@time& (0+255),b
  2082  010134  EC8C  F08A         	call	_Delayms	;wreg free
  2083  010138  0E01               	movlw	1
  2084  01013A  0101               	movlb	1	; () banked
  2085  01013C  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2086  01013E  0E2C               	movlw	44
  2087  010140  6FF9               	movwf	Delayms@time& (0+255),b
  2088  010142  EC8C  F08A         	call	_Delayms	;wreg free
  2089  010146  0E01               	movlw	1
  2090  010148  0101               	movlb	1	; () banked
  2091  01014A  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  2092  01014C  0E2C               	movlw	44
  2093  01014E  6FF9               	movwf	Delayms@time& (0+255),b
  2094  010150  EC8C  F08A         	call	_Delayms	;wreg free
  2095                           
  2096                           ;2_April_WaterMeterMain.c: 255: Delay_ms(10);
  2097  010154  0E00               	movlw	0
  2098  010156  0101               	movlb	1	; () banked
  2099  010158  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2100  01015A  0E0A               	movlw	10
  2101  01015C  6FF9               	movwf	Delay_ms@time& (0+255),b
  2102  01015E  EC95  F08C         	call	_Delay_ms	;wreg free
  2103                           
  2104                           ;2_April_WaterMeterMain.c: 256: InitSPI();
  2105  010162  ECDF  F08B         	call	_InitSPI	;wreg free
  2106                           
  2107                           ;2_April_WaterMeterMain.c: 257: Delay_ms(10);
  2108  010166  0E00               	movlw	0
  2109  010168  0101               	movlb	1	; () banked
  2110  01016A  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2111  01016C  0E0A               	movlw	10
  2112  01016E  6FF9               	movwf	Delay_ms@time& (0+255),b
  2113  010170  EC95  F08C         	call	_Delay_ms	;wreg free
  2114                           
  2115                           ;2_April_WaterMeterMain.c: 259: pin_reset();
  2116  010174  EC27  F08C         	call	_pin_reset	;wreg free
  2117                           
  2118                           ;2_April_WaterMeterMain.c: 260: RF_reset();
  2119  010178  EC93  F08B         	call	_RF_reset	;wreg free
  2120                           
  2121                           ;2_April_WaterMeterMain.c: 261: set_WAKE_from_pin();
  2122  01017C  EC87  F08C         	call	_set_WAKE_from_pin	;wreg free
  2123                           
  2124                           ;2_April_WaterMeterMain.c: 263: set_long_address(ADDRESS_long_2);
  2125  010180  0EB2               	movlw	low _ADDRESS_long_2
  2126  010182  0101               	movlb	1	; () banked
  2127  010184  6FFD               	movwf	set_long_address@address& (0+255),b
  2128  010186  0E01               	movlw	high _ADDRESS_long_2
  2129  010188  6FFE               	movwf	(set_long_address@address+1)& (0+255),b
  2130  01018A  EC09  F08B         	call	_set_long_address	;wreg free
  2131                           
  2132                           ;2_April_WaterMeterMain.c: 264: set_short_address(ADDRESS_short_2);
  2133  01018E  0EEA               	movlw	low _ADDRESS_short_2
  2134  010190  0101               	movlb	1	; () banked
  2135  010192  6FFD               	movwf	set_short_address@address& (0+255),b
  2136  010194  0E00               	movlw	high _ADDRESS_short_2
  2137  010196  6FFE               	movwf	(set_short_address@address+1)& (0+255),b
  2138  010198  EC3C  F08B         	call	_set_short_address	;wreg free
  2139                           
  2140                           ;2_April_WaterMeterMain.c: 265: set_PAN_ID(PAN_ID_2);
  2141  01019C  0EE8               	movlw	low _PAN_ID_2
  2142  01019E  0101               	movlb	1	; () banked
  2143  0101A0  6FFD               	movwf	set_PAN_ID@address& (0+255),b
  2144  0101A2  0E00               	movlw	high _PAN_ID_2
  2145  0101A4  6FFE               	movwf	(set_PAN_ID@address+1)& (0+255),b
  2146  0101A6  EC53  F08B         	call	_set_PAN_ID	;wreg free
  2147                           
  2148                           ;2_April_WaterMeterMain.c: 267: init_ZIGBEE_nonbeacon();
  2149  0101AA  ECBB  F08B         	call	_init_ZIGBEE_nonbeacon	;wreg free
  2150                           
  2151                           ;2_April_WaterMeterMain.c: 269: nonbeacon_PAN_coordinator_device();
  2152  0101AE  ECCC  F08A         	call	_nonbeacon_PAN_coordinator_device	;wreg free
  2153                           
  2154                           ;2_April_WaterMeterMain.c: 270: set_TX_power(31);
  2155  0101B2  0E1F               	movlw	31
  2156  0101B4  EC07  F08A         	call	_set_TX_power
  2157                           
  2158                           ;2_April_WaterMeterMain.c: 271: set_frame_format_filter(1);
  2159  0101B8  0E01               	movlw	1
  2160  0101BA  ECDC  F087         	call	_set_frame_format_filter
  2161                           
  2162                           ;2_April_WaterMeterMain.c: 272: set_reception_mode(1);
  2163  0101BE  0E01               	movlw	1
  2164  0101C0  ECDA  F088         	call	_set_reception_mode
  2165                           
  2166                           ;2_April_WaterMeterMain.c: 273: pin_wake();
  2167  0101C4  ECED  F08C         	call	_pin_wake	;wreg free
  2168                           
  2169                           ;2_April_WaterMeterMain.c: 274: lcd_clear();
  2170  0101C8  EC3E  F08D         	call	_lcd_clear	;wreg free
  2171                           
  2172                           ;2_April_WaterMeterMain.c: 275: LcdDisplay(0x80,"FlowRate=    L/H");
  2173  0101CC  0EDC               	movlw	low STR_4
  2174  0101CE  0102               	movlb	2	; () banked
  2175  0101D0  6F79               	movwf	LcdDisplay@string& (0+255),b
  2176  0101D2  0EFF               	movlw	high STR_4
  2177  0101D4  6F7A               	movwf	(LcdDisplay@string+1)& (0+255),b
  2178  0101D6  0E80               	movlw	128
  2179  0101D8  EC6C  F08A         	call	_LcdDisplay
  2180                           
  2181                           ;2_April_WaterMeterMain.c: 276: LcdDisplay(0xC0,"               l");
  2182  0101DC  0EED               	movlw	low STR_5
  2183  0101DE  0102               	movlb	2	; () banked
  2184  0101E0  6F79               	movwf	LcdDisplay@string& (0+255),b
  2185  0101E2  0EFF               	movlw	high STR_5
  2186  0101E4  6F7A               	movwf	(LcdDisplay@string+1)& (0+255),b
  2187  0101E6  0EC0               	movlw	192
  2188  0101E8  EC6C  F08A         	call	_LcdDisplay
  2189                           
  2190                           ;2_April_WaterMeterMain.c: 278: Litre=Read_b_eep(0x01);
  2191  0101EC  0E00               	movlw	0
  2192  0101EE  0101               	movlb	1	; () banked
  2193  0101F0  6FFA               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2194  0101F2  0E01               	movlw	1
  2195  0101F4  6FF9               	movwf	Read_b_eep@badd& (0+255),b
  2196  0101F6  ECFF  F08C         	call	_Read_b_eep	;wreg free
  2197  0101FA  0102               	movlb	2	; () banked
  2198  0101FC  6F84               	movwf	??_main& (0+255),b
  2199  0101FE  5184               	movf	??_main& (0+255),w,b
  2200  010200  0100               	movlb	0	; () banked
  2201  010202  6F72               	movwf	_Litre& (0+255),b
  2202  010204  6B73               	clrf	(_Litre+1)& (0+255),b
  2203  010206  6B74               	clrf	(_Litre+2)& (0+255),b
  2204  010208  6B75               	clrf	(_Litre+3)& (0+255),b
  2205  01020A                     
  2206                           ;2_April_WaterMeterMain.c: 280: IdByte1=0;
  2207                           
  2208                           ; BSR set to: 0
  2209  01020A  0E00               	movlw	0
  2210  01020C  0100               	movlb	0	; () banked
  2211  01020E  6FA7               	movwf	_IdByte1& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;2_April_WaterMeterMain.c: 281: IdByte2=0;
  2215  010210  0E00               	movlw	0
  2216  010212  6FA6               	movwf	_IdByte2& (0+255),b
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;2_April_WaterMeterMain.c: 282: IdByte3=0;
  2220  010214  0E00               	movlw	0
  2221  010216  6FA5               	movwf	_IdByte3& (0+255),b
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;2_April_WaterMeterMain.c: 284: Addr=0xCD;
  2225  010218  0ECD               	movlw	205
  2226  01021A  6FA3               	movwf	_Addr& (0+255),b
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;2_April_WaterMeterMain.c: 285: IdByte4=Litre;
  2230  01021C  C072  F082         	movff	_Litre,_IdByte4
  2231  010220  C073  F083         	movff	_Litre+1,_IdByte4+1
  2232  010224  C074  F084         	movff	_Litre+2,_IdByte4+2
  2233  010228  C075  F085         	movff	_Litre+3,_IdByte4+3
  2234                           
  2235                           ;2_April_WaterMeterMain.c: 286: while (IdByte4 > 0) {
  2236  01022C  D03D               	goto	l546
  2237  01022E                     
  2238                           ; BSR set to: 0
  2239                           ;2_April_WaterMeterMain.c: 287: IdByte1 = IdByte4 % 10;
  2240                           
  2241                           ; BSR set to: 0
  2242  01022E  C082  F279         	movff	_IdByte4,___llmod@dividend
  2243  010232  C083  F27A         	movff	_IdByte4+1,___llmod@dividend+1
  2244  010236  C084  F27B         	movff	_IdByte4+2,___llmod@dividend+2
  2245  01023A  C085  F27C         	movff	_IdByte4+3,___llmod@dividend+3
  2246  01023E  0E0A               	movlw	10
  2247  010240  0102               	movlb	2	; () banked
  2248  010242  6F7D               	movwf	___llmod@divisor& (0+255),b
  2249  010244  0E00               	movlw	0
  2250  010246  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  2251  010248  0E00               	movlw	0
  2252  01024A  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  2253  01024C  0E00               	movlw	0
  2254  01024E  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  2255  010250  EC67  F088         	call	___llmod	;wreg free
  2256  010254  0102               	movlb	2	; () banked
  2257  010256  5179               	movf	?___llmod& (0+255),w,b
  2258  010258  0100               	movlb	0	; () banked
  2259  01025A  6FA7               	movwf	_IdByte1& (0+255),b
  2260                           
  2261                           ;2_April_WaterMeterMain.c: 289: IdByte4 /= 10;
  2262  01025C  C082  F279         	movff	_IdByte4,___lldiv@dividend
  2263  010260  C083  F27A         	movff	_IdByte4+1,___lldiv@dividend+1
  2264  010264  C084  F27B         	movff	_IdByte4+2,___lldiv@dividend+2
  2265  010268  C085  F27C         	movff	_IdByte4+3,___lldiv@dividend+3
  2266  01026C  0E0A               	movlw	10
  2267  01026E  0102               	movlb	2	; () banked
  2268  010270  6F7D               	movwf	___lldiv@divisor& (0+255),b
  2269  010272  0E00               	movlw	0
  2270  010274  6F7E               	movwf	(___lldiv@divisor+1)& (0+255),b
  2271  010276  0E00               	movlw	0
  2272  010278  6F7F               	movwf	(___lldiv@divisor+2)& (0+255),b
  2273  01027A  0E00               	movlw	0
  2274  01027C  6F80               	movwf	(___lldiv@divisor+3)& (0+255),b
  2275  01027E  EC45  F087         	call	___lldiv	;wreg free
  2276  010282  C279  F082         	movff	?___lldiv,_IdByte4
  2277  010286  C27A  F083         	movff	?___lldiv+1,_IdByte4+1
  2278  01028A  C27B  F084         	movff	?___lldiv+2,_IdByte4+2
  2279  01028E  C27C  F085         	movff	?___lldiv+3,_IdByte4+3
  2280                           
  2281                           ;2_April_WaterMeterMain.c: 290: LcdCmd(Addr);
  2282  010292  0100               	movlb	0	; () banked
  2283  010294  51A3               	movf	_Addr& (0+255),w,b
  2284  010296  EC59  F08C         	call	_LcdCmd
  2285                           
  2286                           ;2_April_WaterMeterMain.c: 291: LcdData(IdByte1+0x30);
  2287  01029A  0100               	movlb	0	; () banked
  2288  01029C  51A7               	movf	_IdByte1& (0+255),w,b
  2289  01029E  0F30               	addlw	48
  2290  0102A0  EC49  F08C         	call	_LcdData
  2291                           
  2292                           ;2_April_WaterMeterMain.c: 292: Addr--;
  2293  0102A4  0100               	movlb	0	; () banked
  2294  0102A6  07A3               	decf	_Addr& (0+255),f,b
  2295  0102A8                     l546:
  2296                           
  2297                           ; BSR set to: 0
  2298                           
  2299                           ; BSR set to: 0
  2300  0102A8  5182               	movf	_IdByte4& (0+255),w,b
  2301  0102AA  1183               	iorwf	(_IdByte4+1)& (0+255),w,b
  2302  0102AC  1184               	iorwf	(_IdByte4+2)& (0+255),w,b
  2303  0102AE  1185               	iorwf	(_IdByte4+3)& (0+255),w,b
  2304  0102B0  A4D8               	btfss	status,2,c
  2305  0102B2  D7BD               	goto	l547
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;2_April_WaterMeterMain.c: 293: }
  2309                           ;2_April_WaterMeterMain.c: 294: if(flowrate>=0 && flowrate < 10){
  2310                           
  2311                           ; BSR set to: 0
  2312  0102B4  517D               	movf	(_flowrate+3)& (0+255),w,b
  2313  0102B6  117C               	iorwf	(_flowrate+2)& (0+255),w,b
  2314  0102B8  117B               	iorwf	(_flowrate+1)& (0+255),w,b
  2315  0102BA  E11F               	bnz	l5414
  2316  0102BC  0E0A               	movlw	10
  2317  0102BE  5D7A               	subwf	_flowrate& (0+255),w,b
  2318  0102C0  B0D8               	btfsc	status,0,c
  2319  0102C2  D01B               	goto	l549
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;2_April_WaterMeterMain.c: 295: IdByte1=0;
  2323  0102C4  0E00               	movlw	0
  2324  0102C6  6FA7               	movwf	_IdByte1& (0+255),b
  2325                           
  2326                           ;2_April_WaterMeterMain.c: 296: IdByte2=0;
  2327  0102C8  0E00               	movlw	0
  2328  0102CA  6FA6               	movwf	_IdByte2& (0+255),b
  2329                           
  2330                           ;2_April_WaterMeterMain.c: 297: IdByte3=0;
  2331  0102CC  0E00               	movlw	0
  2332  0102CE  6FA5               	movwf	_IdByte3& (0+255),b
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;2_April_WaterMeterMain.c: 298: LcdCmd(0x8B);
  2336  0102D0  0E8B               	movlw	139
  2337  0102D2  EC59  F08C         	call	_LcdCmd
  2338                           
  2339                           ;2_April_WaterMeterMain.c: 299: LcdData(flowrate+0x30);
  2340  0102D6  0100               	movlb	0	; () banked
  2341  0102D8  517A               	movf	_flowrate& (0+255),w,b
  2342  0102DA  0F30               	addlw	48
  2343  0102DC  EC49  F08C         	call	_LcdData
  2344                           
  2345                           ;2_April_WaterMeterMain.c: 300: LcdCmd(0x8A);
  2346  0102E0  0E8A               	movlw	138
  2347  0102E2  EC59  F08C         	call	_LcdCmd
  2348                           
  2349                           ;2_April_WaterMeterMain.c: 301: LcdData(' ');
  2350  0102E6  0E20               	movlw	32
  2351  0102E8  EC49  F08C         	call	_LcdData
  2352                           
  2353                           ;2_April_WaterMeterMain.c: 302: LcdCmd(0x89);
  2354  0102EC  0E89               	movlw	137
  2355  0102EE  EC59  F08C         	call	_LcdCmd
  2356                           
  2357                           ;2_April_WaterMeterMain.c: 303: LcdData(' ');
  2358  0102F2  0E20               	movlw	32
  2359  0102F4  EC49  F08C         	call	_LcdData
  2360                           
  2361                           ;2_April_WaterMeterMain.c: 304: }
  2362  0102F8  D0C4               	goto	l553
  2363  0102FA                     l549:
  2364  0102FA                     l5414:
  2365                           
  2366                           ;2_April_WaterMeterMain.c: 305: else if(flowrate >= 10 && flowrate <100){
  2367  0102FA  0100               	movlb	0	; () banked
  2368  0102FC  517D               	movf	(_flowrate+3)& (0+255),w,b
  2369  0102FE  117C               	iorwf	(_flowrate+2)& (0+255),w,b
  2370  010300  117B               	iorwf	(_flowrate+1)& (0+255),w,b
  2371  010302  E104               	bnz	u3040
  2372  010304  0E0A               	movlw	10
  2373  010306  5D7A               	subwf	_flowrate& (0+255),w,b
  2374  010308  A0D8               	btfss	status,0,c
  2375  01030A  D047               	goto	l551
  2376  01030C                     u3040:
  2377                           
  2378                           ; BSR set to: 0
  2379  01030C  517D               	movf	(_flowrate+3)& (0+255),w,b
  2380  01030E  117C               	iorwf	(_flowrate+2)& (0+255),w,b
  2381  010310  117B               	iorwf	(_flowrate+1)& (0+255),w,b
  2382  010312  E143               	bnz	l5420
  2383  010314  0E64               	movlw	100
  2384  010316  5D7A               	subwf	_flowrate& (0+255),w,b
  2385  010318  B0D8               	btfsc	status,0,c
  2386  01031A  D03F               	goto	l551
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;2_April_WaterMeterMain.c: 306: IdByte1=flowrate/10;
  2390  01031C  C07A  F279         	movff	_flowrate,___lldiv@dividend
  2391  010320  C07B  F27A         	movff	_flowrate+1,___lldiv@dividend+1
  2392  010324  C07C  F27B         	movff	_flowrate+2,___lldiv@dividend+2
  2393  010328  C07D  F27C         	movff	_flowrate+3,___lldiv@dividend+3
  2394  01032C  0E0A               	movlw	10
  2395  01032E  0102               	movlb	2	; () banked
  2396  010330  6F7D               	movwf	___lldiv@divisor& (0+255),b
  2397  010332  0E00               	movlw	0
  2398  010334  6F7E               	movwf	(___lldiv@divisor+1)& (0+255),b
  2399  010336  0E00               	movlw	0
  2400  010338  6F7F               	movwf	(___lldiv@divisor+2)& (0+255),b
  2401  01033A  0E00               	movlw	0
  2402  01033C  6F80               	movwf	(___lldiv@divisor+3)& (0+255),b
  2403  01033E  EC45  F087         	call	___lldiv	;wreg free
  2404  010342  0102               	movlb	2	; () banked
  2405  010344  5179               	movf	?___lldiv& (0+255),w,b
  2406  010346  0100               	movlb	0	; () banked
  2407  010348  6FA7               	movwf	_IdByte1& (0+255),b
  2408                           
  2409                           ;2_April_WaterMeterMain.c: 307: IdByte2=flowrate%10;
  2410  01034A  C07A  F279         	movff	_flowrate,___llmod@dividend
  2411  01034E  C07B  F27A         	movff	_flowrate+1,___llmod@dividend+1
  2412  010352  C07C  F27B         	movff	_flowrate+2,___llmod@dividend+2
  2413  010356  C07D  F27C         	movff	_flowrate+3,___llmod@dividend+3
  2414  01035A  0E0A               	movlw	10
  2415  01035C  0102               	movlb	2	; () banked
  2416  01035E  6F7D               	movwf	___llmod@divisor& (0+255),b
  2417  010360  0E00               	movlw	0
  2418  010362  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  2419  010364  0E00               	movlw	0
  2420  010366  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  2421  010368  0E00               	movlw	0
  2422  01036A  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  2423  01036C  EC67  F088         	call	___llmod	;wreg free
  2424  010370  0102               	movlb	2	; () banked
  2425  010372  5179               	movf	?___llmod& (0+255),w,b
  2426  010374  0100               	movlb	0	; () banked
  2427  010376  6FA6               	movwf	_IdByte2& (0+255),b
  2428                           
  2429                           ;2_April_WaterMeterMain.c: 308: LcdCmd(0x8B);
  2430  010378  0E8B               	movlw	139
  2431  01037A  EC59  F08C         	call	_LcdCmd
  2432                           
  2433                           ;2_April_WaterMeterMain.c: 309: LcdData(IdByte1+0x30);
  2434  01037E  0100               	movlb	0	; () banked
  2435  010380  51A7               	movf	_IdByte1& (0+255),w,b
  2436  010382  0F30               	addlw	48
  2437  010384  EC49  F08C         	call	_LcdData
  2438                           
  2439                           ;2_April_WaterMeterMain.c: 310: LcdCmd(0x8A);
  2440  010388  0E8A               	movlw	138
  2441  01038A  EC59  F08C         	call	_LcdCmd
  2442                           
  2443                           ;2_April_WaterMeterMain.c: 311: LcdData(IdByte2+0x30);
  2444  01038E  0100               	movlb	0	; () banked
  2445  010390  51A6               	movf	_IdByte2& (0+255),w,b
  2446  010392  0F30               	addlw	48
  2447  010394  EC49  F08C         	call	_LcdData
  2448                           
  2449                           ;2_April_WaterMeterMain.c: 314: }
  2450  010398  D074               	goto	l553
  2451  01039A                     l551:
  2452  01039A                     l5420:
  2453                           
  2454                           ;2_April_WaterMeterMain.c: 315: else if(flowrate >=100 && flowrate < 1000){
  2455  01039A  0100               	movlb	0	; () banked
  2456  01039C  517D               	movf	(_flowrate+3)& (0+255),w,b
  2457  01039E  117C               	iorwf	(_flowrate+2)& (0+255),w,b
  2458  0103A0  117B               	iorwf	(_flowrate+1)& (0+255),w,b
  2459  0103A2  E104               	bnz	u3060
  2460  0103A4  0E64               	movlw	100
  2461  0103A6  5D7A               	subwf	_flowrate& (0+255),w,b
  2462  0103A8  A0D8               	btfss	status,0,c
  2463  0103AA  D06B               	goto	l553
  2464  0103AC                     u3060:
  2465                           
  2466                           ; BSR set to: 0
  2467  0103AC  517D               	movf	(_flowrate+3)& (0+255),w,b
  2468  0103AE  117C               	iorwf	(_flowrate+2)& (0+255),w,b
  2469  0103B0  E168               	bnz	l5426
  2470  0103B2  0EE8               	movlw	232
  2471  0103B4  5D7A               	subwf	_flowrate& (0+255),w,b
  2472  0103B6  0E03               	movlw	3
  2473  0103B8  597B               	subwfb	(_flowrate+1)& (0+255),w,b
  2474  0103BA  B0D8               	btfsc	status,0,c
  2475  0103BC  D062               	goto	l553
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;2_April_WaterMeterMain.c: 316: IdByte3=flowrate/100;
  2479  0103BE  C07A  F279         	movff	_flowrate,___lldiv@dividend
  2480  0103C2  C07B  F27A         	movff	_flowrate+1,___lldiv@dividend+1
  2481  0103C6  C07C  F27B         	movff	_flowrate+2,___lldiv@dividend+2
  2482  0103CA  C07D  F27C         	movff	_flowrate+3,___lldiv@dividend+3
  2483  0103CE  0E64               	movlw	100
  2484  0103D0  0102               	movlb	2	; () banked
  2485  0103D2  6F7D               	movwf	___lldiv@divisor& (0+255),b
  2486  0103D4  0E00               	movlw	0
  2487  0103D6  6F7E               	movwf	(___lldiv@divisor+1)& (0+255),b
  2488  0103D8  0E00               	movlw	0
  2489  0103DA  6F7F               	movwf	(___lldiv@divisor+2)& (0+255),b
  2490  0103DC  0E00               	movlw	0
  2491  0103DE  6F80               	movwf	(___lldiv@divisor+3)& (0+255),b
  2492  0103E0  EC45  F087         	call	___lldiv	;wreg free
  2493  0103E4  0102               	movlb	2	; () banked
  2494  0103E6  5179               	movf	?___lldiv& (0+255),w,b
  2495  0103E8  0100               	movlb	0	; () banked
  2496  0103EA  6FA5               	movwf	_IdByte3& (0+255),b
  2497                           
  2498                           ;2_April_WaterMeterMain.c: 317: V_Temp1=flowrate%100;
  2499  0103EC  C07A  F279         	movff	_flowrate,___llmod@dividend
  2500  0103F0  C07B  F27A         	movff	_flowrate+1,___llmod@dividend+1
  2501  0103F4  C07C  F27B         	movff	_flowrate+2,___llmod@dividend+2
  2502  0103F8  C07D  F27C         	movff	_flowrate+3,___llmod@dividend+3
  2503  0103FC  0E64               	movlw	100
  2504  0103FE  0102               	movlb	2	; () banked
  2505  010400  6F7D               	movwf	___llmod@divisor& (0+255),b
  2506  010402  0E00               	movlw	0
  2507  010404  6F7E               	movwf	(___llmod@divisor+1)& (0+255),b
  2508  010406  0E00               	movlw	0
  2509  010408  6F7F               	movwf	(___llmod@divisor+2)& (0+255),b
  2510  01040A  0E00               	movlw	0
  2511  01040C  6F80               	movwf	(___llmod@divisor+3)& (0+255),b
  2512  01040E  EC67  F088         	call	___llmod	;wreg free
  2513  010412  0102               	movlb	2	; () banked
  2514  010414  5179               	movf	?___llmod& (0+255),w,b
  2515  010416  0100               	movlb	0	; () banked
  2516  010418  6FA4               	movwf	_V_Temp1& (0+255),b
  2517                           
  2518                           ;2_April_WaterMeterMain.c: 318: IdByte1=V_Temp1/10;
  2519  01041A  C0A4  F1F9         	movff	_V_Temp1,___awdiv@dividend
  2520  01041E  0101               	movlb	1	; () banked
  2521  010420  6BFA               	clrf	(___awdiv@dividend+1)& (0+255),b
  2522  010422  0E00               	movlw	0
  2523  010424  6FFC               	movwf	(___awdiv@divisor+1)& (0+255),b
  2524  010426  0E0A               	movlw	10
  2525  010428  6FFB               	movwf	___awdiv@divisor& (0+255),b
  2526  01042A  ECF2  F086         	call	___awdiv	;wreg free
  2527  01042E  0101               	movlb	1	; () banked
  2528  010430  51F9               	movf	?___awdiv& (0+255),w,b
  2529  010432  0100               	movlb	0	; () banked
  2530  010434  6FA7               	movwf	_IdByte1& (0+255),b
  2531                           
  2532                           ;2_April_WaterMeterMain.c: 319: IdByte2=V_Temp1%10;
  2533  010436  C0A4  F1F9         	movff	_V_Temp1,___awmod@dividend
  2534  01043A  0101               	movlb	1	; () banked
  2535  01043C  6BFA               	clrf	(___awmod@dividend+1)& (0+255),b
  2536  01043E  0E00               	movlw	0
  2537  010440  6FFC               	movwf	(___awmod@divisor+1)& (0+255),b
  2538  010442  0E0A               	movlw	10
  2539  010444  6FFB               	movwf	___awmod@divisor& (0+255),b
  2540  010446  ECA1  F088         	call	___awmod	;wreg free
  2541  01044A  0101               	movlb	1	; () banked
  2542  01044C  51F9               	movf	?___awmod& (0+255),w,b
  2543  01044E  0100               	movlb	0	; () banked
  2544  010450  6FA6               	movwf	_IdByte2& (0+255),b
  2545                           
  2546                           ;2_April_WaterMeterMain.c: 321: LcdCmd(0x8B);
  2547  010452  0E8B               	movlw	139
  2548  010454  EC59  F08C         	call	_LcdCmd
  2549                           
  2550                           ;2_April_WaterMeterMain.c: 322: LcdData(IdByte3+0x30);
  2551  010458  0100               	movlb	0	; () banked
  2552  01045A  51A5               	movf	_IdByte3& (0+255),w,b
  2553  01045C  0F30               	addlw	48
  2554  01045E  EC49  F08C         	call	_LcdData
  2555                           
  2556                           ;2_April_WaterMeterMain.c: 323: LcdCmd(0x8A);
  2557  010462  0E8A               	movlw	138
  2558  010464  EC59  F08C         	call	_LcdCmd
  2559                           
  2560                           ;2_April_WaterMeterMain.c: 324: LcdData(IdByte1+0x30);
  2561  010468  0100               	movlb	0	; () banked
  2562  01046A  51A7               	movf	_IdByte1& (0+255),w,b
  2563  01046C  0F30               	addlw	48
  2564  01046E  EC49  F08C         	call	_LcdData
  2565                           
  2566                           ;2_April_WaterMeterMain.c: 325: LcdCmd(0x89);
  2567  010472  0E89               	movlw	137
  2568  010474  EC59  F08C         	call	_LcdCmd
  2569                           
  2570                           ;2_April_WaterMeterMain.c: 326: LcdData(IdByte2+0x30);
  2571  010478  0100               	movlb	0	; () banked
  2572  01047A  51A6               	movf	_IdByte2& (0+255),w,b
  2573  01047C  0F30               	addlw	48
  2574  01047E  EC49  F08C         	call	_LcdData
  2575  010482                     l553:
  2576  010482                     l5426:
  2577                           
  2578                           ;2_April_WaterMeterMain.c: 327: }
  2579                           ;2_April_WaterMeterMain.c: 328: if(DATA_RX[0] == '!' && DATA_RX[1] == 'W'){
  2580  010482  0E21               	movlw	33
  2581  010484  0100               	movlb	0	; () banked
  2582  010486  19C0               	xorwf	_DATA_RX& (0+255),w,b
  2583  010488  A4D8               	btfss	status,2,c
  2584  01048A  D040               	goto	l554
  2585                           
  2586                           ; BSR set to: 0
  2587  01048C  0E57               	movlw	87
  2588  01048E  19C1               	xorwf	(_DATA_RX+1)& (0+255),w,b
  2589  010490  A4D8               	btfss	status,2,c
  2590  010492  D03C               	goto	l554
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;2_April_WaterMeterMain.c: 329: DATA_RX[0]=0;
  2594  010494  0E00               	movlw	0
  2595  010496  6FC0               	movwf	_DATA_RX& (0+255),b
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;2_April_WaterMeterMain.c: 330: PORTAbits.RA3=0;
  2599  010498  9680               	bcf	3968,3,c	;volatile
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;2_April_WaterMeterMain.c: 331: Delay_ms(500);Delay_ms(500);Delay_ms(500);Delay_ms(500);
      +                          Delay_ms(500);
  2603  01049A  0E01               	movlw	1
  2604  01049C  0101               	movlb	1	; () banked
  2605  01049E  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2606  0104A0  0EF4               	movlw	244
  2607  0104A2  6FF9               	movwf	Delay_ms@time& (0+255),b
  2608  0104A4  EC95  F08C         	call	_Delay_ms	;wreg free
  2609  0104A8  0E01               	movlw	1
  2610  0104AA  0101               	movlb	1	; () banked
  2611  0104AC  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2612  0104AE  0EF4               	movlw	244
  2613  0104B0  6FF9               	movwf	Delay_ms@time& (0+255),b
  2614  0104B2  EC95  F08C         	call	_Delay_ms	;wreg free
  2615  0104B6  0E01               	movlw	1
  2616  0104B8  0101               	movlb	1	; () banked
  2617  0104BA  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2618  0104BC  0EF4               	movlw	244
  2619  0104BE  6FF9               	movwf	Delay_ms@time& (0+255),b
  2620  0104C0  EC95  F08C         	call	_Delay_ms	;wreg free
  2621  0104C4  0E01               	movlw	1
  2622  0104C6  0101               	movlb	1	; () banked
  2623  0104C8  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2624  0104CA  0EF4               	movlw	244
  2625  0104CC  6FF9               	movwf	Delay_ms@time& (0+255),b
  2626  0104CE  EC95  F08C         	call	_Delay_ms	;wreg free
  2627  0104D2  0E01               	movlw	1
  2628  0104D4  0101               	movlb	1	; () banked
  2629  0104D6  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2630  0104D8  0EF4               	movlw	244
  2631  0104DA  6FF9               	movwf	Delay_ms@time& (0+255),b
  2632  0104DC  EC95  F08C         	call	_Delay_ms	;wreg free
  2633                           
  2634                           ;2_April_WaterMeterMain.c: 332: Litre=Read_b_eep(0x01);
  2635  0104E0  0E00               	movlw	0
  2636  0104E2  0101               	movlb	1	; () banked
  2637  0104E4  6FFA               	movwf	(Read_b_eep@badd+1)& (0+255),b
  2638  0104E6  0E01               	movlw	1
  2639  0104E8  6FF9               	movwf	Read_b_eep@badd& (0+255),b
  2640  0104EA  ECFF  F08C         	call	_Read_b_eep	;wreg free
  2641  0104EE  0102               	movlb	2	; () banked
  2642  0104F0  6F84               	movwf	??_main& (0+255),b
  2643  0104F2  5184               	movf	??_main& (0+255),w,b
  2644  0104F4  0100               	movlb	0	; () banked
  2645  0104F6  6F72               	movwf	_Litre& (0+255),b
  2646  0104F8  6B73               	clrf	(_Litre+1)& (0+255),b
  2647  0104FA  6B74               	clrf	(_Litre+2)& (0+255),b
  2648  0104FC  6B75               	clrf	(_Litre+3)& (0+255),b
  2649                           
  2650                           ;2_April_WaterMeterMain.c: 333: data_TX_normal_FIFO[13]='!';
  2651  0104FE  0E21               	movlw	33
  2652  010500  6F6D               	movwf	(_data_TX_normal_FIFO+13)& (0+255),b
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;2_April_WaterMeterMain.c: 334: data_TX_normal_FIFO[14]=Litre;
  2656  010502  C072  F06E         	movff	_Litre,_data_TX_normal_FIFO+14
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;2_April_WaterMeterMain.c: 335: write_TX_normal_FIFO();
  2660  010506  ECAA  F084         	call	_write_TX_normal_FIFO	;wreg free
  2661                           
  2662                           ;2_April_WaterMeterMain.c: 336: PORTAbits.RA3=1;
  2663  01050A  8680               	bsf	3968,3,c	;volatile
  2664  01050C                     l554:
  2665                           
  2666                           ;2_April_WaterMeterMain.c: 337: }
  2667                           ;2_April_WaterMeterMain.c: 347: __nop();
  2668  01050C  F000               	nop	
  2669  01050E  D67D               	goto	l545
  2670  010510                     __end_of_main:
  2671                           	opt stack 0
  2672                           tblptru	equ	0xFF8
  2673                           tblptrh	equ	0xFF7
  2674                           tblptrl	equ	0xFF6
  2675                           tablat	equ	0xFF5
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1l	equ	0xFE1
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _write_TX_normal_FIFO *****************
  2684 ;; Defined at:
  2685 ;;		line 335 in file "zigbee.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  i               1   31[BANK2 ] unsigned char 
  2690 ;;  n               1   30[BANK2 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:   11
  2707 ;; This function calls:
  2708 ;;		_Delay_ms
  2709 ;;		_Xor_check
  2710 ;;		_set_not_ACK
  2711 ;;		_set_not_encrypt
  2712 ;;		_start_transmit
  2713 ;;		_write_ZIGBEE_long
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text1
  2720  010954                     __ptext1:
  2721                           	opt stack 0
  2722  010954                     _write_TX_normal_FIFO:
  2723                           	opt stack 19
  2724                           
  2725                           ;zigbee.c: 336: unsigned char i = 0,n = 0;
  2726                           
  2727                           ;incstack = 0
  2728  010954  0E00               	movlw	0
  2729  010956  0102               	movlb	2	; () banked
  2730  010958  6F83               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2731  01095A  0E00               	movlw	0
  2732  01095C  6F82               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2733                           
  2734                           ; BSR set to: 2
  2735                           ;zigbee.c: 338: data_TX_normal_FIFO[0] = HEADER_LENGHT;
  2736  01095E  0E2B               	movlw	low _HEADER_LENGHT
  2737  010960  6EF6               	movwf	tblptrl,c
  2738  010962                     	if	1	;There is more than 1 active tblptr byte
  2739  010962  0EFF               	movlw	high _HEADER_LENGHT
  2740  010964  6EF7               	movwf	tblptrh,c
  2741  010966                     	endif
  2742  010966                     	if	1	;There are 3 active tblptr bytes
  2743  010966  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2744  010968  6EF8               	movwf	tblptru,c
  2745  01096A                     	endif
  2746  01096A  0008               	tblrd		*
  2747  01096C  CFF5 F060          	movff	tablat,_data_TX_normal_FIFO
  2748                           
  2749                           ; BSR set to: 2
  2750                           ;zigbee.c: 339: data_TX_normal_FIFO[1] = HEADER_LENGHT + DATA_LENGHT;
  2751  010970  0E2C               	movlw	low _DATA_LENGHT
  2752  010972  6EF6               	movwf	tblptrl,c
  2753  010974                     	if	1	;There is more than 1 active tblptr byte
  2754  010974  0EFF               	movlw	high _DATA_LENGHT
  2755  010976  6EF7               	movwf	tblptrh,c
  2756  010978                     	endif
  2757  010978                     	if	1	;There are 3 active tblptr bytes
  2758  010978  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2759  01097A  6EF8               	movwf	tblptru,c
  2760  01097C                     	endif
  2761  01097C  0008               	tblrd		*
  2762  01097E  CFF5 F27D          	movff	tablat,??_write_TX_normal_FIFO
  2763  010982  0E2B               	movlw	low _HEADER_LENGHT
  2764  010984  6EF6               	movwf	tblptrl,c
  2765  010986                     	if	1	;There is more than 1 active tblptr byte
  2766  010986  0EFF               	movlw	high _HEADER_LENGHT
  2767  010988  6EF7               	movwf	tblptrh,c
  2768  01098A                     	endif
  2769  01098A                     	if	1	;There are 3 active tblptr bytes
  2770  01098A  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2771  01098C  6EF8               	movwf	tblptru,c
  2772  01098E                     	endif
  2773  01098E  0008               	tblrd		*
  2774  010990  50F5               	movf	tablat,w,c
  2775  010992  257D               	addwf	??_write_TX_normal_FIFO& (0+255),w,b
  2776  010994  0100               	movlb	0	; () banked
  2777  010996  6F61               	movwf	(_data_TX_normal_FIFO+1)& (0+255),b
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;zigbee.c: 340: data_TX_normal_FIFO[2] = 0x01;
  2781  010998  0E01               	movlw	1
  2782  01099A  6F62               	movwf	(_data_TX_normal_FIFO+2)& (0+255),b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;zigbee.c: 341: data_TX_normal_FIFO[3] = 0x88;
  2786  01099C  0E88               	movlw	136
  2787  01099E  6F63               	movwf	(_data_TX_normal_FIFO+3)& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;zigbee.c: 342: data_TX_normal_FIFO[4] = SEQ_NUMBER;
  2791  0109A0  C0E7  F064         	movff	_SEQ_NUMBER,_data_TX_normal_FIFO+4
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;zigbee.c: 343: data_TX_normal_FIFO[5] = PAN_ID_2[1];
  2795  0109A4  C0E9  F065         	movff	_PAN_ID_2+1,_data_TX_normal_FIFO+5
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;zigbee.c: 344: data_TX_normal_FIFO[6] = PAN_ID_2[0];
  2799  0109A8  C0E8  F066         	movff	_PAN_ID_2,_data_TX_normal_FIFO+6
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;zigbee.c: 345: data_TX_normal_FIFO[7] = ADDRESS_short_2[0];
  2803  0109AC  C0EA  F067         	movff	_ADDRESS_short_2,_data_TX_normal_FIFO+7
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;zigbee.c: 346: data_TX_normal_FIFO[8] = ADDRESS_short_2[1];
  2807  0109B0  C0EB  F068         	movff	_ADDRESS_short_2+1,_data_TX_normal_FIFO+8
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;zigbee.c: 347: data_TX_normal_FIFO[9] = PAN_ID_1[0];
  2811  0109B4  C0E1  F069         	movff	_PAN_ID_1,_data_TX_normal_FIFO+9
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;zigbee.c: 348: data_TX_normal_FIFO[10] = PAN_ID_1[1];
  2815  0109B8  C0E2  F06A         	movff	_PAN_ID_1+1,_data_TX_normal_FIFO+10
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;zigbee.c: 349: data_TX_normal_FIFO[11] = ADDRESS_short_1[0];
  2819  0109BC  C0E3  F06B         	movff	_ADDRESS_short_1,_data_TX_normal_FIFO+11
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;zigbee.c: 350: data_TX_normal_FIFO[12] = ADDRESS_short_1[1];
  2823  0109C0  C0E4  F06C         	movff	_ADDRESS_short_1+1,_data_TX_normal_FIFO+12
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;zigbee.c: 352: for(n=0,ii=13;n<3;n++,ii++){
  2827  0109C4  0E00               	movlw	0
  2828  0109C6  0102               	movlb	2	; () banked
  2829  0109C8  6F82               	movwf	write_TX_normal_FIFO@n& (0+255),b
  2830                           
  2831                           ; BSR set to: 2
  2832  0109CA  0E0D               	movlw	13
  2833  0109CC  0100               	movlb	0	; () banked
  2834  0109CE  6FBD               	movwf	_ii& (0+255),b
  2835  0109D0                     l5070:
  2836                           
  2837                           ; BSR set to: 0
  2838  0109D0  0E02               	movlw	2
  2839  0109D2  0102               	movlb	2	; () banked
  2840  0109D4  6582               	cpfsgt	write_TX_normal_FIFO@n& (0+255),b
  2841  0109D6  D001               	goto	l1005
  2842  0109D8  D018               	goto	u2630
  2843  0109DA                     l1005:
  2844                           
  2845                           ; BSR set to: 2
  2846                           ;zigbee.c: 353: DATA_TX[n] = data_TX_normal_FIFO[ii];
  2847                           
  2848                           ; BSR set to: 2
  2849  0109DA  0100               	movlb	0	; () banked
  2850  0109DC  51BD               	movf	_ii& (0+255),w,b
  2851  0109DE  0D01               	mullw	1
  2852  0109E0  0E60               	movlw	low _data_TX_normal_FIFO
  2853  0109E2  24F3               	addwf	prodl,w,c
  2854  0109E4  6ED9               	movwf	fsr2l,c
  2855  0109E6  0E00               	movlw	high _data_TX_normal_FIFO
  2856  0109E8  20F4               	addwfc	prodh,w,c
  2857  0109EA  6EDA               	movwf	fsr2h,c
  2858  0109EC  0102               	movlb	2	; () banked
  2859  0109EE  5182               	movf	write_TX_normal_FIFO@n& (0+255),w,b
  2860  0109F0  0D01               	mullw	1
  2861  0109F2  0EC5               	movlw	low _DATA_TX
  2862  0109F4  24F3               	addwf	prodl,w,c
  2863  0109F6  6EE1               	movwf	fsr1l,c
  2864  0109F8  0E00               	movlw	high _DATA_TX
  2865  0109FA  20F4               	addwfc	prodh,w,c
  2866  0109FC  6EE2               	movwf	fsr1h,c
  2867  0109FE  CFDF FFE7          	movff	indf2,indf1
  2868                           
  2869                           ; BSR set to: 2
  2870  010A02  2B82               	incf	write_TX_normal_FIFO@n& (0+255),f,b
  2871                           
  2872                           ; BSR set to: 2
  2873  010A04  0100               	movlb	0	; () banked
  2874  010A06  2BBD               	incf	_ii& (0+255),f,b
  2875  010A08  D7E3               	goto	l5070
  2876  010A0A                     u2630:
  2877                           
  2878                           ; BSR set to: 2
  2879                           ;zigbee.c: 354: }
  2880                           ;zigbee.c: 355: TX_CRC = Xor_check(DATA_TX,3);
  2881                           
  2882                           ; BSR set to: 2
  2883  010A0A  0EC5               	movlw	low _DATA_TX
  2884  010A0C  0101               	movlb	1	; () banked
  2885  010A0E  6FF9               	movwf	Xor_check@data_value& (0+255),b
  2886  010A10  0E00               	movlw	high _DATA_TX
  2887  010A12  6FFA               	movwf	(Xor_check@data_value+1)& (0+255),b
  2888  010A14  0E03               	movlw	3
  2889  010A16  6FFB               	movwf	Xor_check@length& (0+255),b
  2890  010A18  ECBE  F089         	call	_Xor_check	;wreg free
  2891  010A1C  C1F9  F09B         	movff	?_Xor_check,_TX_CRC
  2892  010A20  C1FA  F09C         	movff	?_Xor_check+1,_TX_CRC+1
  2893                           
  2894                           ;zigbee.c: 356: data_TX_normal_FIFO[3 + 12 + 1] = (TX_CRC & 0x00FF);
  2895  010A24  C09B  F070         	movff	_TX_CRC,_data_TX_normal_FIFO+16
  2896                           
  2897                           ;zigbee.c: 357: data_TX_normal_FIFO[3 + 12 + 2] = ( (TX_CRC & 0xFF00) >> 8 );
  2898  010A28  0100               	movlb	0	; () banked
  2899  010A2A  519C               	movf	(_TX_CRC+1)& (0+255),w,b
  2900  010A2C  6F71               	movwf	(_data_TX_normal_FIFO+17)& (0+255),b
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;zigbee.c: 360: for(i = 0; i < (HEADER_LENGHT + DATA_LENGHT + 2); i++)
  2904  010A2E  0E00               	movlw	0
  2905  010A30  0102               	movlb	2	; () banked
  2906  010A32  6F83               	movwf	write_TX_normal_FIFO@i& (0+255),b
  2907  010A34                     l5090:
  2908                           
  2909                           ; BSR set to: 2
  2910  010A34  0E2B               	movlw	low _HEADER_LENGHT
  2911  010A36  6EF6               	movwf	tblptrl,c
  2912  010A38                     	if	1	;There is more than 1 active tblptr byte
  2913  010A38  0EFF               	movlw	high _HEADER_LENGHT
  2914  010A3A  6EF7               	movwf	tblptrh,c
  2915  010A3C                     	endif
  2916  010A3C                     	if	1	;There are 3 active tblptr bytes
  2917  010A3C  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
  2918  010A3E  6EF8               	movwf	tblptru,c
  2919  010A40                     	endif
  2920  010A40  0008               	tblrd		*
  2921  010A42  50F5               	movf	tablat,w,c
  2922  010A44  6F7D               	movwf	??_write_TX_normal_FIFO& (0+255),b
  2923  010A46  6B7E               	clrf	(??_write_TX_normal_FIFO+1)& (0+255),b
  2924  010A48  0E2C               	movlw	low _DATA_LENGHT
  2925  010A4A  6EF6               	movwf	tblptrl,c
  2926  010A4C                     	if	1	;There is more than 1 active tblptr byte
  2927  010A4C  0EFF               	movlw	high _DATA_LENGHT
  2928  010A4E  6EF7               	movwf	tblptrh,c
  2929  010A50                     	endif
  2930  010A50                     	if	1	;There are 3 active tblptr bytes
  2931  010A50  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
  2932  010A52  6EF8               	movwf	tblptru,c
  2933  010A54                     	endif
  2934  010A54  0008               	tblrd		*
  2935  010A56  50F5               	movf	tablat,w,c
  2936  010A58  277D               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2937  010A5A  0E00               	movlw	0
  2938  010A5C  237E               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2939  010A5E  0E02               	movlw	2
  2940  010A60  277D               	addwf	??_write_TX_normal_FIFO& (0+255),f,b
  2941  010A62  0E00               	movlw	0
  2942  010A64  237E               	addwfc	(??_write_TX_normal_FIFO+1)& (0+255),f,b
  2943  010A66  5183               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2944  010A68  6F7F               	movwf	(??_write_TX_normal_FIFO+2)& (0+255),b
  2945  010A6A  6B80               	clrf	(??_write_TX_normal_FIFO+3)& (0+255),b
  2946  010A6C  517D               	movf	??_write_TX_normal_FIFO& (0+255),w,b
  2947  010A6E  5D7F               	subwf	(??_write_TX_normal_FIFO+2)& (0+255),w,b
  2948  010A70  5180               	movf	(??_write_TX_normal_FIFO+3)& (0+255),w,b
  2949  010A72  0A80               	xorlw	128
  2950  010A74  6F81               	movwf	(??_write_TX_normal_FIFO+4)& (0+255),b
  2951  010A76  517E               	movf	(??_write_TX_normal_FIFO+1)& (0+255),w,b
  2952  010A78  0A80               	xorlw	128
  2953  010A7A  5981               	subwfb	(??_write_TX_normal_FIFO+4)& (0+255),w,b
  2954  010A7C  B0D8               	btfsc	status,0,c
  2955  010A7E  D022               	goto	u2650
  2956                           
  2957                           ; BSR set to: 2
  2958                           ;zigbee.c: 361: {
  2959                           ;zigbee.c: 362: write_ZIGBEE_long(address_TX_normal_FIFO + i, data_TX_normal_FIFO[i]);
  2960                           
  2961                           ; BSR set to: 2
  2962                           
  2963                           ; BSR set to: 2
  2964  010A80  5183               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2965  010A82  0100               	movlb	0	; () banked
  2966  010A84  259F               	addwf	_address_TX_normal_FIFO& (0+255),w,b
  2967  010A86  0101               	movlb	1	; () banked
  2968  010A88  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  2969  010A8A  0E00               	movlw	0
  2970  010A8C  0100               	movlb	0	; () banked
  2971  010A8E  21A0               	addwfc	(_address_TX_normal_FIFO+1)& (0+255),w,b
  2972  010A90  0101               	movlb	1	; () banked
  2973  010A92  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  2974  010A94  0102               	movlb	2	; () banked
  2975  010A96  5183               	movf	write_TX_normal_FIFO@i& (0+255),w,b
  2976  010A98  0D01               	mullw	1
  2977  010A9A  0E60               	movlw	low _data_TX_normal_FIFO
  2978  010A9C  24F3               	addwf	prodl,w,c
  2979  010A9E  6ED9               	movwf	fsr2l,c
  2980  010AA0  0E00               	movlw	high _data_TX_normal_FIFO
  2981  010AA2  20F4               	addwfc	prodh,w,c
  2982  010AA4  6EDA               	movwf	fsr2h,c
  2983  010AA6  50DF               	movf	indf2,w,c
  2984  010AA8  0101               	movlb	1	; () banked
  2985  010AAA  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  2986  010AAC  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  2987                           
  2988                           ;zigbee.c: 363: Delay_ms(10);
  2989  010AB0  0E00               	movlw	0
  2990  010AB2  0101               	movlb	1	; () banked
  2991  010AB4  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  2992  010AB6  0E0A               	movlw	10
  2993  010AB8  6FF9               	movwf	Delay_ms@time& (0+255),b
  2994  010ABA  EC95  F08C         	call	_Delay_ms	;wreg free
  2995  010ABE  0102               	movlb	2	; () banked
  2996  010AC0  2B83               	incf	write_TX_normal_FIFO@i& (0+255),f,b
  2997  010AC2  D7B8               	goto	l5090
  2998  010AC4                     u2650:
  2999                           
  3000                           ; BSR set to: 2
  3001                           ;zigbee.c: 364: }
  3002                           ;zigbee.c: 365: set_not_ACK();
  3003                           
  3004                           ; BSR set to: 2
  3005  010AC4  ECBA  F08C         	call	_set_not_ACK	;wreg free
  3006                           
  3007                           ;zigbee.c: 366: set_not_encrypt();
  3008  010AC8  ECAF  F08C         	call	_set_not_encrypt	;wreg free
  3009                           
  3010                           ;zigbee.c: 367: start_transmit();
  3011  010ACC  ECE3  F089         	call	_start_transmit	;wreg free
  3012  010AD0  0012               	return		;funcret
  3013  010AD2                     __end_of_write_TX_normal_FIFO:
  3014                           	opt stack 0
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           indf1	equ	0xFE7
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _start_transmit *****************
  3034 ;; Defined at:
  3035 ;;		line 383 in file "zigbee.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:   10
  3056 ;; This function calls:
  3057 ;;		_read_ZIGBEE_short
  3058 ;;		_write_ZIGBEE_short
  3059 ;; This function is called by:
  3060 ;;		_write_TX_normal_FIFO
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text2
  3065  0113C6                     __ptext2:
  3066                           	opt stack 0
  3067  0113C6                     _start_transmit:
  3068                           	opt stack 19
  3069                           
  3070                           ;zigbee.c: 385: CHECK=0;
  3071                           
  3072                           ;incstack = 0
  3073  0113C6  0E00               	movlw	0
  3074  0113C8  0100               	movlb	0	; () banked
  3075  0113CA  6FBE               	movwf	_CHECK& (0+255),b
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;zigbee.c: 386: CHECK = CHECK | 0x01;
  3079  0113CC  51BE               	movf	_CHECK& (0+255),w,b
  3080  0113CE  0901               	iorlw	1
  3081  0113D0  6FBE               	movwf	_CHECK& (0+255),b
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;zigbee.c: 387: write_ZIGBEE_short(0x1B,CHECK);
  3085  0113D2  C0BE  F1FB         	movff	_CHECK,write_ZIGBEE_short@data_r
  3086  0113D6  0E1B               	movlw	27
  3087  0113D8  ECCD  F08B         	call	_write_ZIGBEE_short
  3088                           
  3089                           ;zigbee.c: 389: CHECK=0;
  3090  0113DC  0E00               	movlw	0
  3091  0113DE  0100               	movlb	0	; () banked
  3092  0113E0  6FBE               	movwf	_CHECK& (0+255),b
  3093  0113E2                     
  3094                           ; BSR set to: 0
  3095                           
  3096                           ; BSR set to: 0
  3097  0113E2  0E31               	movlw	49
  3098  0113E4  EC7F  F08B         	call	_read_ZIGBEE_short
  3099  0113E8  06E8               	decf	wreg,f,c
  3100  0113EA  A4D8               	btfss	status,2,c
  3101  0113EC  D7FA               	goto	l1019
  3102                           
  3103                           ;zigbee.c: 391: CHECK = read_ZIGBEE_short(0x31);
  3104  0113EE  0E31               	movlw	49
  3105  0113F0  EC7F  F08B         	call	_read_ZIGBEE_short
  3106  0113F4  0100               	movlb	0	; () banked
  3107  0113F6  6FBE               	movwf	_CHECK& (0+255),b
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;zigbee.c: 392: __nop();
  3111  0113F8  F000               	nop	
  3112                           
  3113                           ;zigbee.c: 393: CHECK = 0;
  3114  0113FA  0E00               	movlw	0
  3115  0113FC  0100               	movlb	0	; () banked
  3116  0113FE  6FBE               	movwf	_CHECK& (0+255),b
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;zigbee.c: 394: CHECK = read_ZIGBEE_short(0x24);
  3120  011400  0E24               	movlw	36
  3121  011402  EC7F  F08B         	call	_read_ZIGBEE_short
  3122  011406  0100               	movlb	0	; () banked
  3123  011408  6FBE               	movwf	_CHECK& (0+255),b
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;zigbee.c: 395: __nop();
  3127  01140A  F000               	nop	
  3128  01140C  0012               	return		;funcret
  3129  01140E                     __end_of_start_transmit:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodh	equ	0xFF4
  3136                           prodl	equ	0xFF3
  3137                           intcon	equ	0xFF2
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf1	equ	0xFE7
  3141                           postdec1	equ	0xFE5
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _read_ZIGBEE_short *****************
  3150 ;; Defined at:
  3151 ;;		line 404 in file "zigbee.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  address         1    wreg     unsigned char 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  address         1    3[BANK1 ] unsigned char 
  3156 ;;  data_r          1    2[BANK1 ] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      unsigned char 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    9
  3173 ;; This function calls:
  3174 ;;		_SPI_Read
  3175 ;;		_SPI_Write
  3176 ;; This function is called by:
  3177 ;;		_start_transmit
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text3
  3182  0116FE                     __ptext3:
  3183                           	opt stack 0
  3184  0116FE                     _read_ZIGBEE_short:
  3185                           	opt stack 19
  3186                           
  3187                           ;incstack = 0
  3188                           ;read_ZIGBEE_short@address stored from wreg
  3189  0116FE  0101               	movlb	1	; () banked
  3190  011700  6FFC               	movwf	read_ZIGBEE_short@address& (0+255),b
  3191                           
  3192                           ;zigbee.c: 405: unsigned char data_r = 0;
  3193  011702  0E00               	movlw	0
  3194  011704  0101               	movlb	1	; () banked
  3195  011706  6FFB               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  3196                           
  3197                           ; BSR set to: 1
  3198                           ;zigbee.c: 407: PORTCbits.RC0=0;
  3199  011708  9082               	bcf	3970,0,c	;volatile
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
  3203  01170A  51FC               	movf	read_ZIGBEE_short@address& (0+255),w,b
  3204  01170C  25FC               	addwf	read_ZIGBEE_short@address& (0+255),w,b
  3205  01170E  0B7E               	andlw	126
  3206  011710  6FFC               	movwf	read_ZIGBEE_short@address& (0+255),b
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;zigbee.c: 409: SPI_Write(address);
  3210  011712  51FC               	movf	read_ZIGBEE_short@address& (0+255),w,b
  3211  011714  ECF6  F08C         	call	_SPI_Write
  3212                           
  3213                           ;zigbee.c: 410: data_r = SPI_Read();
  3214  011718  ECE4  F08C         	call	_SPI_Read	;wreg free
  3215  01171C  0101               	movlb	1	; () banked
  3216  01171E  6FFB               	movwf	read_ZIGBEE_short@data_r& (0+255),b
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;zigbee.c: 411: PORTCbits.RC0=1;
  3220  011720  8082               	bsf	3970,0,c	;volatile
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;zigbee.c: 413: return data_r;
  3224  011722  51FB               	movf	read_ZIGBEE_short@data_r& (0+255),w,b
  3225  011724  0012               	return	
  3226  011726                     __end_of_read_ZIGBEE_short:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           indf1	equ	0xFE7
  3238                           postdec1	equ	0xFE5
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _SPI_Read *****************
  3247 ;; Defined at:
  3248 ;;		line 464 in file "zigbee.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  TempVar         1    0[BANK1 ] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;Total ram usage:        1 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    8
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_read_ZIGBEE_short
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text4
  3277  0119C8                     __ptext4:
  3278                           	opt stack 0
  3279  0119C8                     _SPI_Read:
  3280                           	opt stack 19
  3281                           
  3282                           ;zigbee.c: 465: unsigned char TempVar;
  3283                           ;zigbee.c: 466: SSP1BUF = 0xff;
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;incstack = 0
  3287  0119C8  68C9               	setf	4041,c	;volatile
  3288  0119CA  A0C7               	btfss	4039,0,c	;volatile
  3289  0119CC  D7FE               	goto	l1046
  3290                           
  3291                           ;zigbee.c: 468: TempVar = SSP1BUF;
  3292  0119CE  CFC9 F1F9          	movff	4041,SPI_Read@TempVar	;volatile
  3293                           
  3294                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
  3295  0119D2  969E               	bcf	3998,3,c	;volatile
  3296                           
  3297                           ;zigbee.c: 470: return ( TempVar );
  3298  0119D4  0101               	movlb	1	; () banked
  3299  0119D6  51F9               	movf	SPI_Read@TempVar& (0+255),w,b
  3300  0119D8  0012               	return	
  3301  0119DA                     __end_of_SPI_Read:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           indf1	equ	0xFE7
  3313                           postdec1	equ	0xFE5
  3314                           fsr1h	equ	0xFE2
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _set_not_encrypt *****************
  3322 ;; Defined at:
  3323 ;;		line 376 in file "zigbee.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  temp            1    4[BANK1 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:        1 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:   10
  3344 ;; This function calls:
  3345 ;;		_write_ZIGBEE_short
  3346 ;; This function is called by:
  3347 ;;		_write_TX_normal_FIFO
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text5
  3352  01195E                     __ptext5:
  3353                           	opt stack 0
  3354  01195E                     _set_not_encrypt:
  3355                           	opt stack 19
  3356                           
  3357                           ;zigbee.c: 378: unsigned char temp = 0;
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;incstack = 0
  3361  01195E  0E00               	movlw	0
  3362  011960  0101               	movlb	1	; () banked
  3363  011962  6FFD               	movwf	set_not_encrypt@temp& (0+255),b
  3364                           
  3365                           ;zigbee.c: 379: temp = temp & (!0x02);
  3366  011964  0E00               	movlw	0
  3367  011966  6FFD               	movwf	set_not_encrypt@temp& (0+255),b
  3368                           
  3369                           ; BSR set to: 1
  3370                           ;zigbee.c: 380: write_ZIGBEE_short(0x1B, temp);
  3371  011968  C1FD  F1FB         	movff	set_not_encrypt@temp,write_ZIGBEE_short@data_r
  3372  01196C  0E1B               	movlw	27
  3373  01196E  ECCD  F08B         	call	_write_ZIGBEE_short
  3374  011972  0012               	return		;funcret
  3375  011974                     __end_of_set_not_encrypt:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           prodh	equ	0xFF4
  3382                           prodl	equ	0xFF3
  3383                           intcon	equ	0xFF2
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf1	equ	0xFE7
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _set_not_ACK *****************
  3396 ;; Defined at:
  3397 ;;		line 370 in file "zigbee.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  temp            1    4[BANK1 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:   10
  3418 ;; This function calls:
  3419 ;;		_write_ZIGBEE_short
  3420 ;; This function is called by:
  3421 ;;		_write_TX_normal_FIFO
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text6
  3426  011974                     __ptext6:
  3427                           	opt stack 0
  3428  011974                     _set_not_ACK:
  3429                           	opt stack 19
  3430                           
  3431                           ;zigbee.c: 372: unsigned char temp = 0;
  3432                           
  3433                           ;incstack = 0
  3434  011974  0E00               	movlw	0
  3435  011976  0101               	movlb	1	; () banked
  3436  011978  6FFD               	movwf	set_not_ACK@temp& (0+255),b
  3437                           
  3438                           ;zigbee.c: 373: temp = temp & (!0x04);
  3439  01197A  0E00               	movlw	0
  3440  01197C  6FFD               	movwf	set_not_ACK@temp& (0+255),b
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;zigbee.c: 374: write_ZIGBEE_short(0x1B, temp);
  3444  01197E  C1FD  F1FB         	movff	set_not_ACK@temp,write_ZIGBEE_short@data_r
  3445  011982  0E1B               	movlw	27
  3446  011984  ECCD  F08B         	call	_write_ZIGBEE_short
  3447  011988  0012               	return		;funcret
  3448  01198A                     __end_of_set_not_ACK:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           prodh	equ	0xFF4
  3455                           prodl	equ	0xFF3
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           indf1	equ	0xFE7
  3460                           postdec1	equ	0xFE5
  3461                           fsr1h	equ	0xFE2
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _Xor_check *****************
  3469 ;; Defined at:
  3470 ;;		line 504 in file "zigbee.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  data_value      2    0[BANK1 ] PTR unsigned char 
  3473 ;;		 -> DATA_TX(3), DATA_RX(5), 
  3474 ;;  length          1    2[BANK1 ] unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  xor             2   23[BANK2 ] unsigned short 
  3477 ;;  xor_value       2   21[BANK2 ] unsigned short 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2    0[BANK1 ] unsigned short 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       0       4       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        8 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    8
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_write_TX_normal_FIFO
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text7
  3502  01137C                     __ptext7:
  3503                           	opt stack 0
  3504  01137C                     _Xor_check:
  3505                           	opt stack 21
  3506                           
  3507                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
  3508                           
  3509                           ;incstack = 0
  3510  01137C  0E8D               	movlw	141
  3511  01137E  0102               	movlb	2	; () banked
  3512  011380  6F7A               	movwf	(Xor_check@xor_value+1)& (0+255),b
  3513  011382  0E0D               	movlw	13
  3514  011384  6F79               	movwf	Xor_check@xor_value& (0+255),b
  3515                           
  3516                           ;zigbee.c: 507: unsigned short xor=0x00;
  3517  011386  0E00               	movlw	0
  3518  011388  6F7C               	movwf	(Xor_check@xor+1)& (0+255),b
  3519  01138A  0E00               	movlw	0
  3520  01138C  6F7B               	movwf	Xor_check@xor& (0+255),b
  3521                           
  3522                           ;zigbee.c: 508: while(length --)
  3523  01138E  D00D               	goto	l1085
  3524  011390                     
  3525                           ;zigbee.c: 509: {
  3526                           ;zigbee.c: 510: xor_value ^= *data_value++;
  3527                           
  3528                           ; BSR set to: 2
  3529  011390  C1F9  FFD9         	movff	Xor_check@data_value,fsr2l
  3530  011394  C1FA  FFDA         	movff	Xor_check@data_value+1,fsr2h
  3531  011398  50DF               	movf	indf2,w,c
  3532  01139A  0101               	movlb	1	; () banked
  3533  01139C  6FFC               	movwf	??_Xor_check& (0+255),b
  3534  01139E  51FC               	movf	??_Xor_check& (0+255),w,b
  3535  0113A0  0102               	movlb	2	; () banked
  3536  0113A2  1B79               	xorwf	Xor_check@xor_value& (0+255),f,b
  3537                           
  3538                           ; BSR set to: 2
  3539  0113A4  0101               	movlb	1	; () banked
  3540  0113A6  4BF9               	infsnz	Xor_check@data_value& (0+255),f,b
  3541  0113A8  2BFA               	incf	(Xor_check@data_value+1)& (0+255),f,b
  3542  0113AA                     l1085:
  3543                           
  3544                           ; BSR set to: 1
  3545  0113AA  0101               	movlb	1	; () banked
  3546  0113AC  07FB               	decf	Xor_check@length& (0+255),f,b
  3547  0113AE  29FB               	incf	Xor_check@length& (0+255),w,b
  3548  0113B0  A4D8               	btfss	status,2,c
  3549  0113B2  D7EE               	goto	l1086
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;zigbee.c: 511: }
  3553                           ;zigbee.c: 512: xor=xor_value;
  3554  0113B4  C279  F27B         	movff	Xor_check@xor_value,Xor_check@xor
  3555  0113B8  C27A  F27C         	movff	Xor_check@xor_value+1,Xor_check@xor+1
  3556                           
  3557                           ;zigbee.c: 513: return(xor);
  3558  0113BC  C27B  F1F9         	movff	Xor_check@xor,?_Xor_check
  3559  0113C0  C27C  F1FA         	movff	Xor_check@xor+1,?_Xor_check+1
  3560                           
  3561                           ; BSR set to: 1
  3562  0113C4  0012               	return		;funcret
  3563  0113C6                     __end_of_Xor_check:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           postdec1	equ	0xFE5
  3576                           fsr1h	equ	0xFE2
  3577                           fsr1l	equ	0xFE1
  3578                           indf2	equ	0xFDF
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _set_short_address *****************
  3584 ;; Defined at:
  3585 ;;		line 68 in file "zigbee.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3588 ;;		 -> ADDRESS_short_2(2), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3600 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:   10
  3607 ;; This function calls:
  3608 ;;		_write_ZIGBEE_short
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text8
  3615  011678                     __ptext8:
  3616                           	opt stack 0
  3617  011678                     _set_short_address:
  3618                           	opt stack 20
  3619                           
  3620                           ;zigbee.c: 69: write_ZIGBEE_short(0x03, address[0]);
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;incstack = 0
  3624  011678  C1FD  FFD9         	movff	set_short_address@address,fsr2l
  3625  01167C  C1FE  FFDA         	movff	set_short_address@address+1,fsr2h
  3626  011680  50DF               	movf	indf2,w,c
  3627  011682  0101               	movlb	1	; () banked
  3628  011684  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3629  011686  0E03               	movlw	3
  3630  011688  ECCD  F08B         	call	_write_ZIGBEE_short
  3631                           
  3632                           ;zigbee.c: 70: write_ZIGBEE_short(0x04, address[1]);
  3633  01168C  0101               	movlb	1	; () banked
  3634  01168E  EE20 F001          	lfsr	2,1
  3635  011692  51FD               	movf	set_short_address@address& (0+255),w,b
  3636  011694  26D9               	addwf	fsr2l,f,c
  3637  011696  51FE               	movf	(set_short_address@address+1)& (0+255),w,b
  3638  011698  22DA               	addwfc	fsr2h,f,c
  3639  01169A  50DF               	movf	indf2,w,c
  3640  01169C  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3641  01169E  0E04               	movlw	4
  3642  0116A0  ECCD  F08B         	call	_write_ZIGBEE_short
  3643  0116A4  0012               	return		;funcret
  3644  0116A6                     __end_of_set_short_address:
  3645                           	opt stack 0
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           intcon	equ	0xFF2
  3653                           postinc0	equ	0xFEE
  3654                           wreg	equ	0xFE8
  3655                           indf1	equ	0xFE7
  3656                           postdec1	equ	0xFE5
  3657                           fsr1h	equ	0xFE2
  3658                           fsr1l	equ	0xFE1
  3659                           indf2	equ	0xFDF
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _set_reception_mode *****************
  3665 ;; Defined at:
  3666 ;;		line 304 in file "zigbee.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  r_mode          1    wreg     unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  r_mode          1    4[BANK1 ] unsigned char 
  3671 ;;  temp            1    5[BANK1 ] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;Total ram usage:        2 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:   10
  3688 ;; This function calls:
  3689 ;;		_write_ZIGBEE_short
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text9
  3696  0111B4                     __ptext9:
  3697                           	opt stack 0
  3698  0111B4                     _set_reception_mode:
  3699                           	opt stack 20
  3700                           
  3701                           ;incstack = 0
  3702                           ;set_reception_mode@r_mode stored from wreg
  3703  0111B4  0101               	movlb	1	; () banked
  3704  0111B6  6FFD               	movwf	set_reception_mode@r_mode& (0+255),b
  3705                           
  3706                           ;zigbee.c: 306: unsigned char temp=0;
  3707  0111B8  0E00               	movlw	0
  3708  0111BA  0101               	movlb	1	; () banked
  3709  0111BC  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3710                           
  3711                           ;zigbee.c: 307: switch(r_mode)
  3712  0111BE  D026               	goto	l997
  3713  0111C0                     
  3714                           ; BSR set to: 1
  3715                           ;zigbee.c: 310: {
  3716                           ;zigbee.c: 311: temp=0;
  3717                           
  3718                           ; BSR set to: 1
  3719  0111C0  0E00               	movlw	0
  3720  0111C2  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3721                           
  3722                           ;zigbee.c: 312: temp = temp & (!0x03);
  3723  0111C4  0E00               	movlw	0
  3724  0111C6  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;zigbee.c: 313: write_ZIGBEE_short(0x00, temp);
  3728  0111C8  C1FE  F1FB         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3729  0111CC  0E00               	movlw	0
  3730  0111CE  ECCD  F08B         	call	_write_ZIGBEE_short
  3731                           
  3732                           ;zigbee.c: 314: }
  3733                           ;zigbee.c: 315: break;
  3734  0111D2  0012               	return	
  3735  0111D4                     
  3736                           ;zigbee.c: 318: {
  3737                           ;zigbee.c: 319: temp=0;
  3738  0111D4  0E00               	movlw	0
  3739  0111D6  0101               	movlb	1	; () banked
  3740  0111D8  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3741                           
  3742                           ;zigbee.c: 320: temp = temp & (!0x01);
  3743  0111DA  0E00               	movlw	0
  3744  0111DC  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3745                           
  3746                           ; BSR set to: 1
  3747                           ;zigbee.c: 321: temp = temp | 0x02;
  3748  0111DE  51FE               	movf	set_reception_mode@temp& (0+255),w,b
  3749  0111E0  0902               	iorlw	2
  3750  0111E2  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;zigbee.c: 322: write_ZIGBEE_short(0x00, temp);
  3754  0111E4  C1FE  F1FB         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3755  0111E8  0E00               	movlw	0
  3756  0111EA  ECCD  F08B         	call	_write_ZIGBEE_short
  3757                           
  3758                           ;zigbee.c: 323: }
  3759                           ;zigbee.c: 324: break;
  3760  0111EE  0012               	return	
  3761  0111F0                     
  3762                           ;zigbee.c: 326: {
  3763                           ;zigbee.c: 327: temp=0;
  3764  0111F0  0E00               	movlw	0
  3765  0111F2  0101               	movlb	1	; () banked
  3766  0111F4  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3767                           
  3768                           ;zigbee.c: 328: temp = temp & (!0x02);
  3769  0111F6  0E00               	movlw	0
  3770  0111F8  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;zigbee.c: 329: temp = temp | 0x01;
  3774  0111FA  51FE               	movf	set_reception_mode@temp& (0+255),w,b
  3775  0111FC  0901               	iorlw	1
  3776  0111FE  6FFE               	movwf	set_reception_mode@temp& (0+255),b
  3777                           
  3778                           ; BSR set to: 1
  3779                           ;zigbee.c: 330: write_ZIGBEE_short(0x00, temp);
  3780  011200  C1FE  F1FB         	movff	set_reception_mode@temp,write_ZIGBEE_short@data_r
  3781  011204  0E00               	movlw	0
  3782  011206  ECCD  F08B         	call	_write_ZIGBEE_short
  3783                           
  3784                           ;zigbee.c: 333: }
  3785                           
  3786                           ;zigbee.c: 331: }
  3787                           ;zigbee.c: 332: break;
  3788  01120A  0012               	return	
  3789  01120C                     l997:
  3790  01120C  0101               	movlb	1	; () banked
  3791  01120E  51FD               	movf	set_reception_mode@r_mode& (0+255),w,b
  3792                           
  3793                           ; Switch size 1, requested type "space"
  3794                           ; Number of cases is 3, Range of values is 1 to 3
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte           10     6 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799  011210  0A01               	xorlw	1	; case 1
  3800  011212  B4D8               	btfsc	status,2,c
  3801  011214  D7D5               	goto	l998
  3802  011216  0A03               	xorlw	3	; case 2
  3803  011218  B4D8               	btfsc	status,2,c
  3804  01121A  D7DC               	goto	l1000
  3805  01121C  0A01               	xorlw	1	; case 3
  3806  01121E  A4D8               	btfss	status,2,c
  3807  011220  0012               	return	
  3808  011222  D7E6               	goto	l1001
  3809  011224                     __end_of_set_reception_mode:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           postinc0	equ	0xFEE
  3819                           wreg	equ	0xFE8
  3820                           indf1	equ	0xFE7
  3821                           postdec1	equ	0xFE5
  3822                           fsr1h	equ	0xFE2
  3823                           fsr1l	equ	0xFE1
  3824                           indf2	equ	0xFDF
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _set_long_address *****************
  3830 ;; Defined at:
  3831 ;;		line 63 in file "zigbee.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  address         2    4[BANK1 ] PTR unsigned char 
  3834 ;;		 -> ADDRESS_long_2(8), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  i               1    6[BANK1 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        3 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:   10
  3853 ;; This function calls:
  3854 ;;		_write_ZIGBEE_short
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text10
  3861  011612                     __ptext10:
  3862                           	opt stack 0
  3863  011612                     _set_long_address:
  3864                           	opt stack 20
  3865                           
  3866                           ;zigbee.c: 64: unsigned char i = 0;
  3867                           
  3868                           ;incstack = 0
  3869  011612  0E00               	movlw	0
  3870  011614  0101               	movlb	1	; () banked
  3871  011616  6FFF               	movwf	set_long_address@i& (0+255),b
  3872                           
  3873                           ;zigbee.c: 65: for(i = 0; i < 8; i++)
  3874  011618  0E00               	movlw	0
  3875  01161A  6FFF               	movwf	set_long_address@i& (0+255),b
  3876  01161C                     l4946:
  3877                           
  3878                           ; BSR set to: 1
  3879  01161C  0E07               	movlw	7
  3880  01161E  65FF               	cpfsgt	set_long_address@i& (0+255),b
  3881  011620  D001               	goto	l916
  3882  011622  0012               	return	
  3883  011624                     l916:
  3884                           
  3885                           ; BSR set to: 1
  3886                           ;zigbee.c: 66: write_ZIGBEE_short(0x05 + i, address[i]);
  3887                           
  3888                           ; BSR set to: 1
  3889  011624  51FF               	movf	set_long_address@i& (0+255),w,b
  3890  011626  0D01               	mullw	1
  3891  011628  50F3               	movf	prodl,w,c
  3892  01162A  25FD               	addwf	set_long_address@address& (0+255),w,b
  3893  01162C  6ED9               	movwf	fsr2l,c
  3894  01162E  50F4               	movf	prodh,w,c
  3895  011630  21FE               	addwfc	(set_long_address@address+1)& (0+255),w,b
  3896  011632  6EDA               	movwf	fsr2h,c
  3897  011634  50DF               	movf	indf2,w,c
  3898  011636  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  3899  011638  51FF               	movf	set_long_address@i& (0+255),w,b
  3900  01163A  0F05               	addlw	5
  3901  01163C  ECCD  F08B         	call	_write_ZIGBEE_short
  3902  011640  0101               	movlb	1	; () banked
  3903  011642  2BFF               	incf	set_long_address@i& (0+255),f,b
  3904  011644  D7EB               	goto	l4946
  3905  011646                     __end_of_set_long_address:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodh	equ	0xFF4
  3912                           prodl	equ	0xFF3
  3913                           intcon	equ	0xFF2
  3914                           postinc0	equ	0xFEE
  3915                           wreg	equ	0xFE8
  3916                           indf1	equ	0xFE7
  3917                           postdec1	equ	0xFE5
  3918                           fsr1h	equ	0xFE2
  3919                           fsr1l	equ	0xFE1
  3920                           indf2	equ	0xFDF
  3921                           fsr2h	equ	0xFDA
  3922                           fsr2l	equ	0xFD9
  3923                           status	equ	0xFD8
  3924                           
  3925 ;; *************** function _set_frame_format_filter *****************
  3926 ;; Defined at:
  3927 ;;		line 263 in file "zigbee.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  fff_mode        1    wreg     unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  fff_mode        1    4[BANK1 ] unsigned char 
  3932 ;;  temp            1    5[BANK1 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   10
  3949 ;; This function calls:
  3950 ;;		_write_ZIGBEE_short
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text11
  3957  010FB8                     __ptext11:
  3958                           	opt stack 0
  3959  010FB8                     _set_frame_format_filter:
  3960                           	opt stack 20
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;incstack = 0
  3964                           ;set_frame_format_filter@fff_mode stored from wreg
  3965  010FB8  0101               	movlb	1	; () banked
  3966  010FBA  6FFD               	movwf	set_frame_format_filter@fff_mode& (0+255),b
  3967                           
  3968                           ;zigbee.c: 265: unsigned char temp = 0;
  3969  010FBC  0E00               	movlw	0
  3970  010FBE  0101               	movlb	1	; () banked
  3971  010FC0  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  3972                           
  3973                           ;zigbee.c: 266: switch(fff_mode)
  3974  010FC2  D034               	goto	l988
  3975  010FC4                     
  3976                           ; BSR set to: 1
  3977                           ;zigbee.c: 269: {
  3978                           ;zigbee.c: 270: temp=0;
  3979                           
  3980                           ; BSR set to: 1
  3981  010FC4  0E00               	movlw	0
  3982  010FC6  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  3983                           
  3984                           ;zigbee.c: 271: temp = temp & (!0x0E);
  3985  010FC8  0E00               	movlw	0
  3986  010FCA  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;zigbee.c: 272: write_ZIGBEE_short(0x0D, temp);
  3990  010FCC  C1FE  F1FB         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  3991  010FD0  0E0D               	movlw	13
  3992  010FD2  ECCD  F08B         	call	_write_ZIGBEE_short
  3993                           
  3994                           ;zigbee.c: 273: }
  3995                           ;zigbee.c: 274: break;
  3996  010FD6  0012               	return	
  3997  010FD8                     
  3998                           ;zigbee.c: 276: {
  3999                           ;zigbee.c: 277: temp=0;
  4000  010FD8  0E00               	movlw	0
  4001  010FDA  0101               	movlb	1	; () banked
  4002  010FDC  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4003                           
  4004                           ;zigbee.c: 278: temp = temp & (!0x06);
  4005  010FDE  0E00               	movlw	0
  4006  010FE0  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;zigbee.c: 279: temp = temp | 0x08;
  4010  010FE2  51FE               	movf	set_frame_format_filter@temp& (0+255),w,b
  4011  010FE4  0908               	iorlw	8
  4012  010FE6  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;zigbee.c: 280: write_ZIGBEE_short(0x0D, temp);
  4016  010FE8  C1FE  F1FB         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  4017  010FEC  0E0D               	movlw	13
  4018  010FEE  ECCD  F08B         	call	_write_ZIGBEE_short
  4019                           
  4020                           ;zigbee.c: 281: }
  4021                           ;zigbee.c: 282: break;
  4022  010FF2  0012               	return	
  4023  010FF4                     
  4024                           ;zigbee.c: 284: {
  4025                           ;zigbee.c: 285: temp=0;
  4026  010FF4  0E00               	movlw	0
  4027  010FF6  0101               	movlb	1	; () banked
  4028  010FF8  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4029                           
  4030                           ;zigbee.c: 286: temp = temp & (!0x0A);
  4031  010FFA  0E00               	movlw	0
  4032  010FFC  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4033                           
  4034                           ; BSR set to: 1
  4035                           ;zigbee.c: 287: temp = temp | 0x04;
  4036  010FFE  51FE               	movf	set_frame_format_filter@temp& (0+255),w,b
  4037  011000  0904               	iorlw	4
  4038  011002  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;zigbee.c: 288: write_ZIGBEE_short(0x0D, temp);
  4042  011004  C1FE  F1FB         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  4043  011008  0E0D               	movlw	13
  4044  01100A  ECCD  F08B         	call	_write_ZIGBEE_short
  4045                           
  4046                           ;zigbee.c: 289: }
  4047                           ;zigbee.c: 290: break;
  4048  01100E  0012               	return	
  4049  011010                     
  4050                           ;zigbee.c: 293: {
  4051                           ;zigbee.c: 294: temp=0;
  4052  011010  0E00               	movlw	0
  4053  011012  0101               	movlb	1	; () banked
  4054  011014  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4055                           
  4056                           ;zigbee.c: 295: temp = temp & (!0x0C);
  4057  011016  0E00               	movlw	0
  4058  011018  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;zigbee.c: 296: temp = temp | 0x02;
  4062  01101A  51FE               	movf	set_frame_format_filter@temp& (0+255),w,b
  4063  01101C  0902               	iorlw	2
  4064  01101E  6FFE               	movwf	set_frame_format_filter@temp& (0+255),b
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;zigbee.c: 297: write_ZIGBEE_short(0x0D, temp);
  4068  011020  C1FE  F1FB         	movff	set_frame_format_filter@temp,write_ZIGBEE_short@data_r
  4069  011024  0E0D               	movlw	13
  4070  011026  ECCD  F08B         	call	_write_ZIGBEE_short
  4071                           
  4072                           ;zigbee.c: 300: }
  4073                           
  4074                           ;zigbee.c: 298: }
  4075                           ;zigbee.c: 299: break;
  4076  01102A  0012               	return	
  4077  01102C                     l988:
  4078  01102C  0101               	movlb	1	; () banked
  4079  01102E  51FD               	movf	set_frame_format_filter@fff_mode& (0+255),w,b
  4080                           
  4081                           ; Switch size 1, requested type "space"
  4082                           ; Number of cases is 4, Range of values is 1 to 4
  4083                           ; switch strategies available:
  4084                           ; Name         Instructions Cycles
  4085                           ; simple_byte           13     7 (average)
  4086                           ;	Chosen strategy is simple_byte
  4087  011030  0A01               	xorlw	1	; case 1
  4088  011032  B4D8               	btfsc	status,2,c
  4089  011034  D7C7               	goto	l989
  4090  011036  0A03               	xorlw	3	; case 2
  4091  011038  B4D8               	btfsc	status,2,c
  4092  01103A  D7CE               	goto	l991
  4093  01103C  0A01               	xorlw	1	; case 3
  4094  01103E  B4D8               	btfsc	status,2,c
  4095  011040  D7D9               	goto	l992
  4096  011042  0A07               	xorlw	7	; case 4
  4097  011044  A4D8               	btfss	status,2,c
  4098  011046  0012               	return	
  4099  011048  D7E3               	goto	l993
  4100  01104A                     __end_of_set_frame_format_filter:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           indf1	equ	0xFE7
  4112                           postdec1	equ	0xFE5
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _set_WAKE_from_pin *****************
  4121 ;; Defined at:
  4122 ;;		line 58 in file "zigbee.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:   10
  4143 ;; This function calls:
  4144 ;;		_write_ZIGBEE_short
  4145 ;; This function is called by:
  4146 ;;		_main
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text12
  4151  01190E                     __ptext12:
  4152                           	opt stack 0
  4153  01190E                     _set_WAKE_from_pin:
  4154                           	opt stack 20
  4155                           
  4156                           ;zigbee.c: 59: PORTFbits.RF4=0;
  4157                           
  4158                           ;incstack = 0
  4159  01190E  9885               	bcf	3973,4,c	;volatile
  4160                           
  4161                           ;zigbee.c: 60: write_ZIGBEE_short(0x0D,0x60);
  4162  011910  0E60               	movlw	96
  4163  011912  0101               	movlb	1	; () banked
  4164  011914  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4165  011916  0E0D               	movlw	13
  4166  011918  ECCD  F08B         	call	_write_ZIGBEE_short
  4167                           
  4168                           ;zigbee.c: 61: write_ZIGBEE_short(0x22,0x80);
  4169  01191C  0E80               	movlw	128
  4170  01191E  0101               	movlb	1	; () banked
  4171  011920  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4172  011922  0E22               	movlw	34
  4173  011924  ECCD  F08B         	call	_write_ZIGBEE_short
  4174  011928  0012               	return		;funcret
  4175  01192A                     __end_of_set_WAKE_from_pin:
  4176                           	opt stack 0
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           intcon	equ	0xFF2
  4184                           postinc0	equ	0xFEE
  4185                           wreg	equ	0xFE8
  4186                           indf1	equ	0xFE7
  4187                           postdec1	equ	0xFE5
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           indf2	equ	0xFDF
  4191                           fsr2h	equ	0xFDA
  4192                           fsr2l	equ	0xFD9
  4193                           status	equ	0xFD8
  4194                           
  4195 ;; *************** function _set_TX_power *****************
  4196 ;; Defined at:
  4197 ;;		line 252 in file "zigbee.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  power           1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  power           1   24[BANK2 ] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;Total ram usage:        2 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:   10
  4218 ;; This function calls:
  4219 ;;		_write_ZIGBEE_long
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text13
  4226  01140E                     __ptext13:
  4227                           	opt stack 0
  4228  01140E                     _set_TX_power:
  4229                           	opt stack 20
  4230                           
  4231                           ;incstack = 0
  4232                           ;set_TX_power@power stored from wreg
  4233  01140E  0102               	movlb	2	; () banked
  4234  011410  6F7C               	movwf	set_TX_power@power& (0+255),b
  4235                           
  4236                           ;zigbee.c: 253: if((power < 0) || (power > 31))
  4237  011412  0E1F               	movlw	31
  4238  011414  0102               	movlb	2	; () banked
  4239  011416  657C               	cpfsgt	set_TX_power@power& (0+255),b
  4240  011418  D002               	goto	l984
  4241                           
  4242                           ; BSR set to: 2
  4243                           ;zigbee.c: 254: power = 31;
  4244  01141A  0E1F               	movlw	31
  4245  01141C  6F7C               	movwf	set_TX_power@power& (0+255),b
  4246  01141E                     l984:
  4247                           
  4248                           ; BSR set to: 2
  4249                           ;zigbee.c: 256: power = 31 - power;
  4250                           
  4251                           ; BSR set to: 2
  4252  01141E  517C               	movf	set_TX_power@power& (0+255),w,b
  4253  011420  0800               	sublw	0
  4254  011422  0F1F               	addlw	31
  4255  011424  6F7C               	movwf	set_TX_power@power& (0+255),b
  4256                           
  4257                           ; BSR set to: 2
  4258                           ;zigbee.c: 257: power = ((power & 0b00011111) << 3) & 0b11111000;
  4259  011426  C27C  F27B         	movff	set_TX_power@power,??_set_TX_power
  4260  01142A  0E1F               	movlw	31
  4261  01142C  177B               	andwf	??_set_TX_power& (0+255),f,b
  4262  01142E  90D8               	bcf	status,0,c
  4263  011430  377B               	rlcf	??_set_TX_power& (0+255),f,b
  4264  011432  90D8               	bcf	status,0,c
  4265  011434  377B               	rlcf	??_set_TX_power& (0+255),f,b
  4266  011436  90D8               	bcf	status,0,c
  4267  011438  357B               	rlcf	??_set_TX_power& (0+255),w,b
  4268  01143A  0BF8               	andlw	248
  4269  01143C  6F7C               	movwf	set_TX_power@power& (0+255),b
  4270                           
  4271                           ; BSR set to: 2
  4272                           ;zigbee.c: 258: write_ZIGBEE_long(0x203, power);
  4273  01143E  0E02               	movlw	2
  4274  011440  0101               	movlb	1	; () banked
  4275  011442  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4276  011444  0E03               	movlw	3
  4277  011446  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4278  011448  C27C  F1FD         	movff	set_TX_power@power,write_ZIGBEE_long@data_r
  4279  01144C  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4280  011450  0012               	return		;funcret
  4281  011452                     __end_of_set_TX_power:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           intcon	equ	0xFF2
  4290                           postinc0	equ	0xFEE
  4291                           wreg	equ	0xFE8
  4292                           indf1	equ	0xFE7
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           indf2	equ	0xFDF
  4297                           fsr2h	equ	0xFDA
  4298                           fsr2l	equ	0xFD9
  4299                           status	equ	0xFD8
  4300                           
  4301 ;; *************** function _set_PAN_ID *****************
  4302 ;; Defined at:
  4303 ;;		line 72 in file "zigbee.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  address         2    4[BANK1 ] PTR unsigned char 
  4306 ;;		 -> PAN_ID_2(2), 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:   10
  4325 ;; This function calls:
  4326 ;;		_write_ZIGBEE_short
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text14
  4333  0116A6                     __ptext14:
  4334                           	opt stack 0
  4335  0116A6                     _set_PAN_ID:
  4336                           	opt stack 20
  4337                           
  4338                           ;zigbee.c: 73: write_ZIGBEE_short(0x01, address[0]);
  4339                           
  4340                           ;incstack = 0
  4341  0116A6  C1FD  FFD9         	movff	set_PAN_ID@address,fsr2l
  4342  0116AA  C1FE  FFDA         	movff	set_PAN_ID@address+1,fsr2h
  4343  0116AE  50DF               	movf	indf2,w,c
  4344  0116B0  0101               	movlb	1	; () banked
  4345  0116B2  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4346  0116B4  0E01               	movlw	1
  4347  0116B6  ECCD  F08B         	call	_write_ZIGBEE_short
  4348                           
  4349                           ;zigbee.c: 74: write_ZIGBEE_short(0x02, address[1]);
  4350  0116BA  0101               	movlb	1	; () banked
  4351  0116BC  EE20 F001          	lfsr	2,1
  4352  0116C0  51FD               	movf	set_PAN_ID@address& (0+255),w,b
  4353  0116C2  26D9               	addwf	fsr2l,f,c
  4354  0116C4  51FE               	movf	(set_PAN_ID@address+1)& (0+255),w,b
  4355  0116C6  22DA               	addwfc	fsr2h,f,c
  4356  0116C8  50DF               	movf	indf2,w,c
  4357  0116CA  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4358  0116CC  0E02               	movlw	2
  4359  0116CE  ECCD  F08B         	call	_write_ZIGBEE_short
  4360  0116D2  0012               	return		;funcret
  4361  0116D4                     __end_of_set_PAN_ID:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           intcon	equ	0xFF2
  4370                           postinc0	equ	0xFEE
  4371                           wreg	equ	0xFE8
  4372                           indf1	equ	0xFE7
  4373                           postdec1	equ	0xFE5
  4374                           fsr1h	equ	0xFE2
  4375                           fsr1l	equ	0xFE1
  4376                           indf2	equ	0xFDF
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _pin_reset *****************
  4382 ;; Defined at:
  4383 ;;		line 47 in file "zigbee.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    9
  4404 ;; This function calls:
  4405 ;;		_Delay_ms
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text15
  4412  01184E                     __ptext15:
  4413                           	opt stack 0
  4414  01184E                     _pin_reset:
  4415                           	opt stack 21
  4416                           
  4417                           ;zigbee.c: 48: PORTCbits.RC1=0;
  4418                           
  4419                           ;incstack = 0
  4420  01184E  9282               	bcf	3970,1,c	;volatile
  4421                           
  4422                           ;zigbee.c: 49: Delay_ms(10);
  4423  011850  0E00               	movlw	0
  4424  011852  0101               	movlb	1	; () banked
  4425  011854  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  4426  011856  0E0A               	movlw	10
  4427  011858  6FF9               	movwf	Delay_ms@time& (0+255),b
  4428  01185A  EC95  F08C         	call	_Delay_ms	;wreg free
  4429                           
  4430                           ;zigbee.c: 50: PORTCbits.RC1=1;
  4431  01185E  8282               	bsf	3970,1,c	;volatile
  4432                           
  4433                           ;zigbee.c: 51: Delay_ms(10);
  4434  011860  0E00               	movlw	0
  4435  011862  0101               	movlb	1	; () banked
  4436  011864  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  4437  011866  0E0A               	movlw	10
  4438  011868  6FF9               	movwf	Delay_ms@time& (0+255),b
  4439  01186A  EC95  F08C         	call	_Delay_ms	;wreg free
  4440  01186E  0012               	return		;funcret
  4441  011870                     __end_of_pin_reset:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           indf1	equ	0xFE7
  4453                           postdec1	equ	0xFE5
  4454                           fsr1h	equ	0xFE2
  4455                           fsr1l	equ	0xFE1
  4456                           indf2	equ	0xFDF
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _nonbeacon_PAN_coordinator_device *****************
  4462 ;; Defined at:
  4463 ;;		line 236 in file "zigbee.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  temp            1    4[BANK1 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;Total ram usage:        1 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:   10
  4484 ;; This function calls:
  4485 ;;		_write_ZIGBEE_short
  4486 ;; This function is called by:
  4487 ;;		_main
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text16
  4492  011598                     __ptext16:
  4493                           	opt stack 0
  4494  011598                     _nonbeacon_PAN_coordinator_device:
  4495                           	opt stack 20
  4496                           
  4497                           ;zigbee.c: 237: unsigned char temp = 0;
  4498                           
  4499                           ;incstack = 0
  4500  011598  0E00               	movlw	0
  4501  01159A  0101               	movlb	1	; () banked
  4502  01159C  6FFD               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4503                           
  4504                           ;zigbee.c: 239: temp=0;
  4505  01159E  0E00               	movlw	0
  4506  0115A0  6FFD               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;zigbee.c: 240: temp = temp | 0x08;
  4510  0115A2  51FD               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4511  0115A4  0908               	iorlw	8
  4512  0115A6  6FFD               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;zigbee.c: 241: write_ZIGBEE_short(0x00, temp);
  4516  0115A8  C1FD  F1FB         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4517  0115AC  0E00               	movlw	0
  4518  0115AE  ECCD  F08B         	call	_write_ZIGBEE_short
  4519                           
  4520                           ;zigbee.c: 243: temp=0;
  4521  0115B2  0E00               	movlw	0
  4522  0115B4  0101               	movlb	1	; () banked
  4523  0115B6  6FFD               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;zigbee.c: 244: temp = temp & 0xDF;
  4527  0115B8  51FD               	movf	nonbeacon_PAN_coordinator_device@temp& (0+255),w,b
  4528  0115BA  0BDF               	andlw	223
  4529  0115BC  6FFD               	movwf	nonbeacon_PAN_coordinator_device@temp& (0+255),b
  4530                           
  4531                           ;zigbee.c: 245: write_ZIGBEE_short(0x11, temp);
  4532  0115BE  C1FD  F1FB         	movff	nonbeacon_PAN_coordinator_device@temp,write_ZIGBEE_short@data_r
  4533  0115C2  0E11               	movlw	17
  4534  0115C4  ECCD  F08B         	call	_write_ZIGBEE_short
  4535                           
  4536                           ;zigbee.c: 247: write_ZIGBEE_short(0x10, 0xFF);
  4537  0115C8  0EFF               	movlw	255
  4538  0115CA  0101               	movlb	1	; () banked
  4539  0115CC  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  4540  0115CE  0E10               	movlw	16
  4541  0115D0  ECCD  F08B         	call	_write_ZIGBEE_short
  4542  0115D4  0012               	return		;funcret
  4543  0115D6                     __end_of_nonbeacon_PAN_coordinator_device:
  4544                           	opt stack 0
  4545                           tblptru	equ	0xFF8
  4546                           tblptrh	equ	0xFF7
  4547                           tblptrl	equ	0xFF6
  4548                           tablat	equ	0xFF5
  4549                           prodh	equ	0xFF4
  4550                           prodl	equ	0xFF3
  4551                           intcon	equ	0xFF2
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           indf1	equ	0xFE7
  4555                           postdec1	equ	0xFE5
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           indf2	equ	0xFDF
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function _lcd_off_cursor *****************
  4564 ;; Defined at:
  4565 ;;		line 941 in file "2_April_WaterMeterMain.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:   10
  4586 ;; This function calls:
  4587 ;;		_LcdCmd
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text17
  4594  011A74                     __ptext17:
  4595                           	opt stack 0
  4596  011A74                     _lcd_off_cursor:
  4597                           	opt stack 20
  4598                           
  4599                           ;2_April_WaterMeterMain.c: 943: LcdCmd(0x0C);
  4600                           
  4601                           ;incstack = 0
  4602  011A74  0E0C               	movlw	12
  4603  011A76  EC59  F08C         	call	_LcdCmd
  4604  011A7A  0012               	return		;funcret
  4605  011A7C                     __end_of_lcd_off_cursor:
  4606                           	opt stack 0
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           indf1	equ	0xFE7
  4617                           postdec1	equ	0xFE5
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           indf2	equ	0xFDF
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _lcd_clear *****************
  4626 ;; Defined at:
  4627 ;;		line 969 in file "2_April_WaterMeterMain.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:   10
  4648 ;; This function calls:
  4649 ;;		_LcdCmd
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;;		_Module_Init
  4653 ;;		_DeleteAllSms
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text18
  4658  011A7C                     __ptext18:
  4659                           	opt stack 0
  4660  011A7C                     _lcd_clear:
  4661                           	opt stack 20
  4662                           
  4663                           ;2_April_WaterMeterMain.c: 971: LcdCmd(0x01);
  4664                           
  4665                           ;incstack = 0
  4666  011A7C  0E01               	movlw	1
  4667  011A7E  EC59  F08C         	call	_LcdCmd
  4668  011A82  0012               	return		;funcret
  4669  011A84                     __end_of_lcd_clear:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           postinc0	equ	0xFEE
  4679                           wreg	equ	0xFE8
  4680                           indf1	equ	0xFE7
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _init_ZIGBEE_nonbeacon *****************
  4690 ;; Defined at:
  4691 ;;		line 76 in file "zigbee.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:   12
  4712 ;; This function calls:
  4713 ;;		_RF_reset
  4714 ;;		_enable_interrupt
  4715 ;;		_init_ZIGBEE_basic
  4716 ;;		_pin_wake
  4717 ;;		_set_CCA_mode
  4718 ;;		_set_RSSI_mode
  4719 ;;		_set_channel
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text19
  4726  011776                     __ptext19:
  4727                           	opt stack 0
  4728  011776                     _init_ZIGBEE_nonbeacon:
  4729                           	opt stack 18
  4730                           
  4731                           ;zigbee.c: 77: init_ZIGBEE_basic();
  4732                           
  4733                           ;incstack = 0
  4734  011776  EC91  F087         	call	_init_ZIGBEE_basic	;wreg free
  4735                           
  4736                           ;zigbee.c: 78: set_CCA_mode(1);
  4737  01177A  0E01               	movlw	1
  4738  01177C  ECD6  F085         	call	_set_CCA_mode
  4739                           
  4740                           ;zigbee.c: 79: set_RSSI_mode(2);
  4741  011780  0E02               	movlw	2
  4742  011782  EC4B  F08A         	call	_set_RSSI_mode
  4743                           
  4744                           ;zigbee.c: 80: enable_interrupt();
  4745  011786  EC18  F08D         	call	_enable_interrupt	;wreg free
  4746                           
  4747                           ;zigbee.c: 81: set_channel(15);
  4748  01178A  0E0F               	movlw	15
  4749  01178C  ECC9  F083         	call	_set_channel
  4750                           
  4751                           ;zigbee.c: 82: pin_wake();
  4752  011790  ECED  F08C         	call	_pin_wake	;wreg free
  4753                           
  4754                           ;zigbee.c: 83: RF_reset();
  4755  011794  EC93  F08B         	call	_RF_reset	;wreg free
  4756  011798  0012               	return		;funcret
  4757  01179A                     __end_of_init_ZIGBEE_nonbeacon:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           indf1	equ	0xFE7
  4769                           postdec1	equ	0xFE5
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _set_channel *****************
  4778 ;; Defined at:
  4779 ;;		line 172 in file "zigbee.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  channel_numb    1    wreg     unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  channel_numb    1   23[BANK2 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:        1 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:   11
  4800 ;; This function calls:
  4801 ;;		_RF_reset
  4802 ;;		_write_ZIGBEE_long
  4803 ;; This function is called by:
  4804 ;;		_init_ZIGBEE_nonbeacon
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text20
  4809  010792                     __ptext20:
  4810                           	opt stack 0
  4811  010792                     _set_channel:
  4812                           	opt stack 18
  4813                           
  4814                           ;incstack = 0
  4815                           ;set_channel@channel_number stored from wreg
  4816  010792  0102               	movlb	2	; () banked
  4817  010794  6F7B               	movwf	set_channel@channel_number& (0+255),b
  4818                           
  4819                           ;zigbee.c: 174: if((channel_number > 26) || (channel_number < 11))
  4820  010796  0E1B               	movlw	27
  4821  010798  0102               	movlb	2	; () banked
  4822  01079A  617B               	cpfslt	set_channel@channel_number& (0+255),b
  4823  01079C  D003               	goto	u2520
  4824                           
  4825                           ; BSR set to: 2
  4826  01079E  0E0B               	movlw	11
  4827  0107A0  617B               	cpfslt	set_channel@channel_number& (0+255),b
  4828  0107A2  D0A3               	goto	l957
  4829  0107A4                     u2520:
  4830                           
  4831                           ; BSR set to: 2
  4832                           ;zigbee.c: 175: channel_number = 11;
  4833                           
  4834                           ; BSR set to: 2
  4835  0107A4  0E0B               	movlw	11
  4836  0107A6  6F7B               	movwf	set_channel@channel_number& (0+255),b
  4837                           
  4838                           ; BSR set to: 2
  4839                           ;zigbee.c: 177: switch(channel_number)
  4840  0107A8  D0A0               	goto	l957
  4841  0107AA                     
  4842                           ; BSR set to: 2
  4843                           ;zigbee.c: 180: write_ZIGBEE_long(0x200, 0x02);
  4844                           
  4845                           ; BSR set to: 2
  4846  0107AA  0E02               	movlw	2
  4847  0107AC  0101               	movlb	1	; () banked
  4848  0107AE  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4849  0107B0  0E00               	movlw	0
  4850  0107B2  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4851  0107B4  0E02               	movlw	2
  4852  0107B6  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4853  0107B8  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4854                           
  4855                           ;zigbee.c: 181: break;
  4856  0107BC  D0C8               	goto	l959
  4857  0107BE                     
  4858                           ;zigbee.c: 184: write_ZIGBEE_long(0x200, 0x12);
  4859  0107BE  0E02               	movlw	2
  4860  0107C0  0101               	movlb	1	; () banked
  4861  0107C2  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4862  0107C4  0E00               	movlw	0
  4863  0107C6  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4864  0107C8  0E12               	movlw	18
  4865  0107CA  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4866  0107CC  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4867                           
  4868                           ;zigbee.c: 185: break;
  4869  0107D0  D0BE               	goto	l959
  4870  0107D2                     
  4871                           ;zigbee.c: 188: write_ZIGBEE_long(0x200, 0x22);
  4872  0107D2  0E02               	movlw	2
  4873  0107D4  0101               	movlb	1	; () banked
  4874  0107D6  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4875  0107D8  0E00               	movlw	0
  4876  0107DA  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4877  0107DC  0E22               	movlw	34
  4878  0107DE  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4879  0107E0  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4880                           
  4881                           ;zigbee.c: 189: break;
  4882  0107E4  D0B4               	goto	l959
  4883  0107E6                     
  4884                           ;zigbee.c: 191: write_ZIGBEE_long(0x200, 0x32);
  4885  0107E6  0E02               	movlw	2
  4886  0107E8  0101               	movlb	1	; () banked
  4887  0107EA  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4888  0107EC  0E00               	movlw	0
  4889  0107EE  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4890  0107F0  0E32               	movlw	50
  4891  0107F2  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4892  0107F4  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4893                           
  4894                           ;zigbee.c: 192: break;
  4895  0107F8  D0AA               	goto	l959
  4896  0107FA                     
  4897                           ;zigbee.c: 194: write_ZIGBEE_long(0x200, 0x42);
  4898  0107FA  0E02               	movlw	2
  4899  0107FC  0101               	movlb	1	; () banked
  4900  0107FE  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4901  010800  0E00               	movlw	0
  4902  010802  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4903  010804  0E42               	movlw	66
  4904  010806  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4905  010808  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4906                           
  4907                           ;zigbee.c: 195: break;
  4908  01080C  D0A0               	goto	l959
  4909  01080E                     
  4910                           ;zigbee.c: 197: write_ZIGBEE_long(0x200, 0x52);
  4911  01080E  0E02               	movlw	2
  4912  010810  0101               	movlb	1	; () banked
  4913  010812  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4914  010814  0E00               	movlw	0
  4915  010816  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4916  010818  0E52               	movlw	82
  4917  01081A  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4918  01081C  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4919                           
  4920                           ;zigbee.c: 198: break;
  4921  010820  D096               	goto	l959
  4922  010822                     
  4923                           ;zigbee.c: 200: write_ZIGBEE_long(0x200, 0x62);
  4924  010822  0E02               	movlw	2
  4925  010824  0101               	movlb	1	; () banked
  4926  010826  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4927  010828  0E00               	movlw	0
  4928  01082A  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4929  01082C  0E62               	movlw	98
  4930  01082E  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4931  010830  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4932                           
  4933                           ;zigbee.c: 201: break;
  4934  010834  D08C               	goto	l959
  4935  010836                     
  4936                           ;zigbee.c: 203: write_ZIGBEE_long(0x200, 0x72);
  4937  010836  0E02               	movlw	2
  4938  010838  0101               	movlb	1	; () banked
  4939  01083A  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4940  01083C  0E00               	movlw	0
  4941  01083E  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4942  010840  0E72               	movlw	114
  4943  010842  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4944  010844  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4945                           
  4946                           ;zigbee.c: 204: break;
  4947  010848  D082               	goto	l959
  4948  01084A                     
  4949                           ;zigbee.c: 206: write_ZIGBEE_long(0x200, 0x82);
  4950  01084A  0E02               	movlw	2
  4951  01084C  0101               	movlb	1	; () banked
  4952  01084E  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4953  010850  0E00               	movlw	0
  4954  010852  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4955  010854  0E82               	movlw	130
  4956  010856  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4957  010858  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4958                           
  4959                           ;zigbee.c: 207: break;
  4960  01085C  D078               	goto	l959
  4961  01085E                     
  4962                           ;zigbee.c: 209: write_ZIGBEE_long(0x200, 0x92);
  4963  01085E  0E02               	movlw	2
  4964  010860  0101               	movlb	1	; () banked
  4965  010862  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4966  010864  0E00               	movlw	0
  4967  010866  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4968  010868  0E92               	movlw	146
  4969  01086A  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4970  01086C  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4971                           
  4972                           ;zigbee.c: 210: break;
  4973  010870  D06E               	goto	l959
  4974  010872                     
  4975                           ;zigbee.c: 212: write_ZIGBEE_long(0x200, 0xA2);
  4976  010872  0E02               	movlw	2
  4977  010874  0101               	movlb	1	; () banked
  4978  010876  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4979  010878  0E00               	movlw	0
  4980  01087A  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4981  01087C  0EA2               	movlw	162
  4982  01087E  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4983  010880  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4984                           
  4985                           ;zigbee.c: 213: break;
  4986  010884  D064               	goto	l959
  4987  010886                     
  4988                           ;zigbee.c: 215: write_ZIGBEE_long(0x200, 0xB2);
  4989  010886  0E02               	movlw	2
  4990  010888  0101               	movlb	1	; () banked
  4991  01088A  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  4992  01088C  0E00               	movlw	0
  4993  01088E  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  4994  010890  0EB2               	movlw	178
  4995  010892  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  4996  010894  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  4997                           
  4998                           ;zigbee.c: 216: break;
  4999  010898  D05A               	goto	l959
  5000  01089A                     
  5001                           ;zigbee.c: 218: write_ZIGBEE_long(0x200, 0xC2);
  5002  01089A  0E02               	movlw	2
  5003  01089C  0101               	movlb	1	; () banked
  5004  01089E  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5005  0108A0  0E00               	movlw	0
  5006  0108A2  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5007  0108A4  0EC2               	movlw	194
  5008  0108A6  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5009  0108A8  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5010                           
  5011                           ;zigbee.c: 219: break;
  5012  0108AC  D050               	goto	l959
  5013  0108AE                     
  5014                           ;zigbee.c: 221: write_ZIGBEE_long(0x200, 0xD2);
  5015  0108AE  0E02               	movlw	2
  5016  0108B0  0101               	movlb	1	; () banked
  5017  0108B2  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5018  0108B4  0E00               	movlw	0
  5019  0108B6  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5020  0108B8  0ED2               	movlw	210
  5021  0108BA  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5022  0108BC  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5023                           
  5024                           ;zigbee.c: 222: break;
  5025  0108C0  D046               	goto	l959
  5026  0108C2                     
  5027                           ;zigbee.c: 224: write_ZIGBEE_long(0x200, 0xE2);
  5028  0108C2  0E02               	movlw	2
  5029  0108C4  0101               	movlb	1	; () banked
  5030  0108C6  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5031  0108C8  0E00               	movlw	0
  5032  0108CA  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5033  0108CC  0EE2               	movlw	226
  5034  0108CE  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5035  0108D0  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5036                           
  5037                           ;zigbee.c: 225: break;
  5038  0108D4  D03C               	goto	l959
  5039  0108D6                     
  5040                           ;zigbee.c: 227: write_ZIGBEE_long(0x200, 0xF2);
  5041  0108D6  0E02               	movlw	2
  5042  0108D8  0101               	movlb	1	; () banked
  5043  0108DA  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5044  0108DC  0E00               	movlw	0
  5045  0108DE  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5046  0108E0  0EF2               	movlw	242
  5047  0108E2  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5048  0108E4  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5049                           
  5050                           ;zigbee.c: 229: }
  5051                           
  5052                           ;zigbee.c: 228: break;
  5053  0108E8  D032               	goto	l959
  5054  0108EA                     l957:
  5055  0108EA  0102               	movlb	2	; () banked
  5056  0108EC  517B               	movf	set_channel@channel_number& (0+255),w,b
  5057                           
  5058                           ; Switch size 1, requested type "space"
  5059                           ; Number of cases is 16, Range of values is 11 to 26
  5060                           ; switch strategies available:
  5061                           ; Name         Instructions Cycles
  5062                           ; simple_byte           49    25 (average)
  5063                           ;	Chosen strategy is simple_byte
  5064  0108EE  0A0B               	xorlw	11	; case 11
  5065  0108F0  B4D8               	btfsc	status,2,c
  5066  0108F2  D75B               	goto	l958
  5067  0108F4  0A07               	xorlw	7	; case 12
  5068  0108F6  B4D8               	btfsc	status,2,c
  5069  0108F8  D762               	goto	l960
  5070  0108FA  0A01               	xorlw	1	; case 13
  5071  0108FC  B4D8               	btfsc	status,2,c
  5072  0108FE  D769               	goto	l961
  5073  010900  0A03               	xorlw	3	; case 14
  5074  010902  B4D8               	btfsc	status,2,c
  5075  010904  D770               	goto	l962
  5076  010906  0A01               	xorlw	1	; case 15
  5077  010908  B4D8               	btfsc	status,2,c
  5078  01090A  D777               	goto	l963
  5079  01090C  0A1F               	xorlw	31	; case 16
  5080  01090E  B4D8               	btfsc	status,2,c
  5081  010910  D77E               	goto	l964
  5082  010912  0A01               	xorlw	1	; case 17
  5083  010914  B4D8               	btfsc	status,2,c
  5084  010916  D785               	goto	l965
  5085  010918  0A03               	xorlw	3	; case 18
  5086  01091A  B4D8               	btfsc	status,2,c
  5087  01091C  D78C               	goto	l966
  5088  01091E  0A01               	xorlw	1	; case 19
  5089  010920  B4D8               	btfsc	status,2,c
  5090  010922  D793               	goto	l967
  5091  010924  0A07               	xorlw	7	; case 20
  5092  010926  B4D8               	btfsc	status,2,c
  5093  010928  D79A               	goto	l968
  5094  01092A  0A01               	xorlw	1	; case 21
  5095  01092C  B4D8               	btfsc	status,2,c
  5096  01092E  D7A1               	goto	l969
  5097  010930  0A03               	xorlw	3	; case 22
  5098  010932  B4D8               	btfsc	status,2,c
  5099  010934  D7A8               	goto	l970
  5100  010936  0A01               	xorlw	1	; case 23
  5101  010938  B4D8               	btfsc	status,2,c
  5102  01093A  D7AF               	goto	l971
  5103  01093C  0A0F               	xorlw	15	; case 24
  5104  01093E  B4D8               	btfsc	status,2,c
  5105  010940  D7B6               	goto	l972
  5106  010942  0A01               	xorlw	1	; case 25
  5107  010944  B4D8               	btfsc	status,2,c
  5108  010946  D7BD               	goto	l973
  5109  010948  0A03               	xorlw	3	; case 26
  5110  01094A  B4D8               	btfsc	status,2,c
  5111  01094C  D7C4               	goto	l974
  5112  01094E                     l959:
  5113                           
  5114                           ;zigbee.c: 230: RF_reset();
  5115                           
  5116                           ; BSR set to: 2
  5117  01094E  EC93  F08B         	call	_RF_reset	;wreg free
  5118  010952  0012               	return		;funcret
  5119  010954                     __end_of_set_channel:
  5120                           	opt stack 0
  5121                           tblptru	equ	0xFF8
  5122                           tblptrh	equ	0xFF7
  5123                           tblptrl	equ	0xFF6
  5124                           tablat	equ	0xFF5
  5125                           prodh	equ	0xFF4
  5126                           prodl	equ	0xFF3
  5127                           intcon	equ	0xFF2
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           indf1	equ	0xFE7
  5131                           postdec1	equ	0xFE5
  5132                           fsr1h	equ	0xFE2
  5133                           fsr1l	equ	0xFE1
  5134                           indf2	equ	0xFDF
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _RF_reset *****************
  5140 ;; Defined at:
  5141 ;;		line 53 in file "zigbee.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:   10
  5162 ;; This function calls:
  5163 ;;		_Delay_ms
  5164 ;;		_write_ZIGBEE_short
  5165 ;; This function is called by:
  5166 ;;		_main
  5167 ;;		_init_ZIGBEE_nonbeacon
  5168 ;;		_set_channel
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text21
  5173  011726                     __ptext21:
  5174                           	opt stack 0
  5175  011726                     _RF_reset:
  5176                           	opt stack 18
  5177                           
  5178                           ;zigbee.c: 54: write_ZIGBEE_short(0x36,0x04);
  5179                           
  5180                           ;incstack = 0
  5181  011726  0E04               	movlw	4
  5182  011728  0101               	movlb	1	; () banked
  5183  01172A  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5184  01172C  0E36               	movlw	54
  5185  01172E  ECCD  F08B         	call	_write_ZIGBEE_short
  5186                           
  5187                           ;zigbee.c: 55: write_ZIGBEE_short(0x36,(!0x04));
  5188  011732  0E00               	movlw	0
  5189  011734  0101               	movlb	1	; () banked
  5190  011736  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5191  011738  0E36               	movlw	54
  5192  01173A  ECCD  F08B         	call	_write_ZIGBEE_short
  5193                           
  5194                           ;zigbee.c: 56: Delay_ms(20);
  5195  01173E  0E00               	movlw	0
  5196  011740  0101               	movlb	1	; () banked
  5197  011742  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  5198  011744  0E14               	movlw	20
  5199  011746  6FF9               	movwf	Delay_ms@time& (0+255),b
  5200  011748  EC95  F08C         	call	_Delay_ms	;wreg free
  5201  01174C  0012               	return		;funcret
  5202  01174E                     __end_of_RF_reset:
  5203                           	opt stack 0
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           postinc0	equ	0xFEE
  5212                           wreg	equ	0xFE8
  5213                           indf1	equ	0xFE7
  5214                           postdec1	equ	0xFE5
  5215                           fsr1h	equ	0xFE2
  5216                           fsr1l	equ	0xFE1
  5217                           indf2	equ	0xFDF
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function _set_RSSI_mode *****************
  5223 ;; Defined at:
  5224 ;;		line 150 in file "zigbee.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  RSSI_mode       1    wreg     unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  RSSI_mode       1    4[BANK1 ] unsigned char 
  5229 ;;  temp            1    5[BANK1 ] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;Total ram usage:        2 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:   10
  5246 ;; This function calls:
  5247 ;;		_write_ZIGBEE_short
  5248 ;; This function is called by:
  5249 ;;		_init_ZIGBEE_nonbeacon
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text22
  5254  011496                     __ptext22:
  5255                           	opt stack 0
  5256  011496                     _set_RSSI_mode:
  5257                           	opt stack 19
  5258                           
  5259                           ;incstack = 0
  5260                           ;set_RSSI_mode@RSSI_mode stored from wreg
  5261  011496  0101               	movlb	1	; () banked
  5262  011498  6FFD               	movwf	set_RSSI_mode@RSSI_mode& (0+255),b
  5263                           
  5264                           ;zigbee.c: 152: unsigned char temp = 0;
  5265  01149A  0E00               	movlw	0
  5266  01149C  0101               	movlb	1	; () banked
  5267  01149E  6FFE               	movwf	set_RSSI_mode@temp& (0+255),b
  5268                           
  5269                           ;zigbee.c: 153: switch(RSSI_mode)
  5270  0114A0  D012               	goto	l944
  5271  0114A2                     
  5272                           ; BSR set to: 1
  5273                           ;zigbee.c: 156: {
  5274                           ;zigbee.c: 157: temp=0;
  5275                           
  5276                           ; BSR set to: 1
  5277  0114A2  0E00               	movlw	0
  5278  0114A4  6FFE               	movwf	set_RSSI_mode@temp& (0+255),b
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;zigbee.c: 158: temp = temp | 0x80;
  5282  0114A6  51FE               	movf	set_RSSI_mode@temp& (0+255),w,b
  5283  0114A8  0980               	iorlw	128
  5284  0114AA  6FFE               	movwf	set_RSSI_mode@temp& (0+255),b
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;zigbee.c: 159: write_ZIGBEE_short(0x3E, temp);
  5288  0114AC  C1FE  F1FB         	movff	set_RSSI_mode@temp,write_ZIGBEE_short@data_r
  5289  0114B0  0E3E               	movlw	62
  5290  0114B2  ECCD  F08B         	call	_write_ZIGBEE_short
  5291                           
  5292                           ;zigbee.c: 160: }
  5293                           ;zigbee.c: 161: break;
  5294  0114B6  0012               	return	
  5295  0114B8                     
  5296                           ;zigbee.c: 164: write_ZIGBEE_short(0x3E, 0x40);
  5297  0114B8  0E40               	movlw	64
  5298  0114BA  0101               	movlb	1	; () banked
  5299  0114BC  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5300  0114BE  0E3E               	movlw	62
  5301  0114C0  ECCD  F08B         	call	_write_ZIGBEE_short
  5302                           
  5303                           ;zigbee.c: 166: }
  5304                           
  5305                           ;zigbee.c: 165: break;
  5306  0114C4  0012               	return	
  5307  0114C6                     l944:
  5308  0114C6  0101               	movlb	1	; () banked
  5309  0114C8  51FD               	movf	set_RSSI_mode@RSSI_mode& (0+255),w,b
  5310                           
  5311                           ; Switch size 1, requested type "space"
  5312                           ; Number of cases is 2, Range of values is 1 to 2
  5313                           ; switch strategies available:
  5314                           ; Name         Instructions Cycles
  5315                           ; simple_byte            7     4 (average)
  5316                           ;	Chosen strategy is simple_byte
  5317  0114CA  0A01               	xorlw	1	; case 1
  5318  0114CC  B4D8               	btfsc	status,2,c
  5319  0114CE  D7E9               	goto	l945
  5320  0114D0  0A03               	xorlw	3	; case 2
  5321  0114D2  A4D8               	btfss	status,2,c
  5322  0114D4  0012               	return	
  5323  0114D6  D7F0               	goto	l947
  5324  0114D8                     __end_of_set_RSSI_mode:
  5325                           	opt stack 0
  5326                           tblptru	equ	0xFF8
  5327                           tblptrh	equ	0xFF7
  5328                           tblptrl	equ	0xFF6
  5329                           tablat	equ	0xFF5
  5330                           prodh	equ	0xFF4
  5331                           prodl	equ	0xFF3
  5332                           intcon	equ	0xFF2
  5333                           postinc0	equ	0xFEE
  5334                           wreg	equ	0xFE8
  5335                           indf1	equ	0xFE7
  5336                           postdec1	equ	0xFE5
  5337                           fsr1h	equ	0xFE2
  5338                           fsr1l	equ	0xFE1
  5339                           indf2	equ	0xFDF
  5340                           fsr2h	equ	0xFDA
  5341                           fsr2l	equ	0xFD9
  5342                           status	equ	0xFD8
  5343                           
  5344 ;; *************** function _set_CCA_mode *****************
  5345 ;; Defined at:
  5346 ;;		line 103 in file "zigbee.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  CCA_mode        1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  CCA_mode        1    4[BANK1 ] unsigned char 
  5351 ;;  temp            1    5[BANK1 ] unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;Total ram usage:        2 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:   10
  5368 ;; This function calls:
  5369 ;;		_write_ZIGBEE_short
  5370 ;; This function is called by:
  5371 ;;		_init_ZIGBEE_nonbeacon
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text23
  5376  010BAC                     __ptext23:
  5377                           	opt stack 0
  5378  010BAC                     _set_CCA_mode:
  5379                           	opt stack 19
  5380                           
  5381                           ;incstack = 0
  5382                           ;set_CCA_mode@CCA_mode stored from wreg
  5383  010BAC  0101               	movlb	1	; () banked
  5384  010BAE  6FFD               	movwf	set_CCA_mode@CCA_mode& (0+255),b
  5385                           
  5386                           ;zigbee.c: 105: unsigned char temp = 0;
  5387  010BB0  0E00               	movlw	0
  5388  010BB2  0101               	movlb	1	; () banked
  5389  010BB4  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5390                           
  5391                           ;zigbee.c: 106: switch(CCA_mode)
  5392  010BB6  D051               	goto	l936
  5393  010BB8                     
  5394                           ; BSR set to: 1
  5395                           ;zigbee.c: 109: {
  5396                           ;zigbee.c: 110: temp=0;
  5397                           
  5398                           ; BSR set to: 1
  5399  010BB8  0E00               	movlw	0
  5400  010BBA  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;zigbee.c: 111: temp = temp | 0x80;
  5404  010BBC  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5405  010BBE  0980               	iorlw	128
  5406  010BC0  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;zigbee.c: 112: temp = temp & 0xDF;
  5410  010BC2  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5411  010BC4  0BDF               	andlw	223
  5412  010BC6  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5413                           
  5414                           ; BSR set to: 1
  5415                           ;zigbee.c: 113: write_ZIGBEE_short(0x3A, temp);
  5416  010BC8  C1FE  F1FB         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5417  010BCC  0E3A               	movlw	58
  5418  010BCE  ECCD  F08B         	call	_write_ZIGBEE_short
  5419                           
  5420                           ;zigbee.c: 114: write_ZIGBEE_short(0x3F, 0x60);
  5421  010BD2  0E60               	movlw	96
  5422  010BD4  0101               	movlb	1	; () banked
  5423  010BD6  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5424  010BD8  0E3F               	movlw	63
  5425  010BDA  ECCD  F08B         	call	_write_ZIGBEE_short
  5426                           
  5427                           ;zigbee.c: 115: }
  5428                           ;zigbee.c: 116: break;
  5429  010BDE  0012               	return	
  5430  010BE0                     
  5431                           ;zigbee.c: 119: {
  5432                           ;zigbee.c: 120: temp=0;
  5433  010BE0  0E00               	movlw	0
  5434  010BE2  0101               	movlb	1	; () banked
  5435  010BE4  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;zigbee.c: 121: temp = temp | 0x40;
  5439  010BE6  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5440  010BE8  0940               	iorlw	64
  5441  010BEA  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5442                           
  5443                           ; BSR set to: 1
  5444                           ;zigbee.c: 122: temp = temp & 0x7F;
  5445  010BEC  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5446  010BEE  0B7F               	andlw	127
  5447  010BF0  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5448                           
  5449                           ; BSR set to: 1
  5450                           ;zigbee.c: 123: write_ZIGBEE_short(0x3A, temp);
  5451  010BF2  C1FE  F1FB         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5452  010BF6  0E3A               	movlw	58
  5453  010BF8  ECCD  F08B         	call	_write_ZIGBEE_short
  5454                           
  5455                           ;zigbee.c: 125: temp=0;
  5456  010BFC  0E00               	movlw	0
  5457  010BFE  0101               	movlb	1	; () banked
  5458  010C00  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5459                           
  5460                           ; BSR set to: 1
  5461                           ;zigbee.c: 126: temp = temp | 0x38;
  5462  010C02  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5463  010C04  0938               	iorlw	56
  5464  010C06  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5465                           
  5466                           ; BSR set to: 1
  5467                           ;zigbee.c: 127: temp = temp & 0xFB;
  5468  010C08  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5469  010C0A  0BFB               	andlw	251
  5470  010C0C  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5471                           
  5472                           ;zigbee.c: 128: write_ZIGBEE_short(0x3A, temp);
  5473  010C0E  C1FE  F1FB         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5474  010C12  0E3A               	movlw	58
  5475  010C14  ECCD  F08B         	call	_write_ZIGBEE_short
  5476                           
  5477                           ;zigbee.c: 129: }
  5478                           ;zigbee.c: 130: break;
  5479  010C18  0012               	return	
  5480  010C1A                     
  5481                           ;zigbee.c: 133: {
  5482                           ;zigbee.c: 134: temp=0;
  5483  010C1A  0E00               	movlw	0
  5484  010C1C  0101               	movlb	1	; () banked
  5485  010C1E  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;zigbee.c: 135: temp = temp | 0xC0;
  5489  010C20  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5490  010C22  09C0               	iorlw	192
  5491  010C24  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;zigbee.c: 136: write_ZIGBEE_short(0x3A, temp);
  5495  010C26  C1FE  F1FB         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5496  010C2A  0E3A               	movlw	58
  5497  010C2C  ECCD  F08B         	call	_write_ZIGBEE_short
  5498                           
  5499                           ;zigbee.c: 138: temp=0;
  5500  010C30  0E00               	movlw	0
  5501  010C32  0101               	movlb	1	; () banked
  5502  010C34  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;zigbee.c: 139: temp = temp | 0x38;
  5506  010C36  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5507  010C38  0938               	iorlw	56
  5508  010C3A  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5509                           
  5510                           ; BSR set to: 1
  5511                           ;zigbee.c: 140: temp = temp & 0xFB;
  5512  010C3C  51FE               	movf	set_CCA_mode@temp& (0+255),w,b
  5513  010C3E  0BFB               	andlw	251
  5514  010C40  6FFE               	movwf	set_CCA_mode@temp& (0+255),b
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;zigbee.c: 141: write_ZIGBEE_short(0x3A, temp);
  5518  010C42  C1FE  F1FB         	movff	set_CCA_mode@temp,write_ZIGBEE_short@data_r
  5519  010C46  0E3A               	movlw	58
  5520  010C48  ECCD  F08B         	call	_write_ZIGBEE_short
  5521                           
  5522                           ;zigbee.c: 143: write_ZIGBEE_short(0x3F, 0x60);
  5523  010C4C  0E60               	movlw	96
  5524  010C4E  0101               	movlb	1	; () banked
  5525  010C50  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5526  010C52  0E3F               	movlw	63
  5527  010C54  ECCD  F08B         	call	_write_ZIGBEE_short
  5528                           
  5529                           ;zigbee.c: 146: }
  5530                           
  5531                           ;zigbee.c: 144: }
  5532                           ;zigbee.c: 145: break;
  5533  010C58  0012               	return	
  5534  010C5A                     l936:
  5535  010C5A  0101               	movlb	1	; () banked
  5536  010C5C  51FD               	movf	set_CCA_mode@CCA_mode& (0+255),w,b
  5537                           
  5538                           ; Switch size 1, requested type "space"
  5539                           ; Number of cases is 3, Range of values is 1 to 3
  5540                           ; switch strategies available:
  5541                           ; Name         Instructions Cycles
  5542                           ; simple_byte           10     6 (average)
  5543                           ;	Chosen strategy is simple_byte
  5544  010C5E  0A01               	xorlw	1	; case 1
  5545  010C60  B4D8               	btfsc	status,2,c
  5546  010C62  D7AA               	goto	l937
  5547  010C64  0A03               	xorlw	3	; case 2
  5548  010C66  B4D8               	btfsc	status,2,c
  5549  010C68  D7BB               	goto	l939
  5550  010C6A  0A01               	xorlw	1	; case 3
  5551  010C6C  A4D8               	btfss	status,2,c
  5552  010C6E  0012               	return	
  5553  010C70  D7D4               	goto	l940
  5554  010C72                     __end_of_set_CCA_mode:
  5555                           	opt stack 0
  5556                           tblptru	equ	0xFF8
  5557                           tblptrh	equ	0xFF7
  5558                           tblptrl	equ	0xFF6
  5559                           tablat	equ	0xFF5
  5560                           prodh	equ	0xFF4
  5561                           prodl	equ	0xFF3
  5562                           intcon	equ	0xFF2
  5563                           postinc0	equ	0xFEE
  5564                           wreg	equ	0xFE8
  5565                           indf1	equ	0xFE7
  5566                           postdec1	equ	0xFE5
  5567                           fsr1h	equ	0xFE2
  5568                           fsr1l	equ	0xFE1
  5569                           indf2	equ	0xFDF
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function _pin_wake *****************
  5575 ;; Defined at:
  5576 ;;		line 232 in file "zigbee.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        0 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    9
  5597 ;; This function calls:
  5598 ;;		_Delay_ms
  5599 ;; This function is called by:
  5600 ;;		_main
  5601 ;;		_init_ZIGBEE_nonbeacon
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text24
  5606  0119DA                     __ptext24:
  5607                           	opt stack 0
  5608  0119DA                     _pin_wake:
  5609                           	opt stack 21
  5610                           
  5611                           ;zigbee.c: 233: PORTFbits.RF4=1;
  5612                           
  5613                           ;incstack = 0
  5614  0119DA  8885               	bsf	3973,4,c	;volatile
  5615                           
  5616                           ;zigbee.c: 234: Delay_ms(10);
  5617  0119DC  0E00               	movlw	0
  5618  0119DE  0101               	movlb	1	; () banked
  5619  0119E0  6FFA               	movwf	(Delay_ms@time+1)& (0+255),b
  5620  0119E2  0E0A               	movlw	10
  5621  0119E4  6FF9               	movwf	Delay_ms@time& (0+255),b
  5622  0119E6  EC95  F08C         	call	_Delay_ms	;wreg free
  5623  0119EA  0012               	return		;funcret
  5624  0119EC                     __end_of_pin_wake:
  5625                           	opt stack 0
  5626                           tblptru	equ	0xFF8
  5627                           tblptrh	equ	0xFF7
  5628                           tblptrl	equ	0xFF6
  5629                           tablat	equ	0xFF5
  5630                           prodh	equ	0xFF4
  5631                           prodl	equ	0xFF3
  5632                           intcon	equ	0xFF2
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           indf1	equ	0xFE7
  5636                           postdec1	equ	0xFE5
  5637                           fsr1h	equ	0xFE2
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function _Delay_ms *****************
  5645 ;; Defined at:
  5646 ;;		line 476 in file "zigbee.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  time            2    0[BANK1 ] unsigned int 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  y               2    2[BANK1 ] unsigned int 
  5651 ;;  x               2    0        unsigned int 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        4 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    8
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;;		_pin_reset
  5673 ;;		_RF_reset
  5674 ;;		_pin_wake
  5675 ;;		_write_TX_normal_FIFO
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text25
  5680  01192A                     __ptext25:
  5681                           	opt stack 0
  5682  01192A                     _Delay_ms:
  5683                           	opt stack 21
  5684                           
  5685                           ;zigbee.c: 477: unsigned int x,y=0;
  5686                           
  5687                           ;incstack = 0
  5688  01192A  0E00               	movlw	0
  5689  01192C  0101               	movlb	1	; () banked
  5690  01192E  6FFC               	movwf	(Delay_ms@y+1)& (0+255),b
  5691  011930  0E00               	movlw	0
  5692  011932  6FFB               	movwf	Delay_ms@y& (0+255),b
  5693  011934                     
  5694                           ; BSR set to: 1
  5695                           
  5696                           ; BSR set to: 1
  5697                           
  5698                           ; BSR set to: 1
  5699  011934  4BF9               	infsnz	Delay_ms@time& (0+255),f,b
  5700  011936  2BFA               	incf	(Delay_ms@time+1)& (0+255),f,b
  5701  011938  0E10               	movlw	16
  5702  01193A  5DF9               	subwf	Delay_ms@time& (0+255),w,b
  5703  01193C  0E27               	movlw	39
  5704  01193E  59FA               	subwfb	(Delay_ms@time+1)& (0+255),w,b
  5705  011940  B0D8               	btfsc	status,0,c
  5706  011942  0012               	return	
  5707  011944  D7F7               	goto	l1058
  5708  011946                     __end_of_Delay_ms:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           indf1	equ	0xFE7
  5720                           postdec1	equ	0xFE5
  5721                           fsr1h	equ	0xFE2
  5722                           fsr1l	equ	0xFE1
  5723                           indf2	equ	0xFDF
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _init_ZIGBEE_basic *****************
  5729 ;; Defined at:
  5730 ;;		line 86 in file "zigbee.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:   11
  5751 ;; This function calls:
  5752 ;;		_enable_PLL
  5753 ;;		_write_ZIGBEE_long
  5754 ;;		_write_ZIGBEE_short
  5755 ;; This function is called by:
  5756 ;;		_init_ZIGBEE_nonbeacon
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text26
  5761  010F22                     __ptext26:
  5762                           	opt stack 0
  5763  010F22                     _init_ZIGBEE_basic:
  5764                           	opt stack 18
  5765                           
  5766                           ;zigbee.c: 87: write_ZIGBEE_short(0x18, 0x98);
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;incstack = 0
  5770  010F22  0E98               	movlw	152
  5771  010F24  0101               	movlb	1	; () banked
  5772  010F26  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5773  010F28  0E18               	movlw	24
  5774  010F2A  ECCD  F08B         	call	_write_ZIGBEE_short
  5775                           
  5776                           ;zigbee.c: 88: write_ZIGBEE_short(0x2E, 0x95);
  5777  010F2E  0E95               	movlw	149
  5778  010F30  0101               	movlb	1	; () banked
  5779  010F32  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5780  010F34  0E2E               	movlw	46
  5781  010F36  ECCD  F08B         	call	_write_ZIGBEE_short
  5782                           
  5783                           ;zigbee.c: 89: write_ZIGBEE_long(0x201, 0x01);
  5784  010F3A  0E02               	movlw	2
  5785  010F3C  0101               	movlb	1	; () banked
  5786  010F3E  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5787  010F40  0E01               	movlw	1
  5788  010F42  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5789  010F44  0E01               	movlw	1
  5790  010F46  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5791  010F48  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5792                           
  5793                           ;zigbee.c: 90: enable_PLL();
  5794  010F4C  ECD0  F08C         	call	_enable_PLL	;wreg free
  5795                           
  5796                           ;zigbee.c: 91: write_ZIGBEE_long(0x206, 0x90);
  5797  010F50  0E02               	movlw	2
  5798  010F52  0101               	movlb	1	; () banked
  5799  010F54  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5800  010F56  0E06               	movlw	6
  5801  010F58  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5802  010F5A  0E90               	movlw	144
  5803  010F5C  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5804  010F5E  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5805                           
  5806                           ;zigbee.c: 92: write_ZIGBEE_long(0x207, 0x80);
  5807  010F62  0E02               	movlw	2
  5808  010F64  0101               	movlb	1	; () banked
  5809  010F66  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5810  010F68  0E07               	movlw	7
  5811  010F6A  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5812  010F6C  0E80               	movlw	128
  5813  010F6E  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5814  010F70  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5815                           
  5816                           ;zigbee.c: 93: write_ZIGBEE_long(0x208, 0x10);
  5817  010F74  0E02               	movlw	2
  5818  010F76  0101               	movlb	1	; () banked
  5819  010F78  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5820  010F7A  0E08               	movlw	8
  5821  010F7C  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5822  010F7E  0E10               	movlw	16
  5823  010F80  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5824  010F82  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5825                           
  5826                           ;zigbee.c: 94: write_ZIGBEE_short(0x211,0X02);
  5827  010F86  0E02               	movlw	2
  5828  010F88  0101               	movlb	1	; () banked
  5829  010F8A  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  5830  010F8C  0E11               	movlw	17
  5831  010F8E  ECCD  F08B         	call	_write_ZIGBEE_short
  5832                           
  5833                           ;zigbee.c: 95: write_ZIGBEE_long(0x220, 0x21);
  5834  010F92  0E02               	movlw	2
  5835  010F94  0101               	movlb	1	; () banked
  5836  010F96  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5837  010F98  0E20               	movlw	32
  5838  010F9A  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5839  010F9C  0E21               	movlw	33
  5840  010F9E  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5841  010FA0  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5842                           
  5843                           ;zigbee.c: 96: write_ZIGBEE_long(0x22F, 0x0F);
  5844  010FA4  0E02               	movlw	2
  5845  010FA6  0101               	movlb	1	; () banked
  5846  010FA8  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5847  010FAA  0E2F               	movlw	47
  5848  010FAC  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5849  010FAE  0E0F               	movlw	15
  5850  010FB0  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5851  010FB2  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5852  010FB6  0012               	return		;funcret
  5853  010FB8                     __end_of_init_ZIGBEE_basic:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           wreg	equ	0xFE8
  5864                           indf1	equ	0xFE7
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function _enable_PLL *****************
  5874 ;; Defined at:
  5875 ;;		line 100 in file "zigbee.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   10
  5896 ;; This function calls:
  5897 ;;		_write_ZIGBEE_long
  5898 ;; This function is called by:
  5899 ;;		_init_ZIGBEE_basic
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text27
  5904  0119A0                     __ptext27:
  5905                           	opt stack 0
  5906  0119A0                     _enable_PLL:
  5907                           	opt stack 18
  5908                           
  5909                           ;zigbee.c: 101: write_ZIGBEE_long(0x202, 0x80);
  5910                           
  5911                           ;incstack = 0
  5912  0119A0  0E02               	movlw	2
  5913  0119A2  0101               	movlb	1	; () banked
  5914  0119A4  6FFC               	movwf	(write_ZIGBEE_long@address+1)& (0+255),b
  5915  0119A6  0E02               	movlw	2
  5916  0119A8  6FFB               	movwf	write_ZIGBEE_long@address& (0+255),b
  5917  0119AA  0E80               	movlw	128
  5918  0119AC  6FFD               	movwf	write_ZIGBEE_long@data_r& (0+255),b
  5919  0119AE  EC12  F089         	call	_write_ZIGBEE_long	;wreg free
  5920  0119B2  0012               	return		;funcret
  5921  0119B4                     __end_of_enable_PLL:
  5922                           	opt stack 0
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           prodh	equ	0xFF4
  5928                           prodl	equ	0xFF3
  5929                           intcon	equ	0xFF2
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           indf1	equ	0xFE7
  5933                           postdec1	equ	0xFE5
  5934                           fsr1h	equ	0xFE2
  5935                           fsr1l	equ	0xFE1
  5936                           indf2	equ	0xFDF
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _write_ZIGBEE_long *****************
  5942 ;; Defined at:
  5943 ;;		line 415 in file "zigbee.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  address         2    2[BANK1 ] unsigned int 
  5946 ;;  data_r          1    4[BANK1 ] unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  address_low     1   22[BANK2 ] unsigned char 
  5949 ;;  address_high    1   21[BANK2 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5959 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Totals:         0       0       5       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;Total ram usage:        7 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    9
  5966 ;; This function calls:
  5967 ;;		_SPI_Write
  5968 ;; This function is called by:
  5969 ;;		_init_ZIGBEE_basic
  5970 ;;		_enable_PLL
  5971 ;;		_set_channel
  5972 ;;		_set_TX_power
  5973 ;;		_write_TX_normal_FIFO
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text28
  5978  011224                     __ptext28:
  5979                           	opt stack 0
  5980  011224                     _write_ZIGBEE_long:
  5981                           	opt stack 20
  5982                           
  5983                           ;zigbee.c: 416: unsigned char address_high = 0, address_low = 0;
  5984                           
  5985                           ;incstack = 0
  5986  011224  0E00               	movlw	0
  5987  011226  0102               	movlb	2	; () banked
  5988  011228  6F79               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  5989  01122A  0E00               	movlw	0
  5990  01122C  6F7A               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  5991                           
  5992                           ; BSR set to: 2
  5993                           ;zigbee.c: 418: PORTCbits.RC0=0;
  5994  01122E  9082               	bcf	3970,0,c	;volatile
  5995                           
  5996                           ; BSR set to: 2
  5997                           ;zigbee.c: 419: address_high = (((unsigned char)(address >> 3)) & 0b01111111) | 0x80;
  5998  011230  C1FB  F1FE         	movff	write_ZIGBEE_long@address,??_write_ZIGBEE_long
  5999  011234  C1FC  F1FF         	movff	write_ZIGBEE_long@address+1,??_write_ZIGBEE_long+1
  6000  011238  0101               	movlb	1	; () banked
  6001  01123A  90D8               	bcf	status,0,c
  6002  01123C  33FF               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  6003  01123E  33FE               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  6004  011240  90D8               	bcf	status,0,c
  6005  011242  33FF               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  6006  011244  33FE               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  6007  011246  90D8               	bcf	status,0,c
  6008  011248  33FF               	rrcf	(??_write_ZIGBEE_long+1)& (0+255),f,b
  6009  01124A  33FE               	rrcf	??_write_ZIGBEE_long& (0+255),f,b
  6010  01124C  51FE               	movf	??_write_ZIGBEE_long& (0+255),w,b
  6011  01124E  0B7F               	andlw	127
  6012  011250  0980               	iorlw	128
  6013  011252  0102               	movlb	2	; () banked
  6014  011254  6F79               	movwf	write_ZIGBEE_long@address_high& (0+255),b
  6015                           
  6016                           ; BSR set to: 2
  6017                           ;zigbee.c: 420: address_low = (((unsigned char)(address << 5)) & 0b11100000) | 0x10;
  6018  011256  0101               	movlb	1	; () banked
  6019  011258  39FB               	swapf	write_ZIGBEE_long@address& (0+255),w,b
  6020  01125A  46E8               	rlncf	wreg,f,c
  6021  01125C  0BE0               	andlw	224
  6022  01125E  0BE0               	andlw	224
  6023  011260  0910               	iorlw	16
  6024  011262  0102               	movlb	2	; () banked
  6025  011264  6F7A               	movwf	write_ZIGBEE_long@address_low& (0+255),b
  6026                           
  6027                           ; BSR set to: 2
  6028                           ;zigbee.c: 421: SPI_Write(address_high);
  6029  011266  5179               	movf	write_ZIGBEE_long@address_high& (0+255),w,b
  6030  011268  ECF6  F08C         	call	_SPI_Write
  6031                           
  6032                           ;zigbee.c: 422: SPI_Write(address_low);
  6033  01126C  0102               	movlb	2	; () banked
  6034  01126E  517A               	movf	write_ZIGBEE_long@address_low& (0+255),w,b
  6035  011270  ECF6  F08C         	call	_SPI_Write
  6036                           
  6037                           ;zigbee.c: 423: SPI_Write(data_r);
  6038  011274  0101               	movlb	1	; () banked
  6039  011276  51FD               	movf	write_ZIGBEE_long@data_r& (0+255),w,b
  6040  011278  ECF6  F08C         	call	_SPI_Write
  6041                           
  6042                           ;zigbee.c: 424: PORTCbits.RC0=1;
  6043  01127C  8082               	bsf	3970,0,c	;volatile
  6044  01127E  0012               	return		;funcret
  6045  011280                     __end_of_write_ZIGBEE_long:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           indf1	equ	0xFE7
  6057                           postdec1	equ	0xFE5
  6058                           fsr1h	equ	0xFE2
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _enable_interrupt *****************
  6066 ;; Defined at:
  6067 ;;		line 168 in file "zigbee.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:   10
  6088 ;; This function calls:
  6089 ;;		_write_ZIGBEE_short
  6090 ;; This function is called by:
  6091 ;;		_init_ZIGBEE_nonbeacon
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text29
  6096  011A30                     __ptext29:
  6097                           	opt stack 0
  6098  011A30                     _enable_interrupt:
  6099                           	opt stack 19
  6100                           
  6101                           ;zigbee.c: 169: write_ZIGBEE_short(0x32, 0xF7);
  6102                           
  6103                           ;incstack = 0
  6104  011A30  0EF7               	movlw	247
  6105  011A32  0101               	movlb	1	; () banked
  6106  011A34  6FFB               	movwf	write_ZIGBEE_short@data_r& (0+255),b
  6107  011A36  0E32               	movlw	50
  6108  011A38  ECCD  F08B         	call	_write_ZIGBEE_short
  6109  011A3C  0012               	return		;funcret
  6110  011A3E                     __end_of_enable_interrupt:
  6111                           	opt stack 0
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           postinc0	equ	0xFEE
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           postdec1	equ	0xFE5
  6123                           fsr1h	equ	0xFE2
  6124                           fsr1l	equ	0xFE1
  6125                           indf2	equ	0xFDF
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _write_ZIGBEE_short *****************
  6131 ;; Defined at:
  6132 ;;		line 397 in file "zigbee.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  address         1    wreg     unsigned char 
  6135 ;;  data_r          1    2[BANK1 ] unsigned char 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  address         1    3[BANK1 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6147 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;Total ram usage:        2 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    9
  6154 ;; This function calls:
  6155 ;;		_SPI_Write
  6156 ;; This function is called by:
  6157 ;;		_RF_reset
  6158 ;;		_set_WAKE_from_pin
  6159 ;;		_set_long_address
  6160 ;;		_set_short_address
  6161 ;;		_set_PAN_ID
  6162 ;;		_init_ZIGBEE_basic
  6163 ;;		_set_CCA_mode
  6164 ;;		_set_RSSI_mode
  6165 ;;		_enable_interrupt
  6166 ;;		_nonbeacon_PAN_coordinator_device
  6167 ;;		_set_frame_format_filter
  6168 ;;		_set_reception_mode
  6169 ;;		_set_not_ACK
  6170 ;;		_set_not_encrypt
  6171 ;;		_start_transmit
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text30
  6176  01179A                     __ptext30:
  6177                           	opt stack 0
  6178  01179A                     _write_ZIGBEE_short:
  6179                           	opt stack 19
  6180                           
  6181                           ;incstack = 0
  6182                           ;write_ZIGBEE_short@address stored from wreg
  6183  01179A  0101               	movlb	1	; () banked
  6184  01179C  6FFC               	movwf	write_ZIGBEE_short@address& (0+255),b
  6185                           
  6186                           ;zigbee.c: 398: PORTCbits.RC0=0;
  6187  01179E  9082               	bcf	3970,0,c	;volatile
  6188                           
  6189                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
  6190  0117A0  0101               	movlb	1	; () banked
  6191  0117A2  51FC               	movf	write_ZIGBEE_short@address& (0+255),w,b
  6192  0117A4  25FC               	addwf	write_ZIGBEE_short@address& (0+255),w,b
  6193  0117A6  0B7F               	andlw	127
  6194  0117A8  0901               	iorlw	1
  6195  0117AA  6FFC               	movwf	write_ZIGBEE_short@address& (0+255),b
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;zigbee.c: 400: SPI_Write(address);
  6199  0117AC  51FC               	movf	write_ZIGBEE_short@address& (0+255),w,b
  6200  0117AE  ECF6  F08C         	call	_SPI_Write
  6201                           
  6202                           ;zigbee.c: 401: SPI_Write(data_r);
  6203  0117B2  0101               	movlb	1	; () banked
  6204  0117B4  51FB               	movf	write_ZIGBEE_short@data_r& (0+255),w,b
  6205  0117B6  ECF6  F08C         	call	_SPI_Write
  6206                           
  6207                           ;zigbee.c: 402: PORTCbits.RC0=1;
  6208  0117BA  8082               	bsf	3970,0,c	;volatile
  6209  0117BC  0012               	return		;funcret
  6210  0117BE                     __end_of_write_ZIGBEE_short:
  6211                           	opt stack 0
  6212                           tblptru	equ	0xFF8
  6213                           tblptrh	equ	0xFF7
  6214                           tblptrl	equ	0xFF6
  6215                           tablat	equ	0xFF5
  6216                           prodh	equ	0xFF4
  6217                           prodl	equ	0xFF3
  6218                           intcon	equ	0xFF2
  6219                           postinc0	equ	0xFEE
  6220                           wreg	equ	0xFE8
  6221                           indf1	equ	0xFE7
  6222                           postdec1	equ	0xFE5
  6223                           fsr1h	equ	0xFE2
  6224                           fsr1l	equ	0xFE1
  6225                           indf2	equ	0xFDF
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _SPI_Write *****************
  6231 ;; Defined at:
  6232 ;;		line 458 in file "zigbee.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  command         1    wreg     unsigned char 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  command         1    1[BANK1 ] unsigned char 
  6237 ;;  response        1    0[BANK1 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:        2 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    8
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_write_ZIGBEE_short
  6258 ;;		_read_ZIGBEE_short
  6259 ;;		_write_ZIGBEE_long
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text31
  6264  0119EC                     __ptext31:
  6265                           	opt stack 0
  6266  0119EC                     _SPI_Write:
  6267                           	opt stack 20
  6268                           
  6269                           ;incstack = 0
  6270                           ;SPI_Write@command stored from wreg
  6271  0119EC  0101               	movlb	1	; () banked
  6272  0119EE  6FFA               	movwf	SPI_Write@command& (0+255),b
  6273                           
  6274                           ;zigbee.c: 459: unsigned char response;
  6275                           ;zigbee.c: 460: SSP1BUF = command;
  6276  0119F0  C1FA  FFC9         	movff	SPI_Write@command,4041	;volatile
  6277  0119F4  A0C7               	btfss	4039,0,c	;volatile
  6278  0119F6  D7FE               	goto	l1040
  6279                           
  6280                           ;zigbee.c: 462: response = SSP1BUF;
  6281  0119F8  CFC9 F1F9          	movff	4041,SPI_Write@response	;volatile
  6282  0119FC  0012               	return		;funcret
  6283  0119FE                     __end_of_SPI_Write:
  6284                           	opt stack 0
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           wreg	equ	0xFE8
  6294                           indf1	equ	0xFE7
  6295                           postdec1	equ	0xFE5
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           fsr2h	equ	0xFDA
  6300                           fsr2l	equ	0xFD9
  6301                           status	equ	0xFD8
  6302                           
  6303 ;; *************** function ___llmod *****************
  6304 ;; Defined at:
  6305 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\llmod.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  dividend        4   21[BANK2 ] unsigned long 
  6308 ;;  divisor         4   25[BANK2 ] unsigned long 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  counter         1    0[BANK1 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  4   21[BANK2 ] unsigned long 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6320 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Totals:         0       0       1       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;Total ram usage:        9 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    8
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_main
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text32
  6335  0110CE                     __ptext32:
  6336                           	opt stack 0
  6337  0110CE                     ___llmod:
  6338                           	opt stack 22
  6339                           
  6340                           ;incstack = 0
  6341  0110CE  0102               	movlb	2	; () banked
  6342  0110D0  517D               	movf	___llmod@divisor& (0+255),w,b
  6343  0110D2  117E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6344  0110D4  117F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6345  0110D6  1180               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6346  0110D8  B4D8               	btfsc	status,2,c
  6347  0110DA  D02A               	goto	l1474
  6348                           
  6349                           ; BSR set to: 2
  6350  0110DC  0E01               	movlw	1
  6351  0110DE  0101               	movlb	1	; () banked
  6352  0110E0  6FF9               	movwf	___llmod@counter& (0+255),b
  6353  0110E2  D008               	goto	l1469
  6354  0110E4                     
  6355                           ; BSR set to: 1
  6356  0110E4  0102               	movlb	2	; () banked
  6357  0110E6  90D8               	bcf	status,0,c
  6358  0110E8  377D               	rlcf	___llmod@divisor& (0+255),f,b
  6359  0110EA  377E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6360  0110EC  377F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6361  0110EE  3780               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6362  0110F0  0101               	movlb	1	; () banked
  6363  0110F2  2BF9               	incf	___llmod@counter& (0+255),f,b
  6364  0110F4                     l1469:
  6365                           
  6366                           ; BSR set to: 1
  6367                           
  6368                           ; BSR set to: 1
  6369  0110F4  0102               	movlb	2	; () banked
  6370  0110F6  AF80               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6371  0110F8  D7F5               	goto	l1470
  6372  0110FA                     u2890:
  6373                           
  6374                           ; BSR set to: 2
  6375                           
  6376                           ; BSR set to: 2
  6377  0110FA  0102               	movlb	2	; () banked
  6378  0110FC  517D               	movf	___llmod@divisor& (0+255),w,b
  6379  0110FE  5D79               	subwf	___llmod@dividend& (0+255),w,b
  6380  011100  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
  6381  011102  597A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6382  011104  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
  6383  011106  597B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6384  011108  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
  6385  01110A  597C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6386  01110C  A0D8               	btfss	status,0,c
  6387  01110E  D008               	goto	l1473
  6388                           
  6389                           ; BSR set to: 2
  6390  011110  517D               	movf	___llmod@divisor& (0+255),w,b
  6391  011112  5F79               	subwf	___llmod@dividend& (0+255),f,b
  6392  011114  517E               	movf	(___llmod@divisor+1)& (0+255),w,b
  6393  011116  5B7A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6394  011118  517F               	movf	(___llmod@divisor+2)& (0+255),w,b
  6395  01111A  5B7B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6396  01111C  5180               	movf	(___llmod@divisor+3)& (0+255),w,b
  6397  01111E  5B7C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6398  011120                     l1473:
  6399                           
  6400                           ; BSR set to: 2
  6401                           
  6402                           ; BSR set to: 2
  6403  011120  90D8               	bcf	status,0,c
  6404  011122  3380               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6405  011124  337F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6406  011126  337E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6407  011128  337D               	rrcf	___llmod@divisor& (0+255),f,b
  6408                           
  6409                           ; BSR set to: 2
  6410  01112A  0101               	movlb	1	; () banked
  6411  01112C  2FF9               	decfsz	___llmod@counter& (0+255),f,b
  6412  01112E  D7E5               	goto	u2890
  6413  011130                     l1474:
  6414                           
  6415                           ; BSR set to: 1
  6416  011130  C279  F279         	movff	___llmod@dividend,?___llmod
  6417  011134  C27A  F27A         	movff	___llmod@dividend+1,?___llmod+1
  6418  011138  C27B  F27B         	movff	___llmod@dividend+2,?___llmod+2
  6419  01113C  C27C  F27C         	movff	___llmod@dividend+3,?___llmod+3
  6420  011140  0012               	return		;funcret
  6421  011142                     __end_of___llmod:
  6422                           	opt stack 0
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           prodh	equ	0xFF4
  6428                           prodl	equ	0xFF3
  6429                           intcon	equ	0xFF2
  6430                           postinc0	equ	0xFEE
  6431                           wreg	equ	0xFE8
  6432                           indf1	equ	0xFE7
  6433                           postdec1	equ	0xFE5
  6434                           fsr1h	equ	0xFE2
  6435                           fsr1l	equ	0xFE1
  6436                           indf2	equ	0xFDF
  6437                           fsr2h	equ	0xFDA
  6438                           fsr2l	equ	0xFD9
  6439                           status	equ	0xFD8
  6440                           
  6441 ;; *************** function ___lldiv *****************
  6442 ;; Defined at:
  6443 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  dividend        4   21[BANK2 ] unsigned long 
  6446 ;;  divisor         4   25[BANK2 ] unsigned long 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  quotient        4    0[BANK1 ] unsigned long 
  6449 ;;  counter         1    4[BANK1 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  4   21[BANK2 ] unsigned long 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6459 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Totals:         0       0       5       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;Total ram usage:       13 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    8
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text33
  6474  010E8A                     __ptext33:
  6475                           	opt stack 0
  6476  010E8A                     ___lldiv:
  6477                           	opt stack 22
  6478                           
  6479                           ;incstack = 0
  6480  010E8A  0E00               	movlw	0
  6481  010E8C  0101               	movlb	1	; () banked
  6482  010E8E  6FF9               	movwf	___lldiv@quotient& (0+255),b
  6483  010E90  0E00               	movlw	0
  6484  010E92  6FFA               	movwf	(___lldiv@quotient+1)& (0+255),b
  6485  010E94  0E00               	movlw	0
  6486  010E96  6FFB               	movwf	(___lldiv@quotient+2)& (0+255),b
  6487  010E98  0E00               	movlw	0
  6488  010E9A  6FFC               	movwf	(___lldiv@quotient+3)& (0+255),b
  6489                           
  6490                           ; BSR set to: 1
  6491  010E9C  0102               	movlb	2	; () banked
  6492  010E9E  517D               	movf	___lldiv@divisor& (0+255),w,b
  6493  010EA0  117E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6494  010EA2  117F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6495  010EA4  1180               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6496  010EA6  B4D8               	btfsc	status,2,c
  6497  010EA8  D033               	goto	l1464
  6498                           
  6499                           ; BSR set to: 2
  6500  010EAA  0E01               	movlw	1
  6501  010EAC  0101               	movlb	1	; () banked
  6502  010EAE  6FFD               	movwf	___lldiv@counter& (0+255),b
  6503  010EB0  D008               	goto	l1459
  6504  010EB2                     
  6505                           ; BSR set to: 1
  6506  010EB2  0102               	movlb	2	; () banked
  6507  010EB4  90D8               	bcf	status,0,c
  6508  010EB6  377D               	rlcf	___lldiv@divisor& (0+255),f,b
  6509  010EB8  377E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6510  010EBA  377F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6511  010EBC  3780               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6512  010EBE  0101               	movlb	1	; () banked
  6513  010EC0  2BFD               	incf	___lldiv@counter& (0+255),f,b
  6514  010EC2                     l1459:
  6515                           
  6516                           ; BSR set to: 1
  6517                           
  6518                           ; BSR set to: 1
  6519  010EC2  0102               	movlb	2	; () banked
  6520  010EC4  AF80               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6521  010EC6  D7F5               	goto	l1460
  6522  010EC8                     u2860:
  6523                           
  6524                           ; BSR set to: 2
  6525                           
  6526                           ; BSR set to: 2
  6527  010EC8  0101               	movlb	1	; () banked
  6528  010ECA  90D8               	bcf	status,0,c
  6529  010ECC  37F9               	rlcf	___lldiv@quotient& (0+255),f,b
  6530  010ECE  37FA               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6531  010ED0  37FB               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6532  010ED2  37FC               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6533                           
  6534                           ; BSR set to: 1
  6535  010ED4  0102               	movlb	2	; () banked
  6536  010ED6  517D               	movf	___lldiv@divisor& (0+255),w,b
  6537  010ED8  5D79               	subwf	___lldiv@dividend& (0+255),w,b
  6538  010EDA  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6539  010EDC  597A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6540  010EDE  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6541  010EE0  597B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6542  010EE2  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6543  010EE4  597C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6544  010EE6  A0D8               	btfss	status,0,c
  6545  010EE8  D00A               	goto	l1463
  6546                           
  6547                           ; BSR set to: 2
  6548  010EEA  517D               	movf	___lldiv@divisor& (0+255),w,b
  6549  010EEC  5F79               	subwf	___lldiv@dividend& (0+255),f,b
  6550  010EEE  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6551  010EF0  5B7A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6552  010EF2  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6553  010EF4  5B7B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6554  010EF6  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6555  010EF8  5B7C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6556                           
  6557                           ; BSR set to: 2
  6558  010EFA  0101               	movlb	1	; () banked
  6559  010EFC  81F9               	bsf	___lldiv@quotient& (0+255),0,b
  6560  010EFE                     l1463:
  6561                           
  6562                           ; BSR set to: 1
  6563  010EFE  0102               	movlb	2	; () banked
  6564  010F00  90D8               	bcf	status,0,c
  6565  010F02  3380               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6566  010F04  337F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6567  010F06  337E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6568  010F08  337D               	rrcf	___lldiv@divisor& (0+255),f,b
  6569                           
  6570                           ; BSR set to: 2
  6571  010F0A  0101               	movlb	1	; () banked
  6572  010F0C  2FFD               	decfsz	___lldiv@counter& (0+255),f,b
  6573  010F0E  D7DC               	goto	u2860
  6574  010F10                     l1464:
  6575                           
  6576                           ; BSR set to: 1
  6577  010F10  C1F9  F279         	movff	___lldiv@quotient,?___lldiv
  6578  010F14  C1FA  F27A         	movff	___lldiv@quotient+1,?___lldiv+1
  6579  010F18  C1FB  F27B         	movff	___lldiv@quotient+2,?___lldiv+2
  6580  010F1C  C1FC  F27C         	movff	___lldiv@quotient+3,?___lldiv+3
  6581  010F20  0012               	return		;funcret
  6582  010F22                     __end_of___lldiv:
  6583                           	opt stack 0
  6584                           tblptru	equ	0xFF8
  6585                           tblptrh	equ	0xFF7
  6586                           tblptrl	equ	0xFF6
  6587                           tablat	equ	0xFF5
  6588                           prodh	equ	0xFF4
  6589                           prodl	equ	0xFF3
  6590                           intcon	equ	0xFF2
  6591                           postinc0	equ	0xFEE
  6592                           wreg	equ	0xFE8
  6593                           indf1	equ	0xFE7
  6594                           postdec1	equ	0xFE5
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           fsr2h	equ	0xFDA
  6599                           fsr2l	equ	0xFD9
  6600                           status	equ	0xFD8
  6601                           
  6602 ;; *************** function ___awmod *****************
  6603 ;; Defined at:
  6604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awmod.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  dividend        2    0[BANK1 ] int 
  6607 ;;  divisor         2    2[BANK1 ] int 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  sign            1    5[BANK1 ] unsigned char 
  6610 ;;  counter         1    4[BANK1 ] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    0[BANK1 ] int 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:        6 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    8
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text34
  6635  011142                     __ptext34:
  6636                           	opt stack 0
  6637  011142                     ___awmod:
  6638                           	opt stack 22
  6639                           
  6640                           ;incstack = 0
  6641  011142  0E00               	movlw	0
  6642  011144  0101               	movlb	1	; () banked
  6643  011146  6FFE               	movwf	___awmod@sign& (0+255),b
  6644                           
  6645                           ; BSR set to: 1
  6646  011148  AFFA               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6647  01114A  D006               	goto	l1289
  6648                           
  6649                           ; BSR set to: 1
  6650  01114C  6DF9               	negf	___awmod@dividend& (0+255),b
  6651  01114E  1FFA               	comf	(___awmod@dividend+1)& (0+255),f,b
  6652  011150  B0D8               	btfsc	status,0,c
  6653  011152  2BFA               	incf	(___awmod@dividend+1)& (0+255),f,b
  6654                           
  6655                           ; BSR set to: 1
  6656  011154  0E01               	movlw	1
  6657  011156  6FFE               	movwf	___awmod@sign& (0+255),b
  6658  011158                     l1289:
  6659                           
  6660                           ; BSR set to: 1
  6661                           
  6662                           ; BSR set to: 1
  6663  011158  AFFC               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6664  01115A  D004               	goto	l1290
  6665                           
  6666                           ; BSR set to: 1
  6667  01115C  6DFB               	negf	___awmod@divisor& (0+255),b
  6668  01115E  1FFC               	comf	(___awmod@divisor+1)& (0+255),f,b
  6669  011160  B0D8               	btfsc	status,0,c
  6670  011162  2BFC               	incf	(___awmod@divisor+1)& (0+255),f,b
  6671  011164                     l1290:
  6672                           
  6673                           ; BSR set to: 1
  6674                           
  6675                           ; BSR set to: 1
  6676  011164  51FB               	movf	___awmod@divisor& (0+255),w,b
  6677  011166  11FC               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6678  011168  B4D8               	btfsc	status,2,c
  6679  01116A  D018               	goto	l1297
  6680                           
  6681                           ; BSR set to: 1
  6682  01116C  0E01               	movlw	1
  6683  01116E  6FFD               	movwf	___awmod@counter& (0+255),b
  6684  011170  D004               	goto	l1292
  6685  011172                     
  6686                           ; BSR set to: 1
  6687                           
  6688                           ; BSR set to: 1
  6689  011172  90D8               	bcf	status,0,c
  6690  011174  37FB               	rlcf	___awmod@divisor& (0+255),f,b
  6691  011176  37FC               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6692  011178  2BFD               	incf	___awmod@counter& (0+255),f,b
  6693  01117A                     l1292:
  6694                           
  6695                           ; BSR set to: 1
  6696                           
  6697                           ; BSR set to: 1
  6698  01117A  AFFC               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6699  01117C  D7FA               	goto	l1293
  6700  01117E                     u2820:
  6701                           
  6702                           ; BSR set to: 1
  6703                           
  6704                           ; BSR set to: 1
  6705                           
  6706                           ; BSR set to: 1
  6707  01117E  51FB               	movf	___awmod@divisor& (0+255),w,b
  6708  011180  5DF9               	subwf	___awmod@dividend& (0+255),w,b
  6709  011182  51FC               	movf	(___awmod@divisor+1)& (0+255),w,b
  6710  011184  59FA               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6711  011186  A0D8               	btfss	status,0,c
  6712  011188  D004               	goto	l1296
  6713                           
  6714                           ; BSR set to: 1
  6715  01118A  51FB               	movf	___awmod@divisor& (0+255),w,b
  6716  01118C  5FF9               	subwf	___awmod@dividend& (0+255),f,b
  6717  01118E  51FC               	movf	(___awmod@divisor+1)& (0+255),w,b
  6718  011190  5BFA               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6719  011192                     l1296:
  6720                           
  6721                           ; BSR set to: 1
  6722                           
  6723                           ; BSR set to: 1
  6724  011192  90D8               	bcf	status,0,c
  6725  011194  33FC               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6726  011196  33FB               	rrcf	___awmod@divisor& (0+255),f,b
  6727                           
  6728                           ; BSR set to: 1
  6729  011198  2FFD               	decfsz	___awmod@counter& (0+255),f,b
  6730  01119A  D7F1               	goto	u2820
  6731  01119C                     l1297:
  6732                           
  6733                           ; BSR set to: 1
  6734                           
  6735                           ; BSR set to: 1
  6736                           
  6737                           ; BSR set to: 1
  6738  01119C  51FE               	movf	___awmod@sign& (0+255),w,b
  6739  01119E  B4D8               	btfsc	status,2,c
  6740  0111A0  D004               	goto	l1298
  6741                           
  6742                           ; BSR set to: 1
  6743  0111A2  6DF9               	negf	___awmod@dividend& (0+255),b
  6744  0111A4  1FFA               	comf	(___awmod@dividend+1)& (0+255),f,b
  6745  0111A6  B0D8               	btfsc	status,0,c
  6746  0111A8  2BFA               	incf	(___awmod@dividend+1)& (0+255),f,b
  6747  0111AA                     l1298:
  6748                           
  6749                           ; BSR set to: 1
  6750                           
  6751                           ; BSR set to: 1
  6752  0111AA  C1F9  F1F9         	movff	___awmod@dividend,?___awmod
  6753  0111AE  C1FA  F1FA         	movff	___awmod@dividend+1,?___awmod+1
  6754  0111B2  0012               	return	
  6755  0111B4                     __end_of___awmod:
  6756                           	opt stack 0
  6757                           tblptru	equ	0xFF8
  6758                           tblptrh	equ	0xFF7
  6759                           tblptrl	equ	0xFF6
  6760                           tablat	equ	0xFF5
  6761                           prodh	equ	0xFF4
  6762                           prodl	equ	0xFF3
  6763                           intcon	equ	0xFF2
  6764                           postinc0	equ	0xFEE
  6765                           wreg	equ	0xFE8
  6766                           indf1	equ	0xFE7
  6767                           postdec1	equ	0xFE5
  6768                           fsr1h	equ	0xFE2
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function ___awdiv *****************
  6776 ;; Defined at:
  6777 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  dividend        2    0[BANK1 ] int 
  6780 ;;  divisor         2    2[BANK1 ] int 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  quotient        2   23[BANK2 ] int 
  6783 ;;  sign            1   22[BANK2 ] unsigned char 
  6784 ;;  counter         1   21[BANK2 ] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2    0[BANK1 ] int 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6794 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Totals:         0       0       4       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;Total ram usage:        8 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    8
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text35
  6809  010DE4                     __ptext35:
  6810                           	opt stack 0
  6811  010DE4                     ___awdiv:
  6812                           	opt stack 22
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;incstack = 0
  6816  010DE4  0E00               	movlw	0
  6817  010DE6  0102               	movlb	2	; () banked
  6818  010DE8  6F7A               	movwf	___awdiv@sign& (0+255),b
  6819                           
  6820                           ; BSR set to: 2
  6821  010DEA  0101               	movlb	1	; () banked
  6822  010DEC  AFFC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6823  010DEE  D007               	goto	l1276
  6824                           
  6825                           ; BSR set to: 1
  6826  010DF0  6DFB               	negf	___awdiv@divisor& (0+255),b
  6827  010DF2  1FFC               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6828  010DF4  B0D8               	btfsc	status,0,c
  6829  010DF6  2BFC               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6830                           
  6831                           ; BSR set to: 1
  6832  010DF8  0E01               	movlw	1
  6833  010DFA  0102               	movlb	2	; () banked
  6834  010DFC  6F7A               	movwf	___awdiv@sign& (0+255),b
  6835  010DFE                     l1276:
  6836                           
  6837                           ; BSR set to: 2
  6838  010DFE  0101               	movlb	1	; () banked
  6839  010E00  AFFA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6840  010E02  D007               	goto	l1277
  6841                           
  6842                           ; BSR set to: 1
  6843  010E04  6DF9               	negf	___awdiv@dividend& (0+255),b
  6844  010E06  1FFA               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6845  010E08  B0D8               	btfsc	status,0,c
  6846  010E0A  2BFA               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 1
  6849  010E0C  0E01               	movlw	1
  6850  010E0E  0102               	movlb	2	; () banked
  6851  010E10  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
  6852  010E12                     l1277:
  6853                           
  6854                           ; BSR set to: 2
  6855  010E12  0E00               	movlw	0
  6856  010E14  0102               	movlb	2	; () banked
  6857  010E16  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
  6858  010E18  0E00               	movlw	0
  6859  010E1A  6F7B               	movwf	___awdiv@quotient& (0+255),b
  6860                           
  6861                           ; BSR set to: 2
  6862  010E1C  0101               	movlb	1	; () banked
  6863  010E1E  51FB               	movf	___awdiv@divisor& (0+255),w,b
  6864  010E20  11FC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6865  010E22  B4D8               	btfsc	status,2,c
  6866  010E24  D025               	goto	l1284
  6867                           
  6868                           ; BSR set to: 1
  6869  010E26  0E01               	movlw	1
  6870  010E28  0102               	movlb	2	; () banked
  6871  010E2A  6F79               	movwf	___awdiv@counter& (0+255),b
  6872  010E2C  D006               	goto	l1279
  6873  010E2E                     
  6874                           ; BSR set to: 2
  6875  010E2E  0101               	movlb	1	; () banked
  6876  010E30  90D8               	bcf	status,0,c
  6877  010E32  37FB               	rlcf	___awdiv@divisor& (0+255),f,b
  6878  010E34  37FC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6879  010E36  0102               	movlb	2	; () banked
  6880  010E38  2B79               	incf	___awdiv@counter& (0+255),f,b
  6881  010E3A                     l1279:
  6882                           
  6883                           ; BSR set to: 2
  6884                           
  6885                           ; BSR set to: 2
  6886  010E3A  0101               	movlb	1	; () banked
  6887  010E3C  AFFC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6888  010E3E  D7F7               	goto	l1280
  6889  010E40                     u2760:
  6890                           
  6891                           ; BSR set to: 1
  6892                           
  6893                           ; BSR set to: 1
  6894  010E40  0102               	movlb	2	; () banked
  6895  010E42  90D8               	bcf	status,0,c
  6896  010E44  377B               	rlcf	___awdiv@quotient& (0+255),f,b
  6897  010E46  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6898                           
  6899                           ; BSR set to: 2
  6900  010E48  0101               	movlb	1	; () banked
  6901  010E4A  51FB               	movf	___awdiv@divisor& (0+255),w,b
  6902  010E4C  5DF9               	subwf	___awdiv@dividend& (0+255),w,b
  6903  010E4E  51FC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6904  010E50  59FA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6905  010E52  A0D8               	btfss	status,0,c
  6906  010E54  D006               	goto	l1283
  6907                           
  6908                           ; BSR set to: 1
  6909  010E56  51FB               	movf	___awdiv@divisor& (0+255),w,b
  6910  010E58  5FF9               	subwf	___awdiv@dividend& (0+255),f,b
  6911  010E5A  51FC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6912  010E5C  5BFA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6913                           
  6914                           ; BSR set to: 1
  6915  010E5E  0102               	movlb	2	; () banked
  6916  010E60  817B               	bsf	___awdiv@quotient& (0+255),0,b
  6917  010E62                     l1283:
  6918                           
  6919                           ; BSR set to: 2
  6920  010E62  0101               	movlb	1	; () banked
  6921  010E64  90D8               	bcf	status,0,c
  6922  010E66  33FC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6923  010E68  33FB               	rrcf	___awdiv@divisor& (0+255),f,b
  6924                           
  6925                           ; BSR set to: 1
  6926  010E6A  0102               	movlb	2	; () banked
  6927  010E6C  2F79               	decfsz	___awdiv@counter& (0+255),f,b
  6928  010E6E  D7E8               	goto	u2760
  6929  010E70                     l1284:
  6930                           
  6931                           ; BSR set to: 2
  6932                           
  6933                           ; BSR set to: 2
  6934  010E70  0102               	movlb	2	; () banked
  6935  010E72  517A               	movf	___awdiv@sign& (0+255),w,b
  6936  010E74  B4D8               	btfsc	status,2,c
  6937  010E76  D004               	goto	l1285
  6938                           
  6939                           ; BSR set to: 2
  6940  010E78  6D7B               	negf	___awdiv@quotient& (0+255),b
  6941  010E7A  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6942  010E7C  B0D8               	btfsc	status,0,c
  6943  010E7E  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6944  010E80                     l1285:
  6945                           
  6946                           ; BSR set to: 2
  6947                           
  6948                           ; BSR set to: 2
  6949  010E80  C27B  F1F9         	movff	___awdiv@quotient,?___awdiv
  6950  010E84  C27C  F1FA         	movff	___awdiv@quotient+1,?___awdiv+1
  6951  010E88  0012               	return	
  6952  010E8A                     __end_of___awdiv:
  6953                           	opt stack 0
  6954                           tblptru	equ	0xFF8
  6955                           tblptrh	equ	0xFF7
  6956                           tblptrl	equ	0xFF6
  6957                           tablat	equ	0xFF5
  6958                           prodh	equ	0xFF4
  6959                           prodl	equ	0xFF3
  6960                           intcon	equ	0xFF2
  6961                           postinc0	equ	0xFEE
  6962                           wreg	equ	0xFE8
  6963                           indf1	equ	0xFE7
  6964                           postdec1	equ	0xFE5
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           indf2	equ	0xFDF
  6968                           fsr2h	equ	0xFDA
  6969                           fsr2l	equ	0xFD9
  6970                           status	equ	0xFD8
  6971                           
  6972 ;; *************** function _SYSTEM_Initialize *****************
  6973 ;; Defined at:
  6974 ;;		line 128 in file "mcc_generated_files/mcc.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   10
  6995 ;; This function calls:
  6996 ;;		_EXT_INT_Initialize
  6997 ;;		_INTERRUPT_Initialize
  6998 ;;		_OSCILLATOR_Initialize
  6999 ;;		_PIN_MANAGER_Initialize
  7000 ;;		_TMR0_Initialize
  7001 ;; This function is called by:
  7002 ;;		_main
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text36
  7007  01198A                     __ptext36:
  7008                           	opt stack 0
  7009  01198A                     _SYSTEM_Initialize:
  7010                           	opt stack 20
  7011                           
  7012                           ;mcc.c: 130: INTERRUPT_Initialize();
  7013                           
  7014                           ; BSR set to: 2
  7015                           ;incstack = 0
  7016  01198A  EC42  F08D         	call	_INTERRUPT_Initialize	;wreg free
  7017                           
  7018                           ;mcc.c: 131: PIN_MANAGER_Initialize();
  7019  01198E  EC29  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
  7020                           
  7021                           ;mcc.c: 132: OSCILLATOR_Initialize();
  7022  011992  ECDA  F08C         	call	_OSCILLATOR_Initialize	;wreg free
  7023                           
  7024                           ;mcc.c: 133: EXT_INT_Initialize();
  7025  011996  EC23  F08B         	call	_EXT_INT_Initialize	;wreg free
  7026                           
  7027                           ;mcc.c: 134: TMR0_Initialize();
  7028  01199A  EC6A  F08B         	call	_TMR0_Initialize	;wreg free
  7029  01199E  0012               	return		;funcret
  7030  0119A0                     __end_of_SYSTEM_Initialize:
  7031                           	opt stack 0
  7032                           tblptru	equ	0xFF8
  7033                           tblptrh	equ	0xFF7
  7034                           tblptrl	equ	0xFF6
  7035                           tablat	equ	0xFF5
  7036                           prodh	equ	0xFF4
  7037                           prodl	equ	0xFF3
  7038                           intcon	equ	0xFF2
  7039                           postinc0	equ	0xFEE
  7040                           wreg	equ	0xFE8
  7041                           indf1	equ	0xFE7
  7042                           postdec1	equ	0xFE5
  7043                           fsr1h	equ	0xFE2
  7044                           fsr1l	equ	0xFE1
  7045                           indf2	equ	0xFDF
  7046                           fsr2h	equ	0xFDA
  7047                           fsr2l	equ	0xFD9
  7048                           status	equ	0xFD8
  7049                           
  7050 ;; *************** function _TMR0_Initialize *****************
  7051 ;; Defined at:
  7052 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    9
  7073 ;; This function calls:
  7074 ;;		_TMR0_SetInterruptHandler
  7075 ;; This function is called by:
  7076 ;;		_SYSTEM_Initialize
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text37
  7081  0116D4                     __ptext37:
  7082                           	opt stack 0
  7083  0116D4                     _TMR0_Initialize:
  7084                           	opt stack 20
  7085                           
  7086                           ;tmr0.c: 71: TMR0H = 0x00;
  7087                           
  7088                           ;incstack = 0
  7089  0116D4  0E00               	movlw	0
  7090  0116D6  6ED7               	movwf	4055,c	;volatile
  7091                           
  7092                           ;tmr0.c: 74: TMR0L = 0x02;
  7093  0116D8  0E02               	movlw	2
  7094  0116DA  6ED6               	movwf	4054,c	;volatile
  7095                           
  7096                           ;tmr0.c: 78: timer0ReloadVal = 2;
  7097  0116DC  0E02               	movlw	2
  7098  0116DE  0100               	movlb	0	; () banked
  7099  0116E0  6FBF               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  7103  0116E2  94F2               	bcf	intcon,2,c	;volatile
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  7107  0116E4  8AF2               	bsf	intcon,5,c	;volatile
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  7111  0116E6  0E9E               	movlw	low _TMR0_DefaultInterruptHandler
  7112  0116E8  0101               	movlb	1	; () banked
  7113  0116EA  6FF9               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  7114  0116EC  0E1A               	movlw	high _TMR0_DefaultInterruptHandler
  7115  0116EE  6FFA               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7116  0116F0  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  7117  0116F2  6FFB               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7118  0116F4  EC1F  F08D         	call	_TMR0_SetInterruptHandler	;wreg free
  7119                           
  7120                           ;tmr0.c: 90: T0CON = 0xD7;
  7121  0116F8  0ED7               	movlw	215
  7122  0116FA  6ED5               	movwf	4053,c	;volatile
  7123  0116FC  0012               	return		;funcret
  7124  0116FE                     __end_of_TMR0_Initialize:
  7125                           	opt stack 0
  7126                           tblptru	equ	0xFF8
  7127                           tblptrh	equ	0xFF7
  7128                           tblptrl	equ	0xFF6
  7129                           tablat	equ	0xFF5
  7130                           prodh	equ	0xFF4
  7131                           prodl	equ	0xFF3
  7132                           intcon	equ	0xFF2
  7133                           postinc0	equ	0xFEE
  7134                           wreg	equ	0xFE8
  7135                           indf1	equ	0xFE7
  7136                           postdec1	equ	0xFE5
  7137                           fsr1h	equ	0xFE2
  7138                           fsr1l	equ	0xFE1
  7139                           indf2	equ	0xFDF
  7140                           fsr2h	equ	0xFDA
  7141                           fsr2l	equ	0xFD9
  7142                           status	equ	0xFD8
  7143                           
  7144 ;; *************** function _TMR0_SetInterruptHandler *****************
  7145 ;; Defined at:
  7146 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  7149 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7161 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;Total ram usage:        3 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    8
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_TMR0_Initialize
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text38
  7176  011A3E                     __ptext38:
  7177                           	opt stack 0
  7178  011A3E                     _TMR0_SetInterruptHandler:
  7179                           	opt stack 20
  7180                           
  7181                           ;tmr0.c: 162: TMR0_InterruptHandler = InterruptHandler;
  7182                           
  7183                           ;incstack = 0
  7184  011A3E  C1F9  F08A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  7185  011A42  C1FA  F08B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  7186  011A46  C1FB  F08C         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  7187  011A4A  0012               	return		;funcret
  7188  011A4C                     __end_of_TMR0_SetInterruptHandler:
  7189                           	opt stack 0
  7190                           tblptru	equ	0xFF8
  7191                           tblptrh	equ	0xFF7
  7192                           tblptrl	equ	0xFF6
  7193                           tablat	equ	0xFF5
  7194                           prodh	equ	0xFF4
  7195                           prodl	equ	0xFF3
  7196                           intcon	equ	0xFF2
  7197                           postinc0	equ	0xFEE
  7198                           wreg	equ	0xFE8
  7199                           indf1	equ	0xFE7
  7200                           postdec1	equ	0xFE5
  7201                           fsr1h	equ	0xFE2
  7202                           fsr1l	equ	0xFE1
  7203                           indf2	equ	0xFDF
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function _PIN_MANAGER_Initialize *****************
  7209 ;; Defined at:
  7210 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    8
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_SYSTEM_Initialize
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text39
  7239  011452                     __ptext39:
  7240                           	opt stack 0
  7241  011452                     _PIN_MANAGER_Initialize:
  7242                           	opt stack 21
  7243                           
  7244                           ;pin_manager.c: 57: LATE = 0x00;
  7245                           
  7246                           ;incstack = 0
  7247  011452  0E00               	movlw	0
  7248  011454  6E8D               	movwf	3981,c	;volatile
  7249                           
  7250                           ;pin_manager.c: 58: LATD = 0x00;
  7251  011456  0E00               	movlw	0
  7252  011458  6E8C               	movwf	3980,c	;volatile
  7253                           
  7254                           ;pin_manager.c: 59: LATA = 0x0F;
  7255  01145A  0E0F               	movlw	15
  7256  01145C  6E89               	movwf	3977,c	;volatile
  7257                           
  7258                           ;pin_manager.c: 60: LATF = 0x10;
  7259  01145E  0E10               	movlw	16
  7260  011460  6E8E               	movwf	3982,c	;volatile
  7261                           
  7262                           ;pin_manager.c: 61: LATB = 0x00;
  7263  011462  0E00               	movlw	0
  7264  011464  6E8A               	movwf	3978,c	;volatile
  7265                           
  7266                           ;pin_manager.c: 62: LATG = 0x00;
  7267  011466  0E00               	movlw	0
  7268  011468  6E8F               	movwf	3983,c	;volatile
  7269                           
  7270                           ;pin_manager.c: 63: LATC = 0x03;
  7271  01146A  0E03               	movlw	3
  7272  01146C  6E8B               	movwf	3979,c	;volatile
  7273                           
  7274                           ;pin_manager.c: 68: TRISE = 0x00;
  7275  01146E  0E00               	movlw	0
  7276  011470  6E96               	movwf	3990,c	;volatile
  7277                           
  7278                           ;pin_manager.c: 69: TRISF = 0xE0;
  7279  011472  0EE0               	movlw	224
  7280  011474  6E97               	movwf	3991,c	;volatile
  7281                           
  7282                           ;pin_manager.c: 70: TRISA = 0xC0;
  7283  011476  0EC0               	movlw	192
  7284  011478  6E92               	movwf	3986,c	;volatile
  7285                           
  7286                           ;pin_manager.c: 71: TRISG = 0x1F;
  7287  01147A  0E1F               	movlw	31
  7288  01147C  6E98               	movwf	3992,c	;volatile
  7289                           
  7290                           ;pin_manager.c: 72: TRISB = 0xFF;
  7291  01147E  6893               	setf	3987,c	;volatile
  7292                           
  7293                           ;pin_manager.c: 73: TRISC = 0xFC;
  7294  011480  0EFC               	movlw	252
  7295  011482  6E94               	movwf	3988,c	;volatile
  7296                           
  7297                           ;pin_manager.c: 74: TRISD = 0xFF;
  7298  011484  6895               	setf	3989,c	;volatile
  7299                           
  7300                           ;pin_manager.c: 79: ANCON0 = 0x20;
  7301  011486  0E20               	movlw	32
  7302  011488  010F               	movlb	15	; () banked
  7303  01148A  6F25               	movwf	37,b	;volatile
  7304                           
  7305                           ;pin_manager.c: 80: ANCON1 = 0x0C;
  7306  01148C  0E0C               	movlw	12
  7307  01148E  6F24               	movwf	36,b	;volatile
  7308                           
  7309                           ;pin_manager.c: 81: ANCON2 = 0x0F;
  7310  011490  0E0F               	movlw	15
  7311  011492  6F23               	movwf	35,b	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314  011494  0012               	return		;funcret
  7315  011496                     __end_of_PIN_MANAGER_Initialize:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           postinc0	equ	0xFEE
  7325                           wreg	equ	0xFE8
  7326                           indf1	equ	0xFE7
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335 ;; *************** function _OSCILLATOR_Initialize *****************
  7336 ;; Defined at:
  7337 ;;		line 137 in file "mcc_generated_files/mcc.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    8
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_SYSTEM_Initialize
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text40
  7366  0119B4                     __ptext40:
  7367                           	opt stack 0
  7368  0119B4                     _OSCILLATOR_Initialize:
  7369                           	opt stack 21
  7370                           
  7371                           ;mcc.c: 140: OSCCON = 0x60;
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;incstack = 0
  7375  0119B4  0E60               	movlw	96
  7376  0119B6  6ED3               	movwf	4051,c	;volatile
  7377                           
  7378                           ;mcc.c: 142: OSCCON2 = 0x00;
  7379  0119B8  0E00               	movlw	0
  7380  0119BA  6E64               	movwf	3940,c	;volatile
  7381                           
  7382                           ;mcc.c: 144: OSCTUNE = 0x00;
  7383  0119BC  0E00               	movlw	0
  7384  0119BE  6E9B               	movwf	3995,c	;volatile
  7385                           
  7386                           ;mcc.c: 146: REFOCON = 0x00;
  7387  0119C0  0E00               	movlw	0
  7388  0119C2  010F               	movlb	15	; () banked
  7389  0119C4  6F2A               	movwf	42,b	;volatile
  7390                           
  7391                           ; BSR set to: 15
  7392  0119C6  0012               	return		;funcret
  7393  0119C8                     __end_of_OSCILLATOR_Initialize:
  7394                           	opt stack 0
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           prodh	equ	0xFF4
  7400                           prodl	equ	0xFF3
  7401                           intcon	equ	0xFF2
  7402                           postinc0	equ	0xFEE
  7403                           wreg	equ	0xFE8
  7404                           indf1	equ	0xFE7
  7405                           postdec1	equ	0xFE5
  7406                           fsr1h	equ	0xFE2
  7407                           fsr1l	equ	0xFE1
  7408                           indf2	equ	0xFDF
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _INTERRUPT_Initialize *****************
  7414 ;; Defined at:
  7415 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		None
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    8
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_SYSTEM_Initialize
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text41
  7444  011A84                     __ptext41:
  7445                           	opt stack 0
  7446  011A84                     _INTERRUPT_Initialize:
  7447                           	opt stack 21
  7448                           
  7449                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;incstack = 0
  7453  011A84  8ED0               	bsf	4048,7,c	;volatile
  7454                           
  7455                           ;interrupt_manager.c: 62: INTCON3bits.INT1IP = 0;
  7456  011A86  9CF0               	bcf	intcon3,6,c	;volatile
  7457                           
  7458                           ;interrupt_manager.c: 65: INTCON2bits.TMR0IP = 0;
  7459  011A88  94F1               	bcf	intcon2,2,c	;volatile
  7460  011A8A  0012               	return		;funcret
  7461  011A8C                     __end_of_INTERRUPT_Initialize:
  7462                           	opt stack 0
  7463                           tblptru	equ	0xFF8
  7464                           tblptrh	equ	0xFF7
  7465                           tblptrl	equ	0xFF6
  7466                           tablat	equ	0xFF5
  7467                           prodh	equ	0xFF4
  7468                           prodl	equ	0xFF3
  7469                           intcon	equ	0xFF2
  7470                           intcon2	equ	0xFF1
  7471                           intcon3	equ	0xFF0
  7472                           postinc0	equ	0xFEE
  7473                           wreg	equ	0xFE8
  7474                           indf1	equ	0xFE7
  7475                           postdec1	equ	0xFE5
  7476                           fsr1h	equ	0xFE2
  7477                           fsr1l	equ	0xFE1
  7478                           indf2	equ	0xFDF
  7479                           fsr2h	equ	0xFDA
  7480                           fsr2l	equ	0xFD9
  7481                           status	equ	0xFD8
  7482                           
  7483 ;; *************** function _EXT_INT_Initialize *****************
  7484 ;; Defined at:
  7485 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    9
  7506 ;; This function calls:
  7507 ;;		_INT0_SetInterruptHandler
  7508 ;;		_INT1_SetInterruptHandler
  7509 ;; This function is called by:
  7510 ;;		_SYSTEM_Initialize
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text42
  7515  011646                     __ptext42:
  7516                           	opt stack 0
  7517  011646                     _EXT_INT_Initialize:
  7518                           	opt stack 20
  7519                           
  7520                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  7521                           
  7522                           ;incstack = 0
  7523  011646  90F0               	bcf	intcon3,0,c	;volatile
  7524                           
  7525                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  7526  011648  8AF1               	bsf	intcon2,5,c	;volatile
  7527                           
  7528                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  7529  01164A  0EA0               	movlw	low _INT1_DefaultInterruptHandler
  7530  01164C  0101               	movlb	1	; () banked
  7531  01164E  6FF9               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  7532  011650  0E1A               	movlw	high _INT1_DefaultInterruptHandler
  7533  011652  6FFA               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7534  011654  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  7535  011656  6FFB               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7536  011658  EC26  F08D         	call	_INT1_SetInterruptHandler	;wreg free
  7537                           
  7538                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  7539  01165C  86F0               	bsf	intcon3,3,c	;volatile
  7540                           
  7541                           ;ext_int.c: 100: (INTCONbits.INT0IF = 0);
  7542  01165E  92F2               	bcf	intcon,1,c	;volatile
  7543                           
  7544                           ;ext_int.c: 101: (INTCON2bits.INTEDG0 = 0);
  7545  011660  9CF1               	bcf	intcon2,6,c	;volatile
  7546                           
  7547                           ;ext_int.c: 103: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  7548  011662  0EA2               	movlw	low _INT0_DefaultInterruptHandler
  7549  011664  0101               	movlb	1	; () banked
  7550  011666  6FF9               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  7551  011668  0E1A               	movlw	high _INT0_DefaultInterruptHandler
  7552  01166A  6FFA               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7553  01166C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  7554  01166E  6FFB               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7555  011670  EC2D  F08D         	call	_INT0_SetInterruptHandler	;wreg free
  7556                           
  7557                           ;ext_int.c: 104: (INTCONbits.INT0IE = 1);
  7558  011674  88F2               	bsf	intcon,4,c	;volatile
  7559  011676  0012               	return		;funcret
  7560  011678                     __end_of_EXT_INT_Initialize:
  7561                           	opt stack 0
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           prodh	equ	0xFF4
  7567                           prodl	equ	0xFF3
  7568                           intcon	equ	0xFF2
  7569                           intcon2	equ	0xFF1
  7570                           intcon3	equ	0xFF0
  7571                           postinc0	equ	0xFEE
  7572                           wreg	equ	0xFE8
  7573                           indf1	equ	0xFE7
  7574                           postdec1	equ	0xFE5
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           fsr2h	equ	0xFDA
  7579                           fsr2l	equ	0xFD9
  7580                           status	equ	0xFD8
  7581                           
  7582 ;; *************** function _INT1_SetInterruptHandler *****************
  7583 ;; Defined at:
  7584 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  7587 ;;		 -> INT1_DefaultInterruptHandler(1), 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7599 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;Total ram usage:        3 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    8
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_EXT_INT_Initialize
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text43
  7614  011A4C                     __ptext43:
  7615                           	opt stack 0
  7616  011A4C                     _INT1_SetInterruptHandler:
  7617                           	opt stack 20
  7618                           
  7619                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  7620                           
  7621                           ;incstack = 0
  7622  011A4C  C1F9  F090         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  7623  011A50  C1FA  F091         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  7624  011A54  C1FB  F092         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  7625  011A58  0012               	return		;funcret
  7626  011A5A                     __end_of_INT1_SetInterruptHandler:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           intcon2	equ	0xFF1
  7636                           intcon3	equ	0xFF0
  7637                           postinc0	equ	0xFEE
  7638                           wreg	equ	0xFE8
  7639                           indf1	equ	0xFE7
  7640                           postdec1	equ	0xFE5
  7641                           fsr1h	equ	0xFE2
  7642                           fsr1l	equ	0xFE1
  7643                           indf2	equ	0xFDF
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _INT0_SetInterruptHandler *****************
  7649 ;; Defined at:
  7650 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  InterruptHan    3    0[BANK1 ] PTR FTN()void 
  7653 ;;		 -> INT0_DefaultInterruptHandler(1), 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        3 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    8
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_EXT_INT_Initialize
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text44
  7680  011A5A                     __ptext44:
  7681                           	opt stack 0
  7682  011A5A                     _INT0_SetInterruptHandler:
  7683                           	opt stack 20
  7684                           
  7685                           ;ext_int.c: 78: INT0_InterruptHandler = InterruptHandler;
  7686                           
  7687                           ;incstack = 0
  7688  011A5A  C1F9  F08D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  7689  011A5E  C1FA  F08E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  7690  011A62  C1FB  F08F         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  7691  011A66  0012               	return		;funcret
  7692  011A68                     __end_of_INT0_SetInterruptHandler:
  7693                           	opt stack 0
  7694                           tblptru	equ	0xFF8
  7695                           tblptrh	equ	0xFF7
  7696                           tblptrl	equ	0xFF6
  7697                           tablat	equ	0xFF5
  7698                           prodh	equ	0xFF4
  7699                           prodl	equ	0xFF3
  7700                           intcon	equ	0xFF2
  7701                           intcon2	equ	0xFF1
  7702                           intcon3	equ	0xFF0
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           indf1	equ	0xFE7
  7706                           postdec1	equ	0xFE5
  7707                           fsr1h	equ	0xFE2
  7708                           fsr1l	equ	0xFE1
  7709                           indf2	equ	0xFDF
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8
  7713                           
  7714 ;; *************** function _Read_b_eep *****************
  7715 ;; Defined at:
  7716 ;;		line 547 in file "zigbee.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  badd            2    0[BANK1 ] unsigned int 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  1    wreg      unsigned char 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7730 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;Total ram usage:        2 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    8
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_main
  7741 ;;		_Store_ID
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text45
  7746  0119FE                     __ptext45:
  7747                           	opt stack 0
  7748  0119FE                     _Read_b_eep:
  7749                           	opt stack 22
  7750                           
  7751                           ;zigbee.c: 549: EEADR = (badd & 0x0FF);
  7752                           
  7753                           ;incstack = 0
  7754  0119FE  C1F9  FF62         	movff	Read_b_eep@badd,3938	;volatile
  7755                           
  7756                           ;zigbee.c: 550: EECON1bits.CFGS = 0;
  7757  011A02  9C7F               	bcf	3967,6,c	;volsfr
  7758                           
  7759                           ;zigbee.c: 551: EECON1bits.EEPGD = 0;
  7760  011A04  9E7F               	bcf	3967,7,c	;volsfr
  7761                           
  7762                           ;zigbee.c: 552: EECON1bits.RD = 1;
  7763  011A06  807F               	bsf	3967,0,c	;volsfr
  7764                           
  7765                           ;zigbee.c: 553: __nop();
  7766  011A08  F000               	nop	
  7767                           
  7768                           ;zigbee.c: 554: __nop();
  7769  011A0A  F000               	nop	
  7770                           
  7771                           ;zigbee.c: 555: return (EEDATA);
  7772  011A0C  5061               	movf	3937,w,c	;volatile
  7773  011A0E  0012               	return	
  7774  011A10                     __end_of_Read_b_eep:
  7775                           	opt stack 0
  7776                           tblptru	equ	0xFF8
  7777                           tblptrh	equ	0xFF7
  7778                           tblptrl	equ	0xFF6
  7779                           tablat	equ	0xFF5
  7780                           prodh	equ	0xFF4
  7781                           prodl	equ	0xFF3
  7782                           intcon	equ	0xFF2
  7783                           intcon2	equ	0xFF1
  7784                           intcon3	equ	0xFF0
  7785                           postinc0	equ	0xFEE
  7786                           wreg	equ	0xFE8
  7787                           indf1	equ	0xFE7
  7788                           postdec1	equ	0xFE5
  7789                           fsr1h	equ	0xFE2
  7790                           fsr1l	equ	0xFE1
  7791                           indf2	equ	0xFDF
  7792                           fsr2h	equ	0xFDA
  7793                           fsr2l	equ	0xFD9
  7794                           status	equ	0xFD8
  7795                           
  7796 ;; *************** function _LcdInit *****************
  7797 ;; Defined at:
  7798 ;;		line 974 in file "2_April_WaterMeterMain.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:   10
  7819 ;; This function calls:
  7820 ;;		_Delayms
  7821 ;;		_LcdCmd
  7822 ;; This function is called by:
  7823 ;;		_main
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text46
  7828  0112D8                     __ptext46:
  7829                           	opt stack 0
  7830  0112D8                     _LcdInit:
  7831                           	opt stack 20
  7832                           
  7833                           ;2_April_WaterMeterMain.c: 976: LcdCmd(0x38);
  7834                           
  7835                           ;incstack = 0
  7836  0112D8  0E38               	movlw	56
  7837  0112DA  EC59  F08C         	call	_LcdCmd
  7838                           
  7839                           ;2_April_WaterMeterMain.c: 977: Delayms(10);
  7840  0112DE  0E00               	movlw	0
  7841  0112E0  0101               	movlb	1	; () banked
  7842  0112E2  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  7843  0112E4  0E0A               	movlw	10
  7844  0112E6  6FF9               	movwf	Delayms@time& (0+255),b
  7845  0112E8  EC8C  F08A         	call	_Delayms	;wreg free
  7846                           
  7847                           ;2_April_WaterMeterMain.c: 978: LcdCmd(0x0E);
  7848  0112EC  0E0E               	movlw	14
  7849  0112EE  EC59  F08C         	call	_LcdCmd
  7850                           
  7851                           ;2_April_WaterMeterMain.c: 979: Delayms(10);
  7852  0112F2  0E00               	movlw	0
  7853  0112F4  0101               	movlb	1	; () banked
  7854  0112F6  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  7855  0112F8  0E0A               	movlw	10
  7856  0112FA  6FF9               	movwf	Delayms@time& (0+255),b
  7857  0112FC  EC8C  F08A         	call	_Delayms	;wreg free
  7858                           
  7859                           ;2_April_WaterMeterMain.c: 980: LcdCmd(0x01);
  7860  011300  0E01               	movlw	1
  7861  011302  EC59  F08C         	call	_LcdCmd
  7862                           
  7863                           ;2_April_WaterMeterMain.c: 981: Delayms(10);
  7864  011306  0E00               	movlw	0
  7865  011308  0101               	movlb	1	; () banked
  7866  01130A  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  7867  01130C  0E0A               	movlw	10
  7868  01130E  6FF9               	movwf	Delayms@time& (0+255),b
  7869  011310  EC8C  F08A         	call	_Delayms	;wreg free
  7870                           
  7871                           ;2_April_WaterMeterMain.c: 982: LcdCmd(0x80);
  7872  011314  0E80               	movlw	128
  7873  011316  EC59  F08C         	call	_LcdCmd
  7874                           
  7875                           ;2_April_WaterMeterMain.c: 983: Delayms(10);
  7876  01131A  0E00               	movlw	0
  7877  01131C  0101               	movlb	1	; () banked
  7878  01131E  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  7879  011320  0E0A               	movlw	10
  7880  011322  6FF9               	movwf	Delayms@time& (0+255),b
  7881  011324  EC8C  F08A         	call	_Delayms	;wreg free
  7882  011328  0012               	return		;funcret
  7883  01132A                     __end_of_LcdInit:
  7884                           	opt stack 0
  7885                           tblptru	equ	0xFF8
  7886                           tblptrh	equ	0xFF7
  7887                           tblptrl	equ	0xFF6
  7888                           tablat	equ	0xFF5
  7889                           prodh	equ	0xFF4
  7890                           prodl	equ	0xFF3
  7891                           intcon	equ	0xFF2
  7892                           intcon2	equ	0xFF1
  7893                           intcon3	equ	0xFF0
  7894                           postinc0	equ	0xFEE
  7895                           wreg	equ	0xFE8
  7896                           indf1	equ	0xFE7
  7897                           postdec1	equ	0xFE5
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           indf2	equ	0xFDF
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function _LcdDisplay *****************
  7906 ;; Defined at:
  7907 ;;		line 1002 in file "2_April_WaterMeterMain.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  LINE            1    wreg     unsigned char 
  7910 ;;  string          2   21[BANK2 ] PTR const unsigned char 
  7911 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  7912 ;;		 -> STR_3(19), STR_2(19), STR_1(19), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  LINE            1   23[BANK2 ] unsigned char 
  7915 ;;  data            1    0        unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7925 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;Total ram usage:        3 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   10
  7932 ;; This function calls:
  7933 ;;		_LcdCmd
  7934 ;;		_LcdData
  7935 ;; This function is called by:
  7936 ;;		_main
  7937 ;;		_DeleteAllSms
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text47
  7942  0114D8                     __ptext47:
  7943                           	opt stack 0
  7944  0114D8                     _LcdDisplay:
  7945                           	opt stack 20
  7946                           
  7947                           ;incstack = 0
  7948                           ;LcdDisplay@LINE stored from wreg
  7949  0114D8  0102               	movlb	2	; () banked
  7950  0114DA  6F7B               	movwf	LcdDisplay@LINE& (0+255),b
  7951                           
  7952                           ;2_April_WaterMeterMain.c: 1004: unsigned char data;
  7953                           ;2_April_WaterMeterMain.c: 1005: LcdCmd(LINE);
  7954  0114DC  0102               	movlb	2	; () banked
  7955  0114DE  517B               	movf	LcdDisplay@LINE& (0+255),w,b
  7956  0114E0  EC59  F08C         	call	_LcdCmd
  7957                           
  7958                           ;2_April_WaterMeterMain.c: 1007: while(*string != '\0')
  7959  0114E4  D00D               	goto	l652
  7960  0114E6                     
  7961                           ;2_April_WaterMeterMain.c: 1008: {
  7962                           ;2_April_WaterMeterMain.c: 1009: LcdData(*string);
  7963  0114E6  C279  FFF6         	movff	LcdDisplay@string,tblptrl
  7964  0114EA  C27A  FFF7         	movff	LcdDisplay@string+1,tblptrh
  7965  0114EE                     	if	0	;tblptru may be non-zero
  7966  0114EE                     	endif
  7967  0114EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7968  0114EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7969  0114F0  6EF8               	movwf	tblptru,c
  7970  0114F2                     	endif
  7971  0114F2  0008               	tblrd		*
  7972  0114F4  50F5               	movf	tablat,w,c
  7973  0114F6  EC49  F08C         	call	_LcdData
  7974                           
  7975                           ;2_April_WaterMeterMain.c: 1010: string++;
  7976  0114FA  0102               	movlb	2	; () banked
  7977  0114FC  4B79               	infsnz	LcdDisplay@string& (0+255),f,b
  7978  0114FE  2B7A               	incf	(LcdDisplay@string+1)& (0+255),f,b
  7979  011500                     l652:
  7980                           
  7981                           ; BSR set to: 2
  7982  011500  C279  FFF6         	movff	LcdDisplay@string,tblptrl
  7983  011504  C27A  FFF7         	movff	LcdDisplay@string+1,tblptrh
  7984  011508                     	if	0	;tblptru may be non-zero
  7985  011508                     	endif
  7986  011508                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7987  011508  0E00               	movlw	low (__mediumconst shr (0+16))
  7988  01150A  6EF8               	movwf	tblptru,c
  7989  01150C                     	endif
  7990  01150C  0008               	tblrd		*
  7991  01150E  50F5               	movf	tablat,w,c
  7992  011510  0900               	iorlw	0
  7993  011512  B4D8               	btfsc	status,2,c
  7994  011514  0012               	return	
  7995  011516  D7E7               	goto	l653
  7996  011518                     __end_of_LcdDisplay:
  7997                           	opt stack 0
  7998                           tblptru	equ	0xFF8
  7999                           tblptrh	equ	0xFF7
  8000                           tblptrl	equ	0xFF6
  8001                           tablat	equ	0xFF5
  8002                           prodh	equ	0xFF4
  8003                           prodl	equ	0xFF3
  8004                           intcon	equ	0xFF2
  8005                           intcon2	equ	0xFF1
  8006                           intcon3	equ	0xFF0
  8007                           postinc0	equ	0xFEE
  8008                           wreg	equ	0xFE8
  8009                           indf1	equ	0xFE7
  8010                           postdec1	equ	0xFE5
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           fsr2h	equ	0xFDA
  8015                           fsr2l	equ	0xFD9
  8016                           status	equ	0xFD8
  8017                           
  8018 ;; *************** function _LcdData *****************
  8019 ;; Defined at:
  8020 ;;		line 950 in file "2_April_WaterMeterMain.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  value           1    wreg     unsigned char 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  value           1    6[BANK1 ] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;Total ram usage:        1 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    9
  8041 ;; This function calls:
  8042 ;;		_Delayms
  8043 ;; This function is called by:
  8044 ;;		_main
  8045 ;;		_LcdDisplay
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text48
  8050  011892                     __ptext48:
  8051                           	opt stack 0
  8052  011892                     _LcdData:
  8053                           	opt stack 20
  8054                           
  8055                           ;incstack = 0
  8056                           ;LcdData@value stored from wreg
  8057  011892  0101               	movlb	1	; () banked
  8058  011894  6FFF               	movwf	LcdData@value& (0+255),b
  8059                           
  8060                           ;2_April_WaterMeterMain.c: 952: PORTE=value;
  8061  011896  C1FF  FF84         	movff	LcdData@value,3972	;volatile
  8062                           
  8063                           ;2_April_WaterMeterMain.c: 953: PORTFbits.RF1=1;
  8064  01189A  8285               	bsf	3973,1,c	;volatile
  8065                           
  8066                           ;2_April_WaterMeterMain.c: 954: __nop();
  8067  01189C  F000               	nop	
  8068                           
  8069                           ;2_April_WaterMeterMain.c: 955: PORTFbits.RF3=1;
  8070  01189E  8685               	bsf	3973,3,c	;volatile
  8071                           
  8072                           ;2_April_WaterMeterMain.c: 956: Delayms(5);
  8073  0118A0  0E00               	movlw	0
  8074  0118A2  0101               	movlb	1	; () banked
  8075  0118A4  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  8076  0118A6  0E05               	movlw	5
  8077  0118A8  6FF9               	movwf	Delayms@time& (0+255),b
  8078  0118AA  EC8C  F08A         	call	_Delayms	;wreg free
  8079                           
  8080                           ;2_April_WaterMeterMain.c: 957: PORTFbits.RF3=0;
  8081  0118AE  9685               	bcf	3973,3,c	;volatile
  8082  0118B0  0012               	return		;funcret
  8083  0118B2                     __end_of_LcdData:
  8084                           	opt stack 0
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           intcon2	equ	0xFF1
  8093                           intcon3	equ	0xFF0
  8094                           postinc0	equ	0xFEE
  8095                           wreg	equ	0xFE8
  8096                           indf1	equ	0xFE7
  8097                           postdec1	equ	0xFE5
  8098                           fsr1h	equ	0xFE2
  8099                           fsr1l	equ	0xFE1
  8100                           indf2	equ	0xFDF
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function _LcdCmd *****************
  8106 ;; Defined at:
  8107 ;;		line 959 in file "2_April_WaterMeterMain.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  value           1    wreg     unsigned char 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  value           1    6[BANK1 ] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      void 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0, cstack
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;Total ram usage:        1 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    9
  8128 ;; This function calls:
  8129 ;;		_Delayms
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;;		_lcd_off_cursor
  8133 ;;		_lcd_clear
  8134 ;;		_LcdInit
  8135 ;;		_LcdDisplay
  8136 ;;		_scroll
  8137 ;;		_stop_scroll
  8138 ;;		_lcd_on_cursor
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text49
  8143  0118B2                     __ptext49:
  8144                           	opt stack 0
  8145  0118B2                     _LcdCmd:
  8146                           	opt stack 20
  8147                           
  8148                           ;incstack = 0
  8149                           ;LcdCmd@value stored from wreg
  8150  0118B2  0101               	movlb	1	; () banked
  8151  0118B4  6FFF               	movwf	LcdCmd@value& (0+255),b
  8152                           
  8153                           ;2_April_WaterMeterMain.c: 961: PORTE=value;
  8154  0118B6  C1FF  FF84         	movff	LcdCmd@value,3972	;volatile
  8155                           
  8156                           ;2_April_WaterMeterMain.c: 962: PORTFbits.RF1=0;
  8157  0118BA  9285               	bcf	3973,1,c	;volatile
  8158                           
  8159                           ;2_April_WaterMeterMain.c: 963: __nop();
  8160  0118BC  F000               	nop	
  8161                           
  8162                           ;2_April_WaterMeterMain.c: 964: PORTFbits.RF3=1;
  8163  0118BE  8685               	bsf	3973,3,c	;volatile
  8164                           
  8165                           ;2_April_WaterMeterMain.c: 965: Delayms(5);
  8166  0118C0  0E00               	movlw	0
  8167  0118C2  0101               	movlb	1	; () banked
  8168  0118C4  6FFA               	movwf	(Delayms@time+1)& (0+255),b
  8169  0118C6  0E05               	movlw	5
  8170  0118C8  6FF9               	movwf	Delayms@time& (0+255),b
  8171  0118CA  EC8C  F08A         	call	_Delayms	;wreg free
  8172                           
  8173                           ;2_April_WaterMeterMain.c: 966: PORTFbits.RF3=0;
  8174  0118CE  9685               	bcf	3973,3,c	;volatile
  8175  0118D0  0012               	return		;funcret
  8176  0118D2                     __end_of_LcdCmd:
  8177                           	opt stack 0
  8178                           tblptru	equ	0xFF8
  8179                           tblptrh	equ	0xFF7
  8180                           tblptrl	equ	0xFF6
  8181                           tablat	equ	0xFF5
  8182                           prodh	equ	0xFF4
  8183                           prodl	equ	0xFF3
  8184                           intcon	equ	0xFF2
  8185                           intcon2	equ	0xFF1
  8186                           intcon3	equ	0xFF0
  8187                           postinc0	equ	0xFEE
  8188                           wreg	equ	0xFE8
  8189                           indf1	equ	0xFE7
  8190                           postdec1	equ	0xFE5
  8191                           fsr1h	equ	0xFE2
  8192                           fsr1l	equ	0xFE1
  8193                           indf2	equ	0xFDF
  8194                           fsr2h	equ	0xFDA
  8195                           fsr2l	equ	0xFD9
  8196                           status	equ	0xFD8
  8197                           
  8198 ;; *************** function _Delayms *****************
  8199 ;; Defined at:
  8200 ;;		line 480 in file "zigbee.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  time            2    0[BANK1 ] unsigned int 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  l               2    4[BANK1 ] int 
  8205 ;;  k               2    2[BANK1 ] int 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8215 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;Total ram usage:        6 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    8
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_main
  8226 ;;		_LcdData
  8227 ;;		_LcdCmd
  8228 ;;		_LcdInit
  8229 ;;		_Sprint
  8230 ;;		_SprintRom
  8231 ;;		_DeleteAllSms
  8232 ;;		_Calling
  8233 ;;		_Message_Send_Frame_1
  8234 ;;		_Message_Send_Frame_2
  8235 ;;		_Message_Send_Frame_3
  8236 ;;		_Message_Send_Frame_LDR_ON
  8237 ;;		_Message_Send_Frame_LDR_OFF
  8238 ;;		_Message_Send_Frame_Parking_light_Board
  8239 ;;		_stop_scroll
  8240 ;;		_LcdReady
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text50
  8245  011518                     __ptext50:
  8246                           	opt stack 0
  8247  011518                     _Delayms:
  8248                           	opt stack 20
  8249                           
  8250                           ;zigbee.c: 482: int k,l;
  8251                           ;zigbee.c: 483: for(k=0;k<time;k++)
  8252                           
  8253                           ;incstack = 0
  8254  011518  0E00               	movlw	0
  8255  01151A  0101               	movlb	1	; () banked
  8256  01151C  6FFC               	movwf	(Delayms@k+1)& (0+255),b
  8257  01151E  0E00               	movlw	0
  8258  011520  6FFB               	movwf	Delayms@k& (0+255),b
  8259  011522  D011               	goto	l1063
  8260  011524                     
  8261                           ; BSR set to: 1
  8262                           ;zigbee.c: 484: for(l=0;l<=500;l++);
  8263                           
  8264                           ; BSR set to: 1
  8265  011524  0E00               	movlw	0
  8266  011526  6FFE               	movwf	(Delayms@l+1)& (0+255),b
  8267  011528  0E00               	movlw	0
  8268  01152A  6FFD               	movwf	Delayms@l& (0+255),b
  8269  01152C                     l4630:
  8270                           
  8271                           ; BSR set to: 1
  8272  01152C  BFFE               	btfsc	(Delayms@l+1)& (0+255),7,b
  8273  01152E  D006               	goto	l1065
  8274  011530  0EF5               	movlw	245
  8275  011532  5DFD               	subwf	Delayms@l& (0+255),w,b
  8276  011534  0E01               	movlw	1
  8277  011536  59FE               	subwfb	(Delayms@l+1)& (0+255),w,b
  8278  011538  B0D8               	btfsc	status,0,c
  8279  01153A  D003               	goto	u2420
  8280  01153C                     l1065:
  8281                           
  8282                           ; BSR set to: 1
  8283                           
  8284                           ; BSR set to: 1
  8285  01153C  4BFD               	infsnz	Delayms@l& (0+255),f,b
  8286  01153E  2BFE               	incf	(Delayms@l+1)& (0+255),f,b
  8287  011540  D7F5               	goto	l4630
  8288  011542                     u2420:
  8289                           
  8290                           ; BSR set to: 1
  8291                           
  8292                           ; BSR set to: 1
  8293  011542  4BFB               	infsnz	Delayms@k& (0+255),f,b
  8294  011544  2BFC               	incf	(Delayms@k+1)& (0+255),f,b
  8295  011546                     l1063:
  8296                           
  8297                           ; BSR set to: 1
  8298                           
  8299                           ; BSR set to: 1
  8300  011546  51F9               	movf	Delayms@time& (0+255),w,b
  8301  011548  5DFB               	subwf	Delayms@k& (0+255),w,b
  8302  01154A  51FA               	movf	(Delayms@time+1)& (0+255),w,b
  8303  01154C  59FC               	subwfb	(Delayms@k+1)& (0+255),w,b
  8304  01154E  A0D8               	btfss	status,0,c
  8305  011550  D7E9               	goto	l1064
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;zigbee.c: 485: __nop();
  8309  011552  F000               	nop	
  8310                           
  8311                           ;zigbee.c: 486: __nop();
  8312  011554  F000               	nop	
  8313  011556  0012               	return		;funcret
  8314  011558                     __end_of_Delayms:
  8315                           	opt stack 0
  8316                           tblptru	equ	0xFF8
  8317                           tblptrh	equ	0xFF7
  8318                           tblptrl	equ	0xFF6
  8319                           tablat	equ	0xFF5
  8320                           prodh	equ	0xFF4
  8321                           prodl	equ	0xFF3
  8322                           intcon	equ	0xFF2
  8323                           intcon2	equ	0xFF1
  8324                           intcon3	equ	0xFF0
  8325                           postinc0	equ	0xFEE
  8326                           wreg	equ	0xFE8
  8327                           indf1	equ	0xFE7
  8328                           postdec1	equ	0xFE5
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8
  8335                           
  8336 ;; *************** function _InitSPI *****************
  8337 ;; Defined at:
  8338 ;;		line 442 in file "zigbee.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    9
  8359 ;; This function calls:
  8360 ;;		_delay
  8361 ;; This function is called by:
  8362 ;;		_main
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text51
  8367  0117BE                     __ptext51:
  8368                           	opt stack 0
  8369  0117BE                     _InitSPI:
  8370                           	opt stack 21
  8371                           
  8372                           ;zigbee.c: 443: SSP1CON1bits.SSPM0 = 0;
  8373                           
  8374                           ;incstack = 0
  8375  0117BE  90C6               	bcf	4038,0,c	;volatile
  8376                           
  8377                           ;zigbee.c: 444: SSP1CON1bits.SSPM1 = 0;
  8378  0117C0  92C6               	bcf	4038,1,c	;volatile
  8379                           
  8380                           ;zigbee.c: 445: SSP1CON1bits.SSPM2 = 0;
  8381  0117C2  94C6               	bcf	4038,2,c	;volatile
  8382                           
  8383                           ;zigbee.c: 446: SSP1CON1bits.SSPM3 = 0;
  8384  0117C4  96C6               	bcf	4038,3,c	;volatile
  8385                           
  8386                           ;zigbee.c: 448: TRISCbits.TRISC5 = 0;
  8387  0117C6  9A94               	bcf	3988,5,c	;volatile
  8388                           
  8389                           ;zigbee.c: 449: TRISCbits.TRISC3 = 0;
  8390  0117C8  9694               	bcf	3988,3,c	;volatile
  8391                           
  8392                           ;zigbee.c: 450: SSP1CON1bits.SSPEN = 1;
  8393  0117CA  8AC6               	bsf	4038,5,c	;volatile
  8394                           
  8395                           ;zigbee.c: 453: SSP1STATbits.SMP = 1;
  8396  0117CC  8EC7               	bsf	4039,7,c	;volatile
  8397                           
  8398                           ;zigbee.c: 454: SSP1CON1bits.CKP = 0;
  8399  0117CE  98C6               	bcf	4038,4,c	;volatile
  8400                           
  8401                           ;zigbee.c: 455: SSP1STATbits.CKE = 1;
  8402  0117D0  8CC7               	bsf	4039,6,c	;volatile
  8403                           
  8404                           ;zigbee.c: 456: delay(10);
  8405  0117D2  0E00               	movlw	0
  8406  0117D4  0101               	movlb	1	; () banked
  8407  0117D6  6FFA               	movwf	(delay@dly+1)& (0+255),b
  8408  0117D8  0E0A               	movlw	10
  8409  0117DA  6FF9               	movwf	delay@dly& (0+255),b
  8410  0117DC  EC69  F08C         	call	_delay	;wreg free
  8411  0117E0  0012               	return		;funcret
  8412  0117E2                     __end_of_InitSPI:
  8413                           	opt stack 0
  8414                           tblptru	equ	0xFF8
  8415                           tblptrh	equ	0xFF7
  8416                           tblptrl	equ	0xFF6
  8417                           tablat	equ	0xFF5
  8418                           prodh	equ	0xFF4
  8419                           prodl	equ	0xFF3
  8420                           intcon	equ	0xFF2
  8421                           intcon2	equ	0xFF1
  8422                           intcon3	equ	0xFF0
  8423                           postinc0	equ	0xFEE
  8424                           wreg	equ	0xFE8
  8425                           indf1	equ	0xFE7
  8426                           postdec1	equ	0xFE5
  8427                           fsr1h	equ	0xFE2
  8428                           fsr1l	equ	0xFE1
  8429                           indf2	equ	0xFDF
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function _delay *****************
  8435 ;; Defined at:
  8436 ;;		line 472 in file "zigbee.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  dly             2    0[BANK1 ] unsigned int 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  l               2    2[BANK1 ] unsigned int 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8450 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;Total ram usage:        4 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    8
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_InitSPI
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text52
  8465  0118D2                     __ptext52:
  8466                           	opt stack 0
  8467  0118D2                     _delay:
  8468                           	opt stack 21
  8469                           
  8470                           ;zigbee.c: 473: unsigned int l;
  8471                           ;zigbee.c: 474: for(l=0;l<dly;l++);
  8472                           
  8473                           ;incstack = 0
  8474  0118D2  0E00               	movlw	0
  8475  0118D4  0101               	movlb	1	; () banked
  8476  0118D6  6FFC               	movwf	(delay@l+1)& (0+255),b
  8477  0118D8  0E00               	movlw	0
  8478  0118DA  6FFB               	movwf	delay@l& (0+255),b
  8479  0118DC  D002               	goto	l1051
  8480  0118DE                     
  8481                           ; BSR set to: 1
  8482                           
  8483                           ; BSR set to: 1
  8484  0118DE  4BFB               	infsnz	delay@l& (0+255),f,b
  8485  0118E0  2BFC               	incf	(delay@l+1)& (0+255),f,b
  8486  0118E2                     l1051:
  8487                           
  8488                           ; BSR set to: 1
  8489                           
  8490                           ; BSR set to: 1
  8491  0118E2  51F9               	movf	delay@dly& (0+255),w,b
  8492  0118E4  5DFB               	subwf	delay@l& (0+255),w,b
  8493  0118E6  51FA               	movf	(delay@dly+1)& (0+255),w,b
  8494  0118E8  59FC               	subwfb	(delay@l+1)& (0+255),w,b
  8495  0118EA  B0D8               	btfsc	status,0,c
  8496  0118EC  0012               	return	
  8497  0118EE  D7F7               	goto	l1052
  8498  0118F0                     __end_of_delay:
  8499                           	opt stack 0
  8500                           tblptru	equ	0xFF8
  8501                           tblptrh	equ	0xFF7
  8502                           tblptrl	equ	0xFF6
  8503                           tablat	equ	0xFF5
  8504                           prodh	equ	0xFF4
  8505                           prodl	equ	0xFF3
  8506                           intcon	equ	0xFF2
  8507                           intcon2	equ	0xFF1
  8508                           intcon3	equ	0xFF0
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           indf1	equ	0xFE7
  8512                           postdec1	equ	0xFE5
  8513                           fsr1h	equ	0xFE2
  8514                           fsr1l	equ	0xFE1
  8515                           indf2	equ	0xFDF
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  8521 ;; Defined at:
  8522 ;;		line 208 in file "2_April_WaterMeterMain.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;		None
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Temps:          0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;Total ram usage:       21 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    7
  8543 ;; This function calls:
  8544 ;;		_INT1_ISR
  8545 ;;		_TMR0_ISR
  8546 ;;		_Write_b_eep
  8547 ;;		___lmul
  8548 ;;		i1___lldiv
  8549 ;; This function is called by:
  8550 ;;		Interrupt level 1
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	intcodelo
  8555  000018                     __pintcodelo:
  8556                           	opt stack 0
  8557  000018                     _INTERRUPT_InterruptManagerLow:
  8558                           	opt stack 18
  8559                           
  8560                           ; BSR set to: 1
  8561                           ;incstack = 0
  8562  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8563  00001A  CFD8 F264          	movff	status,??_INTERRUPT_InterruptManagerLow
  8564  00001E  CFE8 F265          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  8565  000022  CFE0 F266          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  8566  000026  CFFA F267          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  8567  00002A  CFFB F268          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  8568  00002E  CFE9 F269          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  8569  000032  CFEA F26A          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  8570  000036  CFE1 F26B          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  8571  00003A  CFE2 F26C          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  8572  00003E  CFD9 F26D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  8573  000042  CFDA F26E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  8574  000046  CFF3 F26F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  8575  00004A  CFF4 F270          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  8576  00004E  CFF6 F271          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  8577  000052  CFF7 F272          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  8578  000056  CFF8 F273          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  8579  00005A  CFF5 F274          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  8580  00005E  C04B  F275         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  8581  000062  C04C  F276         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  8582  000066  C04D  F277         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  8583  00006A  C04E  F278         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  8584                           
  8585                           ;2_April_WaterMeterMain.c: 212: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  8586  00006E  B6F0               	btfsc	intcon3,3,c	;volatile
  8587  000070  A0F0               	btfss	intcon3,0,c	;volatile
  8588  000072  D010               	goto	i1l535
  8589                           
  8590                           ;2_April_WaterMeterMain.c: 213: {
  8591                           ;2_April_WaterMeterMain.c: 214: frequency++;
  8592  000074  0E01               	movlw	1
  8593  000076  0100               	movlb	0	; () banked
  8594  000078  277E               	addwf	_frequency& (0+255),f,b
  8595  00007A  0E00               	movlw	0
  8596  00007C  237F               	addwfc	(_frequency+1)& (0+255),f,b
  8597  00007E  2380               	addwfc	(_frequency+2)& (0+255),f,b
  8598  000080  2381               	addwfc	(_frequency+3)& (0+255),f,b
  8599                           
  8600                           ;2_April_WaterMeterMain.c: 215: pulse++;
  8601  000082  0E01               	movlw	1
  8602  000084  2776               	addwf	_pulse& (0+255),f,b
  8603  000086  0E00               	movlw	0
  8604  000088  2377               	addwfc	(_pulse+1)& (0+255),f,b
  8605  00008A  2378               	addwfc	(_pulse+2)& (0+255),f,b
  8606  00008C  2379               	addwfc	(_pulse+3)& (0+255),f,b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;2_April_WaterMeterMain.c: 216: INT1_ISR();
  8610  00008E  EC46  F08D         	call	_INT1_ISR	;wreg free
  8611                           
  8612                           ;2_April_WaterMeterMain.c: 217: }
  8613  000092  D066               	goto	i1l537
  8614  000094                     i1l535:
  8615                           
  8616                           ;2_April_WaterMeterMain.c: 218: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1
      +                          )
  8617  000094  BAF2               	btfsc	intcon,5,c	;volatile
  8618  000096  A4F2               	btfss	intcon,2,c	;volatile
  8619  000098  D063               	goto	i1l537
  8620                           
  8621                           ;2_April_WaterMeterMain.c: 219: {
  8622                           ;2_April_WaterMeterMain.c: 220: second++;
  8623  00009A  2A01               	incf	_second,f,c
  8624                           
  8625                           ;2_April_WaterMeterMain.c: 221: if(second>=60){
  8626  00009C  0E3B               	movlw	59
  8627  00009E  6401               	cpfsgt	_second,c
  8628  0000A0  D05D               	goto	i1l538
  8629                           
  8630                           ;2_April_WaterMeterMain.c: 222: second=0;
  8631  0000A2  0E00               	movlw	0
  8632  0000A4  6E01               	movwf	_second,c
  8633                           
  8634                           ;2_April_WaterMeterMain.c: 223: flowrate=(frequency * 60)/7;
  8635  0000A6  C07E  F0C8         	movff	_frequency,___lmul@multiplier
  8636  0000AA  C07F  F0C9         	movff	_frequency+1,___lmul@multiplier+1
  8637  0000AE  C080  F0CA         	movff	_frequency+2,___lmul@multiplier+2
  8638  0000B2  C081  F0CB         	movff	_frequency+3,___lmul@multiplier+3
  8639  0000B6  0E3C               	movlw	60
  8640  0000B8  0100               	movlb	0	; () banked
  8641  0000BA  6FCC               	movwf	___lmul@multiplicand& (0+255),b
  8642  0000BC  0E00               	movlw	0
  8643  0000BE  6FCD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8644  0000C0  0E00               	movlw	0
  8645  0000C2  6FCE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8646  0000C4  0E00               	movlw	0
  8647  0000C6  6FCF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8648  0000C8  EC40  F089         	call	___lmul	;wreg free
  8649  0000CC  C0C8  F0D4         	movff	?___lmul,i1___lldiv@dividend
  8650  0000D0  C0C9  F0D5         	movff	?___lmul+1,i1___lldiv@dividend+1
  8651  0000D4  C0CA  F0D6         	movff	?___lmul+2,i1___lldiv@dividend+2
  8652  0000D8  C0CB  F0D7         	movff	?___lmul+3,i1___lldiv@dividend+3
  8653  0000DC  0E07               	movlw	7
  8654  0000DE  0100               	movlb	0	; () banked
  8655  0000E0  6FD8               	movwf	i1___lldiv@divisor& (0+255),b
  8656  0000E2  0E00               	movlw	0
  8657  0000E4  6FD9               	movwf	(i1___lldiv@divisor+1)& (0+255),b
  8658  0000E6  0E00               	movlw	0
  8659  0000E8  6FDA               	movwf	(i1___lldiv@divisor+2)& (0+255),b
  8660  0000EA  0E00               	movlw	0
  8661  0000EC  6FDB               	movwf	(i1___lldiv@divisor+3)& (0+255),b
  8662  0000EE  EC25  F088         	call	i1___lldiv	;wreg free
  8663  0000F2  C0D4  F07A         	movff	?i1___lldiv,_flowrate
  8664  0000F6  C0D5  F07B         	movff	?i1___lldiv+1,_flowrate+1
  8665  0000FA  C0D6  F07C         	movff	?i1___lldiv+2,_flowrate+2
  8666  0000FE  C0D7  F07D         	movff	?i1___lldiv+3,_flowrate+3
  8667                           
  8668                           ;2_April_WaterMeterMain.c: 224: Litre=pulse/(7 * 60);
  8669  000102  C076  F0D4         	movff	_pulse,i1___lldiv@dividend
  8670  000106  C077  F0D5         	movff	_pulse+1,i1___lldiv@dividend+1
  8671  00010A  C078  F0D6         	movff	_pulse+2,i1___lldiv@dividend+2
  8672  00010E  C079  F0D7         	movff	_pulse+3,i1___lldiv@dividend+3
  8673  000112  0EA4               	movlw	164
  8674  000114  0100               	movlb	0	; () banked
  8675  000116  6FD8               	movwf	i1___lldiv@divisor& (0+255),b
  8676  000118  0E01               	movlw	1
  8677  00011A  6FD9               	movwf	(i1___lldiv@divisor+1)& (0+255),b
  8678  00011C  0E00               	movlw	0
  8679  00011E  6FDA               	movwf	(i1___lldiv@divisor+2)& (0+255),b
  8680  000120  0E00               	movlw	0
  8681  000122  6FDB               	movwf	(i1___lldiv@divisor+3)& (0+255),b
  8682  000124  EC25  F088         	call	i1___lldiv	;wreg free
  8683  000128  C0D4  F072         	movff	?i1___lldiv,_Litre
  8684  00012C  C0D5  F073         	movff	?i1___lldiv+1,_Litre+1
  8685  000130  C0D6  F074         	movff	?i1___lldiv+2,_Litre+2
  8686  000134  C0D7  F075         	movff	?i1___lldiv+3,_Litre+3
  8687                           
  8688                           ;2_April_WaterMeterMain.c: 225: Write_b_eep(0x01,Litre);
  8689  000138  0E00               	movlw	0
  8690  00013A  0100               	movlb	0	; () banked
  8691  00013C  6FC9               	movwf	(Write_b_eep@badd+1)& (0+255),b
  8692  00013E  0E01               	movlw	1
  8693  000140  6FC8               	movwf	Write_b_eep@badd& (0+255),b
  8694  000142  C072  F0CA         	movff	_Litre,Write_b_eep@data
  8695  000146  ECEB  F08A         	call	_Write_b_eep	;wreg free
  8696                           
  8697                           ;2_April_WaterMeterMain.c: 226: frequency=0;
  8698  00014A  0E00               	movlw	0
  8699  00014C  0100               	movlb	0	; () banked
  8700  00014E  6F7E               	movwf	_frequency& (0+255),b
  8701  000150  0E00               	movlw	0
  8702  000152  6F7F               	movwf	(_frequency+1)& (0+255),b
  8703  000154  0E00               	movlw	0
  8704  000156  6F80               	movwf	(_frequency+2)& (0+255),b
  8705  000158  0E00               	movlw	0
  8706  00015A  6F81               	movwf	(_frequency+3)& (0+255),b
  8707  00015C                     i1l538:
  8708                           
  8709                           ;2_April_WaterMeterMain.c: 227: }
  8710                           ;2_April_WaterMeterMain.c: 229: TMR0_ISR();
  8711                           
  8712                           ; BSR set to: 0
  8713  00015C  ECA7  F08B         	call	_TMR0_ISR	;wreg free
  8714  000160                     i1l537:
  8715                           
  8716                           ;2_April_WaterMeterMain.c: 231: else
  8717                           ;2_April_WaterMeterMain.c: 232: {
  8718  000160  C278  F04E         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
  8719  000164  C277  F04D         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
  8720  000168  C276  F04C         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
  8721  00016C  C275  F04B         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
  8722  000170  C274  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
  8723  000174  C273  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
  8724  000178  C272  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
  8725  00017C  C271  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
  8726  000180  C270  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
  8727  000184  C26F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
  8728  000188  C26E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
  8729  00018C  C26D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
  8730  000190  C26C  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
  8731  000194  C26B  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
  8732  000198  C26A  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
  8733  00019C  C269  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
  8734  0001A0  C268  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  8735  0001A4  C267  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  8736  0001A8  C266  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  8737  0001AC  C265  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  8738  0001B0  C264  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  8739  0001B4  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8740  0001B6  0010               	retfie	
  8741  0001B8                     __end_of_INTERRUPT_InterruptManagerLow:
  8742                           	opt stack 0
  8743                           pclatu	equ	0xFFB
  8744                           pclath	equ	0xFFA
  8745                           tblptru	equ	0xFF8
  8746                           tblptrh	equ	0xFF7
  8747                           tblptrl	equ	0xFF6
  8748                           tablat	equ	0xFF5
  8749                           prodh	equ	0xFF4
  8750                           prodl	equ	0xFF3
  8751                           intcon	equ	0xFF2
  8752                           intcon2	equ	0xFF1
  8753                           intcon3	equ	0xFF0
  8754                           postinc0	equ	0xFEE
  8755                           fsr0h	equ	0xFEA
  8756                           fsr0l	equ	0xFE9
  8757                           wreg	equ	0xFE8
  8758                           indf1	equ	0xFE7
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           bsr	equ	0xFE0
  8763                           indf2	equ	0xFDF
  8764                           fsr2h	equ	0xFDA
  8765                           fsr2l	equ	0xFD9
  8766                           status	equ	0xFD8
  8767                           
  8768 ;; *************** function i1___lldiv *****************
  8769 ;; Defined at:
  8770 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  dividend        4   12[BANK0 ] unsigned long 
  8773 ;;  divisor         4   16[BANK0 ] unsigned long 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  __lldiv         4   20[BANK0 ] unsigned long 
  8776 ;;  __lldiv         1   24[BANK0 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  4   12[BANK0 ] unsigned long 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:       13 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    4
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_INTERRUPT_InterruptManagerLow
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text54
  8801  01104A                     __ptext54:
  8802                           	opt stack 0
  8803  01104A                     i1___lldiv:
  8804                           	opt stack 20
  8805                           
  8806                           ;incstack = 0
  8807  01104A  0E00               	movlw	0
  8808  01104C  0100               	movlb	0	; () banked
  8809  01104E  6FDC               	movwf	i1___lldiv@quotient& (0+255),b
  8810  011050  0E00               	movlw	0
  8811  011052  6FDD               	movwf	(i1___lldiv@quotient+1)& (0+255),b
  8812  011054  0E00               	movlw	0
  8813  011056  6FDE               	movwf	(i1___lldiv@quotient+2)& (0+255),b
  8814  011058  0E00               	movlw	0
  8815  01105A  6FDF               	movwf	(i1___lldiv@quotient+3)& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818  01105C  51D8               	movf	i1___lldiv@divisor& (0+255),w,b
  8819  01105E  11D9               	iorwf	(i1___lldiv@divisor+1)& (0+255),w,b
  8820  011060  11DA               	iorwf	(i1___lldiv@divisor+2)& (0+255),w,b
  8821  011062  11DB               	iorwf	(i1___lldiv@divisor+3)& (0+255),w,b
  8822  011064  B4D8               	btfsc	status,2,c
  8823  011066  D02A               	goto	i1l1464
  8824                           
  8825                           ; BSR set to: 0
  8826  011068  0E01               	movlw	1
  8827  01106A  6FE0               	movwf	i1___lldiv@counter& (0+255),b
  8828  01106C  D006               	goto	i1l1459
  8829  01106E                     
  8830                           ; BSR set to: 0
  8831                           
  8832                           ; BSR set to: 0
  8833  01106E  90D8               	bcf	status,0,c
  8834  011070  37D8               	rlcf	i1___lldiv@divisor& (0+255),f,b
  8835  011072  37D9               	rlcf	(i1___lldiv@divisor+1)& (0+255),f,b
  8836  011074  37DA               	rlcf	(i1___lldiv@divisor+2)& (0+255),f,b
  8837  011076  37DB               	rlcf	(i1___lldiv@divisor+3)& (0+255),f,b
  8838  011078  2BE0               	incf	i1___lldiv@counter& (0+255),f,b
  8839  01107A                     i1l1459:
  8840                           
  8841                           ; BSR set to: 0
  8842                           
  8843                           ; BSR set to: 0
  8844  01107A  AFDB               	btfss	(i1___lldiv@divisor+3)& (0+255),7,b
  8845  01107C  D7F8               	goto	i1l1460
  8846  01107E                     i1u292_20:
  8847                           
  8848                           ; BSR set to: 0
  8849                           
  8850                           ; BSR set to: 0
  8851                           
  8852                           ; BSR set to: 0
  8853  01107E  90D8               	bcf	status,0,c
  8854  011080  37DC               	rlcf	i1___lldiv@quotient& (0+255),f,b
  8855  011082  37DD               	rlcf	(i1___lldiv@quotient+1)& (0+255),f,b
  8856  011084  37DE               	rlcf	(i1___lldiv@quotient+2)& (0+255),f,b
  8857  011086  37DF               	rlcf	(i1___lldiv@quotient+3)& (0+255),f,b
  8858                           
  8859                           ; BSR set to: 0
  8860  011088  51D8               	movf	i1___lldiv@divisor& (0+255),w,b
  8861  01108A  5DD4               	subwf	i1___lldiv@dividend& (0+255),w,b
  8862  01108C  51D9               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
  8863  01108E  59D5               	subwfb	(i1___lldiv@dividend+1)& (0+255),w,b
  8864  011090  51DA               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
  8865  011092  59D6               	subwfb	(i1___lldiv@dividend+2)& (0+255),w,b
  8866  011094  51DB               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
  8867  011096  59D7               	subwfb	(i1___lldiv@dividend+3)& (0+255),w,b
  8868  011098  A0D8               	btfss	status,0,c
  8869  01109A  D009               	goto	i1l1463
  8870                           
  8871                           ; BSR set to: 0
  8872  01109C  51D8               	movf	i1___lldiv@divisor& (0+255),w,b
  8873  01109E  5FD4               	subwf	i1___lldiv@dividend& (0+255),f,b
  8874  0110A0  51D9               	movf	(i1___lldiv@divisor+1)& (0+255),w,b
  8875  0110A2  5BD5               	subwfb	(i1___lldiv@dividend+1)& (0+255),f,b
  8876  0110A4  51DA               	movf	(i1___lldiv@divisor+2)& (0+255),w,b
  8877  0110A6  5BD6               	subwfb	(i1___lldiv@dividend+2)& (0+255),f,b
  8878  0110A8  51DB               	movf	(i1___lldiv@divisor+3)& (0+255),w,b
  8879  0110AA  5BD7               	subwfb	(i1___lldiv@dividend+3)& (0+255),f,b
  8880                           
  8881                           ; BSR set to: 0
  8882  0110AC  81DC               	bsf	i1___lldiv@quotient& (0+255),0,b
  8883  0110AE                     i1l1463:
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ; BSR set to: 0
  8888  0110AE  90D8               	bcf	status,0,c
  8889  0110B0  33DB               	rrcf	(i1___lldiv@divisor+3)& (0+255),f,b
  8890  0110B2  33DA               	rrcf	(i1___lldiv@divisor+2)& (0+255),f,b
  8891  0110B4  33D9               	rrcf	(i1___lldiv@divisor+1)& (0+255),f,b
  8892  0110B6  33D8               	rrcf	i1___lldiv@divisor& (0+255),f,b
  8893                           
  8894                           ; BSR set to: 0
  8895  0110B8  2FE0               	decfsz	i1___lldiv@counter& (0+255),f,b
  8896  0110BA  D7E1               	goto	i1u292_20
  8897  0110BC                     i1l1464:
  8898                           
  8899                           ; BSR set to: 0
  8900                           
  8901                           ; BSR set to: 0
  8902  0110BC  C0DC  F0D4         	movff	i1___lldiv@quotient,?i1___lldiv
  8903  0110C0  C0DD  F0D5         	movff	i1___lldiv@quotient+1,?i1___lldiv+1
  8904  0110C4  C0DE  F0D6         	movff	i1___lldiv@quotient+2,?i1___lldiv+2
  8905  0110C8  C0DF  F0D7         	movff	i1___lldiv@quotient+3,?i1___lldiv+3
  8906                           
  8907                           ; BSR set to: 0
  8908  0110CC  0012               	return		;funcret
  8909  0110CE                     __end_ofi1___lldiv:
  8910                           	opt stack 0
  8911                           pclatu	equ	0xFFB
  8912                           pclath	equ	0xFFA
  8913                           tblptru	equ	0xFF8
  8914                           tblptrh	equ	0xFF7
  8915                           tblptrl	equ	0xFF6
  8916                           tablat	equ	0xFF5
  8917                           prodh	equ	0xFF4
  8918                           prodl	equ	0xFF3
  8919                           intcon	equ	0xFF2
  8920                           intcon2	equ	0xFF1
  8921                           intcon3	equ	0xFF0
  8922                           postinc0	equ	0xFEE
  8923                           fsr0h	equ	0xFEA
  8924                           fsr0l	equ	0xFE9
  8925                           wreg	equ	0xFE8
  8926                           indf1	equ	0xFE7
  8927                           postdec1	equ	0xFE5
  8928                           fsr1h	equ	0xFE2
  8929                           fsr1l	equ	0xFE1
  8930                           bsr	equ	0xFE0
  8931                           indf2	equ	0xFDF
  8932                           fsr2h	equ	0xFDA
  8933                           fsr2l	equ	0xFD9
  8934                           status	equ	0xFD8
  8935                           
  8936 ;; *************** function ___lmul *****************
  8937 ;; Defined at:
  8938 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\Umul32.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8941 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;  product         4    8[BANK0 ] unsigned long 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  4    0[BANK0 ] unsigned long 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8953 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;Total ram usage:       12 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    4
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_INTERRUPT_InterruptManagerLow
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text55
  8968  011280                     __ptext55:
  8969                           	opt stack 0
  8970  011280                     ___lmul:
  8971                           	opt stack 20
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;incstack = 0
  8975  011280  0E00               	movlw	0
  8976  011282  0100               	movlb	0	; () banked
  8977  011284  6FD0               	movwf	___lmul@product& (0+255),b
  8978  011286  0E00               	movlw	0
  8979  011288  6FD1               	movwf	(___lmul@product+1)& (0+255),b
  8980  01128A  0E00               	movlw	0
  8981  01128C  6FD2               	movwf	(___lmul@product+2)& (0+255),b
  8982  01128E  0E00               	movlw	0
  8983  011290  6FD3               	movwf	(___lmul@product+3)& (0+255),b
  8984  011292                     
  8985                           ; BSR set to: 0
  8986                           
  8987                           ; BSR set to: 0
  8988  011292  A1C8               	btfss	___lmul@multiplier& (0+255),0,b
  8989  011294  D008               	goto	i1l1121
  8990                           
  8991                           ; BSR set to: 0
  8992  011296  51CC               	movf	___lmul@multiplicand& (0+255),w,b
  8993  011298  27D0               	addwf	___lmul@product& (0+255),f,b
  8994  01129A  51CD               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  8995  01129C  23D1               	addwfc	(___lmul@product+1)& (0+255),f,b
  8996  01129E  51CE               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  8997  0112A0  23D2               	addwfc	(___lmul@product+2)& (0+255),f,b
  8998  0112A2  51CF               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  8999  0112A4  23D3               	addwfc	(___lmul@product+3)& (0+255),f,b
  9000  0112A6                     i1l1121:
  9001                           
  9002                           ; BSR set to: 0
  9003                           
  9004                           ; BSR set to: 0
  9005  0112A6  90D8               	bcf	status,0,c
  9006  0112A8  37CC               	rlcf	___lmul@multiplicand& (0+255),f,b
  9007  0112AA  37CD               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9008  0112AC  37CE               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9009  0112AE  37CF               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9010                           
  9011                           ; BSR set to: 0
  9012  0112B0  90D8               	bcf	status,0,c
  9013  0112B2  33CB               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9014  0112B4  33CA               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9015  0112B6  33C9               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9016  0112B8  33C8               	rrcf	___lmul@multiplier& (0+255),f,b
  9017  0112BA  51C8               	movf	___lmul@multiplier& (0+255),w,b
  9018  0112BC  11C9               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9019  0112BE  11CA               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9020  0112C0  11CB               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9021  0112C2  A4D8               	btfss	status,2,c
  9022  0112C4  D7E6               	goto	i1l1120
  9023                           
  9024                           ; BSR set to: 0
  9025  0112C6  C0D0  F0C8         	movff	___lmul@product,?___lmul
  9026  0112CA  C0D1  F0C9         	movff	___lmul@product+1,?___lmul+1
  9027  0112CE  C0D2  F0CA         	movff	___lmul@product+2,?___lmul+2
  9028  0112D2  C0D3  F0CB         	movff	___lmul@product+3,?___lmul+3
  9029                           
  9030                           ; BSR set to: 0
  9031  0112D6  0012               	return		;funcret
  9032  0112D8                     __end_of___lmul:
  9033                           	opt stack 0
  9034                           pclatu	equ	0xFFB
  9035                           pclath	equ	0xFFA
  9036                           tblptru	equ	0xFF8
  9037                           tblptrh	equ	0xFF7
  9038                           tblptrl	equ	0xFF6
  9039                           tablat	equ	0xFF5
  9040                           prodh	equ	0xFF4
  9041                           prodl	equ	0xFF3
  9042                           intcon	equ	0xFF2
  9043                           intcon2	equ	0xFF1
  9044                           intcon3	equ	0xFF0
  9045                           postinc0	equ	0xFEE
  9046                           fsr0h	equ	0xFEA
  9047                           fsr0l	equ	0xFE9
  9048                           wreg	equ	0xFE8
  9049                           indf1	equ	0xFE7
  9050                           postdec1	equ	0xFE5
  9051                           fsr1h	equ	0xFE2
  9052                           fsr1l	equ	0xFE1
  9053                           bsr	equ	0xFE0
  9054                           indf2	equ	0xFDF
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _Write_b_eep *****************
  9060 ;; Defined at:
  9061 ;;		line 530 in file "zigbee.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  badd            2    0[BANK0 ] unsigned int 
  9064 ;;  data            1    2[BANK0 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  GIE_BIT_VAL     1    3[BANK0 ] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9076 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;Total ram usage:        4 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    4
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_INTERRUPT_InterruptManagerLow
  9087 ;;		_Store_ID
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text56
  9092  0115D6                     __ptext56:
  9093                           	opt stack 0
  9094  0115D6                     _Write_b_eep:
  9095                           	opt stack 20
  9096                           
  9097                           ;zigbee.c: 531: char GIE_BIT_VAL = 0;
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;incstack = 0
  9101  0115D6  0E00               	movlw	0
  9102  0115D8  0100               	movlb	0	; () banked
  9103  0115DA  6FCB               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;zigbee.c: 532: EEADR = (badd & 0x0FF);
  9107  0115DC  C0C8  FF62         	movff	Write_b_eep@badd,3938	;volatile
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;zigbee.c: 533: EEDATA = data;
  9111  0115E0  C0CA  FF61         	movff	Write_b_eep@data,3937	;volatile
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;zigbee.c: 534: EECON1bits.EEPGD = 0;
  9115  0115E4  9E7F               	bcf	3967,7,c	;volsfr
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;zigbee.c: 535: EECON1bits.CFGS = 0;
  9119  0115E6  9C7F               	bcf	3967,6,c	;volsfr
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;zigbee.c: 536: EECON1bits.WREN = 1;
  9123  0115E8  847F               	bsf	3967,2,c	;volsfr
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;zigbee.c: 537: GIE_BIT_VAL = INTCONbits.GIE;
  9127  0115EA  0E00               	movlw	0
  9128  0115EC  BEF2               	btfsc	intcon,7,c	;volatile
  9129  0115EE  0E01               	movlw	1
  9130  0115F0  6FCB               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;zigbee.c: 538: INTCONbits.GIE = 0;
  9134  0115F2  9EF2               	bcf	intcon,7,c	;volatile
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;zigbee.c: 539: EECON2 = 0x55;
  9138  0115F4  0E55               	movlw	85
  9139  0115F6  6E7E               	movwf	3966,c	;volsfr
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;zigbee.c: 540: EECON2 = 0xAA;
  9143  0115F8  0EAA               	movlw	170
  9144  0115FA  6E7E               	movwf	3966,c	;volsfr
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;zigbee.c: 541: EECON1bits.WR = 1;
  9148  0115FC  827F               	bsf	3967,1,c	;volsfr
  9149  0115FE                     
  9150                           ; BSR set to: 0
  9151  0115FE  B27F               	btfsc	3967,1,c	;volsfr
  9152  011600  D7FE               	goto	i1l1097
  9153                           
  9154                           ;zigbee.c: 543: INTCONbits.GIE = GIE_BIT_VAL;
  9155  011602  0100               	movlb	0	; () banked
  9156  011604  B1CB               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  9157  011606  D002               	bra	i1u257_25
  9158  011608  9EF2               	bcf	intcon,7,c	;volatile
  9159  01160A  D001               	bra	i1u257_26
  9160  01160C                     i1u257_25:
  9161  01160C  8EF2               	bsf	intcon,7,c	;volatile
  9162  01160E                     i1u257_26:
  9163                           
  9164                           ;zigbee.c: 544: EECON1bits.WREN = 0;
  9165  01160E  947F               	bcf	3967,2,c	;volsfr
  9166  011610  0012               	return		;funcret
  9167  011612                     __end_of_Write_b_eep:
  9168                           	opt stack 0
  9169                           pclatu	equ	0xFFB
  9170                           pclath	equ	0xFFA
  9171                           tblptru	equ	0xFF8
  9172                           tblptrh	equ	0xFF7
  9173                           tblptrl	equ	0xFF6
  9174                           tablat	equ	0xFF5
  9175                           prodh	equ	0xFF4
  9176                           prodl	equ	0xFF3
  9177                           intcon	equ	0xFF2
  9178                           intcon2	equ	0xFF1
  9179                           intcon3	equ	0xFF0
  9180                           postinc0	equ	0xFEE
  9181                           fsr0h	equ	0xFEA
  9182                           fsr0l	equ	0xFE9
  9183                           wreg	equ	0xFE8
  9184                           indf1	equ	0xFE7
  9185                           postdec1	equ	0xFE5
  9186                           fsr1h	equ	0xFE2
  9187                           fsr1l	equ	0xFE1
  9188                           bsr	equ	0xFE0
  9189                           indf2	equ	0xFDF
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8
  9193                           
  9194 ;; *************** function _TMR0_ISR *****************
  9195 ;; Defined at:
  9196 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    6
  9217 ;; This function calls:
  9218 ;;		_TMR0_CallBack
  9219 ;; This function is called by:
  9220 ;;		_INTERRUPT_InterruptManagerLow
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text57
  9225  01174E                     __ptext57:
  9226                           	opt stack 0
  9227  01174E                     _TMR0_ISR:
  9228                           	opt stack 18
  9229                           
  9230                           ;tmr0.c: 130: static volatile uint16_t CountCallBack = 0;
  9231                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  9232                           
  9233                           ;incstack = 0
  9234  01174E  94F2               	bcf	intcon,2,c	;volatile
  9235                           
  9236                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  9237  011750  C0BF  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  9238                           
  9239                           ;tmr0.c: 139: if (++CountCallBack >= 152)
  9240  011754  0100               	movlb	0	; () banked
  9241  011756  4BA1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  9242  011758  2BA2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9243  01175A  51A2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9244  01175C  E104               	bnz	i1u351_20
  9245  01175E  0E98               	movlw	152
  9246  011760  5DA1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  9247  011762  A0D8               	btfss	status,0,c
  9248  011764  0012               	return	
  9249  011766                     i1u351_20:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;tmr0.c: 140: {
  9253                           ;tmr0.c: 142: TMR0_CallBack();
  9254  011766  ECF1  F08B         	call	_TMR0_CallBack	;wreg free
  9255                           
  9256                           ;tmr0.c: 145: CountCallBack = 0;
  9257  01176A  0E00               	movlw	0
  9258  01176C  0100               	movlb	0	; () banked
  9259  01176E  6FA2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  9260  011770  0E00               	movlw	0
  9261  011772  6FA1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  9262  011774  0012               	return	
  9263  011776                     __end_of_TMR0_ISR:
  9264                           	opt stack 0
  9265                           pclatu	equ	0xFFB
  9266                           pclath	equ	0xFFA
  9267                           tblptru	equ	0xFF8
  9268                           tblptrh	equ	0xFF7
  9269                           tblptrl	equ	0xFF6
  9270                           tablat	equ	0xFF5
  9271                           prodh	equ	0xFF4
  9272                           prodl	equ	0xFF3
  9273                           intcon	equ	0xFF2
  9274                           intcon2	equ	0xFF1
  9275                           intcon3	equ	0xFF0
  9276                           postinc0	equ	0xFEE
  9277                           fsr0h	equ	0xFEA
  9278                           fsr0l	equ	0xFE9
  9279                           wreg	equ	0xFE8
  9280                           indf1	equ	0xFE7
  9281                           postdec1	equ	0xFE5
  9282                           fsr1h	equ	0xFE2
  9283                           fsr1l	equ	0xFE1
  9284                           bsr	equ	0xFE0
  9285                           indf2	equ	0xFDF
  9286                           fsr2h	equ	0xFDA
  9287                           fsr2l	equ	0xFD9
  9288                           status	equ	0xFD8
  9289                           
  9290 ;; *************** function _TMR0_CallBack *****************
  9291 ;; Defined at:
  9292 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    5
  9313 ;; This function calls:
  9314 ;;		Absolute function
  9315 ;;		_TMR0_DefaultInterruptHandler
  9316 ;; This function is called by:
  9317 ;;		_TMR0_ISR
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text58
  9322  0117E2                     __ptext58:
  9323                           	opt stack 0
  9324  0117E2                     _TMR0_CallBack:
  9325                           	opt stack 18
  9326                           
  9327                           ;tmr0.c: 155: if(TMR0_InterruptHandler)
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331  0117E2  0100               	movlb	0	; () banked
  9332  0117E4  518A               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9333  0117E6  118B               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9334  0117E8  118C               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9335  0117EA  B4D8               	btfsc	status,2,c
  9336  0117EC  0012               	return	
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;tmr0.c: 156: {
  9340                           ;tmr0.c: 157: TMR0_InterruptHandler();
  9341  0117EE  D801               	call	i1u350_28
  9342  0117F0  0012               	return	
  9343  0117F2                     i1u350_28:
  9344  0117F2  0005               	push	
  9345  0117F4  6EFA               	movwf	pclath,c
  9346  0117F6  518A               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9347  0117F8  6EFD               	movwf	tosl,c
  9348  0117FA  518B               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9349  0117FC  6EFE               	movwf	tosh,c
  9350  0117FE  518C               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  9351  011800  6EFF               	movwf	tosu,c
  9352  011802  50FA               	movf	pclath,w,c
  9353  011804  0012               	return		;indir
  9354  011806                     __end_of_TMR0_CallBack:
  9355                           	opt stack 0
  9356                           tosu	equ	0xFFF
  9357                           tosh	equ	0xFFE
  9358                           tosl	equ	0xFFD
  9359                           pclatu	equ	0xFFB
  9360                           pclath	equ	0xFFA
  9361                           tblptru	equ	0xFF8
  9362                           tblptrh	equ	0xFF7
  9363                           tblptrl	equ	0xFF6
  9364                           tablat	equ	0xFF5
  9365                           prodh	equ	0xFF4
  9366                           prodl	equ	0xFF3
  9367                           intcon	equ	0xFF2
  9368                           intcon2	equ	0xFF1
  9369                           intcon3	equ	0xFF0
  9370                           postinc0	equ	0xFEE
  9371                           fsr0h	equ	0xFEA
  9372                           fsr0l	equ	0xFE9
  9373                           wreg	equ	0xFE8
  9374                           indf1	equ	0xFE7
  9375                           postdec1	equ	0xFE5
  9376                           fsr1h	equ	0xFE2
  9377                           fsr1l	equ	0xFE1
  9378                           bsr	equ	0xFE0
  9379                           indf2	equ	0xFDF
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
  9383                           
  9384 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9385 ;; Defined at:
  9386 ;;		line 165 in file "mcc_generated_files/tmr0.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		None
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    4
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_TMR0_Initialize
  9411 ;;		_TMR0_CallBack
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text59
  9416  011A9E                     __ptext59:
  9417                           	opt stack 0
  9418  011A9E                     _TMR0_DefaultInterruptHandler:
  9419                           	opt stack 18
  9420                           
  9421                           ;incstack = 0
  9422  011A9E  0012               	return		;funcret
  9423  011AA0                     __end_of_TMR0_DefaultInterruptHandler:
  9424                           	opt stack 0
  9425                           tosu	equ	0xFFF
  9426                           tosh	equ	0xFFE
  9427                           tosl	equ	0xFFD
  9428                           pclatu	equ	0xFFB
  9429                           pclath	equ	0xFFA
  9430                           tblptru	equ	0xFF8
  9431                           tblptrh	equ	0xFF7
  9432                           tblptrl	equ	0xFF6
  9433                           tablat	equ	0xFF5
  9434                           prodh	equ	0xFF4
  9435                           prodl	equ	0xFF3
  9436                           intcon	equ	0xFF2
  9437                           intcon2	equ	0xFF1
  9438                           intcon3	equ	0xFF0
  9439                           postinc0	equ	0xFEE
  9440                           fsr0h	equ	0xFEA
  9441                           fsr0l	equ	0xFE9
  9442                           wreg	equ	0xFE8
  9443                           indf1	equ	0xFE7
  9444                           postdec1	equ	0xFE5
  9445                           fsr1h	equ	0xFE2
  9446                           fsr1l	equ	0xFE1
  9447                           bsr	equ	0xFE0
  9448                           indf2	equ	0xFDF
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function _INT1_ISR *****************
  9454 ;; Defined at:
  9455 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    6
  9476 ;; This function calls:
  9477 ;;		_INT1_CallBack
  9478 ;; This function is called by:
  9479 ;;		_INTERRUPT_InterruptManagerLow
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text60
  9484  011A8C                     __ptext60:
  9485                           	opt stack 0
  9486  011A8C                     _INT1_ISR:
  9487                           	opt stack 18
  9488                           
  9489                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  9490                           
  9491                           ;incstack = 0
  9492  011A8C  90F0               	bcf	intcon3,0,c	;volatile
  9493                           
  9494                           ;ext_int.c: 38: INT1_CallBack();
  9495  011A8E  EC03  F08C         	call	_INT1_CallBack	;wreg free
  9496  011A92  0012               	return		;funcret
  9497  011A94                     __end_of_INT1_ISR:
  9498                           	opt stack 0
  9499                           tosu	equ	0xFFF
  9500                           tosh	equ	0xFFE
  9501                           tosl	equ	0xFFD
  9502                           pclatu	equ	0xFFB
  9503                           pclath	equ	0xFFA
  9504                           tblptru	equ	0xFF8
  9505                           tblptrh	equ	0xFF7
  9506                           tblptrl	equ	0xFF6
  9507                           tablat	equ	0xFF5
  9508                           prodh	equ	0xFF4
  9509                           prodl	equ	0xFF3
  9510                           intcon	equ	0xFF2
  9511                           intcon2	equ	0xFF1
  9512                           intcon3	equ	0xFF0
  9513                           postinc0	equ	0xFEE
  9514                           fsr0h	equ	0xFEA
  9515                           fsr0l	equ	0xFE9
  9516                           wreg	equ	0xFE8
  9517                           indf1	equ	0xFE7
  9518                           postdec1	equ	0xFE5
  9519                           fsr1h	equ	0xFE2
  9520                           fsr1l	equ	0xFE1
  9521                           bsr	equ	0xFE0
  9522                           indf2	equ	0xFDF
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _INT1_CallBack *****************
  9528 ;; Defined at:
  9529 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    5
  9550 ;; This function calls:
  9551 ;;		Absolute function
  9552 ;;		_INT1_DefaultInterruptHandler
  9553 ;; This function is called by:
  9554 ;;		_INT1_ISR
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text61
  9559  011806                     __ptext61:
  9560                           	opt stack 0
  9561  011806                     _INT1_CallBack:
  9562                           	opt stack 18
  9563                           
  9564                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  9565                           
  9566                           ;incstack = 0
  9567  011806  0100               	movlb	0	; () banked
  9568  011808  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
  9569  01180A  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9570  01180C  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
  9571  01180E  B4D8               	btfsc	status,2,c
  9572  011810  0012               	return	
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;ext_int.c: 46: {
  9576                           ;ext_int.c: 47: INT1_InterruptHandler();
  9577  011812  D801               	call	i1u346_28
  9578  011814  0012               	return	
  9579  011816                     i1u346_28:
  9580  011816  0005               	push	
  9581  011818  6EFA               	movwf	pclath,c
  9582  01181A  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
  9583  01181C  6EFD               	movwf	tosl,c
  9584  01181E  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9585  011820  6EFE               	movwf	tosh,c
  9586  011822  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
  9587  011824  6EFF               	movwf	tosu,c
  9588  011826  50FA               	movf	pclath,w,c
  9589  011828  0012               	return		;indir
  9590  01182A                     __end_of_INT1_CallBack:
  9591                           	opt stack 0
  9592                           tosu	equ	0xFFF
  9593                           tosh	equ	0xFFE
  9594                           tosl	equ	0xFFD
  9595                           pclatu	equ	0xFFB
  9596                           pclath	equ	0xFFA
  9597                           tblptru	equ	0xFF8
  9598                           tblptrh	equ	0xFF7
  9599                           tblptrl	equ	0xFF6
  9600                           tablat	equ	0xFF5
  9601                           prodh	equ	0xFF4
  9602                           prodl	equ	0xFF3
  9603                           intcon	equ	0xFF2
  9604                           intcon2	equ	0xFF1
  9605                           intcon3	equ	0xFF0
  9606                           postinc0	equ	0xFEE
  9607                           fsr0h	equ	0xFEA
  9608                           fsr0l	equ	0xFE9
  9609                           wreg	equ	0xFE8
  9610                           indf1	equ	0xFE7
  9611                           postdec1	equ	0xFE5
  9612                           fsr1h	equ	0xFE2
  9613                           fsr1l	equ	0xFE1
  9614                           bsr	equ	0xFE0
  9615                           indf2	equ	0xFDF
  9616                           fsr2h	equ	0xFDA
  9617                           fsr2l	equ	0xFD9
  9618                           status	equ	0xFD8
  9619                           
  9620 ;; *************** function _INT1_DefaultInterruptHandler *****************
  9621 ;; Defined at:
  9622 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;		None
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;		None
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		None
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;Total ram usage:        0 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    4
  9643 ;; This function calls:
  9644 ;;		Nothing
  9645 ;; This function is called by:
  9646 ;;		_EXT_INT_Initialize
  9647 ;;		_INT1_CallBack
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text62
  9652  011AA0                     __ptext62:
  9653                           	opt stack 0
  9654  011AA0                     _INT1_DefaultInterruptHandler:
  9655                           	opt stack 18
  9656                           
  9657                           ;incstack = 0
  9658  011AA0  0012               	return		;funcret
  9659  011AA2                     __end_of_INT1_DefaultInterruptHandler:
  9660                           	opt stack 0
  9661                           tosu	equ	0xFFF
  9662                           tosh	equ	0xFFE
  9663                           tosl	equ	0xFFD
  9664                           pclatu	equ	0xFFB
  9665                           pclath	equ	0xFFA
  9666                           tblptru	equ	0xFF8
  9667                           tblptrh	equ	0xFF7
  9668                           tblptrl	equ	0xFF6
  9669                           tablat	equ	0xFF5
  9670                           prodh	equ	0xFF4
  9671                           prodl	equ	0xFF3
  9672                           intcon	equ	0xFF2
  9673                           intcon2	equ	0xFF1
  9674                           intcon3	equ	0xFF0
  9675                           postinc0	equ	0xFEE
  9676                           fsr0h	equ	0xFEA
  9677                           fsr0l	equ	0xFE9
  9678                           wreg	equ	0xFE8
  9679                           indf1	equ	0xFE7
  9680                           postdec1	equ	0xFE5
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           bsr	equ	0xFE0
  9684                           indf2	equ	0xFDF
  9685                           fsr2h	equ	0xFDA
  9686                           fsr2l	equ	0xFD9
  9687                           status	equ	0xFD8
  9688                           
  9689 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  9690 ;; Defined at:
  9691 ;;		line 185 in file "2_April_WaterMeterMain.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;		None
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;Total ram usage:       20 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    3
  9712 ;; This function calls:
  9713 ;;		_INT0_ISR
  9714 ;;		_read_RX_FIFO
  9715 ;;		i2_Xor_check
  9716 ;;		i2_read_ZIGBEE_short
  9717 ;; This function is called by:
  9718 ;;		Interrupt level 2
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	intcode
  9723  000008                     __pintcode:
  9724                           	opt stack 0
  9725  000008                     _INTERRUPT_InterruptManagerHigh:
  9726                           	opt stack 18
  9727                           
  9728                           ;incstack = 0
  9729  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9730  00000A  EF69  F085         	goto	int_func
  9731                           tosu	equ	0xFFF
  9732                           tosh	equ	0xFFE
  9733                           tosl	equ	0xFFD
  9734                           pclatu	equ	0xFFB
  9735                           pclath	equ	0xFFA
  9736                           tblptru	equ	0xFF8
  9737                           tblptrh	equ	0xFF7
  9738                           tblptrl	equ	0xFF6
  9739                           tablat	equ	0xFF5
  9740                           prodh	equ	0xFF4
  9741                           prodl	equ	0xFF3
  9742                           intcon	equ	0xFF2
  9743                           intcon2	equ	0xFF1
  9744                           intcon3	equ	0xFF0
  9745                           postinc0	equ	0xFEE
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postdec1	equ	0xFE5
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           bsr	equ	0xFE0
  9754                           indf2	equ	0xFDF
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759                           	psect	intcode_body
  9760  010AD2                     __pintcode_body:
  9761                           	opt stack 18
  9762  010AD2                     int_func:
  9763                           	opt stack 18
  9764  010AD2  CFFA F037          	movff	pclath,??_INTERRUPT_InterruptManagerHigh+2
  9765  010AD6  CFFB F038          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+3
  9766  010ADA  CFE9 F039          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+4
  9767  010ADE  CFEA F03A          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+5
  9768  010AE2  CFE1 F03B          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+6
  9769  010AE6  CFE2 F03C          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+7
  9770  010AEA  CFD9 F03D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+8
  9771  010AEE  CFDA F03E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+9
  9772  010AF2  CFF3 F03F          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+10
  9773  010AF6  CFF4 F040          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+11
  9774  010AFA  CFF6 F041          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+12
  9775  010AFE  CFF7 F042          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+13
  9776  010B02  CFF8 F043          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+14
  9777  010B06  CFF5 F044          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+15
  9778  010B0A  C04B  F045         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+16
  9779  010B0E  C04C  F046         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+17
  9780  010B12  C04D  F047         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+18
  9781  010B16  C04E  F048         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+19
  9782                           
  9783                           ;2_April_WaterMeterMain.c: 188: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  9784  010B1A  B8F2               	btfsc	intcon,4,c	;volatile
  9785  010B1C  A2F2               	btfss	intcon,1,c	;volatile
  9786  010B1E  D020               	goto	i2l527
  9787                           
  9788                           ;2_April_WaterMeterMain.c: 189: {
  9789                           ;2_April_WaterMeterMain.c: 190: INTTRUPT=read_ZIGBEE_short(0X31);
  9790  010B20  0E31               	movlw	49
  9791  010B22  EC38  F08C         	call	i2_read_ZIGBEE_short
  9792  010B26  6E24               	movwf	_INTTRUPT,c
  9793                           
  9794                           ;2_April_WaterMeterMain.c: 192: if((INTTRUPT & 0x08)==0x08){
  9795  010B28  A624               	btfss	_INTTRUPT,3,c
  9796  010B2A  D018               	goto	i2l528
  9797                           
  9798                           ;2_April_WaterMeterMain.c: 193: INTCONbits.GIE=0;
  9799  010B2C  9EF2               	bcf	intcon,7,c	;volatile
  9800                           
  9801                           ;2_April_WaterMeterMain.c: 194: read_RX_FIFO();
  9802  010B2E  EC88  F082         	call	_read_RX_FIFO	;wreg free
  9803                           
  9804                           ;2_April_WaterMeterMain.c: 195: INTCONbits.GIE=1;
  9805  010B32  8EF2               	bsf	intcon,7,c	;volatile
  9806                           
  9807                           ;2_April_WaterMeterMain.c: 196: CRC=Xor_check(DATA_RX,3);
  9808  010B34  0EC0               	movlw	low _DATA_RX
  9809  010B36  6E25               	movwf	i2Xor_check@data_value,c
  9810  010B38  0E00               	movlw	high _DATA_RX
  9811  010B3A  6E26               	movwf	i2Xor_check@data_value+1,c
  9812  010B3C  0E03               	movlw	3
  9813  010B3E  6E27               	movwf	i2Xor_check@length,c
  9814  010B40  ECAC  F08A         	call	i2_Xor_check	;wreg free
  9815  010B44  C025  F099         	movff	?i2_Xor_check,_CRC
  9816  010B48  C026  F09A         	movff	?i2_Xor_check+1,_CRC+1
  9817                           
  9818                           ;2_April_WaterMeterMain.c: 197: Rv_CRC=(((unsigned int)DATA_RX[3+1]<<8) | DATA_RX[3+0]);
  9819  010B4C  0100               	movlb	0	; () banked
  9820  010B4E  51C4               	movf	(_DATA_RX+4)& (0+255),w,b
  9821  010B50  6E35               	movwf	??_INTERRUPT_InterruptManagerHigh& (0+255),c
  9822  010B52  51C3               	movf	(_DATA_RX+3)& (0+255),w,b
  9823  010B54  6F9D               	movwf	_Rv_CRC& (0+255),b
  9824  010B56  C035  F09E         	movff	??_INTERRUPT_InterruptManagerHigh,_Rv_CRC+1
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;2_April_WaterMeterMain.c: 198: __nop();
  9828  010B5A  F000               	nop	
  9829  010B5C                     i2l528:
  9830                           
  9831                           ;2_April_WaterMeterMain.c: 199: }
  9832                           ;2_April_WaterMeterMain.c: 200: INT0_ISR();
  9833  010B5C  EC4A  F08D         	call	_INT0_ISR	;wreg free
  9834  010B60                     i2l527:
  9835                           
  9836                           ;2_April_WaterMeterMain.c: 202: else
  9837                           ;2_April_WaterMeterMain.c: 203: {
  9838  010B60  C048  F04E         	movff	??_INTERRUPT_InterruptManagerHigh+19,btemp+3
  9839  010B64  C047  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+18,btemp+2
  9840  010B68  C046  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+1
  9841  010B6C  C045  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp
  9842  010B70  C044  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+15,tablat
  9843  010B74  C043  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+14,tblptru
  9844  010B78  C042  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+13,tblptrh
  9845  010B7C  C041  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptrl
  9846  010B80  C040  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+11,prodh
  9847  010B84  C03F  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+10,prodl
  9848  010B88  C03E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+9,fsr2h
  9849  010B8C  C03D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+8,fsr2l
  9850  010B90  C03C  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr1h
  9851  010B94  C03B  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr1l
  9852  010B98  C03A  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr0h
  9853  010B9C  C039  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr0l
  9854  010BA0  C038  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+3,pclatu
  9855  010BA4  C037  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh+2,pclath
  9856  010BA8  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9857  010BAA  0011               	retfie		f
  9858  010BAC                     __end_of_INTERRUPT_InterruptManagerHigh:
  9859                           	opt stack 0
  9860                           tosu	equ	0xFFF
  9861                           tosh	equ	0xFFE
  9862                           tosl	equ	0xFFD
  9863                           pclatu	equ	0xFFB
  9864                           pclath	equ	0xFFA
  9865                           tblptru	equ	0xFF8
  9866                           tblptrh	equ	0xFF7
  9867                           tblptrl	equ	0xFF6
  9868                           tablat	equ	0xFF5
  9869                           prodh	equ	0xFF4
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           intcon2	equ	0xFF1
  9873                           intcon3	equ	0xFF0
  9874                           postinc0	equ	0xFEE
  9875                           fsr0h	equ	0xFEA
  9876                           fsr0l	equ	0xFE9
  9877                           wreg	equ	0xFE8
  9878                           indf1	equ	0xFE7
  9879                           postdec1	equ	0xFE5
  9880                           fsr1h	equ	0xFE2
  9881                           fsr1l	equ	0xFE1
  9882                           bsr	equ	0xFE0
  9883                           indf2	equ	0xFDF
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function i2_read_ZIGBEE_short *****************
  9889 ;; Defined at:
  9890 ;;		line 404 in file "zigbee.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  address         1    wreg     unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  address         1    2[COMRAM] unsigned char 
  9895 ;;  read_ZIGBEE_    1    3[COMRAM] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      unsigned char 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;Total ram usage:        2 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    1
  9912 ;; This function calls:
  9913 ;;		i2_SPI_Read
  9914 ;;		i2_SPI_Write
  9915 ;; This function is called by:
  9916 ;;		_INTERRUPT_InterruptManagerHigh
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text64
  9921  011870                     __ptext64:
  9922                           	opt stack 0
  9923  011870                     i2_read_ZIGBEE_short:
  9924                           	opt stack 19
  9925                           
  9926                           ;incstack = 0
  9927                           ;i2read_ZIGBEE_short@address stored from wreg
  9928  011870  6E27               	movwf	i2read_ZIGBEE_short@address,c
  9929                           
  9930                           ;zigbee.c: 405: unsigned char data_r = 0;
  9931  011872  0E00               	movlw	0
  9932  011874  6E28               	movwf	i2read_ZIGBEE_short@data_r,c
  9933                           
  9934                           ;zigbee.c: 407: PORTCbits.RC0=0;
  9935  011876  9082               	bcf	3970,0,c	;volatile
  9936                           
  9937                           ;zigbee.c: 408: address = (address << 1) & 0b01111110;
  9938  011878  5027               	movf	i2read_ZIGBEE_short@address,w,c
  9939  01187A  2427               	addwf	i2read_ZIGBEE_short@address,w,c
  9940  01187C  0B7E               	andlw	126
  9941  01187E  6E27               	movwf	i2read_ZIGBEE_short@address,c
  9942                           
  9943                           ;zigbee.c: 409: SPI_Write(address);
  9944  011880  5027               	movf	i2read_ZIGBEE_short@address,w,c
  9945  011882  EC08  F08D         	call	i2_SPI_Write
  9946                           
  9947                           ;zigbee.c: 410: data_r = SPI_Read();
  9948  011886  EC10  F08D         	call	i2_SPI_Read	;wreg free
  9949  01188A  6E28               	movwf	i2read_ZIGBEE_short@data_r,c
  9950                           
  9951                           ;zigbee.c: 411: PORTCbits.RC0=1;
  9952  01188C  8082               	bsf	3970,0,c	;volatile
  9953                           
  9954                           ;zigbee.c: 413: return data_r;
  9955  01188E  5028               	movf	i2read_ZIGBEE_short@data_r,w,c
  9956  011890  0012               	return	
  9957  011892                     __end_ofi2_read_ZIGBEE_short:
  9958                           	opt stack 0
  9959                           tosu	equ	0xFFF
  9960                           tosh	equ	0xFFE
  9961                           tosl	equ	0xFFD
  9962                           pclatu	equ	0xFFB
  9963                           pclath	equ	0xFFA
  9964                           tblptru	equ	0xFF8
  9965                           tblptrh	equ	0xFF7
  9966                           tblptrl	equ	0xFF6
  9967                           tablat	equ	0xFF5
  9968                           prodh	equ	0xFF4
  9969                           prodl	equ	0xFF3
  9970                           intcon	equ	0xFF2
  9971                           intcon2	equ	0xFF1
  9972                           intcon3	equ	0xFF0
  9973                           postinc0	equ	0xFEE
  9974                           fsr0h	equ	0xFEA
  9975                           fsr0l	equ	0xFE9
  9976                           wreg	equ	0xFE8
  9977                           indf1	equ	0xFE7
  9978                           postdec1	equ	0xFE5
  9979                           fsr1h	equ	0xFE2
  9980                           fsr1l	equ	0xFE1
  9981                           bsr	equ	0xFE0
  9982                           indf2	equ	0xFDF
  9983                           fsr2h	equ	0xFDA
  9984                           fsr2l	equ	0xFD9
  9985                           status	equ	0xFD8
  9986                           
  9987 ;; *************** function i2_Xor_check *****************
  9988 ;; Defined at:
  9989 ;;		line 504 in file "zigbee.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  data_value      2    0[COMRAM] PTR unsigned char 
  9992 ;;		 -> DATA_TX(3), DATA_RX(5), 
  9993 ;;  length          1    2[COMRAM] unsigned char 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  Xor_check       2    6[COMRAM] unsigned short 
  9996 ;;  Xor_check       2    4[COMRAM] unsigned short 
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  2    0[COMRAM] unsigned short 
  9999 ;; Registers used:
 10000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;Total ram usage:        8 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_INTERRUPT_InterruptManagerHigh
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text65
 10020  011558                     __ptext65:
 10021                           	opt stack 0
 10022  011558                     i2_Xor_check:
 10023                           	opt stack 20
 10024                           
 10025                           ;zigbee.c: 506: unsigned short xor_value = 0x8d0d;
 10026                           
 10027                           ;incstack = 0
 10028  011558  0E8D               	movlw	141
 10029  01155A  6E2A               	movwf	i2Xor_check@xor_value+1,c
 10030  01155C  0E0D               	movlw	13
 10031  01155E  6E29               	movwf	i2Xor_check@xor_value,c
 10032                           
 10033                           ;zigbee.c: 507: unsigned short xor=0x00;
 10034  011560  0E00               	movlw	0
 10035  011562  6E2C               	movwf	i2Xor_check@xor+1,c
 10036  011564  0E00               	movlw	0
 10037  011566  6E2B               	movwf	i2Xor_check@xor,c
 10038                           
 10039                           ;zigbee.c: 508: while(length --)
 10040  011568  D00A               	goto	i2l1085
 10041  01156A                     
 10042                           ;zigbee.c: 509: {
 10043                           ;zigbee.c: 510: xor_value ^= *data_value++;
 10044  01156A  C025  FFD9         	movff	i2Xor_check@data_value,fsr2l
 10045  01156E  C026  FFDA         	movff	i2Xor_check@data_value+1,fsr2h
 10046  011572  50DF               	movf	indf2,w,c
 10047  011574  6E28               	movwf	??i2_Xor_check& (0+255),c
 10048  011576  5028               	movf	??i2_Xor_check,w,c
 10049  011578  1A29               	xorwf	i2Xor_check@xor_value,f,c
 10050  01157A  4A25               	infsnz	i2Xor_check@data_value,f,c
 10051  01157C  2A26               	incf	i2Xor_check@data_value+1,f,c
 10052  01157E                     i2l1085:
 10053  01157E  0627               	decf	i2Xor_check@length,f,c
 10054  011580  2827               	incf	i2Xor_check@length,w,c
 10055  011582  A4D8               	btfss	status,2,c
 10056  011584  D7F2               	goto	i2l1086
 10057                           
 10058                           ;zigbee.c: 511: }
 10059                           ;zigbee.c: 512: xor=xor_value;
 10060  011586  C029  F02B         	movff	i2Xor_check@xor_value,i2Xor_check@xor
 10061  01158A  C02A  F02C         	movff	i2Xor_check@xor_value+1,i2Xor_check@xor+1
 10062                           
 10063                           ;zigbee.c: 513: return(xor);
 10064  01158E  C02B  F025         	movff	i2Xor_check@xor,?i2_Xor_check
 10065  011592  C02C  F026         	movff	i2Xor_check@xor+1,?i2_Xor_check+1
 10066  011596  0012               	return		;funcret
 10067  011598                     __end_ofi2_Xor_check:
 10068                           	opt stack 0
 10069                           tosu	equ	0xFFF
 10070                           tosh	equ	0xFFE
 10071                           tosl	equ	0xFFD
 10072                           pclatu	equ	0xFFB
 10073                           pclath	equ	0xFFA
 10074                           tblptru	equ	0xFF8
 10075                           tblptrh	equ	0xFF7
 10076                           tblptrl	equ	0xFF6
 10077                           tablat	equ	0xFF5
 10078                           prodh	equ	0xFF4
 10079                           prodl	equ	0xFF3
 10080                           intcon	equ	0xFF2
 10081                           intcon2	equ	0xFF1
 10082                           intcon3	equ	0xFF0
 10083                           postinc0	equ	0xFEE
 10084                           fsr0h	equ	0xFEA
 10085                           fsr0l	equ	0xFE9
 10086                           wreg	equ	0xFE8
 10087                           indf1	equ	0xFE7
 10088                           postdec1	equ	0xFE5
 10089                           fsr1h	equ	0xFE2
 10090                           fsr1l	equ	0xFE1
 10091                           bsr	equ	0xFE0
 10092                           indf2	equ	0xFDF
 10093                           fsr2h	equ	0xFDA
 10094                           fsr2l	equ	0xFD9
 10095                           status	equ	0xFD8
 10096                           
 10097 ;; *************** function _read_RX_FIFO *****************
 10098 ;; Defined at:
 10099 ;;		line 11 in file "zigbee.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;		None
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  i               1   15[COMRAM] unsigned char 
 10104 ;;  temp            1   14[COMRAM] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:        7 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    2
 10121 ;; This function calls:
 10122 ;;		_read_ZIGBEE_long
 10123 ;;		i2_write_ZIGBEE_short
 10124 ;; This function is called by:
 10125 ;;		_INTERRUPT_InterruptManagerHigh
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text66
 10130  010510                     __ptext66:
 10131                           	opt stack 0
 10132  010510                     _read_RX_FIFO:
 10133                           	opt stack 18
 10134                           
 10135                           ;zigbee.c: 13: unsigned char temp = 0;
 10136                           
 10137                           ;incstack = 0
 10138  010510  0E00               	movlw	0
 10139  010512  6E33               	movwf	read_RX_FIFO@temp,c
 10140                           
 10141                           ;zigbee.c: 14: unsigned char i = 0;
 10142  010514  0E00               	movlw	0
 10143  010516  6E34               	movwf	read_RX_FIFO@i,c
 10144                           
 10145                           ;zigbee.c: 16: temp=0;
 10146  010518  0E00               	movlw	0
 10147  01051A  6E33               	movwf	read_RX_FIFO@temp,c
 10148                           
 10149                           ;zigbee.c: 17: temp = temp | 0x04;
 10150  01051C  5033               	movf	read_RX_FIFO@temp,w,c
 10151  01051E  0904               	iorlw	4
 10152  010520  6E33               	movwf	read_RX_FIFO@temp,c
 10153                           
 10154                           ;zigbee.c: 18: write_ZIGBEE_short(0x39, temp);
 10155  010522  C033  F027         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10156  010526  0E39               	movlw	57
 10157  010528  EC78  F08C         	call	i2_write_ZIGBEE_short
 10158                           
 10159                           ;zigbee.c: 20: LENGTH=read_ZIGBEE_long(0x300);
 10160  01052C  0E03               	movlw	3
 10161  01052E  6E28               	movwf	read_ZIGBEE_long@address+1,c
 10162  010530  0E00               	movlw	0
 10163  010532  6E27               	movwf	read_ZIGBEE_long@address,c
 10164  010534  EC95  F089         	call	_read_ZIGBEE_long	;wreg free
 10165  010538  6E21               	movwf	_LENGTH,c
 10166                           
 10167                           ;zigbee.c: 21: __nop();
 10168  01053A  F000               	nop	
 10169                           
 10170                           ;zigbee.c: 22: for(i=0; i<128; i++)
 10171  01053C  0E00               	movlw	0
 10172  01053E  6E34               	movwf	read_RX_FIFO@i,c
 10173  010540  0E7F               	movlw	127
 10174  010542  6434               	cpfsgt	read_RX_FIFO@i,c
 10175  010544  D001               	goto	i2l900
 10176  010546  D06A               	goto	i2u145_40
 10177  010548                     i2l900:
 10178                           
 10179                           ;zigbee.c: 23: {
 10180                           ;zigbee.c: 24: if(i < (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10181  010548  0E2C               	movlw	low _DATA_LENGHT
 10182  01054A  6EF6               	movwf	tblptrl,c
 10183  01054C                     	if	1	;There is more than 1 active tblptr byte
 10184  01054C  0EFF               	movlw	high _DATA_LENGHT
 10185  01054E  6EF7               	movwf	tblptrh,c
 10186  010550                     	endif
 10187  010550                     	if	1	;There are 3 active tblptr bytes
 10188  010550  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10189  010552  6EF8               	movwf	tblptru,c
 10190  010554                     	endif
 10191  010554  0008               	tblrd		*
 10192  010556  50F5               	movf	tablat,w,c
 10193  010558  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10194  01055A  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10195  01055C  0E2B               	movlw	low _HEADER_LENGHT
 10196  01055E  6EF6               	movwf	tblptrl,c
 10197  010560                     	if	1	;There is more than 1 active tblptr byte
 10198  010560  0EFF               	movlw	high _HEADER_LENGHT
 10199  010562  6EF7               	movwf	tblptrh,c
 10200  010564                     	endif
 10201  010564                     	if	1	;There are 3 active tblptr bytes
 10202  010564  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10203  010566  6EF8               	movwf	tblptru,c
 10204  010568                     	endif
 10205  010568  0008               	tblrd		*
 10206  01056A  50F5               	movf	tablat,w,c
 10207  01056C  262E               	addwf	??_read_RX_FIFO,f,c
 10208  01056E  0E00               	movlw	0
 10209  010570  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10210  010572  0E05               	movlw	5
 10211  010574  262E               	addwf	??_read_RX_FIFO,f,c
 10212  010576  0E00               	movlw	0
 10213  010578  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10214  01057A  5034               	movf	read_RX_FIFO@i,w,c
 10215  01057C  6E30               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10216  01057E  6A31               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10217  010580  502E               	movf	??_read_RX_FIFO,w,c
 10218  010582  5C30               	subwf	??_read_RX_FIFO+2,w,c
 10219  010584  5031               	movf	??_read_RX_FIFO+3,w,c
 10220  010586  0A80               	xorlw	128
 10221  010588  6E32               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10222  01058A  502F               	movf	??_read_RX_FIFO+1,w,c
 10223  01058C  0A80               	xorlw	128
 10224  01058E  5832               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10225  010590  B0D8               	btfsc	status,0,c
 10226  010592  D012               	goto	i2l902
 10227                           
 10228                           ;zigbee.c: 25: data_RX_FIFO[i] = read_ZIGBEE_long(address_RX_FIFO + i);
 10229  010594  5034               	movf	read_RX_FIFO@i,w,c
 10230  010596  0D01               	mullw	1
 10231  010598  0EC0               	movlw	low _data_RX_FIFO
 10232  01059A  24F3               	addwf	prodl,w,c
 10233  01059C  6ED9               	movwf	fsr2l,c
 10234  01059E  0E01               	movlw	high _data_RX_FIFO
 10235  0105A0  20F4               	addwfc	prodh,w,c
 10236  0105A2  6EDA               	movwf	fsr2h,c
 10237  0105A4  5034               	movf	read_RX_FIFO@i,w,c
 10238  0105A6  0100               	movlb	0	; () banked
 10239  0105A8  25E5               	addwf	_address_RX_FIFO& (0+255),w,b
 10240  0105AA  6E27               	movwf	read_ZIGBEE_long@address,c
 10241  0105AC  0E00               	movlw	0
 10242  0105AE  21E6               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10243  0105B0  6E28               	movwf	read_ZIGBEE_long@address+1,c
 10244  0105B2  EC95  F089         	call	_read_ZIGBEE_long	;wreg free
 10245  0105B6  6EDF               	movwf	indf2,c
 10246  0105B8                     i2l902:
 10247                           
 10248                           ;zigbee.c: 26: if(i >= (1 + DATA_LENGHT + HEADER_LENGHT + 2 + 1 + 1))
 10249  0105B8  0E2C               	movlw	low _DATA_LENGHT
 10250  0105BA  6EF6               	movwf	tblptrl,c
 10251  0105BC                     	if	1	;There is more than 1 active tblptr byte
 10252  0105BC  0EFF               	movlw	high _DATA_LENGHT
 10253  0105BE  6EF7               	movwf	tblptrh,c
 10254  0105C0                     	endif
 10255  0105C0                     	if	1	;There are 3 active tblptr bytes
 10256  0105C0  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10257  0105C2  6EF8               	movwf	tblptru,c
 10258  0105C4                     	endif
 10259  0105C4  0008               	tblrd		*
 10260  0105C6  50F5               	movf	tablat,w,c
 10261  0105C8  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10262  0105CA  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10263  0105CC  0E2B               	movlw	low _HEADER_LENGHT
 10264  0105CE  6EF6               	movwf	tblptrl,c
 10265  0105D0                     	if	1	;There is more than 1 active tblptr byte
 10266  0105D0  0EFF               	movlw	high _HEADER_LENGHT
 10267  0105D2  6EF7               	movwf	tblptrh,c
 10268  0105D4                     	endif
 10269  0105D4                     	if	1	;There are 3 active tblptr bytes
 10270  0105D4  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10271  0105D6  6EF8               	movwf	tblptru,c
 10272  0105D8                     	endif
 10273  0105D8  0008               	tblrd		*
 10274  0105DA  50F5               	movf	tablat,w,c
 10275  0105DC  262E               	addwf	??_read_RX_FIFO,f,c
 10276  0105DE  0E00               	movlw	0
 10277  0105E0  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10278  0105E2  0E05               	movlw	5
 10279  0105E4  262E               	addwf	??_read_RX_FIFO,f,c
 10280  0105E6  0E00               	movlw	0
 10281  0105E8  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10282  0105EA  5034               	movf	read_RX_FIFO@i,w,c
 10283  0105EC  6E30               	movwf	(??_read_RX_FIFO+2)& (0+255),c
 10284  0105EE  6A31               	clrf	(??_read_RX_FIFO+3)& (0+255),c
 10285  0105F0  502E               	movf	??_read_RX_FIFO,w,c
 10286  0105F2  5C30               	subwf	??_read_RX_FIFO+2,w,c
 10287  0105F4  5031               	movf	??_read_RX_FIFO+3,w,c
 10288  0105F6  0A80               	xorlw	128
 10289  0105F8  6E32               	movwf	(??_read_RX_FIFO+4)& (0+255),c
 10290  0105FA  502F               	movf	??_read_RX_FIFO+1,w,c
 10291  0105FC  0A80               	xorlw	128
 10292  0105FE  5832               	subwfb	(??_read_RX_FIFO+4)& (0+255),w,c
 10293  010600  A0D8               	btfss	status,0,c
 10294  010602  D00A               	goto	i2l903
 10295                           
 10296                           ;zigbee.c: 27: lost_data = read_ZIGBEE_long(address_RX_FIFO + i);
 10297  010604  5034               	movf	read_RX_FIFO@i,w,c
 10298  010606  0100               	movlb	0	; () banked
 10299  010608  25E5               	addwf	_address_RX_FIFO& (0+255),w,b
 10300  01060A  6E27               	movwf	read_ZIGBEE_long@address,c
 10301  01060C  0E00               	movlw	0
 10302  01060E  21E6               	addwfc	(_address_RX_FIFO+1)& (0+255),w,b
 10303  010610  6E28               	movwf	read_ZIGBEE_long@address+1,c
 10304  010612  EC95  F089         	call	_read_ZIGBEE_long	;wreg free
 10305  010616  6E1C               	movwf	_lost_data,c
 10306  010618                     i2l903:
 10307  010618  2A34               	incf	read_RX_FIFO@i,f,c
 10308  01061A  D792               	goto	L1
 10309  01061C                     i2u145_40:
 10310                           
 10311                           ;zigbee.c: 28: }
 10312                           ;zigbee.c: 30: DATA_RX[0] = data_RX_FIFO[HEADER_LENGHT + 1];
 10313  01061C  0E2B               	movlw	low _HEADER_LENGHT
 10314  01061E  6EF6               	movwf	tblptrl,c
 10315  010620                     	if	1	;There is more than 1 active tblptr byte
 10316  010620  0EFF               	movlw	high _HEADER_LENGHT
 10317  010622  6EF7               	movwf	tblptrh,c
 10318  010624                     	endif
 10319  010624                     	if	1	;There are 3 active tblptr bytes
 10320  010624  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10321  010626  6EF8               	movwf	tblptru,c
 10322  010628                     	endif
 10323  010628  0008               	tblrd		*
 10324  01062A  50F5               	movf	tablat,w,c
 10325  01062C  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10326  01062E  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10327  010630  0E01               	movlw	1
 10328  010632  262E               	addwf	??_read_RX_FIFO,f,c
 10329  010634  0E00               	movlw	0
 10330  010636  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10331  010638  0EC0               	movlw	low _data_RX_FIFO
 10332  01063A  242E               	addwf	??_read_RX_FIFO,w,c
 10333  01063C  6ED9               	movwf	fsr2l,c
 10334  01063E  0E01               	movlw	high _data_RX_FIFO
 10335  010640  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10336  010642  6EDA               	movwf	fsr2h,c
 10337  010644  50DF               	movf	indf2,w,c
 10338  010646  0100               	movlb	0	; () banked
 10339  010648  6FC0               	movwf	_DATA_RX& (0+255),b
 10340                           
 10341                           ;zigbee.c: 31: DATA_RX[1] = data_RX_FIFO[HEADER_LENGHT + 2];
 10342  01064A  0E2B               	movlw	low _HEADER_LENGHT
 10343  01064C  6EF6               	movwf	tblptrl,c
 10344  01064E                     	if	1	;There is more than 1 active tblptr byte
 10345  01064E  0EFF               	movlw	high _HEADER_LENGHT
 10346  010650  6EF7               	movwf	tblptrh,c
 10347  010652                     	endif
 10348  010652                     	if	1	;There are 3 active tblptr bytes
 10349  010652  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10350  010654  6EF8               	movwf	tblptru,c
 10351  010656                     	endif
 10352  010656  0008               	tblrd		*
 10353  010658  50F5               	movf	tablat,w,c
 10354  01065A  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10355  01065C  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10356  01065E  0E02               	movlw	2
 10357  010660  262E               	addwf	??_read_RX_FIFO,f,c
 10358  010662  0E00               	movlw	0
 10359  010664  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10360  010666  0EC0               	movlw	low _data_RX_FIFO
 10361  010668  242E               	addwf	??_read_RX_FIFO,w,c
 10362  01066A  6ED9               	movwf	fsr2l,c
 10363  01066C  0E01               	movlw	high _data_RX_FIFO
 10364  01066E  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10365  010670  6EDA               	movwf	fsr2h,c
 10366  010672  50DF               	movf	indf2,w,c
 10367  010674  6FC1               	movwf	(_DATA_RX+1)& (0+255),b
 10368                           
 10369                           ;zigbee.c: 32: DATA_RX[2] = data_RX_FIFO[HEADER_LENGHT + 3];
 10370  010676  0E2B               	movlw	low _HEADER_LENGHT
 10371  010678  6EF6               	movwf	tblptrl,c
 10372  01067A                     	if	1	;There is more than 1 active tblptr byte
 10373  01067A  0EFF               	movlw	high _HEADER_LENGHT
 10374  01067C  6EF7               	movwf	tblptrh,c
 10375  01067E                     	endif
 10376  01067E                     	if	1	;There are 3 active tblptr bytes
 10377  01067E  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10378  010680  6EF8               	movwf	tblptru,c
 10379  010682                     	endif
 10380  010682  0008               	tblrd		*
 10381  010684  50F5               	movf	tablat,w,c
 10382  010686  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10383  010688  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10384  01068A  0E03               	movlw	3
 10385  01068C  262E               	addwf	??_read_RX_FIFO,f,c
 10386  01068E  0E00               	movlw	0
 10387  010690  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10388  010692  0EC0               	movlw	low _data_RX_FIFO
 10389  010694  242E               	addwf	??_read_RX_FIFO,w,c
 10390  010696  6ED9               	movwf	fsr2l,c
 10391  010698  0E01               	movlw	high _data_RX_FIFO
 10392  01069A  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10393  01069C  6EDA               	movwf	fsr2h,c
 10394  01069E  50DF               	movf	indf2,w,c
 10395  0106A0  6FC2               	movwf	(_DATA_RX+2)& (0+255),b
 10396                           
 10397                           ;zigbee.c: 34: DATA_RX[3] = data_RX_FIFO[HEADER_LENGHT + 4];
 10398  0106A2  0E2B               	movlw	low _HEADER_LENGHT
 10399  0106A4  6EF6               	movwf	tblptrl,c
 10400  0106A6                     	if	1	;There is more than 1 active tblptr byte
 10401  0106A6  0EFF               	movlw	high _HEADER_LENGHT
 10402  0106A8  6EF7               	movwf	tblptrh,c
 10403  0106AA                     	endif
 10404  0106AA                     	if	1	;There are 3 active tblptr bytes
 10405  0106AA  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10406  0106AC  6EF8               	movwf	tblptru,c
 10407  0106AE                     	endif
 10408  0106AE  0008               	tblrd		*
 10409  0106B0  50F5               	movf	tablat,w,c
 10410  0106B2  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10411  0106B4  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10412  0106B6  0E04               	movlw	4
 10413  0106B8  262E               	addwf	??_read_RX_FIFO,f,c
 10414  0106BA  0E00               	movlw	0
 10415  0106BC  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10416  0106BE  0EC0               	movlw	low _data_RX_FIFO
 10417  0106C0  242E               	addwf	??_read_RX_FIFO,w,c
 10418  0106C2  6ED9               	movwf	fsr2l,c
 10419  0106C4  0E01               	movlw	high _data_RX_FIFO
 10420  0106C6  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10421  0106C8  6EDA               	movwf	fsr2h,c
 10422  0106CA  50DF               	movf	indf2,w,c
 10423  0106CC  6FC3               	movwf	(_DATA_RX+3)& (0+255),b
 10424                           
 10425                           ;zigbee.c: 35: DATA_RX[4] = data_RX_FIFO[HEADER_LENGHT + 5];
 10426  0106CE  0E2B               	movlw	low _HEADER_LENGHT
 10427  0106D0  6EF6               	movwf	tblptrl,c
 10428  0106D2                     	if	1	;There is more than 1 active tblptr byte
 10429  0106D2  0EFF               	movlw	high _HEADER_LENGHT
 10430  0106D4  6EF7               	movwf	tblptrh,c
 10431  0106D6                     	endif
 10432  0106D6                     	if	1	;There are 3 active tblptr bytes
 10433  0106D6  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10434  0106D8  6EF8               	movwf	tblptru,c
 10435  0106DA                     	endif
 10436  0106DA  0008               	tblrd		*
 10437  0106DC  50F5               	movf	tablat,w,c
 10438  0106DE  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10439  0106E0  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10440  0106E2  0E05               	movlw	5
 10441  0106E4  262E               	addwf	??_read_RX_FIFO,f,c
 10442  0106E6  0E00               	movlw	0
 10443  0106E8  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10444  0106EA  0EC0               	movlw	low _data_RX_FIFO
 10445  0106EC  242E               	addwf	??_read_RX_FIFO,w,c
 10446  0106EE  6ED9               	movwf	fsr2l,c
 10447  0106F0  0E01               	movlw	high _data_RX_FIFO
 10448  0106F2  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10449  0106F4  6EDA               	movwf	fsr2h,c
 10450  0106F6  50DF               	movf	indf2,w,c
 10451  0106F8  6FC4               	movwf	(_DATA_RX+4)& (0+255),b
 10452                           
 10453                           ;zigbee.c: 39: LQI = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 2];
 10454  0106FA  0E2B               	movlw	low _HEADER_LENGHT
 10455  0106FC  6EF6               	movwf	tblptrl,c
 10456  0106FE                     	if	1	;There is more than 1 active tblptr byte
 10457  0106FE  0EFF               	movlw	high _HEADER_LENGHT
 10458  010700  6EF7               	movwf	tblptrh,c
 10459  010702                     	endif
 10460  010702                     	if	1	;There are 3 active tblptr bytes
 10461  010702  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10462  010704  6EF8               	movwf	tblptru,c
 10463  010706                     	endif
 10464  010706  0008               	tblrd		*
 10465  010708  50F5               	movf	tablat,w,c
 10466  01070A  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10467  01070C  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10468  01070E  0E2C               	movlw	low _DATA_LENGHT
 10469  010710  6EF6               	movwf	tblptrl,c
 10470  010712                     	if	1	;There is more than 1 active tblptr byte
 10471  010712  0EFF               	movlw	high _DATA_LENGHT
 10472  010714  6EF7               	movwf	tblptrh,c
 10473  010716                     	endif
 10474  010716                     	if	1	;There are 3 active tblptr bytes
 10475  010716  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10476  010718  6EF8               	movwf	tblptru,c
 10477  01071A                     	endif
 10478  01071A  0008               	tblrd		*
 10479  01071C  50F5               	movf	tablat,w,c
 10480  01071E  262E               	addwf	??_read_RX_FIFO,f,c
 10481  010720  0E00               	movlw	0
 10482  010722  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10483  010724  0E03               	movlw	3
 10484  010726  262E               	addwf	??_read_RX_FIFO,f,c
 10485  010728  0E00               	movlw	0
 10486  01072A  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10487  01072C  0EC0               	movlw	low _data_RX_FIFO
 10488  01072E  242E               	addwf	??_read_RX_FIFO,w,c
 10489  010730  6ED9               	movwf	fsr2l,c
 10490  010732  0E01               	movlw	high _data_RX_FIFO
 10491  010734  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10492  010736  6EDA               	movwf	fsr2h,c
 10493  010738  50DF               	movf	indf2,w,c
 10494  01073A  6E1E               	movwf	_LQI,c
 10495                           
 10496                           ;zigbee.c: 40: RSSI2 = data_RX_FIFO[1 + HEADER_LENGHT + DATA_LENGHT + 3];
 10497  01073C  0E2B               	movlw	low _HEADER_LENGHT
 10498  01073E  6EF6               	movwf	tblptrl,c
 10499  010740                     	if	1	;There is more than 1 active tblptr byte
 10500  010740  0EFF               	movlw	high _HEADER_LENGHT
 10501  010742  6EF7               	movwf	tblptrh,c
 10502  010744                     	endif
 10503  010744                     	if	1	;There are 3 active tblptr bytes
 10504  010744  0E00               	movlw	low (_HEADER_LENGHT shr (0+16))
 10505  010746  6EF8               	movwf	tblptru,c
 10506  010748                     	endif
 10507  010748  0008               	tblrd		*
 10508  01074A  50F5               	movf	tablat,w,c
 10509  01074C  6E2E               	movwf	??_read_RX_FIFO& (0+255),c
 10510  01074E  6A2F               	clrf	(??_read_RX_FIFO+1)& (0+255),c
 10511  010750  0E2C               	movlw	low _DATA_LENGHT
 10512  010752  6EF6               	movwf	tblptrl,c
 10513  010754                     	if	1	;There is more than 1 active tblptr byte
 10514  010754  0EFF               	movlw	high _DATA_LENGHT
 10515  010756  6EF7               	movwf	tblptrh,c
 10516  010758                     	endif
 10517  010758                     	if	1	;There are 3 active tblptr bytes
 10518  010758  0E00               	movlw	low (_DATA_LENGHT shr (0+16))
 10519  01075A  6EF8               	movwf	tblptru,c
 10520  01075C                     	endif
 10521  01075C  0008               	tblrd		*
 10522  01075E  50F5               	movf	tablat,w,c
 10523  010760  262E               	addwf	??_read_RX_FIFO,f,c
 10524  010762  0E00               	movlw	0
 10525  010764  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10526  010766  0E04               	movlw	4
 10527  010768  262E               	addwf	??_read_RX_FIFO,f,c
 10528  01076A  0E00               	movlw	0
 10529  01076C  222F               	addwfc	??_read_RX_FIFO+1,f,c
 10530  01076E  0EC0               	movlw	low _data_RX_FIFO
 10531  010770  242E               	addwf	??_read_RX_FIFO,w,c
 10532  010772  6ED9               	movwf	fsr2l,c
 10533  010774  0E01               	movlw	high _data_RX_FIFO
 10534  010776  202F               	addwfc	??_read_RX_FIFO+1,w,c
 10535  010778  6EDA               	movwf	fsr2h,c
 10536  01077A  50DF               	movf	indf2,w,c
 10537  01077C  6E1D               	movwf	_RSSI2,c
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;zigbee.c: 42: temp=0;
 10541  01077E  0E00               	movlw	0
 10542  010780  6E33               	movwf	read_RX_FIFO@temp,c
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;zigbee.c: 43: temp = temp & (!0x04);
 10546  010782  0E00               	movlw	0
 10547  010784  6E33               	movwf	read_RX_FIFO@temp,c
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;zigbee.c: 44: write_ZIGBEE_short(0x39, temp);
 10551  010786  C033  F027         	movff	read_RX_FIFO@temp,i2write_ZIGBEE_short@data_r
 10552  01078A  0E39               	movlw	57
 10553  01078C  EC78  F08C         	call	i2_write_ZIGBEE_short
 10554  010790  0012               	return		;funcret
 10555  010792                     __end_of_read_RX_FIFO:
 10556                           	opt stack 0
 10557                           tosu	equ	0xFFF
 10558                           tosh	equ	0xFFE
 10559                           tosl	equ	0xFFD
 10560                           pclatu	equ	0xFFB
 10561                           pclath	equ	0xFFA
 10562                           tblptru	equ	0xFF8
 10563                           tblptrh	equ	0xFF7
 10564                           tblptrl	equ	0xFF6
 10565                           tablat	equ	0xFF5
 10566                           prodh	equ	0xFF4
 10567                           prodl	equ	0xFF3
 10568                           intcon	equ	0xFF2
 10569                           intcon2	equ	0xFF1
 10570                           intcon3	equ	0xFF0
 10571                           postinc0	equ	0xFEE
 10572                           fsr0h	equ	0xFEA
 10573                           fsr0l	equ	0xFE9
 10574                           wreg	equ	0xFE8
 10575                           indf1	equ	0xFE7
 10576                           postdec1	equ	0xFE5
 10577                           fsr1h	equ	0xFE2
 10578                           fsr1l	equ	0xFE1
 10579                           bsr	equ	0xFE0
 10580                           indf2	equ	0xFDF
 10581                           fsr2h	equ	0xFDA
 10582                           fsr2l	equ	0xFD9
 10583                           status	equ	0xFD8
 10584                           
 10585 ;; *************** function i2_write_ZIGBEE_short *****************
 10586 ;; Defined at:
 10587 ;;		line 397 in file "zigbee.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  address         1    wreg     unsigned char 
 10590 ;;  data_r          1    2[COMRAM] unsigned char 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  address         1    3[COMRAM] unsigned char 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, status,0, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;Total ram usage:        2 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    1
 10609 ;; This function calls:
 10610 ;;		i2_SPI_Write
 10611 ;; This function is called by:
 10612 ;;		_read_RX_FIFO
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text67
 10617  0118F0                     __ptext67:
 10618                           	opt stack 0
 10619  0118F0                     i2_write_ZIGBEE_short:
 10620                           	opt stack 18
 10621                           
 10622                           ;incstack = 0
 10623                           ;i2write_ZIGBEE_short@address stored from wreg
 10624  0118F0  6E28               	movwf	i2write_ZIGBEE_short@address,c
 10625                           
 10626                           ;zigbee.c: 398: PORTCbits.RC0=0;
 10627  0118F2  9082               	bcf	3970,0,c	;volatile
 10628                           
 10629                           ;zigbee.c: 399: address = ((address << 1) & 0b01111111) | 0x01;
 10630  0118F4  5028               	movf	i2write_ZIGBEE_short@address,w,c
 10631  0118F6  2428               	addwf	i2write_ZIGBEE_short@address,w,c
 10632  0118F8  0B7F               	andlw	127
 10633  0118FA  0901               	iorlw	1
 10634  0118FC  6E28               	movwf	i2write_ZIGBEE_short@address,c
 10635                           
 10636                           ;zigbee.c: 400: SPI_Write(address);
 10637  0118FE  5028               	movf	i2write_ZIGBEE_short@address,w,c
 10638  011900  EC08  F08D         	call	i2_SPI_Write
 10639                           
 10640                           ;zigbee.c: 401: SPI_Write(data_r);
 10641  011904  5027               	movf	i2write_ZIGBEE_short@data_r,w,c
 10642  011906  EC08  F08D         	call	i2_SPI_Write
 10643                           
 10644                           ;zigbee.c: 402: PORTCbits.RC0=1;
 10645  01190A  8082               	bsf	3970,0,c	;volatile
 10646  01190C  0012               	return		;funcret
 10647  01190E                     __end_ofi2_write_ZIGBEE_short:
 10648                           	opt stack 0
 10649                           tosu	equ	0xFFF
 10650                           tosh	equ	0xFFE
 10651                           tosl	equ	0xFFD
 10652                           pclatu	equ	0xFFB
 10653                           pclath	equ	0xFFA
 10654                           tblptru	equ	0xFF8
 10655                           tblptrh	equ	0xFF7
 10656                           tblptrl	equ	0xFF6
 10657                           tablat	equ	0xFF5
 10658                           prodh	equ	0xFF4
 10659                           prodl	equ	0xFF3
 10660                           intcon	equ	0xFF2
 10661                           intcon2	equ	0xFF1
 10662                           intcon3	equ	0xFF0
 10663                           postinc0	equ	0xFEE
 10664                           fsr0h	equ	0xFEA
 10665                           fsr0l	equ	0xFE9
 10666                           wreg	equ	0xFE8
 10667                           indf1	equ	0xFE7
 10668                           postdec1	equ	0xFE5
 10669                           fsr1h	equ	0xFE2
 10670                           fsr1l	equ	0xFE1
 10671                           bsr	equ	0xFE0
 10672                           indf2	equ	0xFDF
 10673                           fsr2h	equ	0xFDA
 10674                           fsr2l	equ	0xFD9
 10675                           status	equ	0xFD8
 10676                           
 10677 ;; *************** function _read_ZIGBEE_long *****************
 10678 ;; Defined at:
 10679 ;;		line 426 in file "zigbee.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  address         2    2[COMRAM] unsigned int 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;  address_low     1    8[COMRAM] unsigned char 
 10684 ;;  address_high    1    7[COMRAM] unsigned char 
 10685 ;;  data_r          1    6[COMRAM] unsigned char 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      unsigned char 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;Total ram usage:        7 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    1
 10702 ;; This function calls:
 10703 ;;		i2_SPI_Read
 10704 ;;		i2_SPI_Write
 10705 ;; This function is called by:
 10706 ;;		_read_RX_FIFO
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text68
 10711  01132A                     __ptext68:
 10712                           	opt stack 0
 10713  01132A                     _read_ZIGBEE_long:
 10714                           	opt stack 18
 10715                           
 10716                           ;zigbee.c: 427: unsigned char data_r = 0;
 10717                           
 10718                           ;incstack = 0
 10719  01132A  0E00               	movlw	0
 10720  01132C  6E2B               	movwf	read_ZIGBEE_long@data_r,c
 10721                           
 10722                           ;zigbee.c: 428: unsigned char address_high = 0, address_low = 0;
 10723  01132E  0E00               	movlw	0
 10724  011330  6E2C               	movwf	read_ZIGBEE_long@address_high,c
 10725  011332  0E00               	movlw	0
 10726  011334  6E2D               	movwf	read_ZIGBEE_long@address_low,c
 10727                           
 10728                           ;zigbee.c: 431: PORTCbits.RC0=0;
 10729  011336  9082               	bcf	3970,0,c	;volatile
 10730                           
 10731                           ;zigbee.c: 432: address_high = ((unsigned char)(address >> 3) & 0b01111111) | 0x80;
 10732  011338  C027  F029         	movff	read_ZIGBEE_long@address,??_read_ZIGBEE_long
 10733  01133C  C028  F02A         	movff	read_ZIGBEE_long@address+1,??_read_ZIGBEE_long+1
 10734  011340  90D8               	bcf	status,0,c
 10735  011342  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 10736  011344  3229               	rrcf	??_read_ZIGBEE_long,f,c
 10737  011346  90D8               	bcf	status,0,c
 10738  011348  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 10739  01134A  3229               	rrcf	??_read_ZIGBEE_long,f,c
 10740  01134C  90D8               	bcf	status,0,c
 10741  01134E  322A               	rrcf	??_read_ZIGBEE_long+1,f,c
 10742  011350  3229               	rrcf	??_read_ZIGBEE_long,f,c
 10743  011352  5029               	movf	??_read_ZIGBEE_long,w,c
 10744  011354  0B7F               	andlw	127
 10745  011356  0980               	iorlw	128
 10746  011358  6E2C               	movwf	read_ZIGBEE_long@address_high,c
 10747                           
 10748                           ;zigbee.c: 433: address_low = ((unsigned char)(address << 5) & 0b11100000);
 10749  01135A  3827               	swapf	read_ZIGBEE_long@address,w,c
 10750  01135C  46E8               	rlncf	wreg,f,c
 10751  01135E  0BE0               	andlw	224
 10752  011360  0BE0               	andlw	224
 10753  011362  6E2D               	movwf	read_ZIGBEE_long@address_low,c
 10754                           
 10755                           ;zigbee.c: 434: SPI_Write(address_high);
 10756  011364  502C               	movf	read_ZIGBEE_long@address_high,w,c
 10757  011366  EC08  F08D         	call	i2_SPI_Write
 10758                           
 10759                           ;zigbee.c: 435: SPI_Write(address_low);
 10760  01136A  502D               	movf	read_ZIGBEE_long@address_low,w,c
 10761  01136C  EC08  F08D         	call	i2_SPI_Write
 10762                           
 10763                           ;zigbee.c: 436: data_r = SPI_Read();
 10764  011370  EC10  F08D         	call	i2_SPI_Read	;wreg free
 10765  011374  6E2B               	movwf	read_ZIGBEE_long@data_r,c
 10766                           
 10767                           ;zigbee.c: 437: PORTCbits.RC0=1;
 10768  011376  8082               	bsf	3970,0,c	;volatile
 10769                           
 10770                           ;zigbee.c: 438: return data_r;
 10771  011378  502B               	movf	read_ZIGBEE_long@data_r,w,c
 10772  01137A  0012               	return	
 10773  01137C                     __end_of_read_ZIGBEE_long:
 10774                           	opt stack 0
 10775                           tosu	equ	0xFFF
 10776                           tosh	equ	0xFFE
 10777                           tosl	equ	0xFFD
 10778                           pclatu	equ	0xFFB
 10779                           pclath	equ	0xFFA
 10780                           tblptru	equ	0xFF8
 10781                           tblptrh	equ	0xFF7
 10782                           tblptrl	equ	0xFF6
 10783                           tablat	equ	0xFF5
 10784                           prodh	equ	0xFF4
 10785                           prodl	equ	0xFF3
 10786                           intcon	equ	0xFF2
 10787                           intcon2	equ	0xFF1
 10788                           intcon3	equ	0xFF0
 10789                           postinc0	equ	0xFEE
 10790                           fsr0h	equ	0xFEA
 10791                           fsr0l	equ	0xFE9
 10792                           wreg	equ	0xFE8
 10793                           indf1	equ	0xFE7
 10794                           postdec1	equ	0xFE5
 10795                           fsr1h	equ	0xFE2
 10796                           fsr1l	equ	0xFE1
 10797                           bsr	equ	0xFE0
 10798                           indf2	equ	0xFDF
 10799                           fsr2h	equ	0xFDA
 10800                           fsr2l	equ	0xFD9
 10801                           status	equ	0xFD8
 10802                           
 10803 ;; *************** function i2_SPI_Write *****************
 10804 ;; Defined at:
 10805 ;;		line 458 in file "zigbee.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  command         1    wreg     unsigned char 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  command         1    1[COMRAM] unsigned char 
 10810 ;;  SPI_Write       1    0[COMRAM] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;Total ram usage:        2 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; This function calls:
 10827 ;;		Nothing
 10828 ;; This function is called by:
 10829 ;;		_read_ZIGBEE_long
 10830 ;;		i2_write_ZIGBEE_short
 10831 ;;		i2_read_ZIGBEE_short
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           	psect	text69
 10836  011A10                     __ptext69:
 10837                           	opt stack 0
 10838  011A10                     i2_SPI_Write:
 10839                           	opt stack 19
 10840                           
 10841                           ;incstack = 0
 10842                           ;i2SPI_Write@command stored from wreg
 10843  011A10  6E26               	movwf	i2SPI_Write@command,c
 10844                           
 10845                           ;zigbee.c: 459: unsigned char response;
 10846                           ;zigbee.c: 460: SSP1BUF = command;
 10847  011A12  C026  FFC9         	movff	i2SPI_Write@command,4041	;volatile
 10848  011A16  A0C7               	btfss	4039,0,c	;volatile
 10849  011A18  D7FE               	goto	i2l1040
 10850                           
 10851                           ;zigbee.c: 462: response = SSP1BUF;
 10852  011A1A  CFC9 F025          	movff	4041,i2SPI_Write@response	;volatile
 10853  011A1E  0012               	return		;funcret
 10854  011A20                     __end_ofi2_SPI_Write:
 10855                           	opt stack 0
 10856                           tosu	equ	0xFFF
 10857                           tosh	equ	0xFFE
 10858                           tosl	equ	0xFFD
 10859                           pclatu	equ	0xFFB
 10860                           pclath	equ	0xFFA
 10861                           tblptru	equ	0xFF8
 10862                           tblptrh	equ	0xFF7
 10863                           tblptrl	equ	0xFF6
 10864                           tablat	equ	0xFF5
 10865                           prodh	equ	0xFF4
 10866                           prodl	equ	0xFF3
 10867                           intcon	equ	0xFF2
 10868                           intcon2	equ	0xFF1
 10869                           intcon3	equ	0xFF0
 10870                           postinc0	equ	0xFEE
 10871                           fsr0h	equ	0xFEA
 10872                           fsr0l	equ	0xFE9
 10873                           wreg	equ	0xFE8
 10874                           indf1	equ	0xFE7
 10875                           postdec1	equ	0xFE5
 10876                           fsr1h	equ	0xFE2
 10877                           fsr1l	equ	0xFE1
 10878                           bsr	equ	0xFE0
 10879                           indf2	equ	0xFDF
 10880                           fsr2h	equ	0xFDA
 10881                           fsr2l	equ	0xFD9
 10882                           status	equ	0xFD8
 10883                           
 10884 ;; *************** function i2_SPI_Read *****************
 10885 ;; Defined at:
 10886 ;;		line 464 in file "zigbee.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  SPI_Read        1    0[COMRAM] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      unsigned char 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;Total ram usage:        1 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_read_ZIGBEE_long
 10910 ;;		i2_read_ZIGBEE_short
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text70
 10915  011A20                     __ptext70:
 10916                           	opt stack 0
 10917  011A20                     i2_SPI_Read:
 10918                           	opt stack 19
 10919                           
 10920                           ;zigbee.c: 465: unsigned char TempVar;
 10921                           ;zigbee.c: 466: SSP1BUF = 0xff;
 10922                           
 10923                           ;incstack = 0
 10924  011A20  68C9               	setf	4041,c	;volatile
 10925  011A22  A0C7               	btfss	4039,0,c	;volatile
 10926  011A24  D7FE               	goto	i2l1046
 10927                           
 10928                           ;zigbee.c: 468: TempVar = SSP1BUF;
 10929  011A26  CFC9 F025          	movff	4041,i2SPI_Read@TempVar	;volatile
 10930                           
 10931                           ;zigbee.c: 469: PIR1bits.SSP1IF = 0;
 10932  011A2A  969E               	bcf	3998,3,c	;volatile
 10933                           
 10934                           ;zigbee.c: 470: return ( TempVar );
 10935  011A2C  5025               	movf	i2SPI_Read@TempVar,w,c
 10936  011A2E  0012               	return	
 10937  011A30                     __end_ofi2_SPI_Read:
 10938                           	opt stack 0
 10939                           tosu	equ	0xFFF
 10940                           tosh	equ	0xFFE
 10941                           tosl	equ	0xFFD
 10942                           pclatu	equ	0xFFB
 10943                           pclath	equ	0xFFA
 10944                           tblptru	equ	0xFF8
 10945                           tblptrh	equ	0xFF7
 10946                           tblptrl	equ	0xFF6
 10947                           tablat	equ	0xFF5
 10948                           prodh	equ	0xFF4
 10949                           prodl	equ	0xFF3
 10950                           intcon	equ	0xFF2
 10951                           intcon2	equ	0xFF1
 10952                           intcon3	equ	0xFF0
 10953                           postinc0	equ	0xFEE
 10954                           fsr0h	equ	0xFEA
 10955                           fsr0l	equ	0xFE9
 10956                           wreg	equ	0xFE8
 10957                           indf1	equ	0xFE7
 10958                           postdec1	equ	0xFE5
 10959                           fsr1h	equ	0xFE2
 10960                           fsr1l	equ	0xFE1
 10961                           bsr	equ	0xFE0
 10962                           indf2	equ	0xFDF
 10963                           fsr2h	equ	0xFDA
 10964                           fsr2l	equ	0xFD9
 10965                           status	equ	0xFD8
 10966                           
 10967 ;; *************** function _INT0_ISR *****************
 10968 ;; Defined at:
 10969 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:    2
 10990 ;; This function calls:
 10991 ;;		_INT0_CallBack
 10992 ;; This function is called by:
 10993 ;;		_INTERRUPT_InterruptManagerHigh
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text71
 10998  011A94                     __ptext71:
 10999                           	opt stack 0
 11000  011A94                     _INT0_ISR:
 11001                           	opt stack 18
 11002                           
 11003                           ;ext_int.c: 61: (INTCONbits.INT0IF = 0);
 11004                           
 11005                           ;incstack = 0
 11006  011A94  92F2               	bcf	intcon,1,c	;volatile
 11007                           
 11008                           ;ext_int.c: 64: INT0_CallBack();
 11009  011A96  EC15  F08C         	call	_INT0_CallBack	;wreg free
 11010  011A9A  0012               	return		;funcret
 11011  011A9C                     __end_of_INT0_ISR:
 11012                           	opt stack 0
 11013                           tosu	equ	0xFFF
 11014                           tosh	equ	0xFFE
 11015                           tosl	equ	0xFFD
 11016                           pclatu	equ	0xFFB
 11017                           pclath	equ	0xFFA
 11018                           tblptru	equ	0xFF8
 11019                           tblptrh	equ	0xFF7
 11020                           tblptrl	equ	0xFF6
 11021                           tablat	equ	0xFF5
 11022                           prodh	equ	0xFF4
 11023                           prodl	equ	0xFF3
 11024                           intcon	equ	0xFF2
 11025                           intcon2	equ	0xFF1
 11026                           intcon3	equ	0xFF0
 11027                           postinc0	equ	0xFEE
 11028                           fsr0h	equ	0xFEA
 11029                           fsr0l	equ	0xFE9
 11030                           wreg	equ	0xFE8
 11031                           indf1	equ	0xFE7
 11032                           postdec1	equ	0xFE5
 11033                           fsr1h	equ	0xFE2
 11034                           fsr1l	equ	0xFE1
 11035                           bsr	equ	0xFE0
 11036                           indf2	equ	0xFDF
 11037                           fsr2h	equ	0xFDA
 11038                           fsr2l	equ	0xFD9
 11039                           status	equ	0xFD8
 11040                           
 11041 ;; *************** function _INT0_CallBack *****************
 11042 ;; Defined at:
 11043 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;		None
 11048 ;; Return value:  Size  Location     Type
 11049 ;;                  1    wreg      void 
 11050 ;; Registers used:
 11051 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11052 ;; Tracked objects:
 11053 ;;		On entry : 0/0
 11054 ;;		On exit  : 0/0
 11055 ;;		Unchanged: 0/0
 11056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11061 ;;Total ram usage:        0 bytes
 11062 ;; Hardware stack levels used:    1
 11063 ;; Hardware stack levels required when called:    1
 11064 ;; This function calls:
 11065 ;;		Absolute function
 11066 ;;		_INT0_DefaultInterruptHandler
 11067 ;; This function is called by:
 11068 ;;		_INT0_ISR
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text72
 11073  01182A                     __ptext72:
 11074                           	opt stack 0
 11075  01182A                     _INT0_CallBack:
 11076                           	opt stack 18
 11077                           
 11078                           ;ext_int.c: 71: if(INT0_InterruptHandler)
 11079                           
 11080                           ;incstack = 0
 11081  01182A  0100               	movlb	0	; () banked
 11082  01182C  518D               	movf	_INT0_InterruptHandler& (0+255),w,b
 11083  01182E  118E               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11084  011830  118F               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11085  011832  B4D8               	btfsc	status,2,c
 11086  011834  0012               	return	
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;ext_int.c: 72: {
 11090                           ;ext_int.c: 73: INT0_InterruptHandler();
 11091  011836  D801               	call	i2u348_48
 11092  011838  0012               	return	
 11093  01183A                     i2u348_48:
 11094  01183A  0005               	push	
 11095  01183C  6EFA               	movwf	pclath,c
 11096  01183E  518D               	movf	_INT0_InterruptHandler& (0+255),w,b
 11097  011840  6EFD               	movwf	tosl,c
 11098  011842  518E               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11099  011844  6EFE               	movwf	tosh,c
 11100  011846  518F               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 11101  011848  6EFF               	movwf	tosu,c
 11102  01184A  50FA               	movf	pclath,w,c
 11103  01184C  0012               	return		;indir
 11104  01184E                     __end_of_INT0_CallBack:
 11105                           	opt stack 0
 11106                           tosu	equ	0xFFF
 11107                           tosh	equ	0xFFE
 11108                           tosl	equ	0xFFD
 11109                           pclatu	equ	0xFFB
 11110                           pclath	equ	0xFFA
 11111                           tblptru	equ	0xFF8
 11112                           tblptrh	equ	0xFF7
 11113                           tblptrl	equ	0xFF6
 11114                           tablat	equ	0xFF5
 11115                           prodh	equ	0xFF4
 11116                           prodl	equ	0xFF3
 11117                           intcon	equ	0xFF2
 11118                           intcon2	equ	0xFF1
 11119                           intcon3	equ	0xFF0
 11120                           postinc0	equ	0xFEE
 11121                           fsr0h	equ	0xFEA
 11122                           fsr0l	equ	0xFE9
 11123                           wreg	equ	0xFE8
 11124                           indf1	equ	0xFE7
 11125                           postdec1	equ	0xFE5
 11126                           fsr1h	equ	0xFE2
 11127                           fsr1l	equ	0xFE1
 11128                           bsr	equ	0xFE0
 11129                           indf2	equ	0xFDF
 11130                           fsr2h	equ	0xFDA
 11131                           fsr2l	equ	0xFD9
 11132                           status	equ	0xFD8
 11133                           
 11134 ;; *************** function _INT0_DefaultInterruptHandler *****************
 11135 ;; Defined at:
 11136 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		None
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;Total ram usage:        0 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_EXT_INT_Initialize
 11160 ;;		_INT0_CallBack
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text73
 11165  011AA2                     __ptext73:
 11166                           	opt stack 0
 11167  011AA2                     _INT0_DefaultInterruptHandler:
 11168                           	opt stack 18
 11169                           
 11170                           ;incstack = 0
 11171  011AA2  0012               	return		;funcret
 11172  011AA4                     __end_of_INT0_DefaultInterruptHandler:
 11173                           	opt stack 0
 11174                           tosu	equ	0xFFF
 11175                           tosh	equ	0xFFE
 11176                           tosl	equ	0xFFD
 11177                           pclatu	equ	0xFFB
 11178                           pclath	equ	0xFFA
 11179                           tblptru	equ	0xFF8
 11180                           tblptrh	equ	0xFF7
 11181                           tblptrl	equ	0xFF6
 11182                           tablat	equ	0xFF5
 11183                           prodh	equ	0xFF4
 11184                           prodl	equ	0xFF3
 11185                           intcon	equ	0xFF2
 11186                           intcon2	equ	0xFF1
 11187                           intcon3	equ	0xFF0
 11188                           postinc0	equ	0xFEE
 11189                           fsr0h	equ	0xFEA
 11190                           fsr0l	equ	0xFE9
 11191                           wreg	equ	0xFE8
 11192                           indf1	equ	0xFE7
 11193                           postdec1	equ	0xFE5
 11194                           fsr1h	equ	0xFE2
 11195                           fsr1l	equ	0xFE1
 11196                           bsr	equ	0xFE0
 11197                           indf2	equ	0xFDF
 11198                           fsr2h	equ	0xFDA
 11199                           fsr2l	equ	0xFD9
 11200                           status	equ	0xFD8
 11201                           tosu	equ	0xFFF
 11202                           tosh	equ	0xFFE
 11203                           tosl	equ	0xFFD
 11204                           pclatu	equ	0xFFB
 11205                           pclath	equ	0xFFA
 11206                           tblptru	equ	0xFF8
 11207                           tblptrh	equ	0xFF7
 11208                           tblptrl	equ	0xFF6
 11209                           tablat	equ	0xFF5
 11210                           prodh	equ	0xFF4
 11211                           prodl	equ	0xFF3
 11212                           intcon	equ	0xFF2
 11213                           intcon2	equ	0xFF1
 11214                           intcon3	equ	0xFF0
 11215                           postinc0	equ	0xFEE
 11216                           fsr0h	equ	0xFEA
 11217                           fsr0l	equ	0xFE9
 11218                           wreg	equ	0xFE8
 11219                           indf1	equ	0xFE7
 11220                           postdec1	equ	0xFE5
 11221                           fsr1h	equ	0xFE2
 11222                           fsr1l	equ	0xFE1
 11223                           bsr	equ	0xFE0
 11224                           indf2	equ	0xFDF
 11225                           fsr2h	equ	0xFDA
 11226                           fsr2l	equ	0xFD9
 11227                           status	equ	0xFD8
 11228                           
 11229                           	psect	text74
 11230  000000                     __ptext74:
 11231                           	opt stack 0
 11232                           tosu	equ	0xFFF
 11233                           tosh	equ	0xFFE
 11234                           tosl	equ	0xFFD
 11235                           pclatu	equ	0xFFB
 11236                           pclath	equ	0xFFA
 11237                           tblptru	equ	0xFF8
 11238                           tblptrh	equ	0xFF7
 11239                           tblptrl	equ	0xFF6
 11240                           tablat	equ	0xFF5
 11241                           prodh	equ	0xFF4
 11242                           prodl	equ	0xFF3
 11243                           intcon	equ	0xFF2
 11244                           intcon2	equ	0xFF1
 11245                           intcon3	equ	0xFF0
 11246                           postinc0	equ	0xFEE
 11247                           fsr0h	equ	0xFEA
 11248                           fsr0l	equ	0xFE9
 11249                           wreg	equ	0xFE8
 11250                           indf1	equ	0xFE7
 11251                           postdec1	equ	0xFE5
 11252                           fsr1h	equ	0xFE2
 11253                           fsr1l	equ	0xFE1
 11254                           bsr	equ	0xFE0
 11255                           indf2	equ	0xFDF
 11256                           fsr2h	equ	0xFDA
 11257                           fsr2l	equ	0xFD9
 11258                           status	equ	0xFD8
 11259                           
 11260                           	psect	rparam
 11261  0000                     tosu	equ	0xFFF
 11262                           tosh	equ	0xFFE
 11263                           tosl	equ	0xFFD
 11264                           pclatu	equ	0xFFB
 11265                           pclath	equ	0xFFA
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           intcon2	equ	0xFF1
 11274                           intcon3	equ	0xFF0
 11275                           postinc0	equ	0xFEE
 11276                           fsr0h	equ	0xFEA
 11277                           fsr0l	equ	0xFE9
 11278                           wreg	equ	0xFE8
 11279                           indf1	equ	0xFE7
 11280                           postdec1	equ	0xFE5
 11281                           fsr1h	equ	0xFE2
 11282                           fsr1l	equ	0xFE1
 11283                           bsr	equ	0xFE0
 11284                           indf2	equ	0xFDF
 11285                           fsr2h	equ	0xFDA
 11286                           fsr2l	equ	0xFD9
 11287                           status	equ	0xFD8
 11288                           
 11289                           	psect	temp
 11290  00004B                     btemp:
 11291                           	opt stack 0
 11292  00004B                     	ds	1
 11293  0000                     int$flags	set	btemp
 11294  0000                     wtemp6	set	btemp+1
 11295                           tosu	equ	0xFFF
 11296                           tosh	equ	0xFFE
 11297                           tosl	equ	0xFFD
 11298                           pclatu	equ	0xFFB
 11299                           pclath	equ	0xFFA
 11300                           tblptru	equ	0xFF8
 11301                           tblptrh	equ	0xFF7
 11302                           tblptrl	equ	0xFF6
 11303                           tablat	equ	0xFF5
 11304                           prodh	equ	0xFF4
 11305                           prodl	equ	0xFF3
 11306                           intcon	equ	0xFF2
 11307                           intcon2	equ	0xFF1
 11308                           intcon3	equ	0xFF0
 11309                           postinc0	equ	0xFEE
 11310                           fsr0h	equ	0xFEA
 11311                           fsr0l	equ	0xFE9
 11312                           wreg	equ	0xFE8
 11313                           indf1	equ	0xFE7
 11314                           postdec1	equ	0xFE5
 11315                           fsr1h	equ	0xFE2
 11316                           fsr1l	equ	0xFE1
 11317                           bsr	equ	0xFE0
 11318                           indf2	equ	0xFDF
 11319                           fsr2h	equ	0xFDA
 11320                           fsr2l	equ	0xFD9
 11321                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    230
    Data        229
    BSS         297
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160     25     140
    BANK1           256      7     256
    BANK2           256     33     157
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    Xor_check@data_value	PTR unsigned char  size(2) Largest target is 5
		 -> DATA_TX(BANK0[3]), DATA_RX(BANK0[5]), 

    set_PAN_ID@address	PTR unsigned char  size(2) Largest target is 2
		 -> PAN_ID_2(BANK0[2]), 

    set_short_address@address	PTR unsigned char  size(2) Largest target is 2
		 -> ADDRESS_short_2(BANK0[2]), 

    set_long_address@address	PTR unsigned char  size(2) Largest target is 8
		 -> ADDRESS_long_2(BANK1[8]), 

    LcdDisplay@string	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[19]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_read_RX_FIFO
    i2_read_ZIGBEE_short->i2_SPI_Write
    _read_RX_FIFO->_read_ZIGBEE_long
    i2_write_ZIGBEE_short->i2_SPI_Write
    _read_ZIGBEE_long->i2_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _INTERRUPT_InterruptManagerLow->i1___lldiv
    i1___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LcdCmd
    _main->_LcdData
    _main->_set_long_address
    _write_TX_normal_FIFO->_write_ZIGBEE_long
    _start_transmit->_read_ZIGBEE_short
    _start_transmit->_write_ZIGBEE_short
    _read_ZIGBEE_short->_SPI_Write
    _set_not_encrypt->_write_ZIGBEE_short
    _set_not_ACK->_write_ZIGBEE_short
    _set_short_address->_write_ZIGBEE_short
    _set_reception_mode->_write_ZIGBEE_short
    _set_long_address->_write_ZIGBEE_short
    _set_frame_format_filter->_write_ZIGBEE_short
    _set_WAKE_from_pin->_write_ZIGBEE_short
    _set_TX_power->_write_ZIGBEE_long
    _set_PAN_ID->_write_ZIGBEE_short
    _pin_reset->_Delay_ms
    _nonbeacon_PAN_coordinator_device->_write_ZIGBEE_short
    _lcd_off_cursor->_LcdCmd
    _lcd_clear->_LcdCmd
    _set_channel->_write_ZIGBEE_long
    _RF_reset->_Delay_ms
    _RF_reset->_write_ZIGBEE_short
    _set_RSSI_mode->_write_ZIGBEE_short
    _set_CCA_mode->_write_ZIGBEE_short
    _pin_wake->_Delay_ms
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long
    _write_ZIGBEE_long->_SPI_Write
    _enable_interrupt->_write_ZIGBEE_short
    _write_ZIGBEE_short->_SPI_Write
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _LcdInit->_LcdCmd
    _LcdDisplay->_LcdCmd
    _LcdDisplay->_LcdData
    _LcdData->_Delayms
    _LcdCmd->_Delayms
    _InitSPI->_delay

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_write_TX_normal_FIFO
    _write_TX_normal_FIFO->_Xor_check
    _set_TX_power->_write_ZIGBEE_long
    _init_ZIGBEE_nonbeacon->_set_channel
    _set_channel->_write_ZIGBEE_long
    _init_ZIGBEE_basic->_write_ZIGBEE_long
    _enable_PLL->_write_ZIGBEE_long

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  155060
                                             32 BANK2      1     1      0
                           _Delay_ms
                            _Delayms
                            _InitSPI
                             _LcdCmd
                            _LcdData
                         _LcdDisplay
                            _LcdInit
                           _RF_reset
                         _Read_b_eep
                  _SYSTEM_Initialize
                            ___awdiv
                            ___awmod
                            ___lldiv
                            ___llmod
              _init_ZIGBEE_nonbeacon
                          _lcd_clear
                     _lcd_off_cursor
   _nonbeacon_PAN_coordinator_device
                          _pin_reset
                           _pin_wake
                         _set_PAN_ID
                       _set_TX_power
                  _set_WAKE_from_pin
            _set_frame_format_filter
                   _set_long_address
                 _set_reception_mode
                  _set_short_address
               _write_TX_normal_FIFO
 ---------------------------------------------------------------------------------
 (1) _write_TX_normal_FIFO                                 7     7      0   17523
                                             25 BANK2      7     7      0
                           _Delay_ms
                          _Xor_check
                        _set_not_ACK
                    _set_not_encrypt
                     _start_transmit
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _start_transmit                                       0     0      0    3560
                  _read_ZIGBEE_short
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _read_ZIGBEE_short                                    2     2      0     170
                                              2 BANK1      2     2      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      34
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_not_encrypt                                      1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_not_ACK                                          1     1      0    3427
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _Xor_check                                            8     5      3     429
                                              0 BANK1      4     1      3
                                             21 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (1) _set_short_address                                    2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_reception_mode                                   2     2      0    3603
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_long_address                                     3     1      2    3644
                                              4 BANK1      3     1      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_frame_format_filter                              2     2      0    3674
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_WAKE_from_pin                                    0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _set_TX_power                                         2     2      0    4834
                                             23 BANK2      2     2      0
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (1) _set_PAN_ID                                           2     0      2    3542
                                              4 BANK1      2     0      2
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_reset                                            0     0      0    1744
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _nonbeacon_PAN_coordinator_device                     1     1      0    3529
                                              4 BANK1      1     1      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _lcd_off_cursor                                       0     0      0    5837
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0    5837
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _init_ZIGBEE_nonbeacon                                0     0      0   40383
                           _RF_reset
                   _enable_interrupt
                  _init_ZIGBEE_basic
                           _pin_wake
                       _set_CCA_mode
                      _set_RSSI_mode
                        _set_channel
 ---------------------------------------------------------------------------------
 (2) _set_channel                                          1     1      0    9931
                                             23 BANK2      1     1      0
                           _RF_reset
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (3) _RF_reset                                             0     0      0    5134
                           _Delay_ms
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_RSSI_mode                                        2     2      0    3492
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (2) _set_CCA_mode                                         2     2      0    3900
                                              4 BANK1      2     2      0
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (1) _pin_wake                                             0     0      0    1744
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1744
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ZIGBEE_basic                                    0     0      0   12792
                         _enable_PLL
                  _write_ZIGBEE_long
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _enable_PLL                                           0     0      0    4701
                  _write_ZIGBEE_long
 ---------------------------------------------------------------------------------
 (2) _write_ZIGBEE_long                                    7     4      3    4701
                                              2 BANK1      5     2      3
                                             21 BANK2      2     2      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0    3390
                 _write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (3) _write_ZIGBEE_short                                   2     1      1    3390
                                              2 BANK1      2     1      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     772
                                              0 BANK1      1     1      0
                                             21 BANK2      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8    1001
                                              0 BANK1      5     5      0
                                             21 BANK2      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              0 BANK1      4     0      4
                                             21 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     242
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     121
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     301
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0   11643
                            _Delayms
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (1) _LcdDisplay                                           4     2      2   12400
                                             21 BANK2      3     1      2
                             _LcdCmd
                            _LcdData
 ---------------------------------------------------------------------------------
 (2) _LcdData                                              1     1      0    5837
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (2) _LcdCmd                                               1     1      0    5837
                                              6 BANK1      1     1      0
                            _Delayms
 ---------------------------------------------------------------------------------
 (3) _Delayms                                              6     4      2    5806
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              0     0      0     158
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     158
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerLow                       21    21      0    1296
                                              0 BANK2     21    21      0
                           _INT1_ISR
                           _TMR0_ISR
                        _Write_b_eep
                             ___lmul
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (7) i1___lldiv                                           13     5      8     381
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     456
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (7) _Write_b_eep                                          4     1      3     459
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     20    20      0    1020
                                             16 COMRAM    20    20      0
                           _INT0_ISR
                       _read_RX_FIFO
                        i2_Xor_check
                i2_read_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (11) i2_read_ZIGBEE_short                                 2     2      0     115
                                              2 COMRAM     2     2      0
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (11) i2_Xor_check                                         8     5      3     145
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (11) _read_RX_FIFO                                        7     7      0     760
                                              9 COMRAM     7     7      0
                   _read_ZIGBEE_long
               i2_write_ZIGBEE_short
 ---------------------------------------------------------------------------------
 (12) i2_write_ZIGBEE_short                                2     1      1     142
                                              2 COMRAM     2     1      1
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) _read_ZIGBEE_long                                    7     5      2     390
                                              2 COMRAM     7     5      2
                         i2_SPI_Read
                        i2_SPI_Write
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Write                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) i2_SPI_Read                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Delayms
   _InitSPI
     _delay
   _LcdCmd
     _Delayms
   _LcdData
     _Delayms
   _LcdDisplay
     _LcdCmd
       _Delayms
     _LcdData
       _Delayms
   _LcdInit
     _Delayms
     _LcdCmd
       _Delayms
   _RF_reset
     _Delay_ms
     _write_ZIGBEE_short
       _SPI_Write
   _Read_b_eep
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   ___awdiv
   ___awmod
   ___lldiv
   ___llmod
   _init_ZIGBEE_nonbeacon
     _RF_reset
       _Delay_ms
       _write_ZIGBEE_short
         _SPI_Write
     _enable_interrupt
       _write_ZIGBEE_short
         _SPI_Write
     _init_ZIGBEE_basic
       _enable_PLL
         _write_ZIGBEE_long
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _pin_wake
       _Delay_ms
     _set_CCA_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_RSSI_mode
       _write_ZIGBEE_short
         _SPI_Write
     _set_channel
       _RF_reset
         _Delay_ms
         _write_ZIGBEE_short
           _SPI_Write
       _write_ZIGBEE_long
         _SPI_Write
   _lcd_clear
     _LcdCmd
       _Delayms
   _lcd_off_cursor
     _LcdCmd
       _Delayms
   _nonbeacon_PAN_coordinator_device
     _write_ZIGBEE_short
       _SPI_Write
   _pin_reset
     _Delay_ms
   _pin_wake
     _Delay_ms
   _set_PAN_ID
     _write_ZIGBEE_short
       _SPI_Write
   _set_TX_power
     _write_ZIGBEE_long
       _SPI_Write
   _set_WAKE_from_pin
     _write_ZIGBEE_short
       _SPI_Write
   _set_frame_format_filter
     _write_ZIGBEE_short
       _SPI_Write
   _set_long_address
     _write_ZIGBEE_short
       _SPI_Write
   _set_reception_mode
     _write_ZIGBEE_short
       _SPI_Write
   _set_short_address
     _write_ZIGBEE_short
       _SPI_Write
   _write_TX_normal_FIFO
     _Delay_ms
     _Xor_check
     _set_not_ACK
       _write_ZIGBEE_short
         _SPI_Write
     _set_not_encrypt
       _write_ZIGBEE_short
         _SPI_Write
     _start_transmit
       _read_ZIGBEE_short
         _SPI_Read
         _SPI_Write
       _write_ZIGBEE_short
         _SPI_Write
     _write_ZIGBEE_long
       _SPI_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _Write_b_eep
   ___lmul
   i1___lldiv
     ___lmul (ARG)

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _read_RX_FIFO
     _read_ZIGBEE_long
       i2_SPI_Read
       i2_SPI_Write
     i2_write_ZIGBEE_short
       i2_SPI_Write
   i2_Xor_check
   i2_read_ZIGBEE_short
     i2_SPI_Read
     i2_SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     21      9D       9       61.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      12        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 10 12:21:40 2018

                            _LIGHT_ALL_OFF FEC2                            _LIGHT_ALTERNATE FEB5  
                                        _T 000E                                          _d 0014  
                                        _g 00A9                                          _i 0015  
                                        _n 0002                                          _t 00A8  
                          SPI_Read@TempVar 01F9                               ___awdiv@sign 027A  
                                       _id 00B4                                         _ds 00AB  
                                       _ii 00BD                                         bsr 000FE0  
                              __CFG_BORV$3 000000                            _timer0ReloadVal 00BF  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                             __CFG_CP4$OFF 000000                  i2read_ZIGBEE_short@data_r 0028  
                             __CFG_CP5$OFF 000000                               __CFG_CP6$OFF 000000  
                             __CFG_CP7$OFF 000000                                        l551 039A  
                                      l553 0482                                        l545 020A  
                                      l554 050C                                        l546 02A8  
                                      l547 022E                                        l652 1500  
                                      l653 14E6                                        l549 02FA  
                __end_of_LIGHT_CARD_STATUS FEB5                                        l940 0C1A  
                                      l916 1624                                        l936 0C5A  
                                      l944 14C6                                        l960 07BE  
                                      l937 0BB8                                        l945 14A2  
                                      l961 07D2                                        l970 0886  
                                      l962 07E6                                        l939 0BE0  
                                      l947 14B8                                        l971 089A  
                                      l963 07FA                                        l972 08AE  
                                      l964 080E                                        l957 08EA  
                                      l973 08C2                                        l965 0822  
                                      l974 08D6                                        l966 0836  
                                      l958 07AA                                        l959 094E  
                                      l967 084A                                        l991 0FD8  
                                      l968 085E                                        l984 141E  
                                      l992 0FF4                                        l969 0872  
                                      l993 1010                                        _CRC 0099  
                                      l988 102C                                        l989 0FC4  
                                      l997 120C                                        l998 11C0  
                             __CFG_CPB$OFF 000000                      i2Xor_check@data_value 0025  
                             __CFG_CPD$OFF 000000                                        _LQI 001E  
                                      _SMS 01D5                           _set_long_address 1612  
               ??_INT0_SetInterruptHandler 01FC                                 _SMS_format 01A8  
                                      _msg 010F                 __end_of_Enable_Result_Code FEFB  
                     __size_of_Write_b_eep 003C                               ___awmod@sign 01FE  
                                      prod 000FF3                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 182A  
                  __size_of_start_transmit 0048                 i2read_ZIGBEE_short@address 0027  
                              i2_Xor_check 1558                              _INT1_CallBack 1806  
                          __end_of_ATCheck FF81                read_ZIGBEE_long@address_low 002D  
                                     l1000 11D4                                       l1001 11F0  
                                     l1005 09DA                                       l1040 19F4  
                    ?_write_TX_normal_FIFO 0025                                       l1051 18E2  
                                     l1019 13E2                                       l1052 18DE  
                                     l1046 19CA                                       l1063 1546  
                                     l1064 1524                                       l1065 153C  
                                     l1058 1934                                       l1085 13AA  
                                     l1086 1390                                       l1280 0E2E  
                                     l1290 1164                                       l1283 0E62  
                                     l1284 0E70                                       l1276 0DFE  
                                     l1292 117A                                       l1460 0EB2  
                                     l1285 0E80                                       l1277 0E12  
                                     l1293 1172                                       l1470 10E4  
                                     l1279 0E3A                                       l1463 0EFE  
                                     l1296 1192                                       l1464 0F10  
                                     l1297 119C                                       l1289 1158  
                                     l1473 1120                                       l1298 11AA  
                                     l1474 1130                                       l1459 0EC2  
                                     l1469 10F4                                       l5070 09D0  
                                     l5090 0A34                                       l5420 039A  
                                     l4630 152C                                       l5414 02FA  
                                     l5426 0482                                       l4946 161C  
                                     _DATA 0020                                       STR_1 FF81  
                                     STR_2 FF94                                       STR_3 FFA7  
                                     STR_4 FFDC                                       STR_5 FFED  
                                     STR_6 FFBA                                       STR_7 FFCB  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _IMEI FF15  
                                     u3040 030C                                       _LATD 000F8C  
                                     _LATE 000F8D                                       _LATF 000F8E  
                                     _LATG 000F8F                                       u2420 1542  
                                     u3060 03AC                                       u2520 07A4  
                                     u2630 0A0A                                       u2650 0AC4  
                                     u2820 117E                                       u2760 0E40  
                                     u2860 0EC8                                       u2890 10FA  
                                     _Addr 00A3                                       _Call 01BA  
                                     _Nilp 0004                                       _Tick 0009  
                        i1___lldiv@divisor 00D8                                       _main 0000  
                    write_TX_normal_FIFO@i 0283                      write_TX_normal_FIFO@n 0282  
                                     _send 0049                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 004B  
                        i1___lldiv@counter 00E0                                       prodh 000FF4  
                                     prodl 000FF3                                       start 01B8  
                          __end_of_SMSread FEF1                              __CFG_IESO$OFF 000000  
                            __CFG_FOSC$HS1 000000                            __end_of_LcdData 18B2  
                          __end_of_Delayms 1558                            __end_of_LcdInit 132A  
                       _set_reception_mode 11B4                              __CFG_MCLRE$ON 000000  
                 ?_set_frame_format_filter 0025                               ___param_bank 000000  
                               _LcdDisplay 14D8                          i2Xor_check@length 0027  
                          _set_not_encrypt 195E                      __end_of_set_RSSI_mode 14D8  
                          __end_of_InitSPI 17E2                            set_not_ACK@temp 01FD  
                   set_RSSI_mode@RSSI_mode 01FD                  __size_of_enable_interrupt 000E  
                  __end_of_TMR0_Initialize 16FE                           __end_of_INT0_ISR 1A9C  
                         __end_of_INT1_ISR 1A94             ??_TMR0_DefaultInterruptHandler 00C8  
                            __CFG_RETEN$ON 000000             __size_of_OSCILLATOR_Initialize 0014  
                      ?_set_reception_mode 0025                     ?_init_ZIGBEE_nonbeacon 0025  
            __end_of_OSCILLATOR_Initialize 19C8                                ?i2_SPI_Read 0025  
                                    ?_main 0025                            __end_of___awdiv 0E8A  
                                    _CHECK 00BE                                      _EEADR 000F62  
                          __end_of___awmod 11B4                            __end_of___lldiv 0F22  
                      _data_TX_normal_FIFO 0060                                      _T0CON 000FD5  
                          ___awdiv@divisor 01FB                            __end_of___llmod 1142  
                           __CFG_DEBUG$OFF 000000                                      _ERROR 0011  
                                    i1l535 0094                                      i1l537 0160  
                                    i1l538 015C                                      i2l527 0B60  
                                    i2l528 0B5C                                      i2l900 0548  
                                    i2l902 05B8                                      i2l903 0618  
                          ___awdiv@counter 0279                                      _VALUE 0006  
                      i2SPI_Write@response 0025                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _SPBRG 000FAF  
                                    _PORTE 000F84                                      _RSSI2 001D  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0025                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _TRISF 000F97                                      _TRISG 000F98  
                                    _TXREG 000FAD                             _WaitForReceive 0003  
                                    _TX_ID 000A          __size_of_TMR0_SetInterruptHandler 000E  
                               _Emeregency 015C                              __CFG_WRT0$OFF 000000  
                                    _Array 0186                              __CFG_WRT1$OFF 000000  
                                    _Frame 00AA                              __CFG_WRT2$OFF 000000  
                      ___lmul@multiplicand 00CC                  ?_TMR0_SetInterruptHandler 01F9  
                            __CFG_WRT3$OFF 000000                              __CFG_WRT4$OFF 000000  
                           __CFG_EBRT0$OFF 000000                              __CFG_WRT5$OFF 000000  
                           __CFG_EBRT1$OFF 000000                              __CFG_WRT6$OFF 000000  
                           __CFG_EBRT2$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBRT3$OFF 000000                             __CFG_EBRT4$OFF 000000  
                           __CFG_FCMEN$OFF 000000                                      _Litre 0072  
                           __CFG_EBRT5$OFF 000000                             __CFG_EBRT6$OFF 000000  
                           __CFG_EBRT7$OFF 000000                           __end_of_TMR0_ISR 1776  
                                    _Trick 0008                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                                      _Store 0013  
                            __CFG_WRTD$OFF 000000                             ?_INT1_CallBack 0025  
                           Read_b_eep@badd 01F9                             __CFG_EBRTB$OFF 000000  
                       i1___lldiv@dividend 00D4                                      _ckeck 0095  
                                    _delay 18D2                     Write_b_eep@GIE_BIT_VAL 00CB  
           ??_INT1_DefaultInterruptHandler 00C8                                      _value 0007  
                                    _pulse 0076                           __end_of_SPI_Read 19DA  
                 _INT1_SetInterruptHandler 1A4C                                      pclath 000FFA  
                     ??_set_reception_mode 01FD                                      tablat 000FF5  
                         __end_of_RF_reset 174E                                      status 000FD8  
                                    wtemp6 004C                    __end_of_LIGHT_ALTERNATE FEC2  
                       __size_of_SPI_Write 0012                         __size_ofi1___lldiv 0084  
           ?_INTERRUPT_InterruptManagerLow 0025                           __end_of_Delay_ms 1946  
                         __end_of_Get_Baud FF15                   __end_of_read_ZIGBEE_long 137C  
                             __end_of_IMEI FF1C                            __initialization 0D32  
                             __end_of_main 0510                           read_RX_FIFO@temp 0033  
                               _Read_b_eep 19FE                         i1___lldiv@quotient 00DC  
             __end_ofi2_write_ZIGBEE_short 190E                           __end_of_Message1 FEE7  
                         __end_of_Message2 FEA8                           __end_of_Message3 FF72  
                         __end_of_Message6 FF52                             _ADDRESS_long_1 0100  
                           _ADDRESS_long_2 01B2                                     ??_main 0284  
                            ?_read_RX_FIFO 0025                              __activetblptr 000003  
                           __CFG_PLLCFG$ON 000000                     ??_write_TX_normal_FIFO 027D  
                                   ?_delay 01F9                               ?i2_SPI_Write 0025  
                         ___llmod@dividend 0279                                 _Send_Frame 00B7  
                                   _EEDATA 000F61                                     _EECON2 000F7E  
                                   _ANCON0 000F25                                     _ANCON1 000F24  
                                   _ANCON2 000F23                           ___awdiv@dividend 01F9  
                                   i1l1120 1292                                     i1l1121 12A6  
                                   _LENGTH 0021                                     i1l1097 15FE  
                                   i1l1460 106E                                     i1l1463 10AE  
                                   i1l1464 10BC   __end_of_nonbeacon_PAN_coordinator_device 15D6  
__size_of_nonbeacon_PAN_coordinator_device 003E          ?_nonbeacon_PAN_coordinator_device 0025  
       ??_nonbeacon_PAN_coordinator_device 01FD           _nonbeacon_PAN_coordinator_device 1598  
                                   i1l1459 107A                                     i2l1040 1A16  
                                   i2l1046 1A22                            __CFG_BBSIZ$BB2K 000000  
                                   i2l1085 157E                                     i2l1086 156A  
                           __CFG_WDTEN$OFF 000000                                     _ID_SET 000C  
                                ??_LcdData 01FF                           SPI_Write@command 01FA  
                                ??_Delayms 01FB                                     _OSCCON 000FD3  
                                ??_LcdInit 0200                    __end_of_set_not_encrypt 1974  
                      __size_ofi2_SPI_Read 0010                                 _Sim_Status FF04  
                             ?_set_channel 0025                           set_CCA_mode@temp 01FE  
                                ??_InitSPI 01FD                                     _TX_CRC 009B  
                              _Emeregency2 0146                                _Emeregency3 0119  
                                   _LcdCmd 18B2                           __end_of_echo_off FF22  
                                   _Chksum 00B0                                     _Count1 0023  
                                   _Count2 0022                                     _V_Temp 00AC  
                                   _Rv_CRC 009D                             __CFG_XINST$OFF 000000  
                                   _Number 0199                    write_ZIGBEE_long@data_r 01FD  
                              ?_LcdDisplay 0279                               ?_set_not_ACK 0025  
                 set_short_address@address 01FD                                     ___lmul 1280  
                                ??___awdiv 01FD                             __CFG_STVREN$ON 000000  
                                ??___awmod 01FD                                     _data_r 001F  
                                ??___lldiv 01F9                                  ??___llmod 01F9  
                         ?_TMR0_Initialize 0025                                     delay@l 01FB  
                                   clear_0 0DB0                                     clear_1 0DBC  
                                   clear_2 0DC8                                     clear_3 0DD4  
                         ___awdiv@quotient 027B                                     _second 0001  
                          ___awmod@divisor 01FB                          _set_WAKE_from_pin 190E  
                          ___awmod@counter 01FD                             ??_read_RX_FIFO 002E  
                          ??_INT0_CallBack 0025                           __end_of_pin_wake 19EC  
                      Xor_check@data_value 01F9                         ?_set_WAKE_from_pin 0025  
                        __end_of_SPI_Write 19FE                          __end_ofi1___lldiv 10CE  
                             __pdataCOMRAM 0049                         Xor_check@xor_value 0279  
                          ??_INT1_CallBack 00C8               __end_of_LIGHT_DEBBUGE_STATUS FF04  
                         ??_lcd_off_cursor 0200                               __mediumconst FE9A  
                             _data_RX_FIFO 01C0                             _start_transmit 13C6  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                      __end_of_TMR0_CallBack 1806  
 TMR0_SetInterruptHandler@InterruptHandler 01F9   INT0_SetInterruptHandler@InterruptHandler 01F9  
 INT1_SetInterruptHandler@InterruptHandler 01F9                        ??_set_WAKE_from_pin 01FD  
                        _init_ZIGBEE_basic 0F22              __size_of_INTERRUPT_Initialize 0008  
         ??_INTERRUPT_InterruptManagerHigh 0035            ?_INTERRUPT_InterruptManagerHigh 0025  
                        _SYSTEM_Initialize 198A                         ?_init_ZIGBEE_basic 0025  
                               __accesstop 0060                    __end_of__initialization 0DDA  
                            ?_set_CCA_mode 0025                                  ?_INT0_ISR 0025  
                                ?_INT1_ISR 0025                         __size_of_Xor_check 004A  
                               _Store_DATA 0086               __size_ofi2_read_ZIGBEE_short 0022  
                       ?_SYSTEM_Initialize 0025                   __end_of_set_long_address 1646  
                            ___rparam_used 000001                       __end_of_LIGHT_ALL_ON FEDC  
                      ??_init_ZIGBEE_basic 0200                             __pcstackCOMRAM 0025  
                             __pidataBANK0 1A68                               __pidataBANK1 0C72  
                             __pidataBANK2 1946       nonbeacon_PAN_coordinator_device@temp 01FD  
                      ??_SYSTEM_Initialize 01FC                                  ?_TMR0_ISR 0025  
                            __end_of_delay 18F0                  __end_of_set_WAKE_from_pin 192A  
                              ?_Read_b_eep 01F9                           _enable_interrupt 1A30  
                                ?_SPI_Read 0025                     __end_of_start_transmit 140E  
              __size_of_EXT_INT_Initialize 0032                                  ?_RF_reset 0025  
                    TMR0_ISR@CountCallBack 00A1                                  ?_Delay_ms 01F9  
                       __size_of_lcd_clear 0008                               Xor_check@xor 027B  
                __end_of_init_ZIGBEE_basic 0FB8                __size_of_write_ZIGBEE_short 0024  
                             ?i2_Xor_check 0025              write_ZIGBEE_long@address_high 0279  
                 read_ZIGBEE_short@address 01FC                                    ??_delay 01FB  
                      __size_of_LcdDisplay 0040                  __end_of_SYSTEM_Initialize 19A0  
                          _Manufacturer_Id FF27                            _ADDRESS_short_1 00E3  
                          _ADDRESS_short_2 00EA                                 __pbssBANK0 0060  
                               __pbssBANK1 01C0                                 __pbssBANK2 0200  
                           ??_set_CCA_mode 01FD                       i2_write_ZIGBEE_short 18F0  
                    _INT0_InterruptHandler 008D                                 ??_INT0_ISR 0025  
                               ??_INT1_ISR 00C8                         _Enable_Result_Code FEF1  
                         ?_set_not_encrypt 0025                                    ?_LcdCmd 0025  
                            ?_set_TX_power 0025                    ??_init_ZIGBEE_nonbeacon 0200  
         __end_of_TMR0_SetInterruptHandler 1A4C                                    ?___lmul 00C8  
                               ??_TMR0_ISR 00C8                i2write_ZIGBEE_short@address 0028  
                       __size_of_pin_reset 0022                                 _enable_PLL 19A0  
                           ___lmul@product 00D0                               ??i2_SPI_Read 0025  
                               ??_SPI_Read 01F9                              ??_Write_b_eep 00CB  
                                  _DATA_RX 00C0                                    _DATA_TX 00C5  
                        __end_of_Xor_check 13C6                            ?_start_transmit 0025  
                               ??_RF_reset 01FD                 ??_INT1_SetInterruptHandler 01FC  
                                  _ATCheck FF7E                                    _ID_READ 00BC  
                                  _IDByte1 00AF                                    _IDByte2 00AE  
                                  _IDByte3 00AD           __size_of_set_frame_format_filter 0092  
                                  _REFOCON 000F2A                                 ??_Delay_ms 01FB  
                                  _OSCCON2 000F64                                    _F_ERROR 0010  
                                  _OSCTUNE 000F9B                                    _F_IdSet 0016  
                                  _SSP1BUF 000FC9                set_frame_format_filter@temp 01FE  
                                  _F_SetID 000D                                    _F_Input 0019  
               i2write_ZIGBEE_short@data_r 0027                                    _IdByte1 00A7  
                                  _IdByte2 00A6                                    _IdByte3 00A5  
                                  _IdByte4 0082                                    _SMSread FEE7  
                                  _T_ERROR 0097                     set_reception_mode@temp 01FE  
                      __size_of_Read_b_eep 0012                       __size_ofi2_SPI_Write 0010  
                    ?i2_write_ZIGBEE_short 0027                                    _LcdData 1892  
                                  _Delayms 1518                                    _LcdInit 12D8  
        __size_of_INT0_SetInterruptHandler 000E                                    _T_Input 001A  
                     __end_of_read_RX_FIFO 0792                  ?_INT0_SetInterruptHandler 01F9  
                                  _InitSPI 17BE                                    _V_Temp1 00A4  
                       __end_ofi2_SPI_Read 1A30                          SPI_Write@response 01F9  
                          __size_of_LcdCmd 0020                             ??_set_TX_power 027B  
                          Xor_check@length 01FB                            __CFG_PWRTEN$OFF 000000  
                                ?_pin_wake 0025                                    _Send_ID 0093  
                                  __Hparam 0000                              _HEADER_LENGHT FF2B  
                        ?_read_ZIGBEE_long 0027                                    __Lparam 0000  
                     __size_of_set_channel 01C2                   write_ZIGBEE_long@address 01FB  
                     _LIGHT_DEBBUGE_STATUS FEFB                          __end_of_lcd_clear 1A84  
                       ??_read_ZIGBEE_long 0029                    read_ZIGBEE_long@address 0027  
                                  ___awdiv 0DE4                            __size_of___lmul 0058  
                                  ___awmod 1142                 __size_of_set_WAKE_from_pin 001C  
                                  ___lldiv 0E8A                                    ___llmod 10CE  
                                  _address 0005                       __size_of_set_not_ACK 0016  
                        set_long_address@i 01FF                                    __pcinit 0D32  
                                  __ramtop 1000                                    __ptext0 0000  
                                  __ptext1 0954                                    __ptext2 13C6  
                                  __ptext3 16FE                                    __ptext4 19C8  
                                  __ptext5 195E                                    __ptext6 1974  
                                  __ptext7 137C                                    __ptext8 1678  
                                  __ptext9 11B4                                  _T0CONbits 000FD5  
                                  _divisor 01F1                      _OSCILLATOR_Initialize 19B4  
                  __end_of_Manufacturer_Id FF2B                           ___awmod@dividend 01F9  
                 ??_PIN_MANAGER_Initialize 01F9                          __CFG_MSSPMSK$MSK7 000000  
                   _address_TX_normal_FIFO 009F                 __size_of_init_ZIGBEE_basic 0096  
                      __end_of_Write_b_eep 1612                                 _set_PAN_ID 16A6  
               __size_of_SYSTEM_Initialize 0016                              _Delet_All_SMS FF72  
                           __pintcode_body 0AD2                     __size_of_set_RSSI_mode 0042  
                     end_of_initialization 0DDA                          __end_of_pin_reset 1870  
              __size_of_set_reception_mode 0070                                  Delay_ms@y 01FB  
                          _address_RX_FIFO 00E5                                    int_func 0AD2  
                set_channel@channel_number 027B                          _write_ZIGBEE_long 1224  
                                _F_ID_SEND 00B8                            ___lldiv@divisor 027D  
                               ??_pin_wake 01FD                            ___lldiv@counter 01FD  
                                _F_ID_Send 00BB                         ?_write_ZIGBEE_long 01FB  
                             ??_LcdDisplay 0200                                  _RCSTAbits 000FAB  
                                  postdec1 000FE5                        __end_of_DATA_LENGHT FF2D  
                                  postinc0 000FEE                          _set_short_address 1678  
                        set_TX_power@power 027C                                ?_enable_PLL 0025  
                       ?_set_short_address 01FD                        ??_write_ZIGBEE_long 01FE  
                     __end_of_set_CCA_mode 0C72                   _TMR0_SetInterruptHandler 1A3E  
                                _PORTAbits 000F80                      _INT1_InterruptHandler 0090  
                                _PORTCbits 000F82                                  _PORTEbits 000F84  
                                _PORTFbits 000F85                        i2_read_ZIGBEE_short 1870  
                      ??_set_short_address 01FF                                  _TRISCbits 000F94  
                     __end_of_Set_Responce FF27                               _LIGHT_ALL_ON FECF  
                                _SPI_Write 19EC                                  i1___lldiv 104A  
                      set_not_encrypt@temp 01FD                     ??i2_write_ZIGBEE_short 0028  
                           i2Xor_check@xor 002B                         __end_of_LcdDisplay 1518  
                 __end_of_enable_interrupt 1A3E              __size_of_write_TX_normal_FIFO 017E  
                     __size_ofi2_Xor_check 0040                  __end_of_write_ZIGBEE_long 1280  
                 set_reception_mode@r_mode 01FD                       ?i2_read_ZIGBEE_short 0025  
                                _SMSsender 01E4                                  _TXSTAbits 000FAC  
                                _T_ID_Send 000B                          ?_set_long_address 01FD  
                        __size_of_INT0_ISR 0008                          __size_of_INT1_ISR 0008  
                    __end_of_LIGHT_ALL_OFF FECF                             __end_of_LcdCmd 18D2  
                __end_of_set_short_address 16A6                         i2SPI_Write@command 0026  
                       ??_set_long_address 01FF                                  _Device_ID 001B  
             __end_of_INTERRUPT_Initialize 1A8C                              _set_RSSI_mode 1496  
                             ??_Read_b_eep 01FB       __end_of_INT0_DefaultInterruptHandler 1AA4  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 1AA2  
                           __end_of___lmul 12D8                              __pidataCOMRAM 1A9C  
                        __size_of_TMR0_ISR 0028                                _Write_b_eep 15D6  
                   ?_OSCILLATOR_Initialize 0025                    _set_frame_format_filter 0FB8  
                                _Count_LED 000F                    set_long_address@address 01FD  
                        __size_of_SPI_Read 0012                      __end_of_INT0_CallBack 184E  
                                _RXcounter 00B2                        start_initialization 0D32  
                     __end_of_set_TX_power 1452                   __size_of_TMR0_Initialize 002A  
          __size_of_PIN_MANAGER_Initialize 0044                          __size_of_RF_reset 0028  
                    __end_of_INT1_CallBack 182A                                ?_set_PAN_ID 01FD  
                               ?_SPI_Write 0025                                 ?i1___lldiv 00D4  
                        __size_of_Delay_ms 001C                      __size_of_read_RX_FIFO 0282  
                                _InputRead 0017                        __size_of_enable_PLL 0014  
                       __end_of_Read_b_eep 1A10                      ??i2_read_ZIGBEE_short 0027  
                          ___llmod@divisor 027D                                _DATA_LENGHT FF2C  
                          ___llmod@counter 01F9                                   ??_LcdCmd 01FF  
                           ?_set_RSSI_mode 0025                                   ??___lmul 00D0  
          set_frame_format_filter@fff_mode 01FD                               Delay_ms@time 01F9  
                   __size_of_TMR0_CallBack 0024                           ??_start_transmit 01FD  
           __size_of_init_ZIGBEE_nonbeacon 0024                                __pdataBANK0 00E1  
                              __pdataBANK1 0100                                __pdataBANK2 0285  
            __end_of_init_ZIGBEE_nonbeacon 179A                 __end_of_EXT_INT_Initialize 1678  
                             LcdData@value 01FF              ?_INT0_DefaultInterruptHandler 0025  
                             _read_RX_FIFO 0510                 __end_of_write_ZIGBEE_short 17BE  
                     i2Xor_check@xor_value 0029                                __pbssCOMRAM 0001  
                       __end_of_Sim_Status FF0D           __end_of_INT0_SetInterruptHandler 1A68  
                            __pcstackBANK0 00C8                              __pcstackBANK1 01F9  
                            __pcstackBANK2 0264                          set_RSSI_mode@temp 01FE  
                                _Xor_check 137C                   write_ZIGBEE_short@data_r 01FB  
                                 ?_LcdData 0025                                   ?_Delayms 01F9  
               __size_of_write_ZIGBEE_long 005C                                   ?_LcdInit 0025  
             write_ZIGBEE_long@address_low 027A                    read_ZIGBEE_short@data_r 01FB  
                  __size_of_lcd_off_cursor 0008                                   ?_InitSPI 0025  
                    _TMR0_InterruptHandler 008A                     _PIN_MANAGER_Initialize 1452  
               __size_of_set_short_address 002E                          __CFG_CCP2MX$PORTC 000000  
                                __pintcode 0008                      __size_of_set_CCA_mode 00C6  
             read_ZIGBEE_long@address_high 002C                              __pmediumconst FE9A  
                        __size_of_pin_wake 0012                                   ?___awdiv 01F9  
                      __size_of_set_PAN_ID 002E                                   ?___awmod 01F9  
                                 ?___lldiv 0279                   __size_of_set_not_encrypt 0016  
                                 ?___llmod 0279                                  _lcd_clear 1A7C  
                ??_set_frame_format_filter 01FD                                __pintcodelo 0018  
                        i2SPI_Read@TempVar 0025                               _Send_Frame_2 00B6  
                __size_of_read_ZIGBEE_long 0052                                 ?_Xor_check 01F9  
                                _frequency 007E                              ??i2_SPI_Write 0025  
                              ??_SPI_Write 01F9                                ??i1___lldiv 00DC  
                   read_ZIGBEE_long@data_r 002B                             __size_of_delay 001E  
                            _TMR0_CallBack 17E2                       _INTERRUPT_Initialize 1A84  
                        ??_TMR0_Initialize 01FC                                   _INT0_ISR 1A94  
                                 _INT1_ISR 1A8C                               _set_CCA_mode 0BAC  
                           LcdDisplay@LINE 027B                              ??_set_channel 0200  
        __size_of_INT1_SetInterruptHandler 000E                  ?_INT1_SetInterruptHandler 01F9  
                                _pin_reset 184E                                   _PIE1bits 000F9D  
                                 _PAN_ID_1 00E1                                   _PAN_ID_2 00E8  
                                 Delayms@k 01FB                                   Delayms@l 01FD  
                                 _INTTRUPT 0024                                   i1u350_28 17F2  
                                 i1u351_20 1766                                   i1u257_25 160C  
                                 i1u257_26 160E                                   i1u346_28 1816  
                          ??_set_RSSI_mode 01FD                                   i1u292_20 107E  
                                _lost_data 001C                                   i2u145_40 061C  
                                 _F_BUZZER 00BA                 ??_TMR0_SetInterruptHandler 01FC  
                                 _PIR1bits 000F9E                                   i2u348_48 183A  
                                 _SEND_SMS 0171                              ??_set_not_ACK 01FD  
                             _Set_Responce FF22                                   _RCONbits 000FD0  
                                _slave_add 0012                                _LED_PATTERN 0108  
                                 _TMR0_ISR 174E                               ??_enable_PLL 0200  
                               ?_lcd_clear 0025                                   _SPI_Read 19C8  
                    __size_of_set_TX_power 0044                           __CFG_SOSCSEL$DIG 000000  
                                 _Call_Cut 0115                            Write_b_eep@badd 00C8  
                                 _RF_reset 1726                            Write_b_eep@data 00CA  
                                 _T_BUZZER 00B9             ??_INT0_DefaultInterruptHandler 0025  
                                 _Delay_ms 192A                              read_RX_FIFO@i 0034  
                                 _Get_Baud FF0D                             ?_TMR0_CallBack 0025  
               __end_of_set_reception_mode 1224                          ___lmul@multiplier 00C8  
                              _INTCON2bits 000FF1                                _INTCON3bits 000FF0  
                                copy_data0 0D46                                  copy_data1 0D66  
                                copy_data2 0D86                      ?_INTERRUPT_Initialize 0025  
                 _INT0_SetInterruptHandler 1A5A            __end_of_set_frame_format_filter 104A  
                        ?_enable_interrupt 0025                         __end_of_enable_PLL 19B4  
                         __size_of_LcdData 0020                           __size_of_Delayms 0040  
                      __end_ofi2_SPI_Write 1A20                                   _Message1 FEDC  
                                 _Message2 FE9B                                   _Message3 FF52  
                                 _Message4 0130                                   _Message5 0285  
                                 _Message6 FF2D                           __size_of_LcdInit 0052  
                       ??_enable_interrupt 01FD                          _read_ZIGBEE_short 16FE  
                               _EECON1bits 000F7F                                 ?_pin_reset 0025  
                         __size_of_InitSPI 0024                                   _RxBuffer 0200  
                                 __Hrparam 0000                         ?_read_ZIGBEE_short 0025  
                             _set_TX_power 140E                                   __Lrparam 0000  
                                 _Sent_sms 00B3                         __CFG_BOREN$SBORDIS 000000  
                      __end_of_set_channel 0954                                LcdCmd@value 01FF  
             __end_of_write_TX_normal_FIFO 0AD2                                   _Portread 0018  
                  ??_OSCILLATOR_Initialize 01F9                           __size_of___awdiv 00A6  
                         __size_of___awmod 0072                           __size_of___lldiv 0098  
                         __size_of___llmod 0074                        ??_read_ZIGBEE_short 01FB  
                              Delayms@time 01F9                               ?_Write_b_eep 00C8  
                      __end_of_set_not_ACK 198A                  __size_of_set_long_address 0034  
                        ??_set_not_encrypt 01FD            ??_INTERRUPT_InterruptManagerLow 0264  
                                 _echo_off FF1C                              ??i2_Xor_check 0028  
                             ??_set_PAN_ID 01FF                                ??_Xor_check 01FC  
                                 __ptext10 1612                                   __ptext11 0FB8  
                                 __ptext20 0792                                   __ptext12 190E  
                                 __ptext21 1726                                   __ptext13 140E  
                                 __ptext30 179A                                   __ptext22 1496  
                                 __ptext14 16A6                                   __ptext31 19EC  
                                 __ptext23 0BAC                                   __ptext15 184E  
                                 __ptext40 19B4                                   __ptext32 10CE  
                                 __ptext24 19DA                                   __ptext16 1598  
                                 __ptext41 1A84                                   __ptext33 0E8A  
                                 __ptext25 192A                                   __ptext17 1A74  
                                 __ptext50 1518                                   __ptext42 1646  
                                 __ptext34 1142                                   __ptext26 0F22  
                                 __ptext18 1A7C                                   __ptext51 17BE  
                                 __ptext43 1A4C                                   __ptext35 0DE4  
                                 __ptext27 19A0                                   __ptext19 1776  
                                 __ptext60 1A8C                                   __ptext52 18D2  
                                 __ptext44 1A5A                                   __ptext36 198A  
                                 __ptext28 1224                                   __ptext61 1806  
                                 __ptext45 19FE                                   __ptext37 16D4  
                                 __ptext29 1A30                                   __ptext70 1A20  
                                 __ptext62 1AA0                                   __ptext54 104A  
                                 __ptext46 12D8                                   __ptext38 1A3E  
                                 __ptext71 1A94                                   __ptext55 1280  
                                 __ptext47 14D8                                   __ptext39 1452  
                                 __ptext72 182A                                   __ptext64 1870  
                                 __ptext56 15D6                                   __ptext48 1892  
                                 __ptext73 1AA2                                   __ptext65 1558  
                                 __ptext57 174E                                   __ptext49 18B2  
                                 __ptext74 0000                                   __ptext66 0510  
                                 __ptext58 17E2                                   __ptext67 18F0  
                                 __ptext59 1A9E                                   __ptext68 132A  
                                 __ptext69 1A10                               _SSP1CON1bits 000FC6  
                __end_of_read_ZIGBEE_short 1726                                   _freq_low 01F5  
            __size_ofi2_write_ZIGBEE_short 001E                                   _flowrate 007A  
                           _lcd_off_cursor 1A74                              __size_of_main 0510  
                                 delay@dly 01F9       __end_of_TMR0_DefaultInterruptHandler 1AA0  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 1A9E  
                                 _pin_wake 19DA                        __CFG_RTCOSC$SOSCREF 000000  
                                 int$flags 004B                       set_CCA_mode@CCA_mode 01FD  
                       __end_of_set_PAN_ID 16D4                                ??_lcd_clear 0200  
                write_ZIGBEE_short@address 01FC                               _SSP1STATbits 000FC7  
                      __CFG_INTOSCSEL$HIGH 000000       __end_of_INT1_DefaultInterruptHandler 1AA2  
    __size_of_INT1_DefaultInterruptHandler 0002               _INT1_DefaultInterruptHandler 1AA0  
                               _RECEIVE_OK 00B5                           _read_ZIGBEE_long 132A  
                               _INTCONbits 000FF2                          set_PAN_ID@address 01FD  
                          ??_TMR0_CallBack 00C8                     ??_INTERRUPT_Initialize 01F9  
              __end_ofi2_read_ZIGBEE_short 1892                                i2_SPI_Write 1A10  
                       _EXT_INT_Initialize 1646                     __end_of_lcd_off_cursor 1A7C  
                                 intlevel1 0000                                   intlevel2 0000  
                       _write_ZIGBEE_short 179A                        __end_ofi2_Xor_check 1598  
                         ___lldiv@dividend 0279                    ?_PIN_MANAGER_Initialize 0025  
                         LcdDisplay@string 0279                        ?_EXT_INT_Initialize 0025  
                              _set_channel 0792                                ??_pin_reset 01FD  
                    __end_of_HEADER_LENGHT FF2C                     __size_of_INT0_CallBack 0024  
                         _F_WaitForReceive 00B1              ?_TMR0_DefaultInterruptHandler 0025  
                      ?_write_ZIGBEE_short 01FB                                _set_not_ACK 1974  
                   __size_of_INT1_CallBack 0024                         __CFG_WDTPS$1048576 000000  
                               i2_SPI_Read 1A20     __end_of_INTERRUPT_InterruptManagerHigh 0BAC  
  __size_of_INTERRUPT_InterruptManagerHigh 0BA4             _INTERRUPT_InterruptManagerHigh 0008  
                    _init_ZIGBEE_nonbeacon 1776                       ??_EXT_INT_Initialize 01FC  
                               _SEQ_NUMBER 00E7              ?_INT1_DefaultInterruptHandler 0025  
                         ___lldiv@quotient 01F9                            _TMR0_Initialize 16D4  
                        _LIGHT_CARD_STATUS FEA8           __end_of_INT1_SetInterruptHandler 1A5A  
                     ??_write_ZIGBEE_short 01FC                      __end_of_Delet_All_SMS FF7E  
    __end_of_INTERRUPT_InterruptManagerLow 01B8     __size_of_INTERRUPT_InterruptManagerLow 01A0  
            _INTERRUPT_InterruptManagerLow 0018                       _write_TX_normal_FIFO 0954  
                          ?_lcd_off_cursor 0025             __end_of_PIN_MANAGER_Initialize 1496  
               __size_of_read_ZIGBEE_short 0028                        __CFG_BORPWR$ZPBORMV 000000  
